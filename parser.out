Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    call

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> SELECT ptcoma
Rule 5     instruccion -> CREATETABLE
Rule 6     instruccion -> UPDATE ptcoma
Rule 7     instruccion -> DELETE ptcoma
Rule 8     instruccion -> ALTER ptcoma
Rule 9     instruccion -> DROP ptcoma
Rule 10    instruccion -> INSERT ptcoma
Rule 11    instruccion -> CREATETYPE ptcoma
Rule 12    instruccion -> CASE
Rule 13    instruccion -> CREATEDB ptcoma
Rule 14    instruccion -> SHOWDB ptcoma
Rule 15    instruccion -> SHOW ptcoma
Rule 16    instruccion -> use id ptcoma
Rule 17    instruccion -> CREATEINDEX ptcoma
Rule 18    instruccion -> CREATEINDEX WHERE ptcoma
Rule 19    instruccion -> ASIGNACION ptcoma
Rule 20    instruccion -> CONDICIONIF ptcoma
Rule 21    instruccion -> PROCEDIMIENTOS
Rule 22    instruccion -> FUNCIONES
Rule 23    instruccion -> CALLPROCEDURE ptcoma
Rule 24    RETURN -> return EXP
Rule 25    FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP
Rule 26    FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP
Rule 27    FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE
Rule 28    FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE
Rule 29    RETURNP -> returns TIPO
Rule 30    CALLPROCEDURE -> execute id para parc
Rule 31    PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP
Rule 32    PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP
Rule 33    PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE
Rule 34    PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE
Rule 35    LCONTENIDOP -> LCONTENIDOP CONTENIDOP
Rule 36    LCONTENIDOP -> CONTENIDOP
Rule 37    CONTENIDOP -> as dolarn LISTACONTENIDO dolarn
Rule 38    CONTENIDOP -> do dolarn LISTACONTENIDO dolarn
Rule 39    CONTENIDOP -> LISTACONTENIDO
Rule 40    LPARAM -> LPARAM coma inout id TIPO
Rule 41    LPARAM -> LPARAM coma id TIPO
Rule 42    LPARAM -> inout id TIPO
Rule 43    LPARAM -> id TIPO
Rule 44    LENGUAJE -> language plpgsql
Rule 45    LENGUAJE -> language plpgsql ptcoma
Rule 46    BEGINEND -> begin LISTACONTENIDO end
Rule 47    CREATEINDEX -> create index id on id para LEXP parc
Rule 48    CREATEINDEX -> create unique index id on id para LEXP parc
Rule 49    CREATEINDEX -> create index id on id using hash para LEXP parc
Rule 50    CREATEINDEX -> create index id on id para id ORDEN parc
Rule 51    CREATEINDEX -> create index id on id para id id ORDEN parc
Rule 52    CREATEINDEX -> create index id on id para id id parc
Rule 53    ORDEN -> asc
Rule 54    ORDEN -> desc
Rule 55    ORDEN -> nulls first
Rule 56    ORDEN -> nulls last
Rule 57    ORDEN -> asc nulls first
Rule 58    ORDEN -> desc nulls last
Rule 59    ORDEN -> desc nulls first
Rule 60    ORDEN -> asc nulls last
Rule 61    LDEC -> LDEC DECLARACIONES
Rule 62    LDEC -> DECLARACIONES
Rule 63    DECLARACIONES -> id TIPO not null ASIG ptcoma
Rule 64    DECLARACIONES -> id TIPO ASIG ptcoma
Rule 65    DECLARACIONES -> id constant TIPO not null ASIG ptcoma
Rule 66    DECLARACIONES -> id constant TIPO ASIG ptcoma
Rule 67    ASIG -> default EXP
Rule 68    ASIG -> dospuntos igual EXP
Rule 69    ASIG -> igual EXP
Rule 70    ASIG -> <empty>
Rule 71    ASIGNACION -> id dospuntos igual EXP
Rule 72    ASIGNACION -> id igual EXP
Rule 73    CONDICIONIF -> if EXP then LISTACONTENIDO ELSEF end if
Rule 74    CONDICIONIF -> if EXP then LISTACONTENIDO LELIF end if
Rule 75    CONDICIONIF -> if EXP then LISTACONTENIDO end if
Rule 76    CONDICIONIF -> if EXP then LISTACONTENIDO LELIF ELSEF end if
Rule 77    LELIF -> LELIF elsif EXP then LISTACONTENIDO
Rule 78    LELIF -> elsif EXP then LISTACONTENIDO
Rule 79    ELSEF -> else LISTACONTENIDO
Rule 80    CASE -> case LEXP LISTAWHEN ELSEF end case
Rule 81    CASE -> case LEXP LISTAWHEN end case
Rule 82    CASE -> case LISTAWHEN ELSE end
Rule 83    CASE -> case LISTAWHEN end
Rule 84    LISTACONTENIDO -> LISTACONTENIDO CONTENIDO
Rule 85    LISTACONTENIDO -> CONTENIDO
Rule 86    CONTENIDO -> ASIGNACION ptcoma
Rule 87    CONTENIDO -> CONDICIONIF ptcoma
Rule 88    CONTENIDO -> RAISE ptcoma
Rule 89    CONTENIDO -> BEGINEND ptcoma
Rule 90    CONTENIDO -> CALLPROCEDURE ptcoma
Rule 91    CONTENIDO -> declare LDEC
Rule 92    CONTENIDO -> RETURN ptcoma
Rule 93    CONTENIDO -> INSERT ptcoma
Rule 94    CONTENIDO -> SELECT ptcoma
Rule 95    CONTENIDO -> UPDATE ptcoma
Rule 96    CONTENIDO -> DELETE ptcoma
Rule 97    RAISE -> raise LEVEL FORMAT
Rule 98    RAISE -> raise LEVEL EXP
Rule 99    RAISE -> raise LEVEL
Rule 100   RAISE -> raise
Rule 101   RAISE -> raise LEVEL cadena coma id
Rule 102   LEVEL -> info
Rule 103   LEVEL -> debug
Rule 104   LEVEL -> log
Rule 105   LEVEL -> notice
Rule 106   LEVEL -> warning
Rule 107   LEVEL -> exception
Rule 108   FORMAT -> format para EXP coma LEXP parc
Rule 109   LISTAWHEN -> LISTAWHEN WHEN
Rule 110   LISTAWHEN -> WHEN
Rule 111   WHEN -> when LEXP then LISTACONTENIDO
Rule 112   WHEN -> when LEXP then LEXP
Rule 113   ELSE -> else LEXP
Rule 114   INSERT -> insert into id values para LEXP parc
Rule 115   INSERT -> insert into id para LEXP parc values para LEXP parc
Rule 116   DROP -> drop all para parc
Rule 117   DROP -> drop table id
Rule 118   DROP -> drop index id
Rule 119   DROP -> drop databases if exist id
Rule 120   DROP -> drop databases id
Rule 121   ALTER -> alter databases id rename to id
Rule 122   ALTER -> alter databases id owner to id
Rule 123   ALTER -> alter table id LOP
Rule 124   LOP -> LOP coma OP
Rule 125   LOP -> OP
Rule 126   OP -> add column id TIPO
Rule 127   OP -> add check para CONDCHECK parc
Rule 128   OP -> add constraint id check para CONDCHECK parc
Rule 129   OP -> add constraint id unique para LEXP parc
Rule 130   OP -> add unique para LEXP parc
Rule 131   OP -> add foreign key para LEXP parc references id para LEXP parc
Rule 132   OP -> add constraint id foreign key para LEXP parc references id para LEXP parc
Rule 133   OP -> alter column id set not null
Rule 134   OP -> alter column id set null
Rule 135   OP -> drop constraint id
Rule 136   OP -> drop column LEXP
Rule 137   OP -> drop check id
Rule 138   OP -> rename column id to id
Rule 139   OP -> alter column id type TIPO
Rule 140   SHOWDB -> show dbs
Rule 141   SHOW -> show tables para id parc
Rule 142   SHOW -> show collection para parc
Rule 143   CREATEDB -> create RD if not exist id
Rule 144   CREATEDB -> create RD if not exist id OPCCDB
Rule 145   CREATEDB -> create RD id
Rule 146   CREATEDB -> create RD id OPCCDB
Rule 147   OPCCDB -> PROPIETARIO
Rule 148   OPCCDB -> MODO
Rule 149   OPCCDB -> PROPIETARIO MODO
Rule 150   RD -> or replace databases
Rule 151   RD -> databases
Rule 152   PROPIETARIO -> owner igual id
Rule 153   PROPIETARIO -> owner igual cadena
Rule 154   PROPIETARIO -> owner igual cadenaString
Rule 155   PROPIETARIO -> owner id
Rule 156   PROPIETARIO -> owner cadena
Rule 157   PROPIETARIO -> owner cadenaString
Rule 158   MODO -> mode igual int
Rule 159   MODO -> mode int
Rule 160   CREATETABLE -> create table id para LDEF parc ptcoma
Rule 161   CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma
Rule 162   LDEF -> LDEF coma COLDEF
Rule 163   LDEF -> COLDEF
Rule 164   COLDEF -> OPCONST
Rule 165   COLDEF -> constraint id OPCONST
Rule 166   COLDEF -> id TIPO
Rule 167   COLDEF -> id TIPO LOPCOLUMN
Rule 168   LOPCOLUMN -> LOPCOLUMN OPCOLUMN
Rule 169   LOPCOLUMN -> OPCOLUMN
Rule 170   OPCOLUMN -> constraint id unique
Rule 171   OPCOLUMN -> unique
Rule 172   OPCOLUMN -> constraint id check para CONDCHECK parc
Rule 173   OPCOLUMN -> check para CONDCHECK parc
Rule 174   OPCOLUMN -> default EXP
Rule 175   OPCOLUMN -> not null
Rule 176   OPCOLUMN -> null
Rule 177   OPCOLUMN -> primary key
Rule 178   OPCOLUMN -> references id
Rule 179   OPCONST -> primary key para LEXP parc
Rule 180   OPCONST -> foreign key para LEXP parc references id para LEXP parc
Rule 181   OPCONST -> unique para LEXP parc
Rule 182   OPCONST -> check para CONDCHECK parc
Rule 183   CONDCHECK -> EXP mayor EXP
Rule 184   CONDCHECK -> EXP menor EXP
Rule 185   CONDCHECK -> EXP mayor_igual EXP
Rule 186   CONDCHECK -> EXP menor_igual EXP
Rule 187   CONDCHECK -> EXP igual EXP
Rule 188   CONDCHECK -> EXP diferente1 EXP
Rule 189   CONDCHECK -> EXP diferente2 EXP
Rule 190   HERENCIA -> inherits para id parc
Rule 191   CREATETYPE -> create type id as enum para LEXP parc
Rule 192   SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
Rule 193   SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
Rule 194   SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
Rule 195   LIMIT -> limit int
Rule 196   LIMIT -> limit all
Rule 197   LIMIT -> offset int
Rule 198   LIMIT -> limit int offset int
Rule 199   LIMIT -> offset int limit int
Rule 200   LIMIT -> limit all offset int
Rule 201   LIMIT -> offset int limit all
Rule 202   LIMIT -> <empty>
Rule 203   WHERE -> where EXP
Rule 204   WHERE -> where EXIST
Rule 205   WHERE -> <empty>
Rule 206   COMBINING -> union EXP
Rule 207   COMBINING -> union all EXP
Rule 208   COMBINING -> intersect EXP
Rule 209   COMBINING -> except EXP
Rule 210   COMBINING -> <empty>
Rule 211   GROUP -> group by LEXP
Rule 212   GROUP -> <empty>
Rule 213   HAVING -> having EXP
Rule 214   HAVING -> <empty>
Rule 215   ORDER -> order by LEXP ORD
Rule 216   ORDER -> order by LEXP
Rule 217   ORDER -> <empty>
Rule 218   ORD -> asc
Rule 219   ORD -> desc
Rule 220   UPDATE -> update id set LCAMPOS WHERE
Rule 221   LCAMPOS -> LCAMPOS coma id igual EXP
Rule 222   LCAMPOS -> id igual EXP
Rule 223   DELETE -> delete r_from id WHERE
Rule 224   EXIST -> exist para SELECT parc
Rule 225   EXIST -> not exist para SELECT parc
Rule 226   LEXP -> LEXP coma EXP
Rule 227   LEXP -> EXP
Rule 228   TIPO -> interval cadena
Rule 229   TIPO -> decimal para int coma int parc
Rule 230   TIPO -> decimal para int parc
Rule 231   TIPO -> decimal
Rule 232   TIPO -> numeric para int coma int parc
Rule 233   TIPO -> numeric para int parc
Rule 234   TIPO -> numeric
Rule 235   TIPO -> varchar para int parc
Rule 236   TIPO -> timestamp para int parc
Rule 237   TIPO -> character para int parc
Rule 238   TIPO -> interval para int parc
Rule 239   TIPO -> char para int parc
Rule 240   TIPO -> time para int parc
Rule 241   TIPO -> character varying para int parc
Rule 242   TIPO -> id modulo rowtype
Rule 243   TIPO -> idPunto modulo type
Rule 244   TIPO -> timestamp para int parc without time zone
Rule 245   TIPO -> timestamp para int parc with time zone
Rule 246   TIPO -> time para int parc without time zone
Rule 247   TIPO -> time para int parc with time zone
Rule 248   TIPO -> interval para int parc cadena
Rule 249   TIPO -> smallint
Rule 250   TIPO -> integer
Rule 251   TIPO -> r_int
Rule 252   TIPO -> bigint
Rule 253   TIPO -> real
Rule 254   TIPO -> double precision
Rule 255   TIPO -> money
Rule 256   TIPO -> text
Rule 257   TIPO -> timestamp
Rule 258   TIPO -> date
Rule 259   TIPO -> time
Rule 260   TIPO -> interval
Rule 261   TIPO -> boolean
Rule 262   TIPO -> record
Rule 263   TIPO -> varchar
Rule 264   TIPO -> timestamp without time zone
Rule 265   TIPO -> timestamp with time zone
Rule 266   TIPO -> time without time zone
Rule 267   TIPO -> time with time zone
Rule 268   TIPO -> id
Rule 269   FIELDS -> year
Rule 270   FIELDS -> month
Rule 271   FIELDS -> day
Rule 272   FIELDS -> hour
Rule 273   FIELDS -> minute
Rule 274   FIELDS -> second
Rule 275   EXP -> EXP mas EXP
Rule 276   EXP -> EXP menos EXP
Rule 277   EXP -> EXP multiplicacion EXP
Rule 278   EXP -> EXP division EXP
Rule 279   EXP -> EXP modulo EXP
Rule 280   EXP -> EXP elevado EXP
Rule 281   EXP -> EXP and EXP
Rule 282   EXP -> EXP or EXP
Rule 283   EXP -> EXP mayor EXP
Rule 284   EXP -> EXP menor EXP
Rule 285   EXP -> EXP mayor_igual EXP
Rule 286   EXP -> EXP menor_igual EXP
Rule 287   EXP -> EXP igual EXP
Rule 288   EXP -> EXP diferente1 EXP
Rule 289   EXP -> EXP diferente2 EXP
Rule 290   EXP -> EXP between EXP
Rule 291   EXP -> EXP is not null
Rule 292   EXP -> EXP is null
Rule 293   EXP -> EXP isnull
Rule 294   EXP -> EXP notnull
Rule 295   EXP -> EXP is true
Rule 296   EXP -> EXP is not true
Rule 297   EXP -> EXP is false
Rule 298   EXP -> EXP is not false
Rule 299   EXP -> EXP is unknown
Rule 300   EXP -> EXP is not unknown
Rule 301   EXP -> EXP as cadenaString
Rule 302   EXP -> EXP cadenaString
Rule 303   EXP -> EXP as id
Rule 304   EXP -> EXP id
Rule 305   EXP -> EXP as cadena
Rule 306   EXP -> EXP cadena
Rule 307   EXP -> mas EXP
Rule 308   EXP -> menos EXP
Rule 309   EXP -> not EXP
Rule 310   EXP -> EXP in para EXP parc
Rule 311   EXP -> EXP not in para EXP parc
Rule 312   EXP -> EXP not between EXP
Rule 313   EXP -> EXP between symetric EXP
Rule 314   EXP -> EXP not between symetric EXP
Rule 315   EXP -> EXP is distinct r_from EXP
Rule 316   EXP -> EXP is not distinct r_from EXP
Rule 317   EXP -> EXP like cadena
Rule 318   EXP -> EXP not like cadena
Rule 319   EXP -> SELECT
Rule 320   EXP -> para EXP parc
Rule 321   EXP -> CASE
Rule 322   EXP -> id para LEXP parc
Rule 323   EXP -> id para parc
Rule 324   EXP -> any para LEXP parc
Rule 325   EXP -> all para LEXP parc
Rule 326   EXP -> some para LEXP parc
Rule 327   EXP -> extract para FIELDS r_from timestamp cadena parc
Rule 328   EXP -> int
Rule 329   EXP -> decimales
Rule 330   EXP -> cadena
Rule 331   EXP -> cadenaString
Rule 332   EXP -> true
Rule 333   EXP -> false
Rule 334   EXP -> id
Rule 335   EXP -> multiplicacion
Rule 336   EXP -> null
Rule 337   EXP -> current_time
Rule 338   EXP -> current_date
Rule 339   EXP -> timestamp cadena
Rule 340   EXP -> interval cadena
Rule 341   EXP -> cadena as TIPO
Rule 342   EXP -> default
Rule 343   EXP -> idPunto

Terminals, with rules where they appear

add                  : 126 127 128 129 130 131 132
all                  : 116 196 200 201 207 325
alter                : 121 122 123 133 134 139
and                  : 281
any                  : 324
as                   : 37 191 301 303 305 341
asc                  : 53 57 60 218
begin                : 46
between              : 290 312 313 314
bigint               : 252
boolean              : 261
by                   : 211 215 216
cadena               : 101 153 156 228 248 305 306 317 318 327 330 339 340 341
cadenaString         : 154 157 301 302 331
call                 : 
case                 : 80 80 81 81 82 83
char                 : 239
character            : 237 241
check                : 127 128 137 172 173 182
collection           : 142
column               : 126 133 134 136 138 139
coma                 : 40 41 101 108 124 162 221 226 229 232
constant             : 65 66
constraint           : 128 129 132 135 165 170 172
create               : 25 26 27 28 31 32 33 34 47 48 49 50 51 52 143 144 145 146 160 161 191
current_date         : 338
current_time         : 337
databases            : 119 120 121 122 150 151
date                 : 258
day                  : 271
dbs                  : 140
debug                : 103
decimal              : 229 230 231
decimales            : 329
declare              : 91
default              : 67 174 342
delete               : 223
desc                 : 54 58 59 219
diferente1           : 188 288
diferente2           : 189 289
distinct             : 192 315 316
division             : 278
do                   : 38
dolarn               : 37 37 38 38
dospuntos            : 68 71
double               : 254
drop                 : 116 117 118 119 120 135 136 137
elevado              : 280
else                 : 79 113
elsif                : 77 78
end                  : 46 73 74 75 76 80 81 82 83
enum                 : 191
error                : 
except               : 209
exception            : 107
execute              : 30
exist                : 119 143 144 224 225
extract              : 327
false                : 297 298 333
first                : 55 57 59
foreign              : 131 132 180
format               : 108
function             : 25 26 27 28
group                : 211
hash                 : 49
having               : 213
hour                 : 272
id                   : 16 25 26 27 28 30 31 32 33 34 40 41 42 43 47 47 48 48 49 49 50 50 50 51 51 51 51 52 52 52 52 63 64 65 66 71 72 101 114 115 117 118 119 120 121 121 122 122 123 126 128 129 131 132 132 133 134 135 137 138 138 139 141 143 144 145 146 152 155 160 161 165 166 167 170 172 178 180 190 191 220 221 222 223 242 268 303 304 322 323 334
idPunto              : 243 343
if                   : 73 73 74 74 75 75 76 76 119 143 144
igual                : 68 69 71 72 152 153 154 158 187 221 222 287
in                   : 310 311
index                : 47 48 49 50 51 52 118
info                 : 102
inherits             : 190
inout                : 40 42
insert               : 114 115
int                  : 158 159 195 197 198 198 199 199 200 201 229 229 230 232 232 233 235 236 237 238 239 240 241 244 245 246 247 248 328
integer              : 250
intersect            : 208
interval             : 228 238 248 260 340
into                 : 114 115
is                   : 291 292 295 296 297 298 299 300 315 316
isnull               : 293
key                  : 131 132 177 179 180
language             : 44 45
last                 : 56 58 60
like                 : 317 318
limit                : 195 196 198 199 200 201
log                  : 104
mas                  : 275 307
mayor                : 183 283
mayor_igual          : 185 285
menor                : 184 284
menor_igual          : 186 286
menos                : 276 308
minute               : 273
mode                 : 158 159
modulo               : 242 243 279
money                : 255
month                : 270
multiplicacion       : 277 335
not                  : 63 65 133 143 144 175 225 291 296 298 300 309 311 312 314 316 318
notice               : 105
notnull              : 294
null                 : 63 65 133 134 175 176 291 292 336
nulls                : 55 56 57 58 59 60
numeric              : 232 233 234
offset               : 197 198 199 200 201
on                   : 47 48 49 50 51 52
or                   : 150 282
order                : 215 216
owner                : 122 152 153 154 155 156 157
para                 : 25 26 27 28 30 31 32 33 34 47 48 49 50 51 52 108 114 115 115 116 127 128 129 130 131 131 132 132 141 142 160 161 172 173 179 180 180 181 182 190 191 224 225 229 230 232 233 235 236 237 238 239 240 241 244 245 246 247 248 310 311 320 322 323 324 325 326 327
parc                 : 25 26 27 28 30 31 32 33 34 47 48 49 50 51 52 108 114 115 115 116 127 128 129 130 131 131 132 132 141 142 160 161 172 173 179 180 180 181 182 190 191 224 225 229 230 232 233 235 236 237 238 239 240 241 244 245 246 247 248 310 311 320 322 323 324 325 326 327
plpgsql              : 44 45
precision            : 254
primary              : 177 179
procedure            : 31 32 33 34
ptcoma               : 4 6 7 8 9 10 11 13 14 15 16 17 18 19 20 23 45 63 64 65 66 86 87 88 89 90 92 93 94 95 96 160 161
r_from               : 192 193 223 315 316 327
r_int                : 251
raise                : 97 98 99 100 101
real                 : 253
record               : 262
references           : 131 132 178 180
rename               : 121 138
replace              : 150
return               : 24
returns              : 29
rowtype              : 242
second               : 274
select               : 192 193 194
set                  : 133 134 220
show                 : 140 141 142
smallint             : 249
some                 : 326
symetric             : 313 314
table                : 117 123 160 161
tables               : 141
text                 : 256
then                 : 73 74 75 76 77 78 111 112
time                 : 240 244 245 246 246 247 247 259 264 265 266 266 267 267
timestamp            : 236 244 245 257 264 265 327 339
to                   : 121 122 138
true                 : 295 296 332
type                 : 139 191 243
union                : 206 207
unique               : 48 129 130 170 171 181
unknown              : 299 300
update               : 220
use                  : 16
using                : 49
values               : 114 115
varchar              : 235 263
varying              : 241
warning              : 106
when                 : 111 112
where                : 203 204
with                 : 245 247 265 267
without              : 244 246 264 266
year                 : 269
zone                 : 244 245 246 247 264 265 266 267

Nonterminals, with rules where they appear

ALTER                : 8
ASIG                 : 63 64 65 66
ASIGNACION           : 19 86
BEGINEND             : 89
CALLPROCEDURE        : 23 90
CASE                 : 12 321
COLDEF               : 162 163
COMBINING            : 192 193 194
CONDCHECK            : 127 128 172 173 182
CONDICIONIF          : 20 87
CONTENIDO            : 84 85
CONTENIDOP           : 35 36
CREATEDB             : 13
CREATEINDEX          : 17 18
CREATETABLE          : 5
CREATETYPE           : 11
DECLARACIONES        : 61 62
DELETE               : 7 96
DROP                 : 9
ELSE                 : 82
ELSEF                : 73 76 80
EXIST                : 204
EXP                  : 24 67 68 69 71 72 73 74 75 76 77 78 98 108 174 183 183 184 184 185 185 186 186 187 187 188 188 189 189 203 206 207 208 209 213 221 222 226 227 275 275 276 276 277 277 278 278 279 279 280 280 281 281 282 282 283 283 284 284 285 285 286 286 287 287 288 288 289 289 290 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 310 311 311 312 312 313 313 314 314 315 315 316 316 317 318 320
FIELDS               : 327
FORMAT               : 97
FUNCIONES            : 22
GROUP                : 192 193 194
HAVING               : 192 193 194
HERENCIA             : 161
INSERT               : 10 93
LCAMPOS              : 220 221
LCONTENIDOP          : 25 26 27 28 31 32 33 34 35
LDEC                 : 61 91
LDEF                 : 160 161 162
LELIF                : 74 76 77
LENGUAJE             : 25 26 27 28 31 32 33 34
LEVEL                : 97 98 99 101
LEXP                 : 47 48 49 80 81 108 111 112 112 113 114 115 115 129 130 131 131 132 132 136 179 180 180 181 191 192 192 193 193 194 211 215 216 226 322 324 325 326
LIMIT                : 192 193 194
LISTACONTENIDO       : 37 38 39 46 73 74 75 76 77 78 79 84 111
LISTAWHEN            : 80 81 82 83 109
LOP                  : 123 124
LOPCOLUMN            : 167 168
LPARAM               : 25 27 31 33 40 41
MODO                 : 148 149
OP                   : 124 125
OPCCDB               : 144 146
OPCOLUMN             : 168 169
OPCONST              : 164 165
ORD                  : 215
ORDEN                : 50 51
ORDER                : 192 193 194
PROCEDIMIENTOS       : 21
PROPIETARIO          : 147 149
RAISE                : 88
RD                   : 143 144 145 146
RETURN               : 92
RETURNP              : 25 26 27 28
SELECT               : 4 94 224 225 319
SHOW                 : 15
SHOWDB               : 14
TIPO                 : 29 40 41 42 43 63 64 65 66 126 139 166 167 341
UPDATE               : 6 95
WHEN                 : 109 110
WHERE                : 18 192 193 194 220 223
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . SELECT ptcoma
    (5) instruccion -> . CREATETABLE
    (6) instruccion -> . UPDATE ptcoma
    (7) instruccion -> . DELETE ptcoma
    (8) instruccion -> . ALTER ptcoma
    (9) instruccion -> . DROP ptcoma
    (10) instruccion -> . INSERT ptcoma
    (11) instruccion -> . CREATETYPE ptcoma
    (12) instruccion -> . CASE
    (13) instruccion -> . CREATEDB ptcoma
    (14) instruccion -> . SHOWDB ptcoma
    (15) instruccion -> . SHOW ptcoma
    (16) instruccion -> . use id ptcoma
    (17) instruccion -> . CREATEINDEX ptcoma
    (18) instruccion -> . CREATEINDEX WHERE ptcoma
    (19) instruccion -> . ASIGNACION ptcoma
    (20) instruccion -> . CONDICIONIF ptcoma
    (21) instruccion -> . PROCEDIMIENTOS
    (22) instruccion -> . FUNCIONES
    (23) instruccion -> . CALLPROCEDURE ptcoma
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (160) CREATETABLE -> . create table id para LDEF parc ptcoma
    (161) CREATETABLE -> . create table id para LDEF parc HERENCIA ptcoma
    (220) UPDATE -> . update id set LCAMPOS WHERE
    (223) DELETE -> . delete r_from id WHERE
    (121) ALTER -> . alter databases id rename to id
    (122) ALTER -> . alter databases id owner to id
    (123) ALTER -> . alter table id LOP
    (116) DROP -> . drop all para parc
    (117) DROP -> . drop table id
    (118) DROP -> . drop index id
    (119) DROP -> . drop databases if exist id
    (120) DROP -> . drop databases id
    (114) INSERT -> . insert into id values para LEXP parc
    (115) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (191) CREATETYPE -> . create type id as enum para LEXP parc
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end
    (143) CREATEDB -> . create RD if not exist id
    (144) CREATEDB -> . create RD if not exist id OPCCDB
    (145) CREATEDB -> . create RD id
    (146) CREATEDB -> . create RD id OPCCDB
    (140) SHOWDB -> . show dbs
    (141) SHOW -> . show tables para id parc
    (142) SHOW -> . show collection para parc
    (47) CREATEINDEX -> . create index id on id para LEXP parc
    (48) CREATEINDEX -> . create unique index id on id para LEXP parc
    (49) CREATEINDEX -> . create index id on id using hash para LEXP parc
    (50) CREATEINDEX -> . create index id on id para id ORDEN parc
    (51) CREATEINDEX -> . create index id on id para id id ORDEN parc
    (52) CREATEINDEX -> . create index id on id para id id parc
    (71) ASIGNACION -> . id dospuntos igual EXP
    (72) ASIGNACION -> . id igual EXP
    (73) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (31) PROCEDIMIENTOS -> . create procedure id para LPARAM parc LENGUAJE LCONTENIDOP
    (32) PROCEDIMIENTOS -> . create procedure id para parc LENGUAJE LCONTENIDOP
    (33) PROCEDIMIENTOS -> . create procedure id para LPARAM parc LCONTENIDOP LENGUAJE
    (34) PROCEDIMIENTOS -> . create procedure id para parc LCONTENIDOP LENGUAJE
    (25) FUNCIONES -> . create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP
    (26) FUNCIONES -> . create function id para parc RETURNP LENGUAJE LCONTENIDOP
    (27) FUNCIONES -> . create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE
    (28) FUNCIONES -> . create function id para parc RETURNP LCONTENIDOP LENGUAJE
    (30) CALLPROCEDURE -> . execute id para parc

    use             shift and go to state 16
    select          shift and go to state 24
    create          shift and go to state 25
    update          shift and go to state 26
    delete          shift and go to state 27
    alter           shift and go to state 28
    drop            shift and go to state 29
    insert          shift and go to state 31
    case            shift and go to state 32
    show            shift and go to state 33
    id              shift and go to state 17
    if              shift and go to state 30
    execute         shift and go to state 34

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    SELECT                         shift and go to state 4
    CREATETABLE                    shift and go to state 5
    UPDATE                         shift and go to state 6
    DELETE                         shift and go to state 7
    ALTER                          shift and go to state 8
    DROP                           shift and go to state 9
    INSERT                         shift and go to state 10
    CREATETYPE                     shift and go to state 11
    CASE                           shift and go to state 12
    CREATEDB                       shift and go to state 13
    SHOWDB                         shift and go to state 14
    SHOW                           shift and go to state 15
    CREATEINDEX                    shift and go to state 18
    ASIGNACION                     shift and go to state 19
    CONDICIONIF                    shift and go to state 20
    PROCEDIMIENTOS                 shift and go to state 21
    FUNCIONES                      shift and go to state 22
    CALLPROCEDURE                  shift and go to state 23

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . SELECT ptcoma
    (5) instruccion -> . CREATETABLE
    (6) instruccion -> . UPDATE ptcoma
    (7) instruccion -> . DELETE ptcoma
    (8) instruccion -> . ALTER ptcoma
    (9) instruccion -> . DROP ptcoma
    (10) instruccion -> . INSERT ptcoma
    (11) instruccion -> . CREATETYPE ptcoma
    (12) instruccion -> . CASE
    (13) instruccion -> . CREATEDB ptcoma
    (14) instruccion -> . SHOWDB ptcoma
    (15) instruccion -> . SHOW ptcoma
    (16) instruccion -> . use id ptcoma
    (17) instruccion -> . CREATEINDEX ptcoma
    (18) instruccion -> . CREATEINDEX WHERE ptcoma
    (19) instruccion -> . ASIGNACION ptcoma
    (20) instruccion -> . CONDICIONIF ptcoma
    (21) instruccion -> . PROCEDIMIENTOS
    (22) instruccion -> . FUNCIONES
    (23) instruccion -> . CALLPROCEDURE ptcoma
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (160) CREATETABLE -> . create table id para LDEF parc ptcoma
    (161) CREATETABLE -> . create table id para LDEF parc HERENCIA ptcoma
    (220) UPDATE -> . update id set LCAMPOS WHERE
    (223) DELETE -> . delete r_from id WHERE
    (121) ALTER -> . alter databases id rename to id
    (122) ALTER -> . alter databases id owner to id
    (123) ALTER -> . alter table id LOP
    (116) DROP -> . drop all para parc
    (117) DROP -> . drop table id
    (118) DROP -> . drop index id
    (119) DROP -> . drop databases if exist id
    (120) DROP -> . drop databases id
    (114) INSERT -> . insert into id values para LEXP parc
    (115) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (191) CREATETYPE -> . create type id as enum para LEXP parc
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end
    (143) CREATEDB -> . create RD if not exist id
    (144) CREATEDB -> . create RD if not exist id OPCCDB
    (145) CREATEDB -> . create RD id
    (146) CREATEDB -> . create RD id OPCCDB
    (140) SHOWDB -> . show dbs
    (141) SHOW -> . show tables para id parc
    (142) SHOW -> . show collection para parc
    (47) CREATEINDEX -> . create index id on id para LEXP parc
    (48) CREATEINDEX -> . create unique index id on id para LEXP parc
    (49) CREATEINDEX -> . create index id on id using hash para LEXP parc
    (50) CREATEINDEX -> . create index id on id para id ORDEN parc
    (51) CREATEINDEX -> . create index id on id para id id ORDEN parc
    (52) CREATEINDEX -> . create index id on id para id id parc
    (71) ASIGNACION -> . id dospuntos igual EXP
    (72) ASIGNACION -> . id igual EXP
    (73) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (31) PROCEDIMIENTOS -> . create procedure id para LPARAM parc LENGUAJE LCONTENIDOP
    (32) PROCEDIMIENTOS -> . create procedure id para parc LENGUAJE LCONTENIDOP
    (33) PROCEDIMIENTOS -> . create procedure id para LPARAM parc LCONTENIDOP LENGUAJE
    (34) PROCEDIMIENTOS -> . create procedure id para parc LCONTENIDOP LENGUAJE
    (25) FUNCIONES -> . create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP
    (26) FUNCIONES -> . create function id para parc RETURNP LENGUAJE LCONTENIDOP
    (27) FUNCIONES -> . create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE
    (28) FUNCIONES -> . create function id para parc RETURNP LCONTENIDOP LENGUAJE
    (30) CALLPROCEDURE -> . execute id para parc

    $end            reduce using rule 1 (init -> instrucciones .)
    use             shift and go to state 16
    select          shift and go to state 24
    create          shift and go to state 25
    update          shift and go to state 26
    delete          shift and go to state 27
    alter           shift and go to state 28
    drop            shift and go to state 29
    insert          shift and go to state 31
    case            shift and go to state 32
    show            shift and go to state 33
    id              shift and go to state 17
    if              shift and go to state 30
    execute         shift and go to state 34

    instruccion                    shift and go to state 35
    SELECT                         shift and go to state 4
    CREATETABLE                    shift and go to state 5
    UPDATE                         shift and go to state 6
    DELETE                         shift and go to state 7
    ALTER                          shift and go to state 8
    DROP                           shift and go to state 9
    INSERT                         shift and go to state 10
    CREATETYPE                     shift and go to state 11
    CASE                           shift and go to state 12
    CREATEDB                       shift and go to state 13
    SHOWDB                         shift and go to state 14
    SHOW                           shift and go to state 15
    CREATEINDEX                    shift and go to state 18
    ASIGNACION                     shift and go to state 19
    CONDICIONIF                    shift and go to state 20
    PROCEDIMIENTOS                 shift and go to state 21
    FUNCIONES                      shift and go to state 22
    CALLPROCEDURE                  shift and go to state 23

state 3

    (3) instrucciones -> instruccion .

    use             reduce using rule 3 (instrucciones -> instruccion .)
    select          reduce using rule 3 (instrucciones -> instruccion .)
    create          reduce using rule 3 (instrucciones -> instruccion .)
    update          reduce using rule 3 (instrucciones -> instruccion .)
    delete          reduce using rule 3 (instrucciones -> instruccion .)
    alter           reduce using rule 3 (instrucciones -> instruccion .)
    drop            reduce using rule 3 (instrucciones -> instruccion .)
    insert          reduce using rule 3 (instrucciones -> instruccion .)
    case            reduce using rule 3 (instrucciones -> instruccion .)
    show            reduce using rule 3 (instrucciones -> instruccion .)
    id              reduce using rule 3 (instrucciones -> instruccion .)
    if              reduce using rule 3 (instrucciones -> instruccion .)
    execute         reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> SELECT . ptcoma

    ptcoma          shift and go to state 36


state 5

    (5) instruccion -> CREATETABLE .

    use             reduce using rule 5 (instruccion -> CREATETABLE .)
    select          reduce using rule 5 (instruccion -> CREATETABLE .)
    create          reduce using rule 5 (instruccion -> CREATETABLE .)
    update          reduce using rule 5 (instruccion -> CREATETABLE .)
    delete          reduce using rule 5 (instruccion -> CREATETABLE .)
    alter           reduce using rule 5 (instruccion -> CREATETABLE .)
    drop            reduce using rule 5 (instruccion -> CREATETABLE .)
    insert          reduce using rule 5 (instruccion -> CREATETABLE .)
    case            reduce using rule 5 (instruccion -> CREATETABLE .)
    show            reduce using rule 5 (instruccion -> CREATETABLE .)
    id              reduce using rule 5 (instruccion -> CREATETABLE .)
    if              reduce using rule 5 (instruccion -> CREATETABLE .)
    execute         reduce using rule 5 (instruccion -> CREATETABLE .)
    $end            reduce using rule 5 (instruccion -> CREATETABLE .)


state 6

    (6) instruccion -> UPDATE . ptcoma

    ptcoma          shift and go to state 37


state 7

    (7) instruccion -> DELETE . ptcoma

    ptcoma          shift and go to state 38


state 8

    (8) instruccion -> ALTER . ptcoma

    ptcoma          shift and go to state 39


state 9

    (9) instruccion -> DROP . ptcoma

    ptcoma          shift and go to state 40


state 10

    (10) instruccion -> INSERT . ptcoma

    ptcoma          shift and go to state 41


state 11

    (11) instruccion -> CREATETYPE . ptcoma

    ptcoma          shift and go to state 42


state 12

    (12) instruccion -> CASE .

    use             reduce using rule 12 (instruccion -> CASE .)
    select          reduce using rule 12 (instruccion -> CASE .)
    create          reduce using rule 12 (instruccion -> CASE .)
    update          reduce using rule 12 (instruccion -> CASE .)
    delete          reduce using rule 12 (instruccion -> CASE .)
    alter           reduce using rule 12 (instruccion -> CASE .)
    drop            reduce using rule 12 (instruccion -> CASE .)
    insert          reduce using rule 12 (instruccion -> CASE .)
    case            reduce using rule 12 (instruccion -> CASE .)
    show            reduce using rule 12 (instruccion -> CASE .)
    id              reduce using rule 12 (instruccion -> CASE .)
    if              reduce using rule 12 (instruccion -> CASE .)
    execute         reduce using rule 12 (instruccion -> CASE .)
    $end            reduce using rule 12 (instruccion -> CASE .)


state 13

    (13) instruccion -> CREATEDB . ptcoma

    ptcoma          shift and go to state 43


state 14

    (14) instruccion -> SHOWDB . ptcoma

    ptcoma          shift and go to state 44


state 15

    (15) instruccion -> SHOW . ptcoma

    ptcoma          shift and go to state 45


state 16

    (16) instruccion -> use . id ptcoma

    id              shift and go to state 46


state 17

    (71) ASIGNACION -> id . dospuntos igual EXP
    (72) ASIGNACION -> id . igual EXP

    dospuntos       shift and go to state 47
    igual           shift and go to state 48


state 18

    (17) instruccion -> CREATEINDEX . ptcoma
    (18) instruccion -> CREATEINDEX . WHERE ptcoma
    (203) WHERE -> . where EXP
    (204) WHERE -> . where EXIST
    (205) WHERE -> .

  ! shift/reduce conflict for ptcoma resolved as shift
    ptcoma          shift and go to state 49
    where           shift and go to state 51

  ! ptcoma          [ reduce using rule 205 (WHERE -> .) ]

    WHERE                          shift and go to state 50

state 19

    (19) instruccion -> ASIGNACION . ptcoma

    ptcoma          shift and go to state 52


state 20

    (20) instruccion -> CONDICIONIF . ptcoma

    ptcoma          shift and go to state 53


state 21

    (21) instruccion -> PROCEDIMIENTOS .

    use             reduce using rule 21 (instruccion -> PROCEDIMIENTOS .)
    select          reduce using rule 21 (instruccion -> PROCEDIMIENTOS .)
    create          reduce using rule 21 (instruccion -> PROCEDIMIENTOS .)
    update          reduce using rule 21 (instruccion -> PROCEDIMIENTOS .)
    delete          reduce using rule 21 (instruccion -> PROCEDIMIENTOS .)
    alter           reduce using rule 21 (instruccion -> PROCEDIMIENTOS .)
    drop            reduce using rule 21 (instruccion -> PROCEDIMIENTOS .)
    insert          reduce using rule 21 (instruccion -> PROCEDIMIENTOS .)
    case            reduce using rule 21 (instruccion -> PROCEDIMIENTOS .)
    show            reduce using rule 21 (instruccion -> PROCEDIMIENTOS .)
    id              reduce using rule 21 (instruccion -> PROCEDIMIENTOS .)
    if              reduce using rule 21 (instruccion -> PROCEDIMIENTOS .)
    execute         reduce using rule 21 (instruccion -> PROCEDIMIENTOS .)
    $end            reduce using rule 21 (instruccion -> PROCEDIMIENTOS .)


state 22

    (22) instruccion -> FUNCIONES .

    use             reduce using rule 22 (instruccion -> FUNCIONES .)
    select          reduce using rule 22 (instruccion -> FUNCIONES .)
    create          reduce using rule 22 (instruccion -> FUNCIONES .)
    update          reduce using rule 22 (instruccion -> FUNCIONES .)
    delete          reduce using rule 22 (instruccion -> FUNCIONES .)
    alter           reduce using rule 22 (instruccion -> FUNCIONES .)
    drop            reduce using rule 22 (instruccion -> FUNCIONES .)
    insert          reduce using rule 22 (instruccion -> FUNCIONES .)
    case            reduce using rule 22 (instruccion -> FUNCIONES .)
    show            reduce using rule 22 (instruccion -> FUNCIONES .)
    id              reduce using rule 22 (instruccion -> FUNCIONES .)
    if              reduce using rule 22 (instruccion -> FUNCIONES .)
    execute         reduce using rule 22 (instruccion -> FUNCIONES .)
    $end            reduce using rule 22 (instruccion -> FUNCIONES .)


state 23

    (23) instruccion -> CALLPROCEDURE . ptcoma

    ptcoma          shift and go to state 54


state 24

    (192) SELECT -> select . distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> select . LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> select . LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (226) LEXP -> . LEXP coma EXP
    (227) LEXP -> . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    distinct        shift and go to state 55
    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 56
    EXP                            shift and go to state 57
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 25

    (160) CREATETABLE -> create . table id para LDEF parc ptcoma
    (161) CREATETABLE -> create . table id para LDEF parc HERENCIA ptcoma
    (191) CREATETYPE -> create . type id as enum para LEXP parc
    (143) CREATEDB -> create . RD if not exist id
    (144) CREATEDB -> create . RD if not exist id OPCCDB
    (145) CREATEDB -> create . RD id
    (146) CREATEDB -> create . RD id OPCCDB
    (47) CREATEINDEX -> create . index id on id para LEXP parc
    (48) CREATEINDEX -> create . unique index id on id para LEXP parc
    (49) CREATEINDEX -> create . index id on id using hash para LEXP parc
    (50) CREATEINDEX -> create . index id on id para id ORDEN parc
    (51) CREATEINDEX -> create . index id on id para id id ORDEN parc
    (52) CREATEINDEX -> create . index id on id para id id parc
    (31) PROCEDIMIENTOS -> create . procedure id para LPARAM parc LENGUAJE LCONTENIDOP
    (32) PROCEDIMIENTOS -> create . procedure id para parc LENGUAJE LCONTENIDOP
    (33) PROCEDIMIENTOS -> create . procedure id para LPARAM parc LCONTENIDOP LENGUAJE
    (34) PROCEDIMIENTOS -> create . procedure id para parc LCONTENIDOP LENGUAJE
    (25) FUNCIONES -> create . function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP
    (26) FUNCIONES -> create . function id para parc RETURNP LENGUAJE LCONTENIDOP
    (27) FUNCIONES -> create . function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE
    (28) FUNCIONES -> create . function id para parc RETURNP LCONTENIDOP LENGUAJE
    (150) RD -> . or replace databases
    (151) RD -> . databases

    table           shift and go to state 83
    type            shift and go to state 84
    index           shift and go to state 86
    unique          shift and go to state 87
    procedure       shift and go to state 88
    function        shift and go to state 89
    or              shift and go to state 90
    databases       shift and go to state 91

    RD                             shift and go to state 85

state 26

    (220) UPDATE -> update . id set LCAMPOS WHERE

    id              shift and go to state 92


state 27

    (223) DELETE -> delete . r_from id WHERE

    r_from          shift and go to state 93


state 28

    (121) ALTER -> alter . databases id rename to id
    (122) ALTER -> alter . databases id owner to id
    (123) ALTER -> alter . table id LOP

    databases       shift and go to state 94
    table           shift and go to state 95


state 29

    (116) DROP -> drop . all para parc
    (117) DROP -> drop . table id
    (118) DROP -> drop . index id
    (119) DROP -> drop . databases if exist id
    (120) DROP -> drop . databases id

    all             shift and go to state 96
    table           shift and go to state 97
    index           shift and go to state 98
    databases       shift and go to state 99


state 30

    (73) CONDICIONIF -> if . EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> if . EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> if . EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> if . EXP then LISTACONTENIDO LELIF ELSEF end if
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 100
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 31

    (114) INSERT -> insert . into id values para LEXP parc
    (115) INSERT -> insert . into id para LEXP parc values para LEXP parc

    into            shift and go to state 101


state 32

    (80) CASE -> case . LEXP LISTAWHEN ELSEF end case
    (81) CASE -> case . LEXP LISTAWHEN end case
    (82) CASE -> case . LISTAWHEN ELSE end
    (83) CASE -> case . LISTAWHEN end
    (226) LEXP -> . LEXP coma EXP
    (227) LEXP -> . EXP
    (109) LISTAWHEN -> . LISTAWHEN WHEN
    (110) LISTAWHEN -> . WHEN
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (111) WHEN -> . when LEXP then LISTACONTENIDO
    (112) WHEN -> . when LEXP then LEXP
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    when            shift and go to state 105
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 102
    LISTAWHEN                      shift and go to state 103
    EXP                            shift and go to state 57
    WHEN                           shift and go to state 104
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 33

    (140) SHOWDB -> show . dbs
    (141) SHOW -> show . tables para id parc
    (142) SHOW -> show . collection para parc

    dbs             shift and go to state 106
    tables          shift and go to state 107
    collection      shift and go to state 108


state 34

    (30) CALLPROCEDURE -> execute . id para parc

    id              shift and go to state 109


state 35

    (2) instrucciones -> instrucciones instruccion .

    use             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    select          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    create          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    update          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    delete          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    alter           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    drop            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    insert          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    case            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    show            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    id              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    if              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    execute         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 36

    (4) instruccion -> SELECT ptcoma .

    use             reduce using rule 4 (instruccion -> SELECT ptcoma .)
    select          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    create          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    update          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    delete          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    alter           reduce using rule 4 (instruccion -> SELECT ptcoma .)
    drop            reduce using rule 4 (instruccion -> SELECT ptcoma .)
    insert          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    case            reduce using rule 4 (instruccion -> SELECT ptcoma .)
    show            reduce using rule 4 (instruccion -> SELECT ptcoma .)
    id              reduce using rule 4 (instruccion -> SELECT ptcoma .)
    if              reduce using rule 4 (instruccion -> SELECT ptcoma .)
    execute         reduce using rule 4 (instruccion -> SELECT ptcoma .)
    $end            reduce using rule 4 (instruccion -> SELECT ptcoma .)


state 37

    (6) instruccion -> UPDATE ptcoma .

    use             reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    select          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    create          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    update          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    delete          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    alter           reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    drop            reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    insert          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    case            reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    show            reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    id              reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    if              reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    execute         reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    $end            reduce using rule 6 (instruccion -> UPDATE ptcoma .)


state 38

    (7) instruccion -> DELETE ptcoma .

    use             reduce using rule 7 (instruccion -> DELETE ptcoma .)
    select          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    create          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    update          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    delete          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    alter           reduce using rule 7 (instruccion -> DELETE ptcoma .)
    drop            reduce using rule 7 (instruccion -> DELETE ptcoma .)
    insert          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    case            reduce using rule 7 (instruccion -> DELETE ptcoma .)
    show            reduce using rule 7 (instruccion -> DELETE ptcoma .)
    id              reduce using rule 7 (instruccion -> DELETE ptcoma .)
    if              reduce using rule 7 (instruccion -> DELETE ptcoma .)
    execute         reduce using rule 7 (instruccion -> DELETE ptcoma .)
    $end            reduce using rule 7 (instruccion -> DELETE ptcoma .)


state 39

    (8) instruccion -> ALTER ptcoma .

    use             reduce using rule 8 (instruccion -> ALTER ptcoma .)
    select          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    create          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    update          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    delete          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    alter           reduce using rule 8 (instruccion -> ALTER ptcoma .)
    drop            reduce using rule 8 (instruccion -> ALTER ptcoma .)
    insert          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    case            reduce using rule 8 (instruccion -> ALTER ptcoma .)
    show            reduce using rule 8 (instruccion -> ALTER ptcoma .)
    id              reduce using rule 8 (instruccion -> ALTER ptcoma .)
    if              reduce using rule 8 (instruccion -> ALTER ptcoma .)
    execute         reduce using rule 8 (instruccion -> ALTER ptcoma .)
    $end            reduce using rule 8 (instruccion -> ALTER ptcoma .)


state 40

    (9) instruccion -> DROP ptcoma .

    use             reduce using rule 9 (instruccion -> DROP ptcoma .)
    select          reduce using rule 9 (instruccion -> DROP ptcoma .)
    create          reduce using rule 9 (instruccion -> DROP ptcoma .)
    update          reduce using rule 9 (instruccion -> DROP ptcoma .)
    delete          reduce using rule 9 (instruccion -> DROP ptcoma .)
    alter           reduce using rule 9 (instruccion -> DROP ptcoma .)
    drop            reduce using rule 9 (instruccion -> DROP ptcoma .)
    insert          reduce using rule 9 (instruccion -> DROP ptcoma .)
    case            reduce using rule 9 (instruccion -> DROP ptcoma .)
    show            reduce using rule 9 (instruccion -> DROP ptcoma .)
    id              reduce using rule 9 (instruccion -> DROP ptcoma .)
    if              reduce using rule 9 (instruccion -> DROP ptcoma .)
    execute         reduce using rule 9 (instruccion -> DROP ptcoma .)
    $end            reduce using rule 9 (instruccion -> DROP ptcoma .)


state 41

    (10) instruccion -> INSERT ptcoma .

    use             reduce using rule 10 (instruccion -> INSERT ptcoma .)
    select          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    create          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    update          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    delete          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    alter           reduce using rule 10 (instruccion -> INSERT ptcoma .)
    drop            reduce using rule 10 (instruccion -> INSERT ptcoma .)
    insert          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    case            reduce using rule 10 (instruccion -> INSERT ptcoma .)
    show            reduce using rule 10 (instruccion -> INSERT ptcoma .)
    id              reduce using rule 10 (instruccion -> INSERT ptcoma .)
    if              reduce using rule 10 (instruccion -> INSERT ptcoma .)
    execute         reduce using rule 10 (instruccion -> INSERT ptcoma .)
    $end            reduce using rule 10 (instruccion -> INSERT ptcoma .)


state 42

    (11) instruccion -> CREATETYPE ptcoma .

    use             reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    select          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    create          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    update          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    delete          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    alter           reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    drop            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    insert          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    case            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    show            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    id              reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    if              reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    execute         reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    $end            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)


state 43

    (13) instruccion -> CREATEDB ptcoma .

    use             reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    select          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    create          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    update          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    delete          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    alter           reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    drop            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    insert          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    case            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    show            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    id              reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    if              reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    execute         reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    $end            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)


state 44

    (14) instruccion -> SHOWDB ptcoma .

    use             reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    select          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    create          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    update          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    delete          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    alter           reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    drop            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    insert          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    case            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    show            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    id              reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    if              reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    execute         reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    $end            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)


state 45

    (15) instruccion -> SHOW ptcoma .

    use             reduce using rule 15 (instruccion -> SHOW ptcoma .)
    select          reduce using rule 15 (instruccion -> SHOW ptcoma .)
    create          reduce using rule 15 (instruccion -> SHOW ptcoma .)
    update          reduce using rule 15 (instruccion -> SHOW ptcoma .)
    delete          reduce using rule 15 (instruccion -> SHOW ptcoma .)
    alter           reduce using rule 15 (instruccion -> SHOW ptcoma .)
    drop            reduce using rule 15 (instruccion -> SHOW ptcoma .)
    insert          reduce using rule 15 (instruccion -> SHOW ptcoma .)
    case            reduce using rule 15 (instruccion -> SHOW ptcoma .)
    show            reduce using rule 15 (instruccion -> SHOW ptcoma .)
    id              reduce using rule 15 (instruccion -> SHOW ptcoma .)
    if              reduce using rule 15 (instruccion -> SHOW ptcoma .)
    execute         reduce using rule 15 (instruccion -> SHOW ptcoma .)
    $end            reduce using rule 15 (instruccion -> SHOW ptcoma .)


state 46

    (16) instruccion -> use id . ptcoma

    ptcoma          shift and go to state 110


state 47

    (71) ASIGNACION -> id dospuntos . igual EXP

    igual           shift and go to state 111


state 48

    (72) ASIGNACION -> id igual . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 112
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 49

    (17) instruccion -> CREATEINDEX ptcoma .

    use             reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    select          reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    create          reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    update          reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    delete          reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    alter           reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    drop            reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    insert          reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    case            reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    show            reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    id              reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    if              reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    execute         reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    $end            reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)


state 50

    (18) instruccion -> CREATEINDEX WHERE . ptcoma

    ptcoma          shift and go to state 113


state 51

    (203) WHERE -> where . EXP
    (204) WHERE -> where . EXIST
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (224) EXIST -> . exist para SELECT parc
    (225) EXIST -> . not exist para SELECT parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 116
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    exist           shift and go to state 117
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 114
    EXIST                          shift and go to state 115
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 52

    (19) instruccion -> ASIGNACION ptcoma .

    use             reduce using rule 19 (instruccion -> ASIGNACION ptcoma .)
    select          reduce using rule 19 (instruccion -> ASIGNACION ptcoma .)
    create          reduce using rule 19 (instruccion -> ASIGNACION ptcoma .)
    update          reduce using rule 19 (instruccion -> ASIGNACION ptcoma .)
    delete          reduce using rule 19 (instruccion -> ASIGNACION ptcoma .)
    alter           reduce using rule 19 (instruccion -> ASIGNACION ptcoma .)
    drop            reduce using rule 19 (instruccion -> ASIGNACION ptcoma .)
    insert          reduce using rule 19 (instruccion -> ASIGNACION ptcoma .)
    case            reduce using rule 19 (instruccion -> ASIGNACION ptcoma .)
    show            reduce using rule 19 (instruccion -> ASIGNACION ptcoma .)
    id              reduce using rule 19 (instruccion -> ASIGNACION ptcoma .)
    if              reduce using rule 19 (instruccion -> ASIGNACION ptcoma .)
    execute         reduce using rule 19 (instruccion -> ASIGNACION ptcoma .)
    $end            reduce using rule 19 (instruccion -> ASIGNACION ptcoma .)


state 53

    (20) instruccion -> CONDICIONIF ptcoma .

    use             reduce using rule 20 (instruccion -> CONDICIONIF ptcoma .)
    select          reduce using rule 20 (instruccion -> CONDICIONIF ptcoma .)
    create          reduce using rule 20 (instruccion -> CONDICIONIF ptcoma .)
    update          reduce using rule 20 (instruccion -> CONDICIONIF ptcoma .)
    delete          reduce using rule 20 (instruccion -> CONDICIONIF ptcoma .)
    alter           reduce using rule 20 (instruccion -> CONDICIONIF ptcoma .)
    drop            reduce using rule 20 (instruccion -> CONDICIONIF ptcoma .)
    insert          reduce using rule 20 (instruccion -> CONDICIONIF ptcoma .)
    case            reduce using rule 20 (instruccion -> CONDICIONIF ptcoma .)
    show            reduce using rule 20 (instruccion -> CONDICIONIF ptcoma .)
    id              reduce using rule 20 (instruccion -> CONDICIONIF ptcoma .)
    if              reduce using rule 20 (instruccion -> CONDICIONIF ptcoma .)
    execute         reduce using rule 20 (instruccion -> CONDICIONIF ptcoma .)
    $end            reduce using rule 20 (instruccion -> CONDICIONIF ptcoma .)


state 54

    (23) instruccion -> CALLPROCEDURE ptcoma .

    use             reduce using rule 23 (instruccion -> CALLPROCEDURE ptcoma .)
    select          reduce using rule 23 (instruccion -> CALLPROCEDURE ptcoma .)
    create          reduce using rule 23 (instruccion -> CALLPROCEDURE ptcoma .)
    update          reduce using rule 23 (instruccion -> CALLPROCEDURE ptcoma .)
    delete          reduce using rule 23 (instruccion -> CALLPROCEDURE ptcoma .)
    alter           reduce using rule 23 (instruccion -> CALLPROCEDURE ptcoma .)
    drop            reduce using rule 23 (instruccion -> CALLPROCEDURE ptcoma .)
    insert          reduce using rule 23 (instruccion -> CALLPROCEDURE ptcoma .)
    case            reduce using rule 23 (instruccion -> CALLPROCEDURE ptcoma .)
    show            reduce using rule 23 (instruccion -> CALLPROCEDURE ptcoma .)
    id              reduce using rule 23 (instruccion -> CALLPROCEDURE ptcoma .)
    if              reduce using rule 23 (instruccion -> CALLPROCEDURE ptcoma .)
    execute         reduce using rule 23 (instruccion -> CALLPROCEDURE ptcoma .)
    $end            reduce using rule 23 (instruccion -> CALLPROCEDURE ptcoma .)


state 55

    (192) SELECT -> select distinct . LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (226) LEXP -> . LEXP coma EXP
    (227) LEXP -> . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 118
    EXP                            shift and go to state 57
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 56

    (193) SELECT -> select LEXP . r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> select LEXP . WHERE GROUP HAVING COMBINING ORDER LIMIT
    (226) LEXP -> LEXP . coma EXP
    (203) WHERE -> . where EXP
    (204) WHERE -> . where EXIST
    (205) WHERE -> .

  ! shift/reduce conflict for r_from resolved as shift
  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for where resolved as shift
    r_from          shift and go to state 119
    coma            shift and go to state 121
    where           shift and go to state 51
    group           reduce using rule 205 (WHERE -> .)
    having          reduce using rule 205 (WHERE -> .)
    union           reduce using rule 205 (WHERE -> .)
    intersect       reduce using rule 205 (WHERE -> .)
    except          reduce using rule 205 (WHERE -> .)
    order           reduce using rule 205 (WHERE -> .)
    limit           reduce using rule 205 (WHERE -> .)
    offset          reduce using rule 205 (WHERE -> .)
    ptcoma          reduce using rule 205 (WHERE -> .)
    mas             reduce using rule 205 (WHERE -> .)
    menos           reduce using rule 205 (WHERE -> .)
    multiplicacion  reduce using rule 205 (WHERE -> .)
    division        reduce using rule 205 (WHERE -> .)
    modulo          reduce using rule 205 (WHERE -> .)
    elevado         reduce using rule 205 (WHERE -> .)
    and             reduce using rule 205 (WHERE -> .)
    or              reduce using rule 205 (WHERE -> .)
    mayor           reduce using rule 205 (WHERE -> .)
    menor           reduce using rule 205 (WHERE -> .)
    mayor_igual     reduce using rule 205 (WHERE -> .)
    menor_igual     reduce using rule 205 (WHERE -> .)
    igual           reduce using rule 205 (WHERE -> .)
    diferente1      reduce using rule 205 (WHERE -> .)
    diferente2      reduce using rule 205 (WHERE -> .)
    between         reduce using rule 205 (WHERE -> .)
    is              reduce using rule 205 (WHERE -> .)
    isnull          reduce using rule 205 (WHERE -> .)
    notnull         reduce using rule 205 (WHERE -> .)
    as              reduce using rule 205 (WHERE -> .)
    cadenaString    reduce using rule 205 (WHERE -> .)
    id              reduce using rule 205 (WHERE -> .)
    cadena          reduce using rule 205 (WHERE -> .)
    in              reduce using rule 205 (WHERE -> .)
    not             reduce using rule 205 (WHERE -> .)
    like            reduce using rule 205 (WHERE -> .)
    then            reduce using rule 205 (WHERE -> .)
    when            reduce using rule 205 (WHERE -> .)
    parc            reduce using rule 205 (WHERE -> .)
    end             reduce using rule 205 (WHERE -> .)
    else            reduce using rule 205 (WHERE -> .)
    constraint      reduce using rule 205 (WHERE -> .)
    unique          reduce using rule 205 (WHERE -> .)
    check           reduce using rule 205 (WHERE -> .)
    default         reduce using rule 205 (WHERE -> .)
    null            reduce using rule 205 (WHERE -> .)
    primary         reduce using rule 205 (WHERE -> .)
    references      reduce using rule 205 (WHERE -> .)
    asc             reduce using rule 205 (WHERE -> .)
    desc            reduce using rule 205 (WHERE -> .)

  ! r_from          [ reduce using rule 205 (WHERE -> .) ]
  ! coma            [ reduce using rule 205 (WHERE -> .) ]
  ! where           [ reduce using rule 205 (WHERE -> .) ]

    WHERE                          shift and go to state 120

state 57

    (227) LEXP -> EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    r_from          reduce using rule 227 (LEXP -> EXP .)
    coma            reduce using rule 227 (LEXP -> EXP .)
    where           reduce using rule 227 (LEXP -> EXP .)
    group           reduce using rule 227 (LEXP -> EXP .)
    having          reduce using rule 227 (LEXP -> EXP .)
    union           reduce using rule 227 (LEXP -> EXP .)
    intersect       reduce using rule 227 (LEXP -> EXP .)
    except          reduce using rule 227 (LEXP -> EXP .)
    order           reduce using rule 227 (LEXP -> EXP .)
    limit           reduce using rule 227 (LEXP -> EXP .)
    offset          reduce using rule 227 (LEXP -> EXP .)
    ptcoma          reduce using rule 227 (LEXP -> EXP .)
    then            reduce using rule 227 (LEXP -> EXP .)
    when            reduce using rule 227 (LEXP -> EXP .)
    parc            reduce using rule 227 (LEXP -> EXP .)
    end             reduce using rule 227 (LEXP -> EXP .)
    else            reduce using rule 227 (LEXP -> EXP .)
    constraint      reduce using rule 227 (LEXP -> EXP .)
    unique          reduce using rule 227 (LEXP -> EXP .)
    check           reduce using rule 227 (LEXP -> EXP .)
    default         reduce using rule 227 (LEXP -> EXP .)
    null            reduce using rule 227 (LEXP -> EXP .)
    primary         reduce using rule 227 (LEXP -> EXP .)
    references      reduce using rule 227 (LEXP -> EXP .)
    asc             reduce using rule 227 (LEXP -> EXP .)
    desc            reduce using rule 227 (LEXP -> EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    and             shift and go to state 128
    or              shift and go to state 129
    mayor           shift and go to state 130
    menor           shift and go to state 131
    mayor_igual     shift and go to state 132
    menor_igual     shift and go to state 133
    igual           shift and go to state 134
    diferente1      shift and go to state 135
    diferente2      shift and go to state 136
    between         shift and go to state 137
    is              shift and go to state 138
    isnull          shift and go to state 140
    notnull         shift and go to state 141
    as              shift and go to state 142
    cadenaString    shift and go to state 143
    id              shift and go to state 144
    cadena          shift and go to state 145
    in              shift and go to state 146
    not             shift and go to state 139
    like            shift and go to state 147

  ! mas             [ reduce using rule 227 (LEXP -> EXP .) ]
  ! menos           [ reduce using rule 227 (LEXP -> EXP .) ]
  ! multiplicacion  [ reduce using rule 227 (LEXP -> EXP .) ]
  ! division        [ reduce using rule 227 (LEXP -> EXP .) ]
  ! modulo          [ reduce using rule 227 (LEXP -> EXP .) ]
  ! elevado         [ reduce using rule 227 (LEXP -> EXP .) ]
  ! and             [ reduce using rule 227 (LEXP -> EXP .) ]
  ! or              [ reduce using rule 227 (LEXP -> EXP .) ]
  ! mayor           [ reduce using rule 227 (LEXP -> EXP .) ]
  ! menor           [ reduce using rule 227 (LEXP -> EXP .) ]
  ! mayor_igual     [ reduce using rule 227 (LEXP -> EXP .) ]
  ! menor_igual     [ reduce using rule 227 (LEXP -> EXP .) ]
  ! igual           [ reduce using rule 227 (LEXP -> EXP .) ]
  ! diferente1      [ reduce using rule 227 (LEXP -> EXP .) ]
  ! diferente2      [ reduce using rule 227 (LEXP -> EXP .) ]
  ! between         [ reduce using rule 227 (LEXP -> EXP .) ]
  ! is              [ reduce using rule 227 (LEXP -> EXP .) ]
  ! isnull          [ reduce using rule 227 (LEXP -> EXP .) ]
  ! notnull         [ reduce using rule 227 (LEXP -> EXP .) ]
  ! as              [ reduce using rule 227 (LEXP -> EXP .) ]
  ! cadenaString    [ reduce using rule 227 (LEXP -> EXP .) ]
  ! id              [ reduce using rule 227 (LEXP -> EXP .) ]
  ! cadena          [ reduce using rule 227 (LEXP -> EXP .) ]
  ! in              [ reduce using rule 227 (LEXP -> EXP .) ]
  ! not             [ reduce using rule 227 (LEXP -> EXP .) ]
  ! like            [ reduce using rule 227 (LEXP -> EXP .) ]


state 58

    (307) EXP -> mas . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 148
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 59

    (308) EXP -> menos . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 149
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 60

    (335) EXP -> multiplicacion .

    r_from          reduce using rule 335 (EXP -> multiplicacion .)
    coma            reduce using rule 335 (EXP -> multiplicacion .)
    where           reduce using rule 335 (EXP -> multiplicacion .)
    group           reduce using rule 335 (EXP -> multiplicacion .)
    having          reduce using rule 335 (EXP -> multiplicacion .)
    union           reduce using rule 335 (EXP -> multiplicacion .)
    intersect       reduce using rule 335 (EXP -> multiplicacion .)
    except          reduce using rule 335 (EXP -> multiplicacion .)
    order           reduce using rule 335 (EXP -> multiplicacion .)
    limit           reduce using rule 335 (EXP -> multiplicacion .)
    offset          reduce using rule 335 (EXP -> multiplicacion .)
    ptcoma          reduce using rule 335 (EXP -> multiplicacion .)
    mas             reduce using rule 335 (EXP -> multiplicacion .)
    menos           reduce using rule 335 (EXP -> multiplicacion .)
    multiplicacion  reduce using rule 335 (EXP -> multiplicacion .)
    division        reduce using rule 335 (EXP -> multiplicacion .)
    modulo          reduce using rule 335 (EXP -> multiplicacion .)
    elevado         reduce using rule 335 (EXP -> multiplicacion .)
    and             reduce using rule 335 (EXP -> multiplicacion .)
    or              reduce using rule 335 (EXP -> multiplicacion .)
    mayor           reduce using rule 335 (EXP -> multiplicacion .)
    menor           reduce using rule 335 (EXP -> multiplicacion .)
    mayor_igual     reduce using rule 335 (EXP -> multiplicacion .)
    menor_igual     reduce using rule 335 (EXP -> multiplicacion .)
    igual           reduce using rule 335 (EXP -> multiplicacion .)
    diferente1      reduce using rule 335 (EXP -> multiplicacion .)
    diferente2      reduce using rule 335 (EXP -> multiplicacion .)
    between         reduce using rule 335 (EXP -> multiplicacion .)
    is              reduce using rule 335 (EXP -> multiplicacion .)
    isnull          reduce using rule 335 (EXP -> multiplicacion .)
    notnull         reduce using rule 335 (EXP -> multiplicacion .)
    as              reduce using rule 335 (EXP -> multiplicacion .)
    cadenaString    reduce using rule 335 (EXP -> multiplicacion .)
    id              reduce using rule 335 (EXP -> multiplicacion .)
    cadena          reduce using rule 335 (EXP -> multiplicacion .)
    in              reduce using rule 335 (EXP -> multiplicacion .)
    not             reduce using rule 335 (EXP -> multiplicacion .)
    like            reduce using rule 335 (EXP -> multiplicacion .)
    then            reduce using rule 335 (EXP -> multiplicacion .)
    when            reduce using rule 335 (EXP -> multiplicacion .)
    parc            reduce using rule 335 (EXP -> multiplicacion .)
    end             reduce using rule 335 (EXP -> multiplicacion .)
    else            reduce using rule 335 (EXP -> multiplicacion .)
    constraint      reduce using rule 335 (EXP -> multiplicacion .)
    unique          reduce using rule 335 (EXP -> multiplicacion .)
    check           reduce using rule 335 (EXP -> multiplicacion .)
    default         reduce using rule 335 (EXP -> multiplicacion .)
    null            reduce using rule 335 (EXP -> multiplicacion .)
    primary         reduce using rule 335 (EXP -> multiplicacion .)
    references      reduce using rule 335 (EXP -> multiplicacion .)
    asc             reduce using rule 335 (EXP -> multiplicacion .)
    desc            reduce using rule 335 (EXP -> multiplicacion .)


state 61

    (309) EXP -> not . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 150
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 62

    (336) EXP -> null .

    r_from          reduce using rule 336 (EXP -> null .)
    coma            reduce using rule 336 (EXP -> null .)
    where           reduce using rule 336 (EXP -> null .)
    group           reduce using rule 336 (EXP -> null .)
    having          reduce using rule 336 (EXP -> null .)
    union           reduce using rule 336 (EXP -> null .)
    intersect       reduce using rule 336 (EXP -> null .)
    except          reduce using rule 336 (EXP -> null .)
    order           reduce using rule 336 (EXP -> null .)
    limit           reduce using rule 336 (EXP -> null .)
    offset          reduce using rule 336 (EXP -> null .)
    ptcoma          reduce using rule 336 (EXP -> null .)
    mas             reduce using rule 336 (EXP -> null .)
    menos           reduce using rule 336 (EXP -> null .)
    multiplicacion  reduce using rule 336 (EXP -> null .)
    division        reduce using rule 336 (EXP -> null .)
    modulo          reduce using rule 336 (EXP -> null .)
    elevado         reduce using rule 336 (EXP -> null .)
    and             reduce using rule 336 (EXP -> null .)
    or              reduce using rule 336 (EXP -> null .)
    mayor           reduce using rule 336 (EXP -> null .)
    menor           reduce using rule 336 (EXP -> null .)
    mayor_igual     reduce using rule 336 (EXP -> null .)
    menor_igual     reduce using rule 336 (EXP -> null .)
    igual           reduce using rule 336 (EXP -> null .)
    diferente1      reduce using rule 336 (EXP -> null .)
    diferente2      reduce using rule 336 (EXP -> null .)
    between         reduce using rule 336 (EXP -> null .)
    is              reduce using rule 336 (EXP -> null .)
    isnull          reduce using rule 336 (EXP -> null .)
    notnull         reduce using rule 336 (EXP -> null .)
    as              reduce using rule 336 (EXP -> null .)
    cadenaString    reduce using rule 336 (EXP -> null .)
    id              reduce using rule 336 (EXP -> null .)
    cadena          reduce using rule 336 (EXP -> null .)
    in              reduce using rule 336 (EXP -> null .)
    not             reduce using rule 336 (EXP -> null .)
    like            reduce using rule 336 (EXP -> null .)
    then            reduce using rule 336 (EXP -> null .)
    when            reduce using rule 336 (EXP -> null .)
    parc            reduce using rule 336 (EXP -> null .)
    end             reduce using rule 336 (EXP -> null .)
    else            reduce using rule 336 (EXP -> null .)
    constraint      reduce using rule 336 (EXP -> null .)
    unique          reduce using rule 336 (EXP -> null .)
    check           reduce using rule 336 (EXP -> null .)
    default         reduce using rule 336 (EXP -> null .)
    null            reduce using rule 336 (EXP -> null .)
    primary         reduce using rule 336 (EXP -> null .)
    references      reduce using rule 336 (EXP -> null .)
    asc             reduce using rule 336 (EXP -> null .)
    desc            reduce using rule 336 (EXP -> null .)


state 63

    (332) EXP -> true .

    r_from          reduce using rule 332 (EXP -> true .)
    coma            reduce using rule 332 (EXP -> true .)
    where           reduce using rule 332 (EXP -> true .)
    group           reduce using rule 332 (EXP -> true .)
    having          reduce using rule 332 (EXP -> true .)
    union           reduce using rule 332 (EXP -> true .)
    intersect       reduce using rule 332 (EXP -> true .)
    except          reduce using rule 332 (EXP -> true .)
    order           reduce using rule 332 (EXP -> true .)
    limit           reduce using rule 332 (EXP -> true .)
    offset          reduce using rule 332 (EXP -> true .)
    ptcoma          reduce using rule 332 (EXP -> true .)
    mas             reduce using rule 332 (EXP -> true .)
    menos           reduce using rule 332 (EXP -> true .)
    multiplicacion  reduce using rule 332 (EXP -> true .)
    division        reduce using rule 332 (EXP -> true .)
    modulo          reduce using rule 332 (EXP -> true .)
    elevado         reduce using rule 332 (EXP -> true .)
    and             reduce using rule 332 (EXP -> true .)
    or              reduce using rule 332 (EXP -> true .)
    mayor           reduce using rule 332 (EXP -> true .)
    menor           reduce using rule 332 (EXP -> true .)
    mayor_igual     reduce using rule 332 (EXP -> true .)
    menor_igual     reduce using rule 332 (EXP -> true .)
    igual           reduce using rule 332 (EXP -> true .)
    diferente1      reduce using rule 332 (EXP -> true .)
    diferente2      reduce using rule 332 (EXP -> true .)
    between         reduce using rule 332 (EXP -> true .)
    is              reduce using rule 332 (EXP -> true .)
    isnull          reduce using rule 332 (EXP -> true .)
    notnull         reduce using rule 332 (EXP -> true .)
    as              reduce using rule 332 (EXP -> true .)
    cadenaString    reduce using rule 332 (EXP -> true .)
    id              reduce using rule 332 (EXP -> true .)
    cadena          reduce using rule 332 (EXP -> true .)
    in              reduce using rule 332 (EXP -> true .)
    not             reduce using rule 332 (EXP -> true .)
    like            reduce using rule 332 (EXP -> true .)
    then            reduce using rule 332 (EXP -> true .)
    when            reduce using rule 332 (EXP -> true .)
    parc            reduce using rule 332 (EXP -> true .)
    end             reduce using rule 332 (EXP -> true .)
    else            reduce using rule 332 (EXP -> true .)
    constraint      reduce using rule 332 (EXP -> true .)
    unique          reduce using rule 332 (EXP -> true .)
    check           reduce using rule 332 (EXP -> true .)
    default         reduce using rule 332 (EXP -> true .)
    null            reduce using rule 332 (EXP -> true .)
    primary         reduce using rule 332 (EXP -> true .)
    references      reduce using rule 332 (EXP -> true .)
    asc             reduce using rule 332 (EXP -> true .)
    desc            reduce using rule 332 (EXP -> true .)


state 64

    (333) EXP -> false .

    r_from          reduce using rule 333 (EXP -> false .)
    coma            reduce using rule 333 (EXP -> false .)
    where           reduce using rule 333 (EXP -> false .)
    group           reduce using rule 333 (EXP -> false .)
    having          reduce using rule 333 (EXP -> false .)
    union           reduce using rule 333 (EXP -> false .)
    intersect       reduce using rule 333 (EXP -> false .)
    except          reduce using rule 333 (EXP -> false .)
    order           reduce using rule 333 (EXP -> false .)
    limit           reduce using rule 333 (EXP -> false .)
    offset          reduce using rule 333 (EXP -> false .)
    ptcoma          reduce using rule 333 (EXP -> false .)
    mas             reduce using rule 333 (EXP -> false .)
    menos           reduce using rule 333 (EXP -> false .)
    multiplicacion  reduce using rule 333 (EXP -> false .)
    division        reduce using rule 333 (EXP -> false .)
    modulo          reduce using rule 333 (EXP -> false .)
    elevado         reduce using rule 333 (EXP -> false .)
    and             reduce using rule 333 (EXP -> false .)
    or              reduce using rule 333 (EXP -> false .)
    mayor           reduce using rule 333 (EXP -> false .)
    menor           reduce using rule 333 (EXP -> false .)
    mayor_igual     reduce using rule 333 (EXP -> false .)
    menor_igual     reduce using rule 333 (EXP -> false .)
    igual           reduce using rule 333 (EXP -> false .)
    diferente1      reduce using rule 333 (EXP -> false .)
    diferente2      reduce using rule 333 (EXP -> false .)
    between         reduce using rule 333 (EXP -> false .)
    is              reduce using rule 333 (EXP -> false .)
    isnull          reduce using rule 333 (EXP -> false .)
    notnull         reduce using rule 333 (EXP -> false .)
    as              reduce using rule 333 (EXP -> false .)
    cadenaString    reduce using rule 333 (EXP -> false .)
    id              reduce using rule 333 (EXP -> false .)
    cadena          reduce using rule 333 (EXP -> false .)
    in              reduce using rule 333 (EXP -> false .)
    not             reduce using rule 333 (EXP -> false .)
    like            reduce using rule 333 (EXP -> false .)
    then            reduce using rule 333 (EXP -> false .)
    when            reduce using rule 333 (EXP -> false .)
    parc            reduce using rule 333 (EXP -> false .)
    end             reduce using rule 333 (EXP -> false .)
    else            reduce using rule 333 (EXP -> false .)
    constraint      reduce using rule 333 (EXP -> false .)
    unique          reduce using rule 333 (EXP -> false .)
    check           reduce using rule 333 (EXP -> false .)
    default         reduce using rule 333 (EXP -> false .)
    null            reduce using rule 333 (EXP -> false .)
    primary         reduce using rule 333 (EXP -> false .)
    references      reduce using rule 333 (EXP -> false .)
    asc             reduce using rule 333 (EXP -> false .)
    desc            reduce using rule 333 (EXP -> false .)


state 65

    (331) EXP -> cadenaString .

    r_from          reduce using rule 331 (EXP -> cadenaString .)
    coma            reduce using rule 331 (EXP -> cadenaString .)
    where           reduce using rule 331 (EXP -> cadenaString .)
    group           reduce using rule 331 (EXP -> cadenaString .)
    having          reduce using rule 331 (EXP -> cadenaString .)
    union           reduce using rule 331 (EXP -> cadenaString .)
    intersect       reduce using rule 331 (EXP -> cadenaString .)
    except          reduce using rule 331 (EXP -> cadenaString .)
    order           reduce using rule 331 (EXP -> cadenaString .)
    limit           reduce using rule 331 (EXP -> cadenaString .)
    offset          reduce using rule 331 (EXP -> cadenaString .)
    ptcoma          reduce using rule 331 (EXP -> cadenaString .)
    mas             reduce using rule 331 (EXP -> cadenaString .)
    menos           reduce using rule 331 (EXP -> cadenaString .)
    multiplicacion  reduce using rule 331 (EXP -> cadenaString .)
    division        reduce using rule 331 (EXP -> cadenaString .)
    modulo          reduce using rule 331 (EXP -> cadenaString .)
    elevado         reduce using rule 331 (EXP -> cadenaString .)
    and             reduce using rule 331 (EXP -> cadenaString .)
    or              reduce using rule 331 (EXP -> cadenaString .)
    mayor           reduce using rule 331 (EXP -> cadenaString .)
    menor           reduce using rule 331 (EXP -> cadenaString .)
    mayor_igual     reduce using rule 331 (EXP -> cadenaString .)
    menor_igual     reduce using rule 331 (EXP -> cadenaString .)
    igual           reduce using rule 331 (EXP -> cadenaString .)
    diferente1      reduce using rule 331 (EXP -> cadenaString .)
    diferente2      reduce using rule 331 (EXP -> cadenaString .)
    between         reduce using rule 331 (EXP -> cadenaString .)
    is              reduce using rule 331 (EXP -> cadenaString .)
    isnull          reduce using rule 331 (EXP -> cadenaString .)
    notnull         reduce using rule 331 (EXP -> cadenaString .)
    as              reduce using rule 331 (EXP -> cadenaString .)
    cadenaString    reduce using rule 331 (EXP -> cadenaString .)
    id              reduce using rule 331 (EXP -> cadenaString .)
    cadena          reduce using rule 331 (EXP -> cadenaString .)
    in              reduce using rule 331 (EXP -> cadenaString .)
    not             reduce using rule 331 (EXP -> cadenaString .)
    like            reduce using rule 331 (EXP -> cadenaString .)
    then            reduce using rule 331 (EXP -> cadenaString .)
    when            reduce using rule 331 (EXP -> cadenaString .)
    parc            reduce using rule 331 (EXP -> cadenaString .)
    end             reduce using rule 331 (EXP -> cadenaString .)
    else            reduce using rule 331 (EXP -> cadenaString .)
    constraint      reduce using rule 331 (EXP -> cadenaString .)
    unique          reduce using rule 331 (EXP -> cadenaString .)
    check           reduce using rule 331 (EXP -> cadenaString .)
    default         reduce using rule 331 (EXP -> cadenaString .)
    null            reduce using rule 331 (EXP -> cadenaString .)
    primary         reduce using rule 331 (EXP -> cadenaString .)
    references      reduce using rule 331 (EXP -> cadenaString .)
    asc             reduce using rule 331 (EXP -> cadenaString .)
    desc            reduce using rule 331 (EXP -> cadenaString .)


state 66

    (322) EXP -> id . para LEXP parc
    (323) EXP -> id . para parc
    (334) EXP -> id .

    para            shift and go to state 151
    r_from          reduce using rule 334 (EXP -> id .)
    coma            reduce using rule 334 (EXP -> id .)
    where           reduce using rule 334 (EXP -> id .)
    group           reduce using rule 334 (EXP -> id .)
    having          reduce using rule 334 (EXP -> id .)
    union           reduce using rule 334 (EXP -> id .)
    intersect       reduce using rule 334 (EXP -> id .)
    except          reduce using rule 334 (EXP -> id .)
    order           reduce using rule 334 (EXP -> id .)
    limit           reduce using rule 334 (EXP -> id .)
    offset          reduce using rule 334 (EXP -> id .)
    ptcoma          reduce using rule 334 (EXP -> id .)
    mas             reduce using rule 334 (EXP -> id .)
    menos           reduce using rule 334 (EXP -> id .)
    multiplicacion  reduce using rule 334 (EXP -> id .)
    division        reduce using rule 334 (EXP -> id .)
    modulo          reduce using rule 334 (EXP -> id .)
    elevado         reduce using rule 334 (EXP -> id .)
    and             reduce using rule 334 (EXP -> id .)
    or              reduce using rule 334 (EXP -> id .)
    mayor           reduce using rule 334 (EXP -> id .)
    menor           reduce using rule 334 (EXP -> id .)
    mayor_igual     reduce using rule 334 (EXP -> id .)
    menor_igual     reduce using rule 334 (EXP -> id .)
    igual           reduce using rule 334 (EXP -> id .)
    diferente1      reduce using rule 334 (EXP -> id .)
    diferente2      reduce using rule 334 (EXP -> id .)
    between         reduce using rule 334 (EXP -> id .)
    is              reduce using rule 334 (EXP -> id .)
    isnull          reduce using rule 334 (EXP -> id .)
    notnull         reduce using rule 334 (EXP -> id .)
    as              reduce using rule 334 (EXP -> id .)
    cadenaString    reduce using rule 334 (EXP -> id .)
    id              reduce using rule 334 (EXP -> id .)
    cadena          reduce using rule 334 (EXP -> id .)
    in              reduce using rule 334 (EXP -> id .)
    not             reduce using rule 334 (EXP -> id .)
    like            reduce using rule 334 (EXP -> id .)
    then            reduce using rule 334 (EXP -> id .)
    when            reduce using rule 334 (EXP -> id .)
    parc            reduce using rule 334 (EXP -> id .)
    end             reduce using rule 334 (EXP -> id .)
    else            reduce using rule 334 (EXP -> id .)
    constraint      reduce using rule 334 (EXP -> id .)
    unique          reduce using rule 334 (EXP -> id .)
    check           reduce using rule 334 (EXP -> id .)
    default         reduce using rule 334 (EXP -> id .)
    null            reduce using rule 334 (EXP -> id .)
    primary         reduce using rule 334 (EXP -> id .)
    references      reduce using rule 334 (EXP -> id .)
    asc             reduce using rule 334 (EXP -> id .)
    desc            reduce using rule 334 (EXP -> id .)


state 67

    (330) EXP -> cadena .
    (341) EXP -> cadena . as TIPO

  ! shift/reduce conflict for as resolved as shift
    r_from          reduce using rule 330 (EXP -> cadena .)
    coma            reduce using rule 330 (EXP -> cadena .)
    where           reduce using rule 330 (EXP -> cadena .)
    group           reduce using rule 330 (EXP -> cadena .)
    having          reduce using rule 330 (EXP -> cadena .)
    union           reduce using rule 330 (EXP -> cadena .)
    intersect       reduce using rule 330 (EXP -> cadena .)
    except          reduce using rule 330 (EXP -> cadena .)
    order           reduce using rule 330 (EXP -> cadena .)
    limit           reduce using rule 330 (EXP -> cadena .)
    offset          reduce using rule 330 (EXP -> cadena .)
    ptcoma          reduce using rule 330 (EXP -> cadena .)
    mas             reduce using rule 330 (EXP -> cadena .)
    menos           reduce using rule 330 (EXP -> cadena .)
    multiplicacion  reduce using rule 330 (EXP -> cadena .)
    division        reduce using rule 330 (EXP -> cadena .)
    modulo          reduce using rule 330 (EXP -> cadena .)
    elevado         reduce using rule 330 (EXP -> cadena .)
    and             reduce using rule 330 (EXP -> cadena .)
    or              reduce using rule 330 (EXP -> cadena .)
    mayor           reduce using rule 330 (EXP -> cadena .)
    menor           reduce using rule 330 (EXP -> cadena .)
    mayor_igual     reduce using rule 330 (EXP -> cadena .)
    menor_igual     reduce using rule 330 (EXP -> cadena .)
    igual           reduce using rule 330 (EXP -> cadena .)
    diferente1      reduce using rule 330 (EXP -> cadena .)
    diferente2      reduce using rule 330 (EXP -> cadena .)
    between         reduce using rule 330 (EXP -> cadena .)
    is              reduce using rule 330 (EXP -> cadena .)
    isnull          reduce using rule 330 (EXP -> cadena .)
    notnull         reduce using rule 330 (EXP -> cadena .)
    cadenaString    reduce using rule 330 (EXP -> cadena .)
    id              reduce using rule 330 (EXP -> cadena .)
    cadena          reduce using rule 330 (EXP -> cadena .)
    in              reduce using rule 330 (EXP -> cadena .)
    not             reduce using rule 330 (EXP -> cadena .)
    like            reduce using rule 330 (EXP -> cadena .)
    then            reduce using rule 330 (EXP -> cadena .)
    when            reduce using rule 330 (EXP -> cadena .)
    parc            reduce using rule 330 (EXP -> cadena .)
    end             reduce using rule 330 (EXP -> cadena .)
    else            reduce using rule 330 (EXP -> cadena .)
    constraint      reduce using rule 330 (EXP -> cadena .)
    unique          reduce using rule 330 (EXP -> cadena .)
    check           reduce using rule 330 (EXP -> cadena .)
    default         reduce using rule 330 (EXP -> cadena .)
    null            reduce using rule 330 (EXP -> cadena .)
    primary         reduce using rule 330 (EXP -> cadena .)
    references      reduce using rule 330 (EXP -> cadena .)
    asc             reduce using rule 330 (EXP -> cadena .)
    desc            reduce using rule 330 (EXP -> cadena .)
    as              shift and go to state 152

  ! as              [ reduce using rule 330 (EXP -> cadena .) ]


state 68

    (320) EXP -> para . EXP parc
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 153
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 69

    (319) EXP -> SELECT .

    r_from          reduce using rule 319 (EXP -> SELECT .)
    coma            reduce using rule 319 (EXP -> SELECT .)
    where           reduce using rule 319 (EXP -> SELECT .)
    group           reduce using rule 319 (EXP -> SELECT .)
    having          reduce using rule 319 (EXP -> SELECT .)
    union           reduce using rule 319 (EXP -> SELECT .)
    intersect       reduce using rule 319 (EXP -> SELECT .)
    except          reduce using rule 319 (EXP -> SELECT .)
    order           reduce using rule 319 (EXP -> SELECT .)
    limit           reduce using rule 319 (EXP -> SELECT .)
    offset          reduce using rule 319 (EXP -> SELECT .)
    ptcoma          reduce using rule 319 (EXP -> SELECT .)
    mas             reduce using rule 319 (EXP -> SELECT .)
    menos           reduce using rule 319 (EXP -> SELECT .)
    multiplicacion  reduce using rule 319 (EXP -> SELECT .)
    division        reduce using rule 319 (EXP -> SELECT .)
    modulo          reduce using rule 319 (EXP -> SELECT .)
    elevado         reduce using rule 319 (EXP -> SELECT .)
    and             reduce using rule 319 (EXP -> SELECT .)
    or              reduce using rule 319 (EXP -> SELECT .)
    mayor           reduce using rule 319 (EXP -> SELECT .)
    menor           reduce using rule 319 (EXP -> SELECT .)
    mayor_igual     reduce using rule 319 (EXP -> SELECT .)
    menor_igual     reduce using rule 319 (EXP -> SELECT .)
    igual           reduce using rule 319 (EXP -> SELECT .)
    diferente1      reduce using rule 319 (EXP -> SELECT .)
    diferente2      reduce using rule 319 (EXP -> SELECT .)
    between         reduce using rule 319 (EXP -> SELECT .)
    is              reduce using rule 319 (EXP -> SELECT .)
    isnull          reduce using rule 319 (EXP -> SELECT .)
    notnull         reduce using rule 319 (EXP -> SELECT .)
    as              reduce using rule 319 (EXP -> SELECT .)
    cadenaString    reduce using rule 319 (EXP -> SELECT .)
    id              reduce using rule 319 (EXP -> SELECT .)
    cadena          reduce using rule 319 (EXP -> SELECT .)
    in              reduce using rule 319 (EXP -> SELECT .)
    not             reduce using rule 319 (EXP -> SELECT .)
    like            reduce using rule 319 (EXP -> SELECT .)
    then            reduce using rule 319 (EXP -> SELECT .)
    when            reduce using rule 319 (EXP -> SELECT .)
    parc            reduce using rule 319 (EXP -> SELECT .)
    end             reduce using rule 319 (EXP -> SELECT .)
    else            reduce using rule 319 (EXP -> SELECT .)
    constraint      reduce using rule 319 (EXP -> SELECT .)
    unique          reduce using rule 319 (EXP -> SELECT .)
    check           reduce using rule 319 (EXP -> SELECT .)
    default         reduce using rule 319 (EXP -> SELECT .)
    null            reduce using rule 319 (EXP -> SELECT .)
    primary         reduce using rule 319 (EXP -> SELECT .)
    references      reduce using rule 319 (EXP -> SELECT .)
    asc             reduce using rule 319 (EXP -> SELECT .)
    desc            reduce using rule 319 (EXP -> SELECT .)


state 70

    (321) EXP -> CASE .

    r_from          reduce using rule 321 (EXP -> CASE .)
    coma            reduce using rule 321 (EXP -> CASE .)
    where           reduce using rule 321 (EXP -> CASE .)
    group           reduce using rule 321 (EXP -> CASE .)
    having          reduce using rule 321 (EXP -> CASE .)
    union           reduce using rule 321 (EXP -> CASE .)
    intersect       reduce using rule 321 (EXP -> CASE .)
    except          reduce using rule 321 (EXP -> CASE .)
    order           reduce using rule 321 (EXP -> CASE .)
    limit           reduce using rule 321 (EXP -> CASE .)
    offset          reduce using rule 321 (EXP -> CASE .)
    ptcoma          reduce using rule 321 (EXP -> CASE .)
    mas             reduce using rule 321 (EXP -> CASE .)
    menos           reduce using rule 321 (EXP -> CASE .)
    multiplicacion  reduce using rule 321 (EXP -> CASE .)
    division        reduce using rule 321 (EXP -> CASE .)
    modulo          reduce using rule 321 (EXP -> CASE .)
    elevado         reduce using rule 321 (EXP -> CASE .)
    and             reduce using rule 321 (EXP -> CASE .)
    or              reduce using rule 321 (EXP -> CASE .)
    mayor           reduce using rule 321 (EXP -> CASE .)
    menor           reduce using rule 321 (EXP -> CASE .)
    mayor_igual     reduce using rule 321 (EXP -> CASE .)
    menor_igual     reduce using rule 321 (EXP -> CASE .)
    igual           reduce using rule 321 (EXP -> CASE .)
    diferente1      reduce using rule 321 (EXP -> CASE .)
    diferente2      reduce using rule 321 (EXP -> CASE .)
    between         reduce using rule 321 (EXP -> CASE .)
    is              reduce using rule 321 (EXP -> CASE .)
    isnull          reduce using rule 321 (EXP -> CASE .)
    notnull         reduce using rule 321 (EXP -> CASE .)
    as              reduce using rule 321 (EXP -> CASE .)
    cadenaString    reduce using rule 321 (EXP -> CASE .)
    id              reduce using rule 321 (EXP -> CASE .)
    cadena          reduce using rule 321 (EXP -> CASE .)
    in              reduce using rule 321 (EXP -> CASE .)
    not             reduce using rule 321 (EXP -> CASE .)
    like            reduce using rule 321 (EXP -> CASE .)
    then            reduce using rule 321 (EXP -> CASE .)
    when            reduce using rule 321 (EXP -> CASE .)
    parc            reduce using rule 321 (EXP -> CASE .)
    end             reduce using rule 321 (EXP -> CASE .)
    else            reduce using rule 321 (EXP -> CASE .)
    constraint      reduce using rule 321 (EXP -> CASE .)
    unique          reduce using rule 321 (EXP -> CASE .)
    check           reduce using rule 321 (EXP -> CASE .)
    default         reduce using rule 321 (EXP -> CASE .)
    null            reduce using rule 321 (EXP -> CASE .)
    primary         reduce using rule 321 (EXP -> CASE .)
    references      reduce using rule 321 (EXP -> CASE .)
    asc             reduce using rule 321 (EXP -> CASE .)
    desc            reduce using rule 321 (EXP -> CASE .)


state 71

    (324) EXP -> any . para LEXP parc

    para            shift and go to state 154


state 72

    (325) EXP -> all . para LEXP parc

    para            shift and go to state 155


state 73

    (326) EXP -> some . para LEXP parc

    para            shift and go to state 156


state 74

    (327) EXP -> extract . para FIELDS r_from timestamp cadena parc

    para            shift and go to state 157


state 75

    (339) EXP -> timestamp . cadena

    cadena          shift and go to state 158


state 76

    (328) EXP -> int .

    r_from          reduce using rule 328 (EXP -> int .)
    coma            reduce using rule 328 (EXP -> int .)
    where           reduce using rule 328 (EXP -> int .)
    group           reduce using rule 328 (EXP -> int .)
    having          reduce using rule 328 (EXP -> int .)
    union           reduce using rule 328 (EXP -> int .)
    intersect       reduce using rule 328 (EXP -> int .)
    except          reduce using rule 328 (EXP -> int .)
    order           reduce using rule 328 (EXP -> int .)
    limit           reduce using rule 328 (EXP -> int .)
    offset          reduce using rule 328 (EXP -> int .)
    ptcoma          reduce using rule 328 (EXP -> int .)
    mas             reduce using rule 328 (EXP -> int .)
    menos           reduce using rule 328 (EXP -> int .)
    multiplicacion  reduce using rule 328 (EXP -> int .)
    division        reduce using rule 328 (EXP -> int .)
    modulo          reduce using rule 328 (EXP -> int .)
    elevado         reduce using rule 328 (EXP -> int .)
    and             reduce using rule 328 (EXP -> int .)
    or              reduce using rule 328 (EXP -> int .)
    mayor           reduce using rule 328 (EXP -> int .)
    menor           reduce using rule 328 (EXP -> int .)
    mayor_igual     reduce using rule 328 (EXP -> int .)
    menor_igual     reduce using rule 328 (EXP -> int .)
    igual           reduce using rule 328 (EXP -> int .)
    diferente1      reduce using rule 328 (EXP -> int .)
    diferente2      reduce using rule 328 (EXP -> int .)
    between         reduce using rule 328 (EXP -> int .)
    is              reduce using rule 328 (EXP -> int .)
    isnull          reduce using rule 328 (EXP -> int .)
    notnull         reduce using rule 328 (EXP -> int .)
    as              reduce using rule 328 (EXP -> int .)
    cadenaString    reduce using rule 328 (EXP -> int .)
    id              reduce using rule 328 (EXP -> int .)
    cadena          reduce using rule 328 (EXP -> int .)
    in              reduce using rule 328 (EXP -> int .)
    not             reduce using rule 328 (EXP -> int .)
    like            reduce using rule 328 (EXP -> int .)
    then            reduce using rule 328 (EXP -> int .)
    when            reduce using rule 328 (EXP -> int .)
    parc            reduce using rule 328 (EXP -> int .)
    end             reduce using rule 328 (EXP -> int .)
    else            reduce using rule 328 (EXP -> int .)
    constraint      reduce using rule 328 (EXP -> int .)
    unique          reduce using rule 328 (EXP -> int .)
    check           reduce using rule 328 (EXP -> int .)
    default         reduce using rule 328 (EXP -> int .)
    null            reduce using rule 328 (EXP -> int .)
    primary         reduce using rule 328 (EXP -> int .)
    references      reduce using rule 328 (EXP -> int .)
    asc             reduce using rule 328 (EXP -> int .)
    desc            reduce using rule 328 (EXP -> int .)


state 77

    (329) EXP -> decimales .

    r_from          reduce using rule 329 (EXP -> decimales .)
    coma            reduce using rule 329 (EXP -> decimales .)
    where           reduce using rule 329 (EXP -> decimales .)
    group           reduce using rule 329 (EXP -> decimales .)
    having          reduce using rule 329 (EXP -> decimales .)
    union           reduce using rule 329 (EXP -> decimales .)
    intersect       reduce using rule 329 (EXP -> decimales .)
    except          reduce using rule 329 (EXP -> decimales .)
    order           reduce using rule 329 (EXP -> decimales .)
    limit           reduce using rule 329 (EXP -> decimales .)
    offset          reduce using rule 329 (EXP -> decimales .)
    ptcoma          reduce using rule 329 (EXP -> decimales .)
    mas             reduce using rule 329 (EXP -> decimales .)
    menos           reduce using rule 329 (EXP -> decimales .)
    multiplicacion  reduce using rule 329 (EXP -> decimales .)
    division        reduce using rule 329 (EXP -> decimales .)
    modulo          reduce using rule 329 (EXP -> decimales .)
    elevado         reduce using rule 329 (EXP -> decimales .)
    and             reduce using rule 329 (EXP -> decimales .)
    or              reduce using rule 329 (EXP -> decimales .)
    mayor           reduce using rule 329 (EXP -> decimales .)
    menor           reduce using rule 329 (EXP -> decimales .)
    mayor_igual     reduce using rule 329 (EXP -> decimales .)
    menor_igual     reduce using rule 329 (EXP -> decimales .)
    igual           reduce using rule 329 (EXP -> decimales .)
    diferente1      reduce using rule 329 (EXP -> decimales .)
    diferente2      reduce using rule 329 (EXP -> decimales .)
    between         reduce using rule 329 (EXP -> decimales .)
    is              reduce using rule 329 (EXP -> decimales .)
    isnull          reduce using rule 329 (EXP -> decimales .)
    notnull         reduce using rule 329 (EXP -> decimales .)
    as              reduce using rule 329 (EXP -> decimales .)
    cadenaString    reduce using rule 329 (EXP -> decimales .)
    id              reduce using rule 329 (EXP -> decimales .)
    cadena          reduce using rule 329 (EXP -> decimales .)
    in              reduce using rule 329 (EXP -> decimales .)
    not             reduce using rule 329 (EXP -> decimales .)
    like            reduce using rule 329 (EXP -> decimales .)
    then            reduce using rule 329 (EXP -> decimales .)
    when            reduce using rule 329 (EXP -> decimales .)
    parc            reduce using rule 329 (EXP -> decimales .)
    end             reduce using rule 329 (EXP -> decimales .)
    else            reduce using rule 329 (EXP -> decimales .)
    constraint      reduce using rule 329 (EXP -> decimales .)
    unique          reduce using rule 329 (EXP -> decimales .)
    check           reduce using rule 329 (EXP -> decimales .)
    default         reduce using rule 329 (EXP -> decimales .)
    null            reduce using rule 329 (EXP -> decimales .)
    primary         reduce using rule 329 (EXP -> decimales .)
    references      reduce using rule 329 (EXP -> decimales .)
    asc             reduce using rule 329 (EXP -> decimales .)
    desc            reduce using rule 329 (EXP -> decimales .)


state 78

    (337) EXP -> current_time .

    r_from          reduce using rule 337 (EXP -> current_time .)
    coma            reduce using rule 337 (EXP -> current_time .)
    where           reduce using rule 337 (EXP -> current_time .)
    group           reduce using rule 337 (EXP -> current_time .)
    having          reduce using rule 337 (EXP -> current_time .)
    union           reduce using rule 337 (EXP -> current_time .)
    intersect       reduce using rule 337 (EXP -> current_time .)
    except          reduce using rule 337 (EXP -> current_time .)
    order           reduce using rule 337 (EXP -> current_time .)
    limit           reduce using rule 337 (EXP -> current_time .)
    offset          reduce using rule 337 (EXP -> current_time .)
    ptcoma          reduce using rule 337 (EXP -> current_time .)
    mas             reduce using rule 337 (EXP -> current_time .)
    menos           reduce using rule 337 (EXP -> current_time .)
    multiplicacion  reduce using rule 337 (EXP -> current_time .)
    division        reduce using rule 337 (EXP -> current_time .)
    modulo          reduce using rule 337 (EXP -> current_time .)
    elevado         reduce using rule 337 (EXP -> current_time .)
    and             reduce using rule 337 (EXP -> current_time .)
    or              reduce using rule 337 (EXP -> current_time .)
    mayor           reduce using rule 337 (EXP -> current_time .)
    menor           reduce using rule 337 (EXP -> current_time .)
    mayor_igual     reduce using rule 337 (EXP -> current_time .)
    menor_igual     reduce using rule 337 (EXP -> current_time .)
    igual           reduce using rule 337 (EXP -> current_time .)
    diferente1      reduce using rule 337 (EXP -> current_time .)
    diferente2      reduce using rule 337 (EXP -> current_time .)
    between         reduce using rule 337 (EXP -> current_time .)
    is              reduce using rule 337 (EXP -> current_time .)
    isnull          reduce using rule 337 (EXP -> current_time .)
    notnull         reduce using rule 337 (EXP -> current_time .)
    as              reduce using rule 337 (EXP -> current_time .)
    cadenaString    reduce using rule 337 (EXP -> current_time .)
    id              reduce using rule 337 (EXP -> current_time .)
    cadena          reduce using rule 337 (EXP -> current_time .)
    in              reduce using rule 337 (EXP -> current_time .)
    not             reduce using rule 337 (EXP -> current_time .)
    like            reduce using rule 337 (EXP -> current_time .)
    then            reduce using rule 337 (EXP -> current_time .)
    when            reduce using rule 337 (EXP -> current_time .)
    parc            reduce using rule 337 (EXP -> current_time .)
    end             reduce using rule 337 (EXP -> current_time .)
    else            reduce using rule 337 (EXP -> current_time .)
    constraint      reduce using rule 337 (EXP -> current_time .)
    unique          reduce using rule 337 (EXP -> current_time .)
    check           reduce using rule 337 (EXP -> current_time .)
    default         reduce using rule 337 (EXP -> current_time .)
    null            reduce using rule 337 (EXP -> current_time .)
    primary         reduce using rule 337 (EXP -> current_time .)
    references      reduce using rule 337 (EXP -> current_time .)
    asc             reduce using rule 337 (EXP -> current_time .)
    desc            reduce using rule 337 (EXP -> current_time .)


state 79

    (338) EXP -> current_date .

    r_from          reduce using rule 338 (EXP -> current_date .)
    coma            reduce using rule 338 (EXP -> current_date .)
    where           reduce using rule 338 (EXP -> current_date .)
    group           reduce using rule 338 (EXP -> current_date .)
    having          reduce using rule 338 (EXP -> current_date .)
    union           reduce using rule 338 (EXP -> current_date .)
    intersect       reduce using rule 338 (EXP -> current_date .)
    except          reduce using rule 338 (EXP -> current_date .)
    order           reduce using rule 338 (EXP -> current_date .)
    limit           reduce using rule 338 (EXP -> current_date .)
    offset          reduce using rule 338 (EXP -> current_date .)
    ptcoma          reduce using rule 338 (EXP -> current_date .)
    mas             reduce using rule 338 (EXP -> current_date .)
    menos           reduce using rule 338 (EXP -> current_date .)
    multiplicacion  reduce using rule 338 (EXP -> current_date .)
    division        reduce using rule 338 (EXP -> current_date .)
    modulo          reduce using rule 338 (EXP -> current_date .)
    elevado         reduce using rule 338 (EXP -> current_date .)
    and             reduce using rule 338 (EXP -> current_date .)
    or              reduce using rule 338 (EXP -> current_date .)
    mayor           reduce using rule 338 (EXP -> current_date .)
    menor           reduce using rule 338 (EXP -> current_date .)
    mayor_igual     reduce using rule 338 (EXP -> current_date .)
    menor_igual     reduce using rule 338 (EXP -> current_date .)
    igual           reduce using rule 338 (EXP -> current_date .)
    diferente1      reduce using rule 338 (EXP -> current_date .)
    diferente2      reduce using rule 338 (EXP -> current_date .)
    between         reduce using rule 338 (EXP -> current_date .)
    is              reduce using rule 338 (EXP -> current_date .)
    isnull          reduce using rule 338 (EXP -> current_date .)
    notnull         reduce using rule 338 (EXP -> current_date .)
    as              reduce using rule 338 (EXP -> current_date .)
    cadenaString    reduce using rule 338 (EXP -> current_date .)
    id              reduce using rule 338 (EXP -> current_date .)
    cadena          reduce using rule 338 (EXP -> current_date .)
    in              reduce using rule 338 (EXP -> current_date .)
    not             reduce using rule 338 (EXP -> current_date .)
    like            reduce using rule 338 (EXP -> current_date .)
    then            reduce using rule 338 (EXP -> current_date .)
    when            reduce using rule 338 (EXP -> current_date .)
    parc            reduce using rule 338 (EXP -> current_date .)
    end             reduce using rule 338 (EXP -> current_date .)
    else            reduce using rule 338 (EXP -> current_date .)
    constraint      reduce using rule 338 (EXP -> current_date .)
    unique          reduce using rule 338 (EXP -> current_date .)
    check           reduce using rule 338 (EXP -> current_date .)
    default         reduce using rule 338 (EXP -> current_date .)
    null            reduce using rule 338 (EXP -> current_date .)
    primary         reduce using rule 338 (EXP -> current_date .)
    references      reduce using rule 338 (EXP -> current_date .)
    asc             reduce using rule 338 (EXP -> current_date .)
    desc            reduce using rule 338 (EXP -> current_date .)


state 80

    (340) EXP -> interval . cadena

    cadena          shift and go to state 159


state 81

    (342) EXP -> default .

    r_from          reduce using rule 342 (EXP -> default .)
    coma            reduce using rule 342 (EXP -> default .)
    where           reduce using rule 342 (EXP -> default .)
    group           reduce using rule 342 (EXP -> default .)
    having          reduce using rule 342 (EXP -> default .)
    union           reduce using rule 342 (EXP -> default .)
    intersect       reduce using rule 342 (EXP -> default .)
    except          reduce using rule 342 (EXP -> default .)
    order           reduce using rule 342 (EXP -> default .)
    limit           reduce using rule 342 (EXP -> default .)
    offset          reduce using rule 342 (EXP -> default .)
    ptcoma          reduce using rule 342 (EXP -> default .)
    mas             reduce using rule 342 (EXP -> default .)
    menos           reduce using rule 342 (EXP -> default .)
    multiplicacion  reduce using rule 342 (EXP -> default .)
    division        reduce using rule 342 (EXP -> default .)
    modulo          reduce using rule 342 (EXP -> default .)
    elevado         reduce using rule 342 (EXP -> default .)
    and             reduce using rule 342 (EXP -> default .)
    or              reduce using rule 342 (EXP -> default .)
    mayor           reduce using rule 342 (EXP -> default .)
    menor           reduce using rule 342 (EXP -> default .)
    mayor_igual     reduce using rule 342 (EXP -> default .)
    menor_igual     reduce using rule 342 (EXP -> default .)
    igual           reduce using rule 342 (EXP -> default .)
    diferente1      reduce using rule 342 (EXP -> default .)
    diferente2      reduce using rule 342 (EXP -> default .)
    between         reduce using rule 342 (EXP -> default .)
    is              reduce using rule 342 (EXP -> default .)
    isnull          reduce using rule 342 (EXP -> default .)
    notnull         reduce using rule 342 (EXP -> default .)
    as              reduce using rule 342 (EXP -> default .)
    cadenaString    reduce using rule 342 (EXP -> default .)
    id              reduce using rule 342 (EXP -> default .)
    cadena          reduce using rule 342 (EXP -> default .)
    in              reduce using rule 342 (EXP -> default .)
    not             reduce using rule 342 (EXP -> default .)
    like            reduce using rule 342 (EXP -> default .)
    then            reduce using rule 342 (EXP -> default .)
    when            reduce using rule 342 (EXP -> default .)
    parc            reduce using rule 342 (EXP -> default .)
    end             reduce using rule 342 (EXP -> default .)
    else            reduce using rule 342 (EXP -> default .)
    constraint      reduce using rule 342 (EXP -> default .)
    unique          reduce using rule 342 (EXP -> default .)
    check           reduce using rule 342 (EXP -> default .)
    default         reduce using rule 342 (EXP -> default .)
    null            reduce using rule 342 (EXP -> default .)
    primary         reduce using rule 342 (EXP -> default .)
    references      reduce using rule 342 (EXP -> default .)
    asc             reduce using rule 342 (EXP -> default .)
    desc            reduce using rule 342 (EXP -> default .)


state 82

    (343) EXP -> idPunto .

    r_from          reduce using rule 343 (EXP -> idPunto .)
    coma            reduce using rule 343 (EXP -> idPunto .)
    where           reduce using rule 343 (EXP -> idPunto .)
    group           reduce using rule 343 (EXP -> idPunto .)
    having          reduce using rule 343 (EXP -> idPunto .)
    union           reduce using rule 343 (EXP -> idPunto .)
    intersect       reduce using rule 343 (EXP -> idPunto .)
    except          reduce using rule 343 (EXP -> idPunto .)
    order           reduce using rule 343 (EXP -> idPunto .)
    limit           reduce using rule 343 (EXP -> idPunto .)
    offset          reduce using rule 343 (EXP -> idPunto .)
    ptcoma          reduce using rule 343 (EXP -> idPunto .)
    mas             reduce using rule 343 (EXP -> idPunto .)
    menos           reduce using rule 343 (EXP -> idPunto .)
    multiplicacion  reduce using rule 343 (EXP -> idPunto .)
    division        reduce using rule 343 (EXP -> idPunto .)
    modulo          reduce using rule 343 (EXP -> idPunto .)
    elevado         reduce using rule 343 (EXP -> idPunto .)
    and             reduce using rule 343 (EXP -> idPunto .)
    or              reduce using rule 343 (EXP -> idPunto .)
    mayor           reduce using rule 343 (EXP -> idPunto .)
    menor           reduce using rule 343 (EXP -> idPunto .)
    mayor_igual     reduce using rule 343 (EXP -> idPunto .)
    menor_igual     reduce using rule 343 (EXP -> idPunto .)
    igual           reduce using rule 343 (EXP -> idPunto .)
    diferente1      reduce using rule 343 (EXP -> idPunto .)
    diferente2      reduce using rule 343 (EXP -> idPunto .)
    between         reduce using rule 343 (EXP -> idPunto .)
    is              reduce using rule 343 (EXP -> idPunto .)
    isnull          reduce using rule 343 (EXP -> idPunto .)
    notnull         reduce using rule 343 (EXP -> idPunto .)
    as              reduce using rule 343 (EXP -> idPunto .)
    cadenaString    reduce using rule 343 (EXP -> idPunto .)
    id              reduce using rule 343 (EXP -> idPunto .)
    cadena          reduce using rule 343 (EXP -> idPunto .)
    in              reduce using rule 343 (EXP -> idPunto .)
    not             reduce using rule 343 (EXP -> idPunto .)
    like            reduce using rule 343 (EXP -> idPunto .)
    then            reduce using rule 343 (EXP -> idPunto .)
    when            reduce using rule 343 (EXP -> idPunto .)
    parc            reduce using rule 343 (EXP -> idPunto .)
    end             reduce using rule 343 (EXP -> idPunto .)
    else            reduce using rule 343 (EXP -> idPunto .)
    constraint      reduce using rule 343 (EXP -> idPunto .)
    unique          reduce using rule 343 (EXP -> idPunto .)
    check           reduce using rule 343 (EXP -> idPunto .)
    default         reduce using rule 343 (EXP -> idPunto .)
    null            reduce using rule 343 (EXP -> idPunto .)
    primary         reduce using rule 343 (EXP -> idPunto .)
    references      reduce using rule 343 (EXP -> idPunto .)
    asc             reduce using rule 343 (EXP -> idPunto .)
    desc            reduce using rule 343 (EXP -> idPunto .)


state 83

    (160) CREATETABLE -> create table . id para LDEF parc ptcoma
    (161) CREATETABLE -> create table . id para LDEF parc HERENCIA ptcoma

    id              shift and go to state 160


state 84

    (191) CREATETYPE -> create type . id as enum para LEXP parc

    id              shift and go to state 161


state 85

    (143) CREATEDB -> create RD . if not exist id
    (144) CREATEDB -> create RD . if not exist id OPCCDB
    (145) CREATEDB -> create RD . id
    (146) CREATEDB -> create RD . id OPCCDB

    if              shift and go to state 162
    id              shift and go to state 163


state 86

    (47) CREATEINDEX -> create index . id on id para LEXP parc
    (49) CREATEINDEX -> create index . id on id using hash para LEXP parc
    (50) CREATEINDEX -> create index . id on id para id ORDEN parc
    (51) CREATEINDEX -> create index . id on id para id id ORDEN parc
    (52) CREATEINDEX -> create index . id on id para id id parc

    id              shift and go to state 164


state 87

    (48) CREATEINDEX -> create unique . index id on id para LEXP parc

    index           shift and go to state 165


state 88

    (31) PROCEDIMIENTOS -> create procedure . id para LPARAM parc LENGUAJE LCONTENIDOP
    (32) PROCEDIMIENTOS -> create procedure . id para parc LENGUAJE LCONTENIDOP
    (33) PROCEDIMIENTOS -> create procedure . id para LPARAM parc LCONTENIDOP LENGUAJE
    (34) PROCEDIMIENTOS -> create procedure . id para parc LCONTENIDOP LENGUAJE

    id              shift and go to state 166


state 89

    (25) FUNCIONES -> create function . id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP
    (26) FUNCIONES -> create function . id para parc RETURNP LENGUAJE LCONTENIDOP
    (27) FUNCIONES -> create function . id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE
    (28) FUNCIONES -> create function . id para parc RETURNP LCONTENIDOP LENGUAJE

    id              shift and go to state 167


state 90

    (150) RD -> or . replace databases

    replace         shift and go to state 168


state 91

    (151) RD -> databases .

    if              reduce using rule 151 (RD -> databases .)
    id              reduce using rule 151 (RD -> databases .)


state 92

    (220) UPDATE -> update id . set LCAMPOS WHERE

    set             shift and go to state 169


state 93

    (223) DELETE -> delete r_from . id WHERE

    id              shift and go to state 170


state 94

    (121) ALTER -> alter databases . id rename to id
    (122) ALTER -> alter databases . id owner to id

    id              shift and go to state 171


state 95

    (123) ALTER -> alter table . id LOP

    id              shift and go to state 172


state 96

    (116) DROP -> drop all . para parc

    para            shift and go to state 173


state 97

    (117) DROP -> drop table . id

    id              shift and go to state 174


state 98

    (118) DROP -> drop index . id

    id              shift and go to state 175


state 99

    (119) DROP -> drop databases . if exist id
    (120) DROP -> drop databases . id

    if              shift and go to state 176
    id              shift and go to state 177


state 100

    (73) CONDICIONIF -> if EXP . then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> if EXP . then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> if EXP . then LISTACONTENIDO end if
    (76) CONDICIONIF -> if EXP . then LISTACONTENIDO LELIF ELSEF end if
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    then            shift and go to state 178
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    and             shift and go to state 128
    or              shift and go to state 129
    mayor           shift and go to state 130
    menor           shift and go to state 131
    mayor_igual     shift and go to state 132
    menor_igual     shift and go to state 133
    igual           shift and go to state 134
    diferente1      shift and go to state 135
    diferente2      shift and go to state 136
    between         shift and go to state 137
    is              shift and go to state 138
    isnull          shift and go to state 140
    notnull         shift and go to state 141
    as              shift and go to state 142
    cadenaString    shift and go to state 143
    id              shift and go to state 144
    cadena          shift and go to state 145
    in              shift and go to state 146
    not             shift and go to state 139
    like            shift and go to state 147


state 101

    (114) INSERT -> insert into . id values para LEXP parc
    (115) INSERT -> insert into . id para LEXP parc values para LEXP parc

    id              shift and go to state 179


state 102

    (80) CASE -> case LEXP . LISTAWHEN ELSEF end case
    (81) CASE -> case LEXP . LISTAWHEN end case
    (226) LEXP -> LEXP . coma EXP
    (109) LISTAWHEN -> . LISTAWHEN WHEN
    (110) LISTAWHEN -> . WHEN
    (111) WHEN -> . when LEXP then LISTACONTENIDO
    (112) WHEN -> . when LEXP then LEXP

    coma            shift and go to state 121
    when            shift and go to state 105

    LISTAWHEN                      shift and go to state 180
    WHEN                           shift and go to state 104

state 103

    (82) CASE -> case LISTAWHEN . ELSE end
    (83) CASE -> case LISTAWHEN . end
    (109) LISTAWHEN -> LISTAWHEN . WHEN
    (113) ELSE -> . else LEXP
    (111) WHEN -> . when LEXP then LISTACONTENIDO
    (112) WHEN -> . when LEXP then LEXP

    end             shift and go to state 182
    else            shift and go to state 184
    when            shift and go to state 105

    ELSE                           shift and go to state 181
    WHEN                           shift and go to state 183

state 104

    (110) LISTAWHEN -> WHEN .

    end             reduce using rule 110 (LISTAWHEN -> WHEN .)
    else            reduce using rule 110 (LISTAWHEN -> WHEN .)
    when            reduce using rule 110 (LISTAWHEN -> WHEN .)


state 105

    (111) WHEN -> when . LEXP then LISTACONTENIDO
    (112) WHEN -> when . LEXP then LEXP
    (226) LEXP -> . LEXP coma EXP
    (227) LEXP -> . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 185
    EXP                            shift and go to state 57
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 106

    (140) SHOWDB -> show dbs .

    ptcoma          reduce using rule 140 (SHOWDB -> show dbs .)


state 107

    (141) SHOW -> show tables . para id parc

    para            shift and go to state 186


state 108

    (142) SHOW -> show collection . para parc

    para            shift and go to state 187


state 109

    (30) CALLPROCEDURE -> execute id . para parc

    para            shift and go to state 188


state 110

    (16) instruccion -> use id ptcoma .

    use             reduce using rule 16 (instruccion -> use id ptcoma .)
    select          reduce using rule 16 (instruccion -> use id ptcoma .)
    create          reduce using rule 16 (instruccion -> use id ptcoma .)
    update          reduce using rule 16 (instruccion -> use id ptcoma .)
    delete          reduce using rule 16 (instruccion -> use id ptcoma .)
    alter           reduce using rule 16 (instruccion -> use id ptcoma .)
    drop            reduce using rule 16 (instruccion -> use id ptcoma .)
    insert          reduce using rule 16 (instruccion -> use id ptcoma .)
    case            reduce using rule 16 (instruccion -> use id ptcoma .)
    show            reduce using rule 16 (instruccion -> use id ptcoma .)
    id              reduce using rule 16 (instruccion -> use id ptcoma .)
    if              reduce using rule 16 (instruccion -> use id ptcoma .)
    execute         reduce using rule 16 (instruccion -> use id ptcoma .)
    $end            reduce using rule 16 (instruccion -> use id ptcoma .)


state 111

    (71) ASIGNACION -> id dospuntos igual . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 189
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 112

    (72) ASIGNACION -> id igual EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    ptcoma          reduce using rule 72 (ASIGNACION -> id igual EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    and             shift and go to state 128
    or              shift and go to state 129
    mayor           shift and go to state 130
    menor           shift and go to state 131
    mayor_igual     shift and go to state 132
    menor_igual     shift and go to state 133
    igual           shift and go to state 134
    diferente1      shift and go to state 135
    diferente2      shift and go to state 136
    between         shift and go to state 137
    is              shift and go to state 138
    isnull          shift and go to state 140
    notnull         shift and go to state 141
    as              shift and go to state 142
    cadenaString    shift and go to state 143
    id              shift and go to state 144
    cadena          shift and go to state 145
    in              shift and go to state 146
    not             shift and go to state 139
    like            shift and go to state 147


state 113

    (18) instruccion -> CREATEINDEX WHERE ptcoma .

    use             reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    select          reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    create          reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    update          reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    delete          reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    alter           reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    drop            reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    insert          reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    case            reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    show            reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    id              reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    if              reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    execute         reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    $end            reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)


state 114

    (203) WHERE -> where EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    ptcoma          reduce using rule 203 (WHERE -> where EXP .)
    r_from          reduce using rule 203 (WHERE -> where EXP .)
    coma            reduce using rule 203 (WHERE -> where EXP .)
    where           reduce using rule 203 (WHERE -> where EXP .)
    group           reduce using rule 203 (WHERE -> where EXP .)
    having          reduce using rule 203 (WHERE -> where EXP .)
    union           reduce using rule 203 (WHERE -> where EXP .)
    intersect       reduce using rule 203 (WHERE -> where EXP .)
    except          reduce using rule 203 (WHERE -> where EXP .)
    order           reduce using rule 203 (WHERE -> where EXP .)
    limit           reduce using rule 203 (WHERE -> where EXP .)
    offset          reduce using rule 203 (WHERE -> where EXP .)
    then            reduce using rule 203 (WHERE -> where EXP .)
    when            reduce using rule 203 (WHERE -> where EXP .)
    parc            reduce using rule 203 (WHERE -> where EXP .)
    end             reduce using rule 203 (WHERE -> where EXP .)
    else            reduce using rule 203 (WHERE -> where EXP .)
    constraint      reduce using rule 203 (WHERE -> where EXP .)
    unique          reduce using rule 203 (WHERE -> where EXP .)
    check           reduce using rule 203 (WHERE -> where EXP .)
    default         reduce using rule 203 (WHERE -> where EXP .)
    null            reduce using rule 203 (WHERE -> where EXP .)
    primary         reduce using rule 203 (WHERE -> where EXP .)
    references      reduce using rule 203 (WHERE -> where EXP .)
    asc             reduce using rule 203 (WHERE -> where EXP .)
    desc            reduce using rule 203 (WHERE -> where EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    and             shift and go to state 128
    or              shift and go to state 129
    mayor           shift and go to state 130
    menor           shift and go to state 131
    mayor_igual     shift and go to state 132
    menor_igual     shift and go to state 133
    igual           shift and go to state 134
    diferente1      shift and go to state 135
    diferente2      shift and go to state 136
    between         shift and go to state 137
    is              shift and go to state 138
    isnull          shift and go to state 140
    notnull         shift and go to state 141
    as              shift and go to state 142
    cadenaString    shift and go to state 143
    id              shift and go to state 144
    cadena          shift and go to state 145
    in              shift and go to state 146
    not             shift and go to state 139
    like            shift and go to state 147

  ! mas             [ reduce using rule 203 (WHERE -> where EXP .) ]
  ! menos           [ reduce using rule 203 (WHERE -> where EXP .) ]
  ! multiplicacion  [ reduce using rule 203 (WHERE -> where EXP .) ]
  ! division        [ reduce using rule 203 (WHERE -> where EXP .) ]
  ! modulo          [ reduce using rule 203 (WHERE -> where EXP .) ]
  ! elevado         [ reduce using rule 203 (WHERE -> where EXP .) ]
  ! and             [ reduce using rule 203 (WHERE -> where EXP .) ]
  ! or              [ reduce using rule 203 (WHERE -> where EXP .) ]
  ! mayor           [ reduce using rule 203 (WHERE -> where EXP .) ]
  ! menor           [ reduce using rule 203 (WHERE -> where EXP .) ]
  ! mayor_igual     [ reduce using rule 203 (WHERE -> where EXP .) ]
  ! menor_igual     [ reduce using rule 203 (WHERE -> where EXP .) ]
  ! igual           [ reduce using rule 203 (WHERE -> where EXP .) ]
  ! diferente1      [ reduce using rule 203 (WHERE -> where EXP .) ]
  ! diferente2      [ reduce using rule 203 (WHERE -> where EXP .) ]
  ! between         [ reduce using rule 203 (WHERE -> where EXP .) ]
  ! is              [ reduce using rule 203 (WHERE -> where EXP .) ]
  ! isnull          [ reduce using rule 203 (WHERE -> where EXP .) ]
  ! notnull         [ reduce using rule 203 (WHERE -> where EXP .) ]
  ! as              [ reduce using rule 203 (WHERE -> where EXP .) ]
  ! cadenaString    [ reduce using rule 203 (WHERE -> where EXP .) ]
  ! id              [ reduce using rule 203 (WHERE -> where EXP .) ]
  ! cadena          [ reduce using rule 203 (WHERE -> where EXP .) ]
  ! in              [ reduce using rule 203 (WHERE -> where EXP .) ]
  ! not             [ reduce using rule 203 (WHERE -> where EXP .) ]
  ! like            [ reduce using rule 203 (WHERE -> where EXP .) ]


state 115

    (204) WHERE -> where EXIST .

    ptcoma          reduce using rule 204 (WHERE -> where EXIST .)
    r_from          reduce using rule 204 (WHERE -> where EXIST .)
    coma            reduce using rule 204 (WHERE -> where EXIST .)
    where           reduce using rule 204 (WHERE -> where EXIST .)
    group           reduce using rule 204 (WHERE -> where EXIST .)
    having          reduce using rule 204 (WHERE -> where EXIST .)
    union           reduce using rule 204 (WHERE -> where EXIST .)
    intersect       reduce using rule 204 (WHERE -> where EXIST .)
    except          reduce using rule 204 (WHERE -> where EXIST .)
    order           reduce using rule 204 (WHERE -> where EXIST .)
    limit           reduce using rule 204 (WHERE -> where EXIST .)
    offset          reduce using rule 204 (WHERE -> where EXIST .)
    mas             reduce using rule 204 (WHERE -> where EXIST .)
    menos           reduce using rule 204 (WHERE -> where EXIST .)
    multiplicacion  reduce using rule 204 (WHERE -> where EXIST .)
    division        reduce using rule 204 (WHERE -> where EXIST .)
    modulo          reduce using rule 204 (WHERE -> where EXIST .)
    elevado         reduce using rule 204 (WHERE -> where EXIST .)
    and             reduce using rule 204 (WHERE -> where EXIST .)
    or              reduce using rule 204 (WHERE -> where EXIST .)
    mayor           reduce using rule 204 (WHERE -> where EXIST .)
    menor           reduce using rule 204 (WHERE -> where EXIST .)
    mayor_igual     reduce using rule 204 (WHERE -> where EXIST .)
    menor_igual     reduce using rule 204 (WHERE -> where EXIST .)
    igual           reduce using rule 204 (WHERE -> where EXIST .)
    diferente1      reduce using rule 204 (WHERE -> where EXIST .)
    diferente2      reduce using rule 204 (WHERE -> where EXIST .)
    between         reduce using rule 204 (WHERE -> where EXIST .)
    is              reduce using rule 204 (WHERE -> where EXIST .)
    isnull          reduce using rule 204 (WHERE -> where EXIST .)
    notnull         reduce using rule 204 (WHERE -> where EXIST .)
    as              reduce using rule 204 (WHERE -> where EXIST .)
    cadenaString    reduce using rule 204 (WHERE -> where EXIST .)
    id              reduce using rule 204 (WHERE -> where EXIST .)
    cadena          reduce using rule 204 (WHERE -> where EXIST .)
    in              reduce using rule 204 (WHERE -> where EXIST .)
    not             reduce using rule 204 (WHERE -> where EXIST .)
    like            reduce using rule 204 (WHERE -> where EXIST .)
    then            reduce using rule 204 (WHERE -> where EXIST .)
    when            reduce using rule 204 (WHERE -> where EXIST .)
    parc            reduce using rule 204 (WHERE -> where EXIST .)
    end             reduce using rule 204 (WHERE -> where EXIST .)
    else            reduce using rule 204 (WHERE -> where EXIST .)
    constraint      reduce using rule 204 (WHERE -> where EXIST .)
    unique          reduce using rule 204 (WHERE -> where EXIST .)
    check           reduce using rule 204 (WHERE -> where EXIST .)
    default         reduce using rule 204 (WHERE -> where EXIST .)
    null            reduce using rule 204 (WHERE -> where EXIST .)
    primary         reduce using rule 204 (WHERE -> where EXIST .)
    references      reduce using rule 204 (WHERE -> where EXIST .)
    asc             reduce using rule 204 (WHERE -> where EXIST .)
    desc            reduce using rule 204 (WHERE -> where EXIST .)


state 116

    (309) EXP -> not . EXP
    (225) EXIST -> not . exist para SELECT parc
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    exist           shift and go to state 190
    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 150
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 117

    (224) EXIST -> exist . para SELECT parc

    para            shift and go to state 191


state 118

    (192) SELECT -> select distinct LEXP . r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (226) LEXP -> LEXP . coma EXP

    r_from          shift and go to state 192
    coma            shift and go to state 121


state 119

    (193) SELECT -> select LEXP r_from . LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (226) LEXP -> . LEXP coma EXP
    (227) LEXP -> . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 193
    EXP                            shift and go to state 57
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 120

    (194) SELECT -> select LEXP WHERE . GROUP HAVING COMBINING ORDER LIMIT
    (211) GROUP -> . group by LEXP
    (212) GROUP -> .

  ! shift/reduce conflict for group resolved as shift
    group           shift and go to state 195
    r_from          reduce using rule 212 (GROUP -> .)
    coma            reduce using rule 212 (GROUP -> .)
    where           reduce using rule 212 (GROUP -> .)
    having          reduce using rule 212 (GROUP -> .)
    union           reduce using rule 212 (GROUP -> .)
    intersect       reduce using rule 212 (GROUP -> .)
    except          reduce using rule 212 (GROUP -> .)
    order           reduce using rule 212 (GROUP -> .)
    limit           reduce using rule 212 (GROUP -> .)
    offset          reduce using rule 212 (GROUP -> .)
    ptcoma          reduce using rule 212 (GROUP -> .)
    mas             reduce using rule 212 (GROUP -> .)
    menos           reduce using rule 212 (GROUP -> .)
    multiplicacion  reduce using rule 212 (GROUP -> .)
    division        reduce using rule 212 (GROUP -> .)
    modulo          reduce using rule 212 (GROUP -> .)
    elevado         reduce using rule 212 (GROUP -> .)
    and             reduce using rule 212 (GROUP -> .)
    or              reduce using rule 212 (GROUP -> .)
    mayor           reduce using rule 212 (GROUP -> .)
    menor           reduce using rule 212 (GROUP -> .)
    mayor_igual     reduce using rule 212 (GROUP -> .)
    menor_igual     reduce using rule 212 (GROUP -> .)
    igual           reduce using rule 212 (GROUP -> .)
    diferente1      reduce using rule 212 (GROUP -> .)
    diferente2      reduce using rule 212 (GROUP -> .)
    between         reduce using rule 212 (GROUP -> .)
    is              reduce using rule 212 (GROUP -> .)
    isnull          reduce using rule 212 (GROUP -> .)
    notnull         reduce using rule 212 (GROUP -> .)
    as              reduce using rule 212 (GROUP -> .)
    cadenaString    reduce using rule 212 (GROUP -> .)
    id              reduce using rule 212 (GROUP -> .)
    cadena          reduce using rule 212 (GROUP -> .)
    in              reduce using rule 212 (GROUP -> .)
    not             reduce using rule 212 (GROUP -> .)
    like            reduce using rule 212 (GROUP -> .)
    then            reduce using rule 212 (GROUP -> .)
    when            reduce using rule 212 (GROUP -> .)
    parc            reduce using rule 212 (GROUP -> .)
    end             reduce using rule 212 (GROUP -> .)
    else            reduce using rule 212 (GROUP -> .)
    constraint      reduce using rule 212 (GROUP -> .)
    unique          reduce using rule 212 (GROUP -> .)
    check           reduce using rule 212 (GROUP -> .)
    default         reduce using rule 212 (GROUP -> .)
    null            reduce using rule 212 (GROUP -> .)
    primary         reduce using rule 212 (GROUP -> .)
    references      reduce using rule 212 (GROUP -> .)
    asc             reduce using rule 212 (GROUP -> .)
    desc            reduce using rule 212 (GROUP -> .)

  ! group           [ reduce using rule 212 (GROUP -> .) ]

    GROUP                          shift and go to state 194

state 121

    (226) LEXP -> LEXP coma . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 196
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 122

    (275) EXP -> EXP mas . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 197
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 123

    (276) EXP -> EXP menos . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 198
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 124

    (277) EXP -> EXP multiplicacion . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 199
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 125

    (278) EXP -> EXP division . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 200
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 126

    (279) EXP -> EXP modulo . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 201
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 127

    (280) EXP -> EXP elevado . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 202
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 128

    (281) EXP -> EXP and . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 203
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 129

    (282) EXP -> EXP or . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 204
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 130

    (283) EXP -> EXP mayor . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 205
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 131

    (284) EXP -> EXP menor . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 206
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 132

    (285) EXP -> EXP mayor_igual . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 207
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 133

    (286) EXP -> EXP menor_igual . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 208
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 134

    (287) EXP -> EXP igual . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 209
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 135

    (288) EXP -> EXP diferente1 . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 210
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 136

    (289) EXP -> EXP diferente2 . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 211
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 137

    (290) EXP -> EXP between . EXP
    (313) EXP -> EXP between . symetric EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    symetric        shift and go to state 213
    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 212
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 138

    (291) EXP -> EXP is . not null
    (292) EXP -> EXP is . null
    (295) EXP -> EXP is . true
    (296) EXP -> EXP is . not true
    (297) EXP -> EXP is . false
    (298) EXP -> EXP is . not false
    (299) EXP -> EXP is . unknown
    (300) EXP -> EXP is . not unknown
    (315) EXP -> EXP is . distinct r_from EXP
    (316) EXP -> EXP is . not distinct r_from EXP

    not             shift and go to state 214
    null            shift and go to state 215
    true            shift and go to state 216
    false           shift and go to state 217
    unknown         shift and go to state 218
    distinct        shift and go to state 219


state 139

    (311) EXP -> EXP not . in para EXP parc
    (312) EXP -> EXP not . between EXP
    (314) EXP -> EXP not . between symetric EXP
    (318) EXP -> EXP not . like cadena

    in              shift and go to state 220
    between         shift and go to state 221
    like            shift and go to state 222


state 140

    (293) EXP -> EXP isnull .

    r_from          reduce using rule 293 (EXP -> EXP isnull .)
    coma            reduce using rule 293 (EXP -> EXP isnull .)
    where           reduce using rule 293 (EXP -> EXP isnull .)
    group           reduce using rule 293 (EXP -> EXP isnull .)
    having          reduce using rule 293 (EXP -> EXP isnull .)
    union           reduce using rule 293 (EXP -> EXP isnull .)
    intersect       reduce using rule 293 (EXP -> EXP isnull .)
    except          reduce using rule 293 (EXP -> EXP isnull .)
    order           reduce using rule 293 (EXP -> EXP isnull .)
    limit           reduce using rule 293 (EXP -> EXP isnull .)
    offset          reduce using rule 293 (EXP -> EXP isnull .)
    ptcoma          reduce using rule 293 (EXP -> EXP isnull .)
    mas             reduce using rule 293 (EXP -> EXP isnull .)
    menos           reduce using rule 293 (EXP -> EXP isnull .)
    multiplicacion  reduce using rule 293 (EXP -> EXP isnull .)
    division        reduce using rule 293 (EXP -> EXP isnull .)
    modulo          reduce using rule 293 (EXP -> EXP isnull .)
    elevado         reduce using rule 293 (EXP -> EXP isnull .)
    and             reduce using rule 293 (EXP -> EXP isnull .)
    or              reduce using rule 293 (EXP -> EXP isnull .)
    mayor           reduce using rule 293 (EXP -> EXP isnull .)
    menor           reduce using rule 293 (EXP -> EXP isnull .)
    mayor_igual     reduce using rule 293 (EXP -> EXP isnull .)
    menor_igual     reduce using rule 293 (EXP -> EXP isnull .)
    igual           reduce using rule 293 (EXP -> EXP isnull .)
    diferente1      reduce using rule 293 (EXP -> EXP isnull .)
    diferente2      reduce using rule 293 (EXP -> EXP isnull .)
    between         reduce using rule 293 (EXP -> EXP isnull .)
    is              reduce using rule 293 (EXP -> EXP isnull .)
    isnull          reduce using rule 293 (EXP -> EXP isnull .)
    notnull         reduce using rule 293 (EXP -> EXP isnull .)
    as              reduce using rule 293 (EXP -> EXP isnull .)
    cadenaString    reduce using rule 293 (EXP -> EXP isnull .)
    id              reduce using rule 293 (EXP -> EXP isnull .)
    cadena          reduce using rule 293 (EXP -> EXP isnull .)
    in              reduce using rule 293 (EXP -> EXP isnull .)
    not             reduce using rule 293 (EXP -> EXP isnull .)
    like            reduce using rule 293 (EXP -> EXP isnull .)
    then            reduce using rule 293 (EXP -> EXP isnull .)
    when            reduce using rule 293 (EXP -> EXP isnull .)
    parc            reduce using rule 293 (EXP -> EXP isnull .)
    end             reduce using rule 293 (EXP -> EXP isnull .)
    else            reduce using rule 293 (EXP -> EXP isnull .)
    constraint      reduce using rule 293 (EXP -> EXP isnull .)
    unique          reduce using rule 293 (EXP -> EXP isnull .)
    check           reduce using rule 293 (EXP -> EXP isnull .)
    default         reduce using rule 293 (EXP -> EXP isnull .)
    null            reduce using rule 293 (EXP -> EXP isnull .)
    primary         reduce using rule 293 (EXP -> EXP isnull .)
    references      reduce using rule 293 (EXP -> EXP isnull .)
    asc             reduce using rule 293 (EXP -> EXP isnull .)
    desc            reduce using rule 293 (EXP -> EXP isnull .)


state 141

    (294) EXP -> EXP notnull .

    r_from          reduce using rule 294 (EXP -> EXP notnull .)
    coma            reduce using rule 294 (EXP -> EXP notnull .)
    where           reduce using rule 294 (EXP -> EXP notnull .)
    group           reduce using rule 294 (EXP -> EXP notnull .)
    having          reduce using rule 294 (EXP -> EXP notnull .)
    union           reduce using rule 294 (EXP -> EXP notnull .)
    intersect       reduce using rule 294 (EXP -> EXP notnull .)
    except          reduce using rule 294 (EXP -> EXP notnull .)
    order           reduce using rule 294 (EXP -> EXP notnull .)
    limit           reduce using rule 294 (EXP -> EXP notnull .)
    offset          reduce using rule 294 (EXP -> EXP notnull .)
    ptcoma          reduce using rule 294 (EXP -> EXP notnull .)
    mas             reduce using rule 294 (EXP -> EXP notnull .)
    menos           reduce using rule 294 (EXP -> EXP notnull .)
    multiplicacion  reduce using rule 294 (EXP -> EXP notnull .)
    division        reduce using rule 294 (EXP -> EXP notnull .)
    modulo          reduce using rule 294 (EXP -> EXP notnull .)
    elevado         reduce using rule 294 (EXP -> EXP notnull .)
    and             reduce using rule 294 (EXP -> EXP notnull .)
    or              reduce using rule 294 (EXP -> EXP notnull .)
    mayor           reduce using rule 294 (EXP -> EXP notnull .)
    menor           reduce using rule 294 (EXP -> EXP notnull .)
    mayor_igual     reduce using rule 294 (EXP -> EXP notnull .)
    menor_igual     reduce using rule 294 (EXP -> EXP notnull .)
    igual           reduce using rule 294 (EXP -> EXP notnull .)
    diferente1      reduce using rule 294 (EXP -> EXP notnull .)
    diferente2      reduce using rule 294 (EXP -> EXP notnull .)
    between         reduce using rule 294 (EXP -> EXP notnull .)
    is              reduce using rule 294 (EXP -> EXP notnull .)
    isnull          reduce using rule 294 (EXP -> EXP notnull .)
    notnull         reduce using rule 294 (EXP -> EXP notnull .)
    as              reduce using rule 294 (EXP -> EXP notnull .)
    cadenaString    reduce using rule 294 (EXP -> EXP notnull .)
    id              reduce using rule 294 (EXP -> EXP notnull .)
    cadena          reduce using rule 294 (EXP -> EXP notnull .)
    in              reduce using rule 294 (EXP -> EXP notnull .)
    not             reduce using rule 294 (EXP -> EXP notnull .)
    like            reduce using rule 294 (EXP -> EXP notnull .)
    then            reduce using rule 294 (EXP -> EXP notnull .)
    when            reduce using rule 294 (EXP -> EXP notnull .)
    parc            reduce using rule 294 (EXP -> EXP notnull .)
    end             reduce using rule 294 (EXP -> EXP notnull .)
    else            reduce using rule 294 (EXP -> EXP notnull .)
    constraint      reduce using rule 294 (EXP -> EXP notnull .)
    unique          reduce using rule 294 (EXP -> EXP notnull .)
    check           reduce using rule 294 (EXP -> EXP notnull .)
    default         reduce using rule 294 (EXP -> EXP notnull .)
    null            reduce using rule 294 (EXP -> EXP notnull .)
    primary         reduce using rule 294 (EXP -> EXP notnull .)
    references      reduce using rule 294 (EXP -> EXP notnull .)
    asc             reduce using rule 294 (EXP -> EXP notnull .)
    desc            reduce using rule 294 (EXP -> EXP notnull .)


state 142

    (301) EXP -> EXP as . cadenaString
    (303) EXP -> EXP as . id
    (305) EXP -> EXP as . cadena

    cadenaString    shift and go to state 223
    id              shift and go to state 224
    cadena          shift and go to state 225


state 143

    (302) EXP -> EXP cadenaString .

    r_from          reduce using rule 302 (EXP -> EXP cadenaString .)
    coma            reduce using rule 302 (EXP -> EXP cadenaString .)
    where           reduce using rule 302 (EXP -> EXP cadenaString .)
    group           reduce using rule 302 (EXP -> EXP cadenaString .)
    having          reduce using rule 302 (EXP -> EXP cadenaString .)
    union           reduce using rule 302 (EXP -> EXP cadenaString .)
    intersect       reduce using rule 302 (EXP -> EXP cadenaString .)
    except          reduce using rule 302 (EXP -> EXP cadenaString .)
    order           reduce using rule 302 (EXP -> EXP cadenaString .)
    limit           reduce using rule 302 (EXP -> EXP cadenaString .)
    offset          reduce using rule 302 (EXP -> EXP cadenaString .)
    ptcoma          reduce using rule 302 (EXP -> EXP cadenaString .)
    mas             reduce using rule 302 (EXP -> EXP cadenaString .)
    menos           reduce using rule 302 (EXP -> EXP cadenaString .)
    multiplicacion  reduce using rule 302 (EXP -> EXP cadenaString .)
    division        reduce using rule 302 (EXP -> EXP cadenaString .)
    modulo          reduce using rule 302 (EXP -> EXP cadenaString .)
    elevado         reduce using rule 302 (EXP -> EXP cadenaString .)
    and             reduce using rule 302 (EXP -> EXP cadenaString .)
    or              reduce using rule 302 (EXP -> EXP cadenaString .)
    mayor           reduce using rule 302 (EXP -> EXP cadenaString .)
    menor           reduce using rule 302 (EXP -> EXP cadenaString .)
    mayor_igual     reduce using rule 302 (EXP -> EXP cadenaString .)
    menor_igual     reduce using rule 302 (EXP -> EXP cadenaString .)
    igual           reduce using rule 302 (EXP -> EXP cadenaString .)
    diferente1      reduce using rule 302 (EXP -> EXP cadenaString .)
    diferente2      reduce using rule 302 (EXP -> EXP cadenaString .)
    between         reduce using rule 302 (EXP -> EXP cadenaString .)
    is              reduce using rule 302 (EXP -> EXP cadenaString .)
    isnull          reduce using rule 302 (EXP -> EXP cadenaString .)
    notnull         reduce using rule 302 (EXP -> EXP cadenaString .)
    as              reduce using rule 302 (EXP -> EXP cadenaString .)
    cadenaString    reduce using rule 302 (EXP -> EXP cadenaString .)
    id              reduce using rule 302 (EXP -> EXP cadenaString .)
    cadena          reduce using rule 302 (EXP -> EXP cadenaString .)
    in              reduce using rule 302 (EXP -> EXP cadenaString .)
    not             reduce using rule 302 (EXP -> EXP cadenaString .)
    like            reduce using rule 302 (EXP -> EXP cadenaString .)
    then            reduce using rule 302 (EXP -> EXP cadenaString .)
    when            reduce using rule 302 (EXP -> EXP cadenaString .)
    parc            reduce using rule 302 (EXP -> EXP cadenaString .)
    end             reduce using rule 302 (EXP -> EXP cadenaString .)
    else            reduce using rule 302 (EXP -> EXP cadenaString .)
    constraint      reduce using rule 302 (EXP -> EXP cadenaString .)
    unique          reduce using rule 302 (EXP -> EXP cadenaString .)
    check           reduce using rule 302 (EXP -> EXP cadenaString .)
    default         reduce using rule 302 (EXP -> EXP cadenaString .)
    null            reduce using rule 302 (EXP -> EXP cadenaString .)
    primary         reduce using rule 302 (EXP -> EXP cadenaString .)
    references      reduce using rule 302 (EXP -> EXP cadenaString .)
    asc             reduce using rule 302 (EXP -> EXP cadenaString .)
    desc            reduce using rule 302 (EXP -> EXP cadenaString .)


state 144

    (304) EXP -> EXP id .

    r_from          reduce using rule 304 (EXP -> EXP id .)
    coma            reduce using rule 304 (EXP -> EXP id .)
    where           reduce using rule 304 (EXP -> EXP id .)
    group           reduce using rule 304 (EXP -> EXP id .)
    having          reduce using rule 304 (EXP -> EXP id .)
    union           reduce using rule 304 (EXP -> EXP id .)
    intersect       reduce using rule 304 (EXP -> EXP id .)
    except          reduce using rule 304 (EXP -> EXP id .)
    order           reduce using rule 304 (EXP -> EXP id .)
    limit           reduce using rule 304 (EXP -> EXP id .)
    offset          reduce using rule 304 (EXP -> EXP id .)
    ptcoma          reduce using rule 304 (EXP -> EXP id .)
    mas             reduce using rule 304 (EXP -> EXP id .)
    menos           reduce using rule 304 (EXP -> EXP id .)
    multiplicacion  reduce using rule 304 (EXP -> EXP id .)
    division        reduce using rule 304 (EXP -> EXP id .)
    modulo          reduce using rule 304 (EXP -> EXP id .)
    elevado         reduce using rule 304 (EXP -> EXP id .)
    and             reduce using rule 304 (EXP -> EXP id .)
    or              reduce using rule 304 (EXP -> EXP id .)
    mayor           reduce using rule 304 (EXP -> EXP id .)
    menor           reduce using rule 304 (EXP -> EXP id .)
    mayor_igual     reduce using rule 304 (EXP -> EXP id .)
    menor_igual     reduce using rule 304 (EXP -> EXP id .)
    igual           reduce using rule 304 (EXP -> EXP id .)
    diferente1      reduce using rule 304 (EXP -> EXP id .)
    diferente2      reduce using rule 304 (EXP -> EXP id .)
    between         reduce using rule 304 (EXP -> EXP id .)
    is              reduce using rule 304 (EXP -> EXP id .)
    isnull          reduce using rule 304 (EXP -> EXP id .)
    notnull         reduce using rule 304 (EXP -> EXP id .)
    as              reduce using rule 304 (EXP -> EXP id .)
    cadenaString    reduce using rule 304 (EXP -> EXP id .)
    id              reduce using rule 304 (EXP -> EXP id .)
    cadena          reduce using rule 304 (EXP -> EXP id .)
    in              reduce using rule 304 (EXP -> EXP id .)
    not             reduce using rule 304 (EXP -> EXP id .)
    like            reduce using rule 304 (EXP -> EXP id .)
    then            reduce using rule 304 (EXP -> EXP id .)
    when            reduce using rule 304 (EXP -> EXP id .)
    parc            reduce using rule 304 (EXP -> EXP id .)
    end             reduce using rule 304 (EXP -> EXP id .)
    else            reduce using rule 304 (EXP -> EXP id .)
    constraint      reduce using rule 304 (EXP -> EXP id .)
    unique          reduce using rule 304 (EXP -> EXP id .)
    check           reduce using rule 304 (EXP -> EXP id .)
    default         reduce using rule 304 (EXP -> EXP id .)
    null            reduce using rule 304 (EXP -> EXP id .)
    primary         reduce using rule 304 (EXP -> EXP id .)
    references      reduce using rule 304 (EXP -> EXP id .)
    asc             reduce using rule 304 (EXP -> EXP id .)
    desc            reduce using rule 304 (EXP -> EXP id .)


state 145

    (306) EXP -> EXP cadena .

    r_from          reduce using rule 306 (EXP -> EXP cadena .)
    coma            reduce using rule 306 (EXP -> EXP cadena .)
    where           reduce using rule 306 (EXP -> EXP cadena .)
    group           reduce using rule 306 (EXP -> EXP cadena .)
    having          reduce using rule 306 (EXP -> EXP cadena .)
    union           reduce using rule 306 (EXP -> EXP cadena .)
    intersect       reduce using rule 306 (EXP -> EXP cadena .)
    except          reduce using rule 306 (EXP -> EXP cadena .)
    order           reduce using rule 306 (EXP -> EXP cadena .)
    limit           reduce using rule 306 (EXP -> EXP cadena .)
    offset          reduce using rule 306 (EXP -> EXP cadena .)
    ptcoma          reduce using rule 306 (EXP -> EXP cadena .)
    mas             reduce using rule 306 (EXP -> EXP cadena .)
    menos           reduce using rule 306 (EXP -> EXP cadena .)
    multiplicacion  reduce using rule 306 (EXP -> EXP cadena .)
    division        reduce using rule 306 (EXP -> EXP cadena .)
    modulo          reduce using rule 306 (EXP -> EXP cadena .)
    elevado         reduce using rule 306 (EXP -> EXP cadena .)
    and             reduce using rule 306 (EXP -> EXP cadena .)
    or              reduce using rule 306 (EXP -> EXP cadena .)
    mayor           reduce using rule 306 (EXP -> EXP cadena .)
    menor           reduce using rule 306 (EXP -> EXP cadena .)
    mayor_igual     reduce using rule 306 (EXP -> EXP cadena .)
    menor_igual     reduce using rule 306 (EXP -> EXP cadena .)
    igual           reduce using rule 306 (EXP -> EXP cadena .)
    diferente1      reduce using rule 306 (EXP -> EXP cadena .)
    diferente2      reduce using rule 306 (EXP -> EXP cadena .)
    between         reduce using rule 306 (EXP -> EXP cadena .)
    is              reduce using rule 306 (EXP -> EXP cadena .)
    isnull          reduce using rule 306 (EXP -> EXP cadena .)
    notnull         reduce using rule 306 (EXP -> EXP cadena .)
    as              reduce using rule 306 (EXP -> EXP cadena .)
    cadenaString    reduce using rule 306 (EXP -> EXP cadena .)
    id              reduce using rule 306 (EXP -> EXP cadena .)
    cadena          reduce using rule 306 (EXP -> EXP cadena .)
    in              reduce using rule 306 (EXP -> EXP cadena .)
    not             reduce using rule 306 (EXP -> EXP cadena .)
    like            reduce using rule 306 (EXP -> EXP cadena .)
    then            reduce using rule 306 (EXP -> EXP cadena .)
    when            reduce using rule 306 (EXP -> EXP cadena .)
    parc            reduce using rule 306 (EXP -> EXP cadena .)
    end             reduce using rule 306 (EXP -> EXP cadena .)
    else            reduce using rule 306 (EXP -> EXP cadena .)
    constraint      reduce using rule 306 (EXP -> EXP cadena .)
    unique          reduce using rule 306 (EXP -> EXP cadena .)
    check           reduce using rule 306 (EXP -> EXP cadena .)
    default         reduce using rule 306 (EXP -> EXP cadena .)
    null            reduce using rule 306 (EXP -> EXP cadena .)
    primary         reduce using rule 306 (EXP -> EXP cadena .)
    references      reduce using rule 306 (EXP -> EXP cadena .)
    asc             reduce using rule 306 (EXP -> EXP cadena .)
    desc            reduce using rule 306 (EXP -> EXP cadena .)


state 146

    (310) EXP -> EXP in . para EXP parc

    para            shift and go to state 226


state 147

    (317) EXP -> EXP like . cadena

    cadena          shift and go to state 227


state 148

    (307) EXP -> mas EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    r_from          reduce using rule 307 (EXP -> mas EXP .)
    coma            reduce using rule 307 (EXP -> mas EXP .)
    where           reduce using rule 307 (EXP -> mas EXP .)
    group           reduce using rule 307 (EXP -> mas EXP .)
    having          reduce using rule 307 (EXP -> mas EXP .)
    union           reduce using rule 307 (EXP -> mas EXP .)
    intersect       reduce using rule 307 (EXP -> mas EXP .)
    except          reduce using rule 307 (EXP -> mas EXP .)
    order           reduce using rule 307 (EXP -> mas EXP .)
    limit           reduce using rule 307 (EXP -> mas EXP .)
    offset          reduce using rule 307 (EXP -> mas EXP .)
    ptcoma          reduce using rule 307 (EXP -> mas EXP .)
    mas             reduce using rule 307 (EXP -> mas EXP .)
    menos           reduce using rule 307 (EXP -> mas EXP .)
    multiplicacion  reduce using rule 307 (EXP -> mas EXP .)
    division        reduce using rule 307 (EXP -> mas EXP .)
    modulo          reduce using rule 307 (EXP -> mas EXP .)
    elevado         reduce using rule 307 (EXP -> mas EXP .)
    and             reduce using rule 307 (EXP -> mas EXP .)
    or              reduce using rule 307 (EXP -> mas EXP .)
    mayor           reduce using rule 307 (EXP -> mas EXP .)
    menor           reduce using rule 307 (EXP -> mas EXP .)
    mayor_igual     reduce using rule 307 (EXP -> mas EXP .)
    menor_igual     reduce using rule 307 (EXP -> mas EXP .)
    igual           reduce using rule 307 (EXP -> mas EXP .)
    diferente1      reduce using rule 307 (EXP -> mas EXP .)
    diferente2      reduce using rule 307 (EXP -> mas EXP .)
    between         reduce using rule 307 (EXP -> mas EXP .)
    is              reduce using rule 307 (EXP -> mas EXP .)
    isnull          reduce using rule 307 (EXP -> mas EXP .)
    notnull         reduce using rule 307 (EXP -> mas EXP .)
    as              reduce using rule 307 (EXP -> mas EXP .)
    cadenaString    reduce using rule 307 (EXP -> mas EXP .)
    id              reduce using rule 307 (EXP -> mas EXP .)
    cadena          reduce using rule 307 (EXP -> mas EXP .)
    in              reduce using rule 307 (EXP -> mas EXP .)
    not             reduce using rule 307 (EXP -> mas EXP .)
    like            reduce using rule 307 (EXP -> mas EXP .)
    then            reduce using rule 307 (EXP -> mas EXP .)
    when            reduce using rule 307 (EXP -> mas EXP .)
    parc            reduce using rule 307 (EXP -> mas EXP .)
    end             reduce using rule 307 (EXP -> mas EXP .)
    else            reduce using rule 307 (EXP -> mas EXP .)
    constraint      reduce using rule 307 (EXP -> mas EXP .)
    unique          reduce using rule 307 (EXP -> mas EXP .)
    check           reduce using rule 307 (EXP -> mas EXP .)
    default         reduce using rule 307 (EXP -> mas EXP .)
    null            reduce using rule 307 (EXP -> mas EXP .)
    primary         reduce using rule 307 (EXP -> mas EXP .)
    references      reduce using rule 307 (EXP -> mas EXP .)
    asc             reduce using rule 307 (EXP -> mas EXP .)
    desc            reduce using rule 307 (EXP -> mas EXP .)

  ! mas             [ shift and go to state 122 ]
  ! menos           [ shift and go to state 123 ]
  ! multiplicacion  [ shift and go to state 124 ]
  ! division        [ shift and go to state 125 ]
  ! modulo          [ shift and go to state 126 ]
  ! elevado         [ shift and go to state 127 ]
  ! and             [ shift and go to state 128 ]
  ! or              [ shift and go to state 129 ]
  ! mayor           [ shift and go to state 130 ]
  ! menor           [ shift and go to state 131 ]
  ! mayor_igual     [ shift and go to state 132 ]
  ! menor_igual     [ shift and go to state 133 ]
  ! igual           [ shift and go to state 134 ]
  ! diferente1      [ shift and go to state 135 ]
  ! diferente2      [ shift and go to state 136 ]
  ! between         [ shift and go to state 137 ]
  ! is              [ shift and go to state 138 ]
  ! isnull          [ shift and go to state 140 ]
  ! notnull         [ shift and go to state 141 ]
  ! as              [ shift and go to state 142 ]
  ! cadenaString    [ shift and go to state 143 ]
  ! id              [ shift and go to state 144 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 146 ]
  ! not             [ shift and go to state 139 ]
  ! like            [ shift and go to state 147 ]


state 149

    (308) EXP -> menos EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    r_from          reduce using rule 308 (EXP -> menos EXP .)
    coma            reduce using rule 308 (EXP -> menos EXP .)
    where           reduce using rule 308 (EXP -> menos EXP .)
    group           reduce using rule 308 (EXP -> menos EXP .)
    having          reduce using rule 308 (EXP -> menos EXP .)
    union           reduce using rule 308 (EXP -> menos EXP .)
    intersect       reduce using rule 308 (EXP -> menos EXP .)
    except          reduce using rule 308 (EXP -> menos EXP .)
    order           reduce using rule 308 (EXP -> menos EXP .)
    limit           reduce using rule 308 (EXP -> menos EXP .)
    offset          reduce using rule 308 (EXP -> menos EXP .)
    ptcoma          reduce using rule 308 (EXP -> menos EXP .)
    mas             reduce using rule 308 (EXP -> menos EXP .)
    menos           reduce using rule 308 (EXP -> menos EXP .)
    multiplicacion  reduce using rule 308 (EXP -> menos EXP .)
    division        reduce using rule 308 (EXP -> menos EXP .)
    modulo          reduce using rule 308 (EXP -> menos EXP .)
    elevado         reduce using rule 308 (EXP -> menos EXP .)
    and             reduce using rule 308 (EXP -> menos EXP .)
    or              reduce using rule 308 (EXP -> menos EXP .)
    mayor           reduce using rule 308 (EXP -> menos EXP .)
    menor           reduce using rule 308 (EXP -> menos EXP .)
    mayor_igual     reduce using rule 308 (EXP -> menos EXP .)
    menor_igual     reduce using rule 308 (EXP -> menos EXP .)
    igual           reduce using rule 308 (EXP -> menos EXP .)
    diferente1      reduce using rule 308 (EXP -> menos EXP .)
    diferente2      reduce using rule 308 (EXP -> menos EXP .)
    between         reduce using rule 308 (EXP -> menos EXP .)
    is              reduce using rule 308 (EXP -> menos EXP .)
    isnull          reduce using rule 308 (EXP -> menos EXP .)
    notnull         reduce using rule 308 (EXP -> menos EXP .)
    as              reduce using rule 308 (EXP -> menos EXP .)
    cadenaString    reduce using rule 308 (EXP -> menos EXP .)
    id              reduce using rule 308 (EXP -> menos EXP .)
    cadena          reduce using rule 308 (EXP -> menos EXP .)
    in              reduce using rule 308 (EXP -> menos EXP .)
    not             reduce using rule 308 (EXP -> menos EXP .)
    like            reduce using rule 308 (EXP -> menos EXP .)
    then            reduce using rule 308 (EXP -> menos EXP .)
    when            reduce using rule 308 (EXP -> menos EXP .)
    parc            reduce using rule 308 (EXP -> menos EXP .)
    end             reduce using rule 308 (EXP -> menos EXP .)
    else            reduce using rule 308 (EXP -> menos EXP .)
    constraint      reduce using rule 308 (EXP -> menos EXP .)
    unique          reduce using rule 308 (EXP -> menos EXP .)
    check           reduce using rule 308 (EXP -> menos EXP .)
    default         reduce using rule 308 (EXP -> menos EXP .)
    null            reduce using rule 308 (EXP -> menos EXP .)
    primary         reduce using rule 308 (EXP -> menos EXP .)
    references      reduce using rule 308 (EXP -> menos EXP .)
    asc             reduce using rule 308 (EXP -> menos EXP .)
    desc            reduce using rule 308 (EXP -> menos EXP .)

  ! mas             [ shift and go to state 122 ]
  ! menos           [ shift and go to state 123 ]
  ! multiplicacion  [ shift and go to state 124 ]
  ! division        [ shift and go to state 125 ]
  ! modulo          [ shift and go to state 126 ]
  ! elevado         [ shift and go to state 127 ]
  ! and             [ shift and go to state 128 ]
  ! or              [ shift and go to state 129 ]
  ! mayor           [ shift and go to state 130 ]
  ! menor           [ shift and go to state 131 ]
  ! mayor_igual     [ shift and go to state 132 ]
  ! menor_igual     [ shift and go to state 133 ]
  ! igual           [ shift and go to state 134 ]
  ! diferente1      [ shift and go to state 135 ]
  ! diferente2      [ shift and go to state 136 ]
  ! between         [ shift and go to state 137 ]
  ! is              [ shift and go to state 138 ]
  ! isnull          [ shift and go to state 140 ]
  ! notnull         [ shift and go to state 141 ]
  ! as              [ shift and go to state 142 ]
  ! cadenaString    [ shift and go to state 143 ]
  ! id              [ shift and go to state 144 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 146 ]
  ! not             [ shift and go to state 139 ]
  ! like            [ shift and go to state 147 ]


state 150

    (309) EXP -> not EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    r_from          reduce using rule 309 (EXP -> not EXP .)
    coma            reduce using rule 309 (EXP -> not EXP .)
    where           reduce using rule 309 (EXP -> not EXP .)
    group           reduce using rule 309 (EXP -> not EXP .)
    having          reduce using rule 309 (EXP -> not EXP .)
    union           reduce using rule 309 (EXP -> not EXP .)
    intersect       reduce using rule 309 (EXP -> not EXP .)
    except          reduce using rule 309 (EXP -> not EXP .)
    order           reduce using rule 309 (EXP -> not EXP .)
    limit           reduce using rule 309 (EXP -> not EXP .)
    offset          reduce using rule 309 (EXP -> not EXP .)
    ptcoma          reduce using rule 309 (EXP -> not EXP .)
    and             reduce using rule 309 (EXP -> not EXP .)
    or              reduce using rule 309 (EXP -> not EXP .)
    between         reduce using rule 309 (EXP -> not EXP .)
    is              reduce using rule 309 (EXP -> not EXP .)
    isnull          reduce using rule 309 (EXP -> not EXP .)
    notnull         reduce using rule 309 (EXP -> not EXP .)
    as              reduce using rule 309 (EXP -> not EXP .)
    cadenaString    reduce using rule 309 (EXP -> not EXP .)
    id              reduce using rule 309 (EXP -> not EXP .)
    cadena          reduce using rule 309 (EXP -> not EXP .)
    in              reduce using rule 309 (EXP -> not EXP .)
    like            reduce using rule 309 (EXP -> not EXP .)
    then            reduce using rule 309 (EXP -> not EXP .)
    when            reduce using rule 309 (EXP -> not EXP .)
    parc            reduce using rule 309 (EXP -> not EXP .)
    end             reduce using rule 309 (EXP -> not EXP .)
    else            reduce using rule 309 (EXP -> not EXP .)
    constraint      reduce using rule 309 (EXP -> not EXP .)
    unique          reduce using rule 309 (EXP -> not EXP .)
    check           reduce using rule 309 (EXP -> not EXP .)
    default         reduce using rule 309 (EXP -> not EXP .)
    null            reduce using rule 309 (EXP -> not EXP .)
    primary         reduce using rule 309 (EXP -> not EXP .)
    references      reduce using rule 309 (EXP -> not EXP .)
    asc             reduce using rule 309 (EXP -> not EXP .)
    desc            reduce using rule 309 (EXP -> not EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    mayor           shift and go to state 130
    menor           shift and go to state 131
    mayor_igual     shift and go to state 132
    menor_igual     shift and go to state 133
    igual           shift and go to state 134
    diferente1      shift and go to state 135
    diferente2      shift and go to state 136
    not             shift and go to state 139

  ! mas             [ reduce using rule 309 (EXP -> not EXP .) ]
  ! menos           [ reduce using rule 309 (EXP -> not EXP .) ]
  ! multiplicacion  [ reduce using rule 309 (EXP -> not EXP .) ]
  ! division        [ reduce using rule 309 (EXP -> not EXP .) ]
  ! modulo          [ reduce using rule 309 (EXP -> not EXP .) ]
  ! elevado         [ reduce using rule 309 (EXP -> not EXP .) ]
  ! mayor           [ reduce using rule 309 (EXP -> not EXP .) ]
  ! menor           [ reduce using rule 309 (EXP -> not EXP .) ]
  ! mayor_igual     [ reduce using rule 309 (EXP -> not EXP .) ]
  ! menor_igual     [ reduce using rule 309 (EXP -> not EXP .) ]
  ! igual           [ reduce using rule 309 (EXP -> not EXP .) ]
  ! diferente1      [ reduce using rule 309 (EXP -> not EXP .) ]
  ! diferente2      [ reduce using rule 309 (EXP -> not EXP .) ]
  ! not             [ reduce using rule 309 (EXP -> not EXP .) ]
  ! and             [ shift and go to state 128 ]
  ! or              [ shift and go to state 129 ]
  ! between         [ shift and go to state 137 ]
  ! is              [ shift and go to state 138 ]
  ! isnull          [ shift and go to state 140 ]
  ! notnull         [ shift and go to state 141 ]
  ! as              [ shift and go to state 142 ]
  ! cadenaString    [ shift and go to state 143 ]
  ! id              [ shift and go to state 144 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 146 ]
  ! like            [ shift and go to state 147 ]


state 151

    (322) EXP -> id para . LEXP parc
    (323) EXP -> id para . parc
    (226) LEXP -> . LEXP coma EXP
    (227) LEXP -> . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    parc            shift and go to state 229
    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 228
    EXP                            shift and go to state 57
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 152

    (341) EXP -> cadena as . TIPO
    (228) TIPO -> . interval cadena
    (229) TIPO -> . decimal para int coma int parc
    (230) TIPO -> . decimal para int parc
    (231) TIPO -> . decimal
    (232) TIPO -> . numeric para int coma int parc
    (233) TIPO -> . numeric para int parc
    (234) TIPO -> . numeric
    (235) TIPO -> . varchar para int parc
    (236) TIPO -> . timestamp para int parc
    (237) TIPO -> . character para int parc
    (238) TIPO -> . interval para int parc
    (239) TIPO -> . char para int parc
    (240) TIPO -> . time para int parc
    (241) TIPO -> . character varying para int parc
    (242) TIPO -> . id modulo rowtype
    (243) TIPO -> . idPunto modulo type
    (244) TIPO -> . timestamp para int parc without time zone
    (245) TIPO -> . timestamp para int parc with time zone
    (246) TIPO -> . time para int parc without time zone
    (247) TIPO -> . time para int parc with time zone
    (248) TIPO -> . interval para int parc cadena
    (249) TIPO -> . smallint
    (250) TIPO -> . integer
    (251) TIPO -> . r_int
    (252) TIPO -> . bigint
    (253) TIPO -> . real
    (254) TIPO -> . double precision
    (255) TIPO -> . money
    (256) TIPO -> . text
    (257) TIPO -> . timestamp
    (258) TIPO -> . date
    (259) TIPO -> . time
    (260) TIPO -> . interval
    (261) TIPO -> . boolean
    (262) TIPO -> . record
    (263) TIPO -> . varchar
    (264) TIPO -> . timestamp without time zone
    (265) TIPO -> . timestamp with time zone
    (266) TIPO -> . time without time zone
    (267) TIPO -> . time with time zone
    (268) TIPO -> . id

    interval        shift and go to state 231
    decimal         shift and go to state 232
    numeric         shift and go to state 233
    varchar         shift and go to state 234
    timestamp       shift and go to state 235
    character       shift and go to state 236
    char            shift and go to state 237
    time            shift and go to state 238
    id              shift and go to state 239
    idPunto         shift and go to state 240
    smallint        shift and go to state 241
    integer         shift and go to state 242
    r_int           shift and go to state 243
    bigint          shift and go to state 244
    real            shift and go to state 245
    double          shift and go to state 246
    money           shift and go to state 247
    text            shift and go to state 248
    date            shift and go to state 249
    boolean         shift and go to state 250
    record          shift and go to state 251

    TIPO                           shift and go to state 230

state 153

    (320) EXP -> para EXP . parc
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    parc            shift and go to state 252
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    and             shift and go to state 128
    or              shift and go to state 129
    mayor           shift and go to state 130
    menor           shift and go to state 131
    mayor_igual     shift and go to state 132
    menor_igual     shift and go to state 133
    igual           shift and go to state 134
    diferente1      shift and go to state 135
    diferente2      shift and go to state 136
    between         shift and go to state 137
    is              shift and go to state 138
    isnull          shift and go to state 140
    notnull         shift and go to state 141
    as              shift and go to state 142
    cadenaString    shift and go to state 143
    id              shift and go to state 144
    cadena          shift and go to state 145
    in              shift and go to state 146
    not             shift and go to state 139
    like            shift and go to state 147


state 154

    (324) EXP -> any para . LEXP parc
    (226) LEXP -> . LEXP coma EXP
    (227) LEXP -> . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 253
    EXP                            shift and go to state 57
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 155

    (325) EXP -> all para . LEXP parc
    (226) LEXP -> . LEXP coma EXP
    (227) LEXP -> . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 254
    EXP                            shift and go to state 57
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 156

    (326) EXP -> some para . LEXP parc
    (226) LEXP -> . LEXP coma EXP
    (227) LEXP -> . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 255
    EXP                            shift and go to state 57
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 157

    (327) EXP -> extract para . FIELDS r_from timestamp cadena parc
    (269) FIELDS -> . year
    (270) FIELDS -> . month
    (271) FIELDS -> . day
    (272) FIELDS -> . hour
    (273) FIELDS -> . minute
    (274) FIELDS -> . second

    year            shift and go to state 257
    month           shift and go to state 258
    day             shift and go to state 259
    hour            shift and go to state 260
    minute          shift and go to state 261
    second          shift and go to state 262

    FIELDS                         shift and go to state 256

state 158

    (339) EXP -> timestamp cadena .

    r_from          reduce using rule 339 (EXP -> timestamp cadena .)
    coma            reduce using rule 339 (EXP -> timestamp cadena .)
    where           reduce using rule 339 (EXP -> timestamp cadena .)
    group           reduce using rule 339 (EXP -> timestamp cadena .)
    having          reduce using rule 339 (EXP -> timestamp cadena .)
    union           reduce using rule 339 (EXP -> timestamp cadena .)
    intersect       reduce using rule 339 (EXP -> timestamp cadena .)
    except          reduce using rule 339 (EXP -> timestamp cadena .)
    order           reduce using rule 339 (EXP -> timestamp cadena .)
    limit           reduce using rule 339 (EXP -> timestamp cadena .)
    offset          reduce using rule 339 (EXP -> timestamp cadena .)
    ptcoma          reduce using rule 339 (EXP -> timestamp cadena .)
    mas             reduce using rule 339 (EXP -> timestamp cadena .)
    menos           reduce using rule 339 (EXP -> timestamp cadena .)
    multiplicacion  reduce using rule 339 (EXP -> timestamp cadena .)
    division        reduce using rule 339 (EXP -> timestamp cadena .)
    modulo          reduce using rule 339 (EXP -> timestamp cadena .)
    elevado         reduce using rule 339 (EXP -> timestamp cadena .)
    and             reduce using rule 339 (EXP -> timestamp cadena .)
    or              reduce using rule 339 (EXP -> timestamp cadena .)
    mayor           reduce using rule 339 (EXP -> timestamp cadena .)
    menor           reduce using rule 339 (EXP -> timestamp cadena .)
    mayor_igual     reduce using rule 339 (EXP -> timestamp cadena .)
    menor_igual     reduce using rule 339 (EXP -> timestamp cadena .)
    igual           reduce using rule 339 (EXP -> timestamp cadena .)
    diferente1      reduce using rule 339 (EXP -> timestamp cadena .)
    diferente2      reduce using rule 339 (EXP -> timestamp cadena .)
    between         reduce using rule 339 (EXP -> timestamp cadena .)
    is              reduce using rule 339 (EXP -> timestamp cadena .)
    isnull          reduce using rule 339 (EXP -> timestamp cadena .)
    notnull         reduce using rule 339 (EXP -> timestamp cadena .)
    as              reduce using rule 339 (EXP -> timestamp cadena .)
    cadenaString    reduce using rule 339 (EXP -> timestamp cadena .)
    id              reduce using rule 339 (EXP -> timestamp cadena .)
    cadena          reduce using rule 339 (EXP -> timestamp cadena .)
    in              reduce using rule 339 (EXP -> timestamp cadena .)
    not             reduce using rule 339 (EXP -> timestamp cadena .)
    like            reduce using rule 339 (EXP -> timestamp cadena .)
    then            reduce using rule 339 (EXP -> timestamp cadena .)
    when            reduce using rule 339 (EXP -> timestamp cadena .)
    parc            reduce using rule 339 (EXP -> timestamp cadena .)
    end             reduce using rule 339 (EXP -> timestamp cadena .)
    else            reduce using rule 339 (EXP -> timestamp cadena .)
    constraint      reduce using rule 339 (EXP -> timestamp cadena .)
    unique          reduce using rule 339 (EXP -> timestamp cadena .)
    check           reduce using rule 339 (EXP -> timestamp cadena .)
    default         reduce using rule 339 (EXP -> timestamp cadena .)
    null            reduce using rule 339 (EXP -> timestamp cadena .)
    primary         reduce using rule 339 (EXP -> timestamp cadena .)
    references      reduce using rule 339 (EXP -> timestamp cadena .)
    asc             reduce using rule 339 (EXP -> timestamp cadena .)
    desc            reduce using rule 339 (EXP -> timestamp cadena .)


state 159

    (340) EXP -> interval cadena .

    r_from          reduce using rule 340 (EXP -> interval cadena .)
    coma            reduce using rule 340 (EXP -> interval cadena .)
    where           reduce using rule 340 (EXP -> interval cadena .)
    group           reduce using rule 340 (EXP -> interval cadena .)
    having          reduce using rule 340 (EXP -> interval cadena .)
    union           reduce using rule 340 (EXP -> interval cadena .)
    intersect       reduce using rule 340 (EXP -> interval cadena .)
    except          reduce using rule 340 (EXP -> interval cadena .)
    order           reduce using rule 340 (EXP -> interval cadena .)
    limit           reduce using rule 340 (EXP -> interval cadena .)
    offset          reduce using rule 340 (EXP -> interval cadena .)
    ptcoma          reduce using rule 340 (EXP -> interval cadena .)
    mas             reduce using rule 340 (EXP -> interval cadena .)
    menos           reduce using rule 340 (EXP -> interval cadena .)
    multiplicacion  reduce using rule 340 (EXP -> interval cadena .)
    division        reduce using rule 340 (EXP -> interval cadena .)
    modulo          reduce using rule 340 (EXP -> interval cadena .)
    elevado         reduce using rule 340 (EXP -> interval cadena .)
    and             reduce using rule 340 (EXP -> interval cadena .)
    or              reduce using rule 340 (EXP -> interval cadena .)
    mayor           reduce using rule 340 (EXP -> interval cadena .)
    menor           reduce using rule 340 (EXP -> interval cadena .)
    mayor_igual     reduce using rule 340 (EXP -> interval cadena .)
    menor_igual     reduce using rule 340 (EXP -> interval cadena .)
    igual           reduce using rule 340 (EXP -> interval cadena .)
    diferente1      reduce using rule 340 (EXP -> interval cadena .)
    diferente2      reduce using rule 340 (EXP -> interval cadena .)
    between         reduce using rule 340 (EXP -> interval cadena .)
    is              reduce using rule 340 (EXP -> interval cadena .)
    isnull          reduce using rule 340 (EXP -> interval cadena .)
    notnull         reduce using rule 340 (EXP -> interval cadena .)
    as              reduce using rule 340 (EXP -> interval cadena .)
    cadenaString    reduce using rule 340 (EXP -> interval cadena .)
    id              reduce using rule 340 (EXP -> interval cadena .)
    cadena          reduce using rule 340 (EXP -> interval cadena .)
    in              reduce using rule 340 (EXP -> interval cadena .)
    not             reduce using rule 340 (EXP -> interval cadena .)
    like            reduce using rule 340 (EXP -> interval cadena .)
    then            reduce using rule 340 (EXP -> interval cadena .)
    when            reduce using rule 340 (EXP -> interval cadena .)
    parc            reduce using rule 340 (EXP -> interval cadena .)
    end             reduce using rule 340 (EXP -> interval cadena .)
    else            reduce using rule 340 (EXP -> interval cadena .)
    constraint      reduce using rule 340 (EXP -> interval cadena .)
    unique          reduce using rule 340 (EXP -> interval cadena .)
    check           reduce using rule 340 (EXP -> interval cadena .)
    default         reduce using rule 340 (EXP -> interval cadena .)
    null            reduce using rule 340 (EXP -> interval cadena .)
    primary         reduce using rule 340 (EXP -> interval cadena .)
    references      reduce using rule 340 (EXP -> interval cadena .)
    asc             reduce using rule 340 (EXP -> interval cadena .)
    desc            reduce using rule 340 (EXP -> interval cadena .)


state 160

    (160) CREATETABLE -> create table id . para LDEF parc ptcoma
    (161) CREATETABLE -> create table id . para LDEF parc HERENCIA ptcoma

    para            shift and go to state 263


state 161

    (191) CREATETYPE -> create type id . as enum para LEXP parc

    as              shift and go to state 264


state 162

    (143) CREATEDB -> create RD if . not exist id
    (144) CREATEDB -> create RD if . not exist id OPCCDB

    not             shift and go to state 265


state 163

    (145) CREATEDB -> create RD id .
    (146) CREATEDB -> create RD id . OPCCDB
    (147) OPCCDB -> . PROPIETARIO
    (148) OPCCDB -> . MODO
    (149) OPCCDB -> . PROPIETARIO MODO
    (152) PROPIETARIO -> . owner igual id
    (153) PROPIETARIO -> . owner igual cadena
    (154) PROPIETARIO -> . owner igual cadenaString
    (155) PROPIETARIO -> . owner id
    (156) PROPIETARIO -> . owner cadena
    (157) PROPIETARIO -> . owner cadenaString
    (158) MODO -> . mode igual int
    (159) MODO -> . mode int

    ptcoma          reduce using rule 145 (CREATEDB -> create RD id .)
    owner           shift and go to state 269
    mode            shift and go to state 270

    OPCCDB                         shift and go to state 266
    PROPIETARIO                    shift and go to state 267
    MODO                           shift and go to state 268

state 164

    (47) CREATEINDEX -> create index id . on id para LEXP parc
    (49) CREATEINDEX -> create index id . on id using hash para LEXP parc
    (50) CREATEINDEX -> create index id . on id para id ORDEN parc
    (51) CREATEINDEX -> create index id . on id para id id ORDEN parc
    (52) CREATEINDEX -> create index id . on id para id id parc

    on              shift and go to state 271


state 165

    (48) CREATEINDEX -> create unique index . id on id para LEXP parc

    id              shift and go to state 272


state 166

    (31) PROCEDIMIENTOS -> create procedure id . para LPARAM parc LENGUAJE LCONTENIDOP
    (32) PROCEDIMIENTOS -> create procedure id . para parc LENGUAJE LCONTENIDOP
    (33) PROCEDIMIENTOS -> create procedure id . para LPARAM parc LCONTENIDOP LENGUAJE
    (34) PROCEDIMIENTOS -> create procedure id . para parc LCONTENIDOP LENGUAJE

    para            shift and go to state 273


state 167

    (25) FUNCIONES -> create function id . para LPARAM parc RETURNP LENGUAJE LCONTENIDOP
    (26) FUNCIONES -> create function id . para parc RETURNP LENGUAJE LCONTENIDOP
    (27) FUNCIONES -> create function id . para LPARAM parc RETURNP LCONTENIDOP LENGUAJE
    (28) FUNCIONES -> create function id . para parc RETURNP LCONTENIDOP LENGUAJE

    para            shift and go to state 274


state 168

    (150) RD -> or replace . databases

    databases       shift and go to state 275


state 169

    (220) UPDATE -> update id set . LCAMPOS WHERE
    (221) LCAMPOS -> . LCAMPOS coma id igual EXP
    (222) LCAMPOS -> . id igual EXP

    id              shift and go to state 276

    LCAMPOS                        shift and go to state 277

state 170

    (223) DELETE -> delete r_from id . WHERE
    (203) WHERE -> . where EXP
    (204) WHERE -> . where EXIST
    (205) WHERE -> .

    where           shift and go to state 51
    ptcoma          reduce using rule 205 (WHERE -> .)

    WHERE                          shift and go to state 278

state 171

    (121) ALTER -> alter databases id . rename to id
    (122) ALTER -> alter databases id . owner to id

    rename          shift and go to state 279
    owner           shift and go to state 280


state 172

    (123) ALTER -> alter table id . LOP
    (124) LOP -> . LOP coma OP
    (125) LOP -> . OP
    (126) OP -> . add column id TIPO
    (127) OP -> . add check para CONDCHECK parc
    (128) OP -> . add constraint id check para CONDCHECK parc
    (129) OP -> . add constraint id unique para LEXP parc
    (130) OP -> . add unique para LEXP parc
    (131) OP -> . add foreign key para LEXP parc references id para LEXP parc
    (132) OP -> . add constraint id foreign key para LEXP parc references id para LEXP parc
    (133) OP -> . alter column id set not null
    (134) OP -> . alter column id set null
    (135) OP -> . drop constraint id
    (136) OP -> . drop column LEXP
    (137) OP -> . drop check id
    (138) OP -> . rename column id to id
    (139) OP -> . alter column id type TIPO

    add             shift and go to state 284
    alter           shift and go to state 281
    drop            shift and go to state 285
    rename          shift and go to state 286

    LOP                            shift and go to state 282
    OP                             shift and go to state 283

state 173

    (116) DROP -> drop all para . parc

    parc            shift and go to state 287


state 174

    (117) DROP -> drop table id .

    ptcoma          reduce using rule 117 (DROP -> drop table id .)


state 175

    (118) DROP -> drop index id .

    ptcoma          reduce using rule 118 (DROP -> drop index id .)


state 176

    (119) DROP -> drop databases if . exist id

    exist           shift and go to state 288


state 177

    (120) DROP -> drop databases id .

    ptcoma          reduce using rule 120 (DROP -> drop databases id .)


state 178

    (73) CONDICIONIF -> if EXP then . LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> if EXP then . LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> if EXP then . LISTACONTENIDO end if
    (76) CONDICIONIF -> if EXP then . LISTACONTENIDO LELIF ELSEF end if
    (84) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (85) LISTACONTENIDO -> . CONTENIDO
    (86) CONTENIDO -> . ASIGNACION ptcoma
    (87) CONTENIDO -> . CONDICIONIF ptcoma
    (88) CONTENIDO -> . RAISE ptcoma
    (89) CONTENIDO -> . BEGINEND ptcoma
    (90) CONTENIDO -> . CALLPROCEDURE ptcoma
    (91) CONTENIDO -> . declare LDEC
    (92) CONTENIDO -> . RETURN ptcoma
    (93) CONTENIDO -> . INSERT ptcoma
    (94) CONTENIDO -> . SELECT ptcoma
    (95) CONTENIDO -> . UPDATE ptcoma
    (96) CONTENIDO -> . DELETE ptcoma
    (71) ASIGNACION -> . id dospuntos igual EXP
    (72) ASIGNACION -> . id igual EXP
    (73) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (97) RAISE -> . raise LEVEL FORMAT
    (98) RAISE -> . raise LEVEL EXP
    (99) RAISE -> . raise LEVEL
    (100) RAISE -> . raise
    (101) RAISE -> . raise LEVEL cadena coma id
    (46) BEGINEND -> . begin LISTACONTENIDO end
    (30) CALLPROCEDURE -> . execute id para parc
    (24) RETURN -> . return EXP
    (114) INSERT -> . insert into id values para LEXP parc
    (115) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (220) UPDATE -> . update id set LCAMPOS WHERE
    (223) DELETE -> . delete r_from id WHERE

    declare         shift and go to state 296
    id              shift and go to state 17
    if              shift and go to state 30
    raise           shift and go to state 302
    begin           shift and go to state 303
    execute         shift and go to state 34
    return          shift and go to state 304
    insert          shift and go to state 31
    select          shift and go to state 24
    update          shift and go to state 26
    delete          shift and go to state 27

    LISTACONTENIDO                 shift and go to state 289
    CONTENIDO                      shift and go to state 290
    ASIGNACION                     shift and go to state 291
    CONDICIONIF                    shift and go to state 292
    RAISE                          shift and go to state 293
    BEGINEND                       shift and go to state 294
    CALLPROCEDURE                  shift and go to state 295
    RETURN                         shift and go to state 297
    INSERT                         shift and go to state 298
    SELECT                         shift and go to state 299
    UPDATE                         shift and go to state 300
    DELETE                         shift and go to state 301

state 179

    (114) INSERT -> insert into id . values para LEXP parc
    (115) INSERT -> insert into id . para LEXP parc values para LEXP parc

    values          shift and go to state 305
    para            shift and go to state 306


state 180

    (80) CASE -> case LEXP LISTAWHEN . ELSEF end case
    (81) CASE -> case LEXP LISTAWHEN . end case
    (109) LISTAWHEN -> LISTAWHEN . WHEN
    (79) ELSEF -> . else LISTACONTENIDO
    (111) WHEN -> . when LEXP then LISTACONTENIDO
    (112) WHEN -> . when LEXP then LEXP

    end             shift and go to state 308
    else            shift and go to state 309
    when            shift and go to state 105

    ELSEF                          shift and go to state 307
    WHEN                           shift and go to state 183

state 181

    (82) CASE -> case LISTAWHEN ELSE . end

    end             shift and go to state 310


state 182

    (83) CASE -> case LISTAWHEN end .

    use             reduce using rule 83 (CASE -> case LISTAWHEN end .)
    select          reduce using rule 83 (CASE -> case LISTAWHEN end .)
    create          reduce using rule 83 (CASE -> case LISTAWHEN end .)
    update          reduce using rule 83 (CASE -> case LISTAWHEN end .)
    delete          reduce using rule 83 (CASE -> case LISTAWHEN end .)
    alter           reduce using rule 83 (CASE -> case LISTAWHEN end .)
    drop            reduce using rule 83 (CASE -> case LISTAWHEN end .)
    insert          reduce using rule 83 (CASE -> case LISTAWHEN end .)
    case            reduce using rule 83 (CASE -> case LISTAWHEN end .)
    show            reduce using rule 83 (CASE -> case LISTAWHEN end .)
    id              reduce using rule 83 (CASE -> case LISTAWHEN end .)
    if              reduce using rule 83 (CASE -> case LISTAWHEN end .)
    execute         reduce using rule 83 (CASE -> case LISTAWHEN end .)
    $end            reduce using rule 83 (CASE -> case LISTAWHEN end .)
    r_from          reduce using rule 83 (CASE -> case LISTAWHEN end .)
    coma            reduce using rule 83 (CASE -> case LISTAWHEN end .)
    where           reduce using rule 83 (CASE -> case LISTAWHEN end .)
    group           reduce using rule 83 (CASE -> case LISTAWHEN end .)
    having          reduce using rule 83 (CASE -> case LISTAWHEN end .)
    union           reduce using rule 83 (CASE -> case LISTAWHEN end .)
    intersect       reduce using rule 83 (CASE -> case LISTAWHEN end .)
    except          reduce using rule 83 (CASE -> case LISTAWHEN end .)
    order           reduce using rule 83 (CASE -> case LISTAWHEN end .)
    limit           reduce using rule 83 (CASE -> case LISTAWHEN end .)
    offset          reduce using rule 83 (CASE -> case LISTAWHEN end .)
    ptcoma          reduce using rule 83 (CASE -> case LISTAWHEN end .)
    mas             reduce using rule 83 (CASE -> case LISTAWHEN end .)
    menos           reduce using rule 83 (CASE -> case LISTAWHEN end .)
    multiplicacion  reduce using rule 83 (CASE -> case LISTAWHEN end .)
    division        reduce using rule 83 (CASE -> case LISTAWHEN end .)
    modulo          reduce using rule 83 (CASE -> case LISTAWHEN end .)
    elevado         reduce using rule 83 (CASE -> case LISTAWHEN end .)
    and             reduce using rule 83 (CASE -> case LISTAWHEN end .)
    or              reduce using rule 83 (CASE -> case LISTAWHEN end .)
    mayor           reduce using rule 83 (CASE -> case LISTAWHEN end .)
    menor           reduce using rule 83 (CASE -> case LISTAWHEN end .)
    mayor_igual     reduce using rule 83 (CASE -> case LISTAWHEN end .)
    menor_igual     reduce using rule 83 (CASE -> case LISTAWHEN end .)
    igual           reduce using rule 83 (CASE -> case LISTAWHEN end .)
    diferente1      reduce using rule 83 (CASE -> case LISTAWHEN end .)
    diferente2      reduce using rule 83 (CASE -> case LISTAWHEN end .)
    between         reduce using rule 83 (CASE -> case LISTAWHEN end .)
    is              reduce using rule 83 (CASE -> case LISTAWHEN end .)
    isnull          reduce using rule 83 (CASE -> case LISTAWHEN end .)
    notnull         reduce using rule 83 (CASE -> case LISTAWHEN end .)
    as              reduce using rule 83 (CASE -> case LISTAWHEN end .)
    cadenaString    reduce using rule 83 (CASE -> case LISTAWHEN end .)
    cadena          reduce using rule 83 (CASE -> case LISTAWHEN end .)
    in              reduce using rule 83 (CASE -> case LISTAWHEN end .)
    not             reduce using rule 83 (CASE -> case LISTAWHEN end .)
    like            reduce using rule 83 (CASE -> case LISTAWHEN end .)
    then            reduce using rule 83 (CASE -> case LISTAWHEN end .)
    when            reduce using rule 83 (CASE -> case LISTAWHEN end .)
    parc            reduce using rule 83 (CASE -> case LISTAWHEN end .)
    end             reduce using rule 83 (CASE -> case LISTAWHEN end .)
    else            reduce using rule 83 (CASE -> case LISTAWHEN end .)
    constraint      reduce using rule 83 (CASE -> case LISTAWHEN end .)
    unique          reduce using rule 83 (CASE -> case LISTAWHEN end .)
    check           reduce using rule 83 (CASE -> case LISTAWHEN end .)
    default         reduce using rule 83 (CASE -> case LISTAWHEN end .)
    null            reduce using rule 83 (CASE -> case LISTAWHEN end .)
    primary         reduce using rule 83 (CASE -> case LISTAWHEN end .)
    references      reduce using rule 83 (CASE -> case LISTAWHEN end .)
    asc             reduce using rule 83 (CASE -> case LISTAWHEN end .)
    desc            reduce using rule 83 (CASE -> case LISTAWHEN end .)


state 183

    (109) LISTAWHEN -> LISTAWHEN WHEN .

    end             reduce using rule 109 (LISTAWHEN -> LISTAWHEN WHEN .)
    else            reduce using rule 109 (LISTAWHEN -> LISTAWHEN WHEN .)
    when            reduce using rule 109 (LISTAWHEN -> LISTAWHEN WHEN .)


state 184

    (113) ELSE -> else . LEXP
    (226) LEXP -> . LEXP coma EXP
    (227) LEXP -> . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 311
    EXP                            shift and go to state 57
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 185

    (111) WHEN -> when LEXP . then LISTACONTENIDO
    (112) WHEN -> when LEXP . then LEXP
    (226) LEXP -> LEXP . coma EXP

    then            shift and go to state 312
    coma            shift and go to state 121


state 186

    (141) SHOW -> show tables para . id parc

    id              shift and go to state 313


state 187

    (142) SHOW -> show collection para . parc

    parc            shift and go to state 314


state 188

    (30) CALLPROCEDURE -> execute id para . parc

    parc            shift and go to state 315


state 189

    (71) ASIGNACION -> id dospuntos igual EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    ptcoma          reduce using rule 71 (ASIGNACION -> id dospuntos igual EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    and             shift and go to state 128
    or              shift and go to state 129
    mayor           shift and go to state 130
    menor           shift and go to state 131
    mayor_igual     shift and go to state 132
    menor_igual     shift and go to state 133
    igual           shift and go to state 134
    diferente1      shift and go to state 135
    diferente2      shift and go to state 136
    between         shift and go to state 137
    is              shift and go to state 138
    isnull          shift and go to state 140
    notnull         shift and go to state 141
    as              shift and go to state 142
    cadenaString    shift and go to state 143
    id              shift and go to state 144
    cadena          shift and go to state 145
    in              shift and go to state 146
    not             shift and go to state 139
    like            shift and go to state 147


state 190

    (225) EXIST -> not exist . para SELECT parc

    para            shift and go to state 316


state 191

    (224) EXIST -> exist para . SELECT parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    select          shift and go to state 24

    SELECT                         shift and go to state 317

state 192

    (192) SELECT -> select distinct LEXP r_from . LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (226) LEXP -> . LEXP coma EXP
    (227) LEXP -> . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 318
    EXP                            shift and go to state 57
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 193

    (193) SELECT -> select LEXP r_from LEXP . WHERE GROUP HAVING COMBINING ORDER LIMIT
    (226) LEXP -> LEXP . coma EXP
    (203) WHERE -> . where EXP
    (204) WHERE -> . where EXIST
    (205) WHERE -> .

  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for where resolved as shift
    coma            shift and go to state 121
    where           shift and go to state 51
    r_from          reduce using rule 205 (WHERE -> .)
    group           reduce using rule 205 (WHERE -> .)
    having          reduce using rule 205 (WHERE -> .)
    union           reduce using rule 205 (WHERE -> .)
    intersect       reduce using rule 205 (WHERE -> .)
    except          reduce using rule 205 (WHERE -> .)
    order           reduce using rule 205 (WHERE -> .)
    limit           reduce using rule 205 (WHERE -> .)
    offset          reduce using rule 205 (WHERE -> .)
    ptcoma          reduce using rule 205 (WHERE -> .)
    mas             reduce using rule 205 (WHERE -> .)
    menos           reduce using rule 205 (WHERE -> .)
    multiplicacion  reduce using rule 205 (WHERE -> .)
    division        reduce using rule 205 (WHERE -> .)
    modulo          reduce using rule 205 (WHERE -> .)
    elevado         reduce using rule 205 (WHERE -> .)
    and             reduce using rule 205 (WHERE -> .)
    or              reduce using rule 205 (WHERE -> .)
    mayor           reduce using rule 205 (WHERE -> .)
    menor           reduce using rule 205 (WHERE -> .)
    mayor_igual     reduce using rule 205 (WHERE -> .)
    menor_igual     reduce using rule 205 (WHERE -> .)
    igual           reduce using rule 205 (WHERE -> .)
    diferente1      reduce using rule 205 (WHERE -> .)
    diferente2      reduce using rule 205 (WHERE -> .)
    between         reduce using rule 205 (WHERE -> .)
    is              reduce using rule 205 (WHERE -> .)
    isnull          reduce using rule 205 (WHERE -> .)
    notnull         reduce using rule 205 (WHERE -> .)
    as              reduce using rule 205 (WHERE -> .)
    cadenaString    reduce using rule 205 (WHERE -> .)
    id              reduce using rule 205 (WHERE -> .)
    cadena          reduce using rule 205 (WHERE -> .)
    in              reduce using rule 205 (WHERE -> .)
    not             reduce using rule 205 (WHERE -> .)
    like            reduce using rule 205 (WHERE -> .)
    then            reduce using rule 205 (WHERE -> .)
    when            reduce using rule 205 (WHERE -> .)
    parc            reduce using rule 205 (WHERE -> .)
    end             reduce using rule 205 (WHERE -> .)
    else            reduce using rule 205 (WHERE -> .)
    constraint      reduce using rule 205 (WHERE -> .)
    unique          reduce using rule 205 (WHERE -> .)
    check           reduce using rule 205 (WHERE -> .)
    default         reduce using rule 205 (WHERE -> .)
    null            reduce using rule 205 (WHERE -> .)
    primary         reduce using rule 205 (WHERE -> .)
    references      reduce using rule 205 (WHERE -> .)
    asc             reduce using rule 205 (WHERE -> .)
    desc            reduce using rule 205 (WHERE -> .)

  ! coma            [ reduce using rule 205 (WHERE -> .) ]
  ! where           [ reduce using rule 205 (WHERE -> .) ]

    WHERE                          shift and go to state 319

state 194

    (194) SELECT -> select LEXP WHERE GROUP . HAVING COMBINING ORDER LIMIT
    (213) HAVING -> . having EXP
    (214) HAVING -> .

  ! shift/reduce conflict for having resolved as shift
    having          shift and go to state 321
    r_from          reduce using rule 214 (HAVING -> .)
    coma            reduce using rule 214 (HAVING -> .)
    where           reduce using rule 214 (HAVING -> .)
    group           reduce using rule 214 (HAVING -> .)
    union           reduce using rule 214 (HAVING -> .)
    intersect       reduce using rule 214 (HAVING -> .)
    except          reduce using rule 214 (HAVING -> .)
    order           reduce using rule 214 (HAVING -> .)
    limit           reduce using rule 214 (HAVING -> .)
    offset          reduce using rule 214 (HAVING -> .)
    ptcoma          reduce using rule 214 (HAVING -> .)
    mas             reduce using rule 214 (HAVING -> .)
    menos           reduce using rule 214 (HAVING -> .)
    multiplicacion  reduce using rule 214 (HAVING -> .)
    division        reduce using rule 214 (HAVING -> .)
    modulo          reduce using rule 214 (HAVING -> .)
    elevado         reduce using rule 214 (HAVING -> .)
    and             reduce using rule 214 (HAVING -> .)
    or              reduce using rule 214 (HAVING -> .)
    mayor           reduce using rule 214 (HAVING -> .)
    menor           reduce using rule 214 (HAVING -> .)
    mayor_igual     reduce using rule 214 (HAVING -> .)
    menor_igual     reduce using rule 214 (HAVING -> .)
    igual           reduce using rule 214 (HAVING -> .)
    diferente1      reduce using rule 214 (HAVING -> .)
    diferente2      reduce using rule 214 (HAVING -> .)
    between         reduce using rule 214 (HAVING -> .)
    is              reduce using rule 214 (HAVING -> .)
    isnull          reduce using rule 214 (HAVING -> .)
    notnull         reduce using rule 214 (HAVING -> .)
    as              reduce using rule 214 (HAVING -> .)
    cadenaString    reduce using rule 214 (HAVING -> .)
    id              reduce using rule 214 (HAVING -> .)
    cadena          reduce using rule 214 (HAVING -> .)
    in              reduce using rule 214 (HAVING -> .)
    not             reduce using rule 214 (HAVING -> .)
    like            reduce using rule 214 (HAVING -> .)
    then            reduce using rule 214 (HAVING -> .)
    when            reduce using rule 214 (HAVING -> .)
    parc            reduce using rule 214 (HAVING -> .)
    end             reduce using rule 214 (HAVING -> .)
    else            reduce using rule 214 (HAVING -> .)
    constraint      reduce using rule 214 (HAVING -> .)
    unique          reduce using rule 214 (HAVING -> .)
    check           reduce using rule 214 (HAVING -> .)
    default         reduce using rule 214 (HAVING -> .)
    null            reduce using rule 214 (HAVING -> .)
    primary         reduce using rule 214 (HAVING -> .)
    references      reduce using rule 214 (HAVING -> .)
    asc             reduce using rule 214 (HAVING -> .)
    desc            reduce using rule 214 (HAVING -> .)

  ! having          [ reduce using rule 214 (HAVING -> .) ]

    HAVING                         shift and go to state 320

state 195

    (211) GROUP -> group . by LEXP

    by              shift and go to state 322


state 196

    (226) LEXP -> LEXP coma EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    r_from          reduce using rule 226 (LEXP -> LEXP coma EXP .)
    coma            reduce using rule 226 (LEXP -> LEXP coma EXP .)
    where           reduce using rule 226 (LEXP -> LEXP coma EXP .)
    group           reduce using rule 226 (LEXP -> LEXP coma EXP .)
    having          reduce using rule 226 (LEXP -> LEXP coma EXP .)
    union           reduce using rule 226 (LEXP -> LEXP coma EXP .)
    intersect       reduce using rule 226 (LEXP -> LEXP coma EXP .)
    except          reduce using rule 226 (LEXP -> LEXP coma EXP .)
    order           reduce using rule 226 (LEXP -> LEXP coma EXP .)
    limit           reduce using rule 226 (LEXP -> LEXP coma EXP .)
    offset          reduce using rule 226 (LEXP -> LEXP coma EXP .)
    ptcoma          reduce using rule 226 (LEXP -> LEXP coma EXP .)
    then            reduce using rule 226 (LEXP -> LEXP coma EXP .)
    when            reduce using rule 226 (LEXP -> LEXP coma EXP .)
    parc            reduce using rule 226 (LEXP -> LEXP coma EXP .)
    end             reduce using rule 226 (LEXP -> LEXP coma EXP .)
    else            reduce using rule 226 (LEXP -> LEXP coma EXP .)
    constraint      reduce using rule 226 (LEXP -> LEXP coma EXP .)
    unique          reduce using rule 226 (LEXP -> LEXP coma EXP .)
    check           reduce using rule 226 (LEXP -> LEXP coma EXP .)
    default         reduce using rule 226 (LEXP -> LEXP coma EXP .)
    null            reduce using rule 226 (LEXP -> LEXP coma EXP .)
    primary         reduce using rule 226 (LEXP -> LEXP coma EXP .)
    references      reduce using rule 226 (LEXP -> LEXP coma EXP .)
    asc             reduce using rule 226 (LEXP -> LEXP coma EXP .)
    desc            reduce using rule 226 (LEXP -> LEXP coma EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    and             shift and go to state 128
    or              shift and go to state 129
    mayor           shift and go to state 130
    menor           shift and go to state 131
    mayor_igual     shift and go to state 132
    menor_igual     shift and go to state 133
    igual           shift and go to state 134
    diferente1      shift and go to state 135
    diferente2      shift and go to state 136
    between         shift and go to state 137
    is              shift and go to state 138
    isnull          shift and go to state 140
    notnull         shift and go to state 141
    as              shift and go to state 142
    cadenaString    shift and go to state 143
    id              shift and go to state 144
    cadena          shift and go to state 145
    in              shift and go to state 146
    not             shift and go to state 139
    like            shift and go to state 147

  ! mas             [ reduce using rule 226 (LEXP -> LEXP coma EXP .) ]
  ! menos           [ reduce using rule 226 (LEXP -> LEXP coma EXP .) ]
  ! multiplicacion  [ reduce using rule 226 (LEXP -> LEXP coma EXP .) ]
  ! division        [ reduce using rule 226 (LEXP -> LEXP coma EXP .) ]
  ! modulo          [ reduce using rule 226 (LEXP -> LEXP coma EXP .) ]
  ! elevado         [ reduce using rule 226 (LEXP -> LEXP coma EXP .) ]
  ! and             [ reduce using rule 226 (LEXP -> LEXP coma EXP .) ]
  ! or              [ reduce using rule 226 (LEXP -> LEXP coma EXP .) ]
  ! mayor           [ reduce using rule 226 (LEXP -> LEXP coma EXP .) ]
  ! menor           [ reduce using rule 226 (LEXP -> LEXP coma EXP .) ]
  ! mayor_igual     [ reduce using rule 226 (LEXP -> LEXP coma EXP .) ]
  ! menor_igual     [ reduce using rule 226 (LEXP -> LEXP coma EXP .) ]
  ! igual           [ reduce using rule 226 (LEXP -> LEXP coma EXP .) ]
  ! diferente1      [ reduce using rule 226 (LEXP -> LEXP coma EXP .) ]
  ! diferente2      [ reduce using rule 226 (LEXP -> LEXP coma EXP .) ]
  ! between         [ reduce using rule 226 (LEXP -> LEXP coma EXP .) ]
  ! is              [ reduce using rule 226 (LEXP -> LEXP coma EXP .) ]
  ! isnull          [ reduce using rule 226 (LEXP -> LEXP coma EXP .) ]
  ! notnull         [ reduce using rule 226 (LEXP -> LEXP coma EXP .) ]
  ! as              [ reduce using rule 226 (LEXP -> LEXP coma EXP .) ]
  ! cadenaString    [ reduce using rule 226 (LEXP -> LEXP coma EXP .) ]
  ! id              [ reduce using rule 226 (LEXP -> LEXP coma EXP .) ]
  ! cadena          [ reduce using rule 226 (LEXP -> LEXP coma EXP .) ]
  ! in              [ reduce using rule 226 (LEXP -> LEXP coma EXP .) ]
  ! not             [ reduce using rule 226 (LEXP -> LEXP coma EXP .) ]
  ! like            [ reduce using rule 226 (LEXP -> LEXP coma EXP .) ]


state 197

    (275) EXP -> EXP mas EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    r_from          reduce using rule 275 (EXP -> EXP mas EXP .)
    coma            reduce using rule 275 (EXP -> EXP mas EXP .)
    where           reduce using rule 275 (EXP -> EXP mas EXP .)
    group           reduce using rule 275 (EXP -> EXP mas EXP .)
    having          reduce using rule 275 (EXP -> EXP mas EXP .)
    union           reduce using rule 275 (EXP -> EXP mas EXP .)
    intersect       reduce using rule 275 (EXP -> EXP mas EXP .)
    except          reduce using rule 275 (EXP -> EXP mas EXP .)
    order           reduce using rule 275 (EXP -> EXP mas EXP .)
    limit           reduce using rule 275 (EXP -> EXP mas EXP .)
    offset          reduce using rule 275 (EXP -> EXP mas EXP .)
    ptcoma          reduce using rule 275 (EXP -> EXP mas EXP .)
    mas             reduce using rule 275 (EXP -> EXP mas EXP .)
    menos           reduce using rule 275 (EXP -> EXP mas EXP .)
    and             reduce using rule 275 (EXP -> EXP mas EXP .)
    or              reduce using rule 275 (EXP -> EXP mas EXP .)
    mayor           reduce using rule 275 (EXP -> EXP mas EXP .)
    menor           reduce using rule 275 (EXP -> EXP mas EXP .)
    mayor_igual     reduce using rule 275 (EXP -> EXP mas EXP .)
    menor_igual     reduce using rule 275 (EXP -> EXP mas EXP .)
    igual           reduce using rule 275 (EXP -> EXP mas EXP .)
    diferente1      reduce using rule 275 (EXP -> EXP mas EXP .)
    diferente2      reduce using rule 275 (EXP -> EXP mas EXP .)
    between         reduce using rule 275 (EXP -> EXP mas EXP .)
    is              reduce using rule 275 (EXP -> EXP mas EXP .)
    isnull          reduce using rule 275 (EXP -> EXP mas EXP .)
    notnull         reduce using rule 275 (EXP -> EXP mas EXP .)
    as              reduce using rule 275 (EXP -> EXP mas EXP .)
    cadenaString    reduce using rule 275 (EXP -> EXP mas EXP .)
    id              reduce using rule 275 (EXP -> EXP mas EXP .)
    cadena          reduce using rule 275 (EXP -> EXP mas EXP .)
    in              reduce using rule 275 (EXP -> EXP mas EXP .)
    not             reduce using rule 275 (EXP -> EXP mas EXP .)
    like            reduce using rule 275 (EXP -> EXP mas EXP .)
    then            reduce using rule 275 (EXP -> EXP mas EXP .)
    when            reduce using rule 275 (EXP -> EXP mas EXP .)
    parc            reduce using rule 275 (EXP -> EXP mas EXP .)
    end             reduce using rule 275 (EXP -> EXP mas EXP .)
    else            reduce using rule 275 (EXP -> EXP mas EXP .)
    constraint      reduce using rule 275 (EXP -> EXP mas EXP .)
    unique          reduce using rule 275 (EXP -> EXP mas EXP .)
    check           reduce using rule 275 (EXP -> EXP mas EXP .)
    default         reduce using rule 275 (EXP -> EXP mas EXP .)
    null            reduce using rule 275 (EXP -> EXP mas EXP .)
    primary         reduce using rule 275 (EXP -> EXP mas EXP .)
    references      reduce using rule 275 (EXP -> EXP mas EXP .)
    asc             reduce using rule 275 (EXP -> EXP mas EXP .)
    desc            reduce using rule 275 (EXP -> EXP mas EXP .)
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127

  ! multiplicacion  [ reduce using rule 275 (EXP -> EXP mas EXP .) ]
  ! division        [ reduce using rule 275 (EXP -> EXP mas EXP .) ]
  ! modulo          [ reduce using rule 275 (EXP -> EXP mas EXP .) ]
  ! elevado         [ reduce using rule 275 (EXP -> EXP mas EXP .) ]
  ! mas             [ shift and go to state 122 ]
  ! menos           [ shift and go to state 123 ]
  ! and             [ shift and go to state 128 ]
  ! or              [ shift and go to state 129 ]
  ! mayor           [ shift and go to state 130 ]
  ! menor           [ shift and go to state 131 ]
  ! mayor_igual     [ shift and go to state 132 ]
  ! menor_igual     [ shift and go to state 133 ]
  ! igual           [ shift and go to state 134 ]
  ! diferente1      [ shift and go to state 135 ]
  ! diferente2      [ shift and go to state 136 ]
  ! between         [ shift and go to state 137 ]
  ! is              [ shift and go to state 138 ]
  ! isnull          [ shift and go to state 140 ]
  ! notnull         [ shift and go to state 141 ]
  ! as              [ shift and go to state 142 ]
  ! cadenaString    [ shift and go to state 143 ]
  ! id              [ shift and go to state 144 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 146 ]
  ! not             [ shift and go to state 139 ]
  ! like            [ shift and go to state 147 ]


state 198

    (276) EXP -> EXP menos EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    r_from          reduce using rule 276 (EXP -> EXP menos EXP .)
    coma            reduce using rule 276 (EXP -> EXP menos EXP .)
    where           reduce using rule 276 (EXP -> EXP menos EXP .)
    group           reduce using rule 276 (EXP -> EXP menos EXP .)
    having          reduce using rule 276 (EXP -> EXP menos EXP .)
    union           reduce using rule 276 (EXP -> EXP menos EXP .)
    intersect       reduce using rule 276 (EXP -> EXP menos EXP .)
    except          reduce using rule 276 (EXP -> EXP menos EXP .)
    order           reduce using rule 276 (EXP -> EXP menos EXP .)
    limit           reduce using rule 276 (EXP -> EXP menos EXP .)
    offset          reduce using rule 276 (EXP -> EXP menos EXP .)
    ptcoma          reduce using rule 276 (EXP -> EXP menos EXP .)
    mas             reduce using rule 276 (EXP -> EXP menos EXP .)
    menos           reduce using rule 276 (EXP -> EXP menos EXP .)
    and             reduce using rule 276 (EXP -> EXP menos EXP .)
    or              reduce using rule 276 (EXP -> EXP menos EXP .)
    mayor           reduce using rule 276 (EXP -> EXP menos EXP .)
    menor           reduce using rule 276 (EXP -> EXP menos EXP .)
    mayor_igual     reduce using rule 276 (EXP -> EXP menos EXP .)
    menor_igual     reduce using rule 276 (EXP -> EXP menos EXP .)
    igual           reduce using rule 276 (EXP -> EXP menos EXP .)
    diferente1      reduce using rule 276 (EXP -> EXP menos EXP .)
    diferente2      reduce using rule 276 (EXP -> EXP menos EXP .)
    between         reduce using rule 276 (EXP -> EXP menos EXP .)
    is              reduce using rule 276 (EXP -> EXP menos EXP .)
    isnull          reduce using rule 276 (EXP -> EXP menos EXP .)
    notnull         reduce using rule 276 (EXP -> EXP menos EXP .)
    as              reduce using rule 276 (EXP -> EXP menos EXP .)
    cadenaString    reduce using rule 276 (EXP -> EXP menos EXP .)
    id              reduce using rule 276 (EXP -> EXP menos EXP .)
    cadena          reduce using rule 276 (EXP -> EXP menos EXP .)
    in              reduce using rule 276 (EXP -> EXP menos EXP .)
    not             reduce using rule 276 (EXP -> EXP menos EXP .)
    like            reduce using rule 276 (EXP -> EXP menos EXP .)
    then            reduce using rule 276 (EXP -> EXP menos EXP .)
    when            reduce using rule 276 (EXP -> EXP menos EXP .)
    parc            reduce using rule 276 (EXP -> EXP menos EXP .)
    end             reduce using rule 276 (EXP -> EXP menos EXP .)
    else            reduce using rule 276 (EXP -> EXP menos EXP .)
    constraint      reduce using rule 276 (EXP -> EXP menos EXP .)
    unique          reduce using rule 276 (EXP -> EXP menos EXP .)
    check           reduce using rule 276 (EXP -> EXP menos EXP .)
    default         reduce using rule 276 (EXP -> EXP menos EXP .)
    null            reduce using rule 276 (EXP -> EXP menos EXP .)
    primary         reduce using rule 276 (EXP -> EXP menos EXP .)
    references      reduce using rule 276 (EXP -> EXP menos EXP .)
    asc             reduce using rule 276 (EXP -> EXP menos EXP .)
    desc            reduce using rule 276 (EXP -> EXP menos EXP .)
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127

  ! multiplicacion  [ reduce using rule 276 (EXP -> EXP menos EXP .) ]
  ! division        [ reduce using rule 276 (EXP -> EXP menos EXP .) ]
  ! modulo          [ reduce using rule 276 (EXP -> EXP menos EXP .) ]
  ! elevado         [ reduce using rule 276 (EXP -> EXP menos EXP .) ]
  ! mas             [ shift and go to state 122 ]
  ! menos           [ shift and go to state 123 ]
  ! and             [ shift and go to state 128 ]
  ! or              [ shift and go to state 129 ]
  ! mayor           [ shift and go to state 130 ]
  ! menor           [ shift and go to state 131 ]
  ! mayor_igual     [ shift and go to state 132 ]
  ! menor_igual     [ shift and go to state 133 ]
  ! igual           [ shift and go to state 134 ]
  ! diferente1      [ shift and go to state 135 ]
  ! diferente2      [ shift and go to state 136 ]
  ! between         [ shift and go to state 137 ]
  ! is              [ shift and go to state 138 ]
  ! isnull          [ shift and go to state 140 ]
  ! notnull         [ shift and go to state 141 ]
  ! as              [ shift and go to state 142 ]
  ! cadenaString    [ shift and go to state 143 ]
  ! id              [ shift and go to state 144 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 146 ]
  ! not             [ shift and go to state 139 ]
  ! like            [ shift and go to state 147 ]


state 199

    (277) EXP -> EXP multiplicacion EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    r_from          reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    coma            reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    where           reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    group           reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    having          reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    union           reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    intersect       reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    except          reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    order           reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    limit           reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    offset          reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    ptcoma          reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    mas             reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    menos           reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    multiplicacion  reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    division        reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    modulo          reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    and             reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    or              reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    mayor           reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    menor           reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    mayor_igual     reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    menor_igual     reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    igual           reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    diferente1      reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    diferente2      reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    between         reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    is              reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    isnull          reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    notnull         reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    as              reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    cadenaString    reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    id              reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    cadena          reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    in              reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    not             reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    like            reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    then            reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    when            reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    parc            reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    end             reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    else            reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    constraint      reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    unique          reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    check           reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    default         reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    null            reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    primary         reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    references      reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    asc             reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    desc            reduce using rule 277 (EXP -> EXP multiplicacion EXP .)
    elevado         shift and go to state 127

  ! elevado         [ reduce using rule 277 (EXP -> EXP multiplicacion EXP .) ]
  ! mas             [ shift and go to state 122 ]
  ! menos           [ shift and go to state 123 ]
  ! multiplicacion  [ shift and go to state 124 ]
  ! division        [ shift and go to state 125 ]
  ! modulo          [ shift and go to state 126 ]
  ! and             [ shift and go to state 128 ]
  ! or              [ shift and go to state 129 ]
  ! mayor           [ shift and go to state 130 ]
  ! menor           [ shift and go to state 131 ]
  ! mayor_igual     [ shift and go to state 132 ]
  ! menor_igual     [ shift and go to state 133 ]
  ! igual           [ shift and go to state 134 ]
  ! diferente1      [ shift and go to state 135 ]
  ! diferente2      [ shift and go to state 136 ]
  ! between         [ shift and go to state 137 ]
  ! is              [ shift and go to state 138 ]
  ! isnull          [ shift and go to state 140 ]
  ! notnull         [ shift and go to state 141 ]
  ! as              [ shift and go to state 142 ]
  ! cadenaString    [ shift and go to state 143 ]
  ! id              [ shift and go to state 144 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 146 ]
  ! not             [ shift and go to state 139 ]
  ! like            [ shift and go to state 147 ]


state 200

    (278) EXP -> EXP division EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    r_from          reduce using rule 278 (EXP -> EXP division EXP .)
    coma            reduce using rule 278 (EXP -> EXP division EXP .)
    where           reduce using rule 278 (EXP -> EXP division EXP .)
    group           reduce using rule 278 (EXP -> EXP division EXP .)
    having          reduce using rule 278 (EXP -> EXP division EXP .)
    union           reduce using rule 278 (EXP -> EXP division EXP .)
    intersect       reduce using rule 278 (EXP -> EXP division EXP .)
    except          reduce using rule 278 (EXP -> EXP division EXP .)
    order           reduce using rule 278 (EXP -> EXP division EXP .)
    limit           reduce using rule 278 (EXP -> EXP division EXP .)
    offset          reduce using rule 278 (EXP -> EXP division EXP .)
    ptcoma          reduce using rule 278 (EXP -> EXP division EXP .)
    mas             reduce using rule 278 (EXP -> EXP division EXP .)
    menos           reduce using rule 278 (EXP -> EXP division EXP .)
    multiplicacion  reduce using rule 278 (EXP -> EXP division EXP .)
    division        reduce using rule 278 (EXP -> EXP division EXP .)
    modulo          reduce using rule 278 (EXP -> EXP division EXP .)
    and             reduce using rule 278 (EXP -> EXP division EXP .)
    or              reduce using rule 278 (EXP -> EXP division EXP .)
    mayor           reduce using rule 278 (EXP -> EXP division EXP .)
    menor           reduce using rule 278 (EXP -> EXP division EXP .)
    mayor_igual     reduce using rule 278 (EXP -> EXP division EXP .)
    menor_igual     reduce using rule 278 (EXP -> EXP division EXP .)
    igual           reduce using rule 278 (EXP -> EXP division EXP .)
    diferente1      reduce using rule 278 (EXP -> EXP division EXP .)
    diferente2      reduce using rule 278 (EXP -> EXP division EXP .)
    between         reduce using rule 278 (EXP -> EXP division EXP .)
    is              reduce using rule 278 (EXP -> EXP division EXP .)
    isnull          reduce using rule 278 (EXP -> EXP division EXP .)
    notnull         reduce using rule 278 (EXP -> EXP division EXP .)
    as              reduce using rule 278 (EXP -> EXP division EXP .)
    cadenaString    reduce using rule 278 (EXP -> EXP division EXP .)
    id              reduce using rule 278 (EXP -> EXP division EXP .)
    cadena          reduce using rule 278 (EXP -> EXP division EXP .)
    in              reduce using rule 278 (EXP -> EXP division EXP .)
    not             reduce using rule 278 (EXP -> EXP division EXP .)
    like            reduce using rule 278 (EXP -> EXP division EXP .)
    then            reduce using rule 278 (EXP -> EXP division EXP .)
    when            reduce using rule 278 (EXP -> EXP division EXP .)
    parc            reduce using rule 278 (EXP -> EXP division EXP .)
    end             reduce using rule 278 (EXP -> EXP division EXP .)
    else            reduce using rule 278 (EXP -> EXP division EXP .)
    constraint      reduce using rule 278 (EXP -> EXP division EXP .)
    unique          reduce using rule 278 (EXP -> EXP division EXP .)
    check           reduce using rule 278 (EXP -> EXP division EXP .)
    default         reduce using rule 278 (EXP -> EXP division EXP .)
    null            reduce using rule 278 (EXP -> EXP division EXP .)
    primary         reduce using rule 278 (EXP -> EXP division EXP .)
    references      reduce using rule 278 (EXP -> EXP division EXP .)
    asc             reduce using rule 278 (EXP -> EXP division EXP .)
    desc            reduce using rule 278 (EXP -> EXP division EXP .)
    elevado         shift and go to state 127

  ! elevado         [ reduce using rule 278 (EXP -> EXP division EXP .) ]
  ! mas             [ shift and go to state 122 ]
  ! menos           [ shift and go to state 123 ]
  ! multiplicacion  [ shift and go to state 124 ]
  ! division        [ shift and go to state 125 ]
  ! modulo          [ shift and go to state 126 ]
  ! and             [ shift and go to state 128 ]
  ! or              [ shift and go to state 129 ]
  ! mayor           [ shift and go to state 130 ]
  ! menor           [ shift and go to state 131 ]
  ! mayor_igual     [ shift and go to state 132 ]
  ! menor_igual     [ shift and go to state 133 ]
  ! igual           [ shift and go to state 134 ]
  ! diferente1      [ shift and go to state 135 ]
  ! diferente2      [ shift and go to state 136 ]
  ! between         [ shift and go to state 137 ]
  ! is              [ shift and go to state 138 ]
  ! isnull          [ shift and go to state 140 ]
  ! notnull         [ shift and go to state 141 ]
  ! as              [ shift and go to state 142 ]
  ! cadenaString    [ shift and go to state 143 ]
  ! id              [ shift and go to state 144 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 146 ]
  ! not             [ shift and go to state 139 ]
  ! like            [ shift and go to state 147 ]


state 201

    (279) EXP -> EXP modulo EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    r_from          reduce using rule 279 (EXP -> EXP modulo EXP .)
    coma            reduce using rule 279 (EXP -> EXP modulo EXP .)
    where           reduce using rule 279 (EXP -> EXP modulo EXP .)
    group           reduce using rule 279 (EXP -> EXP modulo EXP .)
    having          reduce using rule 279 (EXP -> EXP modulo EXP .)
    union           reduce using rule 279 (EXP -> EXP modulo EXP .)
    intersect       reduce using rule 279 (EXP -> EXP modulo EXP .)
    except          reduce using rule 279 (EXP -> EXP modulo EXP .)
    order           reduce using rule 279 (EXP -> EXP modulo EXP .)
    limit           reduce using rule 279 (EXP -> EXP modulo EXP .)
    offset          reduce using rule 279 (EXP -> EXP modulo EXP .)
    ptcoma          reduce using rule 279 (EXP -> EXP modulo EXP .)
    mas             reduce using rule 279 (EXP -> EXP modulo EXP .)
    menos           reduce using rule 279 (EXP -> EXP modulo EXP .)
    multiplicacion  reduce using rule 279 (EXP -> EXP modulo EXP .)
    division        reduce using rule 279 (EXP -> EXP modulo EXP .)
    modulo          reduce using rule 279 (EXP -> EXP modulo EXP .)
    and             reduce using rule 279 (EXP -> EXP modulo EXP .)
    or              reduce using rule 279 (EXP -> EXP modulo EXP .)
    mayor           reduce using rule 279 (EXP -> EXP modulo EXP .)
    menor           reduce using rule 279 (EXP -> EXP modulo EXP .)
    mayor_igual     reduce using rule 279 (EXP -> EXP modulo EXP .)
    menor_igual     reduce using rule 279 (EXP -> EXP modulo EXP .)
    igual           reduce using rule 279 (EXP -> EXP modulo EXP .)
    diferente1      reduce using rule 279 (EXP -> EXP modulo EXP .)
    diferente2      reduce using rule 279 (EXP -> EXP modulo EXP .)
    between         reduce using rule 279 (EXP -> EXP modulo EXP .)
    is              reduce using rule 279 (EXP -> EXP modulo EXP .)
    isnull          reduce using rule 279 (EXP -> EXP modulo EXP .)
    notnull         reduce using rule 279 (EXP -> EXP modulo EXP .)
    as              reduce using rule 279 (EXP -> EXP modulo EXP .)
    cadenaString    reduce using rule 279 (EXP -> EXP modulo EXP .)
    id              reduce using rule 279 (EXP -> EXP modulo EXP .)
    cadena          reduce using rule 279 (EXP -> EXP modulo EXP .)
    in              reduce using rule 279 (EXP -> EXP modulo EXP .)
    not             reduce using rule 279 (EXP -> EXP modulo EXP .)
    like            reduce using rule 279 (EXP -> EXP modulo EXP .)
    then            reduce using rule 279 (EXP -> EXP modulo EXP .)
    when            reduce using rule 279 (EXP -> EXP modulo EXP .)
    parc            reduce using rule 279 (EXP -> EXP modulo EXP .)
    end             reduce using rule 279 (EXP -> EXP modulo EXP .)
    else            reduce using rule 279 (EXP -> EXP modulo EXP .)
    constraint      reduce using rule 279 (EXP -> EXP modulo EXP .)
    unique          reduce using rule 279 (EXP -> EXP modulo EXP .)
    check           reduce using rule 279 (EXP -> EXP modulo EXP .)
    default         reduce using rule 279 (EXP -> EXP modulo EXP .)
    null            reduce using rule 279 (EXP -> EXP modulo EXP .)
    primary         reduce using rule 279 (EXP -> EXP modulo EXP .)
    references      reduce using rule 279 (EXP -> EXP modulo EXP .)
    asc             reduce using rule 279 (EXP -> EXP modulo EXP .)
    desc            reduce using rule 279 (EXP -> EXP modulo EXP .)
    elevado         shift and go to state 127

  ! elevado         [ reduce using rule 279 (EXP -> EXP modulo EXP .) ]
  ! mas             [ shift and go to state 122 ]
  ! menos           [ shift and go to state 123 ]
  ! multiplicacion  [ shift and go to state 124 ]
  ! division        [ shift and go to state 125 ]
  ! modulo          [ shift and go to state 126 ]
  ! and             [ shift and go to state 128 ]
  ! or              [ shift and go to state 129 ]
  ! mayor           [ shift and go to state 130 ]
  ! menor           [ shift and go to state 131 ]
  ! mayor_igual     [ shift and go to state 132 ]
  ! menor_igual     [ shift and go to state 133 ]
  ! igual           [ shift and go to state 134 ]
  ! diferente1      [ shift and go to state 135 ]
  ! diferente2      [ shift and go to state 136 ]
  ! between         [ shift and go to state 137 ]
  ! is              [ shift and go to state 138 ]
  ! isnull          [ shift and go to state 140 ]
  ! notnull         [ shift and go to state 141 ]
  ! as              [ shift and go to state 142 ]
  ! cadenaString    [ shift and go to state 143 ]
  ! id              [ shift and go to state 144 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 146 ]
  ! not             [ shift and go to state 139 ]
  ! like            [ shift and go to state 147 ]


state 202

    (280) EXP -> EXP elevado EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    r_from          reduce using rule 280 (EXP -> EXP elevado EXP .)
    coma            reduce using rule 280 (EXP -> EXP elevado EXP .)
    where           reduce using rule 280 (EXP -> EXP elevado EXP .)
    group           reduce using rule 280 (EXP -> EXP elevado EXP .)
    having          reduce using rule 280 (EXP -> EXP elevado EXP .)
    union           reduce using rule 280 (EXP -> EXP elevado EXP .)
    intersect       reduce using rule 280 (EXP -> EXP elevado EXP .)
    except          reduce using rule 280 (EXP -> EXP elevado EXP .)
    order           reduce using rule 280 (EXP -> EXP elevado EXP .)
    limit           reduce using rule 280 (EXP -> EXP elevado EXP .)
    offset          reduce using rule 280 (EXP -> EXP elevado EXP .)
    ptcoma          reduce using rule 280 (EXP -> EXP elevado EXP .)
    mas             reduce using rule 280 (EXP -> EXP elevado EXP .)
    menos           reduce using rule 280 (EXP -> EXP elevado EXP .)
    multiplicacion  reduce using rule 280 (EXP -> EXP elevado EXP .)
    division        reduce using rule 280 (EXP -> EXP elevado EXP .)
    modulo          reduce using rule 280 (EXP -> EXP elevado EXP .)
    elevado         reduce using rule 280 (EXP -> EXP elevado EXP .)
    and             reduce using rule 280 (EXP -> EXP elevado EXP .)
    or              reduce using rule 280 (EXP -> EXP elevado EXP .)
    mayor           reduce using rule 280 (EXP -> EXP elevado EXP .)
    menor           reduce using rule 280 (EXP -> EXP elevado EXP .)
    mayor_igual     reduce using rule 280 (EXP -> EXP elevado EXP .)
    menor_igual     reduce using rule 280 (EXP -> EXP elevado EXP .)
    igual           reduce using rule 280 (EXP -> EXP elevado EXP .)
    diferente1      reduce using rule 280 (EXP -> EXP elevado EXP .)
    diferente2      reduce using rule 280 (EXP -> EXP elevado EXP .)
    between         reduce using rule 280 (EXP -> EXP elevado EXP .)
    is              reduce using rule 280 (EXP -> EXP elevado EXP .)
    isnull          reduce using rule 280 (EXP -> EXP elevado EXP .)
    notnull         reduce using rule 280 (EXP -> EXP elevado EXP .)
    as              reduce using rule 280 (EXP -> EXP elevado EXP .)
    cadenaString    reduce using rule 280 (EXP -> EXP elevado EXP .)
    id              reduce using rule 280 (EXP -> EXP elevado EXP .)
    cadena          reduce using rule 280 (EXP -> EXP elevado EXP .)
    in              reduce using rule 280 (EXP -> EXP elevado EXP .)
    not             reduce using rule 280 (EXP -> EXP elevado EXP .)
    like            reduce using rule 280 (EXP -> EXP elevado EXP .)
    then            reduce using rule 280 (EXP -> EXP elevado EXP .)
    when            reduce using rule 280 (EXP -> EXP elevado EXP .)
    parc            reduce using rule 280 (EXP -> EXP elevado EXP .)
    end             reduce using rule 280 (EXP -> EXP elevado EXP .)
    else            reduce using rule 280 (EXP -> EXP elevado EXP .)
    constraint      reduce using rule 280 (EXP -> EXP elevado EXP .)
    unique          reduce using rule 280 (EXP -> EXP elevado EXP .)
    check           reduce using rule 280 (EXP -> EXP elevado EXP .)
    default         reduce using rule 280 (EXP -> EXP elevado EXP .)
    null            reduce using rule 280 (EXP -> EXP elevado EXP .)
    primary         reduce using rule 280 (EXP -> EXP elevado EXP .)
    references      reduce using rule 280 (EXP -> EXP elevado EXP .)
    asc             reduce using rule 280 (EXP -> EXP elevado EXP .)
    desc            reduce using rule 280 (EXP -> EXP elevado EXP .)

  ! mas             [ shift and go to state 122 ]
  ! menos           [ shift and go to state 123 ]
  ! multiplicacion  [ shift and go to state 124 ]
  ! division        [ shift and go to state 125 ]
  ! modulo          [ shift and go to state 126 ]
  ! elevado         [ shift and go to state 127 ]
  ! and             [ shift and go to state 128 ]
  ! or              [ shift and go to state 129 ]
  ! mayor           [ shift and go to state 130 ]
  ! menor           [ shift and go to state 131 ]
  ! mayor_igual     [ shift and go to state 132 ]
  ! menor_igual     [ shift and go to state 133 ]
  ! igual           [ shift and go to state 134 ]
  ! diferente1      [ shift and go to state 135 ]
  ! diferente2      [ shift and go to state 136 ]
  ! between         [ shift and go to state 137 ]
  ! is              [ shift and go to state 138 ]
  ! isnull          [ shift and go to state 140 ]
  ! notnull         [ shift and go to state 141 ]
  ! as              [ shift and go to state 142 ]
  ! cadenaString    [ shift and go to state 143 ]
  ! id              [ shift and go to state 144 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 146 ]
  ! not             [ shift and go to state 139 ]
  ! like            [ shift and go to state 147 ]


state 203

    (281) EXP -> EXP and EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    r_from          reduce using rule 281 (EXP -> EXP and EXP .)
    coma            reduce using rule 281 (EXP -> EXP and EXP .)
    where           reduce using rule 281 (EXP -> EXP and EXP .)
    group           reduce using rule 281 (EXP -> EXP and EXP .)
    having          reduce using rule 281 (EXP -> EXP and EXP .)
    union           reduce using rule 281 (EXP -> EXP and EXP .)
    intersect       reduce using rule 281 (EXP -> EXP and EXP .)
    except          reduce using rule 281 (EXP -> EXP and EXP .)
    order           reduce using rule 281 (EXP -> EXP and EXP .)
    limit           reduce using rule 281 (EXP -> EXP and EXP .)
    offset          reduce using rule 281 (EXP -> EXP and EXP .)
    ptcoma          reduce using rule 281 (EXP -> EXP and EXP .)
    and             reduce using rule 281 (EXP -> EXP and EXP .)
    or              reduce using rule 281 (EXP -> EXP and EXP .)
    between         reduce using rule 281 (EXP -> EXP and EXP .)
    is              reduce using rule 281 (EXP -> EXP and EXP .)
    isnull          reduce using rule 281 (EXP -> EXP and EXP .)
    notnull         reduce using rule 281 (EXP -> EXP and EXP .)
    as              reduce using rule 281 (EXP -> EXP and EXP .)
    cadenaString    reduce using rule 281 (EXP -> EXP and EXP .)
    id              reduce using rule 281 (EXP -> EXP and EXP .)
    cadena          reduce using rule 281 (EXP -> EXP and EXP .)
    in              reduce using rule 281 (EXP -> EXP and EXP .)
    like            reduce using rule 281 (EXP -> EXP and EXP .)
    then            reduce using rule 281 (EXP -> EXP and EXP .)
    when            reduce using rule 281 (EXP -> EXP and EXP .)
    parc            reduce using rule 281 (EXP -> EXP and EXP .)
    end             reduce using rule 281 (EXP -> EXP and EXP .)
    else            reduce using rule 281 (EXP -> EXP and EXP .)
    constraint      reduce using rule 281 (EXP -> EXP and EXP .)
    unique          reduce using rule 281 (EXP -> EXP and EXP .)
    check           reduce using rule 281 (EXP -> EXP and EXP .)
    default         reduce using rule 281 (EXP -> EXP and EXP .)
    null            reduce using rule 281 (EXP -> EXP and EXP .)
    primary         reduce using rule 281 (EXP -> EXP and EXP .)
    references      reduce using rule 281 (EXP -> EXP and EXP .)
    asc             reduce using rule 281 (EXP -> EXP and EXP .)
    desc            reduce using rule 281 (EXP -> EXP and EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    mayor           shift and go to state 130
    menor           shift and go to state 131
    mayor_igual     shift and go to state 132
    menor_igual     shift and go to state 133
    igual           shift and go to state 134
    diferente1      shift and go to state 135
    diferente2      shift and go to state 136
    not             shift and go to state 139

  ! mas             [ reduce using rule 281 (EXP -> EXP and EXP .) ]
  ! menos           [ reduce using rule 281 (EXP -> EXP and EXP .) ]
  ! multiplicacion  [ reduce using rule 281 (EXP -> EXP and EXP .) ]
  ! division        [ reduce using rule 281 (EXP -> EXP and EXP .) ]
  ! modulo          [ reduce using rule 281 (EXP -> EXP and EXP .) ]
  ! elevado         [ reduce using rule 281 (EXP -> EXP and EXP .) ]
  ! mayor           [ reduce using rule 281 (EXP -> EXP and EXP .) ]
  ! menor           [ reduce using rule 281 (EXP -> EXP and EXP .) ]
  ! mayor_igual     [ reduce using rule 281 (EXP -> EXP and EXP .) ]
  ! menor_igual     [ reduce using rule 281 (EXP -> EXP and EXP .) ]
  ! igual           [ reduce using rule 281 (EXP -> EXP and EXP .) ]
  ! diferente1      [ reduce using rule 281 (EXP -> EXP and EXP .) ]
  ! diferente2      [ reduce using rule 281 (EXP -> EXP and EXP .) ]
  ! not             [ reduce using rule 281 (EXP -> EXP and EXP .) ]
  ! and             [ shift and go to state 128 ]
  ! or              [ shift and go to state 129 ]
  ! between         [ shift and go to state 137 ]
  ! is              [ shift and go to state 138 ]
  ! isnull          [ shift and go to state 140 ]
  ! notnull         [ shift and go to state 141 ]
  ! as              [ shift and go to state 142 ]
  ! cadenaString    [ shift and go to state 143 ]
  ! id              [ shift and go to state 144 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 146 ]
  ! like            [ shift and go to state 147 ]


state 204

    (282) EXP -> EXP or EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    r_from          reduce using rule 282 (EXP -> EXP or EXP .)
    coma            reduce using rule 282 (EXP -> EXP or EXP .)
    where           reduce using rule 282 (EXP -> EXP or EXP .)
    group           reduce using rule 282 (EXP -> EXP or EXP .)
    having          reduce using rule 282 (EXP -> EXP or EXP .)
    union           reduce using rule 282 (EXP -> EXP or EXP .)
    intersect       reduce using rule 282 (EXP -> EXP or EXP .)
    except          reduce using rule 282 (EXP -> EXP or EXP .)
    order           reduce using rule 282 (EXP -> EXP or EXP .)
    limit           reduce using rule 282 (EXP -> EXP or EXP .)
    offset          reduce using rule 282 (EXP -> EXP or EXP .)
    ptcoma          reduce using rule 282 (EXP -> EXP or EXP .)
    or              reduce using rule 282 (EXP -> EXP or EXP .)
    between         reduce using rule 282 (EXP -> EXP or EXP .)
    is              reduce using rule 282 (EXP -> EXP or EXP .)
    isnull          reduce using rule 282 (EXP -> EXP or EXP .)
    notnull         reduce using rule 282 (EXP -> EXP or EXP .)
    as              reduce using rule 282 (EXP -> EXP or EXP .)
    cadenaString    reduce using rule 282 (EXP -> EXP or EXP .)
    id              reduce using rule 282 (EXP -> EXP or EXP .)
    cadena          reduce using rule 282 (EXP -> EXP or EXP .)
    in              reduce using rule 282 (EXP -> EXP or EXP .)
    like            reduce using rule 282 (EXP -> EXP or EXP .)
    then            reduce using rule 282 (EXP -> EXP or EXP .)
    when            reduce using rule 282 (EXP -> EXP or EXP .)
    parc            reduce using rule 282 (EXP -> EXP or EXP .)
    end             reduce using rule 282 (EXP -> EXP or EXP .)
    else            reduce using rule 282 (EXP -> EXP or EXP .)
    constraint      reduce using rule 282 (EXP -> EXP or EXP .)
    unique          reduce using rule 282 (EXP -> EXP or EXP .)
    check           reduce using rule 282 (EXP -> EXP or EXP .)
    default         reduce using rule 282 (EXP -> EXP or EXP .)
    null            reduce using rule 282 (EXP -> EXP or EXP .)
    primary         reduce using rule 282 (EXP -> EXP or EXP .)
    references      reduce using rule 282 (EXP -> EXP or EXP .)
    asc             reduce using rule 282 (EXP -> EXP or EXP .)
    desc            reduce using rule 282 (EXP -> EXP or EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    and             shift and go to state 128
    mayor           shift and go to state 130
    menor           shift and go to state 131
    mayor_igual     shift and go to state 132
    menor_igual     shift and go to state 133
    igual           shift and go to state 134
    diferente1      shift and go to state 135
    diferente2      shift and go to state 136
    not             shift and go to state 139

  ! mas             [ reduce using rule 282 (EXP -> EXP or EXP .) ]
  ! menos           [ reduce using rule 282 (EXP -> EXP or EXP .) ]
  ! multiplicacion  [ reduce using rule 282 (EXP -> EXP or EXP .) ]
  ! division        [ reduce using rule 282 (EXP -> EXP or EXP .) ]
  ! modulo          [ reduce using rule 282 (EXP -> EXP or EXP .) ]
  ! elevado         [ reduce using rule 282 (EXP -> EXP or EXP .) ]
  ! and             [ reduce using rule 282 (EXP -> EXP or EXP .) ]
  ! mayor           [ reduce using rule 282 (EXP -> EXP or EXP .) ]
  ! menor           [ reduce using rule 282 (EXP -> EXP or EXP .) ]
  ! mayor_igual     [ reduce using rule 282 (EXP -> EXP or EXP .) ]
  ! menor_igual     [ reduce using rule 282 (EXP -> EXP or EXP .) ]
  ! igual           [ reduce using rule 282 (EXP -> EXP or EXP .) ]
  ! diferente1      [ reduce using rule 282 (EXP -> EXP or EXP .) ]
  ! diferente2      [ reduce using rule 282 (EXP -> EXP or EXP .) ]
  ! not             [ reduce using rule 282 (EXP -> EXP or EXP .) ]
  ! or              [ shift and go to state 129 ]
  ! between         [ shift and go to state 137 ]
  ! is              [ shift and go to state 138 ]
  ! isnull          [ shift and go to state 140 ]
  ! notnull         [ shift and go to state 141 ]
  ! as              [ shift and go to state 142 ]
  ! cadenaString    [ shift and go to state 143 ]
  ! id              [ shift and go to state 144 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 146 ]
  ! like            [ shift and go to state 147 ]


state 205

    (283) EXP -> EXP mayor EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    r_from          reduce using rule 283 (EXP -> EXP mayor EXP .)
    coma            reduce using rule 283 (EXP -> EXP mayor EXP .)
    where           reduce using rule 283 (EXP -> EXP mayor EXP .)
    group           reduce using rule 283 (EXP -> EXP mayor EXP .)
    having          reduce using rule 283 (EXP -> EXP mayor EXP .)
    union           reduce using rule 283 (EXP -> EXP mayor EXP .)
    intersect       reduce using rule 283 (EXP -> EXP mayor EXP .)
    except          reduce using rule 283 (EXP -> EXP mayor EXP .)
    order           reduce using rule 283 (EXP -> EXP mayor EXP .)
    limit           reduce using rule 283 (EXP -> EXP mayor EXP .)
    offset          reduce using rule 283 (EXP -> EXP mayor EXP .)
    ptcoma          reduce using rule 283 (EXP -> EXP mayor EXP .)
    and             reduce using rule 283 (EXP -> EXP mayor EXP .)
    or              reduce using rule 283 (EXP -> EXP mayor EXP .)
    mayor           reduce using rule 283 (EXP -> EXP mayor EXP .)
    menor           reduce using rule 283 (EXP -> EXP mayor EXP .)
    mayor_igual     reduce using rule 283 (EXP -> EXP mayor EXP .)
    menor_igual     reduce using rule 283 (EXP -> EXP mayor EXP .)
    igual           reduce using rule 283 (EXP -> EXP mayor EXP .)
    diferente1      reduce using rule 283 (EXP -> EXP mayor EXP .)
    diferente2      reduce using rule 283 (EXP -> EXP mayor EXP .)
    between         reduce using rule 283 (EXP -> EXP mayor EXP .)
    is              reduce using rule 283 (EXP -> EXP mayor EXP .)
    isnull          reduce using rule 283 (EXP -> EXP mayor EXP .)
    notnull         reduce using rule 283 (EXP -> EXP mayor EXP .)
    as              reduce using rule 283 (EXP -> EXP mayor EXP .)
    cadenaString    reduce using rule 283 (EXP -> EXP mayor EXP .)
    id              reduce using rule 283 (EXP -> EXP mayor EXP .)
    cadena          reduce using rule 283 (EXP -> EXP mayor EXP .)
    in              reduce using rule 283 (EXP -> EXP mayor EXP .)
    not             reduce using rule 283 (EXP -> EXP mayor EXP .)
    like            reduce using rule 283 (EXP -> EXP mayor EXP .)
    then            reduce using rule 283 (EXP -> EXP mayor EXP .)
    when            reduce using rule 283 (EXP -> EXP mayor EXP .)
    parc            reduce using rule 283 (EXP -> EXP mayor EXP .)
    end             reduce using rule 283 (EXP -> EXP mayor EXP .)
    else            reduce using rule 283 (EXP -> EXP mayor EXP .)
    constraint      reduce using rule 283 (EXP -> EXP mayor EXP .)
    unique          reduce using rule 283 (EXP -> EXP mayor EXP .)
    check           reduce using rule 283 (EXP -> EXP mayor EXP .)
    default         reduce using rule 283 (EXP -> EXP mayor EXP .)
    null            reduce using rule 283 (EXP -> EXP mayor EXP .)
    primary         reduce using rule 283 (EXP -> EXP mayor EXP .)
    references      reduce using rule 283 (EXP -> EXP mayor EXP .)
    asc             reduce using rule 283 (EXP -> EXP mayor EXP .)
    desc            reduce using rule 283 (EXP -> EXP mayor EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127

  ! mas             [ reduce using rule 283 (EXP -> EXP mayor EXP .) ]
  ! menos           [ reduce using rule 283 (EXP -> EXP mayor EXP .) ]
  ! multiplicacion  [ reduce using rule 283 (EXP -> EXP mayor EXP .) ]
  ! division        [ reduce using rule 283 (EXP -> EXP mayor EXP .) ]
  ! modulo          [ reduce using rule 283 (EXP -> EXP mayor EXP .) ]
  ! elevado         [ reduce using rule 283 (EXP -> EXP mayor EXP .) ]
  ! and             [ shift and go to state 128 ]
  ! or              [ shift and go to state 129 ]
  ! mayor           [ shift and go to state 130 ]
  ! menor           [ shift and go to state 131 ]
  ! mayor_igual     [ shift and go to state 132 ]
  ! menor_igual     [ shift and go to state 133 ]
  ! igual           [ shift and go to state 134 ]
  ! diferente1      [ shift and go to state 135 ]
  ! diferente2      [ shift and go to state 136 ]
  ! between         [ shift and go to state 137 ]
  ! is              [ shift and go to state 138 ]
  ! isnull          [ shift and go to state 140 ]
  ! notnull         [ shift and go to state 141 ]
  ! as              [ shift and go to state 142 ]
  ! cadenaString    [ shift and go to state 143 ]
  ! id              [ shift and go to state 144 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 146 ]
  ! not             [ shift and go to state 139 ]
  ! like            [ shift and go to state 147 ]


state 206

    (284) EXP -> EXP menor EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    r_from          reduce using rule 284 (EXP -> EXP menor EXP .)
    coma            reduce using rule 284 (EXP -> EXP menor EXP .)
    where           reduce using rule 284 (EXP -> EXP menor EXP .)
    group           reduce using rule 284 (EXP -> EXP menor EXP .)
    having          reduce using rule 284 (EXP -> EXP menor EXP .)
    union           reduce using rule 284 (EXP -> EXP menor EXP .)
    intersect       reduce using rule 284 (EXP -> EXP menor EXP .)
    except          reduce using rule 284 (EXP -> EXP menor EXP .)
    order           reduce using rule 284 (EXP -> EXP menor EXP .)
    limit           reduce using rule 284 (EXP -> EXP menor EXP .)
    offset          reduce using rule 284 (EXP -> EXP menor EXP .)
    ptcoma          reduce using rule 284 (EXP -> EXP menor EXP .)
    and             reduce using rule 284 (EXP -> EXP menor EXP .)
    or              reduce using rule 284 (EXP -> EXP menor EXP .)
    mayor           reduce using rule 284 (EXP -> EXP menor EXP .)
    menor           reduce using rule 284 (EXP -> EXP menor EXP .)
    mayor_igual     reduce using rule 284 (EXP -> EXP menor EXP .)
    menor_igual     reduce using rule 284 (EXP -> EXP menor EXP .)
    igual           reduce using rule 284 (EXP -> EXP menor EXP .)
    diferente1      reduce using rule 284 (EXP -> EXP menor EXP .)
    diferente2      reduce using rule 284 (EXP -> EXP menor EXP .)
    between         reduce using rule 284 (EXP -> EXP menor EXP .)
    is              reduce using rule 284 (EXP -> EXP menor EXP .)
    isnull          reduce using rule 284 (EXP -> EXP menor EXP .)
    notnull         reduce using rule 284 (EXP -> EXP menor EXP .)
    as              reduce using rule 284 (EXP -> EXP menor EXP .)
    cadenaString    reduce using rule 284 (EXP -> EXP menor EXP .)
    id              reduce using rule 284 (EXP -> EXP menor EXP .)
    cadena          reduce using rule 284 (EXP -> EXP menor EXP .)
    in              reduce using rule 284 (EXP -> EXP menor EXP .)
    not             reduce using rule 284 (EXP -> EXP menor EXP .)
    like            reduce using rule 284 (EXP -> EXP menor EXP .)
    then            reduce using rule 284 (EXP -> EXP menor EXP .)
    when            reduce using rule 284 (EXP -> EXP menor EXP .)
    parc            reduce using rule 284 (EXP -> EXP menor EXP .)
    end             reduce using rule 284 (EXP -> EXP menor EXP .)
    else            reduce using rule 284 (EXP -> EXP menor EXP .)
    constraint      reduce using rule 284 (EXP -> EXP menor EXP .)
    unique          reduce using rule 284 (EXP -> EXP menor EXP .)
    check           reduce using rule 284 (EXP -> EXP menor EXP .)
    default         reduce using rule 284 (EXP -> EXP menor EXP .)
    null            reduce using rule 284 (EXP -> EXP menor EXP .)
    primary         reduce using rule 284 (EXP -> EXP menor EXP .)
    references      reduce using rule 284 (EXP -> EXP menor EXP .)
    asc             reduce using rule 284 (EXP -> EXP menor EXP .)
    desc            reduce using rule 284 (EXP -> EXP menor EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127

  ! mas             [ reduce using rule 284 (EXP -> EXP menor EXP .) ]
  ! menos           [ reduce using rule 284 (EXP -> EXP menor EXP .) ]
  ! multiplicacion  [ reduce using rule 284 (EXP -> EXP menor EXP .) ]
  ! division        [ reduce using rule 284 (EXP -> EXP menor EXP .) ]
  ! modulo          [ reduce using rule 284 (EXP -> EXP menor EXP .) ]
  ! elevado         [ reduce using rule 284 (EXP -> EXP menor EXP .) ]
  ! and             [ shift and go to state 128 ]
  ! or              [ shift and go to state 129 ]
  ! mayor           [ shift and go to state 130 ]
  ! menor           [ shift and go to state 131 ]
  ! mayor_igual     [ shift and go to state 132 ]
  ! menor_igual     [ shift and go to state 133 ]
  ! igual           [ shift and go to state 134 ]
  ! diferente1      [ shift and go to state 135 ]
  ! diferente2      [ shift and go to state 136 ]
  ! between         [ shift and go to state 137 ]
  ! is              [ shift and go to state 138 ]
  ! isnull          [ shift and go to state 140 ]
  ! notnull         [ shift and go to state 141 ]
  ! as              [ shift and go to state 142 ]
  ! cadenaString    [ shift and go to state 143 ]
  ! id              [ shift and go to state 144 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 146 ]
  ! not             [ shift and go to state 139 ]
  ! like            [ shift and go to state 147 ]


state 207

    (285) EXP -> EXP mayor_igual EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    r_from          reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    coma            reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    where           reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    group           reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    having          reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    union           reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    intersect       reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    except          reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    order           reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    limit           reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    offset          reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    ptcoma          reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    and             reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    or              reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    mayor           reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    menor           reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    mayor_igual     reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    menor_igual     reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    igual           reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    diferente1      reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    diferente2      reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    between         reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    is              reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    isnull          reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    notnull         reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    as              reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    cadenaString    reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    id              reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    cadena          reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    in              reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    not             reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    like            reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    then            reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    when            reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    parc            reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    end             reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    else            reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    constraint      reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    unique          reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    check           reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    default         reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    null            reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    primary         reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    references      reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    asc             reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    desc            reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127

  ! mas             [ reduce using rule 285 (EXP -> EXP mayor_igual EXP .) ]
  ! menos           [ reduce using rule 285 (EXP -> EXP mayor_igual EXP .) ]
  ! multiplicacion  [ reduce using rule 285 (EXP -> EXP mayor_igual EXP .) ]
  ! division        [ reduce using rule 285 (EXP -> EXP mayor_igual EXP .) ]
  ! modulo          [ reduce using rule 285 (EXP -> EXP mayor_igual EXP .) ]
  ! elevado         [ reduce using rule 285 (EXP -> EXP mayor_igual EXP .) ]
  ! and             [ shift and go to state 128 ]
  ! or              [ shift and go to state 129 ]
  ! mayor           [ shift and go to state 130 ]
  ! menor           [ shift and go to state 131 ]
  ! mayor_igual     [ shift and go to state 132 ]
  ! menor_igual     [ shift and go to state 133 ]
  ! igual           [ shift and go to state 134 ]
  ! diferente1      [ shift and go to state 135 ]
  ! diferente2      [ shift and go to state 136 ]
  ! between         [ shift and go to state 137 ]
  ! is              [ shift and go to state 138 ]
  ! isnull          [ shift and go to state 140 ]
  ! notnull         [ shift and go to state 141 ]
  ! as              [ shift and go to state 142 ]
  ! cadenaString    [ shift and go to state 143 ]
  ! id              [ shift and go to state 144 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 146 ]
  ! not             [ shift and go to state 139 ]
  ! like            [ shift and go to state 147 ]


state 208

    (286) EXP -> EXP menor_igual EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    r_from          reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    coma            reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    where           reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    group           reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    having          reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    union           reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    intersect       reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    except          reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    order           reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    limit           reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    offset          reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    ptcoma          reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    and             reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    or              reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    mayor           reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    menor           reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    mayor_igual     reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    menor_igual     reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    igual           reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    diferente1      reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    diferente2      reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    between         reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    is              reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    isnull          reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    notnull         reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    as              reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    cadenaString    reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    id              reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    cadena          reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    in              reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    not             reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    like            reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    then            reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    when            reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    parc            reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    end             reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    else            reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    constraint      reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    unique          reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    check           reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    default         reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    null            reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    primary         reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    references      reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    asc             reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    desc            reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127

  ! mas             [ reduce using rule 286 (EXP -> EXP menor_igual EXP .) ]
  ! menos           [ reduce using rule 286 (EXP -> EXP menor_igual EXP .) ]
  ! multiplicacion  [ reduce using rule 286 (EXP -> EXP menor_igual EXP .) ]
  ! division        [ reduce using rule 286 (EXP -> EXP menor_igual EXP .) ]
  ! modulo          [ reduce using rule 286 (EXP -> EXP menor_igual EXP .) ]
  ! elevado         [ reduce using rule 286 (EXP -> EXP menor_igual EXP .) ]
  ! and             [ shift and go to state 128 ]
  ! or              [ shift and go to state 129 ]
  ! mayor           [ shift and go to state 130 ]
  ! menor           [ shift and go to state 131 ]
  ! mayor_igual     [ shift and go to state 132 ]
  ! menor_igual     [ shift and go to state 133 ]
  ! igual           [ shift and go to state 134 ]
  ! diferente1      [ shift and go to state 135 ]
  ! diferente2      [ shift and go to state 136 ]
  ! between         [ shift and go to state 137 ]
  ! is              [ shift and go to state 138 ]
  ! isnull          [ shift and go to state 140 ]
  ! notnull         [ shift and go to state 141 ]
  ! as              [ shift and go to state 142 ]
  ! cadenaString    [ shift and go to state 143 ]
  ! id              [ shift and go to state 144 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 146 ]
  ! not             [ shift and go to state 139 ]
  ! like            [ shift and go to state 147 ]


state 209

    (287) EXP -> EXP igual EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    r_from          reduce using rule 287 (EXP -> EXP igual EXP .)
    coma            reduce using rule 287 (EXP -> EXP igual EXP .)
    where           reduce using rule 287 (EXP -> EXP igual EXP .)
    group           reduce using rule 287 (EXP -> EXP igual EXP .)
    having          reduce using rule 287 (EXP -> EXP igual EXP .)
    union           reduce using rule 287 (EXP -> EXP igual EXP .)
    intersect       reduce using rule 287 (EXP -> EXP igual EXP .)
    except          reduce using rule 287 (EXP -> EXP igual EXP .)
    order           reduce using rule 287 (EXP -> EXP igual EXP .)
    limit           reduce using rule 287 (EXP -> EXP igual EXP .)
    offset          reduce using rule 287 (EXP -> EXP igual EXP .)
    ptcoma          reduce using rule 287 (EXP -> EXP igual EXP .)
    and             reduce using rule 287 (EXP -> EXP igual EXP .)
    or              reduce using rule 287 (EXP -> EXP igual EXP .)
    mayor           reduce using rule 287 (EXP -> EXP igual EXP .)
    menor           reduce using rule 287 (EXP -> EXP igual EXP .)
    mayor_igual     reduce using rule 287 (EXP -> EXP igual EXP .)
    menor_igual     reduce using rule 287 (EXP -> EXP igual EXP .)
    igual           reduce using rule 287 (EXP -> EXP igual EXP .)
    diferente1      reduce using rule 287 (EXP -> EXP igual EXP .)
    diferente2      reduce using rule 287 (EXP -> EXP igual EXP .)
    between         reduce using rule 287 (EXP -> EXP igual EXP .)
    is              reduce using rule 287 (EXP -> EXP igual EXP .)
    isnull          reduce using rule 287 (EXP -> EXP igual EXP .)
    notnull         reduce using rule 287 (EXP -> EXP igual EXP .)
    as              reduce using rule 287 (EXP -> EXP igual EXP .)
    cadenaString    reduce using rule 287 (EXP -> EXP igual EXP .)
    id              reduce using rule 287 (EXP -> EXP igual EXP .)
    cadena          reduce using rule 287 (EXP -> EXP igual EXP .)
    in              reduce using rule 287 (EXP -> EXP igual EXP .)
    not             reduce using rule 287 (EXP -> EXP igual EXP .)
    like            reduce using rule 287 (EXP -> EXP igual EXP .)
    then            reduce using rule 287 (EXP -> EXP igual EXP .)
    when            reduce using rule 287 (EXP -> EXP igual EXP .)
    parc            reduce using rule 287 (EXP -> EXP igual EXP .)
    end             reduce using rule 287 (EXP -> EXP igual EXP .)
    else            reduce using rule 287 (EXP -> EXP igual EXP .)
    constraint      reduce using rule 287 (EXP -> EXP igual EXP .)
    unique          reduce using rule 287 (EXP -> EXP igual EXP .)
    check           reduce using rule 287 (EXP -> EXP igual EXP .)
    default         reduce using rule 287 (EXP -> EXP igual EXP .)
    null            reduce using rule 287 (EXP -> EXP igual EXP .)
    primary         reduce using rule 287 (EXP -> EXP igual EXP .)
    references      reduce using rule 287 (EXP -> EXP igual EXP .)
    asc             reduce using rule 287 (EXP -> EXP igual EXP .)
    desc            reduce using rule 287 (EXP -> EXP igual EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127

  ! mas             [ reduce using rule 287 (EXP -> EXP igual EXP .) ]
  ! menos           [ reduce using rule 287 (EXP -> EXP igual EXP .) ]
  ! multiplicacion  [ reduce using rule 287 (EXP -> EXP igual EXP .) ]
  ! division        [ reduce using rule 287 (EXP -> EXP igual EXP .) ]
  ! modulo          [ reduce using rule 287 (EXP -> EXP igual EXP .) ]
  ! elevado         [ reduce using rule 287 (EXP -> EXP igual EXP .) ]
  ! and             [ shift and go to state 128 ]
  ! or              [ shift and go to state 129 ]
  ! mayor           [ shift and go to state 130 ]
  ! menor           [ shift and go to state 131 ]
  ! mayor_igual     [ shift and go to state 132 ]
  ! menor_igual     [ shift and go to state 133 ]
  ! igual           [ shift and go to state 134 ]
  ! diferente1      [ shift and go to state 135 ]
  ! diferente2      [ shift and go to state 136 ]
  ! between         [ shift and go to state 137 ]
  ! is              [ shift and go to state 138 ]
  ! isnull          [ shift and go to state 140 ]
  ! notnull         [ shift and go to state 141 ]
  ! as              [ shift and go to state 142 ]
  ! cadenaString    [ shift and go to state 143 ]
  ! id              [ shift and go to state 144 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 146 ]
  ! not             [ shift and go to state 139 ]
  ! like            [ shift and go to state 147 ]


state 210

    (288) EXP -> EXP diferente1 EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    r_from          reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    coma            reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    where           reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    group           reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    having          reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    union           reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    intersect       reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    except          reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    order           reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    limit           reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    offset          reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    ptcoma          reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    and             reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    or              reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    mayor           reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    menor           reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    mayor_igual     reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    menor_igual     reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    igual           reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    diferente1      reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    diferente2      reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    between         reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    is              reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    isnull          reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    notnull         reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    as              reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    cadenaString    reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    id              reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    cadena          reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    in              reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    not             reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    like            reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    then            reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    when            reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    parc            reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    end             reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    else            reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    constraint      reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    unique          reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    check           reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    default         reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    null            reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    primary         reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    references      reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    asc             reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    desc            reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127

  ! mas             [ reduce using rule 288 (EXP -> EXP diferente1 EXP .) ]
  ! menos           [ reduce using rule 288 (EXP -> EXP diferente1 EXP .) ]
  ! multiplicacion  [ reduce using rule 288 (EXP -> EXP diferente1 EXP .) ]
  ! division        [ reduce using rule 288 (EXP -> EXP diferente1 EXP .) ]
  ! modulo          [ reduce using rule 288 (EXP -> EXP diferente1 EXP .) ]
  ! elevado         [ reduce using rule 288 (EXP -> EXP diferente1 EXP .) ]
  ! and             [ shift and go to state 128 ]
  ! or              [ shift and go to state 129 ]
  ! mayor           [ shift and go to state 130 ]
  ! menor           [ shift and go to state 131 ]
  ! mayor_igual     [ shift and go to state 132 ]
  ! menor_igual     [ shift and go to state 133 ]
  ! igual           [ shift and go to state 134 ]
  ! diferente1      [ shift and go to state 135 ]
  ! diferente2      [ shift and go to state 136 ]
  ! between         [ shift and go to state 137 ]
  ! is              [ shift and go to state 138 ]
  ! isnull          [ shift and go to state 140 ]
  ! notnull         [ shift and go to state 141 ]
  ! as              [ shift and go to state 142 ]
  ! cadenaString    [ shift and go to state 143 ]
  ! id              [ shift and go to state 144 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 146 ]
  ! not             [ shift and go to state 139 ]
  ! like            [ shift and go to state 147 ]


state 211

    (289) EXP -> EXP diferente2 EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    r_from          reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    coma            reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    where           reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    group           reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    having          reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    union           reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    intersect       reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    except          reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    order           reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    limit           reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    offset          reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    ptcoma          reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    and             reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    or              reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    mayor           reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    menor           reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    mayor_igual     reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    menor_igual     reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    igual           reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    diferente1      reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    diferente2      reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    between         reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    is              reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    isnull          reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    notnull         reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    as              reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    cadenaString    reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    id              reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    cadena          reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    in              reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    not             reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    like            reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    then            reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    when            reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    parc            reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    end             reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    else            reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    constraint      reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    unique          reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    check           reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    default         reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    null            reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    primary         reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    references      reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    asc             reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    desc            reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127

  ! mas             [ reduce using rule 289 (EXP -> EXP diferente2 EXP .) ]
  ! menos           [ reduce using rule 289 (EXP -> EXP diferente2 EXP .) ]
  ! multiplicacion  [ reduce using rule 289 (EXP -> EXP diferente2 EXP .) ]
  ! division        [ reduce using rule 289 (EXP -> EXP diferente2 EXP .) ]
  ! modulo          [ reduce using rule 289 (EXP -> EXP diferente2 EXP .) ]
  ! elevado         [ reduce using rule 289 (EXP -> EXP diferente2 EXP .) ]
  ! and             [ shift and go to state 128 ]
  ! or              [ shift and go to state 129 ]
  ! mayor           [ shift and go to state 130 ]
  ! menor           [ shift and go to state 131 ]
  ! mayor_igual     [ shift and go to state 132 ]
  ! menor_igual     [ shift and go to state 133 ]
  ! igual           [ shift and go to state 134 ]
  ! diferente1      [ shift and go to state 135 ]
  ! diferente2      [ shift and go to state 136 ]
  ! between         [ shift and go to state 137 ]
  ! is              [ shift and go to state 138 ]
  ! isnull          [ shift and go to state 140 ]
  ! notnull         [ shift and go to state 141 ]
  ! as              [ shift and go to state 142 ]
  ! cadenaString    [ shift and go to state 143 ]
  ! id              [ shift and go to state 144 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 146 ]
  ! not             [ shift and go to state 139 ]
  ! like            [ shift and go to state 147 ]


state 212

    (290) EXP -> EXP between EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    r_from          reduce using rule 290 (EXP -> EXP between EXP .)
    coma            reduce using rule 290 (EXP -> EXP between EXP .)
    where           reduce using rule 290 (EXP -> EXP between EXP .)
    group           reduce using rule 290 (EXP -> EXP between EXP .)
    having          reduce using rule 290 (EXP -> EXP between EXP .)
    union           reduce using rule 290 (EXP -> EXP between EXP .)
    intersect       reduce using rule 290 (EXP -> EXP between EXP .)
    except          reduce using rule 290 (EXP -> EXP between EXP .)
    order           reduce using rule 290 (EXP -> EXP between EXP .)
    limit           reduce using rule 290 (EXP -> EXP between EXP .)
    offset          reduce using rule 290 (EXP -> EXP between EXP .)
    ptcoma          reduce using rule 290 (EXP -> EXP between EXP .)
    and             reduce using rule 290 (EXP -> EXP between EXP .)
    or              reduce using rule 290 (EXP -> EXP between EXP .)
    between         reduce using rule 290 (EXP -> EXP between EXP .)
    is              reduce using rule 290 (EXP -> EXP between EXP .)
    isnull          reduce using rule 290 (EXP -> EXP between EXP .)
    notnull         reduce using rule 290 (EXP -> EXP between EXP .)
    as              reduce using rule 290 (EXP -> EXP between EXP .)
    cadenaString    reduce using rule 290 (EXP -> EXP between EXP .)
    id              reduce using rule 290 (EXP -> EXP between EXP .)
    cadena          reduce using rule 290 (EXP -> EXP between EXP .)
    in              reduce using rule 290 (EXP -> EXP between EXP .)
    not             reduce using rule 290 (EXP -> EXP between EXP .)
    like            reduce using rule 290 (EXP -> EXP between EXP .)
    then            reduce using rule 290 (EXP -> EXP between EXP .)
    when            reduce using rule 290 (EXP -> EXP between EXP .)
    parc            reduce using rule 290 (EXP -> EXP between EXP .)
    end             reduce using rule 290 (EXP -> EXP between EXP .)
    else            reduce using rule 290 (EXP -> EXP between EXP .)
    constraint      reduce using rule 290 (EXP -> EXP between EXP .)
    unique          reduce using rule 290 (EXP -> EXP between EXP .)
    check           reduce using rule 290 (EXP -> EXP between EXP .)
    default         reduce using rule 290 (EXP -> EXP between EXP .)
    null            reduce using rule 290 (EXP -> EXP between EXP .)
    primary         reduce using rule 290 (EXP -> EXP between EXP .)
    references      reduce using rule 290 (EXP -> EXP between EXP .)
    asc             reduce using rule 290 (EXP -> EXP between EXP .)
    desc            reduce using rule 290 (EXP -> EXP between EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    mayor           shift and go to state 130
    menor           shift and go to state 131
    mayor_igual     shift and go to state 132
    menor_igual     shift and go to state 133
    igual           shift and go to state 134
    diferente1      shift and go to state 135
    diferente2      shift and go to state 136

  ! mas             [ reduce using rule 290 (EXP -> EXP between EXP .) ]
  ! menos           [ reduce using rule 290 (EXP -> EXP between EXP .) ]
  ! multiplicacion  [ reduce using rule 290 (EXP -> EXP between EXP .) ]
  ! division        [ reduce using rule 290 (EXP -> EXP between EXP .) ]
  ! modulo          [ reduce using rule 290 (EXP -> EXP between EXP .) ]
  ! elevado         [ reduce using rule 290 (EXP -> EXP between EXP .) ]
  ! mayor           [ reduce using rule 290 (EXP -> EXP between EXP .) ]
  ! menor           [ reduce using rule 290 (EXP -> EXP between EXP .) ]
  ! mayor_igual     [ reduce using rule 290 (EXP -> EXP between EXP .) ]
  ! menor_igual     [ reduce using rule 290 (EXP -> EXP between EXP .) ]
  ! igual           [ reduce using rule 290 (EXP -> EXP between EXP .) ]
  ! diferente1      [ reduce using rule 290 (EXP -> EXP between EXP .) ]
  ! diferente2      [ reduce using rule 290 (EXP -> EXP between EXP .) ]
  ! and             [ shift and go to state 128 ]
  ! or              [ shift and go to state 129 ]
  ! between         [ shift and go to state 137 ]
  ! is              [ shift and go to state 138 ]
  ! isnull          [ shift and go to state 140 ]
  ! notnull         [ shift and go to state 141 ]
  ! as              [ shift and go to state 142 ]
  ! cadenaString    [ shift and go to state 143 ]
  ! id              [ shift and go to state 144 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 146 ]
  ! not             [ shift and go to state 139 ]
  ! like            [ shift and go to state 147 ]


state 213

    (313) EXP -> EXP between symetric . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 323
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 214

    (291) EXP -> EXP is not . null
    (296) EXP -> EXP is not . true
    (298) EXP -> EXP is not . false
    (300) EXP -> EXP is not . unknown
    (316) EXP -> EXP is not . distinct r_from EXP

    null            shift and go to state 324
    true            shift and go to state 325
    false           shift and go to state 326
    unknown         shift and go to state 327
    distinct        shift and go to state 328


state 215

    (292) EXP -> EXP is null .

    r_from          reduce using rule 292 (EXP -> EXP is null .)
    coma            reduce using rule 292 (EXP -> EXP is null .)
    where           reduce using rule 292 (EXP -> EXP is null .)
    group           reduce using rule 292 (EXP -> EXP is null .)
    having          reduce using rule 292 (EXP -> EXP is null .)
    union           reduce using rule 292 (EXP -> EXP is null .)
    intersect       reduce using rule 292 (EXP -> EXP is null .)
    except          reduce using rule 292 (EXP -> EXP is null .)
    order           reduce using rule 292 (EXP -> EXP is null .)
    limit           reduce using rule 292 (EXP -> EXP is null .)
    offset          reduce using rule 292 (EXP -> EXP is null .)
    ptcoma          reduce using rule 292 (EXP -> EXP is null .)
    mas             reduce using rule 292 (EXP -> EXP is null .)
    menos           reduce using rule 292 (EXP -> EXP is null .)
    multiplicacion  reduce using rule 292 (EXP -> EXP is null .)
    division        reduce using rule 292 (EXP -> EXP is null .)
    modulo          reduce using rule 292 (EXP -> EXP is null .)
    elevado         reduce using rule 292 (EXP -> EXP is null .)
    and             reduce using rule 292 (EXP -> EXP is null .)
    or              reduce using rule 292 (EXP -> EXP is null .)
    mayor           reduce using rule 292 (EXP -> EXP is null .)
    menor           reduce using rule 292 (EXP -> EXP is null .)
    mayor_igual     reduce using rule 292 (EXP -> EXP is null .)
    menor_igual     reduce using rule 292 (EXP -> EXP is null .)
    igual           reduce using rule 292 (EXP -> EXP is null .)
    diferente1      reduce using rule 292 (EXP -> EXP is null .)
    diferente2      reduce using rule 292 (EXP -> EXP is null .)
    between         reduce using rule 292 (EXP -> EXP is null .)
    is              reduce using rule 292 (EXP -> EXP is null .)
    isnull          reduce using rule 292 (EXP -> EXP is null .)
    notnull         reduce using rule 292 (EXP -> EXP is null .)
    as              reduce using rule 292 (EXP -> EXP is null .)
    cadenaString    reduce using rule 292 (EXP -> EXP is null .)
    id              reduce using rule 292 (EXP -> EXP is null .)
    cadena          reduce using rule 292 (EXP -> EXP is null .)
    in              reduce using rule 292 (EXP -> EXP is null .)
    not             reduce using rule 292 (EXP -> EXP is null .)
    like            reduce using rule 292 (EXP -> EXP is null .)
    then            reduce using rule 292 (EXP -> EXP is null .)
    when            reduce using rule 292 (EXP -> EXP is null .)
    parc            reduce using rule 292 (EXP -> EXP is null .)
    end             reduce using rule 292 (EXP -> EXP is null .)
    else            reduce using rule 292 (EXP -> EXP is null .)
    constraint      reduce using rule 292 (EXP -> EXP is null .)
    unique          reduce using rule 292 (EXP -> EXP is null .)
    check           reduce using rule 292 (EXP -> EXP is null .)
    default         reduce using rule 292 (EXP -> EXP is null .)
    null            reduce using rule 292 (EXP -> EXP is null .)
    primary         reduce using rule 292 (EXP -> EXP is null .)
    references      reduce using rule 292 (EXP -> EXP is null .)
    asc             reduce using rule 292 (EXP -> EXP is null .)
    desc            reduce using rule 292 (EXP -> EXP is null .)


state 216

    (295) EXP -> EXP is true .

    r_from          reduce using rule 295 (EXP -> EXP is true .)
    coma            reduce using rule 295 (EXP -> EXP is true .)
    where           reduce using rule 295 (EXP -> EXP is true .)
    group           reduce using rule 295 (EXP -> EXP is true .)
    having          reduce using rule 295 (EXP -> EXP is true .)
    union           reduce using rule 295 (EXP -> EXP is true .)
    intersect       reduce using rule 295 (EXP -> EXP is true .)
    except          reduce using rule 295 (EXP -> EXP is true .)
    order           reduce using rule 295 (EXP -> EXP is true .)
    limit           reduce using rule 295 (EXP -> EXP is true .)
    offset          reduce using rule 295 (EXP -> EXP is true .)
    ptcoma          reduce using rule 295 (EXP -> EXP is true .)
    mas             reduce using rule 295 (EXP -> EXP is true .)
    menos           reduce using rule 295 (EXP -> EXP is true .)
    multiplicacion  reduce using rule 295 (EXP -> EXP is true .)
    division        reduce using rule 295 (EXP -> EXP is true .)
    modulo          reduce using rule 295 (EXP -> EXP is true .)
    elevado         reduce using rule 295 (EXP -> EXP is true .)
    and             reduce using rule 295 (EXP -> EXP is true .)
    or              reduce using rule 295 (EXP -> EXP is true .)
    mayor           reduce using rule 295 (EXP -> EXP is true .)
    menor           reduce using rule 295 (EXP -> EXP is true .)
    mayor_igual     reduce using rule 295 (EXP -> EXP is true .)
    menor_igual     reduce using rule 295 (EXP -> EXP is true .)
    igual           reduce using rule 295 (EXP -> EXP is true .)
    diferente1      reduce using rule 295 (EXP -> EXP is true .)
    diferente2      reduce using rule 295 (EXP -> EXP is true .)
    between         reduce using rule 295 (EXP -> EXP is true .)
    is              reduce using rule 295 (EXP -> EXP is true .)
    isnull          reduce using rule 295 (EXP -> EXP is true .)
    notnull         reduce using rule 295 (EXP -> EXP is true .)
    as              reduce using rule 295 (EXP -> EXP is true .)
    cadenaString    reduce using rule 295 (EXP -> EXP is true .)
    id              reduce using rule 295 (EXP -> EXP is true .)
    cadena          reduce using rule 295 (EXP -> EXP is true .)
    in              reduce using rule 295 (EXP -> EXP is true .)
    not             reduce using rule 295 (EXP -> EXP is true .)
    like            reduce using rule 295 (EXP -> EXP is true .)
    then            reduce using rule 295 (EXP -> EXP is true .)
    when            reduce using rule 295 (EXP -> EXP is true .)
    parc            reduce using rule 295 (EXP -> EXP is true .)
    end             reduce using rule 295 (EXP -> EXP is true .)
    else            reduce using rule 295 (EXP -> EXP is true .)
    constraint      reduce using rule 295 (EXP -> EXP is true .)
    unique          reduce using rule 295 (EXP -> EXP is true .)
    check           reduce using rule 295 (EXP -> EXP is true .)
    default         reduce using rule 295 (EXP -> EXP is true .)
    null            reduce using rule 295 (EXP -> EXP is true .)
    primary         reduce using rule 295 (EXP -> EXP is true .)
    references      reduce using rule 295 (EXP -> EXP is true .)
    asc             reduce using rule 295 (EXP -> EXP is true .)
    desc            reduce using rule 295 (EXP -> EXP is true .)


state 217

    (297) EXP -> EXP is false .

    r_from          reduce using rule 297 (EXP -> EXP is false .)
    coma            reduce using rule 297 (EXP -> EXP is false .)
    where           reduce using rule 297 (EXP -> EXP is false .)
    group           reduce using rule 297 (EXP -> EXP is false .)
    having          reduce using rule 297 (EXP -> EXP is false .)
    union           reduce using rule 297 (EXP -> EXP is false .)
    intersect       reduce using rule 297 (EXP -> EXP is false .)
    except          reduce using rule 297 (EXP -> EXP is false .)
    order           reduce using rule 297 (EXP -> EXP is false .)
    limit           reduce using rule 297 (EXP -> EXP is false .)
    offset          reduce using rule 297 (EXP -> EXP is false .)
    ptcoma          reduce using rule 297 (EXP -> EXP is false .)
    mas             reduce using rule 297 (EXP -> EXP is false .)
    menos           reduce using rule 297 (EXP -> EXP is false .)
    multiplicacion  reduce using rule 297 (EXP -> EXP is false .)
    division        reduce using rule 297 (EXP -> EXP is false .)
    modulo          reduce using rule 297 (EXP -> EXP is false .)
    elevado         reduce using rule 297 (EXP -> EXP is false .)
    and             reduce using rule 297 (EXP -> EXP is false .)
    or              reduce using rule 297 (EXP -> EXP is false .)
    mayor           reduce using rule 297 (EXP -> EXP is false .)
    menor           reduce using rule 297 (EXP -> EXP is false .)
    mayor_igual     reduce using rule 297 (EXP -> EXP is false .)
    menor_igual     reduce using rule 297 (EXP -> EXP is false .)
    igual           reduce using rule 297 (EXP -> EXP is false .)
    diferente1      reduce using rule 297 (EXP -> EXP is false .)
    diferente2      reduce using rule 297 (EXP -> EXP is false .)
    between         reduce using rule 297 (EXP -> EXP is false .)
    is              reduce using rule 297 (EXP -> EXP is false .)
    isnull          reduce using rule 297 (EXP -> EXP is false .)
    notnull         reduce using rule 297 (EXP -> EXP is false .)
    as              reduce using rule 297 (EXP -> EXP is false .)
    cadenaString    reduce using rule 297 (EXP -> EXP is false .)
    id              reduce using rule 297 (EXP -> EXP is false .)
    cadena          reduce using rule 297 (EXP -> EXP is false .)
    in              reduce using rule 297 (EXP -> EXP is false .)
    not             reduce using rule 297 (EXP -> EXP is false .)
    like            reduce using rule 297 (EXP -> EXP is false .)
    then            reduce using rule 297 (EXP -> EXP is false .)
    when            reduce using rule 297 (EXP -> EXP is false .)
    parc            reduce using rule 297 (EXP -> EXP is false .)
    end             reduce using rule 297 (EXP -> EXP is false .)
    else            reduce using rule 297 (EXP -> EXP is false .)
    constraint      reduce using rule 297 (EXP -> EXP is false .)
    unique          reduce using rule 297 (EXP -> EXP is false .)
    check           reduce using rule 297 (EXP -> EXP is false .)
    default         reduce using rule 297 (EXP -> EXP is false .)
    null            reduce using rule 297 (EXP -> EXP is false .)
    primary         reduce using rule 297 (EXP -> EXP is false .)
    references      reduce using rule 297 (EXP -> EXP is false .)
    asc             reduce using rule 297 (EXP -> EXP is false .)
    desc            reduce using rule 297 (EXP -> EXP is false .)


state 218

    (299) EXP -> EXP is unknown .

    r_from          reduce using rule 299 (EXP -> EXP is unknown .)
    coma            reduce using rule 299 (EXP -> EXP is unknown .)
    where           reduce using rule 299 (EXP -> EXP is unknown .)
    group           reduce using rule 299 (EXP -> EXP is unknown .)
    having          reduce using rule 299 (EXP -> EXP is unknown .)
    union           reduce using rule 299 (EXP -> EXP is unknown .)
    intersect       reduce using rule 299 (EXP -> EXP is unknown .)
    except          reduce using rule 299 (EXP -> EXP is unknown .)
    order           reduce using rule 299 (EXP -> EXP is unknown .)
    limit           reduce using rule 299 (EXP -> EXP is unknown .)
    offset          reduce using rule 299 (EXP -> EXP is unknown .)
    ptcoma          reduce using rule 299 (EXP -> EXP is unknown .)
    mas             reduce using rule 299 (EXP -> EXP is unknown .)
    menos           reduce using rule 299 (EXP -> EXP is unknown .)
    multiplicacion  reduce using rule 299 (EXP -> EXP is unknown .)
    division        reduce using rule 299 (EXP -> EXP is unknown .)
    modulo          reduce using rule 299 (EXP -> EXP is unknown .)
    elevado         reduce using rule 299 (EXP -> EXP is unknown .)
    and             reduce using rule 299 (EXP -> EXP is unknown .)
    or              reduce using rule 299 (EXP -> EXP is unknown .)
    mayor           reduce using rule 299 (EXP -> EXP is unknown .)
    menor           reduce using rule 299 (EXP -> EXP is unknown .)
    mayor_igual     reduce using rule 299 (EXP -> EXP is unknown .)
    menor_igual     reduce using rule 299 (EXP -> EXP is unknown .)
    igual           reduce using rule 299 (EXP -> EXP is unknown .)
    diferente1      reduce using rule 299 (EXP -> EXP is unknown .)
    diferente2      reduce using rule 299 (EXP -> EXP is unknown .)
    between         reduce using rule 299 (EXP -> EXP is unknown .)
    is              reduce using rule 299 (EXP -> EXP is unknown .)
    isnull          reduce using rule 299 (EXP -> EXP is unknown .)
    notnull         reduce using rule 299 (EXP -> EXP is unknown .)
    as              reduce using rule 299 (EXP -> EXP is unknown .)
    cadenaString    reduce using rule 299 (EXP -> EXP is unknown .)
    id              reduce using rule 299 (EXP -> EXP is unknown .)
    cadena          reduce using rule 299 (EXP -> EXP is unknown .)
    in              reduce using rule 299 (EXP -> EXP is unknown .)
    not             reduce using rule 299 (EXP -> EXP is unknown .)
    like            reduce using rule 299 (EXP -> EXP is unknown .)
    then            reduce using rule 299 (EXP -> EXP is unknown .)
    when            reduce using rule 299 (EXP -> EXP is unknown .)
    parc            reduce using rule 299 (EXP -> EXP is unknown .)
    end             reduce using rule 299 (EXP -> EXP is unknown .)
    else            reduce using rule 299 (EXP -> EXP is unknown .)
    constraint      reduce using rule 299 (EXP -> EXP is unknown .)
    unique          reduce using rule 299 (EXP -> EXP is unknown .)
    check           reduce using rule 299 (EXP -> EXP is unknown .)
    default         reduce using rule 299 (EXP -> EXP is unknown .)
    null            reduce using rule 299 (EXP -> EXP is unknown .)
    primary         reduce using rule 299 (EXP -> EXP is unknown .)
    references      reduce using rule 299 (EXP -> EXP is unknown .)
    asc             reduce using rule 299 (EXP -> EXP is unknown .)
    desc            reduce using rule 299 (EXP -> EXP is unknown .)


state 219

    (315) EXP -> EXP is distinct . r_from EXP

    r_from          shift and go to state 329


state 220

    (311) EXP -> EXP not in . para EXP parc

    para            shift and go to state 330


state 221

    (312) EXP -> EXP not between . EXP
    (314) EXP -> EXP not between . symetric EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    symetric        shift and go to state 332
    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 331
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 222

    (318) EXP -> EXP not like . cadena

    cadena          shift and go to state 333


state 223

    (301) EXP -> EXP as cadenaString .

    r_from          reduce using rule 301 (EXP -> EXP as cadenaString .)
    coma            reduce using rule 301 (EXP -> EXP as cadenaString .)
    where           reduce using rule 301 (EXP -> EXP as cadenaString .)
    group           reduce using rule 301 (EXP -> EXP as cadenaString .)
    having          reduce using rule 301 (EXP -> EXP as cadenaString .)
    union           reduce using rule 301 (EXP -> EXP as cadenaString .)
    intersect       reduce using rule 301 (EXP -> EXP as cadenaString .)
    except          reduce using rule 301 (EXP -> EXP as cadenaString .)
    order           reduce using rule 301 (EXP -> EXP as cadenaString .)
    limit           reduce using rule 301 (EXP -> EXP as cadenaString .)
    offset          reduce using rule 301 (EXP -> EXP as cadenaString .)
    ptcoma          reduce using rule 301 (EXP -> EXP as cadenaString .)
    mas             reduce using rule 301 (EXP -> EXP as cadenaString .)
    menos           reduce using rule 301 (EXP -> EXP as cadenaString .)
    multiplicacion  reduce using rule 301 (EXP -> EXP as cadenaString .)
    division        reduce using rule 301 (EXP -> EXP as cadenaString .)
    modulo          reduce using rule 301 (EXP -> EXP as cadenaString .)
    elevado         reduce using rule 301 (EXP -> EXP as cadenaString .)
    and             reduce using rule 301 (EXP -> EXP as cadenaString .)
    or              reduce using rule 301 (EXP -> EXP as cadenaString .)
    mayor           reduce using rule 301 (EXP -> EXP as cadenaString .)
    menor           reduce using rule 301 (EXP -> EXP as cadenaString .)
    mayor_igual     reduce using rule 301 (EXP -> EXP as cadenaString .)
    menor_igual     reduce using rule 301 (EXP -> EXP as cadenaString .)
    igual           reduce using rule 301 (EXP -> EXP as cadenaString .)
    diferente1      reduce using rule 301 (EXP -> EXP as cadenaString .)
    diferente2      reduce using rule 301 (EXP -> EXP as cadenaString .)
    between         reduce using rule 301 (EXP -> EXP as cadenaString .)
    is              reduce using rule 301 (EXP -> EXP as cadenaString .)
    isnull          reduce using rule 301 (EXP -> EXP as cadenaString .)
    notnull         reduce using rule 301 (EXP -> EXP as cadenaString .)
    as              reduce using rule 301 (EXP -> EXP as cadenaString .)
    cadenaString    reduce using rule 301 (EXP -> EXP as cadenaString .)
    id              reduce using rule 301 (EXP -> EXP as cadenaString .)
    cadena          reduce using rule 301 (EXP -> EXP as cadenaString .)
    in              reduce using rule 301 (EXP -> EXP as cadenaString .)
    not             reduce using rule 301 (EXP -> EXP as cadenaString .)
    like            reduce using rule 301 (EXP -> EXP as cadenaString .)
    then            reduce using rule 301 (EXP -> EXP as cadenaString .)
    when            reduce using rule 301 (EXP -> EXP as cadenaString .)
    parc            reduce using rule 301 (EXP -> EXP as cadenaString .)
    end             reduce using rule 301 (EXP -> EXP as cadenaString .)
    else            reduce using rule 301 (EXP -> EXP as cadenaString .)
    constraint      reduce using rule 301 (EXP -> EXP as cadenaString .)
    unique          reduce using rule 301 (EXP -> EXP as cadenaString .)
    check           reduce using rule 301 (EXP -> EXP as cadenaString .)
    default         reduce using rule 301 (EXP -> EXP as cadenaString .)
    null            reduce using rule 301 (EXP -> EXP as cadenaString .)
    primary         reduce using rule 301 (EXP -> EXP as cadenaString .)
    references      reduce using rule 301 (EXP -> EXP as cadenaString .)
    asc             reduce using rule 301 (EXP -> EXP as cadenaString .)
    desc            reduce using rule 301 (EXP -> EXP as cadenaString .)


state 224

    (303) EXP -> EXP as id .

    r_from          reduce using rule 303 (EXP -> EXP as id .)
    coma            reduce using rule 303 (EXP -> EXP as id .)
    where           reduce using rule 303 (EXP -> EXP as id .)
    group           reduce using rule 303 (EXP -> EXP as id .)
    having          reduce using rule 303 (EXP -> EXP as id .)
    union           reduce using rule 303 (EXP -> EXP as id .)
    intersect       reduce using rule 303 (EXP -> EXP as id .)
    except          reduce using rule 303 (EXP -> EXP as id .)
    order           reduce using rule 303 (EXP -> EXP as id .)
    limit           reduce using rule 303 (EXP -> EXP as id .)
    offset          reduce using rule 303 (EXP -> EXP as id .)
    ptcoma          reduce using rule 303 (EXP -> EXP as id .)
    mas             reduce using rule 303 (EXP -> EXP as id .)
    menos           reduce using rule 303 (EXP -> EXP as id .)
    multiplicacion  reduce using rule 303 (EXP -> EXP as id .)
    division        reduce using rule 303 (EXP -> EXP as id .)
    modulo          reduce using rule 303 (EXP -> EXP as id .)
    elevado         reduce using rule 303 (EXP -> EXP as id .)
    and             reduce using rule 303 (EXP -> EXP as id .)
    or              reduce using rule 303 (EXP -> EXP as id .)
    mayor           reduce using rule 303 (EXP -> EXP as id .)
    menor           reduce using rule 303 (EXP -> EXP as id .)
    mayor_igual     reduce using rule 303 (EXP -> EXP as id .)
    menor_igual     reduce using rule 303 (EXP -> EXP as id .)
    igual           reduce using rule 303 (EXP -> EXP as id .)
    diferente1      reduce using rule 303 (EXP -> EXP as id .)
    diferente2      reduce using rule 303 (EXP -> EXP as id .)
    between         reduce using rule 303 (EXP -> EXP as id .)
    is              reduce using rule 303 (EXP -> EXP as id .)
    isnull          reduce using rule 303 (EXP -> EXP as id .)
    notnull         reduce using rule 303 (EXP -> EXP as id .)
    as              reduce using rule 303 (EXP -> EXP as id .)
    cadenaString    reduce using rule 303 (EXP -> EXP as id .)
    id              reduce using rule 303 (EXP -> EXP as id .)
    cadena          reduce using rule 303 (EXP -> EXP as id .)
    in              reduce using rule 303 (EXP -> EXP as id .)
    not             reduce using rule 303 (EXP -> EXP as id .)
    like            reduce using rule 303 (EXP -> EXP as id .)
    then            reduce using rule 303 (EXP -> EXP as id .)
    when            reduce using rule 303 (EXP -> EXP as id .)
    parc            reduce using rule 303 (EXP -> EXP as id .)
    end             reduce using rule 303 (EXP -> EXP as id .)
    else            reduce using rule 303 (EXP -> EXP as id .)
    constraint      reduce using rule 303 (EXP -> EXP as id .)
    unique          reduce using rule 303 (EXP -> EXP as id .)
    check           reduce using rule 303 (EXP -> EXP as id .)
    default         reduce using rule 303 (EXP -> EXP as id .)
    null            reduce using rule 303 (EXP -> EXP as id .)
    primary         reduce using rule 303 (EXP -> EXP as id .)
    references      reduce using rule 303 (EXP -> EXP as id .)
    asc             reduce using rule 303 (EXP -> EXP as id .)
    desc            reduce using rule 303 (EXP -> EXP as id .)


state 225

    (305) EXP -> EXP as cadena .

    r_from          reduce using rule 305 (EXP -> EXP as cadena .)
    coma            reduce using rule 305 (EXP -> EXP as cadena .)
    where           reduce using rule 305 (EXP -> EXP as cadena .)
    group           reduce using rule 305 (EXP -> EXP as cadena .)
    having          reduce using rule 305 (EXP -> EXP as cadena .)
    union           reduce using rule 305 (EXP -> EXP as cadena .)
    intersect       reduce using rule 305 (EXP -> EXP as cadena .)
    except          reduce using rule 305 (EXP -> EXP as cadena .)
    order           reduce using rule 305 (EXP -> EXP as cadena .)
    limit           reduce using rule 305 (EXP -> EXP as cadena .)
    offset          reduce using rule 305 (EXP -> EXP as cadena .)
    ptcoma          reduce using rule 305 (EXP -> EXP as cadena .)
    mas             reduce using rule 305 (EXP -> EXP as cadena .)
    menos           reduce using rule 305 (EXP -> EXP as cadena .)
    multiplicacion  reduce using rule 305 (EXP -> EXP as cadena .)
    division        reduce using rule 305 (EXP -> EXP as cadena .)
    modulo          reduce using rule 305 (EXP -> EXP as cadena .)
    elevado         reduce using rule 305 (EXP -> EXP as cadena .)
    and             reduce using rule 305 (EXP -> EXP as cadena .)
    or              reduce using rule 305 (EXP -> EXP as cadena .)
    mayor           reduce using rule 305 (EXP -> EXP as cadena .)
    menor           reduce using rule 305 (EXP -> EXP as cadena .)
    mayor_igual     reduce using rule 305 (EXP -> EXP as cadena .)
    menor_igual     reduce using rule 305 (EXP -> EXP as cadena .)
    igual           reduce using rule 305 (EXP -> EXP as cadena .)
    diferente1      reduce using rule 305 (EXP -> EXP as cadena .)
    diferente2      reduce using rule 305 (EXP -> EXP as cadena .)
    between         reduce using rule 305 (EXP -> EXP as cadena .)
    is              reduce using rule 305 (EXP -> EXP as cadena .)
    isnull          reduce using rule 305 (EXP -> EXP as cadena .)
    notnull         reduce using rule 305 (EXP -> EXP as cadena .)
    as              reduce using rule 305 (EXP -> EXP as cadena .)
    cadenaString    reduce using rule 305 (EXP -> EXP as cadena .)
    id              reduce using rule 305 (EXP -> EXP as cadena .)
    cadena          reduce using rule 305 (EXP -> EXP as cadena .)
    in              reduce using rule 305 (EXP -> EXP as cadena .)
    not             reduce using rule 305 (EXP -> EXP as cadena .)
    like            reduce using rule 305 (EXP -> EXP as cadena .)
    then            reduce using rule 305 (EXP -> EXP as cadena .)
    when            reduce using rule 305 (EXP -> EXP as cadena .)
    parc            reduce using rule 305 (EXP -> EXP as cadena .)
    end             reduce using rule 305 (EXP -> EXP as cadena .)
    else            reduce using rule 305 (EXP -> EXP as cadena .)
    constraint      reduce using rule 305 (EXP -> EXP as cadena .)
    unique          reduce using rule 305 (EXP -> EXP as cadena .)
    check           reduce using rule 305 (EXP -> EXP as cadena .)
    default         reduce using rule 305 (EXP -> EXP as cadena .)
    null            reduce using rule 305 (EXP -> EXP as cadena .)
    primary         reduce using rule 305 (EXP -> EXP as cadena .)
    references      reduce using rule 305 (EXP -> EXP as cadena .)
    asc             reduce using rule 305 (EXP -> EXP as cadena .)
    desc            reduce using rule 305 (EXP -> EXP as cadena .)


state 226

    (310) EXP -> EXP in para . EXP parc
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 334
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 227

    (317) EXP -> EXP like cadena .

    r_from          reduce using rule 317 (EXP -> EXP like cadena .)
    coma            reduce using rule 317 (EXP -> EXP like cadena .)
    where           reduce using rule 317 (EXP -> EXP like cadena .)
    group           reduce using rule 317 (EXP -> EXP like cadena .)
    having          reduce using rule 317 (EXP -> EXP like cadena .)
    union           reduce using rule 317 (EXP -> EXP like cadena .)
    intersect       reduce using rule 317 (EXP -> EXP like cadena .)
    except          reduce using rule 317 (EXP -> EXP like cadena .)
    order           reduce using rule 317 (EXP -> EXP like cadena .)
    limit           reduce using rule 317 (EXP -> EXP like cadena .)
    offset          reduce using rule 317 (EXP -> EXP like cadena .)
    ptcoma          reduce using rule 317 (EXP -> EXP like cadena .)
    mas             reduce using rule 317 (EXP -> EXP like cadena .)
    menos           reduce using rule 317 (EXP -> EXP like cadena .)
    multiplicacion  reduce using rule 317 (EXP -> EXP like cadena .)
    division        reduce using rule 317 (EXP -> EXP like cadena .)
    modulo          reduce using rule 317 (EXP -> EXP like cadena .)
    elevado         reduce using rule 317 (EXP -> EXP like cadena .)
    and             reduce using rule 317 (EXP -> EXP like cadena .)
    or              reduce using rule 317 (EXP -> EXP like cadena .)
    mayor           reduce using rule 317 (EXP -> EXP like cadena .)
    menor           reduce using rule 317 (EXP -> EXP like cadena .)
    mayor_igual     reduce using rule 317 (EXP -> EXP like cadena .)
    menor_igual     reduce using rule 317 (EXP -> EXP like cadena .)
    igual           reduce using rule 317 (EXP -> EXP like cadena .)
    diferente1      reduce using rule 317 (EXP -> EXP like cadena .)
    diferente2      reduce using rule 317 (EXP -> EXP like cadena .)
    between         reduce using rule 317 (EXP -> EXP like cadena .)
    is              reduce using rule 317 (EXP -> EXP like cadena .)
    isnull          reduce using rule 317 (EXP -> EXP like cadena .)
    notnull         reduce using rule 317 (EXP -> EXP like cadena .)
    as              reduce using rule 317 (EXP -> EXP like cadena .)
    cadenaString    reduce using rule 317 (EXP -> EXP like cadena .)
    id              reduce using rule 317 (EXP -> EXP like cadena .)
    cadena          reduce using rule 317 (EXP -> EXP like cadena .)
    in              reduce using rule 317 (EXP -> EXP like cadena .)
    not             reduce using rule 317 (EXP -> EXP like cadena .)
    like            reduce using rule 317 (EXP -> EXP like cadena .)
    then            reduce using rule 317 (EXP -> EXP like cadena .)
    when            reduce using rule 317 (EXP -> EXP like cadena .)
    parc            reduce using rule 317 (EXP -> EXP like cadena .)
    end             reduce using rule 317 (EXP -> EXP like cadena .)
    else            reduce using rule 317 (EXP -> EXP like cadena .)
    constraint      reduce using rule 317 (EXP -> EXP like cadena .)
    unique          reduce using rule 317 (EXP -> EXP like cadena .)
    check           reduce using rule 317 (EXP -> EXP like cadena .)
    default         reduce using rule 317 (EXP -> EXP like cadena .)
    null            reduce using rule 317 (EXP -> EXP like cadena .)
    primary         reduce using rule 317 (EXP -> EXP like cadena .)
    references      reduce using rule 317 (EXP -> EXP like cadena .)
    asc             reduce using rule 317 (EXP -> EXP like cadena .)
    desc            reduce using rule 317 (EXP -> EXP like cadena .)


state 228

    (322) EXP -> id para LEXP . parc
    (226) LEXP -> LEXP . coma EXP

    parc            shift and go to state 335
    coma            shift and go to state 121


state 229

    (323) EXP -> id para parc .

    r_from          reduce using rule 323 (EXP -> id para parc .)
    coma            reduce using rule 323 (EXP -> id para parc .)
    where           reduce using rule 323 (EXP -> id para parc .)
    group           reduce using rule 323 (EXP -> id para parc .)
    having          reduce using rule 323 (EXP -> id para parc .)
    union           reduce using rule 323 (EXP -> id para parc .)
    intersect       reduce using rule 323 (EXP -> id para parc .)
    except          reduce using rule 323 (EXP -> id para parc .)
    order           reduce using rule 323 (EXP -> id para parc .)
    limit           reduce using rule 323 (EXP -> id para parc .)
    offset          reduce using rule 323 (EXP -> id para parc .)
    ptcoma          reduce using rule 323 (EXP -> id para parc .)
    mas             reduce using rule 323 (EXP -> id para parc .)
    menos           reduce using rule 323 (EXP -> id para parc .)
    multiplicacion  reduce using rule 323 (EXP -> id para parc .)
    division        reduce using rule 323 (EXP -> id para parc .)
    modulo          reduce using rule 323 (EXP -> id para parc .)
    elevado         reduce using rule 323 (EXP -> id para parc .)
    and             reduce using rule 323 (EXP -> id para parc .)
    or              reduce using rule 323 (EXP -> id para parc .)
    mayor           reduce using rule 323 (EXP -> id para parc .)
    menor           reduce using rule 323 (EXP -> id para parc .)
    mayor_igual     reduce using rule 323 (EXP -> id para parc .)
    menor_igual     reduce using rule 323 (EXP -> id para parc .)
    igual           reduce using rule 323 (EXP -> id para parc .)
    diferente1      reduce using rule 323 (EXP -> id para parc .)
    diferente2      reduce using rule 323 (EXP -> id para parc .)
    between         reduce using rule 323 (EXP -> id para parc .)
    is              reduce using rule 323 (EXP -> id para parc .)
    isnull          reduce using rule 323 (EXP -> id para parc .)
    notnull         reduce using rule 323 (EXP -> id para parc .)
    as              reduce using rule 323 (EXP -> id para parc .)
    cadenaString    reduce using rule 323 (EXP -> id para parc .)
    id              reduce using rule 323 (EXP -> id para parc .)
    cadena          reduce using rule 323 (EXP -> id para parc .)
    in              reduce using rule 323 (EXP -> id para parc .)
    not             reduce using rule 323 (EXP -> id para parc .)
    like            reduce using rule 323 (EXP -> id para parc .)
    then            reduce using rule 323 (EXP -> id para parc .)
    when            reduce using rule 323 (EXP -> id para parc .)
    parc            reduce using rule 323 (EXP -> id para parc .)
    end             reduce using rule 323 (EXP -> id para parc .)
    else            reduce using rule 323 (EXP -> id para parc .)
    constraint      reduce using rule 323 (EXP -> id para parc .)
    unique          reduce using rule 323 (EXP -> id para parc .)
    check           reduce using rule 323 (EXP -> id para parc .)
    default         reduce using rule 323 (EXP -> id para parc .)
    null            reduce using rule 323 (EXP -> id para parc .)
    primary         reduce using rule 323 (EXP -> id para parc .)
    references      reduce using rule 323 (EXP -> id para parc .)
    asc             reduce using rule 323 (EXP -> id para parc .)
    desc            reduce using rule 323 (EXP -> id para parc .)


state 230

    (341) EXP -> cadena as TIPO .

    r_from          reduce using rule 341 (EXP -> cadena as TIPO .)
    coma            reduce using rule 341 (EXP -> cadena as TIPO .)
    where           reduce using rule 341 (EXP -> cadena as TIPO .)
    group           reduce using rule 341 (EXP -> cadena as TIPO .)
    having          reduce using rule 341 (EXP -> cadena as TIPO .)
    union           reduce using rule 341 (EXP -> cadena as TIPO .)
    intersect       reduce using rule 341 (EXP -> cadena as TIPO .)
    except          reduce using rule 341 (EXP -> cadena as TIPO .)
    order           reduce using rule 341 (EXP -> cadena as TIPO .)
    limit           reduce using rule 341 (EXP -> cadena as TIPO .)
    offset          reduce using rule 341 (EXP -> cadena as TIPO .)
    ptcoma          reduce using rule 341 (EXP -> cadena as TIPO .)
    mas             reduce using rule 341 (EXP -> cadena as TIPO .)
    menos           reduce using rule 341 (EXP -> cadena as TIPO .)
    multiplicacion  reduce using rule 341 (EXP -> cadena as TIPO .)
    division        reduce using rule 341 (EXP -> cadena as TIPO .)
    modulo          reduce using rule 341 (EXP -> cadena as TIPO .)
    elevado         reduce using rule 341 (EXP -> cadena as TIPO .)
    and             reduce using rule 341 (EXP -> cadena as TIPO .)
    or              reduce using rule 341 (EXP -> cadena as TIPO .)
    mayor           reduce using rule 341 (EXP -> cadena as TIPO .)
    menor           reduce using rule 341 (EXP -> cadena as TIPO .)
    mayor_igual     reduce using rule 341 (EXP -> cadena as TIPO .)
    menor_igual     reduce using rule 341 (EXP -> cadena as TIPO .)
    igual           reduce using rule 341 (EXP -> cadena as TIPO .)
    diferente1      reduce using rule 341 (EXP -> cadena as TIPO .)
    diferente2      reduce using rule 341 (EXP -> cadena as TIPO .)
    between         reduce using rule 341 (EXP -> cadena as TIPO .)
    is              reduce using rule 341 (EXP -> cadena as TIPO .)
    isnull          reduce using rule 341 (EXP -> cadena as TIPO .)
    notnull         reduce using rule 341 (EXP -> cadena as TIPO .)
    as              reduce using rule 341 (EXP -> cadena as TIPO .)
    cadenaString    reduce using rule 341 (EXP -> cadena as TIPO .)
    id              reduce using rule 341 (EXP -> cadena as TIPO .)
    cadena          reduce using rule 341 (EXP -> cadena as TIPO .)
    in              reduce using rule 341 (EXP -> cadena as TIPO .)
    not             reduce using rule 341 (EXP -> cadena as TIPO .)
    like            reduce using rule 341 (EXP -> cadena as TIPO .)
    then            reduce using rule 341 (EXP -> cadena as TIPO .)
    when            reduce using rule 341 (EXP -> cadena as TIPO .)
    parc            reduce using rule 341 (EXP -> cadena as TIPO .)
    end             reduce using rule 341 (EXP -> cadena as TIPO .)
    else            reduce using rule 341 (EXP -> cadena as TIPO .)
    constraint      reduce using rule 341 (EXP -> cadena as TIPO .)
    unique          reduce using rule 341 (EXP -> cadena as TIPO .)
    check           reduce using rule 341 (EXP -> cadena as TIPO .)
    default         reduce using rule 341 (EXP -> cadena as TIPO .)
    null            reduce using rule 341 (EXP -> cadena as TIPO .)
    primary         reduce using rule 341 (EXP -> cadena as TIPO .)
    references      reduce using rule 341 (EXP -> cadena as TIPO .)
    asc             reduce using rule 341 (EXP -> cadena as TIPO .)
    desc            reduce using rule 341 (EXP -> cadena as TIPO .)


state 231

    (228) TIPO -> interval . cadena
    (238) TIPO -> interval . para int parc
    (248) TIPO -> interval . para int parc cadena
    (260) TIPO -> interval .

  ! shift/reduce conflict for cadena resolved as shift
    cadena          shift and go to state 336
    para            shift and go to state 337
    r_from          reduce using rule 260 (TIPO -> interval .)
    coma            reduce using rule 260 (TIPO -> interval .)
    where           reduce using rule 260 (TIPO -> interval .)
    group           reduce using rule 260 (TIPO -> interval .)
    having          reduce using rule 260 (TIPO -> interval .)
    union           reduce using rule 260 (TIPO -> interval .)
    intersect       reduce using rule 260 (TIPO -> interval .)
    except          reduce using rule 260 (TIPO -> interval .)
    order           reduce using rule 260 (TIPO -> interval .)
    limit           reduce using rule 260 (TIPO -> interval .)
    offset          reduce using rule 260 (TIPO -> interval .)
    ptcoma          reduce using rule 260 (TIPO -> interval .)
    mas             reduce using rule 260 (TIPO -> interval .)
    menos           reduce using rule 260 (TIPO -> interval .)
    multiplicacion  reduce using rule 260 (TIPO -> interval .)
    division        reduce using rule 260 (TIPO -> interval .)
    modulo          reduce using rule 260 (TIPO -> interval .)
    elevado         reduce using rule 260 (TIPO -> interval .)
    and             reduce using rule 260 (TIPO -> interval .)
    or              reduce using rule 260 (TIPO -> interval .)
    mayor           reduce using rule 260 (TIPO -> interval .)
    menor           reduce using rule 260 (TIPO -> interval .)
    mayor_igual     reduce using rule 260 (TIPO -> interval .)
    menor_igual     reduce using rule 260 (TIPO -> interval .)
    igual           reduce using rule 260 (TIPO -> interval .)
    diferente1      reduce using rule 260 (TIPO -> interval .)
    diferente2      reduce using rule 260 (TIPO -> interval .)
    between         reduce using rule 260 (TIPO -> interval .)
    is              reduce using rule 260 (TIPO -> interval .)
    isnull          reduce using rule 260 (TIPO -> interval .)
    notnull         reduce using rule 260 (TIPO -> interval .)
    as              reduce using rule 260 (TIPO -> interval .)
    cadenaString    reduce using rule 260 (TIPO -> interval .)
    id              reduce using rule 260 (TIPO -> interval .)
    in              reduce using rule 260 (TIPO -> interval .)
    not             reduce using rule 260 (TIPO -> interval .)
    like            reduce using rule 260 (TIPO -> interval .)
    then            reduce using rule 260 (TIPO -> interval .)
    when            reduce using rule 260 (TIPO -> interval .)
    parc            reduce using rule 260 (TIPO -> interval .)
    end             reduce using rule 260 (TIPO -> interval .)
    else            reduce using rule 260 (TIPO -> interval .)
    constraint      reduce using rule 260 (TIPO -> interval .)
    unique          reduce using rule 260 (TIPO -> interval .)
    check           reduce using rule 260 (TIPO -> interval .)
    default         reduce using rule 260 (TIPO -> interval .)
    null            reduce using rule 260 (TIPO -> interval .)
    primary         reduce using rule 260 (TIPO -> interval .)
    references      reduce using rule 260 (TIPO -> interval .)
    asc             reduce using rule 260 (TIPO -> interval .)
    desc            reduce using rule 260 (TIPO -> interval .)
    dospuntos       reduce using rule 260 (TIPO -> interval .)
    language        reduce using rule 260 (TIPO -> interval .)
    do              reduce using rule 260 (TIPO -> interval .)
    declare         reduce using rule 260 (TIPO -> interval .)
    if              reduce using rule 260 (TIPO -> interval .)
    raise           reduce using rule 260 (TIPO -> interval .)
    begin           reduce using rule 260 (TIPO -> interval .)
    execute         reduce using rule 260 (TIPO -> interval .)
    return          reduce using rule 260 (TIPO -> interval .)
    insert          reduce using rule 260 (TIPO -> interval .)
    select          reduce using rule 260 (TIPO -> interval .)
    update          reduce using rule 260 (TIPO -> interval .)
    delete          reduce using rule 260 (TIPO -> interval .)

  ! cadena          [ reduce using rule 260 (TIPO -> interval .) ]


state 232

    (229) TIPO -> decimal . para int coma int parc
    (230) TIPO -> decimal . para int parc
    (231) TIPO -> decimal .

    para            shift and go to state 338
    r_from          reduce using rule 231 (TIPO -> decimal .)
    coma            reduce using rule 231 (TIPO -> decimal .)
    where           reduce using rule 231 (TIPO -> decimal .)
    group           reduce using rule 231 (TIPO -> decimal .)
    having          reduce using rule 231 (TIPO -> decimal .)
    union           reduce using rule 231 (TIPO -> decimal .)
    intersect       reduce using rule 231 (TIPO -> decimal .)
    except          reduce using rule 231 (TIPO -> decimal .)
    order           reduce using rule 231 (TIPO -> decimal .)
    limit           reduce using rule 231 (TIPO -> decimal .)
    offset          reduce using rule 231 (TIPO -> decimal .)
    ptcoma          reduce using rule 231 (TIPO -> decimal .)
    mas             reduce using rule 231 (TIPO -> decimal .)
    menos           reduce using rule 231 (TIPO -> decimal .)
    multiplicacion  reduce using rule 231 (TIPO -> decimal .)
    division        reduce using rule 231 (TIPO -> decimal .)
    modulo          reduce using rule 231 (TIPO -> decimal .)
    elevado         reduce using rule 231 (TIPO -> decimal .)
    and             reduce using rule 231 (TIPO -> decimal .)
    or              reduce using rule 231 (TIPO -> decimal .)
    mayor           reduce using rule 231 (TIPO -> decimal .)
    menor           reduce using rule 231 (TIPO -> decimal .)
    mayor_igual     reduce using rule 231 (TIPO -> decimal .)
    menor_igual     reduce using rule 231 (TIPO -> decimal .)
    igual           reduce using rule 231 (TIPO -> decimal .)
    diferente1      reduce using rule 231 (TIPO -> decimal .)
    diferente2      reduce using rule 231 (TIPO -> decimal .)
    between         reduce using rule 231 (TIPO -> decimal .)
    is              reduce using rule 231 (TIPO -> decimal .)
    isnull          reduce using rule 231 (TIPO -> decimal .)
    notnull         reduce using rule 231 (TIPO -> decimal .)
    as              reduce using rule 231 (TIPO -> decimal .)
    cadenaString    reduce using rule 231 (TIPO -> decimal .)
    id              reduce using rule 231 (TIPO -> decimal .)
    cadena          reduce using rule 231 (TIPO -> decimal .)
    in              reduce using rule 231 (TIPO -> decimal .)
    not             reduce using rule 231 (TIPO -> decimal .)
    like            reduce using rule 231 (TIPO -> decimal .)
    then            reduce using rule 231 (TIPO -> decimal .)
    when            reduce using rule 231 (TIPO -> decimal .)
    parc            reduce using rule 231 (TIPO -> decimal .)
    end             reduce using rule 231 (TIPO -> decimal .)
    else            reduce using rule 231 (TIPO -> decimal .)
    constraint      reduce using rule 231 (TIPO -> decimal .)
    unique          reduce using rule 231 (TIPO -> decimal .)
    check           reduce using rule 231 (TIPO -> decimal .)
    default         reduce using rule 231 (TIPO -> decimal .)
    null            reduce using rule 231 (TIPO -> decimal .)
    primary         reduce using rule 231 (TIPO -> decimal .)
    references      reduce using rule 231 (TIPO -> decimal .)
    asc             reduce using rule 231 (TIPO -> decimal .)
    desc            reduce using rule 231 (TIPO -> decimal .)
    dospuntos       reduce using rule 231 (TIPO -> decimal .)
    language        reduce using rule 231 (TIPO -> decimal .)
    do              reduce using rule 231 (TIPO -> decimal .)
    declare         reduce using rule 231 (TIPO -> decimal .)
    if              reduce using rule 231 (TIPO -> decimal .)
    raise           reduce using rule 231 (TIPO -> decimal .)
    begin           reduce using rule 231 (TIPO -> decimal .)
    execute         reduce using rule 231 (TIPO -> decimal .)
    return          reduce using rule 231 (TIPO -> decimal .)
    insert          reduce using rule 231 (TIPO -> decimal .)
    select          reduce using rule 231 (TIPO -> decimal .)
    update          reduce using rule 231 (TIPO -> decimal .)
    delete          reduce using rule 231 (TIPO -> decimal .)


state 233

    (232) TIPO -> numeric . para int coma int parc
    (233) TIPO -> numeric . para int parc
    (234) TIPO -> numeric .

    para            shift and go to state 339
    r_from          reduce using rule 234 (TIPO -> numeric .)
    coma            reduce using rule 234 (TIPO -> numeric .)
    where           reduce using rule 234 (TIPO -> numeric .)
    group           reduce using rule 234 (TIPO -> numeric .)
    having          reduce using rule 234 (TIPO -> numeric .)
    union           reduce using rule 234 (TIPO -> numeric .)
    intersect       reduce using rule 234 (TIPO -> numeric .)
    except          reduce using rule 234 (TIPO -> numeric .)
    order           reduce using rule 234 (TIPO -> numeric .)
    limit           reduce using rule 234 (TIPO -> numeric .)
    offset          reduce using rule 234 (TIPO -> numeric .)
    ptcoma          reduce using rule 234 (TIPO -> numeric .)
    mas             reduce using rule 234 (TIPO -> numeric .)
    menos           reduce using rule 234 (TIPO -> numeric .)
    multiplicacion  reduce using rule 234 (TIPO -> numeric .)
    division        reduce using rule 234 (TIPO -> numeric .)
    modulo          reduce using rule 234 (TIPO -> numeric .)
    elevado         reduce using rule 234 (TIPO -> numeric .)
    and             reduce using rule 234 (TIPO -> numeric .)
    or              reduce using rule 234 (TIPO -> numeric .)
    mayor           reduce using rule 234 (TIPO -> numeric .)
    menor           reduce using rule 234 (TIPO -> numeric .)
    mayor_igual     reduce using rule 234 (TIPO -> numeric .)
    menor_igual     reduce using rule 234 (TIPO -> numeric .)
    igual           reduce using rule 234 (TIPO -> numeric .)
    diferente1      reduce using rule 234 (TIPO -> numeric .)
    diferente2      reduce using rule 234 (TIPO -> numeric .)
    between         reduce using rule 234 (TIPO -> numeric .)
    is              reduce using rule 234 (TIPO -> numeric .)
    isnull          reduce using rule 234 (TIPO -> numeric .)
    notnull         reduce using rule 234 (TIPO -> numeric .)
    as              reduce using rule 234 (TIPO -> numeric .)
    cadenaString    reduce using rule 234 (TIPO -> numeric .)
    id              reduce using rule 234 (TIPO -> numeric .)
    cadena          reduce using rule 234 (TIPO -> numeric .)
    in              reduce using rule 234 (TIPO -> numeric .)
    not             reduce using rule 234 (TIPO -> numeric .)
    like            reduce using rule 234 (TIPO -> numeric .)
    then            reduce using rule 234 (TIPO -> numeric .)
    when            reduce using rule 234 (TIPO -> numeric .)
    parc            reduce using rule 234 (TIPO -> numeric .)
    end             reduce using rule 234 (TIPO -> numeric .)
    else            reduce using rule 234 (TIPO -> numeric .)
    constraint      reduce using rule 234 (TIPO -> numeric .)
    unique          reduce using rule 234 (TIPO -> numeric .)
    check           reduce using rule 234 (TIPO -> numeric .)
    default         reduce using rule 234 (TIPO -> numeric .)
    null            reduce using rule 234 (TIPO -> numeric .)
    primary         reduce using rule 234 (TIPO -> numeric .)
    references      reduce using rule 234 (TIPO -> numeric .)
    asc             reduce using rule 234 (TIPO -> numeric .)
    desc            reduce using rule 234 (TIPO -> numeric .)
    dospuntos       reduce using rule 234 (TIPO -> numeric .)
    language        reduce using rule 234 (TIPO -> numeric .)
    do              reduce using rule 234 (TIPO -> numeric .)
    declare         reduce using rule 234 (TIPO -> numeric .)
    if              reduce using rule 234 (TIPO -> numeric .)
    raise           reduce using rule 234 (TIPO -> numeric .)
    begin           reduce using rule 234 (TIPO -> numeric .)
    execute         reduce using rule 234 (TIPO -> numeric .)
    return          reduce using rule 234 (TIPO -> numeric .)
    insert          reduce using rule 234 (TIPO -> numeric .)
    select          reduce using rule 234 (TIPO -> numeric .)
    update          reduce using rule 234 (TIPO -> numeric .)
    delete          reduce using rule 234 (TIPO -> numeric .)


state 234

    (235) TIPO -> varchar . para int parc
    (263) TIPO -> varchar .

    para            shift and go to state 340
    r_from          reduce using rule 263 (TIPO -> varchar .)
    coma            reduce using rule 263 (TIPO -> varchar .)
    where           reduce using rule 263 (TIPO -> varchar .)
    group           reduce using rule 263 (TIPO -> varchar .)
    having          reduce using rule 263 (TIPO -> varchar .)
    union           reduce using rule 263 (TIPO -> varchar .)
    intersect       reduce using rule 263 (TIPO -> varchar .)
    except          reduce using rule 263 (TIPO -> varchar .)
    order           reduce using rule 263 (TIPO -> varchar .)
    limit           reduce using rule 263 (TIPO -> varchar .)
    offset          reduce using rule 263 (TIPO -> varchar .)
    ptcoma          reduce using rule 263 (TIPO -> varchar .)
    mas             reduce using rule 263 (TIPO -> varchar .)
    menos           reduce using rule 263 (TIPO -> varchar .)
    multiplicacion  reduce using rule 263 (TIPO -> varchar .)
    division        reduce using rule 263 (TIPO -> varchar .)
    modulo          reduce using rule 263 (TIPO -> varchar .)
    elevado         reduce using rule 263 (TIPO -> varchar .)
    and             reduce using rule 263 (TIPO -> varchar .)
    or              reduce using rule 263 (TIPO -> varchar .)
    mayor           reduce using rule 263 (TIPO -> varchar .)
    menor           reduce using rule 263 (TIPO -> varchar .)
    mayor_igual     reduce using rule 263 (TIPO -> varchar .)
    menor_igual     reduce using rule 263 (TIPO -> varchar .)
    igual           reduce using rule 263 (TIPO -> varchar .)
    diferente1      reduce using rule 263 (TIPO -> varchar .)
    diferente2      reduce using rule 263 (TIPO -> varchar .)
    between         reduce using rule 263 (TIPO -> varchar .)
    is              reduce using rule 263 (TIPO -> varchar .)
    isnull          reduce using rule 263 (TIPO -> varchar .)
    notnull         reduce using rule 263 (TIPO -> varchar .)
    as              reduce using rule 263 (TIPO -> varchar .)
    cadenaString    reduce using rule 263 (TIPO -> varchar .)
    id              reduce using rule 263 (TIPO -> varchar .)
    cadena          reduce using rule 263 (TIPO -> varchar .)
    in              reduce using rule 263 (TIPO -> varchar .)
    not             reduce using rule 263 (TIPO -> varchar .)
    like            reduce using rule 263 (TIPO -> varchar .)
    then            reduce using rule 263 (TIPO -> varchar .)
    when            reduce using rule 263 (TIPO -> varchar .)
    parc            reduce using rule 263 (TIPO -> varchar .)
    end             reduce using rule 263 (TIPO -> varchar .)
    else            reduce using rule 263 (TIPO -> varchar .)
    constraint      reduce using rule 263 (TIPO -> varchar .)
    unique          reduce using rule 263 (TIPO -> varchar .)
    check           reduce using rule 263 (TIPO -> varchar .)
    default         reduce using rule 263 (TIPO -> varchar .)
    null            reduce using rule 263 (TIPO -> varchar .)
    primary         reduce using rule 263 (TIPO -> varchar .)
    references      reduce using rule 263 (TIPO -> varchar .)
    asc             reduce using rule 263 (TIPO -> varchar .)
    desc            reduce using rule 263 (TIPO -> varchar .)
    dospuntos       reduce using rule 263 (TIPO -> varchar .)
    language        reduce using rule 263 (TIPO -> varchar .)
    do              reduce using rule 263 (TIPO -> varchar .)
    declare         reduce using rule 263 (TIPO -> varchar .)
    if              reduce using rule 263 (TIPO -> varchar .)
    raise           reduce using rule 263 (TIPO -> varchar .)
    begin           reduce using rule 263 (TIPO -> varchar .)
    execute         reduce using rule 263 (TIPO -> varchar .)
    return          reduce using rule 263 (TIPO -> varchar .)
    insert          reduce using rule 263 (TIPO -> varchar .)
    select          reduce using rule 263 (TIPO -> varchar .)
    update          reduce using rule 263 (TIPO -> varchar .)
    delete          reduce using rule 263 (TIPO -> varchar .)


state 235

    (236) TIPO -> timestamp . para int parc
    (244) TIPO -> timestamp . para int parc without time zone
    (245) TIPO -> timestamp . para int parc with time zone
    (257) TIPO -> timestamp .
    (264) TIPO -> timestamp . without time zone
    (265) TIPO -> timestamp . with time zone

    para            shift and go to state 341
    r_from          reduce using rule 257 (TIPO -> timestamp .)
    coma            reduce using rule 257 (TIPO -> timestamp .)
    where           reduce using rule 257 (TIPO -> timestamp .)
    group           reduce using rule 257 (TIPO -> timestamp .)
    having          reduce using rule 257 (TIPO -> timestamp .)
    union           reduce using rule 257 (TIPO -> timestamp .)
    intersect       reduce using rule 257 (TIPO -> timestamp .)
    except          reduce using rule 257 (TIPO -> timestamp .)
    order           reduce using rule 257 (TIPO -> timestamp .)
    limit           reduce using rule 257 (TIPO -> timestamp .)
    offset          reduce using rule 257 (TIPO -> timestamp .)
    ptcoma          reduce using rule 257 (TIPO -> timestamp .)
    mas             reduce using rule 257 (TIPO -> timestamp .)
    menos           reduce using rule 257 (TIPO -> timestamp .)
    multiplicacion  reduce using rule 257 (TIPO -> timestamp .)
    division        reduce using rule 257 (TIPO -> timestamp .)
    modulo          reduce using rule 257 (TIPO -> timestamp .)
    elevado         reduce using rule 257 (TIPO -> timestamp .)
    and             reduce using rule 257 (TIPO -> timestamp .)
    or              reduce using rule 257 (TIPO -> timestamp .)
    mayor           reduce using rule 257 (TIPO -> timestamp .)
    menor           reduce using rule 257 (TIPO -> timestamp .)
    mayor_igual     reduce using rule 257 (TIPO -> timestamp .)
    menor_igual     reduce using rule 257 (TIPO -> timestamp .)
    igual           reduce using rule 257 (TIPO -> timestamp .)
    diferente1      reduce using rule 257 (TIPO -> timestamp .)
    diferente2      reduce using rule 257 (TIPO -> timestamp .)
    between         reduce using rule 257 (TIPO -> timestamp .)
    is              reduce using rule 257 (TIPO -> timestamp .)
    isnull          reduce using rule 257 (TIPO -> timestamp .)
    notnull         reduce using rule 257 (TIPO -> timestamp .)
    as              reduce using rule 257 (TIPO -> timestamp .)
    cadenaString    reduce using rule 257 (TIPO -> timestamp .)
    id              reduce using rule 257 (TIPO -> timestamp .)
    cadena          reduce using rule 257 (TIPO -> timestamp .)
    in              reduce using rule 257 (TIPO -> timestamp .)
    not             reduce using rule 257 (TIPO -> timestamp .)
    like            reduce using rule 257 (TIPO -> timestamp .)
    then            reduce using rule 257 (TIPO -> timestamp .)
    when            reduce using rule 257 (TIPO -> timestamp .)
    parc            reduce using rule 257 (TIPO -> timestamp .)
    end             reduce using rule 257 (TIPO -> timestamp .)
    else            reduce using rule 257 (TIPO -> timestamp .)
    constraint      reduce using rule 257 (TIPO -> timestamp .)
    unique          reduce using rule 257 (TIPO -> timestamp .)
    check           reduce using rule 257 (TIPO -> timestamp .)
    default         reduce using rule 257 (TIPO -> timestamp .)
    null            reduce using rule 257 (TIPO -> timestamp .)
    primary         reduce using rule 257 (TIPO -> timestamp .)
    references      reduce using rule 257 (TIPO -> timestamp .)
    asc             reduce using rule 257 (TIPO -> timestamp .)
    desc            reduce using rule 257 (TIPO -> timestamp .)
    dospuntos       reduce using rule 257 (TIPO -> timestamp .)
    language        reduce using rule 257 (TIPO -> timestamp .)
    do              reduce using rule 257 (TIPO -> timestamp .)
    declare         reduce using rule 257 (TIPO -> timestamp .)
    if              reduce using rule 257 (TIPO -> timestamp .)
    raise           reduce using rule 257 (TIPO -> timestamp .)
    begin           reduce using rule 257 (TIPO -> timestamp .)
    execute         reduce using rule 257 (TIPO -> timestamp .)
    return          reduce using rule 257 (TIPO -> timestamp .)
    insert          reduce using rule 257 (TIPO -> timestamp .)
    select          reduce using rule 257 (TIPO -> timestamp .)
    update          reduce using rule 257 (TIPO -> timestamp .)
    delete          reduce using rule 257 (TIPO -> timestamp .)
    without         shift and go to state 342
    with            shift and go to state 343


state 236

    (237) TIPO -> character . para int parc
    (241) TIPO -> character . varying para int parc

    para            shift and go to state 344
    varying         shift and go to state 345


state 237

    (239) TIPO -> char . para int parc

    para            shift and go to state 346


state 238

    (240) TIPO -> time . para int parc
    (246) TIPO -> time . para int parc without time zone
    (247) TIPO -> time . para int parc with time zone
    (259) TIPO -> time .
    (266) TIPO -> time . without time zone
    (267) TIPO -> time . with time zone

    para            shift and go to state 347
    r_from          reduce using rule 259 (TIPO -> time .)
    coma            reduce using rule 259 (TIPO -> time .)
    where           reduce using rule 259 (TIPO -> time .)
    group           reduce using rule 259 (TIPO -> time .)
    having          reduce using rule 259 (TIPO -> time .)
    union           reduce using rule 259 (TIPO -> time .)
    intersect       reduce using rule 259 (TIPO -> time .)
    except          reduce using rule 259 (TIPO -> time .)
    order           reduce using rule 259 (TIPO -> time .)
    limit           reduce using rule 259 (TIPO -> time .)
    offset          reduce using rule 259 (TIPO -> time .)
    ptcoma          reduce using rule 259 (TIPO -> time .)
    mas             reduce using rule 259 (TIPO -> time .)
    menos           reduce using rule 259 (TIPO -> time .)
    multiplicacion  reduce using rule 259 (TIPO -> time .)
    division        reduce using rule 259 (TIPO -> time .)
    modulo          reduce using rule 259 (TIPO -> time .)
    elevado         reduce using rule 259 (TIPO -> time .)
    and             reduce using rule 259 (TIPO -> time .)
    or              reduce using rule 259 (TIPO -> time .)
    mayor           reduce using rule 259 (TIPO -> time .)
    menor           reduce using rule 259 (TIPO -> time .)
    mayor_igual     reduce using rule 259 (TIPO -> time .)
    menor_igual     reduce using rule 259 (TIPO -> time .)
    igual           reduce using rule 259 (TIPO -> time .)
    diferente1      reduce using rule 259 (TIPO -> time .)
    diferente2      reduce using rule 259 (TIPO -> time .)
    between         reduce using rule 259 (TIPO -> time .)
    is              reduce using rule 259 (TIPO -> time .)
    isnull          reduce using rule 259 (TIPO -> time .)
    notnull         reduce using rule 259 (TIPO -> time .)
    as              reduce using rule 259 (TIPO -> time .)
    cadenaString    reduce using rule 259 (TIPO -> time .)
    id              reduce using rule 259 (TIPO -> time .)
    cadena          reduce using rule 259 (TIPO -> time .)
    in              reduce using rule 259 (TIPO -> time .)
    not             reduce using rule 259 (TIPO -> time .)
    like            reduce using rule 259 (TIPO -> time .)
    then            reduce using rule 259 (TIPO -> time .)
    when            reduce using rule 259 (TIPO -> time .)
    parc            reduce using rule 259 (TIPO -> time .)
    end             reduce using rule 259 (TIPO -> time .)
    else            reduce using rule 259 (TIPO -> time .)
    constraint      reduce using rule 259 (TIPO -> time .)
    unique          reduce using rule 259 (TIPO -> time .)
    check           reduce using rule 259 (TIPO -> time .)
    default         reduce using rule 259 (TIPO -> time .)
    null            reduce using rule 259 (TIPO -> time .)
    primary         reduce using rule 259 (TIPO -> time .)
    references      reduce using rule 259 (TIPO -> time .)
    asc             reduce using rule 259 (TIPO -> time .)
    desc            reduce using rule 259 (TIPO -> time .)
    dospuntos       reduce using rule 259 (TIPO -> time .)
    language        reduce using rule 259 (TIPO -> time .)
    do              reduce using rule 259 (TIPO -> time .)
    declare         reduce using rule 259 (TIPO -> time .)
    if              reduce using rule 259 (TIPO -> time .)
    raise           reduce using rule 259 (TIPO -> time .)
    begin           reduce using rule 259 (TIPO -> time .)
    execute         reduce using rule 259 (TIPO -> time .)
    return          reduce using rule 259 (TIPO -> time .)
    insert          reduce using rule 259 (TIPO -> time .)
    select          reduce using rule 259 (TIPO -> time .)
    update          reduce using rule 259 (TIPO -> time .)
    delete          reduce using rule 259 (TIPO -> time .)
    without         shift and go to state 348
    with            shift and go to state 349


state 239

    (242) TIPO -> id . modulo rowtype
    (268) TIPO -> id .

  ! shift/reduce conflict for modulo resolved as shift
    modulo          shift and go to state 350
    r_from          reduce using rule 268 (TIPO -> id .)
    coma            reduce using rule 268 (TIPO -> id .)
    where           reduce using rule 268 (TIPO -> id .)
    group           reduce using rule 268 (TIPO -> id .)
    having          reduce using rule 268 (TIPO -> id .)
    union           reduce using rule 268 (TIPO -> id .)
    intersect       reduce using rule 268 (TIPO -> id .)
    except          reduce using rule 268 (TIPO -> id .)
    order           reduce using rule 268 (TIPO -> id .)
    limit           reduce using rule 268 (TIPO -> id .)
    offset          reduce using rule 268 (TIPO -> id .)
    ptcoma          reduce using rule 268 (TIPO -> id .)
    mas             reduce using rule 268 (TIPO -> id .)
    menos           reduce using rule 268 (TIPO -> id .)
    multiplicacion  reduce using rule 268 (TIPO -> id .)
    division        reduce using rule 268 (TIPO -> id .)
    elevado         reduce using rule 268 (TIPO -> id .)
    and             reduce using rule 268 (TIPO -> id .)
    or              reduce using rule 268 (TIPO -> id .)
    mayor           reduce using rule 268 (TIPO -> id .)
    menor           reduce using rule 268 (TIPO -> id .)
    mayor_igual     reduce using rule 268 (TIPO -> id .)
    menor_igual     reduce using rule 268 (TIPO -> id .)
    igual           reduce using rule 268 (TIPO -> id .)
    diferente1      reduce using rule 268 (TIPO -> id .)
    diferente2      reduce using rule 268 (TIPO -> id .)
    between         reduce using rule 268 (TIPO -> id .)
    is              reduce using rule 268 (TIPO -> id .)
    isnull          reduce using rule 268 (TIPO -> id .)
    notnull         reduce using rule 268 (TIPO -> id .)
    as              reduce using rule 268 (TIPO -> id .)
    cadenaString    reduce using rule 268 (TIPO -> id .)
    id              reduce using rule 268 (TIPO -> id .)
    cadena          reduce using rule 268 (TIPO -> id .)
    in              reduce using rule 268 (TIPO -> id .)
    not             reduce using rule 268 (TIPO -> id .)
    like            reduce using rule 268 (TIPO -> id .)
    then            reduce using rule 268 (TIPO -> id .)
    when            reduce using rule 268 (TIPO -> id .)
    parc            reduce using rule 268 (TIPO -> id .)
    end             reduce using rule 268 (TIPO -> id .)
    else            reduce using rule 268 (TIPO -> id .)
    constraint      reduce using rule 268 (TIPO -> id .)
    unique          reduce using rule 268 (TIPO -> id .)
    check           reduce using rule 268 (TIPO -> id .)
    default         reduce using rule 268 (TIPO -> id .)
    null            reduce using rule 268 (TIPO -> id .)
    primary         reduce using rule 268 (TIPO -> id .)
    references      reduce using rule 268 (TIPO -> id .)
    asc             reduce using rule 268 (TIPO -> id .)
    desc            reduce using rule 268 (TIPO -> id .)
    dospuntos       reduce using rule 268 (TIPO -> id .)
    language        reduce using rule 268 (TIPO -> id .)
    do              reduce using rule 268 (TIPO -> id .)
    declare         reduce using rule 268 (TIPO -> id .)
    if              reduce using rule 268 (TIPO -> id .)
    raise           reduce using rule 268 (TIPO -> id .)
    begin           reduce using rule 268 (TIPO -> id .)
    execute         reduce using rule 268 (TIPO -> id .)
    return          reduce using rule 268 (TIPO -> id .)
    insert          reduce using rule 268 (TIPO -> id .)
    select          reduce using rule 268 (TIPO -> id .)
    update          reduce using rule 268 (TIPO -> id .)
    delete          reduce using rule 268 (TIPO -> id .)

  ! modulo          [ reduce using rule 268 (TIPO -> id .) ]


state 240

    (243) TIPO -> idPunto . modulo type

    modulo          shift and go to state 351


state 241

    (249) TIPO -> smallint .

    r_from          reduce using rule 249 (TIPO -> smallint .)
    coma            reduce using rule 249 (TIPO -> smallint .)
    where           reduce using rule 249 (TIPO -> smallint .)
    group           reduce using rule 249 (TIPO -> smallint .)
    having          reduce using rule 249 (TIPO -> smallint .)
    union           reduce using rule 249 (TIPO -> smallint .)
    intersect       reduce using rule 249 (TIPO -> smallint .)
    except          reduce using rule 249 (TIPO -> smallint .)
    order           reduce using rule 249 (TIPO -> smallint .)
    limit           reduce using rule 249 (TIPO -> smallint .)
    offset          reduce using rule 249 (TIPO -> smallint .)
    ptcoma          reduce using rule 249 (TIPO -> smallint .)
    mas             reduce using rule 249 (TIPO -> smallint .)
    menos           reduce using rule 249 (TIPO -> smallint .)
    multiplicacion  reduce using rule 249 (TIPO -> smallint .)
    division        reduce using rule 249 (TIPO -> smallint .)
    modulo          reduce using rule 249 (TIPO -> smallint .)
    elevado         reduce using rule 249 (TIPO -> smallint .)
    and             reduce using rule 249 (TIPO -> smallint .)
    or              reduce using rule 249 (TIPO -> smallint .)
    mayor           reduce using rule 249 (TIPO -> smallint .)
    menor           reduce using rule 249 (TIPO -> smallint .)
    mayor_igual     reduce using rule 249 (TIPO -> smallint .)
    menor_igual     reduce using rule 249 (TIPO -> smallint .)
    igual           reduce using rule 249 (TIPO -> smallint .)
    diferente1      reduce using rule 249 (TIPO -> smallint .)
    diferente2      reduce using rule 249 (TIPO -> smallint .)
    between         reduce using rule 249 (TIPO -> smallint .)
    is              reduce using rule 249 (TIPO -> smallint .)
    isnull          reduce using rule 249 (TIPO -> smallint .)
    notnull         reduce using rule 249 (TIPO -> smallint .)
    as              reduce using rule 249 (TIPO -> smallint .)
    cadenaString    reduce using rule 249 (TIPO -> smallint .)
    id              reduce using rule 249 (TIPO -> smallint .)
    cadena          reduce using rule 249 (TIPO -> smallint .)
    in              reduce using rule 249 (TIPO -> smallint .)
    not             reduce using rule 249 (TIPO -> smallint .)
    like            reduce using rule 249 (TIPO -> smallint .)
    then            reduce using rule 249 (TIPO -> smallint .)
    when            reduce using rule 249 (TIPO -> smallint .)
    parc            reduce using rule 249 (TIPO -> smallint .)
    end             reduce using rule 249 (TIPO -> smallint .)
    else            reduce using rule 249 (TIPO -> smallint .)
    constraint      reduce using rule 249 (TIPO -> smallint .)
    unique          reduce using rule 249 (TIPO -> smallint .)
    check           reduce using rule 249 (TIPO -> smallint .)
    default         reduce using rule 249 (TIPO -> smallint .)
    null            reduce using rule 249 (TIPO -> smallint .)
    primary         reduce using rule 249 (TIPO -> smallint .)
    references      reduce using rule 249 (TIPO -> smallint .)
    asc             reduce using rule 249 (TIPO -> smallint .)
    desc            reduce using rule 249 (TIPO -> smallint .)
    dospuntos       reduce using rule 249 (TIPO -> smallint .)
    language        reduce using rule 249 (TIPO -> smallint .)
    do              reduce using rule 249 (TIPO -> smallint .)
    declare         reduce using rule 249 (TIPO -> smallint .)
    if              reduce using rule 249 (TIPO -> smallint .)
    raise           reduce using rule 249 (TIPO -> smallint .)
    begin           reduce using rule 249 (TIPO -> smallint .)
    execute         reduce using rule 249 (TIPO -> smallint .)
    return          reduce using rule 249 (TIPO -> smallint .)
    insert          reduce using rule 249 (TIPO -> smallint .)
    select          reduce using rule 249 (TIPO -> smallint .)
    update          reduce using rule 249 (TIPO -> smallint .)
    delete          reduce using rule 249 (TIPO -> smallint .)


state 242

    (250) TIPO -> integer .

    r_from          reduce using rule 250 (TIPO -> integer .)
    coma            reduce using rule 250 (TIPO -> integer .)
    where           reduce using rule 250 (TIPO -> integer .)
    group           reduce using rule 250 (TIPO -> integer .)
    having          reduce using rule 250 (TIPO -> integer .)
    union           reduce using rule 250 (TIPO -> integer .)
    intersect       reduce using rule 250 (TIPO -> integer .)
    except          reduce using rule 250 (TIPO -> integer .)
    order           reduce using rule 250 (TIPO -> integer .)
    limit           reduce using rule 250 (TIPO -> integer .)
    offset          reduce using rule 250 (TIPO -> integer .)
    ptcoma          reduce using rule 250 (TIPO -> integer .)
    mas             reduce using rule 250 (TIPO -> integer .)
    menos           reduce using rule 250 (TIPO -> integer .)
    multiplicacion  reduce using rule 250 (TIPO -> integer .)
    division        reduce using rule 250 (TIPO -> integer .)
    modulo          reduce using rule 250 (TIPO -> integer .)
    elevado         reduce using rule 250 (TIPO -> integer .)
    and             reduce using rule 250 (TIPO -> integer .)
    or              reduce using rule 250 (TIPO -> integer .)
    mayor           reduce using rule 250 (TIPO -> integer .)
    menor           reduce using rule 250 (TIPO -> integer .)
    mayor_igual     reduce using rule 250 (TIPO -> integer .)
    menor_igual     reduce using rule 250 (TIPO -> integer .)
    igual           reduce using rule 250 (TIPO -> integer .)
    diferente1      reduce using rule 250 (TIPO -> integer .)
    diferente2      reduce using rule 250 (TIPO -> integer .)
    between         reduce using rule 250 (TIPO -> integer .)
    is              reduce using rule 250 (TIPO -> integer .)
    isnull          reduce using rule 250 (TIPO -> integer .)
    notnull         reduce using rule 250 (TIPO -> integer .)
    as              reduce using rule 250 (TIPO -> integer .)
    cadenaString    reduce using rule 250 (TIPO -> integer .)
    id              reduce using rule 250 (TIPO -> integer .)
    cadena          reduce using rule 250 (TIPO -> integer .)
    in              reduce using rule 250 (TIPO -> integer .)
    not             reduce using rule 250 (TIPO -> integer .)
    like            reduce using rule 250 (TIPO -> integer .)
    then            reduce using rule 250 (TIPO -> integer .)
    when            reduce using rule 250 (TIPO -> integer .)
    parc            reduce using rule 250 (TIPO -> integer .)
    end             reduce using rule 250 (TIPO -> integer .)
    else            reduce using rule 250 (TIPO -> integer .)
    constraint      reduce using rule 250 (TIPO -> integer .)
    unique          reduce using rule 250 (TIPO -> integer .)
    check           reduce using rule 250 (TIPO -> integer .)
    default         reduce using rule 250 (TIPO -> integer .)
    null            reduce using rule 250 (TIPO -> integer .)
    primary         reduce using rule 250 (TIPO -> integer .)
    references      reduce using rule 250 (TIPO -> integer .)
    asc             reduce using rule 250 (TIPO -> integer .)
    desc            reduce using rule 250 (TIPO -> integer .)
    dospuntos       reduce using rule 250 (TIPO -> integer .)
    language        reduce using rule 250 (TIPO -> integer .)
    do              reduce using rule 250 (TIPO -> integer .)
    declare         reduce using rule 250 (TIPO -> integer .)
    if              reduce using rule 250 (TIPO -> integer .)
    raise           reduce using rule 250 (TIPO -> integer .)
    begin           reduce using rule 250 (TIPO -> integer .)
    execute         reduce using rule 250 (TIPO -> integer .)
    return          reduce using rule 250 (TIPO -> integer .)
    insert          reduce using rule 250 (TIPO -> integer .)
    select          reduce using rule 250 (TIPO -> integer .)
    update          reduce using rule 250 (TIPO -> integer .)
    delete          reduce using rule 250 (TIPO -> integer .)


state 243

    (251) TIPO -> r_int .

    r_from          reduce using rule 251 (TIPO -> r_int .)
    coma            reduce using rule 251 (TIPO -> r_int .)
    where           reduce using rule 251 (TIPO -> r_int .)
    group           reduce using rule 251 (TIPO -> r_int .)
    having          reduce using rule 251 (TIPO -> r_int .)
    union           reduce using rule 251 (TIPO -> r_int .)
    intersect       reduce using rule 251 (TIPO -> r_int .)
    except          reduce using rule 251 (TIPO -> r_int .)
    order           reduce using rule 251 (TIPO -> r_int .)
    limit           reduce using rule 251 (TIPO -> r_int .)
    offset          reduce using rule 251 (TIPO -> r_int .)
    ptcoma          reduce using rule 251 (TIPO -> r_int .)
    mas             reduce using rule 251 (TIPO -> r_int .)
    menos           reduce using rule 251 (TIPO -> r_int .)
    multiplicacion  reduce using rule 251 (TIPO -> r_int .)
    division        reduce using rule 251 (TIPO -> r_int .)
    modulo          reduce using rule 251 (TIPO -> r_int .)
    elevado         reduce using rule 251 (TIPO -> r_int .)
    and             reduce using rule 251 (TIPO -> r_int .)
    or              reduce using rule 251 (TIPO -> r_int .)
    mayor           reduce using rule 251 (TIPO -> r_int .)
    menor           reduce using rule 251 (TIPO -> r_int .)
    mayor_igual     reduce using rule 251 (TIPO -> r_int .)
    menor_igual     reduce using rule 251 (TIPO -> r_int .)
    igual           reduce using rule 251 (TIPO -> r_int .)
    diferente1      reduce using rule 251 (TIPO -> r_int .)
    diferente2      reduce using rule 251 (TIPO -> r_int .)
    between         reduce using rule 251 (TIPO -> r_int .)
    is              reduce using rule 251 (TIPO -> r_int .)
    isnull          reduce using rule 251 (TIPO -> r_int .)
    notnull         reduce using rule 251 (TIPO -> r_int .)
    as              reduce using rule 251 (TIPO -> r_int .)
    cadenaString    reduce using rule 251 (TIPO -> r_int .)
    id              reduce using rule 251 (TIPO -> r_int .)
    cadena          reduce using rule 251 (TIPO -> r_int .)
    in              reduce using rule 251 (TIPO -> r_int .)
    not             reduce using rule 251 (TIPO -> r_int .)
    like            reduce using rule 251 (TIPO -> r_int .)
    then            reduce using rule 251 (TIPO -> r_int .)
    when            reduce using rule 251 (TIPO -> r_int .)
    parc            reduce using rule 251 (TIPO -> r_int .)
    end             reduce using rule 251 (TIPO -> r_int .)
    else            reduce using rule 251 (TIPO -> r_int .)
    constraint      reduce using rule 251 (TIPO -> r_int .)
    unique          reduce using rule 251 (TIPO -> r_int .)
    check           reduce using rule 251 (TIPO -> r_int .)
    default         reduce using rule 251 (TIPO -> r_int .)
    null            reduce using rule 251 (TIPO -> r_int .)
    primary         reduce using rule 251 (TIPO -> r_int .)
    references      reduce using rule 251 (TIPO -> r_int .)
    asc             reduce using rule 251 (TIPO -> r_int .)
    desc            reduce using rule 251 (TIPO -> r_int .)
    dospuntos       reduce using rule 251 (TIPO -> r_int .)
    language        reduce using rule 251 (TIPO -> r_int .)
    do              reduce using rule 251 (TIPO -> r_int .)
    declare         reduce using rule 251 (TIPO -> r_int .)
    if              reduce using rule 251 (TIPO -> r_int .)
    raise           reduce using rule 251 (TIPO -> r_int .)
    begin           reduce using rule 251 (TIPO -> r_int .)
    execute         reduce using rule 251 (TIPO -> r_int .)
    return          reduce using rule 251 (TIPO -> r_int .)
    insert          reduce using rule 251 (TIPO -> r_int .)
    select          reduce using rule 251 (TIPO -> r_int .)
    update          reduce using rule 251 (TIPO -> r_int .)
    delete          reduce using rule 251 (TIPO -> r_int .)


state 244

    (252) TIPO -> bigint .

    r_from          reduce using rule 252 (TIPO -> bigint .)
    coma            reduce using rule 252 (TIPO -> bigint .)
    where           reduce using rule 252 (TIPO -> bigint .)
    group           reduce using rule 252 (TIPO -> bigint .)
    having          reduce using rule 252 (TIPO -> bigint .)
    union           reduce using rule 252 (TIPO -> bigint .)
    intersect       reduce using rule 252 (TIPO -> bigint .)
    except          reduce using rule 252 (TIPO -> bigint .)
    order           reduce using rule 252 (TIPO -> bigint .)
    limit           reduce using rule 252 (TIPO -> bigint .)
    offset          reduce using rule 252 (TIPO -> bigint .)
    ptcoma          reduce using rule 252 (TIPO -> bigint .)
    mas             reduce using rule 252 (TIPO -> bigint .)
    menos           reduce using rule 252 (TIPO -> bigint .)
    multiplicacion  reduce using rule 252 (TIPO -> bigint .)
    division        reduce using rule 252 (TIPO -> bigint .)
    modulo          reduce using rule 252 (TIPO -> bigint .)
    elevado         reduce using rule 252 (TIPO -> bigint .)
    and             reduce using rule 252 (TIPO -> bigint .)
    or              reduce using rule 252 (TIPO -> bigint .)
    mayor           reduce using rule 252 (TIPO -> bigint .)
    menor           reduce using rule 252 (TIPO -> bigint .)
    mayor_igual     reduce using rule 252 (TIPO -> bigint .)
    menor_igual     reduce using rule 252 (TIPO -> bigint .)
    igual           reduce using rule 252 (TIPO -> bigint .)
    diferente1      reduce using rule 252 (TIPO -> bigint .)
    diferente2      reduce using rule 252 (TIPO -> bigint .)
    between         reduce using rule 252 (TIPO -> bigint .)
    is              reduce using rule 252 (TIPO -> bigint .)
    isnull          reduce using rule 252 (TIPO -> bigint .)
    notnull         reduce using rule 252 (TIPO -> bigint .)
    as              reduce using rule 252 (TIPO -> bigint .)
    cadenaString    reduce using rule 252 (TIPO -> bigint .)
    id              reduce using rule 252 (TIPO -> bigint .)
    cadena          reduce using rule 252 (TIPO -> bigint .)
    in              reduce using rule 252 (TIPO -> bigint .)
    not             reduce using rule 252 (TIPO -> bigint .)
    like            reduce using rule 252 (TIPO -> bigint .)
    then            reduce using rule 252 (TIPO -> bigint .)
    when            reduce using rule 252 (TIPO -> bigint .)
    parc            reduce using rule 252 (TIPO -> bigint .)
    end             reduce using rule 252 (TIPO -> bigint .)
    else            reduce using rule 252 (TIPO -> bigint .)
    constraint      reduce using rule 252 (TIPO -> bigint .)
    unique          reduce using rule 252 (TIPO -> bigint .)
    check           reduce using rule 252 (TIPO -> bigint .)
    default         reduce using rule 252 (TIPO -> bigint .)
    null            reduce using rule 252 (TIPO -> bigint .)
    primary         reduce using rule 252 (TIPO -> bigint .)
    references      reduce using rule 252 (TIPO -> bigint .)
    asc             reduce using rule 252 (TIPO -> bigint .)
    desc            reduce using rule 252 (TIPO -> bigint .)
    dospuntos       reduce using rule 252 (TIPO -> bigint .)
    language        reduce using rule 252 (TIPO -> bigint .)
    do              reduce using rule 252 (TIPO -> bigint .)
    declare         reduce using rule 252 (TIPO -> bigint .)
    if              reduce using rule 252 (TIPO -> bigint .)
    raise           reduce using rule 252 (TIPO -> bigint .)
    begin           reduce using rule 252 (TIPO -> bigint .)
    execute         reduce using rule 252 (TIPO -> bigint .)
    return          reduce using rule 252 (TIPO -> bigint .)
    insert          reduce using rule 252 (TIPO -> bigint .)
    select          reduce using rule 252 (TIPO -> bigint .)
    update          reduce using rule 252 (TIPO -> bigint .)
    delete          reduce using rule 252 (TIPO -> bigint .)


state 245

    (253) TIPO -> real .

    r_from          reduce using rule 253 (TIPO -> real .)
    coma            reduce using rule 253 (TIPO -> real .)
    where           reduce using rule 253 (TIPO -> real .)
    group           reduce using rule 253 (TIPO -> real .)
    having          reduce using rule 253 (TIPO -> real .)
    union           reduce using rule 253 (TIPO -> real .)
    intersect       reduce using rule 253 (TIPO -> real .)
    except          reduce using rule 253 (TIPO -> real .)
    order           reduce using rule 253 (TIPO -> real .)
    limit           reduce using rule 253 (TIPO -> real .)
    offset          reduce using rule 253 (TIPO -> real .)
    ptcoma          reduce using rule 253 (TIPO -> real .)
    mas             reduce using rule 253 (TIPO -> real .)
    menos           reduce using rule 253 (TIPO -> real .)
    multiplicacion  reduce using rule 253 (TIPO -> real .)
    division        reduce using rule 253 (TIPO -> real .)
    modulo          reduce using rule 253 (TIPO -> real .)
    elevado         reduce using rule 253 (TIPO -> real .)
    and             reduce using rule 253 (TIPO -> real .)
    or              reduce using rule 253 (TIPO -> real .)
    mayor           reduce using rule 253 (TIPO -> real .)
    menor           reduce using rule 253 (TIPO -> real .)
    mayor_igual     reduce using rule 253 (TIPO -> real .)
    menor_igual     reduce using rule 253 (TIPO -> real .)
    igual           reduce using rule 253 (TIPO -> real .)
    diferente1      reduce using rule 253 (TIPO -> real .)
    diferente2      reduce using rule 253 (TIPO -> real .)
    between         reduce using rule 253 (TIPO -> real .)
    is              reduce using rule 253 (TIPO -> real .)
    isnull          reduce using rule 253 (TIPO -> real .)
    notnull         reduce using rule 253 (TIPO -> real .)
    as              reduce using rule 253 (TIPO -> real .)
    cadenaString    reduce using rule 253 (TIPO -> real .)
    id              reduce using rule 253 (TIPO -> real .)
    cadena          reduce using rule 253 (TIPO -> real .)
    in              reduce using rule 253 (TIPO -> real .)
    not             reduce using rule 253 (TIPO -> real .)
    like            reduce using rule 253 (TIPO -> real .)
    then            reduce using rule 253 (TIPO -> real .)
    when            reduce using rule 253 (TIPO -> real .)
    parc            reduce using rule 253 (TIPO -> real .)
    end             reduce using rule 253 (TIPO -> real .)
    else            reduce using rule 253 (TIPO -> real .)
    constraint      reduce using rule 253 (TIPO -> real .)
    unique          reduce using rule 253 (TIPO -> real .)
    check           reduce using rule 253 (TIPO -> real .)
    default         reduce using rule 253 (TIPO -> real .)
    null            reduce using rule 253 (TIPO -> real .)
    primary         reduce using rule 253 (TIPO -> real .)
    references      reduce using rule 253 (TIPO -> real .)
    asc             reduce using rule 253 (TIPO -> real .)
    desc            reduce using rule 253 (TIPO -> real .)
    dospuntos       reduce using rule 253 (TIPO -> real .)
    language        reduce using rule 253 (TIPO -> real .)
    do              reduce using rule 253 (TIPO -> real .)
    declare         reduce using rule 253 (TIPO -> real .)
    if              reduce using rule 253 (TIPO -> real .)
    raise           reduce using rule 253 (TIPO -> real .)
    begin           reduce using rule 253 (TIPO -> real .)
    execute         reduce using rule 253 (TIPO -> real .)
    return          reduce using rule 253 (TIPO -> real .)
    insert          reduce using rule 253 (TIPO -> real .)
    select          reduce using rule 253 (TIPO -> real .)
    update          reduce using rule 253 (TIPO -> real .)
    delete          reduce using rule 253 (TIPO -> real .)


state 246

    (254) TIPO -> double . precision

    precision       shift and go to state 352


state 247

    (255) TIPO -> money .

    r_from          reduce using rule 255 (TIPO -> money .)
    coma            reduce using rule 255 (TIPO -> money .)
    where           reduce using rule 255 (TIPO -> money .)
    group           reduce using rule 255 (TIPO -> money .)
    having          reduce using rule 255 (TIPO -> money .)
    union           reduce using rule 255 (TIPO -> money .)
    intersect       reduce using rule 255 (TIPO -> money .)
    except          reduce using rule 255 (TIPO -> money .)
    order           reduce using rule 255 (TIPO -> money .)
    limit           reduce using rule 255 (TIPO -> money .)
    offset          reduce using rule 255 (TIPO -> money .)
    ptcoma          reduce using rule 255 (TIPO -> money .)
    mas             reduce using rule 255 (TIPO -> money .)
    menos           reduce using rule 255 (TIPO -> money .)
    multiplicacion  reduce using rule 255 (TIPO -> money .)
    division        reduce using rule 255 (TIPO -> money .)
    modulo          reduce using rule 255 (TIPO -> money .)
    elevado         reduce using rule 255 (TIPO -> money .)
    and             reduce using rule 255 (TIPO -> money .)
    or              reduce using rule 255 (TIPO -> money .)
    mayor           reduce using rule 255 (TIPO -> money .)
    menor           reduce using rule 255 (TIPO -> money .)
    mayor_igual     reduce using rule 255 (TIPO -> money .)
    menor_igual     reduce using rule 255 (TIPO -> money .)
    igual           reduce using rule 255 (TIPO -> money .)
    diferente1      reduce using rule 255 (TIPO -> money .)
    diferente2      reduce using rule 255 (TIPO -> money .)
    between         reduce using rule 255 (TIPO -> money .)
    is              reduce using rule 255 (TIPO -> money .)
    isnull          reduce using rule 255 (TIPO -> money .)
    notnull         reduce using rule 255 (TIPO -> money .)
    as              reduce using rule 255 (TIPO -> money .)
    cadenaString    reduce using rule 255 (TIPO -> money .)
    id              reduce using rule 255 (TIPO -> money .)
    cadena          reduce using rule 255 (TIPO -> money .)
    in              reduce using rule 255 (TIPO -> money .)
    not             reduce using rule 255 (TIPO -> money .)
    like            reduce using rule 255 (TIPO -> money .)
    then            reduce using rule 255 (TIPO -> money .)
    when            reduce using rule 255 (TIPO -> money .)
    parc            reduce using rule 255 (TIPO -> money .)
    end             reduce using rule 255 (TIPO -> money .)
    else            reduce using rule 255 (TIPO -> money .)
    constraint      reduce using rule 255 (TIPO -> money .)
    unique          reduce using rule 255 (TIPO -> money .)
    check           reduce using rule 255 (TIPO -> money .)
    default         reduce using rule 255 (TIPO -> money .)
    null            reduce using rule 255 (TIPO -> money .)
    primary         reduce using rule 255 (TIPO -> money .)
    references      reduce using rule 255 (TIPO -> money .)
    asc             reduce using rule 255 (TIPO -> money .)
    desc            reduce using rule 255 (TIPO -> money .)
    dospuntos       reduce using rule 255 (TIPO -> money .)
    language        reduce using rule 255 (TIPO -> money .)
    do              reduce using rule 255 (TIPO -> money .)
    declare         reduce using rule 255 (TIPO -> money .)
    if              reduce using rule 255 (TIPO -> money .)
    raise           reduce using rule 255 (TIPO -> money .)
    begin           reduce using rule 255 (TIPO -> money .)
    execute         reduce using rule 255 (TIPO -> money .)
    return          reduce using rule 255 (TIPO -> money .)
    insert          reduce using rule 255 (TIPO -> money .)
    select          reduce using rule 255 (TIPO -> money .)
    update          reduce using rule 255 (TIPO -> money .)
    delete          reduce using rule 255 (TIPO -> money .)


state 248

    (256) TIPO -> text .

    r_from          reduce using rule 256 (TIPO -> text .)
    coma            reduce using rule 256 (TIPO -> text .)
    where           reduce using rule 256 (TIPO -> text .)
    group           reduce using rule 256 (TIPO -> text .)
    having          reduce using rule 256 (TIPO -> text .)
    union           reduce using rule 256 (TIPO -> text .)
    intersect       reduce using rule 256 (TIPO -> text .)
    except          reduce using rule 256 (TIPO -> text .)
    order           reduce using rule 256 (TIPO -> text .)
    limit           reduce using rule 256 (TIPO -> text .)
    offset          reduce using rule 256 (TIPO -> text .)
    ptcoma          reduce using rule 256 (TIPO -> text .)
    mas             reduce using rule 256 (TIPO -> text .)
    menos           reduce using rule 256 (TIPO -> text .)
    multiplicacion  reduce using rule 256 (TIPO -> text .)
    division        reduce using rule 256 (TIPO -> text .)
    modulo          reduce using rule 256 (TIPO -> text .)
    elevado         reduce using rule 256 (TIPO -> text .)
    and             reduce using rule 256 (TIPO -> text .)
    or              reduce using rule 256 (TIPO -> text .)
    mayor           reduce using rule 256 (TIPO -> text .)
    menor           reduce using rule 256 (TIPO -> text .)
    mayor_igual     reduce using rule 256 (TIPO -> text .)
    menor_igual     reduce using rule 256 (TIPO -> text .)
    igual           reduce using rule 256 (TIPO -> text .)
    diferente1      reduce using rule 256 (TIPO -> text .)
    diferente2      reduce using rule 256 (TIPO -> text .)
    between         reduce using rule 256 (TIPO -> text .)
    is              reduce using rule 256 (TIPO -> text .)
    isnull          reduce using rule 256 (TIPO -> text .)
    notnull         reduce using rule 256 (TIPO -> text .)
    as              reduce using rule 256 (TIPO -> text .)
    cadenaString    reduce using rule 256 (TIPO -> text .)
    id              reduce using rule 256 (TIPO -> text .)
    cadena          reduce using rule 256 (TIPO -> text .)
    in              reduce using rule 256 (TIPO -> text .)
    not             reduce using rule 256 (TIPO -> text .)
    like            reduce using rule 256 (TIPO -> text .)
    then            reduce using rule 256 (TIPO -> text .)
    when            reduce using rule 256 (TIPO -> text .)
    parc            reduce using rule 256 (TIPO -> text .)
    end             reduce using rule 256 (TIPO -> text .)
    else            reduce using rule 256 (TIPO -> text .)
    constraint      reduce using rule 256 (TIPO -> text .)
    unique          reduce using rule 256 (TIPO -> text .)
    check           reduce using rule 256 (TIPO -> text .)
    default         reduce using rule 256 (TIPO -> text .)
    null            reduce using rule 256 (TIPO -> text .)
    primary         reduce using rule 256 (TIPO -> text .)
    references      reduce using rule 256 (TIPO -> text .)
    asc             reduce using rule 256 (TIPO -> text .)
    desc            reduce using rule 256 (TIPO -> text .)
    dospuntos       reduce using rule 256 (TIPO -> text .)
    language        reduce using rule 256 (TIPO -> text .)
    do              reduce using rule 256 (TIPO -> text .)
    declare         reduce using rule 256 (TIPO -> text .)
    if              reduce using rule 256 (TIPO -> text .)
    raise           reduce using rule 256 (TIPO -> text .)
    begin           reduce using rule 256 (TIPO -> text .)
    execute         reduce using rule 256 (TIPO -> text .)
    return          reduce using rule 256 (TIPO -> text .)
    insert          reduce using rule 256 (TIPO -> text .)
    select          reduce using rule 256 (TIPO -> text .)
    update          reduce using rule 256 (TIPO -> text .)
    delete          reduce using rule 256 (TIPO -> text .)


state 249

    (258) TIPO -> date .

    r_from          reduce using rule 258 (TIPO -> date .)
    coma            reduce using rule 258 (TIPO -> date .)
    where           reduce using rule 258 (TIPO -> date .)
    group           reduce using rule 258 (TIPO -> date .)
    having          reduce using rule 258 (TIPO -> date .)
    union           reduce using rule 258 (TIPO -> date .)
    intersect       reduce using rule 258 (TIPO -> date .)
    except          reduce using rule 258 (TIPO -> date .)
    order           reduce using rule 258 (TIPO -> date .)
    limit           reduce using rule 258 (TIPO -> date .)
    offset          reduce using rule 258 (TIPO -> date .)
    ptcoma          reduce using rule 258 (TIPO -> date .)
    mas             reduce using rule 258 (TIPO -> date .)
    menos           reduce using rule 258 (TIPO -> date .)
    multiplicacion  reduce using rule 258 (TIPO -> date .)
    division        reduce using rule 258 (TIPO -> date .)
    modulo          reduce using rule 258 (TIPO -> date .)
    elevado         reduce using rule 258 (TIPO -> date .)
    and             reduce using rule 258 (TIPO -> date .)
    or              reduce using rule 258 (TIPO -> date .)
    mayor           reduce using rule 258 (TIPO -> date .)
    menor           reduce using rule 258 (TIPO -> date .)
    mayor_igual     reduce using rule 258 (TIPO -> date .)
    menor_igual     reduce using rule 258 (TIPO -> date .)
    igual           reduce using rule 258 (TIPO -> date .)
    diferente1      reduce using rule 258 (TIPO -> date .)
    diferente2      reduce using rule 258 (TIPO -> date .)
    between         reduce using rule 258 (TIPO -> date .)
    is              reduce using rule 258 (TIPO -> date .)
    isnull          reduce using rule 258 (TIPO -> date .)
    notnull         reduce using rule 258 (TIPO -> date .)
    as              reduce using rule 258 (TIPO -> date .)
    cadenaString    reduce using rule 258 (TIPO -> date .)
    id              reduce using rule 258 (TIPO -> date .)
    cadena          reduce using rule 258 (TIPO -> date .)
    in              reduce using rule 258 (TIPO -> date .)
    not             reduce using rule 258 (TIPO -> date .)
    like            reduce using rule 258 (TIPO -> date .)
    then            reduce using rule 258 (TIPO -> date .)
    when            reduce using rule 258 (TIPO -> date .)
    parc            reduce using rule 258 (TIPO -> date .)
    end             reduce using rule 258 (TIPO -> date .)
    else            reduce using rule 258 (TIPO -> date .)
    constraint      reduce using rule 258 (TIPO -> date .)
    unique          reduce using rule 258 (TIPO -> date .)
    check           reduce using rule 258 (TIPO -> date .)
    default         reduce using rule 258 (TIPO -> date .)
    null            reduce using rule 258 (TIPO -> date .)
    primary         reduce using rule 258 (TIPO -> date .)
    references      reduce using rule 258 (TIPO -> date .)
    asc             reduce using rule 258 (TIPO -> date .)
    desc            reduce using rule 258 (TIPO -> date .)
    dospuntos       reduce using rule 258 (TIPO -> date .)
    language        reduce using rule 258 (TIPO -> date .)
    do              reduce using rule 258 (TIPO -> date .)
    declare         reduce using rule 258 (TIPO -> date .)
    if              reduce using rule 258 (TIPO -> date .)
    raise           reduce using rule 258 (TIPO -> date .)
    begin           reduce using rule 258 (TIPO -> date .)
    execute         reduce using rule 258 (TIPO -> date .)
    return          reduce using rule 258 (TIPO -> date .)
    insert          reduce using rule 258 (TIPO -> date .)
    select          reduce using rule 258 (TIPO -> date .)
    update          reduce using rule 258 (TIPO -> date .)
    delete          reduce using rule 258 (TIPO -> date .)


state 250

    (261) TIPO -> boolean .

    r_from          reduce using rule 261 (TIPO -> boolean .)
    coma            reduce using rule 261 (TIPO -> boolean .)
    where           reduce using rule 261 (TIPO -> boolean .)
    group           reduce using rule 261 (TIPO -> boolean .)
    having          reduce using rule 261 (TIPO -> boolean .)
    union           reduce using rule 261 (TIPO -> boolean .)
    intersect       reduce using rule 261 (TIPO -> boolean .)
    except          reduce using rule 261 (TIPO -> boolean .)
    order           reduce using rule 261 (TIPO -> boolean .)
    limit           reduce using rule 261 (TIPO -> boolean .)
    offset          reduce using rule 261 (TIPO -> boolean .)
    ptcoma          reduce using rule 261 (TIPO -> boolean .)
    mas             reduce using rule 261 (TIPO -> boolean .)
    menos           reduce using rule 261 (TIPO -> boolean .)
    multiplicacion  reduce using rule 261 (TIPO -> boolean .)
    division        reduce using rule 261 (TIPO -> boolean .)
    modulo          reduce using rule 261 (TIPO -> boolean .)
    elevado         reduce using rule 261 (TIPO -> boolean .)
    and             reduce using rule 261 (TIPO -> boolean .)
    or              reduce using rule 261 (TIPO -> boolean .)
    mayor           reduce using rule 261 (TIPO -> boolean .)
    menor           reduce using rule 261 (TIPO -> boolean .)
    mayor_igual     reduce using rule 261 (TIPO -> boolean .)
    menor_igual     reduce using rule 261 (TIPO -> boolean .)
    igual           reduce using rule 261 (TIPO -> boolean .)
    diferente1      reduce using rule 261 (TIPO -> boolean .)
    diferente2      reduce using rule 261 (TIPO -> boolean .)
    between         reduce using rule 261 (TIPO -> boolean .)
    is              reduce using rule 261 (TIPO -> boolean .)
    isnull          reduce using rule 261 (TIPO -> boolean .)
    notnull         reduce using rule 261 (TIPO -> boolean .)
    as              reduce using rule 261 (TIPO -> boolean .)
    cadenaString    reduce using rule 261 (TIPO -> boolean .)
    id              reduce using rule 261 (TIPO -> boolean .)
    cadena          reduce using rule 261 (TIPO -> boolean .)
    in              reduce using rule 261 (TIPO -> boolean .)
    not             reduce using rule 261 (TIPO -> boolean .)
    like            reduce using rule 261 (TIPO -> boolean .)
    then            reduce using rule 261 (TIPO -> boolean .)
    when            reduce using rule 261 (TIPO -> boolean .)
    parc            reduce using rule 261 (TIPO -> boolean .)
    end             reduce using rule 261 (TIPO -> boolean .)
    else            reduce using rule 261 (TIPO -> boolean .)
    constraint      reduce using rule 261 (TIPO -> boolean .)
    unique          reduce using rule 261 (TIPO -> boolean .)
    check           reduce using rule 261 (TIPO -> boolean .)
    default         reduce using rule 261 (TIPO -> boolean .)
    null            reduce using rule 261 (TIPO -> boolean .)
    primary         reduce using rule 261 (TIPO -> boolean .)
    references      reduce using rule 261 (TIPO -> boolean .)
    asc             reduce using rule 261 (TIPO -> boolean .)
    desc            reduce using rule 261 (TIPO -> boolean .)
    dospuntos       reduce using rule 261 (TIPO -> boolean .)
    language        reduce using rule 261 (TIPO -> boolean .)
    do              reduce using rule 261 (TIPO -> boolean .)
    declare         reduce using rule 261 (TIPO -> boolean .)
    if              reduce using rule 261 (TIPO -> boolean .)
    raise           reduce using rule 261 (TIPO -> boolean .)
    begin           reduce using rule 261 (TIPO -> boolean .)
    execute         reduce using rule 261 (TIPO -> boolean .)
    return          reduce using rule 261 (TIPO -> boolean .)
    insert          reduce using rule 261 (TIPO -> boolean .)
    select          reduce using rule 261 (TIPO -> boolean .)
    update          reduce using rule 261 (TIPO -> boolean .)
    delete          reduce using rule 261 (TIPO -> boolean .)


state 251

    (262) TIPO -> record .

    r_from          reduce using rule 262 (TIPO -> record .)
    coma            reduce using rule 262 (TIPO -> record .)
    where           reduce using rule 262 (TIPO -> record .)
    group           reduce using rule 262 (TIPO -> record .)
    having          reduce using rule 262 (TIPO -> record .)
    union           reduce using rule 262 (TIPO -> record .)
    intersect       reduce using rule 262 (TIPO -> record .)
    except          reduce using rule 262 (TIPO -> record .)
    order           reduce using rule 262 (TIPO -> record .)
    limit           reduce using rule 262 (TIPO -> record .)
    offset          reduce using rule 262 (TIPO -> record .)
    ptcoma          reduce using rule 262 (TIPO -> record .)
    mas             reduce using rule 262 (TIPO -> record .)
    menos           reduce using rule 262 (TIPO -> record .)
    multiplicacion  reduce using rule 262 (TIPO -> record .)
    division        reduce using rule 262 (TIPO -> record .)
    modulo          reduce using rule 262 (TIPO -> record .)
    elevado         reduce using rule 262 (TIPO -> record .)
    and             reduce using rule 262 (TIPO -> record .)
    or              reduce using rule 262 (TIPO -> record .)
    mayor           reduce using rule 262 (TIPO -> record .)
    menor           reduce using rule 262 (TIPO -> record .)
    mayor_igual     reduce using rule 262 (TIPO -> record .)
    menor_igual     reduce using rule 262 (TIPO -> record .)
    igual           reduce using rule 262 (TIPO -> record .)
    diferente1      reduce using rule 262 (TIPO -> record .)
    diferente2      reduce using rule 262 (TIPO -> record .)
    between         reduce using rule 262 (TIPO -> record .)
    is              reduce using rule 262 (TIPO -> record .)
    isnull          reduce using rule 262 (TIPO -> record .)
    notnull         reduce using rule 262 (TIPO -> record .)
    as              reduce using rule 262 (TIPO -> record .)
    cadenaString    reduce using rule 262 (TIPO -> record .)
    id              reduce using rule 262 (TIPO -> record .)
    cadena          reduce using rule 262 (TIPO -> record .)
    in              reduce using rule 262 (TIPO -> record .)
    not             reduce using rule 262 (TIPO -> record .)
    like            reduce using rule 262 (TIPO -> record .)
    then            reduce using rule 262 (TIPO -> record .)
    when            reduce using rule 262 (TIPO -> record .)
    parc            reduce using rule 262 (TIPO -> record .)
    end             reduce using rule 262 (TIPO -> record .)
    else            reduce using rule 262 (TIPO -> record .)
    constraint      reduce using rule 262 (TIPO -> record .)
    unique          reduce using rule 262 (TIPO -> record .)
    check           reduce using rule 262 (TIPO -> record .)
    default         reduce using rule 262 (TIPO -> record .)
    null            reduce using rule 262 (TIPO -> record .)
    primary         reduce using rule 262 (TIPO -> record .)
    references      reduce using rule 262 (TIPO -> record .)
    asc             reduce using rule 262 (TIPO -> record .)
    desc            reduce using rule 262 (TIPO -> record .)
    dospuntos       reduce using rule 262 (TIPO -> record .)
    language        reduce using rule 262 (TIPO -> record .)
    do              reduce using rule 262 (TIPO -> record .)
    declare         reduce using rule 262 (TIPO -> record .)
    if              reduce using rule 262 (TIPO -> record .)
    raise           reduce using rule 262 (TIPO -> record .)
    begin           reduce using rule 262 (TIPO -> record .)
    execute         reduce using rule 262 (TIPO -> record .)
    return          reduce using rule 262 (TIPO -> record .)
    insert          reduce using rule 262 (TIPO -> record .)
    select          reduce using rule 262 (TIPO -> record .)
    update          reduce using rule 262 (TIPO -> record .)
    delete          reduce using rule 262 (TIPO -> record .)


state 252

    (320) EXP -> para EXP parc .

    r_from          reduce using rule 320 (EXP -> para EXP parc .)
    coma            reduce using rule 320 (EXP -> para EXP parc .)
    where           reduce using rule 320 (EXP -> para EXP parc .)
    group           reduce using rule 320 (EXP -> para EXP parc .)
    having          reduce using rule 320 (EXP -> para EXP parc .)
    union           reduce using rule 320 (EXP -> para EXP parc .)
    intersect       reduce using rule 320 (EXP -> para EXP parc .)
    except          reduce using rule 320 (EXP -> para EXP parc .)
    order           reduce using rule 320 (EXP -> para EXP parc .)
    limit           reduce using rule 320 (EXP -> para EXP parc .)
    offset          reduce using rule 320 (EXP -> para EXP parc .)
    ptcoma          reduce using rule 320 (EXP -> para EXP parc .)
    mas             reduce using rule 320 (EXP -> para EXP parc .)
    menos           reduce using rule 320 (EXP -> para EXP parc .)
    multiplicacion  reduce using rule 320 (EXP -> para EXP parc .)
    division        reduce using rule 320 (EXP -> para EXP parc .)
    modulo          reduce using rule 320 (EXP -> para EXP parc .)
    elevado         reduce using rule 320 (EXP -> para EXP parc .)
    and             reduce using rule 320 (EXP -> para EXP parc .)
    or              reduce using rule 320 (EXP -> para EXP parc .)
    mayor           reduce using rule 320 (EXP -> para EXP parc .)
    menor           reduce using rule 320 (EXP -> para EXP parc .)
    mayor_igual     reduce using rule 320 (EXP -> para EXP parc .)
    menor_igual     reduce using rule 320 (EXP -> para EXP parc .)
    igual           reduce using rule 320 (EXP -> para EXP parc .)
    diferente1      reduce using rule 320 (EXP -> para EXP parc .)
    diferente2      reduce using rule 320 (EXP -> para EXP parc .)
    between         reduce using rule 320 (EXP -> para EXP parc .)
    is              reduce using rule 320 (EXP -> para EXP parc .)
    isnull          reduce using rule 320 (EXP -> para EXP parc .)
    notnull         reduce using rule 320 (EXP -> para EXP parc .)
    as              reduce using rule 320 (EXP -> para EXP parc .)
    cadenaString    reduce using rule 320 (EXP -> para EXP parc .)
    id              reduce using rule 320 (EXP -> para EXP parc .)
    cadena          reduce using rule 320 (EXP -> para EXP parc .)
    in              reduce using rule 320 (EXP -> para EXP parc .)
    not             reduce using rule 320 (EXP -> para EXP parc .)
    like            reduce using rule 320 (EXP -> para EXP parc .)
    then            reduce using rule 320 (EXP -> para EXP parc .)
    when            reduce using rule 320 (EXP -> para EXP parc .)
    parc            reduce using rule 320 (EXP -> para EXP parc .)
    end             reduce using rule 320 (EXP -> para EXP parc .)
    else            reduce using rule 320 (EXP -> para EXP parc .)
    constraint      reduce using rule 320 (EXP -> para EXP parc .)
    unique          reduce using rule 320 (EXP -> para EXP parc .)
    check           reduce using rule 320 (EXP -> para EXP parc .)
    default         reduce using rule 320 (EXP -> para EXP parc .)
    null            reduce using rule 320 (EXP -> para EXP parc .)
    primary         reduce using rule 320 (EXP -> para EXP parc .)
    references      reduce using rule 320 (EXP -> para EXP parc .)
    asc             reduce using rule 320 (EXP -> para EXP parc .)
    desc            reduce using rule 320 (EXP -> para EXP parc .)


state 253

    (324) EXP -> any para LEXP . parc
    (226) LEXP -> LEXP . coma EXP

    parc            shift and go to state 353
    coma            shift and go to state 121


state 254

    (325) EXP -> all para LEXP . parc
    (226) LEXP -> LEXP . coma EXP

    parc            shift and go to state 354
    coma            shift and go to state 121


state 255

    (326) EXP -> some para LEXP . parc
    (226) LEXP -> LEXP . coma EXP

    parc            shift and go to state 355
    coma            shift and go to state 121


state 256

    (327) EXP -> extract para FIELDS . r_from timestamp cadena parc

    r_from          shift and go to state 356


state 257

    (269) FIELDS -> year .

    r_from          reduce using rule 269 (FIELDS -> year .)


state 258

    (270) FIELDS -> month .

    r_from          reduce using rule 270 (FIELDS -> month .)


state 259

    (271) FIELDS -> day .

    r_from          reduce using rule 271 (FIELDS -> day .)


state 260

    (272) FIELDS -> hour .

    r_from          reduce using rule 272 (FIELDS -> hour .)


state 261

    (273) FIELDS -> minute .

    r_from          reduce using rule 273 (FIELDS -> minute .)


state 262

    (274) FIELDS -> second .

    r_from          reduce using rule 274 (FIELDS -> second .)


state 263

    (160) CREATETABLE -> create table id para . LDEF parc ptcoma
    (161) CREATETABLE -> create table id para . LDEF parc HERENCIA ptcoma
    (162) LDEF -> . LDEF coma COLDEF
    (163) LDEF -> . COLDEF
    (164) COLDEF -> . OPCONST
    (165) COLDEF -> . constraint id OPCONST
    (166) COLDEF -> . id TIPO
    (167) COLDEF -> . id TIPO LOPCOLUMN
    (179) OPCONST -> . primary key para LEXP parc
    (180) OPCONST -> . foreign key para LEXP parc references id para LEXP parc
    (181) OPCONST -> . unique para LEXP parc
    (182) OPCONST -> . check para CONDCHECK parc

    constraint      shift and go to state 361
    id              shift and go to state 357
    primary         shift and go to state 362
    foreign         shift and go to state 363
    unique          shift and go to state 364
    check           shift and go to state 365

    LDEF                           shift and go to state 358
    COLDEF                         shift and go to state 359
    OPCONST                        shift and go to state 360

state 264

    (191) CREATETYPE -> create type id as . enum para LEXP parc

    enum            shift and go to state 366


state 265

    (143) CREATEDB -> create RD if not . exist id
    (144) CREATEDB -> create RD if not . exist id OPCCDB

    exist           shift and go to state 367


state 266

    (146) CREATEDB -> create RD id OPCCDB .

    ptcoma          reduce using rule 146 (CREATEDB -> create RD id OPCCDB .)


state 267

    (147) OPCCDB -> PROPIETARIO .
    (149) OPCCDB -> PROPIETARIO . MODO
    (158) MODO -> . mode igual int
    (159) MODO -> . mode int

    ptcoma          reduce using rule 147 (OPCCDB -> PROPIETARIO .)
    mode            shift and go to state 270

    MODO                           shift and go to state 368

state 268

    (148) OPCCDB -> MODO .

    ptcoma          reduce using rule 148 (OPCCDB -> MODO .)


state 269

    (152) PROPIETARIO -> owner . igual id
    (153) PROPIETARIO -> owner . igual cadena
    (154) PROPIETARIO -> owner . igual cadenaString
    (155) PROPIETARIO -> owner . id
    (156) PROPIETARIO -> owner . cadena
    (157) PROPIETARIO -> owner . cadenaString

    igual           shift and go to state 369
    id              shift and go to state 370
    cadena          shift and go to state 371
    cadenaString    shift and go to state 372


state 270

    (158) MODO -> mode . igual int
    (159) MODO -> mode . int

    igual           shift and go to state 373
    int             shift and go to state 374


state 271

    (47) CREATEINDEX -> create index id on . id para LEXP parc
    (49) CREATEINDEX -> create index id on . id using hash para LEXP parc
    (50) CREATEINDEX -> create index id on . id para id ORDEN parc
    (51) CREATEINDEX -> create index id on . id para id id ORDEN parc
    (52) CREATEINDEX -> create index id on . id para id id parc

    id              shift and go to state 375


state 272

    (48) CREATEINDEX -> create unique index id . on id para LEXP parc

    on              shift and go to state 376


state 273

    (31) PROCEDIMIENTOS -> create procedure id para . LPARAM parc LENGUAJE LCONTENIDOP
    (32) PROCEDIMIENTOS -> create procedure id para . parc LENGUAJE LCONTENIDOP
    (33) PROCEDIMIENTOS -> create procedure id para . LPARAM parc LCONTENIDOP LENGUAJE
    (34) PROCEDIMIENTOS -> create procedure id para . parc LCONTENIDOP LENGUAJE
    (40) LPARAM -> . LPARAM coma inout id TIPO
    (41) LPARAM -> . LPARAM coma id TIPO
    (42) LPARAM -> . inout id TIPO
    (43) LPARAM -> . id TIPO

    parc            shift and go to state 379
    inout           shift and go to state 380
    id              shift and go to state 377

    LPARAM                         shift and go to state 378

state 274

    (25) FUNCIONES -> create function id para . LPARAM parc RETURNP LENGUAJE LCONTENIDOP
    (26) FUNCIONES -> create function id para . parc RETURNP LENGUAJE LCONTENIDOP
    (27) FUNCIONES -> create function id para . LPARAM parc RETURNP LCONTENIDOP LENGUAJE
    (28) FUNCIONES -> create function id para . parc RETURNP LCONTENIDOP LENGUAJE
    (40) LPARAM -> . LPARAM coma inout id TIPO
    (41) LPARAM -> . LPARAM coma id TIPO
    (42) LPARAM -> . inout id TIPO
    (43) LPARAM -> . id TIPO

    parc            shift and go to state 382
    inout           shift and go to state 380
    id              shift and go to state 377

    LPARAM                         shift and go to state 381

state 275

    (150) RD -> or replace databases .

    if              reduce using rule 150 (RD -> or replace databases .)
    id              reduce using rule 150 (RD -> or replace databases .)


state 276

    (222) LCAMPOS -> id . igual EXP

    igual           shift and go to state 383


state 277

    (220) UPDATE -> update id set LCAMPOS . WHERE
    (221) LCAMPOS -> LCAMPOS . coma id igual EXP
    (203) WHERE -> . where EXP
    (204) WHERE -> . where EXIST
    (205) WHERE -> .

    coma            shift and go to state 385
    where           shift and go to state 51
    ptcoma          reduce using rule 205 (WHERE -> .)

    WHERE                          shift and go to state 384

state 278

    (223) DELETE -> delete r_from id WHERE .

    ptcoma          reduce using rule 223 (DELETE -> delete r_from id WHERE .)


state 279

    (121) ALTER -> alter databases id rename . to id

    to              shift and go to state 386


state 280

    (122) ALTER -> alter databases id owner . to id

    to              shift and go to state 387


state 281

    (133) OP -> alter . column id set not null
    (134) OP -> alter . column id set null
    (139) OP -> alter . column id type TIPO

    column          shift and go to state 388


state 282

    (123) ALTER -> alter table id LOP .
    (124) LOP -> LOP . coma OP

    ptcoma          reduce using rule 123 (ALTER -> alter table id LOP .)
    coma            shift and go to state 389


state 283

    (125) LOP -> OP .

    coma            reduce using rule 125 (LOP -> OP .)
    ptcoma          reduce using rule 125 (LOP -> OP .)


state 284

    (126) OP -> add . column id TIPO
    (127) OP -> add . check para CONDCHECK parc
    (128) OP -> add . constraint id check para CONDCHECK parc
    (129) OP -> add . constraint id unique para LEXP parc
    (130) OP -> add . unique para LEXP parc
    (131) OP -> add . foreign key para LEXP parc references id para LEXP parc
    (132) OP -> add . constraint id foreign key para LEXP parc references id para LEXP parc

    column          shift and go to state 390
    check           shift and go to state 391
    constraint      shift and go to state 392
    unique          shift and go to state 393
    foreign         shift and go to state 394


state 285

    (135) OP -> drop . constraint id
    (136) OP -> drop . column LEXP
    (137) OP -> drop . check id

    constraint      shift and go to state 395
    column          shift and go to state 396
    check           shift and go to state 397


state 286

    (138) OP -> rename . column id to id

    column          shift and go to state 398


state 287

    (116) DROP -> drop all para parc .

    ptcoma          reduce using rule 116 (DROP -> drop all para parc .)


state 288

    (119) DROP -> drop databases if exist . id

    id              shift and go to state 399


state 289

    (73) CONDICIONIF -> if EXP then LISTACONTENIDO . ELSEF end if
    (74) CONDICIONIF -> if EXP then LISTACONTENIDO . LELIF end if
    (75) CONDICIONIF -> if EXP then LISTACONTENIDO . end if
    (76) CONDICIONIF -> if EXP then LISTACONTENIDO . LELIF ELSEF end if
    (84) LISTACONTENIDO -> LISTACONTENIDO . CONTENIDO
    (79) ELSEF -> . else LISTACONTENIDO
    (77) LELIF -> . LELIF elsif EXP then LISTACONTENIDO
    (78) LELIF -> . elsif EXP then LISTACONTENIDO
    (86) CONTENIDO -> . ASIGNACION ptcoma
    (87) CONTENIDO -> . CONDICIONIF ptcoma
    (88) CONTENIDO -> . RAISE ptcoma
    (89) CONTENIDO -> . BEGINEND ptcoma
    (90) CONTENIDO -> . CALLPROCEDURE ptcoma
    (91) CONTENIDO -> . declare LDEC
    (92) CONTENIDO -> . RETURN ptcoma
    (93) CONTENIDO -> . INSERT ptcoma
    (94) CONTENIDO -> . SELECT ptcoma
    (95) CONTENIDO -> . UPDATE ptcoma
    (96) CONTENIDO -> . DELETE ptcoma
    (71) ASIGNACION -> . id dospuntos igual EXP
    (72) ASIGNACION -> . id igual EXP
    (73) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (97) RAISE -> . raise LEVEL FORMAT
    (98) RAISE -> . raise LEVEL EXP
    (99) RAISE -> . raise LEVEL
    (100) RAISE -> . raise
    (101) RAISE -> . raise LEVEL cadena coma id
    (46) BEGINEND -> . begin LISTACONTENIDO end
    (30) CALLPROCEDURE -> . execute id para parc
    (24) RETURN -> . return EXP
    (114) INSERT -> . insert into id values para LEXP parc
    (115) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (220) UPDATE -> . update id set LCAMPOS WHERE
    (223) DELETE -> . delete r_from id WHERE

    end             shift and go to state 401
    else            shift and go to state 309
    elsif           shift and go to state 404
    declare         shift and go to state 296
    id              shift and go to state 17
    if              shift and go to state 30
    raise           shift and go to state 302
    begin           shift and go to state 303
    execute         shift and go to state 34
    return          shift and go to state 304
    insert          shift and go to state 31
    select          shift and go to state 24
    update          shift and go to state 26
    delete          shift and go to state 27

    ELSEF                          shift and go to state 400
    LELIF                          shift and go to state 402
    CONTENIDO                      shift and go to state 403
    ASIGNACION                     shift and go to state 291
    CONDICIONIF                    shift and go to state 292
    RAISE                          shift and go to state 293
    BEGINEND                       shift and go to state 294
    CALLPROCEDURE                  shift and go to state 295
    RETURN                         shift and go to state 297
    INSERT                         shift and go to state 298
    SELECT                         shift and go to state 299
    UPDATE                         shift and go to state 300
    DELETE                         shift and go to state 301

state 290

    (85) LISTACONTENIDO -> CONTENIDO .

    end             reduce using rule 85 (LISTACONTENIDO -> CONTENIDO .)
    else            reduce using rule 85 (LISTACONTENIDO -> CONTENIDO .)
    elsif           reduce using rule 85 (LISTACONTENIDO -> CONTENIDO .)
    declare         reduce using rule 85 (LISTACONTENIDO -> CONTENIDO .)
    id              reduce using rule 85 (LISTACONTENIDO -> CONTENIDO .)
    if              reduce using rule 85 (LISTACONTENIDO -> CONTENIDO .)
    raise           reduce using rule 85 (LISTACONTENIDO -> CONTENIDO .)
    begin           reduce using rule 85 (LISTACONTENIDO -> CONTENIDO .)
    execute         reduce using rule 85 (LISTACONTENIDO -> CONTENIDO .)
    return          reduce using rule 85 (LISTACONTENIDO -> CONTENIDO .)
    insert          reduce using rule 85 (LISTACONTENIDO -> CONTENIDO .)
    select          reduce using rule 85 (LISTACONTENIDO -> CONTENIDO .)
    update          reduce using rule 85 (LISTACONTENIDO -> CONTENIDO .)
    delete          reduce using rule 85 (LISTACONTENIDO -> CONTENIDO .)
    when            reduce using rule 85 (LISTACONTENIDO -> CONTENIDO .)
    language        reduce using rule 85 (LISTACONTENIDO -> CONTENIDO .)
    as              reduce using rule 85 (LISTACONTENIDO -> CONTENIDO .)
    do              reduce using rule 85 (LISTACONTENIDO -> CONTENIDO .)
    use             reduce using rule 85 (LISTACONTENIDO -> CONTENIDO .)
    create          reduce using rule 85 (LISTACONTENIDO -> CONTENIDO .)
    alter           reduce using rule 85 (LISTACONTENIDO -> CONTENIDO .)
    drop            reduce using rule 85 (LISTACONTENIDO -> CONTENIDO .)
    case            reduce using rule 85 (LISTACONTENIDO -> CONTENIDO .)
    show            reduce using rule 85 (LISTACONTENIDO -> CONTENIDO .)
    $end            reduce using rule 85 (LISTACONTENIDO -> CONTENIDO .)
    dolarn          reduce using rule 85 (LISTACONTENIDO -> CONTENIDO .)


state 291

    (86) CONTENIDO -> ASIGNACION . ptcoma

    ptcoma          shift and go to state 405


state 292

    (87) CONTENIDO -> CONDICIONIF . ptcoma

    ptcoma          shift and go to state 406


state 293

    (88) CONTENIDO -> RAISE . ptcoma

    ptcoma          shift and go to state 407


state 294

    (89) CONTENIDO -> BEGINEND . ptcoma

    ptcoma          shift and go to state 408


state 295

    (90) CONTENIDO -> CALLPROCEDURE . ptcoma

    ptcoma          shift and go to state 409


state 296

    (91) CONTENIDO -> declare . LDEC
    (61) LDEC -> . LDEC DECLARACIONES
    (62) LDEC -> . DECLARACIONES
    (63) DECLARACIONES -> . id TIPO not null ASIG ptcoma
    (64) DECLARACIONES -> . id TIPO ASIG ptcoma
    (65) DECLARACIONES -> . id constant TIPO not null ASIG ptcoma
    (66) DECLARACIONES -> . id constant TIPO ASIG ptcoma

    id              shift and go to state 412

    LDEC                           shift and go to state 410
    DECLARACIONES                  shift and go to state 411

state 297

    (92) CONTENIDO -> RETURN . ptcoma

    ptcoma          shift and go to state 413


state 298

    (93) CONTENIDO -> INSERT . ptcoma

    ptcoma          shift and go to state 414


state 299

    (94) CONTENIDO -> SELECT . ptcoma

    ptcoma          shift and go to state 415


state 300

    (95) CONTENIDO -> UPDATE . ptcoma

    ptcoma          shift and go to state 416


state 301

    (96) CONTENIDO -> DELETE . ptcoma

    ptcoma          shift and go to state 417


state 302

    (97) RAISE -> raise . LEVEL FORMAT
    (98) RAISE -> raise . LEVEL EXP
    (99) RAISE -> raise . LEVEL
    (100) RAISE -> raise .
    (101) RAISE -> raise . LEVEL cadena coma id
    (102) LEVEL -> . info
    (103) LEVEL -> . debug
    (104) LEVEL -> . log
    (105) LEVEL -> . notice
    (106) LEVEL -> . warning
    (107) LEVEL -> . exception

    ptcoma          reduce using rule 100 (RAISE -> raise .)
    info            shift and go to state 419
    debug           shift and go to state 420
    log             shift and go to state 421
    notice          shift and go to state 422
    warning         shift and go to state 423
    exception       shift and go to state 424

    LEVEL                          shift and go to state 418

state 303

    (46) BEGINEND -> begin . LISTACONTENIDO end
    (84) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (85) LISTACONTENIDO -> . CONTENIDO
    (86) CONTENIDO -> . ASIGNACION ptcoma
    (87) CONTENIDO -> . CONDICIONIF ptcoma
    (88) CONTENIDO -> . RAISE ptcoma
    (89) CONTENIDO -> . BEGINEND ptcoma
    (90) CONTENIDO -> . CALLPROCEDURE ptcoma
    (91) CONTENIDO -> . declare LDEC
    (92) CONTENIDO -> . RETURN ptcoma
    (93) CONTENIDO -> . INSERT ptcoma
    (94) CONTENIDO -> . SELECT ptcoma
    (95) CONTENIDO -> . UPDATE ptcoma
    (96) CONTENIDO -> . DELETE ptcoma
    (71) ASIGNACION -> . id dospuntos igual EXP
    (72) ASIGNACION -> . id igual EXP
    (73) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (97) RAISE -> . raise LEVEL FORMAT
    (98) RAISE -> . raise LEVEL EXP
    (99) RAISE -> . raise LEVEL
    (100) RAISE -> . raise
    (101) RAISE -> . raise LEVEL cadena coma id
    (46) BEGINEND -> . begin LISTACONTENIDO end
    (30) CALLPROCEDURE -> . execute id para parc
    (24) RETURN -> . return EXP
    (114) INSERT -> . insert into id values para LEXP parc
    (115) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (220) UPDATE -> . update id set LCAMPOS WHERE
    (223) DELETE -> . delete r_from id WHERE

    declare         shift and go to state 296
    id              shift and go to state 17
    if              shift and go to state 30
    raise           shift and go to state 302
    begin           shift and go to state 303
    execute         shift and go to state 34
    return          shift and go to state 304
    insert          shift and go to state 31
    select          shift and go to state 24
    update          shift and go to state 26
    delete          shift and go to state 27

    LISTACONTENIDO                 shift and go to state 425
    CONTENIDO                      shift and go to state 290
    ASIGNACION                     shift and go to state 291
    CONDICIONIF                    shift and go to state 292
    RAISE                          shift and go to state 293
    BEGINEND                       shift and go to state 294
    CALLPROCEDURE                  shift and go to state 295
    RETURN                         shift and go to state 297
    INSERT                         shift and go to state 298
    SELECT                         shift and go to state 299
    UPDATE                         shift and go to state 300
    DELETE                         shift and go to state 301

state 304

    (24) RETURN -> return . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 426
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 305

    (114) INSERT -> insert into id values . para LEXP parc

    para            shift and go to state 427


state 306

    (115) INSERT -> insert into id para . LEXP parc values para LEXP parc
    (226) LEXP -> . LEXP coma EXP
    (227) LEXP -> . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 428
    EXP                            shift and go to state 57
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 307

    (80) CASE -> case LEXP LISTAWHEN ELSEF . end case

    end             shift and go to state 429


state 308

    (81) CASE -> case LEXP LISTAWHEN end . case

    case            shift and go to state 430


state 309

    (79) ELSEF -> else . LISTACONTENIDO
    (84) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (85) LISTACONTENIDO -> . CONTENIDO
    (86) CONTENIDO -> . ASIGNACION ptcoma
    (87) CONTENIDO -> . CONDICIONIF ptcoma
    (88) CONTENIDO -> . RAISE ptcoma
    (89) CONTENIDO -> . BEGINEND ptcoma
    (90) CONTENIDO -> . CALLPROCEDURE ptcoma
    (91) CONTENIDO -> . declare LDEC
    (92) CONTENIDO -> . RETURN ptcoma
    (93) CONTENIDO -> . INSERT ptcoma
    (94) CONTENIDO -> . SELECT ptcoma
    (95) CONTENIDO -> . UPDATE ptcoma
    (96) CONTENIDO -> . DELETE ptcoma
    (71) ASIGNACION -> . id dospuntos igual EXP
    (72) ASIGNACION -> . id igual EXP
    (73) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (97) RAISE -> . raise LEVEL FORMAT
    (98) RAISE -> . raise LEVEL EXP
    (99) RAISE -> . raise LEVEL
    (100) RAISE -> . raise
    (101) RAISE -> . raise LEVEL cadena coma id
    (46) BEGINEND -> . begin LISTACONTENIDO end
    (30) CALLPROCEDURE -> . execute id para parc
    (24) RETURN -> . return EXP
    (114) INSERT -> . insert into id values para LEXP parc
    (115) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (220) UPDATE -> . update id set LCAMPOS WHERE
    (223) DELETE -> . delete r_from id WHERE

    declare         shift and go to state 296
    id              shift and go to state 17
    if              shift and go to state 30
    raise           shift and go to state 302
    begin           shift and go to state 303
    execute         shift and go to state 34
    return          shift and go to state 304
    insert          shift and go to state 31
    select          shift and go to state 24
    update          shift and go to state 26
    delete          shift and go to state 27

    LISTACONTENIDO                 shift and go to state 431
    CONTENIDO                      shift and go to state 290
    ASIGNACION                     shift and go to state 291
    CONDICIONIF                    shift and go to state 292
    RAISE                          shift and go to state 293
    BEGINEND                       shift and go to state 294
    CALLPROCEDURE                  shift and go to state 295
    RETURN                         shift and go to state 297
    INSERT                         shift and go to state 298
    SELECT                         shift and go to state 299
    UPDATE                         shift and go to state 300
    DELETE                         shift and go to state 301

state 310

    (82) CASE -> case LISTAWHEN ELSE end .

    use             reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    select          reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    create          reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    update          reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    delete          reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    alter           reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    drop            reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    insert          reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    case            reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    show            reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    id              reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    if              reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    execute         reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    $end            reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    r_from          reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    coma            reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    where           reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    group           reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    having          reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    union           reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    intersect       reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    except          reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    order           reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    limit           reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    offset          reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    ptcoma          reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    mas             reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    menos           reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    multiplicacion  reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    division        reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    modulo          reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    elevado         reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    and             reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    or              reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    mayor           reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    menor           reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    mayor_igual     reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    menor_igual     reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    igual           reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    diferente1      reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    diferente2      reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    between         reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    is              reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    isnull          reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    notnull         reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    as              reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    cadenaString    reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    cadena          reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    in              reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    not             reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    like            reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    then            reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    when            reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    parc            reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    end             reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    else            reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    constraint      reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    unique          reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    check           reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    default         reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    null            reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    primary         reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    references      reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    asc             reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)
    desc            reduce using rule 82 (CASE -> case LISTAWHEN ELSE end .)


state 311

    (113) ELSE -> else LEXP .
    (226) LEXP -> LEXP . coma EXP

    end             reduce using rule 113 (ELSE -> else LEXP .)
    coma            shift and go to state 121


state 312

    (111) WHEN -> when LEXP then . LISTACONTENIDO
    (112) WHEN -> when LEXP then . LEXP
    (84) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (85) LISTACONTENIDO -> . CONTENIDO
    (226) LEXP -> . LEXP coma EXP
    (227) LEXP -> . EXP
    (86) CONTENIDO -> . ASIGNACION ptcoma
    (87) CONTENIDO -> . CONDICIONIF ptcoma
    (88) CONTENIDO -> . RAISE ptcoma
    (89) CONTENIDO -> . BEGINEND ptcoma
    (90) CONTENIDO -> . CALLPROCEDURE ptcoma
    (91) CONTENIDO -> . declare LDEC
    (92) CONTENIDO -> . RETURN ptcoma
    (93) CONTENIDO -> . INSERT ptcoma
    (94) CONTENIDO -> . SELECT ptcoma
    (95) CONTENIDO -> . UPDATE ptcoma
    (96) CONTENIDO -> . DELETE ptcoma
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (71) ASIGNACION -> . id dospuntos igual EXP
    (72) ASIGNACION -> . id igual EXP
    (73) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (97) RAISE -> . raise LEVEL FORMAT
    (98) RAISE -> . raise LEVEL EXP
    (99) RAISE -> . raise LEVEL
    (100) RAISE -> . raise
    (101) RAISE -> . raise LEVEL cadena coma id
    (46) BEGINEND -> . begin LISTACONTENIDO end
    (30) CALLPROCEDURE -> . execute id para parc
    (24) RETURN -> . return EXP
    (114) INSERT -> . insert into id values para LEXP parc
    (115) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (220) UPDATE -> . update id set LCAMPOS WHERE
    (223) DELETE -> . delete r_from id WHERE
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    declare         shift and go to state 296
    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 435
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    if              shift and go to state 30
    raise           shift and go to state 302
    begin           shift and go to state 303
    execute         shift and go to state 34
    return          shift and go to state 304
    insert          shift and go to state 31
    select          shift and go to state 24
    update          shift and go to state 26
    delete          shift and go to state 27
    case            shift and go to state 32

    LEXP                           shift and go to state 432
    LISTACONTENIDO                 shift and go to state 433
    CONTENIDO                      shift and go to state 290
    EXP                            shift and go to state 57
    ASIGNACION                     shift and go to state 291
    CONDICIONIF                    shift and go to state 292
    RAISE                          shift and go to state 293
    BEGINEND                       shift and go to state 294
    CALLPROCEDURE                  shift and go to state 295
    RETURN                         shift and go to state 297
    INSERT                         shift and go to state 298
    SELECT                         shift and go to state 434
    UPDATE                         shift and go to state 300
    DELETE                         shift and go to state 301
    CASE                           shift and go to state 70

state 313

    (141) SHOW -> show tables para id . parc

    parc            shift and go to state 436


state 314

    (142) SHOW -> show collection para parc .

    ptcoma          reduce using rule 142 (SHOW -> show collection para parc .)


state 315

    (30) CALLPROCEDURE -> execute id para parc .

    ptcoma          reduce using rule 30 (CALLPROCEDURE -> execute id para parc .)


state 316

    (225) EXIST -> not exist para . SELECT parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    select          shift and go to state 24

    SELECT                         shift and go to state 437

state 317

    (224) EXIST -> exist para SELECT . parc

    parc            shift and go to state 438


state 318

    (192) SELECT -> select distinct LEXP r_from LEXP . WHERE GROUP HAVING COMBINING ORDER LIMIT
    (226) LEXP -> LEXP . coma EXP
    (203) WHERE -> . where EXP
    (204) WHERE -> . where EXIST
    (205) WHERE -> .

  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for where resolved as shift
    coma            shift and go to state 121
    where           shift and go to state 51
    r_from          reduce using rule 205 (WHERE -> .)
    group           reduce using rule 205 (WHERE -> .)
    having          reduce using rule 205 (WHERE -> .)
    union           reduce using rule 205 (WHERE -> .)
    intersect       reduce using rule 205 (WHERE -> .)
    except          reduce using rule 205 (WHERE -> .)
    order           reduce using rule 205 (WHERE -> .)
    limit           reduce using rule 205 (WHERE -> .)
    offset          reduce using rule 205 (WHERE -> .)
    ptcoma          reduce using rule 205 (WHERE -> .)
    mas             reduce using rule 205 (WHERE -> .)
    menos           reduce using rule 205 (WHERE -> .)
    multiplicacion  reduce using rule 205 (WHERE -> .)
    division        reduce using rule 205 (WHERE -> .)
    modulo          reduce using rule 205 (WHERE -> .)
    elevado         reduce using rule 205 (WHERE -> .)
    and             reduce using rule 205 (WHERE -> .)
    or              reduce using rule 205 (WHERE -> .)
    mayor           reduce using rule 205 (WHERE -> .)
    menor           reduce using rule 205 (WHERE -> .)
    mayor_igual     reduce using rule 205 (WHERE -> .)
    menor_igual     reduce using rule 205 (WHERE -> .)
    igual           reduce using rule 205 (WHERE -> .)
    diferente1      reduce using rule 205 (WHERE -> .)
    diferente2      reduce using rule 205 (WHERE -> .)
    between         reduce using rule 205 (WHERE -> .)
    is              reduce using rule 205 (WHERE -> .)
    isnull          reduce using rule 205 (WHERE -> .)
    notnull         reduce using rule 205 (WHERE -> .)
    as              reduce using rule 205 (WHERE -> .)
    cadenaString    reduce using rule 205 (WHERE -> .)
    id              reduce using rule 205 (WHERE -> .)
    cadena          reduce using rule 205 (WHERE -> .)
    in              reduce using rule 205 (WHERE -> .)
    not             reduce using rule 205 (WHERE -> .)
    like            reduce using rule 205 (WHERE -> .)
    then            reduce using rule 205 (WHERE -> .)
    when            reduce using rule 205 (WHERE -> .)
    parc            reduce using rule 205 (WHERE -> .)
    end             reduce using rule 205 (WHERE -> .)
    else            reduce using rule 205 (WHERE -> .)
    constraint      reduce using rule 205 (WHERE -> .)
    unique          reduce using rule 205 (WHERE -> .)
    check           reduce using rule 205 (WHERE -> .)
    default         reduce using rule 205 (WHERE -> .)
    null            reduce using rule 205 (WHERE -> .)
    primary         reduce using rule 205 (WHERE -> .)
    references      reduce using rule 205 (WHERE -> .)
    asc             reduce using rule 205 (WHERE -> .)
    desc            reduce using rule 205 (WHERE -> .)

  ! coma            [ reduce using rule 205 (WHERE -> .) ]
  ! where           [ reduce using rule 205 (WHERE -> .) ]

    WHERE                          shift and go to state 439

state 319

    (193) SELECT -> select LEXP r_from LEXP WHERE . GROUP HAVING COMBINING ORDER LIMIT
    (211) GROUP -> . group by LEXP
    (212) GROUP -> .

  ! shift/reduce conflict for group resolved as shift
    group           shift and go to state 195
    r_from          reduce using rule 212 (GROUP -> .)
    coma            reduce using rule 212 (GROUP -> .)
    where           reduce using rule 212 (GROUP -> .)
    having          reduce using rule 212 (GROUP -> .)
    union           reduce using rule 212 (GROUP -> .)
    intersect       reduce using rule 212 (GROUP -> .)
    except          reduce using rule 212 (GROUP -> .)
    order           reduce using rule 212 (GROUP -> .)
    limit           reduce using rule 212 (GROUP -> .)
    offset          reduce using rule 212 (GROUP -> .)
    ptcoma          reduce using rule 212 (GROUP -> .)
    mas             reduce using rule 212 (GROUP -> .)
    menos           reduce using rule 212 (GROUP -> .)
    multiplicacion  reduce using rule 212 (GROUP -> .)
    division        reduce using rule 212 (GROUP -> .)
    modulo          reduce using rule 212 (GROUP -> .)
    elevado         reduce using rule 212 (GROUP -> .)
    and             reduce using rule 212 (GROUP -> .)
    or              reduce using rule 212 (GROUP -> .)
    mayor           reduce using rule 212 (GROUP -> .)
    menor           reduce using rule 212 (GROUP -> .)
    mayor_igual     reduce using rule 212 (GROUP -> .)
    menor_igual     reduce using rule 212 (GROUP -> .)
    igual           reduce using rule 212 (GROUP -> .)
    diferente1      reduce using rule 212 (GROUP -> .)
    diferente2      reduce using rule 212 (GROUP -> .)
    between         reduce using rule 212 (GROUP -> .)
    is              reduce using rule 212 (GROUP -> .)
    isnull          reduce using rule 212 (GROUP -> .)
    notnull         reduce using rule 212 (GROUP -> .)
    as              reduce using rule 212 (GROUP -> .)
    cadenaString    reduce using rule 212 (GROUP -> .)
    id              reduce using rule 212 (GROUP -> .)
    cadena          reduce using rule 212 (GROUP -> .)
    in              reduce using rule 212 (GROUP -> .)
    not             reduce using rule 212 (GROUP -> .)
    like            reduce using rule 212 (GROUP -> .)
    then            reduce using rule 212 (GROUP -> .)
    when            reduce using rule 212 (GROUP -> .)
    parc            reduce using rule 212 (GROUP -> .)
    end             reduce using rule 212 (GROUP -> .)
    else            reduce using rule 212 (GROUP -> .)
    constraint      reduce using rule 212 (GROUP -> .)
    unique          reduce using rule 212 (GROUP -> .)
    check           reduce using rule 212 (GROUP -> .)
    default         reduce using rule 212 (GROUP -> .)
    null            reduce using rule 212 (GROUP -> .)
    primary         reduce using rule 212 (GROUP -> .)
    references      reduce using rule 212 (GROUP -> .)
    asc             reduce using rule 212 (GROUP -> .)
    desc            reduce using rule 212 (GROUP -> .)

  ! group           [ reduce using rule 212 (GROUP -> .) ]

    GROUP                          shift and go to state 440

state 320

    (194) SELECT -> select LEXP WHERE GROUP HAVING . COMBINING ORDER LIMIT
    (206) COMBINING -> . union EXP
    (207) COMBINING -> . union all EXP
    (208) COMBINING -> . intersect EXP
    (209) COMBINING -> . except EXP
    (210) COMBINING -> .

  ! shift/reduce conflict for union resolved as shift
  ! shift/reduce conflict for intersect resolved as shift
  ! shift/reduce conflict for except resolved as shift
    union           shift and go to state 442
    intersect       shift and go to state 443
    except          shift and go to state 444
    r_from          reduce using rule 210 (COMBINING -> .)
    coma            reduce using rule 210 (COMBINING -> .)
    where           reduce using rule 210 (COMBINING -> .)
    group           reduce using rule 210 (COMBINING -> .)
    having          reduce using rule 210 (COMBINING -> .)
    order           reduce using rule 210 (COMBINING -> .)
    limit           reduce using rule 210 (COMBINING -> .)
    offset          reduce using rule 210 (COMBINING -> .)
    ptcoma          reduce using rule 210 (COMBINING -> .)
    mas             reduce using rule 210 (COMBINING -> .)
    menos           reduce using rule 210 (COMBINING -> .)
    multiplicacion  reduce using rule 210 (COMBINING -> .)
    division        reduce using rule 210 (COMBINING -> .)
    modulo          reduce using rule 210 (COMBINING -> .)
    elevado         reduce using rule 210 (COMBINING -> .)
    and             reduce using rule 210 (COMBINING -> .)
    or              reduce using rule 210 (COMBINING -> .)
    mayor           reduce using rule 210 (COMBINING -> .)
    menor           reduce using rule 210 (COMBINING -> .)
    mayor_igual     reduce using rule 210 (COMBINING -> .)
    menor_igual     reduce using rule 210 (COMBINING -> .)
    igual           reduce using rule 210 (COMBINING -> .)
    diferente1      reduce using rule 210 (COMBINING -> .)
    diferente2      reduce using rule 210 (COMBINING -> .)
    between         reduce using rule 210 (COMBINING -> .)
    is              reduce using rule 210 (COMBINING -> .)
    isnull          reduce using rule 210 (COMBINING -> .)
    notnull         reduce using rule 210 (COMBINING -> .)
    as              reduce using rule 210 (COMBINING -> .)
    cadenaString    reduce using rule 210 (COMBINING -> .)
    id              reduce using rule 210 (COMBINING -> .)
    cadena          reduce using rule 210 (COMBINING -> .)
    in              reduce using rule 210 (COMBINING -> .)
    not             reduce using rule 210 (COMBINING -> .)
    like            reduce using rule 210 (COMBINING -> .)
    then            reduce using rule 210 (COMBINING -> .)
    when            reduce using rule 210 (COMBINING -> .)
    parc            reduce using rule 210 (COMBINING -> .)
    end             reduce using rule 210 (COMBINING -> .)
    else            reduce using rule 210 (COMBINING -> .)
    constraint      reduce using rule 210 (COMBINING -> .)
    unique          reduce using rule 210 (COMBINING -> .)
    check           reduce using rule 210 (COMBINING -> .)
    default         reduce using rule 210 (COMBINING -> .)
    null            reduce using rule 210 (COMBINING -> .)
    primary         reduce using rule 210 (COMBINING -> .)
    references      reduce using rule 210 (COMBINING -> .)
    asc             reduce using rule 210 (COMBINING -> .)
    desc            reduce using rule 210 (COMBINING -> .)

  ! union           [ reduce using rule 210 (COMBINING -> .) ]
  ! intersect       [ reduce using rule 210 (COMBINING -> .) ]
  ! except          [ reduce using rule 210 (COMBINING -> .) ]

    COMBINING                      shift and go to state 441

state 321

    (213) HAVING -> having . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 445
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 322

    (211) GROUP -> group by . LEXP
    (226) LEXP -> . LEXP coma EXP
    (227) LEXP -> . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 446
    EXP                            shift and go to state 57
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 323

    (313) EXP -> EXP between symetric EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    r_from          reduce using rule 313 (EXP -> EXP between symetric EXP .)
    coma            reduce using rule 313 (EXP -> EXP between symetric EXP .)
    where           reduce using rule 313 (EXP -> EXP between symetric EXP .)
    group           reduce using rule 313 (EXP -> EXP between symetric EXP .)
    having          reduce using rule 313 (EXP -> EXP between symetric EXP .)
    union           reduce using rule 313 (EXP -> EXP between symetric EXP .)
    intersect       reduce using rule 313 (EXP -> EXP between symetric EXP .)
    except          reduce using rule 313 (EXP -> EXP between symetric EXP .)
    order           reduce using rule 313 (EXP -> EXP between symetric EXP .)
    limit           reduce using rule 313 (EXP -> EXP between symetric EXP .)
    offset          reduce using rule 313 (EXP -> EXP between symetric EXP .)
    ptcoma          reduce using rule 313 (EXP -> EXP between symetric EXP .)
    and             reduce using rule 313 (EXP -> EXP between symetric EXP .)
    or              reduce using rule 313 (EXP -> EXP between symetric EXP .)
    between         reduce using rule 313 (EXP -> EXP between symetric EXP .)
    is              reduce using rule 313 (EXP -> EXP between symetric EXP .)
    isnull          reduce using rule 313 (EXP -> EXP between symetric EXP .)
    notnull         reduce using rule 313 (EXP -> EXP between symetric EXP .)
    as              reduce using rule 313 (EXP -> EXP between symetric EXP .)
    cadenaString    reduce using rule 313 (EXP -> EXP between symetric EXP .)
    id              reduce using rule 313 (EXP -> EXP between symetric EXP .)
    cadena          reduce using rule 313 (EXP -> EXP between symetric EXP .)
    in              reduce using rule 313 (EXP -> EXP between symetric EXP .)
    not             reduce using rule 313 (EXP -> EXP between symetric EXP .)
    like            reduce using rule 313 (EXP -> EXP between symetric EXP .)
    then            reduce using rule 313 (EXP -> EXP between symetric EXP .)
    when            reduce using rule 313 (EXP -> EXP between symetric EXP .)
    parc            reduce using rule 313 (EXP -> EXP between symetric EXP .)
    end             reduce using rule 313 (EXP -> EXP between symetric EXP .)
    else            reduce using rule 313 (EXP -> EXP between symetric EXP .)
    constraint      reduce using rule 313 (EXP -> EXP between symetric EXP .)
    unique          reduce using rule 313 (EXP -> EXP between symetric EXP .)
    check           reduce using rule 313 (EXP -> EXP between symetric EXP .)
    default         reduce using rule 313 (EXP -> EXP between symetric EXP .)
    null            reduce using rule 313 (EXP -> EXP between symetric EXP .)
    primary         reduce using rule 313 (EXP -> EXP between symetric EXP .)
    references      reduce using rule 313 (EXP -> EXP between symetric EXP .)
    asc             reduce using rule 313 (EXP -> EXP between symetric EXP .)
    desc            reduce using rule 313 (EXP -> EXP between symetric EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    mayor           shift and go to state 130
    menor           shift and go to state 131
    mayor_igual     shift and go to state 132
    menor_igual     shift and go to state 133
    igual           shift and go to state 134
    diferente1      shift and go to state 135
    diferente2      shift and go to state 136

  ! mas             [ reduce using rule 313 (EXP -> EXP between symetric EXP .) ]
  ! menos           [ reduce using rule 313 (EXP -> EXP between symetric EXP .) ]
  ! multiplicacion  [ reduce using rule 313 (EXP -> EXP between symetric EXP .) ]
  ! division        [ reduce using rule 313 (EXP -> EXP between symetric EXP .) ]
  ! modulo          [ reduce using rule 313 (EXP -> EXP between symetric EXP .) ]
  ! elevado         [ reduce using rule 313 (EXP -> EXP between symetric EXP .) ]
  ! mayor           [ reduce using rule 313 (EXP -> EXP between symetric EXP .) ]
  ! menor           [ reduce using rule 313 (EXP -> EXP between symetric EXP .) ]
  ! mayor_igual     [ reduce using rule 313 (EXP -> EXP between symetric EXP .) ]
  ! menor_igual     [ reduce using rule 313 (EXP -> EXP between symetric EXP .) ]
  ! igual           [ reduce using rule 313 (EXP -> EXP between symetric EXP .) ]
  ! diferente1      [ reduce using rule 313 (EXP -> EXP between symetric EXP .) ]
  ! diferente2      [ reduce using rule 313 (EXP -> EXP between symetric EXP .) ]
  ! and             [ shift and go to state 128 ]
  ! or              [ shift and go to state 129 ]
  ! between         [ shift and go to state 137 ]
  ! is              [ shift and go to state 138 ]
  ! isnull          [ shift and go to state 140 ]
  ! notnull         [ shift and go to state 141 ]
  ! as              [ shift and go to state 142 ]
  ! cadenaString    [ shift and go to state 143 ]
  ! id              [ shift and go to state 144 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 146 ]
  ! not             [ shift and go to state 139 ]
  ! like            [ shift and go to state 147 ]


state 324

    (291) EXP -> EXP is not null .

    r_from          reduce using rule 291 (EXP -> EXP is not null .)
    coma            reduce using rule 291 (EXP -> EXP is not null .)
    where           reduce using rule 291 (EXP -> EXP is not null .)
    group           reduce using rule 291 (EXP -> EXP is not null .)
    having          reduce using rule 291 (EXP -> EXP is not null .)
    union           reduce using rule 291 (EXP -> EXP is not null .)
    intersect       reduce using rule 291 (EXP -> EXP is not null .)
    except          reduce using rule 291 (EXP -> EXP is not null .)
    order           reduce using rule 291 (EXP -> EXP is not null .)
    limit           reduce using rule 291 (EXP -> EXP is not null .)
    offset          reduce using rule 291 (EXP -> EXP is not null .)
    ptcoma          reduce using rule 291 (EXP -> EXP is not null .)
    mas             reduce using rule 291 (EXP -> EXP is not null .)
    menos           reduce using rule 291 (EXP -> EXP is not null .)
    multiplicacion  reduce using rule 291 (EXP -> EXP is not null .)
    division        reduce using rule 291 (EXP -> EXP is not null .)
    modulo          reduce using rule 291 (EXP -> EXP is not null .)
    elevado         reduce using rule 291 (EXP -> EXP is not null .)
    and             reduce using rule 291 (EXP -> EXP is not null .)
    or              reduce using rule 291 (EXP -> EXP is not null .)
    mayor           reduce using rule 291 (EXP -> EXP is not null .)
    menor           reduce using rule 291 (EXP -> EXP is not null .)
    mayor_igual     reduce using rule 291 (EXP -> EXP is not null .)
    menor_igual     reduce using rule 291 (EXP -> EXP is not null .)
    igual           reduce using rule 291 (EXP -> EXP is not null .)
    diferente1      reduce using rule 291 (EXP -> EXP is not null .)
    diferente2      reduce using rule 291 (EXP -> EXP is not null .)
    between         reduce using rule 291 (EXP -> EXP is not null .)
    is              reduce using rule 291 (EXP -> EXP is not null .)
    isnull          reduce using rule 291 (EXP -> EXP is not null .)
    notnull         reduce using rule 291 (EXP -> EXP is not null .)
    as              reduce using rule 291 (EXP -> EXP is not null .)
    cadenaString    reduce using rule 291 (EXP -> EXP is not null .)
    id              reduce using rule 291 (EXP -> EXP is not null .)
    cadena          reduce using rule 291 (EXP -> EXP is not null .)
    in              reduce using rule 291 (EXP -> EXP is not null .)
    not             reduce using rule 291 (EXP -> EXP is not null .)
    like            reduce using rule 291 (EXP -> EXP is not null .)
    then            reduce using rule 291 (EXP -> EXP is not null .)
    when            reduce using rule 291 (EXP -> EXP is not null .)
    parc            reduce using rule 291 (EXP -> EXP is not null .)
    end             reduce using rule 291 (EXP -> EXP is not null .)
    else            reduce using rule 291 (EXP -> EXP is not null .)
    constraint      reduce using rule 291 (EXP -> EXP is not null .)
    unique          reduce using rule 291 (EXP -> EXP is not null .)
    check           reduce using rule 291 (EXP -> EXP is not null .)
    default         reduce using rule 291 (EXP -> EXP is not null .)
    null            reduce using rule 291 (EXP -> EXP is not null .)
    primary         reduce using rule 291 (EXP -> EXP is not null .)
    references      reduce using rule 291 (EXP -> EXP is not null .)
    asc             reduce using rule 291 (EXP -> EXP is not null .)
    desc            reduce using rule 291 (EXP -> EXP is not null .)


state 325

    (296) EXP -> EXP is not true .

    r_from          reduce using rule 296 (EXP -> EXP is not true .)
    coma            reduce using rule 296 (EXP -> EXP is not true .)
    where           reduce using rule 296 (EXP -> EXP is not true .)
    group           reduce using rule 296 (EXP -> EXP is not true .)
    having          reduce using rule 296 (EXP -> EXP is not true .)
    union           reduce using rule 296 (EXP -> EXP is not true .)
    intersect       reduce using rule 296 (EXP -> EXP is not true .)
    except          reduce using rule 296 (EXP -> EXP is not true .)
    order           reduce using rule 296 (EXP -> EXP is not true .)
    limit           reduce using rule 296 (EXP -> EXP is not true .)
    offset          reduce using rule 296 (EXP -> EXP is not true .)
    ptcoma          reduce using rule 296 (EXP -> EXP is not true .)
    mas             reduce using rule 296 (EXP -> EXP is not true .)
    menos           reduce using rule 296 (EXP -> EXP is not true .)
    multiplicacion  reduce using rule 296 (EXP -> EXP is not true .)
    division        reduce using rule 296 (EXP -> EXP is not true .)
    modulo          reduce using rule 296 (EXP -> EXP is not true .)
    elevado         reduce using rule 296 (EXP -> EXP is not true .)
    and             reduce using rule 296 (EXP -> EXP is not true .)
    or              reduce using rule 296 (EXP -> EXP is not true .)
    mayor           reduce using rule 296 (EXP -> EXP is not true .)
    menor           reduce using rule 296 (EXP -> EXP is not true .)
    mayor_igual     reduce using rule 296 (EXP -> EXP is not true .)
    menor_igual     reduce using rule 296 (EXP -> EXP is not true .)
    igual           reduce using rule 296 (EXP -> EXP is not true .)
    diferente1      reduce using rule 296 (EXP -> EXP is not true .)
    diferente2      reduce using rule 296 (EXP -> EXP is not true .)
    between         reduce using rule 296 (EXP -> EXP is not true .)
    is              reduce using rule 296 (EXP -> EXP is not true .)
    isnull          reduce using rule 296 (EXP -> EXP is not true .)
    notnull         reduce using rule 296 (EXP -> EXP is not true .)
    as              reduce using rule 296 (EXP -> EXP is not true .)
    cadenaString    reduce using rule 296 (EXP -> EXP is not true .)
    id              reduce using rule 296 (EXP -> EXP is not true .)
    cadena          reduce using rule 296 (EXP -> EXP is not true .)
    in              reduce using rule 296 (EXP -> EXP is not true .)
    not             reduce using rule 296 (EXP -> EXP is not true .)
    like            reduce using rule 296 (EXP -> EXP is not true .)
    then            reduce using rule 296 (EXP -> EXP is not true .)
    when            reduce using rule 296 (EXP -> EXP is not true .)
    parc            reduce using rule 296 (EXP -> EXP is not true .)
    end             reduce using rule 296 (EXP -> EXP is not true .)
    else            reduce using rule 296 (EXP -> EXP is not true .)
    constraint      reduce using rule 296 (EXP -> EXP is not true .)
    unique          reduce using rule 296 (EXP -> EXP is not true .)
    check           reduce using rule 296 (EXP -> EXP is not true .)
    default         reduce using rule 296 (EXP -> EXP is not true .)
    null            reduce using rule 296 (EXP -> EXP is not true .)
    primary         reduce using rule 296 (EXP -> EXP is not true .)
    references      reduce using rule 296 (EXP -> EXP is not true .)
    asc             reduce using rule 296 (EXP -> EXP is not true .)
    desc            reduce using rule 296 (EXP -> EXP is not true .)


state 326

    (298) EXP -> EXP is not false .

    r_from          reduce using rule 298 (EXP -> EXP is not false .)
    coma            reduce using rule 298 (EXP -> EXP is not false .)
    where           reduce using rule 298 (EXP -> EXP is not false .)
    group           reduce using rule 298 (EXP -> EXP is not false .)
    having          reduce using rule 298 (EXP -> EXP is not false .)
    union           reduce using rule 298 (EXP -> EXP is not false .)
    intersect       reduce using rule 298 (EXP -> EXP is not false .)
    except          reduce using rule 298 (EXP -> EXP is not false .)
    order           reduce using rule 298 (EXP -> EXP is not false .)
    limit           reduce using rule 298 (EXP -> EXP is not false .)
    offset          reduce using rule 298 (EXP -> EXP is not false .)
    ptcoma          reduce using rule 298 (EXP -> EXP is not false .)
    mas             reduce using rule 298 (EXP -> EXP is not false .)
    menos           reduce using rule 298 (EXP -> EXP is not false .)
    multiplicacion  reduce using rule 298 (EXP -> EXP is not false .)
    division        reduce using rule 298 (EXP -> EXP is not false .)
    modulo          reduce using rule 298 (EXP -> EXP is not false .)
    elevado         reduce using rule 298 (EXP -> EXP is not false .)
    and             reduce using rule 298 (EXP -> EXP is not false .)
    or              reduce using rule 298 (EXP -> EXP is not false .)
    mayor           reduce using rule 298 (EXP -> EXP is not false .)
    menor           reduce using rule 298 (EXP -> EXP is not false .)
    mayor_igual     reduce using rule 298 (EXP -> EXP is not false .)
    menor_igual     reduce using rule 298 (EXP -> EXP is not false .)
    igual           reduce using rule 298 (EXP -> EXP is not false .)
    diferente1      reduce using rule 298 (EXP -> EXP is not false .)
    diferente2      reduce using rule 298 (EXP -> EXP is not false .)
    between         reduce using rule 298 (EXP -> EXP is not false .)
    is              reduce using rule 298 (EXP -> EXP is not false .)
    isnull          reduce using rule 298 (EXP -> EXP is not false .)
    notnull         reduce using rule 298 (EXP -> EXP is not false .)
    as              reduce using rule 298 (EXP -> EXP is not false .)
    cadenaString    reduce using rule 298 (EXP -> EXP is not false .)
    id              reduce using rule 298 (EXP -> EXP is not false .)
    cadena          reduce using rule 298 (EXP -> EXP is not false .)
    in              reduce using rule 298 (EXP -> EXP is not false .)
    not             reduce using rule 298 (EXP -> EXP is not false .)
    like            reduce using rule 298 (EXP -> EXP is not false .)
    then            reduce using rule 298 (EXP -> EXP is not false .)
    when            reduce using rule 298 (EXP -> EXP is not false .)
    parc            reduce using rule 298 (EXP -> EXP is not false .)
    end             reduce using rule 298 (EXP -> EXP is not false .)
    else            reduce using rule 298 (EXP -> EXP is not false .)
    constraint      reduce using rule 298 (EXP -> EXP is not false .)
    unique          reduce using rule 298 (EXP -> EXP is not false .)
    check           reduce using rule 298 (EXP -> EXP is not false .)
    default         reduce using rule 298 (EXP -> EXP is not false .)
    null            reduce using rule 298 (EXP -> EXP is not false .)
    primary         reduce using rule 298 (EXP -> EXP is not false .)
    references      reduce using rule 298 (EXP -> EXP is not false .)
    asc             reduce using rule 298 (EXP -> EXP is not false .)
    desc            reduce using rule 298 (EXP -> EXP is not false .)


state 327

    (300) EXP -> EXP is not unknown .

    r_from          reduce using rule 300 (EXP -> EXP is not unknown .)
    coma            reduce using rule 300 (EXP -> EXP is not unknown .)
    where           reduce using rule 300 (EXP -> EXP is not unknown .)
    group           reduce using rule 300 (EXP -> EXP is not unknown .)
    having          reduce using rule 300 (EXP -> EXP is not unknown .)
    union           reduce using rule 300 (EXP -> EXP is not unknown .)
    intersect       reduce using rule 300 (EXP -> EXP is not unknown .)
    except          reduce using rule 300 (EXP -> EXP is not unknown .)
    order           reduce using rule 300 (EXP -> EXP is not unknown .)
    limit           reduce using rule 300 (EXP -> EXP is not unknown .)
    offset          reduce using rule 300 (EXP -> EXP is not unknown .)
    ptcoma          reduce using rule 300 (EXP -> EXP is not unknown .)
    mas             reduce using rule 300 (EXP -> EXP is not unknown .)
    menos           reduce using rule 300 (EXP -> EXP is not unknown .)
    multiplicacion  reduce using rule 300 (EXP -> EXP is not unknown .)
    division        reduce using rule 300 (EXP -> EXP is not unknown .)
    modulo          reduce using rule 300 (EXP -> EXP is not unknown .)
    elevado         reduce using rule 300 (EXP -> EXP is not unknown .)
    and             reduce using rule 300 (EXP -> EXP is not unknown .)
    or              reduce using rule 300 (EXP -> EXP is not unknown .)
    mayor           reduce using rule 300 (EXP -> EXP is not unknown .)
    menor           reduce using rule 300 (EXP -> EXP is not unknown .)
    mayor_igual     reduce using rule 300 (EXP -> EXP is not unknown .)
    menor_igual     reduce using rule 300 (EXP -> EXP is not unknown .)
    igual           reduce using rule 300 (EXP -> EXP is not unknown .)
    diferente1      reduce using rule 300 (EXP -> EXP is not unknown .)
    diferente2      reduce using rule 300 (EXP -> EXP is not unknown .)
    between         reduce using rule 300 (EXP -> EXP is not unknown .)
    is              reduce using rule 300 (EXP -> EXP is not unknown .)
    isnull          reduce using rule 300 (EXP -> EXP is not unknown .)
    notnull         reduce using rule 300 (EXP -> EXP is not unknown .)
    as              reduce using rule 300 (EXP -> EXP is not unknown .)
    cadenaString    reduce using rule 300 (EXP -> EXP is not unknown .)
    id              reduce using rule 300 (EXP -> EXP is not unknown .)
    cadena          reduce using rule 300 (EXP -> EXP is not unknown .)
    in              reduce using rule 300 (EXP -> EXP is not unknown .)
    not             reduce using rule 300 (EXP -> EXP is not unknown .)
    like            reduce using rule 300 (EXP -> EXP is not unknown .)
    then            reduce using rule 300 (EXP -> EXP is not unknown .)
    when            reduce using rule 300 (EXP -> EXP is not unknown .)
    parc            reduce using rule 300 (EXP -> EXP is not unknown .)
    end             reduce using rule 300 (EXP -> EXP is not unknown .)
    else            reduce using rule 300 (EXP -> EXP is not unknown .)
    constraint      reduce using rule 300 (EXP -> EXP is not unknown .)
    unique          reduce using rule 300 (EXP -> EXP is not unknown .)
    check           reduce using rule 300 (EXP -> EXP is not unknown .)
    default         reduce using rule 300 (EXP -> EXP is not unknown .)
    null            reduce using rule 300 (EXP -> EXP is not unknown .)
    primary         reduce using rule 300 (EXP -> EXP is not unknown .)
    references      reduce using rule 300 (EXP -> EXP is not unknown .)
    asc             reduce using rule 300 (EXP -> EXP is not unknown .)
    desc            reduce using rule 300 (EXP -> EXP is not unknown .)


state 328

    (316) EXP -> EXP is not distinct . r_from EXP

    r_from          shift and go to state 447


state 329

    (315) EXP -> EXP is distinct r_from . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 448
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 330

    (311) EXP -> EXP not in para . EXP parc
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 449
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 331

    (312) EXP -> EXP not between EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    r_from          reduce using rule 312 (EXP -> EXP not between EXP .)
    coma            reduce using rule 312 (EXP -> EXP not between EXP .)
    where           reduce using rule 312 (EXP -> EXP not between EXP .)
    group           reduce using rule 312 (EXP -> EXP not between EXP .)
    having          reduce using rule 312 (EXP -> EXP not between EXP .)
    union           reduce using rule 312 (EXP -> EXP not between EXP .)
    intersect       reduce using rule 312 (EXP -> EXP not between EXP .)
    except          reduce using rule 312 (EXP -> EXP not between EXP .)
    order           reduce using rule 312 (EXP -> EXP not between EXP .)
    limit           reduce using rule 312 (EXP -> EXP not between EXP .)
    offset          reduce using rule 312 (EXP -> EXP not between EXP .)
    ptcoma          reduce using rule 312 (EXP -> EXP not between EXP .)
    and             reduce using rule 312 (EXP -> EXP not between EXP .)
    or              reduce using rule 312 (EXP -> EXP not between EXP .)
    between         reduce using rule 312 (EXP -> EXP not between EXP .)
    is              reduce using rule 312 (EXP -> EXP not between EXP .)
    isnull          reduce using rule 312 (EXP -> EXP not between EXP .)
    notnull         reduce using rule 312 (EXP -> EXP not between EXP .)
    as              reduce using rule 312 (EXP -> EXP not between EXP .)
    cadenaString    reduce using rule 312 (EXP -> EXP not between EXP .)
    id              reduce using rule 312 (EXP -> EXP not between EXP .)
    cadena          reduce using rule 312 (EXP -> EXP not between EXP .)
    in              reduce using rule 312 (EXP -> EXP not between EXP .)
    not             reduce using rule 312 (EXP -> EXP not between EXP .)
    like            reduce using rule 312 (EXP -> EXP not between EXP .)
    then            reduce using rule 312 (EXP -> EXP not between EXP .)
    when            reduce using rule 312 (EXP -> EXP not between EXP .)
    parc            reduce using rule 312 (EXP -> EXP not between EXP .)
    end             reduce using rule 312 (EXP -> EXP not between EXP .)
    else            reduce using rule 312 (EXP -> EXP not between EXP .)
    constraint      reduce using rule 312 (EXP -> EXP not between EXP .)
    unique          reduce using rule 312 (EXP -> EXP not between EXP .)
    check           reduce using rule 312 (EXP -> EXP not between EXP .)
    default         reduce using rule 312 (EXP -> EXP not between EXP .)
    null            reduce using rule 312 (EXP -> EXP not between EXP .)
    primary         reduce using rule 312 (EXP -> EXP not between EXP .)
    references      reduce using rule 312 (EXP -> EXP not between EXP .)
    asc             reduce using rule 312 (EXP -> EXP not between EXP .)
    desc            reduce using rule 312 (EXP -> EXP not between EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    mayor           shift and go to state 130
    menor           shift and go to state 131
    mayor_igual     shift and go to state 132
    menor_igual     shift and go to state 133
    igual           shift and go to state 134
    diferente1      shift and go to state 135
    diferente2      shift and go to state 136

  ! mas             [ reduce using rule 312 (EXP -> EXP not between EXP .) ]
  ! menos           [ reduce using rule 312 (EXP -> EXP not between EXP .) ]
  ! multiplicacion  [ reduce using rule 312 (EXP -> EXP not between EXP .) ]
  ! division        [ reduce using rule 312 (EXP -> EXP not between EXP .) ]
  ! modulo          [ reduce using rule 312 (EXP -> EXP not between EXP .) ]
  ! elevado         [ reduce using rule 312 (EXP -> EXP not between EXP .) ]
  ! mayor           [ reduce using rule 312 (EXP -> EXP not between EXP .) ]
  ! menor           [ reduce using rule 312 (EXP -> EXP not between EXP .) ]
  ! mayor_igual     [ reduce using rule 312 (EXP -> EXP not between EXP .) ]
  ! menor_igual     [ reduce using rule 312 (EXP -> EXP not between EXP .) ]
  ! igual           [ reduce using rule 312 (EXP -> EXP not between EXP .) ]
  ! diferente1      [ reduce using rule 312 (EXP -> EXP not between EXP .) ]
  ! diferente2      [ reduce using rule 312 (EXP -> EXP not between EXP .) ]
  ! and             [ shift and go to state 128 ]
  ! or              [ shift and go to state 129 ]
  ! between         [ shift and go to state 137 ]
  ! is              [ shift and go to state 138 ]
  ! isnull          [ shift and go to state 140 ]
  ! notnull         [ shift and go to state 141 ]
  ! as              [ shift and go to state 142 ]
  ! cadenaString    [ shift and go to state 143 ]
  ! id              [ shift and go to state 144 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 146 ]
  ! not             [ shift and go to state 139 ]
  ! like            [ shift and go to state 147 ]


state 332

    (314) EXP -> EXP not between symetric . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 450
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 333

    (318) EXP -> EXP not like cadena .

    r_from          reduce using rule 318 (EXP -> EXP not like cadena .)
    coma            reduce using rule 318 (EXP -> EXP not like cadena .)
    where           reduce using rule 318 (EXP -> EXP not like cadena .)
    group           reduce using rule 318 (EXP -> EXP not like cadena .)
    having          reduce using rule 318 (EXP -> EXP not like cadena .)
    union           reduce using rule 318 (EXP -> EXP not like cadena .)
    intersect       reduce using rule 318 (EXP -> EXP not like cadena .)
    except          reduce using rule 318 (EXP -> EXP not like cadena .)
    order           reduce using rule 318 (EXP -> EXP not like cadena .)
    limit           reduce using rule 318 (EXP -> EXP not like cadena .)
    offset          reduce using rule 318 (EXP -> EXP not like cadena .)
    ptcoma          reduce using rule 318 (EXP -> EXP not like cadena .)
    mas             reduce using rule 318 (EXP -> EXP not like cadena .)
    menos           reduce using rule 318 (EXP -> EXP not like cadena .)
    multiplicacion  reduce using rule 318 (EXP -> EXP not like cadena .)
    division        reduce using rule 318 (EXP -> EXP not like cadena .)
    modulo          reduce using rule 318 (EXP -> EXP not like cadena .)
    elevado         reduce using rule 318 (EXP -> EXP not like cadena .)
    and             reduce using rule 318 (EXP -> EXP not like cadena .)
    or              reduce using rule 318 (EXP -> EXP not like cadena .)
    mayor           reduce using rule 318 (EXP -> EXP not like cadena .)
    menor           reduce using rule 318 (EXP -> EXP not like cadena .)
    mayor_igual     reduce using rule 318 (EXP -> EXP not like cadena .)
    menor_igual     reduce using rule 318 (EXP -> EXP not like cadena .)
    igual           reduce using rule 318 (EXP -> EXP not like cadena .)
    diferente1      reduce using rule 318 (EXP -> EXP not like cadena .)
    diferente2      reduce using rule 318 (EXP -> EXP not like cadena .)
    between         reduce using rule 318 (EXP -> EXP not like cadena .)
    is              reduce using rule 318 (EXP -> EXP not like cadena .)
    isnull          reduce using rule 318 (EXP -> EXP not like cadena .)
    notnull         reduce using rule 318 (EXP -> EXP not like cadena .)
    as              reduce using rule 318 (EXP -> EXP not like cadena .)
    cadenaString    reduce using rule 318 (EXP -> EXP not like cadena .)
    id              reduce using rule 318 (EXP -> EXP not like cadena .)
    cadena          reduce using rule 318 (EXP -> EXP not like cadena .)
    in              reduce using rule 318 (EXP -> EXP not like cadena .)
    not             reduce using rule 318 (EXP -> EXP not like cadena .)
    like            reduce using rule 318 (EXP -> EXP not like cadena .)
    then            reduce using rule 318 (EXP -> EXP not like cadena .)
    when            reduce using rule 318 (EXP -> EXP not like cadena .)
    parc            reduce using rule 318 (EXP -> EXP not like cadena .)
    end             reduce using rule 318 (EXP -> EXP not like cadena .)
    else            reduce using rule 318 (EXP -> EXP not like cadena .)
    constraint      reduce using rule 318 (EXP -> EXP not like cadena .)
    unique          reduce using rule 318 (EXP -> EXP not like cadena .)
    check           reduce using rule 318 (EXP -> EXP not like cadena .)
    default         reduce using rule 318 (EXP -> EXP not like cadena .)
    null            reduce using rule 318 (EXP -> EXP not like cadena .)
    primary         reduce using rule 318 (EXP -> EXP not like cadena .)
    references      reduce using rule 318 (EXP -> EXP not like cadena .)
    asc             reduce using rule 318 (EXP -> EXP not like cadena .)
    desc            reduce using rule 318 (EXP -> EXP not like cadena .)


state 334

    (310) EXP -> EXP in para EXP . parc
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    parc            shift and go to state 451
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    and             shift and go to state 128
    or              shift and go to state 129
    mayor           shift and go to state 130
    menor           shift and go to state 131
    mayor_igual     shift and go to state 132
    menor_igual     shift and go to state 133
    igual           shift and go to state 134
    diferente1      shift and go to state 135
    diferente2      shift and go to state 136
    between         shift and go to state 137
    is              shift and go to state 138
    isnull          shift and go to state 140
    notnull         shift and go to state 141
    as              shift and go to state 142
    cadenaString    shift and go to state 143
    id              shift and go to state 144
    cadena          shift and go to state 145
    in              shift and go to state 146
    not             shift and go to state 139
    like            shift and go to state 147


state 335

    (322) EXP -> id para LEXP parc .

    r_from          reduce using rule 322 (EXP -> id para LEXP parc .)
    coma            reduce using rule 322 (EXP -> id para LEXP parc .)
    where           reduce using rule 322 (EXP -> id para LEXP parc .)
    group           reduce using rule 322 (EXP -> id para LEXP parc .)
    having          reduce using rule 322 (EXP -> id para LEXP parc .)
    union           reduce using rule 322 (EXP -> id para LEXP parc .)
    intersect       reduce using rule 322 (EXP -> id para LEXP parc .)
    except          reduce using rule 322 (EXP -> id para LEXP parc .)
    order           reduce using rule 322 (EXP -> id para LEXP parc .)
    limit           reduce using rule 322 (EXP -> id para LEXP parc .)
    offset          reduce using rule 322 (EXP -> id para LEXP parc .)
    ptcoma          reduce using rule 322 (EXP -> id para LEXP parc .)
    mas             reduce using rule 322 (EXP -> id para LEXP parc .)
    menos           reduce using rule 322 (EXP -> id para LEXP parc .)
    multiplicacion  reduce using rule 322 (EXP -> id para LEXP parc .)
    division        reduce using rule 322 (EXP -> id para LEXP parc .)
    modulo          reduce using rule 322 (EXP -> id para LEXP parc .)
    elevado         reduce using rule 322 (EXP -> id para LEXP parc .)
    and             reduce using rule 322 (EXP -> id para LEXP parc .)
    or              reduce using rule 322 (EXP -> id para LEXP parc .)
    mayor           reduce using rule 322 (EXP -> id para LEXP parc .)
    menor           reduce using rule 322 (EXP -> id para LEXP parc .)
    mayor_igual     reduce using rule 322 (EXP -> id para LEXP parc .)
    menor_igual     reduce using rule 322 (EXP -> id para LEXP parc .)
    igual           reduce using rule 322 (EXP -> id para LEXP parc .)
    diferente1      reduce using rule 322 (EXP -> id para LEXP parc .)
    diferente2      reduce using rule 322 (EXP -> id para LEXP parc .)
    between         reduce using rule 322 (EXP -> id para LEXP parc .)
    is              reduce using rule 322 (EXP -> id para LEXP parc .)
    isnull          reduce using rule 322 (EXP -> id para LEXP parc .)
    notnull         reduce using rule 322 (EXP -> id para LEXP parc .)
    as              reduce using rule 322 (EXP -> id para LEXP parc .)
    cadenaString    reduce using rule 322 (EXP -> id para LEXP parc .)
    id              reduce using rule 322 (EXP -> id para LEXP parc .)
    cadena          reduce using rule 322 (EXP -> id para LEXP parc .)
    in              reduce using rule 322 (EXP -> id para LEXP parc .)
    not             reduce using rule 322 (EXP -> id para LEXP parc .)
    like            reduce using rule 322 (EXP -> id para LEXP parc .)
    then            reduce using rule 322 (EXP -> id para LEXP parc .)
    when            reduce using rule 322 (EXP -> id para LEXP parc .)
    parc            reduce using rule 322 (EXP -> id para LEXP parc .)
    end             reduce using rule 322 (EXP -> id para LEXP parc .)
    else            reduce using rule 322 (EXP -> id para LEXP parc .)
    constraint      reduce using rule 322 (EXP -> id para LEXP parc .)
    unique          reduce using rule 322 (EXP -> id para LEXP parc .)
    check           reduce using rule 322 (EXP -> id para LEXP parc .)
    default         reduce using rule 322 (EXP -> id para LEXP parc .)
    null            reduce using rule 322 (EXP -> id para LEXP parc .)
    primary         reduce using rule 322 (EXP -> id para LEXP parc .)
    references      reduce using rule 322 (EXP -> id para LEXP parc .)
    asc             reduce using rule 322 (EXP -> id para LEXP parc .)
    desc            reduce using rule 322 (EXP -> id para LEXP parc .)


state 336

    (228) TIPO -> interval cadena .

    r_from          reduce using rule 228 (TIPO -> interval cadena .)
    coma            reduce using rule 228 (TIPO -> interval cadena .)
    where           reduce using rule 228 (TIPO -> interval cadena .)
    group           reduce using rule 228 (TIPO -> interval cadena .)
    having          reduce using rule 228 (TIPO -> interval cadena .)
    union           reduce using rule 228 (TIPO -> interval cadena .)
    intersect       reduce using rule 228 (TIPO -> interval cadena .)
    except          reduce using rule 228 (TIPO -> interval cadena .)
    order           reduce using rule 228 (TIPO -> interval cadena .)
    limit           reduce using rule 228 (TIPO -> interval cadena .)
    offset          reduce using rule 228 (TIPO -> interval cadena .)
    ptcoma          reduce using rule 228 (TIPO -> interval cadena .)
    mas             reduce using rule 228 (TIPO -> interval cadena .)
    menos           reduce using rule 228 (TIPO -> interval cadena .)
    multiplicacion  reduce using rule 228 (TIPO -> interval cadena .)
    division        reduce using rule 228 (TIPO -> interval cadena .)
    modulo          reduce using rule 228 (TIPO -> interval cadena .)
    elevado         reduce using rule 228 (TIPO -> interval cadena .)
    and             reduce using rule 228 (TIPO -> interval cadena .)
    or              reduce using rule 228 (TIPO -> interval cadena .)
    mayor           reduce using rule 228 (TIPO -> interval cadena .)
    menor           reduce using rule 228 (TIPO -> interval cadena .)
    mayor_igual     reduce using rule 228 (TIPO -> interval cadena .)
    menor_igual     reduce using rule 228 (TIPO -> interval cadena .)
    igual           reduce using rule 228 (TIPO -> interval cadena .)
    diferente1      reduce using rule 228 (TIPO -> interval cadena .)
    diferente2      reduce using rule 228 (TIPO -> interval cadena .)
    between         reduce using rule 228 (TIPO -> interval cadena .)
    is              reduce using rule 228 (TIPO -> interval cadena .)
    isnull          reduce using rule 228 (TIPO -> interval cadena .)
    notnull         reduce using rule 228 (TIPO -> interval cadena .)
    as              reduce using rule 228 (TIPO -> interval cadena .)
    cadenaString    reduce using rule 228 (TIPO -> interval cadena .)
    id              reduce using rule 228 (TIPO -> interval cadena .)
    cadena          reduce using rule 228 (TIPO -> interval cadena .)
    in              reduce using rule 228 (TIPO -> interval cadena .)
    not             reduce using rule 228 (TIPO -> interval cadena .)
    like            reduce using rule 228 (TIPO -> interval cadena .)
    then            reduce using rule 228 (TIPO -> interval cadena .)
    when            reduce using rule 228 (TIPO -> interval cadena .)
    parc            reduce using rule 228 (TIPO -> interval cadena .)
    end             reduce using rule 228 (TIPO -> interval cadena .)
    else            reduce using rule 228 (TIPO -> interval cadena .)
    constraint      reduce using rule 228 (TIPO -> interval cadena .)
    unique          reduce using rule 228 (TIPO -> interval cadena .)
    check           reduce using rule 228 (TIPO -> interval cadena .)
    default         reduce using rule 228 (TIPO -> interval cadena .)
    null            reduce using rule 228 (TIPO -> interval cadena .)
    primary         reduce using rule 228 (TIPO -> interval cadena .)
    references      reduce using rule 228 (TIPO -> interval cadena .)
    asc             reduce using rule 228 (TIPO -> interval cadena .)
    desc            reduce using rule 228 (TIPO -> interval cadena .)
    dospuntos       reduce using rule 228 (TIPO -> interval cadena .)
    language        reduce using rule 228 (TIPO -> interval cadena .)
    do              reduce using rule 228 (TIPO -> interval cadena .)
    declare         reduce using rule 228 (TIPO -> interval cadena .)
    if              reduce using rule 228 (TIPO -> interval cadena .)
    raise           reduce using rule 228 (TIPO -> interval cadena .)
    begin           reduce using rule 228 (TIPO -> interval cadena .)
    execute         reduce using rule 228 (TIPO -> interval cadena .)
    return          reduce using rule 228 (TIPO -> interval cadena .)
    insert          reduce using rule 228 (TIPO -> interval cadena .)
    select          reduce using rule 228 (TIPO -> interval cadena .)
    update          reduce using rule 228 (TIPO -> interval cadena .)
    delete          reduce using rule 228 (TIPO -> interval cadena .)


state 337

    (238) TIPO -> interval para . int parc
    (248) TIPO -> interval para . int parc cadena

    int             shift and go to state 452


state 338

    (229) TIPO -> decimal para . int coma int parc
    (230) TIPO -> decimal para . int parc

    int             shift and go to state 453


state 339

    (232) TIPO -> numeric para . int coma int parc
    (233) TIPO -> numeric para . int parc

    int             shift and go to state 454


state 340

    (235) TIPO -> varchar para . int parc

    int             shift and go to state 455


state 341

    (236) TIPO -> timestamp para . int parc
    (244) TIPO -> timestamp para . int parc without time zone
    (245) TIPO -> timestamp para . int parc with time zone

    int             shift and go to state 456


state 342

    (264) TIPO -> timestamp without . time zone

    time            shift and go to state 457


state 343

    (265) TIPO -> timestamp with . time zone

    time            shift and go to state 458


state 344

    (237) TIPO -> character para . int parc

    int             shift and go to state 459


state 345

    (241) TIPO -> character varying . para int parc

    para            shift and go to state 460


state 346

    (239) TIPO -> char para . int parc

    int             shift and go to state 461


state 347

    (240) TIPO -> time para . int parc
    (246) TIPO -> time para . int parc without time zone
    (247) TIPO -> time para . int parc with time zone

    int             shift and go to state 462


state 348

    (266) TIPO -> time without . time zone

    time            shift and go to state 463


state 349

    (267) TIPO -> time with . time zone

    time            shift and go to state 464


state 350

    (242) TIPO -> id modulo . rowtype

    rowtype         shift and go to state 465


state 351

    (243) TIPO -> idPunto modulo . type

    type            shift and go to state 466


state 352

    (254) TIPO -> double precision .

    r_from          reduce using rule 254 (TIPO -> double precision .)
    coma            reduce using rule 254 (TIPO -> double precision .)
    where           reduce using rule 254 (TIPO -> double precision .)
    group           reduce using rule 254 (TIPO -> double precision .)
    having          reduce using rule 254 (TIPO -> double precision .)
    union           reduce using rule 254 (TIPO -> double precision .)
    intersect       reduce using rule 254 (TIPO -> double precision .)
    except          reduce using rule 254 (TIPO -> double precision .)
    order           reduce using rule 254 (TIPO -> double precision .)
    limit           reduce using rule 254 (TIPO -> double precision .)
    offset          reduce using rule 254 (TIPO -> double precision .)
    ptcoma          reduce using rule 254 (TIPO -> double precision .)
    mas             reduce using rule 254 (TIPO -> double precision .)
    menos           reduce using rule 254 (TIPO -> double precision .)
    multiplicacion  reduce using rule 254 (TIPO -> double precision .)
    division        reduce using rule 254 (TIPO -> double precision .)
    modulo          reduce using rule 254 (TIPO -> double precision .)
    elevado         reduce using rule 254 (TIPO -> double precision .)
    and             reduce using rule 254 (TIPO -> double precision .)
    or              reduce using rule 254 (TIPO -> double precision .)
    mayor           reduce using rule 254 (TIPO -> double precision .)
    menor           reduce using rule 254 (TIPO -> double precision .)
    mayor_igual     reduce using rule 254 (TIPO -> double precision .)
    menor_igual     reduce using rule 254 (TIPO -> double precision .)
    igual           reduce using rule 254 (TIPO -> double precision .)
    diferente1      reduce using rule 254 (TIPO -> double precision .)
    diferente2      reduce using rule 254 (TIPO -> double precision .)
    between         reduce using rule 254 (TIPO -> double precision .)
    is              reduce using rule 254 (TIPO -> double precision .)
    isnull          reduce using rule 254 (TIPO -> double precision .)
    notnull         reduce using rule 254 (TIPO -> double precision .)
    as              reduce using rule 254 (TIPO -> double precision .)
    cadenaString    reduce using rule 254 (TIPO -> double precision .)
    id              reduce using rule 254 (TIPO -> double precision .)
    cadena          reduce using rule 254 (TIPO -> double precision .)
    in              reduce using rule 254 (TIPO -> double precision .)
    not             reduce using rule 254 (TIPO -> double precision .)
    like            reduce using rule 254 (TIPO -> double precision .)
    then            reduce using rule 254 (TIPO -> double precision .)
    when            reduce using rule 254 (TIPO -> double precision .)
    parc            reduce using rule 254 (TIPO -> double precision .)
    end             reduce using rule 254 (TIPO -> double precision .)
    else            reduce using rule 254 (TIPO -> double precision .)
    constraint      reduce using rule 254 (TIPO -> double precision .)
    unique          reduce using rule 254 (TIPO -> double precision .)
    check           reduce using rule 254 (TIPO -> double precision .)
    default         reduce using rule 254 (TIPO -> double precision .)
    null            reduce using rule 254 (TIPO -> double precision .)
    primary         reduce using rule 254 (TIPO -> double precision .)
    references      reduce using rule 254 (TIPO -> double precision .)
    asc             reduce using rule 254 (TIPO -> double precision .)
    desc            reduce using rule 254 (TIPO -> double precision .)
    dospuntos       reduce using rule 254 (TIPO -> double precision .)
    language        reduce using rule 254 (TIPO -> double precision .)
    do              reduce using rule 254 (TIPO -> double precision .)
    declare         reduce using rule 254 (TIPO -> double precision .)
    if              reduce using rule 254 (TIPO -> double precision .)
    raise           reduce using rule 254 (TIPO -> double precision .)
    begin           reduce using rule 254 (TIPO -> double precision .)
    execute         reduce using rule 254 (TIPO -> double precision .)
    return          reduce using rule 254 (TIPO -> double precision .)
    insert          reduce using rule 254 (TIPO -> double precision .)
    select          reduce using rule 254 (TIPO -> double precision .)
    update          reduce using rule 254 (TIPO -> double precision .)
    delete          reduce using rule 254 (TIPO -> double precision .)


state 353

    (324) EXP -> any para LEXP parc .

    r_from          reduce using rule 324 (EXP -> any para LEXP parc .)
    coma            reduce using rule 324 (EXP -> any para LEXP parc .)
    where           reduce using rule 324 (EXP -> any para LEXP parc .)
    group           reduce using rule 324 (EXP -> any para LEXP parc .)
    having          reduce using rule 324 (EXP -> any para LEXP parc .)
    union           reduce using rule 324 (EXP -> any para LEXP parc .)
    intersect       reduce using rule 324 (EXP -> any para LEXP parc .)
    except          reduce using rule 324 (EXP -> any para LEXP parc .)
    order           reduce using rule 324 (EXP -> any para LEXP parc .)
    limit           reduce using rule 324 (EXP -> any para LEXP parc .)
    offset          reduce using rule 324 (EXP -> any para LEXP parc .)
    ptcoma          reduce using rule 324 (EXP -> any para LEXP parc .)
    mas             reduce using rule 324 (EXP -> any para LEXP parc .)
    menos           reduce using rule 324 (EXP -> any para LEXP parc .)
    multiplicacion  reduce using rule 324 (EXP -> any para LEXP parc .)
    division        reduce using rule 324 (EXP -> any para LEXP parc .)
    modulo          reduce using rule 324 (EXP -> any para LEXP parc .)
    elevado         reduce using rule 324 (EXP -> any para LEXP parc .)
    and             reduce using rule 324 (EXP -> any para LEXP parc .)
    or              reduce using rule 324 (EXP -> any para LEXP parc .)
    mayor           reduce using rule 324 (EXP -> any para LEXP parc .)
    menor           reduce using rule 324 (EXP -> any para LEXP parc .)
    mayor_igual     reduce using rule 324 (EXP -> any para LEXP parc .)
    menor_igual     reduce using rule 324 (EXP -> any para LEXP parc .)
    igual           reduce using rule 324 (EXP -> any para LEXP parc .)
    diferente1      reduce using rule 324 (EXP -> any para LEXP parc .)
    diferente2      reduce using rule 324 (EXP -> any para LEXP parc .)
    between         reduce using rule 324 (EXP -> any para LEXP parc .)
    is              reduce using rule 324 (EXP -> any para LEXP parc .)
    isnull          reduce using rule 324 (EXP -> any para LEXP parc .)
    notnull         reduce using rule 324 (EXP -> any para LEXP parc .)
    as              reduce using rule 324 (EXP -> any para LEXP parc .)
    cadenaString    reduce using rule 324 (EXP -> any para LEXP parc .)
    id              reduce using rule 324 (EXP -> any para LEXP parc .)
    cadena          reduce using rule 324 (EXP -> any para LEXP parc .)
    in              reduce using rule 324 (EXP -> any para LEXP parc .)
    not             reduce using rule 324 (EXP -> any para LEXP parc .)
    like            reduce using rule 324 (EXP -> any para LEXP parc .)
    then            reduce using rule 324 (EXP -> any para LEXP parc .)
    when            reduce using rule 324 (EXP -> any para LEXP parc .)
    parc            reduce using rule 324 (EXP -> any para LEXP parc .)
    end             reduce using rule 324 (EXP -> any para LEXP parc .)
    else            reduce using rule 324 (EXP -> any para LEXP parc .)
    constraint      reduce using rule 324 (EXP -> any para LEXP parc .)
    unique          reduce using rule 324 (EXP -> any para LEXP parc .)
    check           reduce using rule 324 (EXP -> any para LEXP parc .)
    default         reduce using rule 324 (EXP -> any para LEXP parc .)
    null            reduce using rule 324 (EXP -> any para LEXP parc .)
    primary         reduce using rule 324 (EXP -> any para LEXP parc .)
    references      reduce using rule 324 (EXP -> any para LEXP parc .)
    asc             reduce using rule 324 (EXP -> any para LEXP parc .)
    desc            reduce using rule 324 (EXP -> any para LEXP parc .)


state 354

    (325) EXP -> all para LEXP parc .

    r_from          reduce using rule 325 (EXP -> all para LEXP parc .)
    coma            reduce using rule 325 (EXP -> all para LEXP parc .)
    where           reduce using rule 325 (EXP -> all para LEXP parc .)
    group           reduce using rule 325 (EXP -> all para LEXP parc .)
    having          reduce using rule 325 (EXP -> all para LEXP parc .)
    union           reduce using rule 325 (EXP -> all para LEXP parc .)
    intersect       reduce using rule 325 (EXP -> all para LEXP parc .)
    except          reduce using rule 325 (EXP -> all para LEXP parc .)
    order           reduce using rule 325 (EXP -> all para LEXP parc .)
    limit           reduce using rule 325 (EXP -> all para LEXP parc .)
    offset          reduce using rule 325 (EXP -> all para LEXP parc .)
    ptcoma          reduce using rule 325 (EXP -> all para LEXP parc .)
    mas             reduce using rule 325 (EXP -> all para LEXP parc .)
    menos           reduce using rule 325 (EXP -> all para LEXP parc .)
    multiplicacion  reduce using rule 325 (EXP -> all para LEXP parc .)
    division        reduce using rule 325 (EXP -> all para LEXP parc .)
    modulo          reduce using rule 325 (EXP -> all para LEXP parc .)
    elevado         reduce using rule 325 (EXP -> all para LEXP parc .)
    and             reduce using rule 325 (EXP -> all para LEXP parc .)
    or              reduce using rule 325 (EXP -> all para LEXP parc .)
    mayor           reduce using rule 325 (EXP -> all para LEXP parc .)
    menor           reduce using rule 325 (EXP -> all para LEXP parc .)
    mayor_igual     reduce using rule 325 (EXP -> all para LEXP parc .)
    menor_igual     reduce using rule 325 (EXP -> all para LEXP parc .)
    igual           reduce using rule 325 (EXP -> all para LEXP parc .)
    diferente1      reduce using rule 325 (EXP -> all para LEXP parc .)
    diferente2      reduce using rule 325 (EXP -> all para LEXP parc .)
    between         reduce using rule 325 (EXP -> all para LEXP parc .)
    is              reduce using rule 325 (EXP -> all para LEXP parc .)
    isnull          reduce using rule 325 (EXP -> all para LEXP parc .)
    notnull         reduce using rule 325 (EXP -> all para LEXP parc .)
    as              reduce using rule 325 (EXP -> all para LEXP parc .)
    cadenaString    reduce using rule 325 (EXP -> all para LEXP parc .)
    id              reduce using rule 325 (EXP -> all para LEXP parc .)
    cadena          reduce using rule 325 (EXP -> all para LEXP parc .)
    in              reduce using rule 325 (EXP -> all para LEXP parc .)
    not             reduce using rule 325 (EXP -> all para LEXP parc .)
    like            reduce using rule 325 (EXP -> all para LEXP parc .)
    then            reduce using rule 325 (EXP -> all para LEXP parc .)
    when            reduce using rule 325 (EXP -> all para LEXP parc .)
    parc            reduce using rule 325 (EXP -> all para LEXP parc .)
    end             reduce using rule 325 (EXP -> all para LEXP parc .)
    else            reduce using rule 325 (EXP -> all para LEXP parc .)
    constraint      reduce using rule 325 (EXP -> all para LEXP parc .)
    unique          reduce using rule 325 (EXP -> all para LEXP parc .)
    check           reduce using rule 325 (EXP -> all para LEXP parc .)
    default         reduce using rule 325 (EXP -> all para LEXP parc .)
    null            reduce using rule 325 (EXP -> all para LEXP parc .)
    primary         reduce using rule 325 (EXP -> all para LEXP parc .)
    references      reduce using rule 325 (EXP -> all para LEXP parc .)
    asc             reduce using rule 325 (EXP -> all para LEXP parc .)
    desc            reduce using rule 325 (EXP -> all para LEXP parc .)


state 355

    (326) EXP -> some para LEXP parc .

    r_from          reduce using rule 326 (EXP -> some para LEXP parc .)
    coma            reduce using rule 326 (EXP -> some para LEXP parc .)
    where           reduce using rule 326 (EXP -> some para LEXP parc .)
    group           reduce using rule 326 (EXP -> some para LEXP parc .)
    having          reduce using rule 326 (EXP -> some para LEXP parc .)
    union           reduce using rule 326 (EXP -> some para LEXP parc .)
    intersect       reduce using rule 326 (EXP -> some para LEXP parc .)
    except          reduce using rule 326 (EXP -> some para LEXP parc .)
    order           reduce using rule 326 (EXP -> some para LEXP parc .)
    limit           reduce using rule 326 (EXP -> some para LEXP parc .)
    offset          reduce using rule 326 (EXP -> some para LEXP parc .)
    ptcoma          reduce using rule 326 (EXP -> some para LEXP parc .)
    mas             reduce using rule 326 (EXP -> some para LEXP parc .)
    menos           reduce using rule 326 (EXP -> some para LEXP parc .)
    multiplicacion  reduce using rule 326 (EXP -> some para LEXP parc .)
    division        reduce using rule 326 (EXP -> some para LEXP parc .)
    modulo          reduce using rule 326 (EXP -> some para LEXP parc .)
    elevado         reduce using rule 326 (EXP -> some para LEXP parc .)
    and             reduce using rule 326 (EXP -> some para LEXP parc .)
    or              reduce using rule 326 (EXP -> some para LEXP parc .)
    mayor           reduce using rule 326 (EXP -> some para LEXP parc .)
    menor           reduce using rule 326 (EXP -> some para LEXP parc .)
    mayor_igual     reduce using rule 326 (EXP -> some para LEXP parc .)
    menor_igual     reduce using rule 326 (EXP -> some para LEXP parc .)
    igual           reduce using rule 326 (EXP -> some para LEXP parc .)
    diferente1      reduce using rule 326 (EXP -> some para LEXP parc .)
    diferente2      reduce using rule 326 (EXP -> some para LEXP parc .)
    between         reduce using rule 326 (EXP -> some para LEXP parc .)
    is              reduce using rule 326 (EXP -> some para LEXP parc .)
    isnull          reduce using rule 326 (EXP -> some para LEXP parc .)
    notnull         reduce using rule 326 (EXP -> some para LEXP parc .)
    as              reduce using rule 326 (EXP -> some para LEXP parc .)
    cadenaString    reduce using rule 326 (EXP -> some para LEXP parc .)
    id              reduce using rule 326 (EXP -> some para LEXP parc .)
    cadena          reduce using rule 326 (EXP -> some para LEXP parc .)
    in              reduce using rule 326 (EXP -> some para LEXP parc .)
    not             reduce using rule 326 (EXP -> some para LEXP parc .)
    like            reduce using rule 326 (EXP -> some para LEXP parc .)
    then            reduce using rule 326 (EXP -> some para LEXP parc .)
    when            reduce using rule 326 (EXP -> some para LEXP parc .)
    parc            reduce using rule 326 (EXP -> some para LEXP parc .)
    end             reduce using rule 326 (EXP -> some para LEXP parc .)
    else            reduce using rule 326 (EXP -> some para LEXP parc .)
    constraint      reduce using rule 326 (EXP -> some para LEXP parc .)
    unique          reduce using rule 326 (EXP -> some para LEXP parc .)
    check           reduce using rule 326 (EXP -> some para LEXP parc .)
    default         reduce using rule 326 (EXP -> some para LEXP parc .)
    null            reduce using rule 326 (EXP -> some para LEXP parc .)
    primary         reduce using rule 326 (EXP -> some para LEXP parc .)
    references      reduce using rule 326 (EXP -> some para LEXP parc .)
    asc             reduce using rule 326 (EXP -> some para LEXP parc .)
    desc            reduce using rule 326 (EXP -> some para LEXP parc .)


state 356

    (327) EXP -> extract para FIELDS r_from . timestamp cadena parc

    timestamp       shift and go to state 467


state 357

    (166) COLDEF -> id . TIPO
    (167) COLDEF -> id . TIPO LOPCOLUMN
    (228) TIPO -> . interval cadena
    (229) TIPO -> . decimal para int coma int parc
    (230) TIPO -> . decimal para int parc
    (231) TIPO -> . decimal
    (232) TIPO -> . numeric para int coma int parc
    (233) TIPO -> . numeric para int parc
    (234) TIPO -> . numeric
    (235) TIPO -> . varchar para int parc
    (236) TIPO -> . timestamp para int parc
    (237) TIPO -> . character para int parc
    (238) TIPO -> . interval para int parc
    (239) TIPO -> . char para int parc
    (240) TIPO -> . time para int parc
    (241) TIPO -> . character varying para int parc
    (242) TIPO -> . id modulo rowtype
    (243) TIPO -> . idPunto modulo type
    (244) TIPO -> . timestamp para int parc without time zone
    (245) TIPO -> . timestamp para int parc with time zone
    (246) TIPO -> . time para int parc without time zone
    (247) TIPO -> . time para int parc with time zone
    (248) TIPO -> . interval para int parc cadena
    (249) TIPO -> . smallint
    (250) TIPO -> . integer
    (251) TIPO -> . r_int
    (252) TIPO -> . bigint
    (253) TIPO -> . real
    (254) TIPO -> . double precision
    (255) TIPO -> . money
    (256) TIPO -> . text
    (257) TIPO -> . timestamp
    (258) TIPO -> . date
    (259) TIPO -> . time
    (260) TIPO -> . interval
    (261) TIPO -> . boolean
    (262) TIPO -> . record
    (263) TIPO -> . varchar
    (264) TIPO -> . timestamp without time zone
    (265) TIPO -> . timestamp with time zone
    (266) TIPO -> . time without time zone
    (267) TIPO -> . time with time zone
    (268) TIPO -> . id

    interval        shift and go to state 231
    decimal         shift and go to state 232
    numeric         shift and go to state 233
    varchar         shift and go to state 234
    timestamp       shift and go to state 235
    character       shift and go to state 236
    char            shift and go to state 237
    time            shift and go to state 238
    id              shift and go to state 239
    idPunto         shift and go to state 240
    smallint        shift and go to state 241
    integer         shift and go to state 242
    r_int           shift and go to state 243
    bigint          shift and go to state 244
    real            shift and go to state 245
    double          shift and go to state 246
    money           shift and go to state 247
    text            shift and go to state 248
    date            shift and go to state 249
    boolean         shift and go to state 250
    record          shift and go to state 251

    TIPO                           shift and go to state 468

state 358

    (160) CREATETABLE -> create table id para LDEF . parc ptcoma
    (161) CREATETABLE -> create table id para LDEF . parc HERENCIA ptcoma
    (162) LDEF -> LDEF . coma COLDEF

    parc            shift and go to state 469
    coma            shift and go to state 470


state 359

    (163) LDEF -> COLDEF .

    parc            reduce using rule 163 (LDEF -> COLDEF .)
    coma            reduce using rule 163 (LDEF -> COLDEF .)


state 360

    (164) COLDEF -> OPCONST .

    parc            reduce using rule 164 (COLDEF -> OPCONST .)
    coma            reduce using rule 164 (COLDEF -> OPCONST .)


state 361

    (165) COLDEF -> constraint . id OPCONST

    id              shift and go to state 471


state 362

    (179) OPCONST -> primary . key para LEXP parc

    key             shift and go to state 472


state 363

    (180) OPCONST -> foreign . key para LEXP parc references id para LEXP parc

    key             shift and go to state 473


state 364

    (181) OPCONST -> unique . para LEXP parc

    para            shift and go to state 474


state 365

    (182) OPCONST -> check . para CONDCHECK parc

    para            shift and go to state 475


state 366

    (191) CREATETYPE -> create type id as enum . para LEXP parc

    para            shift and go to state 476


state 367

    (143) CREATEDB -> create RD if not exist . id
    (144) CREATEDB -> create RD if not exist . id OPCCDB

    id              shift and go to state 477


state 368

    (149) OPCCDB -> PROPIETARIO MODO .

    ptcoma          reduce using rule 149 (OPCCDB -> PROPIETARIO MODO .)


state 369

    (152) PROPIETARIO -> owner igual . id
    (153) PROPIETARIO -> owner igual . cadena
    (154) PROPIETARIO -> owner igual . cadenaString

    id              shift and go to state 478
    cadena          shift and go to state 479
    cadenaString    shift and go to state 480


state 370

    (155) PROPIETARIO -> owner id .

    mode            reduce using rule 155 (PROPIETARIO -> owner id .)
    ptcoma          reduce using rule 155 (PROPIETARIO -> owner id .)


state 371

    (156) PROPIETARIO -> owner cadena .

    mode            reduce using rule 156 (PROPIETARIO -> owner cadena .)
    ptcoma          reduce using rule 156 (PROPIETARIO -> owner cadena .)


state 372

    (157) PROPIETARIO -> owner cadenaString .

    mode            reduce using rule 157 (PROPIETARIO -> owner cadenaString .)
    ptcoma          reduce using rule 157 (PROPIETARIO -> owner cadenaString .)


state 373

    (158) MODO -> mode igual . int

    int             shift and go to state 481


state 374

    (159) MODO -> mode int .

    ptcoma          reduce using rule 159 (MODO -> mode int .)


state 375

    (47) CREATEINDEX -> create index id on id . para LEXP parc
    (49) CREATEINDEX -> create index id on id . using hash para LEXP parc
    (50) CREATEINDEX -> create index id on id . para id ORDEN parc
    (51) CREATEINDEX -> create index id on id . para id id ORDEN parc
    (52) CREATEINDEX -> create index id on id . para id id parc

    para            shift and go to state 482
    using           shift and go to state 483


state 376

    (48) CREATEINDEX -> create unique index id on . id para LEXP parc

    id              shift and go to state 484


state 377

    (43) LPARAM -> id . TIPO
    (228) TIPO -> . interval cadena
    (229) TIPO -> . decimal para int coma int parc
    (230) TIPO -> . decimal para int parc
    (231) TIPO -> . decimal
    (232) TIPO -> . numeric para int coma int parc
    (233) TIPO -> . numeric para int parc
    (234) TIPO -> . numeric
    (235) TIPO -> . varchar para int parc
    (236) TIPO -> . timestamp para int parc
    (237) TIPO -> . character para int parc
    (238) TIPO -> . interval para int parc
    (239) TIPO -> . char para int parc
    (240) TIPO -> . time para int parc
    (241) TIPO -> . character varying para int parc
    (242) TIPO -> . id modulo rowtype
    (243) TIPO -> . idPunto modulo type
    (244) TIPO -> . timestamp para int parc without time zone
    (245) TIPO -> . timestamp para int parc with time zone
    (246) TIPO -> . time para int parc without time zone
    (247) TIPO -> . time para int parc with time zone
    (248) TIPO -> . interval para int parc cadena
    (249) TIPO -> . smallint
    (250) TIPO -> . integer
    (251) TIPO -> . r_int
    (252) TIPO -> . bigint
    (253) TIPO -> . real
    (254) TIPO -> . double precision
    (255) TIPO -> . money
    (256) TIPO -> . text
    (257) TIPO -> . timestamp
    (258) TIPO -> . date
    (259) TIPO -> . time
    (260) TIPO -> . interval
    (261) TIPO -> . boolean
    (262) TIPO -> . record
    (263) TIPO -> . varchar
    (264) TIPO -> . timestamp without time zone
    (265) TIPO -> . timestamp with time zone
    (266) TIPO -> . time without time zone
    (267) TIPO -> . time with time zone
    (268) TIPO -> . id

    interval        shift and go to state 231
    decimal         shift and go to state 232
    numeric         shift and go to state 233
    varchar         shift and go to state 234
    timestamp       shift and go to state 235
    character       shift and go to state 236
    char            shift and go to state 237
    time            shift and go to state 238
    id              shift and go to state 239
    idPunto         shift and go to state 240
    smallint        shift and go to state 241
    integer         shift and go to state 242
    r_int           shift and go to state 243
    bigint          shift and go to state 244
    real            shift and go to state 245
    double          shift and go to state 246
    money           shift and go to state 247
    text            shift and go to state 248
    date            shift and go to state 249
    boolean         shift and go to state 250
    record          shift and go to state 251

    TIPO                           shift and go to state 485

state 378

    (31) PROCEDIMIENTOS -> create procedure id para LPARAM . parc LENGUAJE LCONTENIDOP
    (33) PROCEDIMIENTOS -> create procedure id para LPARAM . parc LCONTENIDOP LENGUAJE
    (40) LPARAM -> LPARAM . coma inout id TIPO
    (41) LPARAM -> LPARAM . coma id TIPO

    parc            shift and go to state 486
    coma            shift and go to state 487


state 379

    (32) PROCEDIMIENTOS -> create procedure id para parc . LENGUAJE LCONTENIDOP
    (34) PROCEDIMIENTOS -> create procedure id para parc . LCONTENIDOP LENGUAJE
    (44) LENGUAJE -> . language plpgsql
    (45) LENGUAJE -> . language plpgsql ptcoma
    (35) LCONTENIDOP -> . LCONTENIDOP CONTENIDOP
    (36) LCONTENIDOP -> . CONTENIDOP
    (37) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (38) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn
    (39) CONTENIDOP -> . LISTACONTENIDO
    (84) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (85) LISTACONTENIDO -> . CONTENIDO
    (86) CONTENIDO -> . ASIGNACION ptcoma
    (87) CONTENIDO -> . CONDICIONIF ptcoma
    (88) CONTENIDO -> . RAISE ptcoma
    (89) CONTENIDO -> . BEGINEND ptcoma
    (90) CONTENIDO -> . CALLPROCEDURE ptcoma
    (91) CONTENIDO -> . declare LDEC
    (92) CONTENIDO -> . RETURN ptcoma
    (93) CONTENIDO -> . INSERT ptcoma
    (94) CONTENIDO -> . SELECT ptcoma
    (95) CONTENIDO -> . UPDATE ptcoma
    (96) CONTENIDO -> . DELETE ptcoma
    (71) ASIGNACION -> . id dospuntos igual EXP
    (72) ASIGNACION -> . id igual EXP
    (73) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (97) RAISE -> . raise LEVEL FORMAT
    (98) RAISE -> . raise LEVEL EXP
    (99) RAISE -> . raise LEVEL
    (100) RAISE -> . raise
    (101) RAISE -> . raise LEVEL cadena coma id
    (46) BEGINEND -> . begin LISTACONTENIDO end
    (30) CALLPROCEDURE -> . execute id para parc
    (24) RETURN -> . return EXP
    (114) INSERT -> . insert into id values para LEXP parc
    (115) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (220) UPDATE -> . update id set LCAMPOS WHERE
    (223) DELETE -> . delete r_from id WHERE

    language        shift and go to state 490
    as              shift and go to state 492
    do              shift and go to state 494
    declare         shift and go to state 296
    id              shift and go to state 17
    if              shift and go to state 30
    raise           shift and go to state 302
    begin           shift and go to state 303
    execute         shift and go to state 34
    return          shift and go to state 304
    insert          shift and go to state 31
    select          shift and go to state 24
    update          shift and go to state 26
    delete          shift and go to state 27

    LENGUAJE                       shift and go to state 488
    LCONTENIDOP                    shift and go to state 489
    CONTENIDOP                     shift and go to state 491
    LISTACONTENIDO                 shift and go to state 493
    CONTENIDO                      shift and go to state 290
    ASIGNACION                     shift and go to state 291
    CONDICIONIF                    shift and go to state 292
    RAISE                          shift and go to state 293
    BEGINEND                       shift and go to state 294
    CALLPROCEDURE                  shift and go to state 295
    RETURN                         shift and go to state 297
    INSERT                         shift and go to state 298
    SELECT                         shift and go to state 299
    UPDATE                         shift and go to state 300
    DELETE                         shift and go to state 301

state 380

    (42) LPARAM -> inout . id TIPO

    id              shift and go to state 495


state 381

    (25) FUNCIONES -> create function id para LPARAM . parc RETURNP LENGUAJE LCONTENIDOP
    (27) FUNCIONES -> create function id para LPARAM . parc RETURNP LCONTENIDOP LENGUAJE
    (40) LPARAM -> LPARAM . coma inout id TIPO
    (41) LPARAM -> LPARAM . coma id TIPO

    parc            shift and go to state 496
    coma            shift and go to state 487


state 382

    (26) FUNCIONES -> create function id para parc . RETURNP LENGUAJE LCONTENIDOP
    (28) FUNCIONES -> create function id para parc . RETURNP LCONTENIDOP LENGUAJE
    (29) RETURNP -> . returns TIPO

    returns         shift and go to state 498

    RETURNP                        shift and go to state 497

state 383

    (222) LCAMPOS -> id igual . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 499
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 384

    (220) UPDATE -> update id set LCAMPOS WHERE .

    ptcoma          reduce using rule 220 (UPDATE -> update id set LCAMPOS WHERE .)


state 385

    (221) LCAMPOS -> LCAMPOS coma . id igual EXP

    id              shift and go to state 500


state 386

    (121) ALTER -> alter databases id rename to . id

    id              shift and go to state 501


state 387

    (122) ALTER -> alter databases id owner to . id

    id              shift and go to state 502


state 388

    (133) OP -> alter column . id set not null
    (134) OP -> alter column . id set null
    (139) OP -> alter column . id type TIPO

    id              shift and go to state 503


state 389

    (124) LOP -> LOP coma . OP
    (126) OP -> . add column id TIPO
    (127) OP -> . add check para CONDCHECK parc
    (128) OP -> . add constraint id check para CONDCHECK parc
    (129) OP -> . add constraint id unique para LEXP parc
    (130) OP -> . add unique para LEXP parc
    (131) OP -> . add foreign key para LEXP parc references id para LEXP parc
    (132) OP -> . add constraint id foreign key para LEXP parc references id para LEXP parc
    (133) OP -> . alter column id set not null
    (134) OP -> . alter column id set null
    (135) OP -> . drop constraint id
    (136) OP -> . drop column LEXP
    (137) OP -> . drop check id
    (138) OP -> . rename column id to id
    (139) OP -> . alter column id type TIPO

    add             shift and go to state 284
    alter           shift and go to state 281
    drop            shift and go to state 285
    rename          shift and go to state 286

    OP                             shift and go to state 504

state 390

    (126) OP -> add column . id TIPO

    id              shift and go to state 505


state 391

    (127) OP -> add check . para CONDCHECK parc

    para            shift and go to state 506


state 392

    (128) OP -> add constraint . id check para CONDCHECK parc
    (129) OP -> add constraint . id unique para LEXP parc
    (132) OP -> add constraint . id foreign key para LEXP parc references id para LEXP parc

    id              shift and go to state 507


state 393

    (130) OP -> add unique . para LEXP parc

    para            shift and go to state 508


state 394

    (131) OP -> add foreign . key para LEXP parc references id para LEXP parc

    key             shift and go to state 509


state 395

    (135) OP -> drop constraint . id

    id              shift and go to state 510


state 396

    (136) OP -> drop column . LEXP
    (226) LEXP -> . LEXP coma EXP
    (227) LEXP -> . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 511
    EXP                            shift and go to state 57
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 397

    (137) OP -> drop check . id

    id              shift and go to state 512


state 398

    (138) OP -> rename column . id to id

    id              shift and go to state 513


state 399

    (119) DROP -> drop databases if exist id .

    ptcoma          reduce using rule 119 (DROP -> drop databases if exist id .)


state 400

    (73) CONDICIONIF -> if EXP then LISTACONTENIDO ELSEF . end if

    end             shift and go to state 514


state 401

    (75) CONDICIONIF -> if EXP then LISTACONTENIDO end . if

    if              shift and go to state 515


state 402

    (74) CONDICIONIF -> if EXP then LISTACONTENIDO LELIF . end if
    (76) CONDICIONIF -> if EXP then LISTACONTENIDO LELIF . ELSEF end if
    (77) LELIF -> LELIF . elsif EXP then LISTACONTENIDO
    (79) ELSEF -> . else LISTACONTENIDO

    end             shift and go to state 516
    elsif           shift and go to state 518
    else            shift and go to state 309

    ELSEF                          shift and go to state 517

state 403

    (84) LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .

    end             reduce using rule 84 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    else            reduce using rule 84 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    elsif           reduce using rule 84 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    declare         reduce using rule 84 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    id              reduce using rule 84 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    if              reduce using rule 84 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    raise           reduce using rule 84 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    begin           reduce using rule 84 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    execute         reduce using rule 84 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    return          reduce using rule 84 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    insert          reduce using rule 84 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    select          reduce using rule 84 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    update          reduce using rule 84 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    delete          reduce using rule 84 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    when            reduce using rule 84 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    language        reduce using rule 84 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    as              reduce using rule 84 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    do              reduce using rule 84 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    use             reduce using rule 84 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    create          reduce using rule 84 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    alter           reduce using rule 84 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    drop            reduce using rule 84 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    case            reduce using rule 84 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    show            reduce using rule 84 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    $end            reduce using rule 84 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    dolarn          reduce using rule 84 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)


state 404

    (78) LELIF -> elsif . EXP then LISTACONTENIDO
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 519
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 405

    (86) CONTENIDO -> ASIGNACION ptcoma .

    end             reduce using rule 86 (CONTENIDO -> ASIGNACION ptcoma .)
    else            reduce using rule 86 (CONTENIDO -> ASIGNACION ptcoma .)
    elsif           reduce using rule 86 (CONTENIDO -> ASIGNACION ptcoma .)
    declare         reduce using rule 86 (CONTENIDO -> ASIGNACION ptcoma .)
    id              reduce using rule 86 (CONTENIDO -> ASIGNACION ptcoma .)
    if              reduce using rule 86 (CONTENIDO -> ASIGNACION ptcoma .)
    raise           reduce using rule 86 (CONTENIDO -> ASIGNACION ptcoma .)
    begin           reduce using rule 86 (CONTENIDO -> ASIGNACION ptcoma .)
    execute         reduce using rule 86 (CONTENIDO -> ASIGNACION ptcoma .)
    return          reduce using rule 86 (CONTENIDO -> ASIGNACION ptcoma .)
    insert          reduce using rule 86 (CONTENIDO -> ASIGNACION ptcoma .)
    select          reduce using rule 86 (CONTENIDO -> ASIGNACION ptcoma .)
    update          reduce using rule 86 (CONTENIDO -> ASIGNACION ptcoma .)
    delete          reduce using rule 86 (CONTENIDO -> ASIGNACION ptcoma .)
    when            reduce using rule 86 (CONTENIDO -> ASIGNACION ptcoma .)
    language        reduce using rule 86 (CONTENIDO -> ASIGNACION ptcoma .)
    as              reduce using rule 86 (CONTENIDO -> ASIGNACION ptcoma .)
    do              reduce using rule 86 (CONTENIDO -> ASIGNACION ptcoma .)
    use             reduce using rule 86 (CONTENIDO -> ASIGNACION ptcoma .)
    create          reduce using rule 86 (CONTENIDO -> ASIGNACION ptcoma .)
    alter           reduce using rule 86 (CONTENIDO -> ASIGNACION ptcoma .)
    drop            reduce using rule 86 (CONTENIDO -> ASIGNACION ptcoma .)
    case            reduce using rule 86 (CONTENIDO -> ASIGNACION ptcoma .)
    show            reduce using rule 86 (CONTENIDO -> ASIGNACION ptcoma .)
    $end            reduce using rule 86 (CONTENIDO -> ASIGNACION ptcoma .)
    dolarn          reduce using rule 86 (CONTENIDO -> ASIGNACION ptcoma .)


state 406

    (87) CONTENIDO -> CONDICIONIF ptcoma .

    end             reduce using rule 87 (CONTENIDO -> CONDICIONIF ptcoma .)
    else            reduce using rule 87 (CONTENIDO -> CONDICIONIF ptcoma .)
    elsif           reduce using rule 87 (CONTENIDO -> CONDICIONIF ptcoma .)
    declare         reduce using rule 87 (CONTENIDO -> CONDICIONIF ptcoma .)
    id              reduce using rule 87 (CONTENIDO -> CONDICIONIF ptcoma .)
    if              reduce using rule 87 (CONTENIDO -> CONDICIONIF ptcoma .)
    raise           reduce using rule 87 (CONTENIDO -> CONDICIONIF ptcoma .)
    begin           reduce using rule 87 (CONTENIDO -> CONDICIONIF ptcoma .)
    execute         reduce using rule 87 (CONTENIDO -> CONDICIONIF ptcoma .)
    return          reduce using rule 87 (CONTENIDO -> CONDICIONIF ptcoma .)
    insert          reduce using rule 87 (CONTENIDO -> CONDICIONIF ptcoma .)
    select          reduce using rule 87 (CONTENIDO -> CONDICIONIF ptcoma .)
    update          reduce using rule 87 (CONTENIDO -> CONDICIONIF ptcoma .)
    delete          reduce using rule 87 (CONTENIDO -> CONDICIONIF ptcoma .)
    when            reduce using rule 87 (CONTENIDO -> CONDICIONIF ptcoma .)
    language        reduce using rule 87 (CONTENIDO -> CONDICIONIF ptcoma .)
    as              reduce using rule 87 (CONTENIDO -> CONDICIONIF ptcoma .)
    do              reduce using rule 87 (CONTENIDO -> CONDICIONIF ptcoma .)
    use             reduce using rule 87 (CONTENIDO -> CONDICIONIF ptcoma .)
    create          reduce using rule 87 (CONTENIDO -> CONDICIONIF ptcoma .)
    alter           reduce using rule 87 (CONTENIDO -> CONDICIONIF ptcoma .)
    drop            reduce using rule 87 (CONTENIDO -> CONDICIONIF ptcoma .)
    case            reduce using rule 87 (CONTENIDO -> CONDICIONIF ptcoma .)
    show            reduce using rule 87 (CONTENIDO -> CONDICIONIF ptcoma .)
    $end            reduce using rule 87 (CONTENIDO -> CONDICIONIF ptcoma .)
    dolarn          reduce using rule 87 (CONTENIDO -> CONDICIONIF ptcoma .)


state 407

    (88) CONTENIDO -> RAISE ptcoma .

    end             reduce using rule 88 (CONTENIDO -> RAISE ptcoma .)
    else            reduce using rule 88 (CONTENIDO -> RAISE ptcoma .)
    elsif           reduce using rule 88 (CONTENIDO -> RAISE ptcoma .)
    declare         reduce using rule 88 (CONTENIDO -> RAISE ptcoma .)
    id              reduce using rule 88 (CONTENIDO -> RAISE ptcoma .)
    if              reduce using rule 88 (CONTENIDO -> RAISE ptcoma .)
    raise           reduce using rule 88 (CONTENIDO -> RAISE ptcoma .)
    begin           reduce using rule 88 (CONTENIDO -> RAISE ptcoma .)
    execute         reduce using rule 88 (CONTENIDO -> RAISE ptcoma .)
    return          reduce using rule 88 (CONTENIDO -> RAISE ptcoma .)
    insert          reduce using rule 88 (CONTENIDO -> RAISE ptcoma .)
    select          reduce using rule 88 (CONTENIDO -> RAISE ptcoma .)
    update          reduce using rule 88 (CONTENIDO -> RAISE ptcoma .)
    delete          reduce using rule 88 (CONTENIDO -> RAISE ptcoma .)
    when            reduce using rule 88 (CONTENIDO -> RAISE ptcoma .)
    language        reduce using rule 88 (CONTENIDO -> RAISE ptcoma .)
    as              reduce using rule 88 (CONTENIDO -> RAISE ptcoma .)
    do              reduce using rule 88 (CONTENIDO -> RAISE ptcoma .)
    use             reduce using rule 88 (CONTENIDO -> RAISE ptcoma .)
    create          reduce using rule 88 (CONTENIDO -> RAISE ptcoma .)
    alter           reduce using rule 88 (CONTENIDO -> RAISE ptcoma .)
    drop            reduce using rule 88 (CONTENIDO -> RAISE ptcoma .)
    case            reduce using rule 88 (CONTENIDO -> RAISE ptcoma .)
    show            reduce using rule 88 (CONTENIDO -> RAISE ptcoma .)
    $end            reduce using rule 88 (CONTENIDO -> RAISE ptcoma .)
    dolarn          reduce using rule 88 (CONTENIDO -> RAISE ptcoma .)


state 408

    (89) CONTENIDO -> BEGINEND ptcoma .

    end             reduce using rule 89 (CONTENIDO -> BEGINEND ptcoma .)
    else            reduce using rule 89 (CONTENIDO -> BEGINEND ptcoma .)
    elsif           reduce using rule 89 (CONTENIDO -> BEGINEND ptcoma .)
    declare         reduce using rule 89 (CONTENIDO -> BEGINEND ptcoma .)
    id              reduce using rule 89 (CONTENIDO -> BEGINEND ptcoma .)
    if              reduce using rule 89 (CONTENIDO -> BEGINEND ptcoma .)
    raise           reduce using rule 89 (CONTENIDO -> BEGINEND ptcoma .)
    begin           reduce using rule 89 (CONTENIDO -> BEGINEND ptcoma .)
    execute         reduce using rule 89 (CONTENIDO -> BEGINEND ptcoma .)
    return          reduce using rule 89 (CONTENIDO -> BEGINEND ptcoma .)
    insert          reduce using rule 89 (CONTENIDO -> BEGINEND ptcoma .)
    select          reduce using rule 89 (CONTENIDO -> BEGINEND ptcoma .)
    update          reduce using rule 89 (CONTENIDO -> BEGINEND ptcoma .)
    delete          reduce using rule 89 (CONTENIDO -> BEGINEND ptcoma .)
    when            reduce using rule 89 (CONTENIDO -> BEGINEND ptcoma .)
    language        reduce using rule 89 (CONTENIDO -> BEGINEND ptcoma .)
    as              reduce using rule 89 (CONTENIDO -> BEGINEND ptcoma .)
    do              reduce using rule 89 (CONTENIDO -> BEGINEND ptcoma .)
    use             reduce using rule 89 (CONTENIDO -> BEGINEND ptcoma .)
    create          reduce using rule 89 (CONTENIDO -> BEGINEND ptcoma .)
    alter           reduce using rule 89 (CONTENIDO -> BEGINEND ptcoma .)
    drop            reduce using rule 89 (CONTENIDO -> BEGINEND ptcoma .)
    case            reduce using rule 89 (CONTENIDO -> BEGINEND ptcoma .)
    show            reduce using rule 89 (CONTENIDO -> BEGINEND ptcoma .)
    $end            reduce using rule 89 (CONTENIDO -> BEGINEND ptcoma .)
    dolarn          reduce using rule 89 (CONTENIDO -> BEGINEND ptcoma .)


state 409

    (90) CONTENIDO -> CALLPROCEDURE ptcoma .

    end             reduce using rule 90 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    else            reduce using rule 90 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    elsif           reduce using rule 90 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    declare         reduce using rule 90 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    id              reduce using rule 90 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    if              reduce using rule 90 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    raise           reduce using rule 90 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    begin           reduce using rule 90 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    execute         reduce using rule 90 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    return          reduce using rule 90 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    insert          reduce using rule 90 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    select          reduce using rule 90 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    update          reduce using rule 90 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    delete          reduce using rule 90 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    when            reduce using rule 90 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    language        reduce using rule 90 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    as              reduce using rule 90 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    do              reduce using rule 90 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    use             reduce using rule 90 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    create          reduce using rule 90 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    alter           reduce using rule 90 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    drop            reduce using rule 90 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    case            reduce using rule 90 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    show            reduce using rule 90 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    $end            reduce using rule 90 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    dolarn          reduce using rule 90 (CONTENIDO -> CALLPROCEDURE ptcoma .)


state 410

    (91) CONTENIDO -> declare LDEC .
    (61) LDEC -> LDEC . DECLARACIONES
    (63) DECLARACIONES -> . id TIPO not null ASIG ptcoma
    (64) DECLARACIONES -> . id TIPO ASIG ptcoma
    (65) DECLARACIONES -> . id constant TIPO not null ASIG ptcoma
    (66) DECLARACIONES -> . id constant TIPO ASIG ptcoma

  ! shift/reduce conflict for id resolved as shift
    end             reduce using rule 91 (CONTENIDO -> declare LDEC .)
    else            reduce using rule 91 (CONTENIDO -> declare LDEC .)
    elsif           reduce using rule 91 (CONTENIDO -> declare LDEC .)
    declare         reduce using rule 91 (CONTENIDO -> declare LDEC .)
    if              reduce using rule 91 (CONTENIDO -> declare LDEC .)
    raise           reduce using rule 91 (CONTENIDO -> declare LDEC .)
    begin           reduce using rule 91 (CONTENIDO -> declare LDEC .)
    execute         reduce using rule 91 (CONTENIDO -> declare LDEC .)
    return          reduce using rule 91 (CONTENIDO -> declare LDEC .)
    insert          reduce using rule 91 (CONTENIDO -> declare LDEC .)
    select          reduce using rule 91 (CONTENIDO -> declare LDEC .)
    update          reduce using rule 91 (CONTENIDO -> declare LDEC .)
    delete          reduce using rule 91 (CONTENIDO -> declare LDEC .)
    when            reduce using rule 91 (CONTENIDO -> declare LDEC .)
    language        reduce using rule 91 (CONTENIDO -> declare LDEC .)
    as              reduce using rule 91 (CONTENIDO -> declare LDEC .)
    do              reduce using rule 91 (CONTENIDO -> declare LDEC .)
    use             reduce using rule 91 (CONTENIDO -> declare LDEC .)
    create          reduce using rule 91 (CONTENIDO -> declare LDEC .)
    alter           reduce using rule 91 (CONTENIDO -> declare LDEC .)
    drop            reduce using rule 91 (CONTENIDO -> declare LDEC .)
    case            reduce using rule 91 (CONTENIDO -> declare LDEC .)
    show            reduce using rule 91 (CONTENIDO -> declare LDEC .)
    $end            reduce using rule 91 (CONTENIDO -> declare LDEC .)
    dolarn          reduce using rule 91 (CONTENIDO -> declare LDEC .)
    id              shift and go to state 412

  ! id              [ reduce using rule 91 (CONTENIDO -> declare LDEC .) ]

    DECLARACIONES                  shift and go to state 520

state 411

    (62) LDEC -> DECLARACIONES .

    id              reduce using rule 62 (LDEC -> DECLARACIONES .)
    end             reduce using rule 62 (LDEC -> DECLARACIONES .)
    else            reduce using rule 62 (LDEC -> DECLARACIONES .)
    elsif           reduce using rule 62 (LDEC -> DECLARACIONES .)
    declare         reduce using rule 62 (LDEC -> DECLARACIONES .)
    if              reduce using rule 62 (LDEC -> DECLARACIONES .)
    raise           reduce using rule 62 (LDEC -> DECLARACIONES .)
    begin           reduce using rule 62 (LDEC -> DECLARACIONES .)
    execute         reduce using rule 62 (LDEC -> DECLARACIONES .)
    return          reduce using rule 62 (LDEC -> DECLARACIONES .)
    insert          reduce using rule 62 (LDEC -> DECLARACIONES .)
    select          reduce using rule 62 (LDEC -> DECLARACIONES .)
    update          reduce using rule 62 (LDEC -> DECLARACIONES .)
    delete          reduce using rule 62 (LDEC -> DECLARACIONES .)
    when            reduce using rule 62 (LDEC -> DECLARACIONES .)
    language        reduce using rule 62 (LDEC -> DECLARACIONES .)
    as              reduce using rule 62 (LDEC -> DECLARACIONES .)
    do              reduce using rule 62 (LDEC -> DECLARACIONES .)
    use             reduce using rule 62 (LDEC -> DECLARACIONES .)
    create          reduce using rule 62 (LDEC -> DECLARACIONES .)
    alter           reduce using rule 62 (LDEC -> DECLARACIONES .)
    drop            reduce using rule 62 (LDEC -> DECLARACIONES .)
    case            reduce using rule 62 (LDEC -> DECLARACIONES .)
    show            reduce using rule 62 (LDEC -> DECLARACIONES .)
    $end            reduce using rule 62 (LDEC -> DECLARACIONES .)
    dolarn          reduce using rule 62 (LDEC -> DECLARACIONES .)


state 412

    (63) DECLARACIONES -> id . TIPO not null ASIG ptcoma
    (64) DECLARACIONES -> id . TIPO ASIG ptcoma
    (65) DECLARACIONES -> id . constant TIPO not null ASIG ptcoma
    (66) DECLARACIONES -> id . constant TIPO ASIG ptcoma
    (228) TIPO -> . interval cadena
    (229) TIPO -> . decimal para int coma int parc
    (230) TIPO -> . decimal para int parc
    (231) TIPO -> . decimal
    (232) TIPO -> . numeric para int coma int parc
    (233) TIPO -> . numeric para int parc
    (234) TIPO -> . numeric
    (235) TIPO -> . varchar para int parc
    (236) TIPO -> . timestamp para int parc
    (237) TIPO -> . character para int parc
    (238) TIPO -> . interval para int parc
    (239) TIPO -> . char para int parc
    (240) TIPO -> . time para int parc
    (241) TIPO -> . character varying para int parc
    (242) TIPO -> . id modulo rowtype
    (243) TIPO -> . idPunto modulo type
    (244) TIPO -> . timestamp para int parc without time zone
    (245) TIPO -> . timestamp para int parc with time zone
    (246) TIPO -> . time para int parc without time zone
    (247) TIPO -> . time para int parc with time zone
    (248) TIPO -> . interval para int parc cadena
    (249) TIPO -> . smallint
    (250) TIPO -> . integer
    (251) TIPO -> . r_int
    (252) TIPO -> . bigint
    (253) TIPO -> . real
    (254) TIPO -> . double precision
    (255) TIPO -> . money
    (256) TIPO -> . text
    (257) TIPO -> . timestamp
    (258) TIPO -> . date
    (259) TIPO -> . time
    (260) TIPO -> . interval
    (261) TIPO -> . boolean
    (262) TIPO -> . record
    (263) TIPO -> . varchar
    (264) TIPO -> . timestamp without time zone
    (265) TIPO -> . timestamp with time zone
    (266) TIPO -> . time without time zone
    (267) TIPO -> . time with time zone
    (268) TIPO -> . id

    constant        shift and go to state 522
    interval        shift and go to state 231
    decimal         shift and go to state 232
    numeric         shift and go to state 233
    varchar         shift and go to state 234
    timestamp       shift and go to state 235
    character       shift and go to state 236
    char            shift and go to state 237
    time            shift and go to state 238
    id              shift and go to state 239
    idPunto         shift and go to state 240
    smallint        shift and go to state 241
    integer         shift and go to state 242
    r_int           shift and go to state 243
    bigint          shift and go to state 244
    real            shift and go to state 245
    double          shift and go to state 246
    money           shift and go to state 247
    text            shift and go to state 248
    date            shift and go to state 249
    boolean         shift and go to state 250
    record          shift and go to state 251

    TIPO                           shift and go to state 521

state 413

    (92) CONTENIDO -> RETURN ptcoma .

    end             reduce using rule 92 (CONTENIDO -> RETURN ptcoma .)
    else            reduce using rule 92 (CONTENIDO -> RETURN ptcoma .)
    elsif           reduce using rule 92 (CONTENIDO -> RETURN ptcoma .)
    declare         reduce using rule 92 (CONTENIDO -> RETURN ptcoma .)
    id              reduce using rule 92 (CONTENIDO -> RETURN ptcoma .)
    if              reduce using rule 92 (CONTENIDO -> RETURN ptcoma .)
    raise           reduce using rule 92 (CONTENIDO -> RETURN ptcoma .)
    begin           reduce using rule 92 (CONTENIDO -> RETURN ptcoma .)
    execute         reduce using rule 92 (CONTENIDO -> RETURN ptcoma .)
    return          reduce using rule 92 (CONTENIDO -> RETURN ptcoma .)
    insert          reduce using rule 92 (CONTENIDO -> RETURN ptcoma .)
    select          reduce using rule 92 (CONTENIDO -> RETURN ptcoma .)
    update          reduce using rule 92 (CONTENIDO -> RETURN ptcoma .)
    delete          reduce using rule 92 (CONTENIDO -> RETURN ptcoma .)
    when            reduce using rule 92 (CONTENIDO -> RETURN ptcoma .)
    language        reduce using rule 92 (CONTENIDO -> RETURN ptcoma .)
    as              reduce using rule 92 (CONTENIDO -> RETURN ptcoma .)
    do              reduce using rule 92 (CONTENIDO -> RETURN ptcoma .)
    use             reduce using rule 92 (CONTENIDO -> RETURN ptcoma .)
    create          reduce using rule 92 (CONTENIDO -> RETURN ptcoma .)
    alter           reduce using rule 92 (CONTENIDO -> RETURN ptcoma .)
    drop            reduce using rule 92 (CONTENIDO -> RETURN ptcoma .)
    case            reduce using rule 92 (CONTENIDO -> RETURN ptcoma .)
    show            reduce using rule 92 (CONTENIDO -> RETURN ptcoma .)
    $end            reduce using rule 92 (CONTENIDO -> RETURN ptcoma .)
    dolarn          reduce using rule 92 (CONTENIDO -> RETURN ptcoma .)


state 414

    (93) CONTENIDO -> INSERT ptcoma .

    end             reduce using rule 93 (CONTENIDO -> INSERT ptcoma .)
    else            reduce using rule 93 (CONTENIDO -> INSERT ptcoma .)
    elsif           reduce using rule 93 (CONTENIDO -> INSERT ptcoma .)
    declare         reduce using rule 93 (CONTENIDO -> INSERT ptcoma .)
    id              reduce using rule 93 (CONTENIDO -> INSERT ptcoma .)
    if              reduce using rule 93 (CONTENIDO -> INSERT ptcoma .)
    raise           reduce using rule 93 (CONTENIDO -> INSERT ptcoma .)
    begin           reduce using rule 93 (CONTENIDO -> INSERT ptcoma .)
    execute         reduce using rule 93 (CONTENIDO -> INSERT ptcoma .)
    return          reduce using rule 93 (CONTENIDO -> INSERT ptcoma .)
    insert          reduce using rule 93 (CONTENIDO -> INSERT ptcoma .)
    select          reduce using rule 93 (CONTENIDO -> INSERT ptcoma .)
    update          reduce using rule 93 (CONTENIDO -> INSERT ptcoma .)
    delete          reduce using rule 93 (CONTENIDO -> INSERT ptcoma .)
    when            reduce using rule 93 (CONTENIDO -> INSERT ptcoma .)
    language        reduce using rule 93 (CONTENIDO -> INSERT ptcoma .)
    as              reduce using rule 93 (CONTENIDO -> INSERT ptcoma .)
    do              reduce using rule 93 (CONTENIDO -> INSERT ptcoma .)
    use             reduce using rule 93 (CONTENIDO -> INSERT ptcoma .)
    create          reduce using rule 93 (CONTENIDO -> INSERT ptcoma .)
    alter           reduce using rule 93 (CONTENIDO -> INSERT ptcoma .)
    drop            reduce using rule 93 (CONTENIDO -> INSERT ptcoma .)
    case            reduce using rule 93 (CONTENIDO -> INSERT ptcoma .)
    show            reduce using rule 93 (CONTENIDO -> INSERT ptcoma .)
    $end            reduce using rule 93 (CONTENIDO -> INSERT ptcoma .)
    dolarn          reduce using rule 93 (CONTENIDO -> INSERT ptcoma .)


state 415

    (94) CONTENIDO -> SELECT ptcoma .

    end             reduce using rule 94 (CONTENIDO -> SELECT ptcoma .)
    else            reduce using rule 94 (CONTENIDO -> SELECT ptcoma .)
    elsif           reduce using rule 94 (CONTENIDO -> SELECT ptcoma .)
    declare         reduce using rule 94 (CONTENIDO -> SELECT ptcoma .)
    id              reduce using rule 94 (CONTENIDO -> SELECT ptcoma .)
    if              reduce using rule 94 (CONTENIDO -> SELECT ptcoma .)
    raise           reduce using rule 94 (CONTENIDO -> SELECT ptcoma .)
    begin           reduce using rule 94 (CONTENIDO -> SELECT ptcoma .)
    execute         reduce using rule 94 (CONTENIDO -> SELECT ptcoma .)
    return          reduce using rule 94 (CONTENIDO -> SELECT ptcoma .)
    insert          reduce using rule 94 (CONTENIDO -> SELECT ptcoma .)
    select          reduce using rule 94 (CONTENIDO -> SELECT ptcoma .)
    update          reduce using rule 94 (CONTENIDO -> SELECT ptcoma .)
    delete          reduce using rule 94 (CONTENIDO -> SELECT ptcoma .)
    when            reduce using rule 94 (CONTENIDO -> SELECT ptcoma .)
    language        reduce using rule 94 (CONTENIDO -> SELECT ptcoma .)
    as              reduce using rule 94 (CONTENIDO -> SELECT ptcoma .)
    do              reduce using rule 94 (CONTENIDO -> SELECT ptcoma .)
    use             reduce using rule 94 (CONTENIDO -> SELECT ptcoma .)
    create          reduce using rule 94 (CONTENIDO -> SELECT ptcoma .)
    alter           reduce using rule 94 (CONTENIDO -> SELECT ptcoma .)
    drop            reduce using rule 94 (CONTENIDO -> SELECT ptcoma .)
    case            reduce using rule 94 (CONTENIDO -> SELECT ptcoma .)
    show            reduce using rule 94 (CONTENIDO -> SELECT ptcoma .)
    $end            reduce using rule 94 (CONTENIDO -> SELECT ptcoma .)
    dolarn          reduce using rule 94 (CONTENIDO -> SELECT ptcoma .)


state 416

    (95) CONTENIDO -> UPDATE ptcoma .

    end             reduce using rule 95 (CONTENIDO -> UPDATE ptcoma .)
    else            reduce using rule 95 (CONTENIDO -> UPDATE ptcoma .)
    elsif           reduce using rule 95 (CONTENIDO -> UPDATE ptcoma .)
    declare         reduce using rule 95 (CONTENIDO -> UPDATE ptcoma .)
    id              reduce using rule 95 (CONTENIDO -> UPDATE ptcoma .)
    if              reduce using rule 95 (CONTENIDO -> UPDATE ptcoma .)
    raise           reduce using rule 95 (CONTENIDO -> UPDATE ptcoma .)
    begin           reduce using rule 95 (CONTENIDO -> UPDATE ptcoma .)
    execute         reduce using rule 95 (CONTENIDO -> UPDATE ptcoma .)
    return          reduce using rule 95 (CONTENIDO -> UPDATE ptcoma .)
    insert          reduce using rule 95 (CONTENIDO -> UPDATE ptcoma .)
    select          reduce using rule 95 (CONTENIDO -> UPDATE ptcoma .)
    update          reduce using rule 95 (CONTENIDO -> UPDATE ptcoma .)
    delete          reduce using rule 95 (CONTENIDO -> UPDATE ptcoma .)
    when            reduce using rule 95 (CONTENIDO -> UPDATE ptcoma .)
    language        reduce using rule 95 (CONTENIDO -> UPDATE ptcoma .)
    as              reduce using rule 95 (CONTENIDO -> UPDATE ptcoma .)
    do              reduce using rule 95 (CONTENIDO -> UPDATE ptcoma .)
    use             reduce using rule 95 (CONTENIDO -> UPDATE ptcoma .)
    create          reduce using rule 95 (CONTENIDO -> UPDATE ptcoma .)
    alter           reduce using rule 95 (CONTENIDO -> UPDATE ptcoma .)
    drop            reduce using rule 95 (CONTENIDO -> UPDATE ptcoma .)
    case            reduce using rule 95 (CONTENIDO -> UPDATE ptcoma .)
    show            reduce using rule 95 (CONTENIDO -> UPDATE ptcoma .)
    $end            reduce using rule 95 (CONTENIDO -> UPDATE ptcoma .)
    dolarn          reduce using rule 95 (CONTENIDO -> UPDATE ptcoma .)


state 417

    (96) CONTENIDO -> DELETE ptcoma .

    end             reduce using rule 96 (CONTENIDO -> DELETE ptcoma .)
    else            reduce using rule 96 (CONTENIDO -> DELETE ptcoma .)
    elsif           reduce using rule 96 (CONTENIDO -> DELETE ptcoma .)
    declare         reduce using rule 96 (CONTENIDO -> DELETE ptcoma .)
    id              reduce using rule 96 (CONTENIDO -> DELETE ptcoma .)
    if              reduce using rule 96 (CONTENIDO -> DELETE ptcoma .)
    raise           reduce using rule 96 (CONTENIDO -> DELETE ptcoma .)
    begin           reduce using rule 96 (CONTENIDO -> DELETE ptcoma .)
    execute         reduce using rule 96 (CONTENIDO -> DELETE ptcoma .)
    return          reduce using rule 96 (CONTENIDO -> DELETE ptcoma .)
    insert          reduce using rule 96 (CONTENIDO -> DELETE ptcoma .)
    select          reduce using rule 96 (CONTENIDO -> DELETE ptcoma .)
    update          reduce using rule 96 (CONTENIDO -> DELETE ptcoma .)
    delete          reduce using rule 96 (CONTENIDO -> DELETE ptcoma .)
    when            reduce using rule 96 (CONTENIDO -> DELETE ptcoma .)
    language        reduce using rule 96 (CONTENIDO -> DELETE ptcoma .)
    as              reduce using rule 96 (CONTENIDO -> DELETE ptcoma .)
    do              reduce using rule 96 (CONTENIDO -> DELETE ptcoma .)
    use             reduce using rule 96 (CONTENIDO -> DELETE ptcoma .)
    create          reduce using rule 96 (CONTENIDO -> DELETE ptcoma .)
    alter           reduce using rule 96 (CONTENIDO -> DELETE ptcoma .)
    drop            reduce using rule 96 (CONTENIDO -> DELETE ptcoma .)
    case            reduce using rule 96 (CONTENIDO -> DELETE ptcoma .)
    show            reduce using rule 96 (CONTENIDO -> DELETE ptcoma .)
    $end            reduce using rule 96 (CONTENIDO -> DELETE ptcoma .)
    dolarn          reduce using rule 96 (CONTENIDO -> DELETE ptcoma .)


state 418

    (97) RAISE -> raise LEVEL . FORMAT
    (98) RAISE -> raise LEVEL . EXP
    (99) RAISE -> raise LEVEL .
    (101) RAISE -> raise LEVEL . cadena coma id
    (108) FORMAT -> . format para EXP coma LEXP parc
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    ptcoma          reduce using rule 99 (RAISE -> raise LEVEL .)
    cadena          shift and go to state 525
    format          shift and go to state 526
    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    FORMAT                         shift and go to state 523
    EXP                            shift and go to state 524
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 419

    (102) LEVEL -> info .

    cadena          reduce using rule 102 (LEVEL -> info .)
    format          reduce using rule 102 (LEVEL -> info .)
    mas             reduce using rule 102 (LEVEL -> info .)
    menos           reduce using rule 102 (LEVEL -> info .)
    not             reduce using rule 102 (LEVEL -> info .)
    para            reduce using rule 102 (LEVEL -> info .)
    id              reduce using rule 102 (LEVEL -> info .)
    any             reduce using rule 102 (LEVEL -> info .)
    all             reduce using rule 102 (LEVEL -> info .)
    some            reduce using rule 102 (LEVEL -> info .)
    extract         reduce using rule 102 (LEVEL -> info .)
    int             reduce using rule 102 (LEVEL -> info .)
    decimales       reduce using rule 102 (LEVEL -> info .)
    cadenaString    reduce using rule 102 (LEVEL -> info .)
    true            reduce using rule 102 (LEVEL -> info .)
    false           reduce using rule 102 (LEVEL -> info .)
    multiplicacion  reduce using rule 102 (LEVEL -> info .)
    null            reduce using rule 102 (LEVEL -> info .)
    current_time    reduce using rule 102 (LEVEL -> info .)
    current_date    reduce using rule 102 (LEVEL -> info .)
    timestamp       reduce using rule 102 (LEVEL -> info .)
    interval        reduce using rule 102 (LEVEL -> info .)
    default         reduce using rule 102 (LEVEL -> info .)
    idPunto         reduce using rule 102 (LEVEL -> info .)
    select          reduce using rule 102 (LEVEL -> info .)
    case            reduce using rule 102 (LEVEL -> info .)
    ptcoma          reduce using rule 102 (LEVEL -> info .)


state 420

    (103) LEVEL -> debug .

    cadena          reduce using rule 103 (LEVEL -> debug .)
    format          reduce using rule 103 (LEVEL -> debug .)
    mas             reduce using rule 103 (LEVEL -> debug .)
    menos           reduce using rule 103 (LEVEL -> debug .)
    not             reduce using rule 103 (LEVEL -> debug .)
    para            reduce using rule 103 (LEVEL -> debug .)
    id              reduce using rule 103 (LEVEL -> debug .)
    any             reduce using rule 103 (LEVEL -> debug .)
    all             reduce using rule 103 (LEVEL -> debug .)
    some            reduce using rule 103 (LEVEL -> debug .)
    extract         reduce using rule 103 (LEVEL -> debug .)
    int             reduce using rule 103 (LEVEL -> debug .)
    decimales       reduce using rule 103 (LEVEL -> debug .)
    cadenaString    reduce using rule 103 (LEVEL -> debug .)
    true            reduce using rule 103 (LEVEL -> debug .)
    false           reduce using rule 103 (LEVEL -> debug .)
    multiplicacion  reduce using rule 103 (LEVEL -> debug .)
    null            reduce using rule 103 (LEVEL -> debug .)
    current_time    reduce using rule 103 (LEVEL -> debug .)
    current_date    reduce using rule 103 (LEVEL -> debug .)
    timestamp       reduce using rule 103 (LEVEL -> debug .)
    interval        reduce using rule 103 (LEVEL -> debug .)
    default         reduce using rule 103 (LEVEL -> debug .)
    idPunto         reduce using rule 103 (LEVEL -> debug .)
    select          reduce using rule 103 (LEVEL -> debug .)
    case            reduce using rule 103 (LEVEL -> debug .)
    ptcoma          reduce using rule 103 (LEVEL -> debug .)


state 421

    (104) LEVEL -> log .

    cadena          reduce using rule 104 (LEVEL -> log .)
    format          reduce using rule 104 (LEVEL -> log .)
    mas             reduce using rule 104 (LEVEL -> log .)
    menos           reduce using rule 104 (LEVEL -> log .)
    not             reduce using rule 104 (LEVEL -> log .)
    para            reduce using rule 104 (LEVEL -> log .)
    id              reduce using rule 104 (LEVEL -> log .)
    any             reduce using rule 104 (LEVEL -> log .)
    all             reduce using rule 104 (LEVEL -> log .)
    some            reduce using rule 104 (LEVEL -> log .)
    extract         reduce using rule 104 (LEVEL -> log .)
    int             reduce using rule 104 (LEVEL -> log .)
    decimales       reduce using rule 104 (LEVEL -> log .)
    cadenaString    reduce using rule 104 (LEVEL -> log .)
    true            reduce using rule 104 (LEVEL -> log .)
    false           reduce using rule 104 (LEVEL -> log .)
    multiplicacion  reduce using rule 104 (LEVEL -> log .)
    null            reduce using rule 104 (LEVEL -> log .)
    current_time    reduce using rule 104 (LEVEL -> log .)
    current_date    reduce using rule 104 (LEVEL -> log .)
    timestamp       reduce using rule 104 (LEVEL -> log .)
    interval        reduce using rule 104 (LEVEL -> log .)
    default         reduce using rule 104 (LEVEL -> log .)
    idPunto         reduce using rule 104 (LEVEL -> log .)
    select          reduce using rule 104 (LEVEL -> log .)
    case            reduce using rule 104 (LEVEL -> log .)
    ptcoma          reduce using rule 104 (LEVEL -> log .)


state 422

    (105) LEVEL -> notice .

    cadena          reduce using rule 105 (LEVEL -> notice .)
    format          reduce using rule 105 (LEVEL -> notice .)
    mas             reduce using rule 105 (LEVEL -> notice .)
    menos           reduce using rule 105 (LEVEL -> notice .)
    not             reduce using rule 105 (LEVEL -> notice .)
    para            reduce using rule 105 (LEVEL -> notice .)
    id              reduce using rule 105 (LEVEL -> notice .)
    any             reduce using rule 105 (LEVEL -> notice .)
    all             reduce using rule 105 (LEVEL -> notice .)
    some            reduce using rule 105 (LEVEL -> notice .)
    extract         reduce using rule 105 (LEVEL -> notice .)
    int             reduce using rule 105 (LEVEL -> notice .)
    decimales       reduce using rule 105 (LEVEL -> notice .)
    cadenaString    reduce using rule 105 (LEVEL -> notice .)
    true            reduce using rule 105 (LEVEL -> notice .)
    false           reduce using rule 105 (LEVEL -> notice .)
    multiplicacion  reduce using rule 105 (LEVEL -> notice .)
    null            reduce using rule 105 (LEVEL -> notice .)
    current_time    reduce using rule 105 (LEVEL -> notice .)
    current_date    reduce using rule 105 (LEVEL -> notice .)
    timestamp       reduce using rule 105 (LEVEL -> notice .)
    interval        reduce using rule 105 (LEVEL -> notice .)
    default         reduce using rule 105 (LEVEL -> notice .)
    idPunto         reduce using rule 105 (LEVEL -> notice .)
    select          reduce using rule 105 (LEVEL -> notice .)
    case            reduce using rule 105 (LEVEL -> notice .)
    ptcoma          reduce using rule 105 (LEVEL -> notice .)


state 423

    (106) LEVEL -> warning .

    cadena          reduce using rule 106 (LEVEL -> warning .)
    format          reduce using rule 106 (LEVEL -> warning .)
    mas             reduce using rule 106 (LEVEL -> warning .)
    menos           reduce using rule 106 (LEVEL -> warning .)
    not             reduce using rule 106 (LEVEL -> warning .)
    para            reduce using rule 106 (LEVEL -> warning .)
    id              reduce using rule 106 (LEVEL -> warning .)
    any             reduce using rule 106 (LEVEL -> warning .)
    all             reduce using rule 106 (LEVEL -> warning .)
    some            reduce using rule 106 (LEVEL -> warning .)
    extract         reduce using rule 106 (LEVEL -> warning .)
    int             reduce using rule 106 (LEVEL -> warning .)
    decimales       reduce using rule 106 (LEVEL -> warning .)
    cadenaString    reduce using rule 106 (LEVEL -> warning .)
    true            reduce using rule 106 (LEVEL -> warning .)
    false           reduce using rule 106 (LEVEL -> warning .)
    multiplicacion  reduce using rule 106 (LEVEL -> warning .)
    null            reduce using rule 106 (LEVEL -> warning .)
    current_time    reduce using rule 106 (LEVEL -> warning .)
    current_date    reduce using rule 106 (LEVEL -> warning .)
    timestamp       reduce using rule 106 (LEVEL -> warning .)
    interval        reduce using rule 106 (LEVEL -> warning .)
    default         reduce using rule 106 (LEVEL -> warning .)
    idPunto         reduce using rule 106 (LEVEL -> warning .)
    select          reduce using rule 106 (LEVEL -> warning .)
    case            reduce using rule 106 (LEVEL -> warning .)
    ptcoma          reduce using rule 106 (LEVEL -> warning .)


state 424

    (107) LEVEL -> exception .

    cadena          reduce using rule 107 (LEVEL -> exception .)
    format          reduce using rule 107 (LEVEL -> exception .)
    mas             reduce using rule 107 (LEVEL -> exception .)
    menos           reduce using rule 107 (LEVEL -> exception .)
    not             reduce using rule 107 (LEVEL -> exception .)
    para            reduce using rule 107 (LEVEL -> exception .)
    id              reduce using rule 107 (LEVEL -> exception .)
    any             reduce using rule 107 (LEVEL -> exception .)
    all             reduce using rule 107 (LEVEL -> exception .)
    some            reduce using rule 107 (LEVEL -> exception .)
    extract         reduce using rule 107 (LEVEL -> exception .)
    int             reduce using rule 107 (LEVEL -> exception .)
    decimales       reduce using rule 107 (LEVEL -> exception .)
    cadenaString    reduce using rule 107 (LEVEL -> exception .)
    true            reduce using rule 107 (LEVEL -> exception .)
    false           reduce using rule 107 (LEVEL -> exception .)
    multiplicacion  reduce using rule 107 (LEVEL -> exception .)
    null            reduce using rule 107 (LEVEL -> exception .)
    current_time    reduce using rule 107 (LEVEL -> exception .)
    current_date    reduce using rule 107 (LEVEL -> exception .)
    timestamp       reduce using rule 107 (LEVEL -> exception .)
    interval        reduce using rule 107 (LEVEL -> exception .)
    default         reduce using rule 107 (LEVEL -> exception .)
    idPunto         reduce using rule 107 (LEVEL -> exception .)
    select          reduce using rule 107 (LEVEL -> exception .)
    case            reduce using rule 107 (LEVEL -> exception .)
    ptcoma          reduce using rule 107 (LEVEL -> exception .)


state 425

    (46) BEGINEND -> begin LISTACONTENIDO . end
    (84) LISTACONTENIDO -> LISTACONTENIDO . CONTENIDO
    (86) CONTENIDO -> . ASIGNACION ptcoma
    (87) CONTENIDO -> . CONDICIONIF ptcoma
    (88) CONTENIDO -> . RAISE ptcoma
    (89) CONTENIDO -> . BEGINEND ptcoma
    (90) CONTENIDO -> . CALLPROCEDURE ptcoma
    (91) CONTENIDO -> . declare LDEC
    (92) CONTENIDO -> . RETURN ptcoma
    (93) CONTENIDO -> . INSERT ptcoma
    (94) CONTENIDO -> . SELECT ptcoma
    (95) CONTENIDO -> . UPDATE ptcoma
    (96) CONTENIDO -> . DELETE ptcoma
    (71) ASIGNACION -> . id dospuntos igual EXP
    (72) ASIGNACION -> . id igual EXP
    (73) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (97) RAISE -> . raise LEVEL FORMAT
    (98) RAISE -> . raise LEVEL EXP
    (99) RAISE -> . raise LEVEL
    (100) RAISE -> . raise
    (101) RAISE -> . raise LEVEL cadena coma id
    (46) BEGINEND -> . begin LISTACONTENIDO end
    (30) CALLPROCEDURE -> . execute id para parc
    (24) RETURN -> . return EXP
    (114) INSERT -> . insert into id values para LEXP parc
    (115) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (220) UPDATE -> . update id set LCAMPOS WHERE
    (223) DELETE -> . delete r_from id WHERE

    end             shift and go to state 527
    declare         shift and go to state 296
    id              shift and go to state 17
    if              shift and go to state 30
    raise           shift and go to state 302
    begin           shift and go to state 303
    execute         shift and go to state 34
    return          shift and go to state 304
    insert          shift and go to state 31
    select          shift and go to state 24
    update          shift and go to state 26
    delete          shift and go to state 27

    CONTENIDO                      shift and go to state 403
    ASIGNACION                     shift and go to state 291
    CONDICIONIF                    shift and go to state 292
    RAISE                          shift and go to state 293
    BEGINEND                       shift and go to state 294
    CALLPROCEDURE                  shift and go to state 295
    RETURN                         shift and go to state 297
    INSERT                         shift and go to state 298
    SELECT                         shift and go to state 299
    UPDATE                         shift and go to state 300
    DELETE                         shift and go to state 301

state 426

    (24) RETURN -> return EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    ptcoma          reduce using rule 24 (RETURN -> return EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    and             shift and go to state 128
    or              shift and go to state 129
    mayor           shift and go to state 130
    menor           shift and go to state 131
    mayor_igual     shift and go to state 132
    menor_igual     shift and go to state 133
    igual           shift and go to state 134
    diferente1      shift and go to state 135
    diferente2      shift and go to state 136
    between         shift and go to state 137
    is              shift and go to state 138
    isnull          shift and go to state 140
    notnull         shift and go to state 141
    as              shift and go to state 142
    cadenaString    shift and go to state 143
    id              shift and go to state 144
    cadena          shift and go to state 145
    in              shift and go to state 146
    not             shift and go to state 139
    like            shift and go to state 147


state 427

    (114) INSERT -> insert into id values para . LEXP parc
    (226) LEXP -> . LEXP coma EXP
    (227) LEXP -> . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 528
    EXP                            shift and go to state 57
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 428

    (115) INSERT -> insert into id para LEXP . parc values para LEXP parc
    (226) LEXP -> LEXP . coma EXP

    parc            shift and go to state 529
    coma            shift and go to state 121


state 429

    (80) CASE -> case LEXP LISTAWHEN ELSEF end . case

    case            shift and go to state 530


state 430

    (81) CASE -> case LEXP LISTAWHEN end case .

    use             reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    select          reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    create          reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    update          reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    delete          reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    alter           reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    drop            reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    insert          reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    case            reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    show            reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    id              reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    if              reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    execute         reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    $end            reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    r_from          reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    coma            reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    where           reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    group           reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    having          reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    union           reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    intersect       reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    except          reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    order           reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    limit           reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    offset          reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    ptcoma          reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    mas             reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    menos           reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    multiplicacion  reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    division        reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    modulo          reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    elevado         reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    and             reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    or              reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    mayor           reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    menor           reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    mayor_igual     reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    menor_igual     reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    igual           reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    diferente1      reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    diferente2      reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    between         reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    is              reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    isnull          reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    notnull         reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    as              reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    cadenaString    reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    cadena          reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    in              reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    not             reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    like            reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    then            reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    when            reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    parc            reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    end             reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    else            reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    constraint      reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    unique          reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    check           reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    default         reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    null            reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    primary         reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    references      reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    asc             reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)
    desc            reduce using rule 81 (CASE -> case LEXP LISTAWHEN end case .)


state 431

    (79) ELSEF -> else LISTACONTENIDO .
    (84) LISTACONTENIDO -> LISTACONTENIDO . CONTENIDO
    (86) CONTENIDO -> . ASIGNACION ptcoma
    (87) CONTENIDO -> . CONDICIONIF ptcoma
    (88) CONTENIDO -> . RAISE ptcoma
    (89) CONTENIDO -> . BEGINEND ptcoma
    (90) CONTENIDO -> . CALLPROCEDURE ptcoma
    (91) CONTENIDO -> . declare LDEC
    (92) CONTENIDO -> . RETURN ptcoma
    (93) CONTENIDO -> . INSERT ptcoma
    (94) CONTENIDO -> . SELECT ptcoma
    (95) CONTENIDO -> . UPDATE ptcoma
    (96) CONTENIDO -> . DELETE ptcoma
    (71) ASIGNACION -> . id dospuntos igual EXP
    (72) ASIGNACION -> . id igual EXP
    (73) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (97) RAISE -> . raise LEVEL FORMAT
    (98) RAISE -> . raise LEVEL EXP
    (99) RAISE -> . raise LEVEL
    (100) RAISE -> . raise
    (101) RAISE -> . raise LEVEL cadena coma id
    (46) BEGINEND -> . begin LISTACONTENIDO end
    (30) CALLPROCEDURE -> . execute id para parc
    (24) RETURN -> . return EXP
    (114) INSERT -> . insert into id values para LEXP parc
    (115) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (220) UPDATE -> . update id set LCAMPOS WHERE
    (223) DELETE -> . delete r_from id WHERE

    end             reduce using rule 79 (ELSEF -> else LISTACONTENIDO .)
    declare         shift and go to state 296
    id              shift and go to state 17
    if              shift and go to state 30
    raise           shift and go to state 302
    begin           shift and go to state 303
    execute         shift and go to state 34
    return          shift and go to state 304
    insert          shift and go to state 31
    select          shift and go to state 24
    update          shift and go to state 26
    delete          shift and go to state 27

    CONTENIDO                      shift and go to state 403
    ASIGNACION                     shift and go to state 291
    CONDICIONIF                    shift and go to state 292
    RAISE                          shift and go to state 293
    BEGINEND                       shift and go to state 294
    CALLPROCEDURE                  shift and go to state 295
    RETURN                         shift and go to state 297
    INSERT                         shift and go to state 298
    SELECT                         shift and go to state 299
    UPDATE                         shift and go to state 300
    DELETE                         shift and go to state 301

state 432

    (112) WHEN -> when LEXP then LEXP .
    (226) LEXP -> LEXP . coma EXP

    end             reduce using rule 112 (WHEN -> when LEXP then LEXP .)
    else            reduce using rule 112 (WHEN -> when LEXP then LEXP .)
    when            reduce using rule 112 (WHEN -> when LEXP then LEXP .)
    coma            shift and go to state 121


state 433

    (111) WHEN -> when LEXP then LISTACONTENIDO .
    (84) LISTACONTENIDO -> LISTACONTENIDO . CONTENIDO
    (86) CONTENIDO -> . ASIGNACION ptcoma
    (87) CONTENIDO -> . CONDICIONIF ptcoma
    (88) CONTENIDO -> . RAISE ptcoma
    (89) CONTENIDO -> . BEGINEND ptcoma
    (90) CONTENIDO -> . CALLPROCEDURE ptcoma
    (91) CONTENIDO -> . declare LDEC
    (92) CONTENIDO -> . RETURN ptcoma
    (93) CONTENIDO -> . INSERT ptcoma
    (94) CONTENIDO -> . SELECT ptcoma
    (95) CONTENIDO -> . UPDATE ptcoma
    (96) CONTENIDO -> . DELETE ptcoma
    (71) ASIGNACION -> . id dospuntos igual EXP
    (72) ASIGNACION -> . id igual EXP
    (73) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (97) RAISE -> . raise LEVEL FORMAT
    (98) RAISE -> . raise LEVEL EXP
    (99) RAISE -> . raise LEVEL
    (100) RAISE -> . raise
    (101) RAISE -> . raise LEVEL cadena coma id
    (46) BEGINEND -> . begin LISTACONTENIDO end
    (30) CALLPROCEDURE -> . execute id para parc
    (24) RETURN -> . return EXP
    (114) INSERT -> . insert into id values para LEXP parc
    (115) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (220) UPDATE -> . update id set LCAMPOS WHERE
    (223) DELETE -> . delete r_from id WHERE

    end             reduce using rule 111 (WHEN -> when LEXP then LISTACONTENIDO .)
    else            reduce using rule 111 (WHEN -> when LEXP then LISTACONTENIDO .)
    when            reduce using rule 111 (WHEN -> when LEXP then LISTACONTENIDO .)
    declare         shift and go to state 296
    id              shift and go to state 17
    if              shift and go to state 30
    raise           shift and go to state 302
    begin           shift and go to state 303
    execute         shift and go to state 34
    return          shift and go to state 304
    insert          shift and go to state 31
    select          shift and go to state 24
    update          shift and go to state 26
    delete          shift and go to state 27

    CONTENIDO                      shift and go to state 403
    ASIGNACION                     shift and go to state 291
    CONDICIONIF                    shift and go to state 292
    RAISE                          shift and go to state 293
    BEGINEND                       shift and go to state 294
    CALLPROCEDURE                  shift and go to state 295
    RETURN                         shift and go to state 297
    INSERT                         shift and go to state 298
    SELECT                         shift and go to state 299
    UPDATE                         shift and go to state 300
    DELETE                         shift and go to state 301

state 434

    (94) CONTENIDO -> SELECT . ptcoma
    (319) EXP -> SELECT .

    ptcoma          shift and go to state 415
    mas             reduce using rule 319 (EXP -> SELECT .)
    menos           reduce using rule 319 (EXP -> SELECT .)
    multiplicacion  reduce using rule 319 (EXP -> SELECT .)
    division        reduce using rule 319 (EXP -> SELECT .)
    modulo          reduce using rule 319 (EXP -> SELECT .)
    elevado         reduce using rule 319 (EXP -> SELECT .)
    and             reduce using rule 319 (EXP -> SELECT .)
    or              reduce using rule 319 (EXP -> SELECT .)
    mayor           reduce using rule 319 (EXP -> SELECT .)
    menor           reduce using rule 319 (EXP -> SELECT .)
    mayor_igual     reduce using rule 319 (EXP -> SELECT .)
    menor_igual     reduce using rule 319 (EXP -> SELECT .)
    igual           reduce using rule 319 (EXP -> SELECT .)
    diferente1      reduce using rule 319 (EXP -> SELECT .)
    diferente2      reduce using rule 319 (EXP -> SELECT .)
    between         reduce using rule 319 (EXP -> SELECT .)
    is              reduce using rule 319 (EXP -> SELECT .)
    isnull          reduce using rule 319 (EXP -> SELECT .)
    notnull         reduce using rule 319 (EXP -> SELECT .)
    as              reduce using rule 319 (EXP -> SELECT .)
    cadenaString    reduce using rule 319 (EXP -> SELECT .)
    id              reduce using rule 319 (EXP -> SELECT .)
    cadena          reduce using rule 319 (EXP -> SELECT .)
    in              reduce using rule 319 (EXP -> SELECT .)
    not             reduce using rule 319 (EXP -> SELECT .)
    like            reduce using rule 319 (EXP -> SELECT .)
    coma            reduce using rule 319 (EXP -> SELECT .)
    end             reduce using rule 319 (EXP -> SELECT .)
    else            reduce using rule 319 (EXP -> SELECT .)
    when            reduce using rule 319 (EXP -> SELECT .)


state 435

    (322) EXP -> id . para LEXP parc
    (323) EXP -> id . para parc
    (334) EXP -> id .
    (71) ASIGNACION -> id . dospuntos igual EXP
    (72) ASIGNACION -> id . igual EXP

  ! shift/reduce conflict for igual resolved as shift
    para            shift and go to state 151
    mas             reduce using rule 334 (EXP -> id .)
    menos           reduce using rule 334 (EXP -> id .)
    multiplicacion  reduce using rule 334 (EXP -> id .)
    division        reduce using rule 334 (EXP -> id .)
    modulo          reduce using rule 334 (EXP -> id .)
    elevado         reduce using rule 334 (EXP -> id .)
    and             reduce using rule 334 (EXP -> id .)
    or              reduce using rule 334 (EXP -> id .)
    mayor           reduce using rule 334 (EXP -> id .)
    menor           reduce using rule 334 (EXP -> id .)
    mayor_igual     reduce using rule 334 (EXP -> id .)
    menor_igual     reduce using rule 334 (EXP -> id .)
    diferente1      reduce using rule 334 (EXP -> id .)
    diferente2      reduce using rule 334 (EXP -> id .)
    between         reduce using rule 334 (EXP -> id .)
    is              reduce using rule 334 (EXP -> id .)
    isnull          reduce using rule 334 (EXP -> id .)
    notnull         reduce using rule 334 (EXP -> id .)
    as              reduce using rule 334 (EXP -> id .)
    cadenaString    reduce using rule 334 (EXP -> id .)
    id              reduce using rule 334 (EXP -> id .)
    cadena          reduce using rule 334 (EXP -> id .)
    in              reduce using rule 334 (EXP -> id .)
    not             reduce using rule 334 (EXP -> id .)
    like            reduce using rule 334 (EXP -> id .)
    coma            reduce using rule 334 (EXP -> id .)
    end             reduce using rule 334 (EXP -> id .)
    else            reduce using rule 334 (EXP -> id .)
    when            reduce using rule 334 (EXP -> id .)
    dospuntos       shift and go to state 47
    igual           shift and go to state 48

  ! igual           [ reduce using rule 334 (EXP -> id .) ]


state 436

    (141) SHOW -> show tables para id parc .

    ptcoma          reduce using rule 141 (SHOW -> show tables para id parc .)


state 437

    (225) EXIST -> not exist para SELECT . parc

    parc            shift and go to state 531


state 438

    (224) EXIST -> exist para SELECT parc .

    ptcoma          reduce using rule 224 (EXIST -> exist para SELECT parc .)
    r_from          reduce using rule 224 (EXIST -> exist para SELECT parc .)
    coma            reduce using rule 224 (EXIST -> exist para SELECT parc .)
    where           reduce using rule 224 (EXIST -> exist para SELECT parc .)
    group           reduce using rule 224 (EXIST -> exist para SELECT parc .)
    having          reduce using rule 224 (EXIST -> exist para SELECT parc .)
    union           reduce using rule 224 (EXIST -> exist para SELECT parc .)
    intersect       reduce using rule 224 (EXIST -> exist para SELECT parc .)
    except          reduce using rule 224 (EXIST -> exist para SELECT parc .)
    order           reduce using rule 224 (EXIST -> exist para SELECT parc .)
    limit           reduce using rule 224 (EXIST -> exist para SELECT parc .)
    offset          reduce using rule 224 (EXIST -> exist para SELECT parc .)
    mas             reduce using rule 224 (EXIST -> exist para SELECT parc .)
    menos           reduce using rule 224 (EXIST -> exist para SELECT parc .)
    multiplicacion  reduce using rule 224 (EXIST -> exist para SELECT parc .)
    division        reduce using rule 224 (EXIST -> exist para SELECT parc .)
    modulo          reduce using rule 224 (EXIST -> exist para SELECT parc .)
    elevado         reduce using rule 224 (EXIST -> exist para SELECT parc .)
    and             reduce using rule 224 (EXIST -> exist para SELECT parc .)
    or              reduce using rule 224 (EXIST -> exist para SELECT parc .)
    mayor           reduce using rule 224 (EXIST -> exist para SELECT parc .)
    menor           reduce using rule 224 (EXIST -> exist para SELECT parc .)
    mayor_igual     reduce using rule 224 (EXIST -> exist para SELECT parc .)
    menor_igual     reduce using rule 224 (EXIST -> exist para SELECT parc .)
    igual           reduce using rule 224 (EXIST -> exist para SELECT parc .)
    diferente1      reduce using rule 224 (EXIST -> exist para SELECT parc .)
    diferente2      reduce using rule 224 (EXIST -> exist para SELECT parc .)
    between         reduce using rule 224 (EXIST -> exist para SELECT parc .)
    is              reduce using rule 224 (EXIST -> exist para SELECT parc .)
    isnull          reduce using rule 224 (EXIST -> exist para SELECT parc .)
    notnull         reduce using rule 224 (EXIST -> exist para SELECT parc .)
    as              reduce using rule 224 (EXIST -> exist para SELECT parc .)
    cadenaString    reduce using rule 224 (EXIST -> exist para SELECT parc .)
    id              reduce using rule 224 (EXIST -> exist para SELECT parc .)
    cadena          reduce using rule 224 (EXIST -> exist para SELECT parc .)
    in              reduce using rule 224 (EXIST -> exist para SELECT parc .)
    not             reduce using rule 224 (EXIST -> exist para SELECT parc .)
    like            reduce using rule 224 (EXIST -> exist para SELECT parc .)
    then            reduce using rule 224 (EXIST -> exist para SELECT parc .)
    when            reduce using rule 224 (EXIST -> exist para SELECT parc .)
    parc            reduce using rule 224 (EXIST -> exist para SELECT parc .)
    end             reduce using rule 224 (EXIST -> exist para SELECT parc .)
    else            reduce using rule 224 (EXIST -> exist para SELECT parc .)
    constraint      reduce using rule 224 (EXIST -> exist para SELECT parc .)
    unique          reduce using rule 224 (EXIST -> exist para SELECT parc .)
    check           reduce using rule 224 (EXIST -> exist para SELECT parc .)
    default         reduce using rule 224 (EXIST -> exist para SELECT parc .)
    null            reduce using rule 224 (EXIST -> exist para SELECT parc .)
    primary         reduce using rule 224 (EXIST -> exist para SELECT parc .)
    references      reduce using rule 224 (EXIST -> exist para SELECT parc .)
    asc             reduce using rule 224 (EXIST -> exist para SELECT parc .)
    desc            reduce using rule 224 (EXIST -> exist para SELECT parc .)


state 439

    (192) SELECT -> select distinct LEXP r_from LEXP WHERE . GROUP HAVING COMBINING ORDER LIMIT
    (211) GROUP -> . group by LEXP
    (212) GROUP -> .

  ! shift/reduce conflict for group resolved as shift
    group           shift and go to state 195
    r_from          reduce using rule 212 (GROUP -> .)
    coma            reduce using rule 212 (GROUP -> .)
    where           reduce using rule 212 (GROUP -> .)
    having          reduce using rule 212 (GROUP -> .)
    union           reduce using rule 212 (GROUP -> .)
    intersect       reduce using rule 212 (GROUP -> .)
    except          reduce using rule 212 (GROUP -> .)
    order           reduce using rule 212 (GROUP -> .)
    limit           reduce using rule 212 (GROUP -> .)
    offset          reduce using rule 212 (GROUP -> .)
    ptcoma          reduce using rule 212 (GROUP -> .)
    mas             reduce using rule 212 (GROUP -> .)
    menos           reduce using rule 212 (GROUP -> .)
    multiplicacion  reduce using rule 212 (GROUP -> .)
    division        reduce using rule 212 (GROUP -> .)
    modulo          reduce using rule 212 (GROUP -> .)
    elevado         reduce using rule 212 (GROUP -> .)
    and             reduce using rule 212 (GROUP -> .)
    or              reduce using rule 212 (GROUP -> .)
    mayor           reduce using rule 212 (GROUP -> .)
    menor           reduce using rule 212 (GROUP -> .)
    mayor_igual     reduce using rule 212 (GROUP -> .)
    menor_igual     reduce using rule 212 (GROUP -> .)
    igual           reduce using rule 212 (GROUP -> .)
    diferente1      reduce using rule 212 (GROUP -> .)
    diferente2      reduce using rule 212 (GROUP -> .)
    between         reduce using rule 212 (GROUP -> .)
    is              reduce using rule 212 (GROUP -> .)
    isnull          reduce using rule 212 (GROUP -> .)
    notnull         reduce using rule 212 (GROUP -> .)
    as              reduce using rule 212 (GROUP -> .)
    cadenaString    reduce using rule 212 (GROUP -> .)
    id              reduce using rule 212 (GROUP -> .)
    cadena          reduce using rule 212 (GROUP -> .)
    in              reduce using rule 212 (GROUP -> .)
    not             reduce using rule 212 (GROUP -> .)
    like            reduce using rule 212 (GROUP -> .)
    then            reduce using rule 212 (GROUP -> .)
    when            reduce using rule 212 (GROUP -> .)
    parc            reduce using rule 212 (GROUP -> .)
    end             reduce using rule 212 (GROUP -> .)
    else            reduce using rule 212 (GROUP -> .)
    constraint      reduce using rule 212 (GROUP -> .)
    unique          reduce using rule 212 (GROUP -> .)
    check           reduce using rule 212 (GROUP -> .)
    default         reduce using rule 212 (GROUP -> .)
    null            reduce using rule 212 (GROUP -> .)
    primary         reduce using rule 212 (GROUP -> .)
    references      reduce using rule 212 (GROUP -> .)
    asc             reduce using rule 212 (GROUP -> .)
    desc            reduce using rule 212 (GROUP -> .)

  ! group           [ reduce using rule 212 (GROUP -> .) ]

    GROUP                          shift and go to state 532

state 440

    (193) SELECT -> select LEXP r_from LEXP WHERE GROUP . HAVING COMBINING ORDER LIMIT
    (213) HAVING -> . having EXP
    (214) HAVING -> .

  ! shift/reduce conflict for having resolved as shift
    having          shift and go to state 321
    r_from          reduce using rule 214 (HAVING -> .)
    coma            reduce using rule 214 (HAVING -> .)
    where           reduce using rule 214 (HAVING -> .)
    group           reduce using rule 214 (HAVING -> .)
    union           reduce using rule 214 (HAVING -> .)
    intersect       reduce using rule 214 (HAVING -> .)
    except          reduce using rule 214 (HAVING -> .)
    order           reduce using rule 214 (HAVING -> .)
    limit           reduce using rule 214 (HAVING -> .)
    offset          reduce using rule 214 (HAVING -> .)
    ptcoma          reduce using rule 214 (HAVING -> .)
    mas             reduce using rule 214 (HAVING -> .)
    menos           reduce using rule 214 (HAVING -> .)
    multiplicacion  reduce using rule 214 (HAVING -> .)
    division        reduce using rule 214 (HAVING -> .)
    modulo          reduce using rule 214 (HAVING -> .)
    elevado         reduce using rule 214 (HAVING -> .)
    and             reduce using rule 214 (HAVING -> .)
    or              reduce using rule 214 (HAVING -> .)
    mayor           reduce using rule 214 (HAVING -> .)
    menor           reduce using rule 214 (HAVING -> .)
    mayor_igual     reduce using rule 214 (HAVING -> .)
    menor_igual     reduce using rule 214 (HAVING -> .)
    igual           reduce using rule 214 (HAVING -> .)
    diferente1      reduce using rule 214 (HAVING -> .)
    diferente2      reduce using rule 214 (HAVING -> .)
    between         reduce using rule 214 (HAVING -> .)
    is              reduce using rule 214 (HAVING -> .)
    isnull          reduce using rule 214 (HAVING -> .)
    notnull         reduce using rule 214 (HAVING -> .)
    as              reduce using rule 214 (HAVING -> .)
    cadenaString    reduce using rule 214 (HAVING -> .)
    id              reduce using rule 214 (HAVING -> .)
    cadena          reduce using rule 214 (HAVING -> .)
    in              reduce using rule 214 (HAVING -> .)
    not             reduce using rule 214 (HAVING -> .)
    like            reduce using rule 214 (HAVING -> .)
    then            reduce using rule 214 (HAVING -> .)
    when            reduce using rule 214 (HAVING -> .)
    parc            reduce using rule 214 (HAVING -> .)
    end             reduce using rule 214 (HAVING -> .)
    else            reduce using rule 214 (HAVING -> .)
    constraint      reduce using rule 214 (HAVING -> .)
    unique          reduce using rule 214 (HAVING -> .)
    check           reduce using rule 214 (HAVING -> .)
    default         reduce using rule 214 (HAVING -> .)
    null            reduce using rule 214 (HAVING -> .)
    primary         reduce using rule 214 (HAVING -> .)
    references      reduce using rule 214 (HAVING -> .)
    asc             reduce using rule 214 (HAVING -> .)
    desc            reduce using rule 214 (HAVING -> .)

  ! having          [ reduce using rule 214 (HAVING -> .) ]

    HAVING                         shift and go to state 533

state 441

    (194) SELECT -> select LEXP WHERE GROUP HAVING COMBINING . ORDER LIMIT
    (215) ORDER -> . order by LEXP ORD
    (216) ORDER -> . order by LEXP
    (217) ORDER -> .

  ! shift/reduce conflict for order resolved as shift
    order           shift and go to state 535
    r_from          reduce using rule 217 (ORDER -> .)
    coma            reduce using rule 217 (ORDER -> .)
    where           reduce using rule 217 (ORDER -> .)
    group           reduce using rule 217 (ORDER -> .)
    having          reduce using rule 217 (ORDER -> .)
    union           reduce using rule 217 (ORDER -> .)
    intersect       reduce using rule 217 (ORDER -> .)
    except          reduce using rule 217 (ORDER -> .)
    limit           reduce using rule 217 (ORDER -> .)
    offset          reduce using rule 217 (ORDER -> .)
    ptcoma          reduce using rule 217 (ORDER -> .)
    mas             reduce using rule 217 (ORDER -> .)
    menos           reduce using rule 217 (ORDER -> .)
    multiplicacion  reduce using rule 217 (ORDER -> .)
    division        reduce using rule 217 (ORDER -> .)
    modulo          reduce using rule 217 (ORDER -> .)
    elevado         reduce using rule 217 (ORDER -> .)
    and             reduce using rule 217 (ORDER -> .)
    or              reduce using rule 217 (ORDER -> .)
    mayor           reduce using rule 217 (ORDER -> .)
    menor           reduce using rule 217 (ORDER -> .)
    mayor_igual     reduce using rule 217 (ORDER -> .)
    menor_igual     reduce using rule 217 (ORDER -> .)
    igual           reduce using rule 217 (ORDER -> .)
    diferente1      reduce using rule 217 (ORDER -> .)
    diferente2      reduce using rule 217 (ORDER -> .)
    between         reduce using rule 217 (ORDER -> .)
    is              reduce using rule 217 (ORDER -> .)
    isnull          reduce using rule 217 (ORDER -> .)
    notnull         reduce using rule 217 (ORDER -> .)
    as              reduce using rule 217 (ORDER -> .)
    cadenaString    reduce using rule 217 (ORDER -> .)
    id              reduce using rule 217 (ORDER -> .)
    cadena          reduce using rule 217 (ORDER -> .)
    in              reduce using rule 217 (ORDER -> .)
    not             reduce using rule 217 (ORDER -> .)
    like            reduce using rule 217 (ORDER -> .)
    then            reduce using rule 217 (ORDER -> .)
    when            reduce using rule 217 (ORDER -> .)
    parc            reduce using rule 217 (ORDER -> .)
    end             reduce using rule 217 (ORDER -> .)
    else            reduce using rule 217 (ORDER -> .)
    constraint      reduce using rule 217 (ORDER -> .)
    unique          reduce using rule 217 (ORDER -> .)
    check           reduce using rule 217 (ORDER -> .)
    default         reduce using rule 217 (ORDER -> .)
    null            reduce using rule 217 (ORDER -> .)
    primary         reduce using rule 217 (ORDER -> .)
    references      reduce using rule 217 (ORDER -> .)
    asc             reduce using rule 217 (ORDER -> .)
    desc            reduce using rule 217 (ORDER -> .)

  ! order           [ reduce using rule 217 (ORDER -> .) ]

    ORDER                          shift and go to state 534

state 442

    (206) COMBINING -> union . EXP
    (207) COMBINING -> union . all EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    all             shift and go to state 537
    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 536
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 443

    (208) COMBINING -> intersect . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 538
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 444

    (209) COMBINING -> except . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 539
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 445

    (213) HAVING -> having EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    r_from          reduce using rule 213 (HAVING -> having EXP .)
    coma            reduce using rule 213 (HAVING -> having EXP .)
    where           reduce using rule 213 (HAVING -> having EXP .)
    group           reduce using rule 213 (HAVING -> having EXP .)
    having          reduce using rule 213 (HAVING -> having EXP .)
    union           reduce using rule 213 (HAVING -> having EXP .)
    intersect       reduce using rule 213 (HAVING -> having EXP .)
    except          reduce using rule 213 (HAVING -> having EXP .)
    order           reduce using rule 213 (HAVING -> having EXP .)
    limit           reduce using rule 213 (HAVING -> having EXP .)
    offset          reduce using rule 213 (HAVING -> having EXP .)
    ptcoma          reduce using rule 213 (HAVING -> having EXP .)
    then            reduce using rule 213 (HAVING -> having EXP .)
    when            reduce using rule 213 (HAVING -> having EXP .)
    parc            reduce using rule 213 (HAVING -> having EXP .)
    end             reduce using rule 213 (HAVING -> having EXP .)
    else            reduce using rule 213 (HAVING -> having EXP .)
    constraint      reduce using rule 213 (HAVING -> having EXP .)
    unique          reduce using rule 213 (HAVING -> having EXP .)
    check           reduce using rule 213 (HAVING -> having EXP .)
    default         reduce using rule 213 (HAVING -> having EXP .)
    null            reduce using rule 213 (HAVING -> having EXP .)
    primary         reduce using rule 213 (HAVING -> having EXP .)
    references      reduce using rule 213 (HAVING -> having EXP .)
    asc             reduce using rule 213 (HAVING -> having EXP .)
    desc            reduce using rule 213 (HAVING -> having EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    and             shift and go to state 128
    or              shift and go to state 129
    mayor           shift and go to state 130
    menor           shift and go to state 131
    mayor_igual     shift and go to state 132
    menor_igual     shift and go to state 133
    igual           shift and go to state 134
    diferente1      shift and go to state 135
    diferente2      shift and go to state 136
    between         shift and go to state 137
    is              shift and go to state 138
    isnull          shift and go to state 140
    notnull         shift and go to state 141
    as              shift and go to state 142
    cadenaString    shift and go to state 143
    id              shift and go to state 144
    cadena          shift and go to state 145
    in              shift and go to state 146
    not             shift and go to state 139
    like            shift and go to state 147

  ! mas             [ reduce using rule 213 (HAVING -> having EXP .) ]
  ! menos           [ reduce using rule 213 (HAVING -> having EXP .) ]
  ! multiplicacion  [ reduce using rule 213 (HAVING -> having EXP .) ]
  ! division        [ reduce using rule 213 (HAVING -> having EXP .) ]
  ! modulo          [ reduce using rule 213 (HAVING -> having EXP .) ]
  ! elevado         [ reduce using rule 213 (HAVING -> having EXP .) ]
  ! and             [ reduce using rule 213 (HAVING -> having EXP .) ]
  ! or              [ reduce using rule 213 (HAVING -> having EXP .) ]
  ! mayor           [ reduce using rule 213 (HAVING -> having EXP .) ]
  ! menor           [ reduce using rule 213 (HAVING -> having EXP .) ]
  ! mayor_igual     [ reduce using rule 213 (HAVING -> having EXP .) ]
  ! menor_igual     [ reduce using rule 213 (HAVING -> having EXP .) ]
  ! igual           [ reduce using rule 213 (HAVING -> having EXP .) ]
  ! diferente1      [ reduce using rule 213 (HAVING -> having EXP .) ]
  ! diferente2      [ reduce using rule 213 (HAVING -> having EXP .) ]
  ! between         [ reduce using rule 213 (HAVING -> having EXP .) ]
  ! is              [ reduce using rule 213 (HAVING -> having EXP .) ]
  ! isnull          [ reduce using rule 213 (HAVING -> having EXP .) ]
  ! notnull         [ reduce using rule 213 (HAVING -> having EXP .) ]
  ! as              [ reduce using rule 213 (HAVING -> having EXP .) ]
  ! cadenaString    [ reduce using rule 213 (HAVING -> having EXP .) ]
  ! id              [ reduce using rule 213 (HAVING -> having EXP .) ]
  ! cadena          [ reduce using rule 213 (HAVING -> having EXP .) ]
  ! in              [ reduce using rule 213 (HAVING -> having EXP .) ]
  ! not             [ reduce using rule 213 (HAVING -> having EXP .) ]
  ! like            [ reduce using rule 213 (HAVING -> having EXP .) ]


state 446

    (211) GROUP -> group by LEXP .
    (226) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 211 (GROUP -> group by LEXP .)
    where           reduce using rule 211 (GROUP -> group by LEXP .)
    group           reduce using rule 211 (GROUP -> group by LEXP .)
    having          reduce using rule 211 (GROUP -> group by LEXP .)
    union           reduce using rule 211 (GROUP -> group by LEXP .)
    intersect       reduce using rule 211 (GROUP -> group by LEXP .)
    except          reduce using rule 211 (GROUP -> group by LEXP .)
    order           reduce using rule 211 (GROUP -> group by LEXP .)
    limit           reduce using rule 211 (GROUP -> group by LEXP .)
    offset          reduce using rule 211 (GROUP -> group by LEXP .)
    ptcoma          reduce using rule 211 (GROUP -> group by LEXP .)
    mas             reduce using rule 211 (GROUP -> group by LEXP .)
    menos           reduce using rule 211 (GROUP -> group by LEXP .)
    multiplicacion  reduce using rule 211 (GROUP -> group by LEXP .)
    division        reduce using rule 211 (GROUP -> group by LEXP .)
    modulo          reduce using rule 211 (GROUP -> group by LEXP .)
    elevado         reduce using rule 211 (GROUP -> group by LEXP .)
    and             reduce using rule 211 (GROUP -> group by LEXP .)
    or              reduce using rule 211 (GROUP -> group by LEXP .)
    mayor           reduce using rule 211 (GROUP -> group by LEXP .)
    menor           reduce using rule 211 (GROUP -> group by LEXP .)
    mayor_igual     reduce using rule 211 (GROUP -> group by LEXP .)
    menor_igual     reduce using rule 211 (GROUP -> group by LEXP .)
    igual           reduce using rule 211 (GROUP -> group by LEXP .)
    diferente1      reduce using rule 211 (GROUP -> group by LEXP .)
    diferente2      reduce using rule 211 (GROUP -> group by LEXP .)
    between         reduce using rule 211 (GROUP -> group by LEXP .)
    is              reduce using rule 211 (GROUP -> group by LEXP .)
    isnull          reduce using rule 211 (GROUP -> group by LEXP .)
    notnull         reduce using rule 211 (GROUP -> group by LEXP .)
    as              reduce using rule 211 (GROUP -> group by LEXP .)
    cadenaString    reduce using rule 211 (GROUP -> group by LEXP .)
    id              reduce using rule 211 (GROUP -> group by LEXP .)
    cadena          reduce using rule 211 (GROUP -> group by LEXP .)
    in              reduce using rule 211 (GROUP -> group by LEXP .)
    not             reduce using rule 211 (GROUP -> group by LEXP .)
    like            reduce using rule 211 (GROUP -> group by LEXP .)
    then            reduce using rule 211 (GROUP -> group by LEXP .)
    when            reduce using rule 211 (GROUP -> group by LEXP .)
    parc            reduce using rule 211 (GROUP -> group by LEXP .)
    end             reduce using rule 211 (GROUP -> group by LEXP .)
    else            reduce using rule 211 (GROUP -> group by LEXP .)
    constraint      reduce using rule 211 (GROUP -> group by LEXP .)
    unique          reduce using rule 211 (GROUP -> group by LEXP .)
    check           reduce using rule 211 (GROUP -> group by LEXP .)
    default         reduce using rule 211 (GROUP -> group by LEXP .)
    null            reduce using rule 211 (GROUP -> group by LEXP .)
    primary         reduce using rule 211 (GROUP -> group by LEXP .)
    references      reduce using rule 211 (GROUP -> group by LEXP .)
    asc             reduce using rule 211 (GROUP -> group by LEXP .)
    desc            reduce using rule 211 (GROUP -> group by LEXP .)
    coma            shift and go to state 121

  ! coma            [ reduce using rule 211 (GROUP -> group by LEXP .) ]


state 447

    (316) EXP -> EXP is not distinct r_from . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 540
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 448

    (315) EXP -> EXP is distinct r_from EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    r_from          reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    coma            reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    where           reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    group           reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    having          reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    union           reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    intersect       reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    except          reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    order           reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    limit           reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    offset          reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    ptcoma          reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    and             reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    or              reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    between         reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    is              reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    isnull          reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    notnull         reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    as              reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    cadenaString    reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    id              reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    cadena          reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    in              reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    not             reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    like            reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    then            reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    when            reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    parc            reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    end             reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    else            reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    constraint      reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    unique          reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    check           reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    default         reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    null            reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    primary         reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    references      reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    asc             reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    desc            reduce using rule 315 (EXP -> EXP is distinct r_from EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    mayor           shift and go to state 130
    menor           shift and go to state 131
    mayor_igual     shift and go to state 132
    menor_igual     shift and go to state 133
    igual           shift and go to state 134
    diferente1      shift and go to state 135
    diferente2      shift and go to state 136

  ! mas             [ reduce using rule 315 (EXP -> EXP is distinct r_from EXP .) ]
  ! menos           [ reduce using rule 315 (EXP -> EXP is distinct r_from EXP .) ]
  ! multiplicacion  [ reduce using rule 315 (EXP -> EXP is distinct r_from EXP .) ]
  ! division        [ reduce using rule 315 (EXP -> EXP is distinct r_from EXP .) ]
  ! modulo          [ reduce using rule 315 (EXP -> EXP is distinct r_from EXP .) ]
  ! elevado         [ reduce using rule 315 (EXP -> EXP is distinct r_from EXP .) ]
  ! mayor           [ reduce using rule 315 (EXP -> EXP is distinct r_from EXP .) ]
  ! menor           [ reduce using rule 315 (EXP -> EXP is distinct r_from EXP .) ]
  ! mayor_igual     [ reduce using rule 315 (EXP -> EXP is distinct r_from EXP .) ]
  ! menor_igual     [ reduce using rule 315 (EXP -> EXP is distinct r_from EXP .) ]
  ! igual           [ reduce using rule 315 (EXP -> EXP is distinct r_from EXP .) ]
  ! diferente1      [ reduce using rule 315 (EXP -> EXP is distinct r_from EXP .) ]
  ! diferente2      [ reduce using rule 315 (EXP -> EXP is distinct r_from EXP .) ]
  ! and             [ shift and go to state 128 ]
  ! or              [ shift and go to state 129 ]
  ! between         [ shift and go to state 137 ]
  ! is              [ shift and go to state 138 ]
  ! isnull          [ shift and go to state 140 ]
  ! notnull         [ shift and go to state 141 ]
  ! as              [ shift and go to state 142 ]
  ! cadenaString    [ shift and go to state 143 ]
  ! id              [ shift and go to state 144 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 146 ]
  ! not             [ shift and go to state 139 ]
  ! like            [ shift and go to state 147 ]


state 449

    (311) EXP -> EXP not in para EXP . parc
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    parc            shift and go to state 541
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    and             shift and go to state 128
    or              shift and go to state 129
    mayor           shift and go to state 130
    menor           shift and go to state 131
    mayor_igual     shift and go to state 132
    menor_igual     shift and go to state 133
    igual           shift and go to state 134
    diferente1      shift and go to state 135
    diferente2      shift and go to state 136
    between         shift and go to state 137
    is              shift and go to state 138
    isnull          shift and go to state 140
    notnull         shift and go to state 141
    as              shift and go to state 142
    cadenaString    shift and go to state 143
    id              shift and go to state 144
    cadena          shift and go to state 145
    in              shift and go to state 146
    not             shift and go to state 139
    like            shift and go to state 147


state 450

    (314) EXP -> EXP not between symetric EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    r_from          reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    coma            reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    where           reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    group           reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    having          reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    union           reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    intersect       reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    except          reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    order           reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    limit           reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    offset          reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    ptcoma          reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    and             reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    or              reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    between         reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    is              reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    isnull          reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    notnull         reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    as              reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    cadenaString    reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    id              reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    cadena          reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    in              reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    not             reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    like            reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    then            reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    when            reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    parc            reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    end             reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    else            reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    constraint      reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    unique          reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    check           reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    default         reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    null            reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    primary         reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    references      reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    asc             reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    desc            reduce using rule 314 (EXP -> EXP not between symetric EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    mayor           shift and go to state 130
    menor           shift and go to state 131
    mayor_igual     shift and go to state 132
    menor_igual     shift and go to state 133
    igual           shift and go to state 134
    diferente1      shift and go to state 135
    diferente2      shift and go to state 136

  ! mas             [ reduce using rule 314 (EXP -> EXP not between symetric EXP .) ]
  ! menos           [ reduce using rule 314 (EXP -> EXP not between symetric EXP .) ]
  ! multiplicacion  [ reduce using rule 314 (EXP -> EXP not between symetric EXP .) ]
  ! division        [ reduce using rule 314 (EXP -> EXP not between symetric EXP .) ]
  ! modulo          [ reduce using rule 314 (EXP -> EXP not between symetric EXP .) ]
  ! elevado         [ reduce using rule 314 (EXP -> EXP not between symetric EXP .) ]
  ! mayor           [ reduce using rule 314 (EXP -> EXP not between symetric EXP .) ]
  ! menor           [ reduce using rule 314 (EXP -> EXP not between symetric EXP .) ]
  ! mayor_igual     [ reduce using rule 314 (EXP -> EXP not between symetric EXP .) ]
  ! menor_igual     [ reduce using rule 314 (EXP -> EXP not between symetric EXP .) ]
  ! igual           [ reduce using rule 314 (EXP -> EXP not between symetric EXP .) ]
  ! diferente1      [ reduce using rule 314 (EXP -> EXP not between symetric EXP .) ]
  ! diferente2      [ reduce using rule 314 (EXP -> EXP not between symetric EXP .) ]
  ! and             [ shift and go to state 128 ]
  ! or              [ shift and go to state 129 ]
  ! between         [ shift and go to state 137 ]
  ! is              [ shift and go to state 138 ]
  ! isnull          [ shift and go to state 140 ]
  ! notnull         [ shift and go to state 141 ]
  ! as              [ shift and go to state 142 ]
  ! cadenaString    [ shift and go to state 143 ]
  ! id              [ shift and go to state 144 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 146 ]
  ! not             [ shift and go to state 139 ]
  ! like            [ shift and go to state 147 ]


state 451

    (310) EXP -> EXP in para EXP parc .

    r_from          reduce using rule 310 (EXP -> EXP in para EXP parc .)
    coma            reduce using rule 310 (EXP -> EXP in para EXP parc .)
    where           reduce using rule 310 (EXP -> EXP in para EXP parc .)
    group           reduce using rule 310 (EXP -> EXP in para EXP parc .)
    having          reduce using rule 310 (EXP -> EXP in para EXP parc .)
    union           reduce using rule 310 (EXP -> EXP in para EXP parc .)
    intersect       reduce using rule 310 (EXP -> EXP in para EXP parc .)
    except          reduce using rule 310 (EXP -> EXP in para EXP parc .)
    order           reduce using rule 310 (EXP -> EXP in para EXP parc .)
    limit           reduce using rule 310 (EXP -> EXP in para EXP parc .)
    offset          reduce using rule 310 (EXP -> EXP in para EXP parc .)
    ptcoma          reduce using rule 310 (EXP -> EXP in para EXP parc .)
    mas             reduce using rule 310 (EXP -> EXP in para EXP parc .)
    menos           reduce using rule 310 (EXP -> EXP in para EXP parc .)
    multiplicacion  reduce using rule 310 (EXP -> EXP in para EXP parc .)
    division        reduce using rule 310 (EXP -> EXP in para EXP parc .)
    modulo          reduce using rule 310 (EXP -> EXP in para EXP parc .)
    elevado         reduce using rule 310 (EXP -> EXP in para EXP parc .)
    and             reduce using rule 310 (EXP -> EXP in para EXP parc .)
    or              reduce using rule 310 (EXP -> EXP in para EXP parc .)
    mayor           reduce using rule 310 (EXP -> EXP in para EXP parc .)
    menor           reduce using rule 310 (EXP -> EXP in para EXP parc .)
    mayor_igual     reduce using rule 310 (EXP -> EXP in para EXP parc .)
    menor_igual     reduce using rule 310 (EXP -> EXP in para EXP parc .)
    igual           reduce using rule 310 (EXP -> EXP in para EXP parc .)
    diferente1      reduce using rule 310 (EXP -> EXP in para EXP parc .)
    diferente2      reduce using rule 310 (EXP -> EXP in para EXP parc .)
    between         reduce using rule 310 (EXP -> EXP in para EXP parc .)
    is              reduce using rule 310 (EXP -> EXP in para EXP parc .)
    isnull          reduce using rule 310 (EXP -> EXP in para EXP parc .)
    notnull         reduce using rule 310 (EXP -> EXP in para EXP parc .)
    as              reduce using rule 310 (EXP -> EXP in para EXP parc .)
    cadenaString    reduce using rule 310 (EXP -> EXP in para EXP parc .)
    id              reduce using rule 310 (EXP -> EXP in para EXP parc .)
    cadena          reduce using rule 310 (EXP -> EXP in para EXP parc .)
    in              reduce using rule 310 (EXP -> EXP in para EXP parc .)
    not             reduce using rule 310 (EXP -> EXP in para EXP parc .)
    like            reduce using rule 310 (EXP -> EXP in para EXP parc .)
    then            reduce using rule 310 (EXP -> EXP in para EXP parc .)
    when            reduce using rule 310 (EXP -> EXP in para EXP parc .)
    parc            reduce using rule 310 (EXP -> EXP in para EXP parc .)
    end             reduce using rule 310 (EXP -> EXP in para EXP parc .)
    else            reduce using rule 310 (EXP -> EXP in para EXP parc .)
    constraint      reduce using rule 310 (EXP -> EXP in para EXP parc .)
    unique          reduce using rule 310 (EXP -> EXP in para EXP parc .)
    check           reduce using rule 310 (EXP -> EXP in para EXP parc .)
    default         reduce using rule 310 (EXP -> EXP in para EXP parc .)
    null            reduce using rule 310 (EXP -> EXP in para EXP parc .)
    primary         reduce using rule 310 (EXP -> EXP in para EXP parc .)
    references      reduce using rule 310 (EXP -> EXP in para EXP parc .)
    asc             reduce using rule 310 (EXP -> EXP in para EXP parc .)
    desc            reduce using rule 310 (EXP -> EXP in para EXP parc .)


state 452

    (238) TIPO -> interval para int . parc
    (248) TIPO -> interval para int . parc cadena

    parc            shift and go to state 542


state 453

    (229) TIPO -> decimal para int . coma int parc
    (230) TIPO -> decimal para int . parc

    coma            shift and go to state 543
    parc            shift and go to state 544


state 454

    (232) TIPO -> numeric para int . coma int parc
    (233) TIPO -> numeric para int . parc

    coma            shift and go to state 545
    parc            shift and go to state 546


state 455

    (235) TIPO -> varchar para int . parc

    parc            shift and go to state 547


state 456

    (236) TIPO -> timestamp para int . parc
    (244) TIPO -> timestamp para int . parc without time zone
    (245) TIPO -> timestamp para int . parc with time zone

    parc            shift and go to state 548


state 457

    (264) TIPO -> timestamp without time . zone

    zone            shift and go to state 549


state 458

    (265) TIPO -> timestamp with time . zone

    zone            shift and go to state 550


state 459

    (237) TIPO -> character para int . parc

    parc            shift and go to state 551


state 460

    (241) TIPO -> character varying para . int parc

    int             shift and go to state 552


state 461

    (239) TIPO -> char para int . parc

    parc            shift and go to state 553


state 462

    (240) TIPO -> time para int . parc
    (246) TIPO -> time para int . parc without time zone
    (247) TIPO -> time para int . parc with time zone

    parc            shift and go to state 554


state 463

    (266) TIPO -> time without time . zone

    zone            shift and go to state 555


state 464

    (267) TIPO -> time with time . zone

    zone            shift and go to state 556


state 465

    (242) TIPO -> id modulo rowtype .

    r_from          reduce using rule 242 (TIPO -> id modulo rowtype .)
    coma            reduce using rule 242 (TIPO -> id modulo rowtype .)
    where           reduce using rule 242 (TIPO -> id modulo rowtype .)
    group           reduce using rule 242 (TIPO -> id modulo rowtype .)
    having          reduce using rule 242 (TIPO -> id modulo rowtype .)
    union           reduce using rule 242 (TIPO -> id modulo rowtype .)
    intersect       reduce using rule 242 (TIPO -> id modulo rowtype .)
    except          reduce using rule 242 (TIPO -> id modulo rowtype .)
    order           reduce using rule 242 (TIPO -> id modulo rowtype .)
    limit           reduce using rule 242 (TIPO -> id modulo rowtype .)
    offset          reduce using rule 242 (TIPO -> id modulo rowtype .)
    ptcoma          reduce using rule 242 (TIPO -> id modulo rowtype .)
    mas             reduce using rule 242 (TIPO -> id modulo rowtype .)
    menos           reduce using rule 242 (TIPO -> id modulo rowtype .)
    multiplicacion  reduce using rule 242 (TIPO -> id modulo rowtype .)
    division        reduce using rule 242 (TIPO -> id modulo rowtype .)
    modulo          reduce using rule 242 (TIPO -> id modulo rowtype .)
    elevado         reduce using rule 242 (TIPO -> id modulo rowtype .)
    and             reduce using rule 242 (TIPO -> id modulo rowtype .)
    or              reduce using rule 242 (TIPO -> id modulo rowtype .)
    mayor           reduce using rule 242 (TIPO -> id modulo rowtype .)
    menor           reduce using rule 242 (TIPO -> id modulo rowtype .)
    mayor_igual     reduce using rule 242 (TIPO -> id modulo rowtype .)
    menor_igual     reduce using rule 242 (TIPO -> id modulo rowtype .)
    igual           reduce using rule 242 (TIPO -> id modulo rowtype .)
    diferente1      reduce using rule 242 (TIPO -> id modulo rowtype .)
    diferente2      reduce using rule 242 (TIPO -> id modulo rowtype .)
    between         reduce using rule 242 (TIPO -> id modulo rowtype .)
    is              reduce using rule 242 (TIPO -> id modulo rowtype .)
    isnull          reduce using rule 242 (TIPO -> id modulo rowtype .)
    notnull         reduce using rule 242 (TIPO -> id modulo rowtype .)
    as              reduce using rule 242 (TIPO -> id modulo rowtype .)
    cadenaString    reduce using rule 242 (TIPO -> id modulo rowtype .)
    id              reduce using rule 242 (TIPO -> id modulo rowtype .)
    cadena          reduce using rule 242 (TIPO -> id modulo rowtype .)
    in              reduce using rule 242 (TIPO -> id modulo rowtype .)
    not             reduce using rule 242 (TIPO -> id modulo rowtype .)
    like            reduce using rule 242 (TIPO -> id modulo rowtype .)
    then            reduce using rule 242 (TIPO -> id modulo rowtype .)
    when            reduce using rule 242 (TIPO -> id modulo rowtype .)
    parc            reduce using rule 242 (TIPO -> id modulo rowtype .)
    end             reduce using rule 242 (TIPO -> id modulo rowtype .)
    else            reduce using rule 242 (TIPO -> id modulo rowtype .)
    constraint      reduce using rule 242 (TIPO -> id modulo rowtype .)
    unique          reduce using rule 242 (TIPO -> id modulo rowtype .)
    check           reduce using rule 242 (TIPO -> id modulo rowtype .)
    default         reduce using rule 242 (TIPO -> id modulo rowtype .)
    null            reduce using rule 242 (TIPO -> id modulo rowtype .)
    primary         reduce using rule 242 (TIPO -> id modulo rowtype .)
    references      reduce using rule 242 (TIPO -> id modulo rowtype .)
    asc             reduce using rule 242 (TIPO -> id modulo rowtype .)
    desc            reduce using rule 242 (TIPO -> id modulo rowtype .)
    dospuntos       reduce using rule 242 (TIPO -> id modulo rowtype .)
    language        reduce using rule 242 (TIPO -> id modulo rowtype .)
    do              reduce using rule 242 (TIPO -> id modulo rowtype .)
    declare         reduce using rule 242 (TIPO -> id modulo rowtype .)
    if              reduce using rule 242 (TIPO -> id modulo rowtype .)
    raise           reduce using rule 242 (TIPO -> id modulo rowtype .)
    begin           reduce using rule 242 (TIPO -> id modulo rowtype .)
    execute         reduce using rule 242 (TIPO -> id modulo rowtype .)
    return          reduce using rule 242 (TIPO -> id modulo rowtype .)
    insert          reduce using rule 242 (TIPO -> id modulo rowtype .)
    select          reduce using rule 242 (TIPO -> id modulo rowtype .)
    update          reduce using rule 242 (TIPO -> id modulo rowtype .)
    delete          reduce using rule 242 (TIPO -> id modulo rowtype .)


state 466

    (243) TIPO -> idPunto modulo type .

    r_from          reduce using rule 243 (TIPO -> idPunto modulo type .)
    coma            reduce using rule 243 (TIPO -> idPunto modulo type .)
    where           reduce using rule 243 (TIPO -> idPunto modulo type .)
    group           reduce using rule 243 (TIPO -> idPunto modulo type .)
    having          reduce using rule 243 (TIPO -> idPunto modulo type .)
    union           reduce using rule 243 (TIPO -> idPunto modulo type .)
    intersect       reduce using rule 243 (TIPO -> idPunto modulo type .)
    except          reduce using rule 243 (TIPO -> idPunto modulo type .)
    order           reduce using rule 243 (TIPO -> idPunto modulo type .)
    limit           reduce using rule 243 (TIPO -> idPunto modulo type .)
    offset          reduce using rule 243 (TIPO -> idPunto modulo type .)
    ptcoma          reduce using rule 243 (TIPO -> idPunto modulo type .)
    mas             reduce using rule 243 (TIPO -> idPunto modulo type .)
    menos           reduce using rule 243 (TIPO -> idPunto modulo type .)
    multiplicacion  reduce using rule 243 (TIPO -> idPunto modulo type .)
    division        reduce using rule 243 (TIPO -> idPunto modulo type .)
    modulo          reduce using rule 243 (TIPO -> idPunto modulo type .)
    elevado         reduce using rule 243 (TIPO -> idPunto modulo type .)
    and             reduce using rule 243 (TIPO -> idPunto modulo type .)
    or              reduce using rule 243 (TIPO -> idPunto modulo type .)
    mayor           reduce using rule 243 (TIPO -> idPunto modulo type .)
    menor           reduce using rule 243 (TIPO -> idPunto modulo type .)
    mayor_igual     reduce using rule 243 (TIPO -> idPunto modulo type .)
    menor_igual     reduce using rule 243 (TIPO -> idPunto modulo type .)
    igual           reduce using rule 243 (TIPO -> idPunto modulo type .)
    diferente1      reduce using rule 243 (TIPO -> idPunto modulo type .)
    diferente2      reduce using rule 243 (TIPO -> idPunto modulo type .)
    between         reduce using rule 243 (TIPO -> idPunto modulo type .)
    is              reduce using rule 243 (TIPO -> idPunto modulo type .)
    isnull          reduce using rule 243 (TIPO -> idPunto modulo type .)
    notnull         reduce using rule 243 (TIPO -> idPunto modulo type .)
    as              reduce using rule 243 (TIPO -> idPunto modulo type .)
    cadenaString    reduce using rule 243 (TIPO -> idPunto modulo type .)
    id              reduce using rule 243 (TIPO -> idPunto modulo type .)
    cadena          reduce using rule 243 (TIPO -> idPunto modulo type .)
    in              reduce using rule 243 (TIPO -> idPunto modulo type .)
    not             reduce using rule 243 (TIPO -> idPunto modulo type .)
    like            reduce using rule 243 (TIPO -> idPunto modulo type .)
    then            reduce using rule 243 (TIPO -> idPunto modulo type .)
    when            reduce using rule 243 (TIPO -> idPunto modulo type .)
    parc            reduce using rule 243 (TIPO -> idPunto modulo type .)
    end             reduce using rule 243 (TIPO -> idPunto modulo type .)
    else            reduce using rule 243 (TIPO -> idPunto modulo type .)
    constraint      reduce using rule 243 (TIPO -> idPunto modulo type .)
    unique          reduce using rule 243 (TIPO -> idPunto modulo type .)
    check           reduce using rule 243 (TIPO -> idPunto modulo type .)
    default         reduce using rule 243 (TIPO -> idPunto modulo type .)
    null            reduce using rule 243 (TIPO -> idPunto modulo type .)
    primary         reduce using rule 243 (TIPO -> idPunto modulo type .)
    references      reduce using rule 243 (TIPO -> idPunto modulo type .)
    asc             reduce using rule 243 (TIPO -> idPunto modulo type .)
    desc            reduce using rule 243 (TIPO -> idPunto modulo type .)
    dospuntos       reduce using rule 243 (TIPO -> idPunto modulo type .)
    language        reduce using rule 243 (TIPO -> idPunto modulo type .)
    do              reduce using rule 243 (TIPO -> idPunto modulo type .)
    declare         reduce using rule 243 (TIPO -> idPunto modulo type .)
    if              reduce using rule 243 (TIPO -> idPunto modulo type .)
    raise           reduce using rule 243 (TIPO -> idPunto modulo type .)
    begin           reduce using rule 243 (TIPO -> idPunto modulo type .)
    execute         reduce using rule 243 (TIPO -> idPunto modulo type .)
    return          reduce using rule 243 (TIPO -> idPunto modulo type .)
    insert          reduce using rule 243 (TIPO -> idPunto modulo type .)
    select          reduce using rule 243 (TIPO -> idPunto modulo type .)
    update          reduce using rule 243 (TIPO -> idPunto modulo type .)
    delete          reduce using rule 243 (TIPO -> idPunto modulo type .)


state 467

    (327) EXP -> extract para FIELDS r_from timestamp . cadena parc

    cadena          shift and go to state 557


state 468

    (166) COLDEF -> id TIPO .
    (167) COLDEF -> id TIPO . LOPCOLUMN
    (168) LOPCOLUMN -> . LOPCOLUMN OPCOLUMN
    (169) LOPCOLUMN -> . OPCOLUMN
    (170) OPCOLUMN -> . constraint id unique
    (171) OPCOLUMN -> . unique
    (172) OPCOLUMN -> . constraint id check para CONDCHECK parc
    (173) OPCOLUMN -> . check para CONDCHECK parc
    (174) OPCOLUMN -> . default EXP
    (175) OPCOLUMN -> . not null
    (176) OPCOLUMN -> . null
    (177) OPCOLUMN -> . primary key
    (178) OPCOLUMN -> . references id

    parc            reduce using rule 166 (COLDEF -> id TIPO .)
    coma            reduce using rule 166 (COLDEF -> id TIPO .)
    constraint      shift and go to state 560
    unique          shift and go to state 561
    check           shift and go to state 562
    default         shift and go to state 563
    not             shift and go to state 564
    null            shift and go to state 565
    primary         shift and go to state 566
    references      shift and go to state 567

    LOPCOLUMN                      shift and go to state 558
    OPCOLUMN                       shift and go to state 559

state 469

    (160) CREATETABLE -> create table id para LDEF parc . ptcoma
    (161) CREATETABLE -> create table id para LDEF parc . HERENCIA ptcoma
    (190) HERENCIA -> . inherits para id parc

    ptcoma          shift and go to state 568
    inherits        shift and go to state 570

    HERENCIA                       shift and go to state 569

state 470

    (162) LDEF -> LDEF coma . COLDEF
    (164) COLDEF -> . OPCONST
    (165) COLDEF -> . constraint id OPCONST
    (166) COLDEF -> . id TIPO
    (167) COLDEF -> . id TIPO LOPCOLUMN
    (179) OPCONST -> . primary key para LEXP parc
    (180) OPCONST -> . foreign key para LEXP parc references id para LEXP parc
    (181) OPCONST -> . unique para LEXP parc
    (182) OPCONST -> . check para CONDCHECK parc

    constraint      shift and go to state 361
    id              shift and go to state 357
    primary         shift and go to state 362
    foreign         shift and go to state 363
    unique          shift and go to state 364
    check           shift and go to state 365

    COLDEF                         shift and go to state 571
    OPCONST                        shift and go to state 360

state 471

    (165) COLDEF -> constraint id . OPCONST
    (179) OPCONST -> . primary key para LEXP parc
    (180) OPCONST -> . foreign key para LEXP parc references id para LEXP parc
    (181) OPCONST -> . unique para LEXP parc
    (182) OPCONST -> . check para CONDCHECK parc

    primary         shift and go to state 362
    foreign         shift and go to state 363
    unique          shift and go to state 364
    check           shift and go to state 365

    OPCONST                        shift and go to state 572

state 472

    (179) OPCONST -> primary key . para LEXP parc

    para            shift and go to state 573


state 473

    (180) OPCONST -> foreign key . para LEXP parc references id para LEXP parc

    para            shift and go to state 574


state 474

    (181) OPCONST -> unique para . LEXP parc
    (226) LEXP -> . LEXP coma EXP
    (227) LEXP -> . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 575
    EXP                            shift and go to state 57
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 475

    (182) OPCONST -> check para . CONDCHECK parc
    (183) CONDCHECK -> . EXP mayor EXP
    (184) CONDCHECK -> . EXP menor EXP
    (185) CONDCHECK -> . EXP mayor_igual EXP
    (186) CONDCHECK -> . EXP menor_igual EXP
    (187) CONDCHECK -> . EXP igual EXP
    (188) CONDCHECK -> . EXP diferente1 EXP
    (189) CONDCHECK -> . EXP diferente2 EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    CONDCHECK                      shift and go to state 576
    EXP                            shift and go to state 577
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 476

    (191) CREATETYPE -> create type id as enum para . LEXP parc
    (226) LEXP -> . LEXP coma EXP
    (227) LEXP -> . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 578
    EXP                            shift and go to state 57
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 477

    (143) CREATEDB -> create RD if not exist id .
    (144) CREATEDB -> create RD if not exist id . OPCCDB
    (147) OPCCDB -> . PROPIETARIO
    (148) OPCCDB -> . MODO
    (149) OPCCDB -> . PROPIETARIO MODO
    (152) PROPIETARIO -> . owner igual id
    (153) PROPIETARIO -> . owner igual cadena
    (154) PROPIETARIO -> . owner igual cadenaString
    (155) PROPIETARIO -> . owner id
    (156) PROPIETARIO -> . owner cadena
    (157) PROPIETARIO -> . owner cadenaString
    (158) MODO -> . mode igual int
    (159) MODO -> . mode int

    ptcoma          reduce using rule 143 (CREATEDB -> create RD if not exist id .)
    owner           shift and go to state 269
    mode            shift and go to state 270

    OPCCDB                         shift and go to state 579
    PROPIETARIO                    shift and go to state 267
    MODO                           shift and go to state 268

state 478

    (152) PROPIETARIO -> owner igual id .

    mode            reduce using rule 152 (PROPIETARIO -> owner igual id .)
    ptcoma          reduce using rule 152 (PROPIETARIO -> owner igual id .)


state 479

    (153) PROPIETARIO -> owner igual cadena .

    mode            reduce using rule 153 (PROPIETARIO -> owner igual cadena .)
    ptcoma          reduce using rule 153 (PROPIETARIO -> owner igual cadena .)


state 480

    (154) PROPIETARIO -> owner igual cadenaString .

    mode            reduce using rule 154 (PROPIETARIO -> owner igual cadenaString .)
    ptcoma          reduce using rule 154 (PROPIETARIO -> owner igual cadenaString .)


state 481

    (158) MODO -> mode igual int .

    ptcoma          reduce using rule 158 (MODO -> mode igual int .)


state 482

    (47) CREATEINDEX -> create index id on id para . LEXP parc
    (50) CREATEINDEX -> create index id on id para . id ORDEN parc
    (51) CREATEINDEX -> create index id on id para . id id ORDEN parc
    (52) CREATEINDEX -> create index id on id para . id id parc
    (226) LEXP -> . LEXP coma EXP
    (227) LEXP -> . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    id              shift and go to state 580
    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 581
    EXP                            shift and go to state 57
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 483

    (49) CREATEINDEX -> create index id on id using . hash para LEXP parc

    hash            shift and go to state 582


state 484

    (48) CREATEINDEX -> create unique index id on id . para LEXP parc

    para            shift and go to state 583


state 485

    (43) LPARAM -> id TIPO .

    parc            reduce using rule 43 (LPARAM -> id TIPO .)
    coma            reduce using rule 43 (LPARAM -> id TIPO .)


state 486

    (31) PROCEDIMIENTOS -> create procedure id para LPARAM parc . LENGUAJE LCONTENIDOP
    (33) PROCEDIMIENTOS -> create procedure id para LPARAM parc . LCONTENIDOP LENGUAJE
    (44) LENGUAJE -> . language plpgsql
    (45) LENGUAJE -> . language plpgsql ptcoma
    (35) LCONTENIDOP -> . LCONTENIDOP CONTENIDOP
    (36) LCONTENIDOP -> . CONTENIDOP
    (37) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (38) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn
    (39) CONTENIDOP -> . LISTACONTENIDO
    (84) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (85) LISTACONTENIDO -> . CONTENIDO
    (86) CONTENIDO -> . ASIGNACION ptcoma
    (87) CONTENIDO -> . CONDICIONIF ptcoma
    (88) CONTENIDO -> . RAISE ptcoma
    (89) CONTENIDO -> . BEGINEND ptcoma
    (90) CONTENIDO -> . CALLPROCEDURE ptcoma
    (91) CONTENIDO -> . declare LDEC
    (92) CONTENIDO -> . RETURN ptcoma
    (93) CONTENIDO -> . INSERT ptcoma
    (94) CONTENIDO -> . SELECT ptcoma
    (95) CONTENIDO -> . UPDATE ptcoma
    (96) CONTENIDO -> . DELETE ptcoma
    (71) ASIGNACION -> . id dospuntos igual EXP
    (72) ASIGNACION -> . id igual EXP
    (73) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (97) RAISE -> . raise LEVEL FORMAT
    (98) RAISE -> . raise LEVEL EXP
    (99) RAISE -> . raise LEVEL
    (100) RAISE -> . raise
    (101) RAISE -> . raise LEVEL cadena coma id
    (46) BEGINEND -> . begin LISTACONTENIDO end
    (30) CALLPROCEDURE -> . execute id para parc
    (24) RETURN -> . return EXP
    (114) INSERT -> . insert into id values para LEXP parc
    (115) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (220) UPDATE -> . update id set LCAMPOS WHERE
    (223) DELETE -> . delete r_from id WHERE

    language        shift and go to state 490
    as              shift and go to state 492
    do              shift and go to state 494
    declare         shift and go to state 296
    id              shift and go to state 17
    if              shift and go to state 30
    raise           shift and go to state 302
    begin           shift and go to state 303
    execute         shift and go to state 34
    return          shift and go to state 304
    insert          shift and go to state 31
    select          shift and go to state 24
    update          shift and go to state 26
    delete          shift and go to state 27

    LENGUAJE                       shift and go to state 584
    LCONTENIDOP                    shift and go to state 585
    CONTENIDOP                     shift and go to state 491
    LISTACONTENIDO                 shift and go to state 493
    CONTENIDO                      shift and go to state 290
    ASIGNACION                     shift and go to state 291
    CONDICIONIF                    shift and go to state 292
    RAISE                          shift and go to state 293
    BEGINEND                       shift and go to state 294
    CALLPROCEDURE                  shift and go to state 295
    RETURN                         shift and go to state 297
    INSERT                         shift and go to state 298
    SELECT                         shift and go to state 299
    UPDATE                         shift and go to state 300
    DELETE                         shift and go to state 301

state 487

    (40) LPARAM -> LPARAM coma . inout id TIPO
    (41) LPARAM -> LPARAM coma . id TIPO

    inout           shift and go to state 586
    id              shift and go to state 587


state 488

    (32) PROCEDIMIENTOS -> create procedure id para parc LENGUAJE . LCONTENIDOP
    (35) LCONTENIDOP -> . LCONTENIDOP CONTENIDOP
    (36) LCONTENIDOP -> . CONTENIDOP
    (37) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (38) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn
    (39) CONTENIDOP -> . LISTACONTENIDO
    (84) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (85) LISTACONTENIDO -> . CONTENIDO
    (86) CONTENIDO -> . ASIGNACION ptcoma
    (87) CONTENIDO -> . CONDICIONIF ptcoma
    (88) CONTENIDO -> . RAISE ptcoma
    (89) CONTENIDO -> . BEGINEND ptcoma
    (90) CONTENIDO -> . CALLPROCEDURE ptcoma
    (91) CONTENIDO -> . declare LDEC
    (92) CONTENIDO -> . RETURN ptcoma
    (93) CONTENIDO -> . INSERT ptcoma
    (94) CONTENIDO -> . SELECT ptcoma
    (95) CONTENIDO -> . UPDATE ptcoma
    (96) CONTENIDO -> . DELETE ptcoma
    (71) ASIGNACION -> . id dospuntos igual EXP
    (72) ASIGNACION -> . id igual EXP
    (73) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (97) RAISE -> . raise LEVEL FORMAT
    (98) RAISE -> . raise LEVEL EXP
    (99) RAISE -> . raise LEVEL
    (100) RAISE -> . raise
    (101) RAISE -> . raise LEVEL cadena coma id
    (46) BEGINEND -> . begin LISTACONTENIDO end
    (30) CALLPROCEDURE -> . execute id para parc
    (24) RETURN -> . return EXP
    (114) INSERT -> . insert into id values para LEXP parc
    (115) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (220) UPDATE -> . update id set LCAMPOS WHERE
    (223) DELETE -> . delete r_from id WHERE

    as              shift and go to state 492
    do              shift and go to state 494
    declare         shift and go to state 296
    id              shift and go to state 17
    if              shift and go to state 30
    raise           shift and go to state 302
    begin           shift and go to state 303
    execute         shift and go to state 34
    return          shift and go to state 304
    insert          shift and go to state 31
    select          shift and go to state 24
    update          shift and go to state 26
    delete          shift and go to state 27

    LCONTENIDOP                    shift and go to state 588
    CONTENIDOP                     shift and go to state 491
    LISTACONTENIDO                 shift and go to state 493
    CONTENIDO                      shift and go to state 290
    ASIGNACION                     shift and go to state 291
    CONDICIONIF                    shift and go to state 292
    RAISE                          shift and go to state 293
    BEGINEND                       shift and go to state 294
    CALLPROCEDURE                  shift and go to state 295
    RETURN                         shift and go to state 297
    INSERT                         shift and go to state 298
    SELECT                         shift and go to state 299
    UPDATE                         shift and go to state 300
    DELETE                         shift and go to state 301

state 489

    (34) PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP . LENGUAJE
    (35) LCONTENIDOP -> LCONTENIDOP . CONTENIDOP
    (44) LENGUAJE -> . language plpgsql
    (45) LENGUAJE -> . language plpgsql ptcoma
    (37) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (38) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn
    (39) CONTENIDOP -> . LISTACONTENIDO
    (84) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (85) LISTACONTENIDO -> . CONTENIDO
    (86) CONTENIDO -> . ASIGNACION ptcoma
    (87) CONTENIDO -> . CONDICIONIF ptcoma
    (88) CONTENIDO -> . RAISE ptcoma
    (89) CONTENIDO -> . BEGINEND ptcoma
    (90) CONTENIDO -> . CALLPROCEDURE ptcoma
    (91) CONTENIDO -> . declare LDEC
    (92) CONTENIDO -> . RETURN ptcoma
    (93) CONTENIDO -> . INSERT ptcoma
    (94) CONTENIDO -> . SELECT ptcoma
    (95) CONTENIDO -> . UPDATE ptcoma
    (96) CONTENIDO -> . DELETE ptcoma
    (71) ASIGNACION -> . id dospuntos igual EXP
    (72) ASIGNACION -> . id igual EXP
    (73) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (97) RAISE -> . raise LEVEL FORMAT
    (98) RAISE -> . raise LEVEL EXP
    (99) RAISE -> . raise LEVEL
    (100) RAISE -> . raise
    (101) RAISE -> . raise LEVEL cadena coma id
    (46) BEGINEND -> . begin LISTACONTENIDO end
    (30) CALLPROCEDURE -> . execute id para parc
    (24) RETURN -> . return EXP
    (114) INSERT -> . insert into id values para LEXP parc
    (115) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (220) UPDATE -> . update id set LCAMPOS WHERE
    (223) DELETE -> . delete r_from id WHERE

    language        shift and go to state 490
    as              shift and go to state 492
    do              shift and go to state 494
    declare         shift and go to state 296
    id              shift and go to state 17
    if              shift and go to state 30
    raise           shift and go to state 302
    begin           shift and go to state 303
    execute         shift and go to state 34
    return          shift and go to state 304
    insert          shift and go to state 31
    select          shift and go to state 24
    update          shift and go to state 26
    delete          shift and go to state 27

    LENGUAJE                       shift and go to state 589
    CONTENIDOP                     shift and go to state 590
    LISTACONTENIDO                 shift and go to state 493
    CONTENIDO                      shift and go to state 290
    ASIGNACION                     shift and go to state 291
    CONDICIONIF                    shift and go to state 292
    RAISE                          shift and go to state 293
    BEGINEND                       shift and go to state 294
    CALLPROCEDURE                  shift and go to state 295
    RETURN                         shift and go to state 297
    INSERT                         shift and go to state 298
    SELECT                         shift and go to state 299
    UPDATE                         shift and go to state 300
    DELETE                         shift and go to state 301

state 490

    (44) LENGUAJE -> language . plpgsql
    (45) LENGUAJE -> language . plpgsql ptcoma

    plpgsql         shift and go to state 591


state 491

    (36) LCONTENIDOP -> CONTENIDOP .

    language        reduce using rule 36 (LCONTENIDOP -> CONTENIDOP .)
    as              reduce using rule 36 (LCONTENIDOP -> CONTENIDOP .)
    do              reduce using rule 36 (LCONTENIDOP -> CONTENIDOP .)
    declare         reduce using rule 36 (LCONTENIDOP -> CONTENIDOP .)
    id              reduce using rule 36 (LCONTENIDOP -> CONTENIDOP .)
    if              reduce using rule 36 (LCONTENIDOP -> CONTENIDOP .)
    raise           reduce using rule 36 (LCONTENIDOP -> CONTENIDOP .)
    begin           reduce using rule 36 (LCONTENIDOP -> CONTENIDOP .)
    execute         reduce using rule 36 (LCONTENIDOP -> CONTENIDOP .)
    return          reduce using rule 36 (LCONTENIDOP -> CONTENIDOP .)
    insert          reduce using rule 36 (LCONTENIDOP -> CONTENIDOP .)
    select          reduce using rule 36 (LCONTENIDOP -> CONTENIDOP .)
    update          reduce using rule 36 (LCONTENIDOP -> CONTENIDOP .)
    delete          reduce using rule 36 (LCONTENIDOP -> CONTENIDOP .)
    use             reduce using rule 36 (LCONTENIDOP -> CONTENIDOP .)
    create          reduce using rule 36 (LCONTENIDOP -> CONTENIDOP .)
    alter           reduce using rule 36 (LCONTENIDOP -> CONTENIDOP .)
    drop            reduce using rule 36 (LCONTENIDOP -> CONTENIDOP .)
    case            reduce using rule 36 (LCONTENIDOP -> CONTENIDOP .)
    show            reduce using rule 36 (LCONTENIDOP -> CONTENIDOP .)
    $end            reduce using rule 36 (LCONTENIDOP -> CONTENIDOP .)


state 492

    (37) CONTENIDOP -> as . dolarn LISTACONTENIDO dolarn

    dolarn          shift and go to state 592


state 493

    (39) CONTENIDOP -> LISTACONTENIDO .
    (84) LISTACONTENIDO -> LISTACONTENIDO . CONTENIDO
    (86) CONTENIDO -> . ASIGNACION ptcoma
    (87) CONTENIDO -> . CONDICIONIF ptcoma
    (88) CONTENIDO -> . RAISE ptcoma
    (89) CONTENIDO -> . BEGINEND ptcoma
    (90) CONTENIDO -> . CALLPROCEDURE ptcoma
    (91) CONTENIDO -> . declare LDEC
    (92) CONTENIDO -> . RETURN ptcoma
    (93) CONTENIDO -> . INSERT ptcoma
    (94) CONTENIDO -> . SELECT ptcoma
    (95) CONTENIDO -> . UPDATE ptcoma
    (96) CONTENIDO -> . DELETE ptcoma
    (71) ASIGNACION -> . id dospuntos igual EXP
    (72) ASIGNACION -> . id igual EXP
    (73) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (97) RAISE -> . raise LEVEL FORMAT
    (98) RAISE -> . raise LEVEL EXP
    (99) RAISE -> . raise LEVEL
    (100) RAISE -> . raise
    (101) RAISE -> . raise LEVEL cadena coma id
    (46) BEGINEND -> . begin LISTACONTENIDO end
    (30) CALLPROCEDURE -> . execute id para parc
    (24) RETURN -> . return EXP
    (114) INSERT -> . insert into id values para LEXP parc
    (115) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (220) UPDATE -> . update id set LCAMPOS WHERE
    (223) DELETE -> . delete r_from id WHERE

  ! shift/reduce conflict for declare resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for if resolved as shift
  ! shift/reduce conflict for raise resolved as shift
  ! shift/reduce conflict for begin resolved as shift
  ! shift/reduce conflict for execute resolved as shift
  ! shift/reduce conflict for return resolved as shift
  ! shift/reduce conflict for insert resolved as shift
  ! shift/reduce conflict for select resolved as shift
  ! shift/reduce conflict for update resolved as shift
  ! shift/reduce conflict for delete resolved as shift
    language        reduce using rule 39 (CONTENIDOP -> LISTACONTENIDO .)
    as              reduce using rule 39 (CONTENIDOP -> LISTACONTENIDO .)
    do              reduce using rule 39 (CONTENIDOP -> LISTACONTENIDO .)
    use             reduce using rule 39 (CONTENIDOP -> LISTACONTENIDO .)
    create          reduce using rule 39 (CONTENIDOP -> LISTACONTENIDO .)
    alter           reduce using rule 39 (CONTENIDOP -> LISTACONTENIDO .)
    drop            reduce using rule 39 (CONTENIDOP -> LISTACONTENIDO .)
    case            reduce using rule 39 (CONTENIDOP -> LISTACONTENIDO .)
    show            reduce using rule 39 (CONTENIDOP -> LISTACONTENIDO .)
    $end            reduce using rule 39 (CONTENIDOP -> LISTACONTENIDO .)
    declare         shift and go to state 296
    id              shift and go to state 17
    if              shift and go to state 30
    raise           shift and go to state 302
    begin           shift and go to state 303
    execute         shift and go to state 34
    return          shift and go to state 304
    insert          shift and go to state 31
    select          shift and go to state 24
    update          shift and go to state 26
    delete          shift and go to state 27

  ! declare         [ reduce using rule 39 (CONTENIDOP -> LISTACONTENIDO .) ]
  ! id              [ reduce using rule 39 (CONTENIDOP -> LISTACONTENIDO .) ]
  ! if              [ reduce using rule 39 (CONTENIDOP -> LISTACONTENIDO .) ]
  ! raise           [ reduce using rule 39 (CONTENIDOP -> LISTACONTENIDO .) ]
  ! begin           [ reduce using rule 39 (CONTENIDOP -> LISTACONTENIDO .) ]
  ! execute         [ reduce using rule 39 (CONTENIDOP -> LISTACONTENIDO .) ]
  ! return          [ reduce using rule 39 (CONTENIDOP -> LISTACONTENIDO .) ]
  ! insert          [ reduce using rule 39 (CONTENIDOP -> LISTACONTENIDO .) ]
  ! select          [ reduce using rule 39 (CONTENIDOP -> LISTACONTENIDO .) ]
  ! update          [ reduce using rule 39 (CONTENIDOP -> LISTACONTENIDO .) ]
  ! delete          [ reduce using rule 39 (CONTENIDOP -> LISTACONTENIDO .) ]

    CONTENIDO                      shift and go to state 403
    ASIGNACION                     shift and go to state 291
    CONDICIONIF                    shift and go to state 292
    RAISE                          shift and go to state 293
    BEGINEND                       shift and go to state 294
    CALLPROCEDURE                  shift and go to state 295
    RETURN                         shift and go to state 297
    INSERT                         shift and go to state 298
    SELECT                         shift and go to state 299
    UPDATE                         shift and go to state 300
    DELETE                         shift and go to state 301

state 494

    (38) CONTENIDOP -> do . dolarn LISTACONTENIDO dolarn

    dolarn          shift and go to state 593


state 495

    (42) LPARAM -> inout id . TIPO
    (228) TIPO -> . interval cadena
    (229) TIPO -> . decimal para int coma int parc
    (230) TIPO -> . decimal para int parc
    (231) TIPO -> . decimal
    (232) TIPO -> . numeric para int coma int parc
    (233) TIPO -> . numeric para int parc
    (234) TIPO -> . numeric
    (235) TIPO -> . varchar para int parc
    (236) TIPO -> . timestamp para int parc
    (237) TIPO -> . character para int parc
    (238) TIPO -> . interval para int parc
    (239) TIPO -> . char para int parc
    (240) TIPO -> . time para int parc
    (241) TIPO -> . character varying para int parc
    (242) TIPO -> . id modulo rowtype
    (243) TIPO -> . idPunto modulo type
    (244) TIPO -> . timestamp para int parc without time zone
    (245) TIPO -> . timestamp para int parc with time zone
    (246) TIPO -> . time para int parc without time zone
    (247) TIPO -> . time para int parc with time zone
    (248) TIPO -> . interval para int parc cadena
    (249) TIPO -> . smallint
    (250) TIPO -> . integer
    (251) TIPO -> . r_int
    (252) TIPO -> . bigint
    (253) TIPO -> . real
    (254) TIPO -> . double precision
    (255) TIPO -> . money
    (256) TIPO -> . text
    (257) TIPO -> . timestamp
    (258) TIPO -> . date
    (259) TIPO -> . time
    (260) TIPO -> . interval
    (261) TIPO -> . boolean
    (262) TIPO -> . record
    (263) TIPO -> . varchar
    (264) TIPO -> . timestamp without time zone
    (265) TIPO -> . timestamp with time zone
    (266) TIPO -> . time without time zone
    (267) TIPO -> . time with time zone
    (268) TIPO -> . id

    interval        shift and go to state 231
    decimal         shift and go to state 232
    numeric         shift and go to state 233
    varchar         shift and go to state 234
    timestamp       shift and go to state 235
    character       shift and go to state 236
    char            shift and go to state 237
    time            shift and go to state 238
    id              shift and go to state 239
    idPunto         shift and go to state 240
    smallint        shift and go to state 241
    integer         shift and go to state 242
    r_int           shift and go to state 243
    bigint          shift and go to state 244
    real            shift and go to state 245
    double          shift and go to state 246
    money           shift and go to state 247
    text            shift and go to state 248
    date            shift and go to state 249
    boolean         shift and go to state 250
    record          shift and go to state 251

    TIPO                           shift and go to state 594

state 496

    (25) FUNCIONES -> create function id para LPARAM parc . RETURNP LENGUAJE LCONTENIDOP
    (27) FUNCIONES -> create function id para LPARAM parc . RETURNP LCONTENIDOP LENGUAJE
    (29) RETURNP -> . returns TIPO

    returns         shift and go to state 498

    RETURNP                        shift and go to state 595

state 497

    (26) FUNCIONES -> create function id para parc RETURNP . LENGUAJE LCONTENIDOP
    (28) FUNCIONES -> create function id para parc RETURNP . LCONTENIDOP LENGUAJE
    (44) LENGUAJE -> . language plpgsql
    (45) LENGUAJE -> . language plpgsql ptcoma
    (35) LCONTENIDOP -> . LCONTENIDOP CONTENIDOP
    (36) LCONTENIDOP -> . CONTENIDOP
    (37) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (38) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn
    (39) CONTENIDOP -> . LISTACONTENIDO
    (84) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (85) LISTACONTENIDO -> . CONTENIDO
    (86) CONTENIDO -> . ASIGNACION ptcoma
    (87) CONTENIDO -> . CONDICIONIF ptcoma
    (88) CONTENIDO -> . RAISE ptcoma
    (89) CONTENIDO -> . BEGINEND ptcoma
    (90) CONTENIDO -> . CALLPROCEDURE ptcoma
    (91) CONTENIDO -> . declare LDEC
    (92) CONTENIDO -> . RETURN ptcoma
    (93) CONTENIDO -> . INSERT ptcoma
    (94) CONTENIDO -> . SELECT ptcoma
    (95) CONTENIDO -> . UPDATE ptcoma
    (96) CONTENIDO -> . DELETE ptcoma
    (71) ASIGNACION -> . id dospuntos igual EXP
    (72) ASIGNACION -> . id igual EXP
    (73) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (97) RAISE -> . raise LEVEL FORMAT
    (98) RAISE -> . raise LEVEL EXP
    (99) RAISE -> . raise LEVEL
    (100) RAISE -> . raise
    (101) RAISE -> . raise LEVEL cadena coma id
    (46) BEGINEND -> . begin LISTACONTENIDO end
    (30) CALLPROCEDURE -> . execute id para parc
    (24) RETURN -> . return EXP
    (114) INSERT -> . insert into id values para LEXP parc
    (115) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (220) UPDATE -> . update id set LCAMPOS WHERE
    (223) DELETE -> . delete r_from id WHERE

    language        shift and go to state 490
    as              shift and go to state 492
    do              shift and go to state 494
    declare         shift and go to state 296
    id              shift and go to state 17
    if              shift and go to state 30
    raise           shift and go to state 302
    begin           shift and go to state 303
    execute         shift and go to state 34
    return          shift and go to state 304
    insert          shift and go to state 31
    select          shift and go to state 24
    update          shift and go to state 26
    delete          shift and go to state 27

    LENGUAJE                       shift and go to state 596
    LCONTENIDOP                    shift and go to state 597
    CONTENIDOP                     shift and go to state 491
    LISTACONTENIDO                 shift and go to state 493
    CONTENIDO                      shift and go to state 290
    ASIGNACION                     shift and go to state 291
    CONDICIONIF                    shift and go to state 292
    RAISE                          shift and go to state 293
    BEGINEND                       shift and go to state 294
    CALLPROCEDURE                  shift and go to state 295
    RETURN                         shift and go to state 297
    INSERT                         shift and go to state 298
    SELECT                         shift and go to state 299
    UPDATE                         shift and go to state 300
    DELETE                         shift and go to state 301

state 498

    (29) RETURNP -> returns . TIPO
    (228) TIPO -> . interval cadena
    (229) TIPO -> . decimal para int coma int parc
    (230) TIPO -> . decimal para int parc
    (231) TIPO -> . decimal
    (232) TIPO -> . numeric para int coma int parc
    (233) TIPO -> . numeric para int parc
    (234) TIPO -> . numeric
    (235) TIPO -> . varchar para int parc
    (236) TIPO -> . timestamp para int parc
    (237) TIPO -> . character para int parc
    (238) TIPO -> . interval para int parc
    (239) TIPO -> . char para int parc
    (240) TIPO -> . time para int parc
    (241) TIPO -> . character varying para int parc
    (242) TIPO -> . id modulo rowtype
    (243) TIPO -> . idPunto modulo type
    (244) TIPO -> . timestamp para int parc without time zone
    (245) TIPO -> . timestamp para int parc with time zone
    (246) TIPO -> . time para int parc without time zone
    (247) TIPO -> . time para int parc with time zone
    (248) TIPO -> . interval para int parc cadena
    (249) TIPO -> . smallint
    (250) TIPO -> . integer
    (251) TIPO -> . r_int
    (252) TIPO -> . bigint
    (253) TIPO -> . real
    (254) TIPO -> . double precision
    (255) TIPO -> . money
    (256) TIPO -> . text
    (257) TIPO -> . timestamp
    (258) TIPO -> . date
    (259) TIPO -> . time
    (260) TIPO -> . interval
    (261) TIPO -> . boolean
    (262) TIPO -> . record
    (263) TIPO -> . varchar
    (264) TIPO -> . timestamp without time zone
    (265) TIPO -> . timestamp with time zone
    (266) TIPO -> . time without time zone
    (267) TIPO -> . time with time zone
    (268) TIPO -> . id

    interval        shift and go to state 231
    decimal         shift and go to state 232
    numeric         shift and go to state 233
    varchar         shift and go to state 234
    timestamp       shift and go to state 235
    character       shift and go to state 236
    char            shift and go to state 237
    time            shift and go to state 238
    id              shift and go to state 239
    idPunto         shift and go to state 240
    smallint        shift and go to state 241
    integer         shift and go to state 242
    r_int           shift and go to state 243
    bigint          shift and go to state 244
    real            shift and go to state 245
    double          shift and go to state 246
    money           shift and go to state 247
    text            shift and go to state 248
    date            shift and go to state 249
    boolean         shift and go to state 250
    record          shift and go to state 251

    TIPO                           shift and go to state 598

state 499

    (222) LCAMPOS -> id igual EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    coma            reduce using rule 222 (LCAMPOS -> id igual EXP .)
    where           reduce using rule 222 (LCAMPOS -> id igual EXP .)
    ptcoma          reduce using rule 222 (LCAMPOS -> id igual EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    and             shift and go to state 128
    or              shift and go to state 129
    mayor           shift and go to state 130
    menor           shift and go to state 131
    mayor_igual     shift and go to state 132
    menor_igual     shift and go to state 133
    igual           shift and go to state 134
    diferente1      shift and go to state 135
    diferente2      shift and go to state 136
    between         shift and go to state 137
    is              shift and go to state 138
    isnull          shift and go to state 140
    notnull         shift and go to state 141
    as              shift and go to state 142
    cadenaString    shift and go to state 143
    id              shift and go to state 144
    cadena          shift and go to state 145
    in              shift and go to state 146
    not             shift and go to state 139
    like            shift and go to state 147


state 500

    (221) LCAMPOS -> LCAMPOS coma id . igual EXP

    igual           shift and go to state 599


state 501

    (121) ALTER -> alter databases id rename to id .

    ptcoma          reduce using rule 121 (ALTER -> alter databases id rename to id .)


state 502

    (122) ALTER -> alter databases id owner to id .

    ptcoma          reduce using rule 122 (ALTER -> alter databases id owner to id .)


state 503

    (133) OP -> alter column id . set not null
    (134) OP -> alter column id . set null
    (139) OP -> alter column id . type TIPO

    set             shift and go to state 600
    type            shift and go to state 601


state 504

    (124) LOP -> LOP coma OP .

    coma            reduce using rule 124 (LOP -> LOP coma OP .)
    ptcoma          reduce using rule 124 (LOP -> LOP coma OP .)


state 505

    (126) OP -> add column id . TIPO
    (228) TIPO -> . interval cadena
    (229) TIPO -> . decimal para int coma int parc
    (230) TIPO -> . decimal para int parc
    (231) TIPO -> . decimal
    (232) TIPO -> . numeric para int coma int parc
    (233) TIPO -> . numeric para int parc
    (234) TIPO -> . numeric
    (235) TIPO -> . varchar para int parc
    (236) TIPO -> . timestamp para int parc
    (237) TIPO -> . character para int parc
    (238) TIPO -> . interval para int parc
    (239) TIPO -> . char para int parc
    (240) TIPO -> . time para int parc
    (241) TIPO -> . character varying para int parc
    (242) TIPO -> . id modulo rowtype
    (243) TIPO -> . idPunto modulo type
    (244) TIPO -> . timestamp para int parc without time zone
    (245) TIPO -> . timestamp para int parc with time zone
    (246) TIPO -> . time para int parc without time zone
    (247) TIPO -> . time para int parc with time zone
    (248) TIPO -> . interval para int parc cadena
    (249) TIPO -> . smallint
    (250) TIPO -> . integer
    (251) TIPO -> . r_int
    (252) TIPO -> . bigint
    (253) TIPO -> . real
    (254) TIPO -> . double precision
    (255) TIPO -> . money
    (256) TIPO -> . text
    (257) TIPO -> . timestamp
    (258) TIPO -> . date
    (259) TIPO -> . time
    (260) TIPO -> . interval
    (261) TIPO -> . boolean
    (262) TIPO -> . record
    (263) TIPO -> . varchar
    (264) TIPO -> . timestamp without time zone
    (265) TIPO -> . timestamp with time zone
    (266) TIPO -> . time without time zone
    (267) TIPO -> . time with time zone
    (268) TIPO -> . id

    interval        shift and go to state 231
    decimal         shift and go to state 232
    numeric         shift and go to state 233
    varchar         shift and go to state 234
    timestamp       shift and go to state 235
    character       shift and go to state 236
    char            shift and go to state 237
    time            shift and go to state 238
    id              shift and go to state 239
    idPunto         shift and go to state 240
    smallint        shift and go to state 241
    integer         shift and go to state 242
    r_int           shift and go to state 243
    bigint          shift and go to state 244
    real            shift and go to state 245
    double          shift and go to state 246
    money           shift and go to state 247
    text            shift and go to state 248
    date            shift and go to state 249
    boolean         shift and go to state 250
    record          shift and go to state 251

    TIPO                           shift and go to state 602

state 506

    (127) OP -> add check para . CONDCHECK parc
    (183) CONDCHECK -> . EXP mayor EXP
    (184) CONDCHECK -> . EXP menor EXP
    (185) CONDCHECK -> . EXP mayor_igual EXP
    (186) CONDCHECK -> . EXP menor_igual EXP
    (187) CONDCHECK -> . EXP igual EXP
    (188) CONDCHECK -> . EXP diferente1 EXP
    (189) CONDCHECK -> . EXP diferente2 EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    CONDCHECK                      shift and go to state 603
    EXP                            shift and go to state 577
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 507

    (128) OP -> add constraint id . check para CONDCHECK parc
    (129) OP -> add constraint id . unique para LEXP parc
    (132) OP -> add constraint id . foreign key para LEXP parc references id para LEXP parc

    check           shift and go to state 604
    unique          shift and go to state 605
    foreign         shift and go to state 606


state 508

    (130) OP -> add unique para . LEXP parc
    (226) LEXP -> . LEXP coma EXP
    (227) LEXP -> . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 607
    EXP                            shift and go to state 57
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 509

    (131) OP -> add foreign key . para LEXP parc references id para LEXP parc

    para            shift and go to state 608


state 510

    (135) OP -> drop constraint id .

    coma            reduce using rule 135 (OP -> drop constraint id .)
    ptcoma          reduce using rule 135 (OP -> drop constraint id .)


state 511

    (136) OP -> drop column LEXP .
    (226) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    ptcoma          reduce using rule 136 (OP -> drop column LEXP .)
    coma            shift and go to state 121

  ! coma            [ reduce using rule 136 (OP -> drop column LEXP .) ]


state 512

    (137) OP -> drop check id .

    coma            reduce using rule 137 (OP -> drop check id .)
    ptcoma          reduce using rule 137 (OP -> drop check id .)


state 513

    (138) OP -> rename column id . to id

    to              shift and go to state 609


state 514

    (73) CONDICIONIF -> if EXP then LISTACONTENIDO ELSEF end . if

    if              shift and go to state 610


state 515

    (75) CONDICIONIF -> if EXP then LISTACONTENIDO end if .

    ptcoma          reduce using rule 75 (CONDICIONIF -> if EXP then LISTACONTENIDO end if .)


state 516

    (74) CONDICIONIF -> if EXP then LISTACONTENIDO LELIF end . if

    if              shift and go to state 611


state 517

    (76) CONDICIONIF -> if EXP then LISTACONTENIDO LELIF ELSEF . end if

    end             shift and go to state 612


state 518

    (77) LELIF -> LELIF elsif . EXP then LISTACONTENIDO
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 613
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 519

    (78) LELIF -> elsif EXP . then LISTACONTENIDO
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    then            shift and go to state 614
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    and             shift and go to state 128
    or              shift and go to state 129
    mayor           shift and go to state 130
    menor           shift and go to state 131
    mayor_igual     shift and go to state 132
    menor_igual     shift and go to state 133
    igual           shift and go to state 134
    diferente1      shift and go to state 135
    diferente2      shift and go to state 136
    between         shift and go to state 137
    is              shift and go to state 138
    isnull          shift and go to state 140
    notnull         shift and go to state 141
    as              shift and go to state 142
    cadenaString    shift and go to state 143
    id              shift and go to state 144
    cadena          shift and go to state 145
    in              shift and go to state 146
    not             shift and go to state 139
    like            shift and go to state 147


state 520

    (61) LDEC -> LDEC DECLARACIONES .

    id              reduce using rule 61 (LDEC -> LDEC DECLARACIONES .)
    end             reduce using rule 61 (LDEC -> LDEC DECLARACIONES .)
    else            reduce using rule 61 (LDEC -> LDEC DECLARACIONES .)
    elsif           reduce using rule 61 (LDEC -> LDEC DECLARACIONES .)
    declare         reduce using rule 61 (LDEC -> LDEC DECLARACIONES .)
    if              reduce using rule 61 (LDEC -> LDEC DECLARACIONES .)
    raise           reduce using rule 61 (LDEC -> LDEC DECLARACIONES .)
    begin           reduce using rule 61 (LDEC -> LDEC DECLARACIONES .)
    execute         reduce using rule 61 (LDEC -> LDEC DECLARACIONES .)
    return          reduce using rule 61 (LDEC -> LDEC DECLARACIONES .)
    insert          reduce using rule 61 (LDEC -> LDEC DECLARACIONES .)
    select          reduce using rule 61 (LDEC -> LDEC DECLARACIONES .)
    update          reduce using rule 61 (LDEC -> LDEC DECLARACIONES .)
    delete          reduce using rule 61 (LDEC -> LDEC DECLARACIONES .)
    when            reduce using rule 61 (LDEC -> LDEC DECLARACIONES .)
    language        reduce using rule 61 (LDEC -> LDEC DECLARACIONES .)
    as              reduce using rule 61 (LDEC -> LDEC DECLARACIONES .)
    do              reduce using rule 61 (LDEC -> LDEC DECLARACIONES .)
    use             reduce using rule 61 (LDEC -> LDEC DECLARACIONES .)
    create          reduce using rule 61 (LDEC -> LDEC DECLARACIONES .)
    alter           reduce using rule 61 (LDEC -> LDEC DECLARACIONES .)
    drop            reduce using rule 61 (LDEC -> LDEC DECLARACIONES .)
    case            reduce using rule 61 (LDEC -> LDEC DECLARACIONES .)
    show            reduce using rule 61 (LDEC -> LDEC DECLARACIONES .)
    $end            reduce using rule 61 (LDEC -> LDEC DECLARACIONES .)
    dolarn          reduce using rule 61 (LDEC -> LDEC DECLARACIONES .)


state 521

    (63) DECLARACIONES -> id TIPO . not null ASIG ptcoma
    (64) DECLARACIONES -> id TIPO . ASIG ptcoma
    (67) ASIG -> . default EXP
    (68) ASIG -> . dospuntos igual EXP
    (69) ASIG -> . igual EXP
    (70) ASIG -> .

    not             shift and go to state 615
    default         shift and go to state 617
    dospuntos       shift and go to state 618
    igual           shift and go to state 619
    ptcoma          reduce using rule 70 (ASIG -> .)

    ASIG                           shift and go to state 616

state 522

    (65) DECLARACIONES -> id constant . TIPO not null ASIG ptcoma
    (66) DECLARACIONES -> id constant . TIPO ASIG ptcoma
    (228) TIPO -> . interval cadena
    (229) TIPO -> . decimal para int coma int parc
    (230) TIPO -> . decimal para int parc
    (231) TIPO -> . decimal
    (232) TIPO -> . numeric para int coma int parc
    (233) TIPO -> . numeric para int parc
    (234) TIPO -> . numeric
    (235) TIPO -> . varchar para int parc
    (236) TIPO -> . timestamp para int parc
    (237) TIPO -> . character para int parc
    (238) TIPO -> . interval para int parc
    (239) TIPO -> . char para int parc
    (240) TIPO -> . time para int parc
    (241) TIPO -> . character varying para int parc
    (242) TIPO -> . id modulo rowtype
    (243) TIPO -> . idPunto modulo type
    (244) TIPO -> . timestamp para int parc without time zone
    (245) TIPO -> . timestamp para int parc with time zone
    (246) TIPO -> . time para int parc without time zone
    (247) TIPO -> . time para int parc with time zone
    (248) TIPO -> . interval para int parc cadena
    (249) TIPO -> . smallint
    (250) TIPO -> . integer
    (251) TIPO -> . r_int
    (252) TIPO -> . bigint
    (253) TIPO -> . real
    (254) TIPO -> . double precision
    (255) TIPO -> . money
    (256) TIPO -> . text
    (257) TIPO -> . timestamp
    (258) TIPO -> . date
    (259) TIPO -> . time
    (260) TIPO -> . interval
    (261) TIPO -> . boolean
    (262) TIPO -> . record
    (263) TIPO -> . varchar
    (264) TIPO -> . timestamp without time zone
    (265) TIPO -> . timestamp with time zone
    (266) TIPO -> . time without time zone
    (267) TIPO -> . time with time zone
    (268) TIPO -> . id

    interval        shift and go to state 231
    decimal         shift and go to state 232
    numeric         shift and go to state 233
    varchar         shift and go to state 234
    timestamp       shift and go to state 235
    character       shift and go to state 236
    char            shift and go to state 237
    time            shift and go to state 238
    id              shift and go to state 239
    idPunto         shift and go to state 240
    smallint        shift and go to state 241
    integer         shift and go to state 242
    r_int           shift and go to state 243
    bigint          shift and go to state 244
    real            shift and go to state 245
    double          shift and go to state 246
    money           shift and go to state 247
    text            shift and go to state 248
    date            shift and go to state 249
    boolean         shift and go to state 250
    record          shift and go to state 251

    TIPO                           shift and go to state 620

state 523

    (97) RAISE -> raise LEVEL FORMAT .

    ptcoma          reduce using rule 97 (RAISE -> raise LEVEL FORMAT .)


state 524

    (98) RAISE -> raise LEVEL EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    ptcoma          reduce using rule 98 (RAISE -> raise LEVEL EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    and             shift and go to state 128
    or              shift and go to state 129
    mayor           shift and go to state 130
    menor           shift and go to state 131
    mayor_igual     shift and go to state 132
    menor_igual     shift and go to state 133
    igual           shift and go to state 134
    diferente1      shift and go to state 135
    diferente2      shift and go to state 136
    between         shift and go to state 137
    is              shift and go to state 138
    isnull          shift and go to state 140
    notnull         shift and go to state 141
    as              shift and go to state 142
    cadenaString    shift and go to state 143
    id              shift and go to state 144
    cadena          shift and go to state 145
    in              shift and go to state 146
    not             shift and go to state 139
    like            shift and go to state 147


state 525

    (101) RAISE -> raise LEVEL cadena . coma id
    (330) EXP -> cadena .
    (341) EXP -> cadena . as TIPO

  ! shift/reduce conflict for as resolved as shift
    coma            shift and go to state 621
    mas             reduce using rule 330 (EXP -> cadena .)
    menos           reduce using rule 330 (EXP -> cadena .)
    multiplicacion  reduce using rule 330 (EXP -> cadena .)
    division        reduce using rule 330 (EXP -> cadena .)
    modulo          reduce using rule 330 (EXP -> cadena .)
    elevado         reduce using rule 330 (EXP -> cadena .)
    and             reduce using rule 330 (EXP -> cadena .)
    or              reduce using rule 330 (EXP -> cadena .)
    mayor           reduce using rule 330 (EXP -> cadena .)
    menor           reduce using rule 330 (EXP -> cadena .)
    mayor_igual     reduce using rule 330 (EXP -> cadena .)
    menor_igual     reduce using rule 330 (EXP -> cadena .)
    igual           reduce using rule 330 (EXP -> cadena .)
    diferente1      reduce using rule 330 (EXP -> cadena .)
    diferente2      reduce using rule 330 (EXP -> cadena .)
    between         reduce using rule 330 (EXP -> cadena .)
    is              reduce using rule 330 (EXP -> cadena .)
    isnull          reduce using rule 330 (EXP -> cadena .)
    notnull         reduce using rule 330 (EXP -> cadena .)
    cadenaString    reduce using rule 330 (EXP -> cadena .)
    id              reduce using rule 330 (EXP -> cadena .)
    cadena          reduce using rule 330 (EXP -> cadena .)
    in              reduce using rule 330 (EXP -> cadena .)
    not             reduce using rule 330 (EXP -> cadena .)
    like            reduce using rule 330 (EXP -> cadena .)
    ptcoma          reduce using rule 330 (EXP -> cadena .)
    as              shift and go to state 152

  ! as              [ reduce using rule 330 (EXP -> cadena .) ]


state 526

    (108) FORMAT -> format . para EXP coma LEXP parc

    para            shift and go to state 622


state 527

    (46) BEGINEND -> begin LISTACONTENIDO end .

    ptcoma          reduce using rule 46 (BEGINEND -> begin LISTACONTENIDO end .)


state 528

    (114) INSERT -> insert into id values para LEXP . parc
    (226) LEXP -> LEXP . coma EXP

    parc            shift and go to state 623
    coma            shift and go to state 121


state 529

    (115) INSERT -> insert into id para LEXP parc . values para LEXP parc

    values          shift and go to state 624


state 530

    (80) CASE -> case LEXP LISTAWHEN ELSEF end case .

    use             reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    select          reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    create          reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    update          reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    delete          reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    alter           reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    drop            reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    insert          reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    case            reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    show            reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    id              reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    if              reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    execute         reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    $end            reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    r_from          reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    coma            reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    where           reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    group           reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    having          reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    union           reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    intersect       reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    except          reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    order           reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    limit           reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    offset          reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    ptcoma          reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    mas             reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    menos           reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    multiplicacion  reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    division        reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    modulo          reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    elevado         reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    and             reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    or              reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    mayor           reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    menor           reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    mayor_igual     reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    menor_igual     reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    igual           reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    diferente1      reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    diferente2      reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    between         reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    is              reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    isnull          reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    notnull         reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    as              reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    cadenaString    reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    cadena          reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    in              reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    not             reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    like            reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    then            reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    when            reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    parc            reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    end             reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    else            reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    constraint      reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    unique          reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    check           reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    default         reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    null            reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    primary         reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    references      reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    asc             reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    desc            reduce using rule 80 (CASE -> case LEXP LISTAWHEN ELSEF end case .)


state 531

    (225) EXIST -> not exist para SELECT parc .

    ptcoma          reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    r_from          reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    coma            reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    where           reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    group           reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    having          reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    union           reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    intersect       reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    except          reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    order           reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    limit           reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    offset          reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    mas             reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    menos           reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    multiplicacion  reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    division        reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    modulo          reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    elevado         reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    and             reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    or              reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    mayor           reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    menor           reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    mayor_igual     reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    menor_igual     reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    igual           reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    diferente1      reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    diferente2      reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    between         reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    is              reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    isnull          reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    notnull         reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    as              reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    cadenaString    reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    id              reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    cadena          reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    in              reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    not             reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    like            reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    then            reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    when            reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    parc            reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    end             reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    else            reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    constraint      reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    unique          reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    check           reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    default         reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    null            reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    primary         reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    references      reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    asc             reduce using rule 225 (EXIST -> not exist para SELECT parc .)
    desc            reduce using rule 225 (EXIST -> not exist para SELECT parc .)


state 532

    (192) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP . HAVING COMBINING ORDER LIMIT
    (213) HAVING -> . having EXP
    (214) HAVING -> .

  ! shift/reduce conflict for having resolved as shift
    having          shift and go to state 321
    r_from          reduce using rule 214 (HAVING -> .)
    coma            reduce using rule 214 (HAVING -> .)
    where           reduce using rule 214 (HAVING -> .)
    group           reduce using rule 214 (HAVING -> .)
    union           reduce using rule 214 (HAVING -> .)
    intersect       reduce using rule 214 (HAVING -> .)
    except          reduce using rule 214 (HAVING -> .)
    order           reduce using rule 214 (HAVING -> .)
    limit           reduce using rule 214 (HAVING -> .)
    offset          reduce using rule 214 (HAVING -> .)
    ptcoma          reduce using rule 214 (HAVING -> .)
    mas             reduce using rule 214 (HAVING -> .)
    menos           reduce using rule 214 (HAVING -> .)
    multiplicacion  reduce using rule 214 (HAVING -> .)
    division        reduce using rule 214 (HAVING -> .)
    modulo          reduce using rule 214 (HAVING -> .)
    elevado         reduce using rule 214 (HAVING -> .)
    and             reduce using rule 214 (HAVING -> .)
    or              reduce using rule 214 (HAVING -> .)
    mayor           reduce using rule 214 (HAVING -> .)
    menor           reduce using rule 214 (HAVING -> .)
    mayor_igual     reduce using rule 214 (HAVING -> .)
    menor_igual     reduce using rule 214 (HAVING -> .)
    igual           reduce using rule 214 (HAVING -> .)
    diferente1      reduce using rule 214 (HAVING -> .)
    diferente2      reduce using rule 214 (HAVING -> .)
    between         reduce using rule 214 (HAVING -> .)
    is              reduce using rule 214 (HAVING -> .)
    isnull          reduce using rule 214 (HAVING -> .)
    notnull         reduce using rule 214 (HAVING -> .)
    as              reduce using rule 214 (HAVING -> .)
    cadenaString    reduce using rule 214 (HAVING -> .)
    id              reduce using rule 214 (HAVING -> .)
    cadena          reduce using rule 214 (HAVING -> .)
    in              reduce using rule 214 (HAVING -> .)
    not             reduce using rule 214 (HAVING -> .)
    like            reduce using rule 214 (HAVING -> .)
    then            reduce using rule 214 (HAVING -> .)
    when            reduce using rule 214 (HAVING -> .)
    parc            reduce using rule 214 (HAVING -> .)
    end             reduce using rule 214 (HAVING -> .)
    else            reduce using rule 214 (HAVING -> .)
    constraint      reduce using rule 214 (HAVING -> .)
    unique          reduce using rule 214 (HAVING -> .)
    check           reduce using rule 214 (HAVING -> .)
    default         reduce using rule 214 (HAVING -> .)
    null            reduce using rule 214 (HAVING -> .)
    primary         reduce using rule 214 (HAVING -> .)
    references      reduce using rule 214 (HAVING -> .)
    asc             reduce using rule 214 (HAVING -> .)
    desc            reduce using rule 214 (HAVING -> .)

  ! having          [ reduce using rule 214 (HAVING -> .) ]

    HAVING                         shift and go to state 625

state 533

    (193) SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING . COMBINING ORDER LIMIT
    (206) COMBINING -> . union EXP
    (207) COMBINING -> . union all EXP
    (208) COMBINING -> . intersect EXP
    (209) COMBINING -> . except EXP
    (210) COMBINING -> .

  ! shift/reduce conflict for union resolved as shift
  ! shift/reduce conflict for intersect resolved as shift
  ! shift/reduce conflict for except resolved as shift
    union           shift and go to state 442
    intersect       shift and go to state 443
    except          shift and go to state 444
    r_from          reduce using rule 210 (COMBINING -> .)
    coma            reduce using rule 210 (COMBINING -> .)
    where           reduce using rule 210 (COMBINING -> .)
    group           reduce using rule 210 (COMBINING -> .)
    having          reduce using rule 210 (COMBINING -> .)
    order           reduce using rule 210 (COMBINING -> .)
    limit           reduce using rule 210 (COMBINING -> .)
    offset          reduce using rule 210 (COMBINING -> .)
    ptcoma          reduce using rule 210 (COMBINING -> .)
    mas             reduce using rule 210 (COMBINING -> .)
    menos           reduce using rule 210 (COMBINING -> .)
    multiplicacion  reduce using rule 210 (COMBINING -> .)
    division        reduce using rule 210 (COMBINING -> .)
    modulo          reduce using rule 210 (COMBINING -> .)
    elevado         reduce using rule 210 (COMBINING -> .)
    and             reduce using rule 210 (COMBINING -> .)
    or              reduce using rule 210 (COMBINING -> .)
    mayor           reduce using rule 210 (COMBINING -> .)
    menor           reduce using rule 210 (COMBINING -> .)
    mayor_igual     reduce using rule 210 (COMBINING -> .)
    menor_igual     reduce using rule 210 (COMBINING -> .)
    igual           reduce using rule 210 (COMBINING -> .)
    diferente1      reduce using rule 210 (COMBINING -> .)
    diferente2      reduce using rule 210 (COMBINING -> .)
    between         reduce using rule 210 (COMBINING -> .)
    is              reduce using rule 210 (COMBINING -> .)
    isnull          reduce using rule 210 (COMBINING -> .)
    notnull         reduce using rule 210 (COMBINING -> .)
    as              reduce using rule 210 (COMBINING -> .)
    cadenaString    reduce using rule 210 (COMBINING -> .)
    id              reduce using rule 210 (COMBINING -> .)
    cadena          reduce using rule 210 (COMBINING -> .)
    in              reduce using rule 210 (COMBINING -> .)
    not             reduce using rule 210 (COMBINING -> .)
    like            reduce using rule 210 (COMBINING -> .)
    then            reduce using rule 210 (COMBINING -> .)
    when            reduce using rule 210 (COMBINING -> .)
    parc            reduce using rule 210 (COMBINING -> .)
    end             reduce using rule 210 (COMBINING -> .)
    else            reduce using rule 210 (COMBINING -> .)
    constraint      reduce using rule 210 (COMBINING -> .)
    unique          reduce using rule 210 (COMBINING -> .)
    check           reduce using rule 210 (COMBINING -> .)
    default         reduce using rule 210 (COMBINING -> .)
    null            reduce using rule 210 (COMBINING -> .)
    primary         reduce using rule 210 (COMBINING -> .)
    references      reduce using rule 210 (COMBINING -> .)
    asc             reduce using rule 210 (COMBINING -> .)
    desc            reduce using rule 210 (COMBINING -> .)

  ! union           [ reduce using rule 210 (COMBINING -> .) ]
  ! intersect       [ reduce using rule 210 (COMBINING -> .) ]
  ! except          [ reduce using rule 210 (COMBINING -> .) ]

    COMBINING                      shift and go to state 626

state 534

    (194) SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER . LIMIT
    (195) LIMIT -> . limit int
    (196) LIMIT -> . limit all
    (197) LIMIT -> . offset int
    (198) LIMIT -> . limit int offset int
    (199) LIMIT -> . offset int limit int
    (200) LIMIT -> . limit all offset int
    (201) LIMIT -> . offset int limit all
    (202) LIMIT -> .

  ! shift/reduce conflict for limit resolved as shift
  ! shift/reduce conflict for offset resolved as shift
    limit           shift and go to state 628
    offset          shift and go to state 629
    ptcoma          reduce using rule 202 (LIMIT -> .)
    r_from          reduce using rule 202 (LIMIT -> .)
    coma            reduce using rule 202 (LIMIT -> .)
    where           reduce using rule 202 (LIMIT -> .)
    group           reduce using rule 202 (LIMIT -> .)
    having          reduce using rule 202 (LIMIT -> .)
    union           reduce using rule 202 (LIMIT -> .)
    intersect       reduce using rule 202 (LIMIT -> .)
    except          reduce using rule 202 (LIMIT -> .)
    order           reduce using rule 202 (LIMIT -> .)
    mas             reduce using rule 202 (LIMIT -> .)
    menos           reduce using rule 202 (LIMIT -> .)
    multiplicacion  reduce using rule 202 (LIMIT -> .)
    division        reduce using rule 202 (LIMIT -> .)
    modulo          reduce using rule 202 (LIMIT -> .)
    elevado         reduce using rule 202 (LIMIT -> .)
    and             reduce using rule 202 (LIMIT -> .)
    or              reduce using rule 202 (LIMIT -> .)
    mayor           reduce using rule 202 (LIMIT -> .)
    menor           reduce using rule 202 (LIMIT -> .)
    mayor_igual     reduce using rule 202 (LIMIT -> .)
    menor_igual     reduce using rule 202 (LIMIT -> .)
    igual           reduce using rule 202 (LIMIT -> .)
    diferente1      reduce using rule 202 (LIMIT -> .)
    diferente2      reduce using rule 202 (LIMIT -> .)
    between         reduce using rule 202 (LIMIT -> .)
    is              reduce using rule 202 (LIMIT -> .)
    isnull          reduce using rule 202 (LIMIT -> .)
    notnull         reduce using rule 202 (LIMIT -> .)
    as              reduce using rule 202 (LIMIT -> .)
    cadenaString    reduce using rule 202 (LIMIT -> .)
    id              reduce using rule 202 (LIMIT -> .)
    cadena          reduce using rule 202 (LIMIT -> .)
    in              reduce using rule 202 (LIMIT -> .)
    not             reduce using rule 202 (LIMIT -> .)
    like            reduce using rule 202 (LIMIT -> .)
    then            reduce using rule 202 (LIMIT -> .)
    when            reduce using rule 202 (LIMIT -> .)
    parc            reduce using rule 202 (LIMIT -> .)
    end             reduce using rule 202 (LIMIT -> .)
    else            reduce using rule 202 (LIMIT -> .)
    constraint      reduce using rule 202 (LIMIT -> .)
    unique          reduce using rule 202 (LIMIT -> .)
    check           reduce using rule 202 (LIMIT -> .)
    default         reduce using rule 202 (LIMIT -> .)
    null            reduce using rule 202 (LIMIT -> .)
    primary         reduce using rule 202 (LIMIT -> .)
    references      reduce using rule 202 (LIMIT -> .)
    asc             reduce using rule 202 (LIMIT -> .)
    desc            reduce using rule 202 (LIMIT -> .)

  ! limit           [ reduce using rule 202 (LIMIT -> .) ]
  ! offset          [ reduce using rule 202 (LIMIT -> .) ]

    LIMIT                          shift and go to state 627

state 535

    (215) ORDER -> order . by LEXP ORD
    (216) ORDER -> order . by LEXP

    by              shift and go to state 630


state 536

    (206) COMBINING -> union EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    r_from          reduce using rule 206 (COMBINING -> union EXP .)
    coma            reduce using rule 206 (COMBINING -> union EXP .)
    where           reduce using rule 206 (COMBINING -> union EXP .)
    group           reduce using rule 206 (COMBINING -> union EXP .)
    having          reduce using rule 206 (COMBINING -> union EXP .)
    union           reduce using rule 206 (COMBINING -> union EXP .)
    intersect       reduce using rule 206 (COMBINING -> union EXP .)
    except          reduce using rule 206 (COMBINING -> union EXP .)
    order           reduce using rule 206 (COMBINING -> union EXP .)
    limit           reduce using rule 206 (COMBINING -> union EXP .)
    offset          reduce using rule 206 (COMBINING -> union EXP .)
    ptcoma          reduce using rule 206 (COMBINING -> union EXP .)
    then            reduce using rule 206 (COMBINING -> union EXP .)
    when            reduce using rule 206 (COMBINING -> union EXP .)
    parc            reduce using rule 206 (COMBINING -> union EXP .)
    end             reduce using rule 206 (COMBINING -> union EXP .)
    else            reduce using rule 206 (COMBINING -> union EXP .)
    constraint      reduce using rule 206 (COMBINING -> union EXP .)
    unique          reduce using rule 206 (COMBINING -> union EXP .)
    check           reduce using rule 206 (COMBINING -> union EXP .)
    default         reduce using rule 206 (COMBINING -> union EXP .)
    null            reduce using rule 206 (COMBINING -> union EXP .)
    primary         reduce using rule 206 (COMBINING -> union EXP .)
    references      reduce using rule 206 (COMBINING -> union EXP .)
    asc             reduce using rule 206 (COMBINING -> union EXP .)
    desc            reduce using rule 206 (COMBINING -> union EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    and             shift and go to state 128
    or              shift and go to state 129
    mayor           shift and go to state 130
    menor           shift and go to state 131
    mayor_igual     shift and go to state 132
    menor_igual     shift and go to state 133
    igual           shift and go to state 134
    diferente1      shift and go to state 135
    diferente2      shift and go to state 136
    between         shift and go to state 137
    is              shift and go to state 138
    isnull          shift and go to state 140
    notnull         shift and go to state 141
    as              shift and go to state 142
    cadenaString    shift and go to state 143
    id              shift and go to state 144
    cadena          shift and go to state 145
    in              shift and go to state 146
    not             shift and go to state 139
    like            shift and go to state 147

  ! mas             [ reduce using rule 206 (COMBINING -> union EXP .) ]
  ! menos           [ reduce using rule 206 (COMBINING -> union EXP .) ]
  ! multiplicacion  [ reduce using rule 206 (COMBINING -> union EXP .) ]
  ! division        [ reduce using rule 206 (COMBINING -> union EXP .) ]
  ! modulo          [ reduce using rule 206 (COMBINING -> union EXP .) ]
  ! elevado         [ reduce using rule 206 (COMBINING -> union EXP .) ]
  ! and             [ reduce using rule 206 (COMBINING -> union EXP .) ]
  ! or              [ reduce using rule 206 (COMBINING -> union EXP .) ]
  ! mayor           [ reduce using rule 206 (COMBINING -> union EXP .) ]
  ! menor           [ reduce using rule 206 (COMBINING -> union EXP .) ]
  ! mayor_igual     [ reduce using rule 206 (COMBINING -> union EXP .) ]
  ! menor_igual     [ reduce using rule 206 (COMBINING -> union EXP .) ]
  ! igual           [ reduce using rule 206 (COMBINING -> union EXP .) ]
  ! diferente1      [ reduce using rule 206 (COMBINING -> union EXP .) ]
  ! diferente2      [ reduce using rule 206 (COMBINING -> union EXP .) ]
  ! between         [ reduce using rule 206 (COMBINING -> union EXP .) ]
  ! is              [ reduce using rule 206 (COMBINING -> union EXP .) ]
  ! isnull          [ reduce using rule 206 (COMBINING -> union EXP .) ]
  ! notnull         [ reduce using rule 206 (COMBINING -> union EXP .) ]
  ! as              [ reduce using rule 206 (COMBINING -> union EXP .) ]
  ! cadenaString    [ reduce using rule 206 (COMBINING -> union EXP .) ]
  ! id              [ reduce using rule 206 (COMBINING -> union EXP .) ]
  ! cadena          [ reduce using rule 206 (COMBINING -> union EXP .) ]
  ! in              [ reduce using rule 206 (COMBINING -> union EXP .) ]
  ! not             [ reduce using rule 206 (COMBINING -> union EXP .) ]
  ! like            [ reduce using rule 206 (COMBINING -> union EXP .) ]


state 537

    (207) COMBINING -> union all . EXP
    (325) EXP -> all . para LEXP parc
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    para            shift and go to state 632
    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 631
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 538

    (208) COMBINING -> intersect EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    r_from          reduce using rule 208 (COMBINING -> intersect EXP .)
    coma            reduce using rule 208 (COMBINING -> intersect EXP .)
    where           reduce using rule 208 (COMBINING -> intersect EXP .)
    group           reduce using rule 208 (COMBINING -> intersect EXP .)
    having          reduce using rule 208 (COMBINING -> intersect EXP .)
    union           reduce using rule 208 (COMBINING -> intersect EXP .)
    intersect       reduce using rule 208 (COMBINING -> intersect EXP .)
    except          reduce using rule 208 (COMBINING -> intersect EXP .)
    order           reduce using rule 208 (COMBINING -> intersect EXP .)
    limit           reduce using rule 208 (COMBINING -> intersect EXP .)
    offset          reduce using rule 208 (COMBINING -> intersect EXP .)
    ptcoma          reduce using rule 208 (COMBINING -> intersect EXP .)
    then            reduce using rule 208 (COMBINING -> intersect EXP .)
    when            reduce using rule 208 (COMBINING -> intersect EXP .)
    parc            reduce using rule 208 (COMBINING -> intersect EXP .)
    end             reduce using rule 208 (COMBINING -> intersect EXP .)
    else            reduce using rule 208 (COMBINING -> intersect EXP .)
    constraint      reduce using rule 208 (COMBINING -> intersect EXP .)
    unique          reduce using rule 208 (COMBINING -> intersect EXP .)
    check           reduce using rule 208 (COMBINING -> intersect EXP .)
    default         reduce using rule 208 (COMBINING -> intersect EXP .)
    null            reduce using rule 208 (COMBINING -> intersect EXP .)
    primary         reduce using rule 208 (COMBINING -> intersect EXP .)
    references      reduce using rule 208 (COMBINING -> intersect EXP .)
    asc             reduce using rule 208 (COMBINING -> intersect EXP .)
    desc            reduce using rule 208 (COMBINING -> intersect EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    and             shift and go to state 128
    or              shift and go to state 129
    mayor           shift and go to state 130
    menor           shift and go to state 131
    mayor_igual     shift and go to state 132
    menor_igual     shift and go to state 133
    igual           shift and go to state 134
    diferente1      shift and go to state 135
    diferente2      shift and go to state 136
    between         shift and go to state 137
    is              shift and go to state 138
    isnull          shift and go to state 140
    notnull         shift and go to state 141
    as              shift and go to state 142
    cadenaString    shift and go to state 143
    id              shift and go to state 144
    cadena          shift and go to state 145
    in              shift and go to state 146
    not             shift and go to state 139
    like            shift and go to state 147

  ! mas             [ reduce using rule 208 (COMBINING -> intersect EXP .) ]
  ! menos           [ reduce using rule 208 (COMBINING -> intersect EXP .) ]
  ! multiplicacion  [ reduce using rule 208 (COMBINING -> intersect EXP .) ]
  ! division        [ reduce using rule 208 (COMBINING -> intersect EXP .) ]
  ! modulo          [ reduce using rule 208 (COMBINING -> intersect EXP .) ]
  ! elevado         [ reduce using rule 208 (COMBINING -> intersect EXP .) ]
  ! and             [ reduce using rule 208 (COMBINING -> intersect EXP .) ]
  ! or              [ reduce using rule 208 (COMBINING -> intersect EXP .) ]
  ! mayor           [ reduce using rule 208 (COMBINING -> intersect EXP .) ]
  ! menor           [ reduce using rule 208 (COMBINING -> intersect EXP .) ]
  ! mayor_igual     [ reduce using rule 208 (COMBINING -> intersect EXP .) ]
  ! menor_igual     [ reduce using rule 208 (COMBINING -> intersect EXP .) ]
  ! igual           [ reduce using rule 208 (COMBINING -> intersect EXP .) ]
  ! diferente1      [ reduce using rule 208 (COMBINING -> intersect EXP .) ]
  ! diferente2      [ reduce using rule 208 (COMBINING -> intersect EXP .) ]
  ! between         [ reduce using rule 208 (COMBINING -> intersect EXP .) ]
  ! is              [ reduce using rule 208 (COMBINING -> intersect EXP .) ]
  ! isnull          [ reduce using rule 208 (COMBINING -> intersect EXP .) ]
  ! notnull         [ reduce using rule 208 (COMBINING -> intersect EXP .) ]
  ! as              [ reduce using rule 208 (COMBINING -> intersect EXP .) ]
  ! cadenaString    [ reduce using rule 208 (COMBINING -> intersect EXP .) ]
  ! id              [ reduce using rule 208 (COMBINING -> intersect EXP .) ]
  ! cadena          [ reduce using rule 208 (COMBINING -> intersect EXP .) ]
  ! in              [ reduce using rule 208 (COMBINING -> intersect EXP .) ]
  ! not             [ reduce using rule 208 (COMBINING -> intersect EXP .) ]
  ! like            [ reduce using rule 208 (COMBINING -> intersect EXP .) ]


state 539

    (209) COMBINING -> except EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    r_from          reduce using rule 209 (COMBINING -> except EXP .)
    coma            reduce using rule 209 (COMBINING -> except EXP .)
    where           reduce using rule 209 (COMBINING -> except EXP .)
    group           reduce using rule 209 (COMBINING -> except EXP .)
    having          reduce using rule 209 (COMBINING -> except EXP .)
    union           reduce using rule 209 (COMBINING -> except EXP .)
    intersect       reduce using rule 209 (COMBINING -> except EXP .)
    except          reduce using rule 209 (COMBINING -> except EXP .)
    order           reduce using rule 209 (COMBINING -> except EXP .)
    limit           reduce using rule 209 (COMBINING -> except EXP .)
    offset          reduce using rule 209 (COMBINING -> except EXP .)
    ptcoma          reduce using rule 209 (COMBINING -> except EXP .)
    then            reduce using rule 209 (COMBINING -> except EXP .)
    when            reduce using rule 209 (COMBINING -> except EXP .)
    parc            reduce using rule 209 (COMBINING -> except EXP .)
    end             reduce using rule 209 (COMBINING -> except EXP .)
    else            reduce using rule 209 (COMBINING -> except EXP .)
    constraint      reduce using rule 209 (COMBINING -> except EXP .)
    unique          reduce using rule 209 (COMBINING -> except EXP .)
    check           reduce using rule 209 (COMBINING -> except EXP .)
    default         reduce using rule 209 (COMBINING -> except EXP .)
    null            reduce using rule 209 (COMBINING -> except EXP .)
    primary         reduce using rule 209 (COMBINING -> except EXP .)
    references      reduce using rule 209 (COMBINING -> except EXP .)
    asc             reduce using rule 209 (COMBINING -> except EXP .)
    desc            reduce using rule 209 (COMBINING -> except EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    and             shift and go to state 128
    or              shift and go to state 129
    mayor           shift and go to state 130
    menor           shift and go to state 131
    mayor_igual     shift and go to state 132
    menor_igual     shift and go to state 133
    igual           shift and go to state 134
    diferente1      shift and go to state 135
    diferente2      shift and go to state 136
    between         shift and go to state 137
    is              shift and go to state 138
    isnull          shift and go to state 140
    notnull         shift and go to state 141
    as              shift and go to state 142
    cadenaString    shift and go to state 143
    id              shift and go to state 144
    cadena          shift and go to state 145
    in              shift and go to state 146
    not             shift and go to state 139
    like            shift and go to state 147

  ! mas             [ reduce using rule 209 (COMBINING -> except EXP .) ]
  ! menos           [ reduce using rule 209 (COMBINING -> except EXP .) ]
  ! multiplicacion  [ reduce using rule 209 (COMBINING -> except EXP .) ]
  ! division        [ reduce using rule 209 (COMBINING -> except EXP .) ]
  ! modulo          [ reduce using rule 209 (COMBINING -> except EXP .) ]
  ! elevado         [ reduce using rule 209 (COMBINING -> except EXP .) ]
  ! and             [ reduce using rule 209 (COMBINING -> except EXP .) ]
  ! or              [ reduce using rule 209 (COMBINING -> except EXP .) ]
  ! mayor           [ reduce using rule 209 (COMBINING -> except EXP .) ]
  ! menor           [ reduce using rule 209 (COMBINING -> except EXP .) ]
  ! mayor_igual     [ reduce using rule 209 (COMBINING -> except EXP .) ]
  ! menor_igual     [ reduce using rule 209 (COMBINING -> except EXP .) ]
  ! igual           [ reduce using rule 209 (COMBINING -> except EXP .) ]
  ! diferente1      [ reduce using rule 209 (COMBINING -> except EXP .) ]
  ! diferente2      [ reduce using rule 209 (COMBINING -> except EXP .) ]
  ! between         [ reduce using rule 209 (COMBINING -> except EXP .) ]
  ! is              [ reduce using rule 209 (COMBINING -> except EXP .) ]
  ! isnull          [ reduce using rule 209 (COMBINING -> except EXP .) ]
  ! notnull         [ reduce using rule 209 (COMBINING -> except EXP .) ]
  ! as              [ reduce using rule 209 (COMBINING -> except EXP .) ]
  ! cadenaString    [ reduce using rule 209 (COMBINING -> except EXP .) ]
  ! id              [ reduce using rule 209 (COMBINING -> except EXP .) ]
  ! cadena          [ reduce using rule 209 (COMBINING -> except EXP .) ]
  ! in              [ reduce using rule 209 (COMBINING -> except EXP .) ]
  ! not             [ reduce using rule 209 (COMBINING -> except EXP .) ]
  ! like            [ reduce using rule 209 (COMBINING -> except EXP .) ]


state 540

    (316) EXP -> EXP is not distinct r_from EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    r_from          reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    coma            reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    where           reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    group           reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    having          reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    union           reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    intersect       reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    except          reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    order           reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    limit           reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    offset          reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    ptcoma          reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    and             reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    or              reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    between         reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    is              reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    isnull          reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    notnull         reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    as              reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    cadenaString    reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    id              reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    cadena          reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    in              reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    not             reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    like            reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    then            reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    when            reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    parc            reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    end             reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    else            reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    constraint      reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    unique          reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    check           reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    default         reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    null            reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    primary         reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    references      reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    asc             reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    desc            reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    mayor           shift and go to state 130
    menor           shift and go to state 131
    mayor_igual     shift and go to state 132
    menor_igual     shift and go to state 133
    igual           shift and go to state 134
    diferente1      shift and go to state 135
    diferente2      shift and go to state 136

  ! mas             [ reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .) ]
  ! menos           [ reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .) ]
  ! multiplicacion  [ reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .) ]
  ! division        [ reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .) ]
  ! modulo          [ reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .) ]
  ! elevado         [ reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .) ]
  ! mayor           [ reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .) ]
  ! menor           [ reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .) ]
  ! mayor_igual     [ reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .) ]
  ! menor_igual     [ reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .) ]
  ! igual           [ reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .) ]
  ! diferente1      [ reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .) ]
  ! diferente2      [ reduce using rule 316 (EXP -> EXP is not distinct r_from EXP .) ]
  ! and             [ shift and go to state 128 ]
  ! or              [ shift and go to state 129 ]
  ! between         [ shift and go to state 137 ]
  ! is              [ shift and go to state 138 ]
  ! isnull          [ shift and go to state 140 ]
  ! notnull         [ shift and go to state 141 ]
  ! as              [ shift and go to state 142 ]
  ! cadenaString    [ shift and go to state 143 ]
  ! id              [ shift and go to state 144 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 146 ]
  ! not             [ shift and go to state 139 ]
  ! like            [ shift and go to state 147 ]


state 541

    (311) EXP -> EXP not in para EXP parc .

    r_from          reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    coma            reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    where           reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    group           reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    having          reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    union           reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    intersect       reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    except          reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    order           reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    limit           reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    offset          reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    ptcoma          reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    mas             reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    menos           reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    multiplicacion  reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    division        reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    modulo          reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    elevado         reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    and             reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    or              reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    mayor           reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    menor           reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    mayor_igual     reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    menor_igual     reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    igual           reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    diferente1      reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    diferente2      reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    between         reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    is              reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    isnull          reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    notnull         reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    as              reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    cadenaString    reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    id              reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    cadena          reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    in              reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    not             reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    like            reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    then            reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    when            reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    parc            reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    end             reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    else            reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    constraint      reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    unique          reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    check           reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    default         reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    null            reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    primary         reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    references      reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    asc             reduce using rule 311 (EXP -> EXP not in para EXP parc .)
    desc            reduce using rule 311 (EXP -> EXP not in para EXP parc .)


state 542

    (238) TIPO -> interval para int parc .
    (248) TIPO -> interval para int parc . cadena

  ! shift/reduce conflict for cadena resolved as shift
    r_from          reduce using rule 238 (TIPO -> interval para int parc .)
    coma            reduce using rule 238 (TIPO -> interval para int parc .)
    where           reduce using rule 238 (TIPO -> interval para int parc .)
    group           reduce using rule 238 (TIPO -> interval para int parc .)
    having          reduce using rule 238 (TIPO -> interval para int parc .)
    union           reduce using rule 238 (TIPO -> interval para int parc .)
    intersect       reduce using rule 238 (TIPO -> interval para int parc .)
    except          reduce using rule 238 (TIPO -> interval para int parc .)
    order           reduce using rule 238 (TIPO -> interval para int parc .)
    limit           reduce using rule 238 (TIPO -> interval para int parc .)
    offset          reduce using rule 238 (TIPO -> interval para int parc .)
    ptcoma          reduce using rule 238 (TIPO -> interval para int parc .)
    mas             reduce using rule 238 (TIPO -> interval para int parc .)
    menos           reduce using rule 238 (TIPO -> interval para int parc .)
    multiplicacion  reduce using rule 238 (TIPO -> interval para int parc .)
    division        reduce using rule 238 (TIPO -> interval para int parc .)
    modulo          reduce using rule 238 (TIPO -> interval para int parc .)
    elevado         reduce using rule 238 (TIPO -> interval para int parc .)
    and             reduce using rule 238 (TIPO -> interval para int parc .)
    or              reduce using rule 238 (TIPO -> interval para int parc .)
    mayor           reduce using rule 238 (TIPO -> interval para int parc .)
    menor           reduce using rule 238 (TIPO -> interval para int parc .)
    mayor_igual     reduce using rule 238 (TIPO -> interval para int parc .)
    menor_igual     reduce using rule 238 (TIPO -> interval para int parc .)
    igual           reduce using rule 238 (TIPO -> interval para int parc .)
    diferente1      reduce using rule 238 (TIPO -> interval para int parc .)
    diferente2      reduce using rule 238 (TIPO -> interval para int parc .)
    between         reduce using rule 238 (TIPO -> interval para int parc .)
    is              reduce using rule 238 (TIPO -> interval para int parc .)
    isnull          reduce using rule 238 (TIPO -> interval para int parc .)
    notnull         reduce using rule 238 (TIPO -> interval para int parc .)
    as              reduce using rule 238 (TIPO -> interval para int parc .)
    cadenaString    reduce using rule 238 (TIPO -> interval para int parc .)
    id              reduce using rule 238 (TIPO -> interval para int parc .)
    in              reduce using rule 238 (TIPO -> interval para int parc .)
    not             reduce using rule 238 (TIPO -> interval para int parc .)
    like            reduce using rule 238 (TIPO -> interval para int parc .)
    then            reduce using rule 238 (TIPO -> interval para int parc .)
    when            reduce using rule 238 (TIPO -> interval para int parc .)
    parc            reduce using rule 238 (TIPO -> interval para int parc .)
    end             reduce using rule 238 (TIPO -> interval para int parc .)
    else            reduce using rule 238 (TIPO -> interval para int parc .)
    constraint      reduce using rule 238 (TIPO -> interval para int parc .)
    unique          reduce using rule 238 (TIPO -> interval para int parc .)
    check           reduce using rule 238 (TIPO -> interval para int parc .)
    default         reduce using rule 238 (TIPO -> interval para int parc .)
    null            reduce using rule 238 (TIPO -> interval para int parc .)
    primary         reduce using rule 238 (TIPO -> interval para int parc .)
    references      reduce using rule 238 (TIPO -> interval para int parc .)
    asc             reduce using rule 238 (TIPO -> interval para int parc .)
    desc            reduce using rule 238 (TIPO -> interval para int parc .)
    dospuntos       reduce using rule 238 (TIPO -> interval para int parc .)
    language        reduce using rule 238 (TIPO -> interval para int parc .)
    do              reduce using rule 238 (TIPO -> interval para int parc .)
    declare         reduce using rule 238 (TIPO -> interval para int parc .)
    if              reduce using rule 238 (TIPO -> interval para int parc .)
    raise           reduce using rule 238 (TIPO -> interval para int parc .)
    begin           reduce using rule 238 (TIPO -> interval para int parc .)
    execute         reduce using rule 238 (TIPO -> interval para int parc .)
    return          reduce using rule 238 (TIPO -> interval para int parc .)
    insert          reduce using rule 238 (TIPO -> interval para int parc .)
    select          reduce using rule 238 (TIPO -> interval para int parc .)
    update          reduce using rule 238 (TIPO -> interval para int parc .)
    delete          reduce using rule 238 (TIPO -> interval para int parc .)
    cadena          shift and go to state 633

  ! cadena          [ reduce using rule 238 (TIPO -> interval para int parc .) ]


state 543

    (229) TIPO -> decimal para int coma . int parc

    int             shift and go to state 634


state 544

    (230) TIPO -> decimal para int parc .

    r_from          reduce using rule 230 (TIPO -> decimal para int parc .)
    coma            reduce using rule 230 (TIPO -> decimal para int parc .)
    where           reduce using rule 230 (TIPO -> decimal para int parc .)
    group           reduce using rule 230 (TIPO -> decimal para int parc .)
    having          reduce using rule 230 (TIPO -> decimal para int parc .)
    union           reduce using rule 230 (TIPO -> decimal para int parc .)
    intersect       reduce using rule 230 (TIPO -> decimal para int parc .)
    except          reduce using rule 230 (TIPO -> decimal para int parc .)
    order           reduce using rule 230 (TIPO -> decimal para int parc .)
    limit           reduce using rule 230 (TIPO -> decimal para int parc .)
    offset          reduce using rule 230 (TIPO -> decimal para int parc .)
    ptcoma          reduce using rule 230 (TIPO -> decimal para int parc .)
    mas             reduce using rule 230 (TIPO -> decimal para int parc .)
    menos           reduce using rule 230 (TIPO -> decimal para int parc .)
    multiplicacion  reduce using rule 230 (TIPO -> decimal para int parc .)
    division        reduce using rule 230 (TIPO -> decimal para int parc .)
    modulo          reduce using rule 230 (TIPO -> decimal para int parc .)
    elevado         reduce using rule 230 (TIPO -> decimal para int parc .)
    and             reduce using rule 230 (TIPO -> decimal para int parc .)
    or              reduce using rule 230 (TIPO -> decimal para int parc .)
    mayor           reduce using rule 230 (TIPO -> decimal para int parc .)
    menor           reduce using rule 230 (TIPO -> decimal para int parc .)
    mayor_igual     reduce using rule 230 (TIPO -> decimal para int parc .)
    menor_igual     reduce using rule 230 (TIPO -> decimal para int parc .)
    igual           reduce using rule 230 (TIPO -> decimal para int parc .)
    diferente1      reduce using rule 230 (TIPO -> decimal para int parc .)
    diferente2      reduce using rule 230 (TIPO -> decimal para int parc .)
    between         reduce using rule 230 (TIPO -> decimal para int parc .)
    is              reduce using rule 230 (TIPO -> decimal para int parc .)
    isnull          reduce using rule 230 (TIPO -> decimal para int parc .)
    notnull         reduce using rule 230 (TIPO -> decimal para int parc .)
    as              reduce using rule 230 (TIPO -> decimal para int parc .)
    cadenaString    reduce using rule 230 (TIPO -> decimal para int parc .)
    id              reduce using rule 230 (TIPO -> decimal para int parc .)
    cadena          reduce using rule 230 (TIPO -> decimal para int parc .)
    in              reduce using rule 230 (TIPO -> decimal para int parc .)
    not             reduce using rule 230 (TIPO -> decimal para int parc .)
    like            reduce using rule 230 (TIPO -> decimal para int parc .)
    then            reduce using rule 230 (TIPO -> decimal para int parc .)
    when            reduce using rule 230 (TIPO -> decimal para int parc .)
    parc            reduce using rule 230 (TIPO -> decimal para int parc .)
    end             reduce using rule 230 (TIPO -> decimal para int parc .)
    else            reduce using rule 230 (TIPO -> decimal para int parc .)
    constraint      reduce using rule 230 (TIPO -> decimal para int parc .)
    unique          reduce using rule 230 (TIPO -> decimal para int parc .)
    check           reduce using rule 230 (TIPO -> decimal para int parc .)
    default         reduce using rule 230 (TIPO -> decimal para int parc .)
    null            reduce using rule 230 (TIPO -> decimal para int parc .)
    primary         reduce using rule 230 (TIPO -> decimal para int parc .)
    references      reduce using rule 230 (TIPO -> decimal para int parc .)
    asc             reduce using rule 230 (TIPO -> decimal para int parc .)
    desc            reduce using rule 230 (TIPO -> decimal para int parc .)
    dospuntos       reduce using rule 230 (TIPO -> decimal para int parc .)
    language        reduce using rule 230 (TIPO -> decimal para int parc .)
    do              reduce using rule 230 (TIPO -> decimal para int parc .)
    declare         reduce using rule 230 (TIPO -> decimal para int parc .)
    if              reduce using rule 230 (TIPO -> decimal para int parc .)
    raise           reduce using rule 230 (TIPO -> decimal para int parc .)
    begin           reduce using rule 230 (TIPO -> decimal para int parc .)
    execute         reduce using rule 230 (TIPO -> decimal para int parc .)
    return          reduce using rule 230 (TIPO -> decimal para int parc .)
    insert          reduce using rule 230 (TIPO -> decimal para int parc .)
    select          reduce using rule 230 (TIPO -> decimal para int parc .)
    update          reduce using rule 230 (TIPO -> decimal para int parc .)
    delete          reduce using rule 230 (TIPO -> decimal para int parc .)


state 545

    (232) TIPO -> numeric para int coma . int parc

    int             shift and go to state 635


state 546

    (233) TIPO -> numeric para int parc .

    r_from          reduce using rule 233 (TIPO -> numeric para int parc .)
    coma            reduce using rule 233 (TIPO -> numeric para int parc .)
    where           reduce using rule 233 (TIPO -> numeric para int parc .)
    group           reduce using rule 233 (TIPO -> numeric para int parc .)
    having          reduce using rule 233 (TIPO -> numeric para int parc .)
    union           reduce using rule 233 (TIPO -> numeric para int parc .)
    intersect       reduce using rule 233 (TIPO -> numeric para int parc .)
    except          reduce using rule 233 (TIPO -> numeric para int parc .)
    order           reduce using rule 233 (TIPO -> numeric para int parc .)
    limit           reduce using rule 233 (TIPO -> numeric para int parc .)
    offset          reduce using rule 233 (TIPO -> numeric para int parc .)
    ptcoma          reduce using rule 233 (TIPO -> numeric para int parc .)
    mas             reduce using rule 233 (TIPO -> numeric para int parc .)
    menos           reduce using rule 233 (TIPO -> numeric para int parc .)
    multiplicacion  reduce using rule 233 (TIPO -> numeric para int parc .)
    division        reduce using rule 233 (TIPO -> numeric para int parc .)
    modulo          reduce using rule 233 (TIPO -> numeric para int parc .)
    elevado         reduce using rule 233 (TIPO -> numeric para int parc .)
    and             reduce using rule 233 (TIPO -> numeric para int parc .)
    or              reduce using rule 233 (TIPO -> numeric para int parc .)
    mayor           reduce using rule 233 (TIPO -> numeric para int parc .)
    menor           reduce using rule 233 (TIPO -> numeric para int parc .)
    mayor_igual     reduce using rule 233 (TIPO -> numeric para int parc .)
    menor_igual     reduce using rule 233 (TIPO -> numeric para int parc .)
    igual           reduce using rule 233 (TIPO -> numeric para int parc .)
    diferente1      reduce using rule 233 (TIPO -> numeric para int parc .)
    diferente2      reduce using rule 233 (TIPO -> numeric para int parc .)
    between         reduce using rule 233 (TIPO -> numeric para int parc .)
    is              reduce using rule 233 (TIPO -> numeric para int parc .)
    isnull          reduce using rule 233 (TIPO -> numeric para int parc .)
    notnull         reduce using rule 233 (TIPO -> numeric para int parc .)
    as              reduce using rule 233 (TIPO -> numeric para int parc .)
    cadenaString    reduce using rule 233 (TIPO -> numeric para int parc .)
    id              reduce using rule 233 (TIPO -> numeric para int parc .)
    cadena          reduce using rule 233 (TIPO -> numeric para int parc .)
    in              reduce using rule 233 (TIPO -> numeric para int parc .)
    not             reduce using rule 233 (TIPO -> numeric para int parc .)
    like            reduce using rule 233 (TIPO -> numeric para int parc .)
    then            reduce using rule 233 (TIPO -> numeric para int parc .)
    when            reduce using rule 233 (TIPO -> numeric para int parc .)
    parc            reduce using rule 233 (TIPO -> numeric para int parc .)
    end             reduce using rule 233 (TIPO -> numeric para int parc .)
    else            reduce using rule 233 (TIPO -> numeric para int parc .)
    constraint      reduce using rule 233 (TIPO -> numeric para int parc .)
    unique          reduce using rule 233 (TIPO -> numeric para int parc .)
    check           reduce using rule 233 (TIPO -> numeric para int parc .)
    default         reduce using rule 233 (TIPO -> numeric para int parc .)
    null            reduce using rule 233 (TIPO -> numeric para int parc .)
    primary         reduce using rule 233 (TIPO -> numeric para int parc .)
    references      reduce using rule 233 (TIPO -> numeric para int parc .)
    asc             reduce using rule 233 (TIPO -> numeric para int parc .)
    desc            reduce using rule 233 (TIPO -> numeric para int parc .)
    dospuntos       reduce using rule 233 (TIPO -> numeric para int parc .)
    language        reduce using rule 233 (TIPO -> numeric para int parc .)
    do              reduce using rule 233 (TIPO -> numeric para int parc .)
    declare         reduce using rule 233 (TIPO -> numeric para int parc .)
    if              reduce using rule 233 (TIPO -> numeric para int parc .)
    raise           reduce using rule 233 (TIPO -> numeric para int parc .)
    begin           reduce using rule 233 (TIPO -> numeric para int parc .)
    execute         reduce using rule 233 (TIPO -> numeric para int parc .)
    return          reduce using rule 233 (TIPO -> numeric para int parc .)
    insert          reduce using rule 233 (TIPO -> numeric para int parc .)
    select          reduce using rule 233 (TIPO -> numeric para int parc .)
    update          reduce using rule 233 (TIPO -> numeric para int parc .)
    delete          reduce using rule 233 (TIPO -> numeric para int parc .)


state 547

    (235) TIPO -> varchar para int parc .

    r_from          reduce using rule 235 (TIPO -> varchar para int parc .)
    coma            reduce using rule 235 (TIPO -> varchar para int parc .)
    where           reduce using rule 235 (TIPO -> varchar para int parc .)
    group           reduce using rule 235 (TIPO -> varchar para int parc .)
    having          reduce using rule 235 (TIPO -> varchar para int parc .)
    union           reduce using rule 235 (TIPO -> varchar para int parc .)
    intersect       reduce using rule 235 (TIPO -> varchar para int parc .)
    except          reduce using rule 235 (TIPO -> varchar para int parc .)
    order           reduce using rule 235 (TIPO -> varchar para int parc .)
    limit           reduce using rule 235 (TIPO -> varchar para int parc .)
    offset          reduce using rule 235 (TIPO -> varchar para int parc .)
    ptcoma          reduce using rule 235 (TIPO -> varchar para int parc .)
    mas             reduce using rule 235 (TIPO -> varchar para int parc .)
    menos           reduce using rule 235 (TIPO -> varchar para int parc .)
    multiplicacion  reduce using rule 235 (TIPO -> varchar para int parc .)
    division        reduce using rule 235 (TIPO -> varchar para int parc .)
    modulo          reduce using rule 235 (TIPO -> varchar para int parc .)
    elevado         reduce using rule 235 (TIPO -> varchar para int parc .)
    and             reduce using rule 235 (TIPO -> varchar para int parc .)
    or              reduce using rule 235 (TIPO -> varchar para int parc .)
    mayor           reduce using rule 235 (TIPO -> varchar para int parc .)
    menor           reduce using rule 235 (TIPO -> varchar para int parc .)
    mayor_igual     reduce using rule 235 (TIPO -> varchar para int parc .)
    menor_igual     reduce using rule 235 (TIPO -> varchar para int parc .)
    igual           reduce using rule 235 (TIPO -> varchar para int parc .)
    diferente1      reduce using rule 235 (TIPO -> varchar para int parc .)
    diferente2      reduce using rule 235 (TIPO -> varchar para int parc .)
    between         reduce using rule 235 (TIPO -> varchar para int parc .)
    is              reduce using rule 235 (TIPO -> varchar para int parc .)
    isnull          reduce using rule 235 (TIPO -> varchar para int parc .)
    notnull         reduce using rule 235 (TIPO -> varchar para int parc .)
    as              reduce using rule 235 (TIPO -> varchar para int parc .)
    cadenaString    reduce using rule 235 (TIPO -> varchar para int parc .)
    id              reduce using rule 235 (TIPO -> varchar para int parc .)
    cadena          reduce using rule 235 (TIPO -> varchar para int parc .)
    in              reduce using rule 235 (TIPO -> varchar para int parc .)
    not             reduce using rule 235 (TIPO -> varchar para int parc .)
    like            reduce using rule 235 (TIPO -> varchar para int parc .)
    then            reduce using rule 235 (TIPO -> varchar para int parc .)
    when            reduce using rule 235 (TIPO -> varchar para int parc .)
    parc            reduce using rule 235 (TIPO -> varchar para int parc .)
    end             reduce using rule 235 (TIPO -> varchar para int parc .)
    else            reduce using rule 235 (TIPO -> varchar para int parc .)
    constraint      reduce using rule 235 (TIPO -> varchar para int parc .)
    unique          reduce using rule 235 (TIPO -> varchar para int parc .)
    check           reduce using rule 235 (TIPO -> varchar para int parc .)
    default         reduce using rule 235 (TIPO -> varchar para int parc .)
    null            reduce using rule 235 (TIPO -> varchar para int parc .)
    primary         reduce using rule 235 (TIPO -> varchar para int parc .)
    references      reduce using rule 235 (TIPO -> varchar para int parc .)
    asc             reduce using rule 235 (TIPO -> varchar para int parc .)
    desc            reduce using rule 235 (TIPO -> varchar para int parc .)
    dospuntos       reduce using rule 235 (TIPO -> varchar para int parc .)
    language        reduce using rule 235 (TIPO -> varchar para int parc .)
    do              reduce using rule 235 (TIPO -> varchar para int parc .)
    declare         reduce using rule 235 (TIPO -> varchar para int parc .)
    if              reduce using rule 235 (TIPO -> varchar para int parc .)
    raise           reduce using rule 235 (TIPO -> varchar para int parc .)
    begin           reduce using rule 235 (TIPO -> varchar para int parc .)
    execute         reduce using rule 235 (TIPO -> varchar para int parc .)
    return          reduce using rule 235 (TIPO -> varchar para int parc .)
    insert          reduce using rule 235 (TIPO -> varchar para int parc .)
    select          reduce using rule 235 (TIPO -> varchar para int parc .)
    update          reduce using rule 235 (TIPO -> varchar para int parc .)
    delete          reduce using rule 235 (TIPO -> varchar para int parc .)


state 548

    (236) TIPO -> timestamp para int parc .
    (244) TIPO -> timestamp para int parc . without time zone
    (245) TIPO -> timestamp para int parc . with time zone

    r_from          reduce using rule 236 (TIPO -> timestamp para int parc .)
    coma            reduce using rule 236 (TIPO -> timestamp para int parc .)
    where           reduce using rule 236 (TIPO -> timestamp para int parc .)
    group           reduce using rule 236 (TIPO -> timestamp para int parc .)
    having          reduce using rule 236 (TIPO -> timestamp para int parc .)
    union           reduce using rule 236 (TIPO -> timestamp para int parc .)
    intersect       reduce using rule 236 (TIPO -> timestamp para int parc .)
    except          reduce using rule 236 (TIPO -> timestamp para int parc .)
    order           reduce using rule 236 (TIPO -> timestamp para int parc .)
    limit           reduce using rule 236 (TIPO -> timestamp para int parc .)
    offset          reduce using rule 236 (TIPO -> timestamp para int parc .)
    ptcoma          reduce using rule 236 (TIPO -> timestamp para int parc .)
    mas             reduce using rule 236 (TIPO -> timestamp para int parc .)
    menos           reduce using rule 236 (TIPO -> timestamp para int parc .)
    multiplicacion  reduce using rule 236 (TIPO -> timestamp para int parc .)
    division        reduce using rule 236 (TIPO -> timestamp para int parc .)
    modulo          reduce using rule 236 (TIPO -> timestamp para int parc .)
    elevado         reduce using rule 236 (TIPO -> timestamp para int parc .)
    and             reduce using rule 236 (TIPO -> timestamp para int parc .)
    or              reduce using rule 236 (TIPO -> timestamp para int parc .)
    mayor           reduce using rule 236 (TIPO -> timestamp para int parc .)
    menor           reduce using rule 236 (TIPO -> timestamp para int parc .)
    mayor_igual     reduce using rule 236 (TIPO -> timestamp para int parc .)
    menor_igual     reduce using rule 236 (TIPO -> timestamp para int parc .)
    igual           reduce using rule 236 (TIPO -> timestamp para int parc .)
    diferente1      reduce using rule 236 (TIPO -> timestamp para int parc .)
    diferente2      reduce using rule 236 (TIPO -> timestamp para int parc .)
    between         reduce using rule 236 (TIPO -> timestamp para int parc .)
    is              reduce using rule 236 (TIPO -> timestamp para int parc .)
    isnull          reduce using rule 236 (TIPO -> timestamp para int parc .)
    notnull         reduce using rule 236 (TIPO -> timestamp para int parc .)
    as              reduce using rule 236 (TIPO -> timestamp para int parc .)
    cadenaString    reduce using rule 236 (TIPO -> timestamp para int parc .)
    id              reduce using rule 236 (TIPO -> timestamp para int parc .)
    cadena          reduce using rule 236 (TIPO -> timestamp para int parc .)
    in              reduce using rule 236 (TIPO -> timestamp para int parc .)
    not             reduce using rule 236 (TIPO -> timestamp para int parc .)
    like            reduce using rule 236 (TIPO -> timestamp para int parc .)
    then            reduce using rule 236 (TIPO -> timestamp para int parc .)
    when            reduce using rule 236 (TIPO -> timestamp para int parc .)
    parc            reduce using rule 236 (TIPO -> timestamp para int parc .)
    end             reduce using rule 236 (TIPO -> timestamp para int parc .)
    else            reduce using rule 236 (TIPO -> timestamp para int parc .)
    constraint      reduce using rule 236 (TIPO -> timestamp para int parc .)
    unique          reduce using rule 236 (TIPO -> timestamp para int parc .)
    check           reduce using rule 236 (TIPO -> timestamp para int parc .)
    default         reduce using rule 236 (TIPO -> timestamp para int parc .)
    null            reduce using rule 236 (TIPO -> timestamp para int parc .)
    primary         reduce using rule 236 (TIPO -> timestamp para int parc .)
    references      reduce using rule 236 (TIPO -> timestamp para int parc .)
    asc             reduce using rule 236 (TIPO -> timestamp para int parc .)
    desc            reduce using rule 236 (TIPO -> timestamp para int parc .)
    dospuntos       reduce using rule 236 (TIPO -> timestamp para int parc .)
    language        reduce using rule 236 (TIPO -> timestamp para int parc .)
    do              reduce using rule 236 (TIPO -> timestamp para int parc .)
    declare         reduce using rule 236 (TIPO -> timestamp para int parc .)
    if              reduce using rule 236 (TIPO -> timestamp para int parc .)
    raise           reduce using rule 236 (TIPO -> timestamp para int parc .)
    begin           reduce using rule 236 (TIPO -> timestamp para int parc .)
    execute         reduce using rule 236 (TIPO -> timestamp para int parc .)
    return          reduce using rule 236 (TIPO -> timestamp para int parc .)
    insert          reduce using rule 236 (TIPO -> timestamp para int parc .)
    select          reduce using rule 236 (TIPO -> timestamp para int parc .)
    update          reduce using rule 236 (TIPO -> timestamp para int parc .)
    delete          reduce using rule 236 (TIPO -> timestamp para int parc .)
    without         shift and go to state 636
    with            shift and go to state 637


state 549

    (264) TIPO -> timestamp without time zone .

    r_from          reduce using rule 264 (TIPO -> timestamp without time zone .)
    coma            reduce using rule 264 (TIPO -> timestamp without time zone .)
    where           reduce using rule 264 (TIPO -> timestamp without time zone .)
    group           reduce using rule 264 (TIPO -> timestamp without time zone .)
    having          reduce using rule 264 (TIPO -> timestamp without time zone .)
    union           reduce using rule 264 (TIPO -> timestamp without time zone .)
    intersect       reduce using rule 264 (TIPO -> timestamp without time zone .)
    except          reduce using rule 264 (TIPO -> timestamp without time zone .)
    order           reduce using rule 264 (TIPO -> timestamp without time zone .)
    limit           reduce using rule 264 (TIPO -> timestamp without time zone .)
    offset          reduce using rule 264 (TIPO -> timestamp without time zone .)
    ptcoma          reduce using rule 264 (TIPO -> timestamp without time zone .)
    mas             reduce using rule 264 (TIPO -> timestamp without time zone .)
    menos           reduce using rule 264 (TIPO -> timestamp without time zone .)
    multiplicacion  reduce using rule 264 (TIPO -> timestamp without time zone .)
    division        reduce using rule 264 (TIPO -> timestamp without time zone .)
    modulo          reduce using rule 264 (TIPO -> timestamp without time zone .)
    elevado         reduce using rule 264 (TIPO -> timestamp without time zone .)
    and             reduce using rule 264 (TIPO -> timestamp without time zone .)
    or              reduce using rule 264 (TIPO -> timestamp without time zone .)
    mayor           reduce using rule 264 (TIPO -> timestamp without time zone .)
    menor           reduce using rule 264 (TIPO -> timestamp without time zone .)
    mayor_igual     reduce using rule 264 (TIPO -> timestamp without time zone .)
    menor_igual     reduce using rule 264 (TIPO -> timestamp without time zone .)
    igual           reduce using rule 264 (TIPO -> timestamp without time zone .)
    diferente1      reduce using rule 264 (TIPO -> timestamp without time zone .)
    diferente2      reduce using rule 264 (TIPO -> timestamp without time zone .)
    between         reduce using rule 264 (TIPO -> timestamp without time zone .)
    is              reduce using rule 264 (TIPO -> timestamp without time zone .)
    isnull          reduce using rule 264 (TIPO -> timestamp without time zone .)
    notnull         reduce using rule 264 (TIPO -> timestamp without time zone .)
    as              reduce using rule 264 (TIPO -> timestamp without time zone .)
    cadenaString    reduce using rule 264 (TIPO -> timestamp without time zone .)
    id              reduce using rule 264 (TIPO -> timestamp without time zone .)
    cadena          reduce using rule 264 (TIPO -> timestamp without time zone .)
    in              reduce using rule 264 (TIPO -> timestamp without time zone .)
    not             reduce using rule 264 (TIPO -> timestamp without time zone .)
    like            reduce using rule 264 (TIPO -> timestamp without time zone .)
    then            reduce using rule 264 (TIPO -> timestamp without time zone .)
    when            reduce using rule 264 (TIPO -> timestamp without time zone .)
    parc            reduce using rule 264 (TIPO -> timestamp without time zone .)
    end             reduce using rule 264 (TIPO -> timestamp without time zone .)
    else            reduce using rule 264 (TIPO -> timestamp without time zone .)
    constraint      reduce using rule 264 (TIPO -> timestamp without time zone .)
    unique          reduce using rule 264 (TIPO -> timestamp without time zone .)
    check           reduce using rule 264 (TIPO -> timestamp without time zone .)
    default         reduce using rule 264 (TIPO -> timestamp without time zone .)
    null            reduce using rule 264 (TIPO -> timestamp without time zone .)
    primary         reduce using rule 264 (TIPO -> timestamp without time zone .)
    references      reduce using rule 264 (TIPO -> timestamp without time zone .)
    asc             reduce using rule 264 (TIPO -> timestamp without time zone .)
    desc            reduce using rule 264 (TIPO -> timestamp without time zone .)
    dospuntos       reduce using rule 264 (TIPO -> timestamp without time zone .)
    language        reduce using rule 264 (TIPO -> timestamp without time zone .)
    do              reduce using rule 264 (TIPO -> timestamp without time zone .)
    declare         reduce using rule 264 (TIPO -> timestamp without time zone .)
    if              reduce using rule 264 (TIPO -> timestamp without time zone .)
    raise           reduce using rule 264 (TIPO -> timestamp without time zone .)
    begin           reduce using rule 264 (TIPO -> timestamp without time zone .)
    execute         reduce using rule 264 (TIPO -> timestamp without time zone .)
    return          reduce using rule 264 (TIPO -> timestamp without time zone .)
    insert          reduce using rule 264 (TIPO -> timestamp without time zone .)
    select          reduce using rule 264 (TIPO -> timestamp without time zone .)
    update          reduce using rule 264 (TIPO -> timestamp without time zone .)
    delete          reduce using rule 264 (TIPO -> timestamp without time zone .)


state 550

    (265) TIPO -> timestamp with time zone .

    r_from          reduce using rule 265 (TIPO -> timestamp with time zone .)
    coma            reduce using rule 265 (TIPO -> timestamp with time zone .)
    where           reduce using rule 265 (TIPO -> timestamp with time zone .)
    group           reduce using rule 265 (TIPO -> timestamp with time zone .)
    having          reduce using rule 265 (TIPO -> timestamp with time zone .)
    union           reduce using rule 265 (TIPO -> timestamp with time zone .)
    intersect       reduce using rule 265 (TIPO -> timestamp with time zone .)
    except          reduce using rule 265 (TIPO -> timestamp with time zone .)
    order           reduce using rule 265 (TIPO -> timestamp with time zone .)
    limit           reduce using rule 265 (TIPO -> timestamp with time zone .)
    offset          reduce using rule 265 (TIPO -> timestamp with time zone .)
    ptcoma          reduce using rule 265 (TIPO -> timestamp with time zone .)
    mas             reduce using rule 265 (TIPO -> timestamp with time zone .)
    menos           reduce using rule 265 (TIPO -> timestamp with time zone .)
    multiplicacion  reduce using rule 265 (TIPO -> timestamp with time zone .)
    division        reduce using rule 265 (TIPO -> timestamp with time zone .)
    modulo          reduce using rule 265 (TIPO -> timestamp with time zone .)
    elevado         reduce using rule 265 (TIPO -> timestamp with time zone .)
    and             reduce using rule 265 (TIPO -> timestamp with time zone .)
    or              reduce using rule 265 (TIPO -> timestamp with time zone .)
    mayor           reduce using rule 265 (TIPO -> timestamp with time zone .)
    menor           reduce using rule 265 (TIPO -> timestamp with time zone .)
    mayor_igual     reduce using rule 265 (TIPO -> timestamp with time zone .)
    menor_igual     reduce using rule 265 (TIPO -> timestamp with time zone .)
    igual           reduce using rule 265 (TIPO -> timestamp with time zone .)
    diferente1      reduce using rule 265 (TIPO -> timestamp with time zone .)
    diferente2      reduce using rule 265 (TIPO -> timestamp with time zone .)
    between         reduce using rule 265 (TIPO -> timestamp with time zone .)
    is              reduce using rule 265 (TIPO -> timestamp with time zone .)
    isnull          reduce using rule 265 (TIPO -> timestamp with time zone .)
    notnull         reduce using rule 265 (TIPO -> timestamp with time zone .)
    as              reduce using rule 265 (TIPO -> timestamp with time zone .)
    cadenaString    reduce using rule 265 (TIPO -> timestamp with time zone .)
    id              reduce using rule 265 (TIPO -> timestamp with time zone .)
    cadena          reduce using rule 265 (TIPO -> timestamp with time zone .)
    in              reduce using rule 265 (TIPO -> timestamp with time zone .)
    not             reduce using rule 265 (TIPO -> timestamp with time zone .)
    like            reduce using rule 265 (TIPO -> timestamp with time zone .)
    then            reduce using rule 265 (TIPO -> timestamp with time zone .)
    when            reduce using rule 265 (TIPO -> timestamp with time zone .)
    parc            reduce using rule 265 (TIPO -> timestamp with time zone .)
    end             reduce using rule 265 (TIPO -> timestamp with time zone .)
    else            reduce using rule 265 (TIPO -> timestamp with time zone .)
    constraint      reduce using rule 265 (TIPO -> timestamp with time zone .)
    unique          reduce using rule 265 (TIPO -> timestamp with time zone .)
    check           reduce using rule 265 (TIPO -> timestamp with time zone .)
    default         reduce using rule 265 (TIPO -> timestamp with time zone .)
    null            reduce using rule 265 (TIPO -> timestamp with time zone .)
    primary         reduce using rule 265 (TIPO -> timestamp with time zone .)
    references      reduce using rule 265 (TIPO -> timestamp with time zone .)
    asc             reduce using rule 265 (TIPO -> timestamp with time zone .)
    desc            reduce using rule 265 (TIPO -> timestamp with time zone .)
    dospuntos       reduce using rule 265 (TIPO -> timestamp with time zone .)
    language        reduce using rule 265 (TIPO -> timestamp with time zone .)
    do              reduce using rule 265 (TIPO -> timestamp with time zone .)
    declare         reduce using rule 265 (TIPO -> timestamp with time zone .)
    if              reduce using rule 265 (TIPO -> timestamp with time zone .)
    raise           reduce using rule 265 (TIPO -> timestamp with time zone .)
    begin           reduce using rule 265 (TIPO -> timestamp with time zone .)
    execute         reduce using rule 265 (TIPO -> timestamp with time zone .)
    return          reduce using rule 265 (TIPO -> timestamp with time zone .)
    insert          reduce using rule 265 (TIPO -> timestamp with time zone .)
    select          reduce using rule 265 (TIPO -> timestamp with time zone .)
    update          reduce using rule 265 (TIPO -> timestamp with time zone .)
    delete          reduce using rule 265 (TIPO -> timestamp with time zone .)


state 551

    (237) TIPO -> character para int parc .

    r_from          reduce using rule 237 (TIPO -> character para int parc .)
    coma            reduce using rule 237 (TIPO -> character para int parc .)
    where           reduce using rule 237 (TIPO -> character para int parc .)
    group           reduce using rule 237 (TIPO -> character para int parc .)
    having          reduce using rule 237 (TIPO -> character para int parc .)
    union           reduce using rule 237 (TIPO -> character para int parc .)
    intersect       reduce using rule 237 (TIPO -> character para int parc .)
    except          reduce using rule 237 (TIPO -> character para int parc .)
    order           reduce using rule 237 (TIPO -> character para int parc .)
    limit           reduce using rule 237 (TIPO -> character para int parc .)
    offset          reduce using rule 237 (TIPO -> character para int parc .)
    ptcoma          reduce using rule 237 (TIPO -> character para int parc .)
    mas             reduce using rule 237 (TIPO -> character para int parc .)
    menos           reduce using rule 237 (TIPO -> character para int parc .)
    multiplicacion  reduce using rule 237 (TIPO -> character para int parc .)
    division        reduce using rule 237 (TIPO -> character para int parc .)
    modulo          reduce using rule 237 (TIPO -> character para int parc .)
    elevado         reduce using rule 237 (TIPO -> character para int parc .)
    and             reduce using rule 237 (TIPO -> character para int parc .)
    or              reduce using rule 237 (TIPO -> character para int parc .)
    mayor           reduce using rule 237 (TIPO -> character para int parc .)
    menor           reduce using rule 237 (TIPO -> character para int parc .)
    mayor_igual     reduce using rule 237 (TIPO -> character para int parc .)
    menor_igual     reduce using rule 237 (TIPO -> character para int parc .)
    igual           reduce using rule 237 (TIPO -> character para int parc .)
    diferente1      reduce using rule 237 (TIPO -> character para int parc .)
    diferente2      reduce using rule 237 (TIPO -> character para int parc .)
    between         reduce using rule 237 (TIPO -> character para int parc .)
    is              reduce using rule 237 (TIPO -> character para int parc .)
    isnull          reduce using rule 237 (TIPO -> character para int parc .)
    notnull         reduce using rule 237 (TIPO -> character para int parc .)
    as              reduce using rule 237 (TIPO -> character para int parc .)
    cadenaString    reduce using rule 237 (TIPO -> character para int parc .)
    id              reduce using rule 237 (TIPO -> character para int parc .)
    cadena          reduce using rule 237 (TIPO -> character para int parc .)
    in              reduce using rule 237 (TIPO -> character para int parc .)
    not             reduce using rule 237 (TIPO -> character para int parc .)
    like            reduce using rule 237 (TIPO -> character para int parc .)
    then            reduce using rule 237 (TIPO -> character para int parc .)
    when            reduce using rule 237 (TIPO -> character para int parc .)
    parc            reduce using rule 237 (TIPO -> character para int parc .)
    end             reduce using rule 237 (TIPO -> character para int parc .)
    else            reduce using rule 237 (TIPO -> character para int parc .)
    constraint      reduce using rule 237 (TIPO -> character para int parc .)
    unique          reduce using rule 237 (TIPO -> character para int parc .)
    check           reduce using rule 237 (TIPO -> character para int parc .)
    default         reduce using rule 237 (TIPO -> character para int parc .)
    null            reduce using rule 237 (TIPO -> character para int parc .)
    primary         reduce using rule 237 (TIPO -> character para int parc .)
    references      reduce using rule 237 (TIPO -> character para int parc .)
    asc             reduce using rule 237 (TIPO -> character para int parc .)
    desc            reduce using rule 237 (TIPO -> character para int parc .)
    dospuntos       reduce using rule 237 (TIPO -> character para int parc .)
    language        reduce using rule 237 (TIPO -> character para int parc .)
    do              reduce using rule 237 (TIPO -> character para int parc .)
    declare         reduce using rule 237 (TIPO -> character para int parc .)
    if              reduce using rule 237 (TIPO -> character para int parc .)
    raise           reduce using rule 237 (TIPO -> character para int parc .)
    begin           reduce using rule 237 (TIPO -> character para int parc .)
    execute         reduce using rule 237 (TIPO -> character para int parc .)
    return          reduce using rule 237 (TIPO -> character para int parc .)
    insert          reduce using rule 237 (TIPO -> character para int parc .)
    select          reduce using rule 237 (TIPO -> character para int parc .)
    update          reduce using rule 237 (TIPO -> character para int parc .)
    delete          reduce using rule 237 (TIPO -> character para int parc .)


state 552

    (241) TIPO -> character varying para int . parc

    parc            shift and go to state 638


state 553

    (239) TIPO -> char para int parc .

    r_from          reduce using rule 239 (TIPO -> char para int parc .)
    coma            reduce using rule 239 (TIPO -> char para int parc .)
    where           reduce using rule 239 (TIPO -> char para int parc .)
    group           reduce using rule 239 (TIPO -> char para int parc .)
    having          reduce using rule 239 (TIPO -> char para int parc .)
    union           reduce using rule 239 (TIPO -> char para int parc .)
    intersect       reduce using rule 239 (TIPO -> char para int parc .)
    except          reduce using rule 239 (TIPO -> char para int parc .)
    order           reduce using rule 239 (TIPO -> char para int parc .)
    limit           reduce using rule 239 (TIPO -> char para int parc .)
    offset          reduce using rule 239 (TIPO -> char para int parc .)
    ptcoma          reduce using rule 239 (TIPO -> char para int parc .)
    mas             reduce using rule 239 (TIPO -> char para int parc .)
    menos           reduce using rule 239 (TIPO -> char para int parc .)
    multiplicacion  reduce using rule 239 (TIPO -> char para int parc .)
    division        reduce using rule 239 (TIPO -> char para int parc .)
    modulo          reduce using rule 239 (TIPO -> char para int parc .)
    elevado         reduce using rule 239 (TIPO -> char para int parc .)
    and             reduce using rule 239 (TIPO -> char para int parc .)
    or              reduce using rule 239 (TIPO -> char para int parc .)
    mayor           reduce using rule 239 (TIPO -> char para int parc .)
    menor           reduce using rule 239 (TIPO -> char para int parc .)
    mayor_igual     reduce using rule 239 (TIPO -> char para int parc .)
    menor_igual     reduce using rule 239 (TIPO -> char para int parc .)
    igual           reduce using rule 239 (TIPO -> char para int parc .)
    diferente1      reduce using rule 239 (TIPO -> char para int parc .)
    diferente2      reduce using rule 239 (TIPO -> char para int parc .)
    between         reduce using rule 239 (TIPO -> char para int parc .)
    is              reduce using rule 239 (TIPO -> char para int parc .)
    isnull          reduce using rule 239 (TIPO -> char para int parc .)
    notnull         reduce using rule 239 (TIPO -> char para int parc .)
    as              reduce using rule 239 (TIPO -> char para int parc .)
    cadenaString    reduce using rule 239 (TIPO -> char para int parc .)
    id              reduce using rule 239 (TIPO -> char para int parc .)
    cadena          reduce using rule 239 (TIPO -> char para int parc .)
    in              reduce using rule 239 (TIPO -> char para int parc .)
    not             reduce using rule 239 (TIPO -> char para int parc .)
    like            reduce using rule 239 (TIPO -> char para int parc .)
    then            reduce using rule 239 (TIPO -> char para int parc .)
    when            reduce using rule 239 (TIPO -> char para int parc .)
    parc            reduce using rule 239 (TIPO -> char para int parc .)
    end             reduce using rule 239 (TIPO -> char para int parc .)
    else            reduce using rule 239 (TIPO -> char para int parc .)
    constraint      reduce using rule 239 (TIPO -> char para int parc .)
    unique          reduce using rule 239 (TIPO -> char para int parc .)
    check           reduce using rule 239 (TIPO -> char para int parc .)
    default         reduce using rule 239 (TIPO -> char para int parc .)
    null            reduce using rule 239 (TIPO -> char para int parc .)
    primary         reduce using rule 239 (TIPO -> char para int parc .)
    references      reduce using rule 239 (TIPO -> char para int parc .)
    asc             reduce using rule 239 (TIPO -> char para int parc .)
    desc            reduce using rule 239 (TIPO -> char para int parc .)
    dospuntos       reduce using rule 239 (TIPO -> char para int parc .)
    language        reduce using rule 239 (TIPO -> char para int parc .)
    do              reduce using rule 239 (TIPO -> char para int parc .)
    declare         reduce using rule 239 (TIPO -> char para int parc .)
    if              reduce using rule 239 (TIPO -> char para int parc .)
    raise           reduce using rule 239 (TIPO -> char para int parc .)
    begin           reduce using rule 239 (TIPO -> char para int parc .)
    execute         reduce using rule 239 (TIPO -> char para int parc .)
    return          reduce using rule 239 (TIPO -> char para int parc .)
    insert          reduce using rule 239 (TIPO -> char para int parc .)
    select          reduce using rule 239 (TIPO -> char para int parc .)
    update          reduce using rule 239 (TIPO -> char para int parc .)
    delete          reduce using rule 239 (TIPO -> char para int parc .)


state 554

    (240) TIPO -> time para int parc .
    (246) TIPO -> time para int parc . without time zone
    (247) TIPO -> time para int parc . with time zone

    r_from          reduce using rule 240 (TIPO -> time para int parc .)
    coma            reduce using rule 240 (TIPO -> time para int parc .)
    where           reduce using rule 240 (TIPO -> time para int parc .)
    group           reduce using rule 240 (TIPO -> time para int parc .)
    having          reduce using rule 240 (TIPO -> time para int parc .)
    union           reduce using rule 240 (TIPO -> time para int parc .)
    intersect       reduce using rule 240 (TIPO -> time para int parc .)
    except          reduce using rule 240 (TIPO -> time para int parc .)
    order           reduce using rule 240 (TIPO -> time para int parc .)
    limit           reduce using rule 240 (TIPO -> time para int parc .)
    offset          reduce using rule 240 (TIPO -> time para int parc .)
    ptcoma          reduce using rule 240 (TIPO -> time para int parc .)
    mas             reduce using rule 240 (TIPO -> time para int parc .)
    menos           reduce using rule 240 (TIPO -> time para int parc .)
    multiplicacion  reduce using rule 240 (TIPO -> time para int parc .)
    division        reduce using rule 240 (TIPO -> time para int parc .)
    modulo          reduce using rule 240 (TIPO -> time para int parc .)
    elevado         reduce using rule 240 (TIPO -> time para int parc .)
    and             reduce using rule 240 (TIPO -> time para int parc .)
    or              reduce using rule 240 (TIPO -> time para int parc .)
    mayor           reduce using rule 240 (TIPO -> time para int parc .)
    menor           reduce using rule 240 (TIPO -> time para int parc .)
    mayor_igual     reduce using rule 240 (TIPO -> time para int parc .)
    menor_igual     reduce using rule 240 (TIPO -> time para int parc .)
    igual           reduce using rule 240 (TIPO -> time para int parc .)
    diferente1      reduce using rule 240 (TIPO -> time para int parc .)
    diferente2      reduce using rule 240 (TIPO -> time para int parc .)
    between         reduce using rule 240 (TIPO -> time para int parc .)
    is              reduce using rule 240 (TIPO -> time para int parc .)
    isnull          reduce using rule 240 (TIPO -> time para int parc .)
    notnull         reduce using rule 240 (TIPO -> time para int parc .)
    as              reduce using rule 240 (TIPO -> time para int parc .)
    cadenaString    reduce using rule 240 (TIPO -> time para int parc .)
    id              reduce using rule 240 (TIPO -> time para int parc .)
    cadena          reduce using rule 240 (TIPO -> time para int parc .)
    in              reduce using rule 240 (TIPO -> time para int parc .)
    not             reduce using rule 240 (TIPO -> time para int parc .)
    like            reduce using rule 240 (TIPO -> time para int parc .)
    then            reduce using rule 240 (TIPO -> time para int parc .)
    when            reduce using rule 240 (TIPO -> time para int parc .)
    parc            reduce using rule 240 (TIPO -> time para int parc .)
    end             reduce using rule 240 (TIPO -> time para int parc .)
    else            reduce using rule 240 (TIPO -> time para int parc .)
    constraint      reduce using rule 240 (TIPO -> time para int parc .)
    unique          reduce using rule 240 (TIPO -> time para int parc .)
    check           reduce using rule 240 (TIPO -> time para int parc .)
    default         reduce using rule 240 (TIPO -> time para int parc .)
    null            reduce using rule 240 (TIPO -> time para int parc .)
    primary         reduce using rule 240 (TIPO -> time para int parc .)
    references      reduce using rule 240 (TIPO -> time para int parc .)
    asc             reduce using rule 240 (TIPO -> time para int parc .)
    desc            reduce using rule 240 (TIPO -> time para int parc .)
    dospuntos       reduce using rule 240 (TIPO -> time para int parc .)
    language        reduce using rule 240 (TIPO -> time para int parc .)
    do              reduce using rule 240 (TIPO -> time para int parc .)
    declare         reduce using rule 240 (TIPO -> time para int parc .)
    if              reduce using rule 240 (TIPO -> time para int parc .)
    raise           reduce using rule 240 (TIPO -> time para int parc .)
    begin           reduce using rule 240 (TIPO -> time para int parc .)
    execute         reduce using rule 240 (TIPO -> time para int parc .)
    return          reduce using rule 240 (TIPO -> time para int parc .)
    insert          reduce using rule 240 (TIPO -> time para int parc .)
    select          reduce using rule 240 (TIPO -> time para int parc .)
    update          reduce using rule 240 (TIPO -> time para int parc .)
    delete          reduce using rule 240 (TIPO -> time para int parc .)
    without         shift and go to state 639
    with            shift and go to state 640


state 555

    (266) TIPO -> time without time zone .

    r_from          reduce using rule 266 (TIPO -> time without time zone .)
    coma            reduce using rule 266 (TIPO -> time without time zone .)
    where           reduce using rule 266 (TIPO -> time without time zone .)
    group           reduce using rule 266 (TIPO -> time without time zone .)
    having          reduce using rule 266 (TIPO -> time without time zone .)
    union           reduce using rule 266 (TIPO -> time without time zone .)
    intersect       reduce using rule 266 (TIPO -> time without time zone .)
    except          reduce using rule 266 (TIPO -> time without time zone .)
    order           reduce using rule 266 (TIPO -> time without time zone .)
    limit           reduce using rule 266 (TIPO -> time without time zone .)
    offset          reduce using rule 266 (TIPO -> time without time zone .)
    ptcoma          reduce using rule 266 (TIPO -> time without time zone .)
    mas             reduce using rule 266 (TIPO -> time without time zone .)
    menos           reduce using rule 266 (TIPO -> time without time zone .)
    multiplicacion  reduce using rule 266 (TIPO -> time without time zone .)
    division        reduce using rule 266 (TIPO -> time without time zone .)
    modulo          reduce using rule 266 (TIPO -> time without time zone .)
    elevado         reduce using rule 266 (TIPO -> time without time zone .)
    and             reduce using rule 266 (TIPO -> time without time zone .)
    or              reduce using rule 266 (TIPO -> time without time zone .)
    mayor           reduce using rule 266 (TIPO -> time without time zone .)
    menor           reduce using rule 266 (TIPO -> time without time zone .)
    mayor_igual     reduce using rule 266 (TIPO -> time without time zone .)
    menor_igual     reduce using rule 266 (TIPO -> time without time zone .)
    igual           reduce using rule 266 (TIPO -> time without time zone .)
    diferente1      reduce using rule 266 (TIPO -> time without time zone .)
    diferente2      reduce using rule 266 (TIPO -> time without time zone .)
    between         reduce using rule 266 (TIPO -> time without time zone .)
    is              reduce using rule 266 (TIPO -> time without time zone .)
    isnull          reduce using rule 266 (TIPO -> time without time zone .)
    notnull         reduce using rule 266 (TIPO -> time without time zone .)
    as              reduce using rule 266 (TIPO -> time without time zone .)
    cadenaString    reduce using rule 266 (TIPO -> time without time zone .)
    id              reduce using rule 266 (TIPO -> time without time zone .)
    cadena          reduce using rule 266 (TIPO -> time without time zone .)
    in              reduce using rule 266 (TIPO -> time without time zone .)
    not             reduce using rule 266 (TIPO -> time without time zone .)
    like            reduce using rule 266 (TIPO -> time without time zone .)
    then            reduce using rule 266 (TIPO -> time without time zone .)
    when            reduce using rule 266 (TIPO -> time without time zone .)
    parc            reduce using rule 266 (TIPO -> time without time zone .)
    end             reduce using rule 266 (TIPO -> time without time zone .)
    else            reduce using rule 266 (TIPO -> time without time zone .)
    constraint      reduce using rule 266 (TIPO -> time without time zone .)
    unique          reduce using rule 266 (TIPO -> time without time zone .)
    check           reduce using rule 266 (TIPO -> time without time zone .)
    default         reduce using rule 266 (TIPO -> time without time zone .)
    null            reduce using rule 266 (TIPO -> time without time zone .)
    primary         reduce using rule 266 (TIPO -> time without time zone .)
    references      reduce using rule 266 (TIPO -> time without time zone .)
    asc             reduce using rule 266 (TIPO -> time without time zone .)
    desc            reduce using rule 266 (TIPO -> time without time zone .)
    dospuntos       reduce using rule 266 (TIPO -> time without time zone .)
    language        reduce using rule 266 (TIPO -> time without time zone .)
    do              reduce using rule 266 (TIPO -> time without time zone .)
    declare         reduce using rule 266 (TIPO -> time without time zone .)
    if              reduce using rule 266 (TIPO -> time without time zone .)
    raise           reduce using rule 266 (TIPO -> time without time zone .)
    begin           reduce using rule 266 (TIPO -> time without time zone .)
    execute         reduce using rule 266 (TIPO -> time without time zone .)
    return          reduce using rule 266 (TIPO -> time without time zone .)
    insert          reduce using rule 266 (TIPO -> time without time zone .)
    select          reduce using rule 266 (TIPO -> time without time zone .)
    update          reduce using rule 266 (TIPO -> time without time zone .)
    delete          reduce using rule 266 (TIPO -> time without time zone .)


state 556

    (267) TIPO -> time with time zone .

    r_from          reduce using rule 267 (TIPO -> time with time zone .)
    coma            reduce using rule 267 (TIPO -> time with time zone .)
    where           reduce using rule 267 (TIPO -> time with time zone .)
    group           reduce using rule 267 (TIPO -> time with time zone .)
    having          reduce using rule 267 (TIPO -> time with time zone .)
    union           reduce using rule 267 (TIPO -> time with time zone .)
    intersect       reduce using rule 267 (TIPO -> time with time zone .)
    except          reduce using rule 267 (TIPO -> time with time zone .)
    order           reduce using rule 267 (TIPO -> time with time zone .)
    limit           reduce using rule 267 (TIPO -> time with time zone .)
    offset          reduce using rule 267 (TIPO -> time with time zone .)
    ptcoma          reduce using rule 267 (TIPO -> time with time zone .)
    mas             reduce using rule 267 (TIPO -> time with time zone .)
    menos           reduce using rule 267 (TIPO -> time with time zone .)
    multiplicacion  reduce using rule 267 (TIPO -> time with time zone .)
    division        reduce using rule 267 (TIPO -> time with time zone .)
    modulo          reduce using rule 267 (TIPO -> time with time zone .)
    elevado         reduce using rule 267 (TIPO -> time with time zone .)
    and             reduce using rule 267 (TIPO -> time with time zone .)
    or              reduce using rule 267 (TIPO -> time with time zone .)
    mayor           reduce using rule 267 (TIPO -> time with time zone .)
    menor           reduce using rule 267 (TIPO -> time with time zone .)
    mayor_igual     reduce using rule 267 (TIPO -> time with time zone .)
    menor_igual     reduce using rule 267 (TIPO -> time with time zone .)
    igual           reduce using rule 267 (TIPO -> time with time zone .)
    diferente1      reduce using rule 267 (TIPO -> time with time zone .)
    diferente2      reduce using rule 267 (TIPO -> time with time zone .)
    between         reduce using rule 267 (TIPO -> time with time zone .)
    is              reduce using rule 267 (TIPO -> time with time zone .)
    isnull          reduce using rule 267 (TIPO -> time with time zone .)
    notnull         reduce using rule 267 (TIPO -> time with time zone .)
    as              reduce using rule 267 (TIPO -> time with time zone .)
    cadenaString    reduce using rule 267 (TIPO -> time with time zone .)
    id              reduce using rule 267 (TIPO -> time with time zone .)
    cadena          reduce using rule 267 (TIPO -> time with time zone .)
    in              reduce using rule 267 (TIPO -> time with time zone .)
    not             reduce using rule 267 (TIPO -> time with time zone .)
    like            reduce using rule 267 (TIPO -> time with time zone .)
    then            reduce using rule 267 (TIPO -> time with time zone .)
    when            reduce using rule 267 (TIPO -> time with time zone .)
    parc            reduce using rule 267 (TIPO -> time with time zone .)
    end             reduce using rule 267 (TIPO -> time with time zone .)
    else            reduce using rule 267 (TIPO -> time with time zone .)
    constraint      reduce using rule 267 (TIPO -> time with time zone .)
    unique          reduce using rule 267 (TIPO -> time with time zone .)
    check           reduce using rule 267 (TIPO -> time with time zone .)
    default         reduce using rule 267 (TIPO -> time with time zone .)
    null            reduce using rule 267 (TIPO -> time with time zone .)
    primary         reduce using rule 267 (TIPO -> time with time zone .)
    references      reduce using rule 267 (TIPO -> time with time zone .)
    asc             reduce using rule 267 (TIPO -> time with time zone .)
    desc            reduce using rule 267 (TIPO -> time with time zone .)
    dospuntos       reduce using rule 267 (TIPO -> time with time zone .)
    language        reduce using rule 267 (TIPO -> time with time zone .)
    do              reduce using rule 267 (TIPO -> time with time zone .)
    declare         reduce using rule 267 (TIPO -> time with time zone .)
    if              reduce using rule 267 (TIPO -> time with time zone .)
    raise           reduce using rule 267 (TIPO -> time with time zone .)
    begin           reduce using rule 267 (TIPO -> time with time zone .)
    execute         reduce using rule 267 (TIPO -> time with time zone .)
    return          reduce using rule 267 (TIPO -> time with time zone .)
    insert          reduce using rule 267 (TIPO -> time with time zone .)
    select          reduce using rule 267 (TIPO -> time with time zone .)
    update          reduce using rule 267 (TIPO -> time with time zone .)
    delete          reduce using rule 267 (TIPO -> time with time zone .)


state 557

    (327) EXP -> extract para FIELDS r_from timestamp cadena . parc

    parc            shift and go to state 641


state 558

    (167) COLDEF -> id TIPO LOPCOLUMN .
    (168) LOPCOLUMN -> LOPCOLUMN . OPCOLUMN
    (170) OPCOLUMN -> . constraint id unique
    (171) OPCOLUMN -> . unique
    (172) OPCOLUMN -> . constraint id check para CONDCHECK parc
    (173) OPCOLUMN -> . check para CONDCHECK parc
    (174) OPCOLUMN -> . default EXP
    (175) OPCOLUMN -> . not null
    (176) OPCOLUMN -> . null
    (177) OPCOLUMN -> . primary key
    (178) OPCOLUMN -> . references id

    parc            reduce using rule 167 (COLDEF -> id TIPO LOPCOLUMN .)
    coma            reduce using rule 167 (COLDEF -> id TIPO LOPCOLUMN .)
    constraint      shift and go to state 560
    unique          shift and go to state 561
    check           shift and go to state 562
    default         shift and go to state 563
    not             shift and go to state 564
    null            shift and go to state 565
    primary         shift and go to state 566
    references      shift and go to state 567

    OPCOLUMN                       shift and go to state 642

state 559

    (169) LOPCOLUMN -> OPCOLUMN .

    constraint      reduce using rule 169 (LOPCOLUMN -> OPCOLUMN .)
    unique          reduce using rule 169 (LOPCOLUMN -> OPCOLUMN .)
    check           reduce using rule 169 (LOPCOLUMN -> OPCOLUMN .)
    default         reduce using rule 169 (LOPCOLUMN -> OPCOLUMN .)
    not             reduce using rule 169 (LOPCOLUMN -> OPCOLUMN .)
    null            reduce using rule 169 (LOPCOLUMN -> OPCOLUMN .)
    primary         reduce using rule 169 (LOPCOLUMN -> OPCOLUMN .)
    references      reduce using rule 169 (LOPCOLUMN -> OPCOLUMN .)
    parc            reduce using rule 169 (LOPCOLUMN -> OPCOLUMN .)
    coma            reduce using rule 169 (LOPCOLUMN -> OPCOLUMN .)


state 560

    (170) OPCOLUMN -> constraint . id unique
    (172) OPCOLUMN -> constraint . id check para CONDCHECK parc

    id              shift and go to state 643


state 561

    (171) OPCOLUMN -> unique .

    constraint      reduce using rule 171 (OPCOLUMN -> unique .)
    unique          reduce using rule 171 (OPCOLUMN -> unique .)
    check           reduce using rule 171 (OPCOLUMN -> unique .)
    default         reduce using rule 171 (OPCOLUMN -> unique .)
    not             reduce using rule 171 (OPCOLUMN -> unique .)
    null            reduce using rule 171 (OPCOLUMN -> unique .)
    primary         reduce using rule 171 (OPCOLUMN -> unique .)
    references      reduce using rule 171 (OPCOLUMN -> unique .)
    parc            reduce using rule 171 (OPCOLUMN -> unique .)
    coma            reduce using rule 171 (OPCOLUMN -> unique .)


state 562

    (173) OPCOLUMN -> check . para CONDCHECK parc

    para            shift and go to state 644


state 563

    (174) OPCOLUMN -> default . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 645
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 564

    (175) OPCOLUMN -> not . null

    null            shift and go to state 646


state 565

    (176) OPCOLUMN -> null .

    constraint      reduce using rule 176 (OPCOLUMN -> null .)
    unique          reduce using rule 176 (OPCOLUMN -> null .)
    check           reduce using rule 176 (OPCOLUMN -> null .)
    default         reduce using rule 176 (OPCOLUMN -> null .)
    not             reduce using rule 176 (OPCOLUMN -> null .)
    null            reduce using rule 176 (OPCOLUMN -> null .)
    primary         reduce using rule 176 (OPCOLUMN -> null .)
    references      reduce using rule 176 (OPCOLUMN -> null .)
    parc            reduce using rule 176 (OPCOLUMN -> null .)
    coma            reduce using rule 176 (OPCOLUMN -> null .)


state 566

    (177) OPCOLUMN -> primary . key

    key             shift and go to state 647


state 567

    (178) OPCOLUMN -> references . id

    id              shift and go to state 648


state 568

    (160) CREATETABLE -> create table id para LDEF parc ptcoma .

    use             reduce using rule 160 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    select          reduce using rule 160 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    create          reduce using rule 160 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    update          reduce using rule 160 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    delete          reduce using rule 160 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    alter           reduce using rule 160 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    drop            reduce using rule 160 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    insert          reduce using rule 160 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    case            reduce using rule 160 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    show            reduce using rule 160 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    id              reduce using rule 160 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    if              reduce using rule 160 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    execute         reduce using rule 160 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    $end            reduce using rule 160 (CREATETABLE -> create table id para LDEF parc ptcoma .)


state 569

    (161) CREATETABLE -> create table id para LDEF parc HERENCIA . ptcoma

    ptcoma          shift and go to state 649


state 570

    (190) HERENCIA -> inherits . para id parc

    para            shift and go to state 650


state 571

    (162) LDEF -> LDEF coma COLDEF .

    parc            reduce using rule 162 (LDEF -> LDEF coma COLDEF .)
    coma            reduce using rule 162 (LDEF -> LDEF coma COLDEF .)


state 572

    (165) COLDEF -> constraint id OPCONST .

    parc            reduce using rule 165 (COLDEF -> constraint id OPCONST .)
    coma            reduce using rule 165 (COLDEF -> constraint id OPCONST .)


state 573

    (179) OPCONST -> primary key para . LEXP parc
    (226) LEXP -> . LEXP coma EXP
    (227) LEXP -> . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 651
    EXP                            shift and go to state 57
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 574

    (180) OPCONST -> foreign key para . LEXP parc references id para LEXP parc
    (226) LEXP -> . LEXP coma EXP
    (227) LEXP -> . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 652
    EXP                            shift and go to state 57
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 575

    (181) OPCONST -> unique para LEXP . parc
    (226) LEXP -> LEXP . coma EXP

    parc            shift and go to state 653
    coma            shift and go to state 121


state 576

    (182) OPCONST -> check para CONDCHECK . parc

    parc            shift and go to state 654


state 577

    (183) CONDCHECK -> EXP . mayor EXP
    (184) CONDCHECK -> EXP . menor EXP
    (185) CONDCHECK -> EXP . mayor_igual EXP
    (186) CONDCHECK -> EXP . menor_igual EXP
    (187) CONDCHECK -> EXP . igual EXP
    (188) CONDCHECK -> EXP . diferente1 EXP
    (189) CONDCHECK -> EXP . diferente2 EXP
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    mayor           shift and go to state 655
    menor           shift and go to state 656
    mayor_igual     shift and go to state 657
    menor_igual     shift and go to state 658
    igual           shift and go to state 659
    diferente1      shift and go to state 660
    diferente2      shift and go to state 661
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    and             shift and go to state 128
    or              shift and go to state 129
    between         shift and go to state 137
    is              shift and go to state 138
    isnull          shift and go to state 140
    notnull         shift and go to state 141
    as              shift and go to state 142
    cadenaString    shift and go to state 143
    id              shift and go to state 144
    cadena          shift and go to state 145
    in              shift and go to state 146
    not             shift and go to state 139
    like            shift and go to state 147


state 578

    (191) CREATETYPE -> create type id as enum para LEXP . parc
    (226) LEXP -> LEXP . coma EXP

    parc            shift and go to state 662
    coma            shift and go to state 121


state 579

    (144) CREATEDB -> create RD if not exist id OPCCDB .

    ptcoma          reduce using rule 144 (CREATEDB -> create RD if not exist id OPCCDB .)


state 580

    (50) CREATEINDEX -> create index id on id para id . ORDEN parc
    (51) CREATEINDEX -> create index id on id para id . id ORDEN parc
    (52) CREATEINDEX -> create index id on id para id . id parc
    (322) EXP -> id . para LEXP parc
    (323) EXP -> id . para parc
    (334) EXP -> id .
    (53) ORDEN -> . asc
    (54) ORDEN -> . desc
    (55) ORDEN -> . nulls first
    (56) ORDEN -> . nulls last
    (57) ORDEN -> . asc nulls first
    (58) ORDEN -> . desc nulls last
    (59) ORDEN -> . desc nulls first
    (60) ORDEN -> . asc nulls last

  ! shift/reduce conflict for id resolved as shift
    id              shift and go to state 663
    para            shift and go to state 151
    mas             reduce using rule 334 (EXP -> id .)
    menos           reduce using rule 334 (EXP -> id .)
    multiplicacion  reduce using rule 334 (EXP -> id .)
    division        reduce using rule 334 (EXP -> id .)
    modulo          reduce using rule 334 (EXP -> id .)
    elevado         reduce using rule 334 (EXP -> id .)
    and             reduce using rule 334 (EXP -> id .)
    or              reduce using rule 334 (EXP -> id .)
    mayor           reduce using rule 334 (EXP -> id .)
    menor           reduce using rule 334 (EXP -> id .)
    mayor_igual     reduce using rule 334 (EXP -> id .)
    menor_igual     reduce using rule 334 (EXP -> id .)
    igual           reduce using rule 334 (EXP -> id .)
    diferente1      reduce using rule 334 (EXP -> id .)
    diferente2      reduce using rule 334 (EXP -> id .)
    between         reduce using rule 334 (EXP -> id .)
    is              reduce using rule 334 (EXP -> id .)
    isnull          reduce using rule 334 (EXP -> id .)
    notnull         reduce using rule 334 (EXP -> id .)
    as              reduce using rule 334 (EXP -> id .)
    cadenaString    reduce using rule 334 (EXP -> id .)
    cadena          reduce using rule 334 (EXP -> id .)
    in              reduce using rule 334 (EXP -> id .)
    not             reduce using rule 334 (EXP -> id .)
    like            reduce using rule 334 (EXP -> id .)
    parc            reduce using rule 334 (EXP -> id .)
    coma            reduce using rule 334 (EXP -> id .)
    asc             shift and go to state 665
    desc            shift and go to state 666
    nulls           shift and go to state 667

  ! id              [ reduce using rule 334 (EXP -> id .) ]

    ORDEN                          shift and go to state 664

state 581

    (47) CREATEINDEX -> create index id on id para LEXP . parc
    (226) LEXP -> LEXP . coma EXP

    parc            shift and go to state 668
    coma            shift and go to state 121


state 582

    (49) CREATEINDEX -> create index id on id using hash . para LEXP parc

    para            shift and go to state 669


state 583

    (48) CREATEINDEX -> create unique index id on id para . LEXP parc
    (226) LEXP -> . LEXP coma EXP
    (227) LEXP -> . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 670
    EXP                            shift and go to state 57
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 584

    (31) PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE . LCONTENIDOP
    (35) LCONTENIDOP -> . LCONTENIDOP CONTENIDOP
    (36) LCONTENIDOP -> . CONTENIDOP
    (37) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (38) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn
    (39) CONTENIDOP -> . LISTACONTENIDO
    (84) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (85) LISTACONTENIDO -> . CONTENIDO
    (86) CONTENIDO -> . ASIGNACION ptcoma
    (87) CONTENIDO -> . CONDICIONIF ptcoma
    (88) CONTENIDO -> . RAISE ptcoma
    (89) CONTENIDO -> . BEGINEND ptcoma
    (90) CONTENIDO -> . CALLPROCEDURE ptcoma
    (91) CONTENIDO -> . declare LDEC
    (92) CONTENIDO -> . RETURN ptcoma
    (93) CONTENIDO -> . INSERT ptcoma
    (94) CONTENIDO -> . SELECT ptcoma
    (95) CONTENIDO -> . UPDATE ptcoma
    (96) CONTENIDO -> . DELETE ptcoma
    (71) ASIGNACION -> . id dospuntos igual EXP
    (72) ASIGNACION -> . id igual EXP
    (73) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (97) RAISE -> . raise LEVEL FORMAT
    (98) RAISE -> . raise LEVEL EXP
    (99) RAISE -> . raise LEVEL
    (100) RAISE -> . raise
    (101) RAISE -> . raise LEVEL cadena coma id
    (46) BEGINEND -> . begin LISTACONTENIDO end
    (30) CALLPROCEDURE -> . execute id para parc
    (24) RETURN -> . return EXP
    (114) INSERT -> . insert into id values para LEXP parc
    (115) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (220) UPDATE -> . update id set LCAMPOS WHERE
    (223) DELETE -> . delete r_from id WHERE

    as              shift and go to state 492
    do              shift and go to state 494
    declare         shift and go to state 296
    id              shift and go to state 17
    if              shift and go to state 30
    raise           shift and go to state 302
    begin           shift and go to state 303
    execute         shift and go to state 34
    return          shift and go to state 304
    insert          shift and go to state 31
    select          shift and go to state 24
    update          shift and go to state 26
    delete          shift and go to state 27

    LCONTENIDOP                    shift and go to state 671
    CONTENIDOP                     shift and go to state 491
    LISTACONTENIDO                 shift and go to state 493
    CONTENIDO                      shift and go to state 290
    ASIGNACION                     shift and go to state 291
    CONDICIONIF                    shift and go to state 292
    RAISE                          shift and go to state 293
    BEGINEND                       shift and go to state 294
    CALLPROCEDURE                  shift and go to state 295
    RETURN                         shift and go to state 297
    INSERT                         shift and go to state 298
    SELECT                         shift and go to state 299
    UPDATE                         shift and go to state 300
    DELETE                         shift and go to state 301

state 585

    (33) PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP . LENGUAJE
    (35) LCONTENIDOP -> LCONTENIDOP . CONTENIDOP
    (44) LENGUAJE -> . language plpgsql
    (45) LENGUAJE -> . language plpgsql ptcoma
    (37) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (38) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn
    (39) CONTENIDOP -> . LISTACONTENIDO
    (84) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (85) LISTACONTENIDO -> . CONTENIDO
    (86) CONTENIDO -> . ASIGNACION ptcoma
    (87) CONTENIDO -> . CONDICIONIF ptcoma
    (88) CONTENIDO -> . RAISE ptcoma
    (89) CONTENIDO -> . BEGINEND ptcoma
    (90) CONTENIDO -> . CALLPROCEDURE ptcoma
    (91) CONTENIDO -> . declare LDEC
    (92) CONTENIDO -> . RETURN ptcoma
    (93) CONTENIDO -> . INSERT ptcoma
    (94) CONTENIDO -> . SELECT ptcoma
    (95) CONTENIDO -> . UPDATE ptcoma
    (96) CONTENIDO -> . DELETE ptcoma
    (71) ASIGNACION -> . id dospuntos igual EXP
    (72) ASIGNACION -> . id igual EXP
    (73) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (97) RAISE -> . raise LEVEL FORMAT
    (98) RAISE -> . raise LEVEL EXP
    (99) RAISE -> . raise LEVEL
    (100) RAISE -> . raise
    (101) RAISE -> . raise LEVEL cadena coma id
    (46) BEGINEND -> . begin LISTACONTENIDO end
    (30) CALLPROCEDURE -> . execute id para parc
    (24) RETURN -> . return EXP
    (114) INSERT -> . insert into id values para LEXP parc
    (115) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (220) UPDATE -> . update id set LCAMPOS WHERE
    (223) DELETE -> . delete r_from id WHERE

    language        shift and go to state 490
    as              shift and go to state 492
    do              shift and go to state 494
    declare         shift and go to state 296
    id              shift and go to state 17
    if              shift and go to state 30
    raise           shift and go to state 302
    begin           shift and go to state 303
    execute         shift and go to state 34
    return          shift and go to state 304
    insert          shift and go to state 31
    select          shift and go to state 24
    update          shift and go to state 26
    delete          shift and go to state 27

    LENGUAJE                       shift and go to state 672
    CONTENIDOP                     shift and go to state 590
    LISTACONTENIDO                 shift and go to state 493
    CONTENIDO                      shift and go to state 290
    ASIGNACION                     shift and go to state 291
    CONDICIONIF                    shift and go to state 292
    RAISE                          shift and go to state 293
    BEGINEND                       shift and go to state 294
    CALLPROCEDURE                  shift and go to state 295
    RETURN                         shift and go to state 297
    INSERT                         shift and go to state 298
    SELECT                         shift and go to state 299
    UPDATE                         shift and go to state 300
    DELETE                         shift and go to state 301

state 586

    (40) LPARAM -> LPARAM coma inout . id TIPO

    id              shift and go to state 673


state 587

    (41) LPARAM -> LPARAM coma id . TIPO
    (228) TIPO -> . interval cadena
    (229) TIPO -> . decimal para int coma int parc
    (230) TIPO -> . decimal para int parc
    (231) TIPO -> . decimal
    (232) TIPO -> . numeric para int coma int parc
    (233) TIPO -> . numeric para int parc
    (234) TIPO -> . numeric
    (235) TIPO -> . varchar para int parc
    (236) TIPO -> . timestamp para int parc
    (237) TIPO -> . character para int parc
    (238) TIPO -> . interval para int parc
    (239) TIPO -> . char para int parc
    (240) TIPO -> . time para int parc
    (241) TIPO -> . character varying para int parc
    (242) TIPO -> . id modulo rowtype
    (243) TIPO -> . idPunto modulo type
    (244) TIPO -> . timestamp para int parc without time zone
    (245) TIPO -> . timestamp para int parc with time zone
    (246) TIPO -> . time para int parc without time zone
    (247) TIPO -> . time para int parc with time zone
    (248) TIPO -> . interval para int parc cadena
    (249) TIPO -> . smallint
    (250) TIPO -> . integer
    (251) TIPO -> . r_int
    (252) TIPO -> . bigint
    (253) TIPO -> . real
    (254) TIPO -> . double precision
    (255) TIPO -> . money
    (256) TIPO -> . text
    (257) TIPO -> . timestamp
    (258) TIPO -> . date
    (259) TIPO -> . time
    (260) TIPO -> . interval
    (261) TIPO -> . boolean
    (262) TIPO -> . record
    (263) TIPO -> . varchar
    (264) TIPO -> . timestamp without time zone
    (265) TIPO -> . timestamp with time zone
    (266) TIPO -> . time without time zone
    (267) TIPO -> . time with time zone
    (268) TIPO -> . id

    interval        shift and go to state 231
    decimal         shift and go to state 232
    numeric         shift and go to state 233
    varchar         shift and go to state 234
    timestamp       shift and go to state 235
    character       shift and go to state 236
    char            shift and go to state 237
    time            shift and go to state 238
    id              shift and go to state 239
    idPunto         shift and go to state 240
    smallint        shift and go to state 241
    integer         shift and go to state 242
    r_int           shift and go to state 243
    bigint          shift and go to state 244
    real            shift and go to state 245
    double          shift and go to state 246
    money           shift and go to state 247
    text            shift and go to state 248
    date            shift and go to state 249
    boolean         shift and go to state 250
    record          shift and go to state 251

    TIPO                           shift and go to state 674

state 588

    (32) PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .
    (35) LCONTENIDOP -> LCONTENIDOP . CONTENIDOP
    (37) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (38) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn
    (39) CONTENIDOP -> . LISTACONTENIDO
    (84) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (85) LISTACONTENIDO -> . CONTENIDO
    (86) CONTENIDO -> . ASIGNACION ptcoma
    (87) CONTENIDO -> . CONDICIONIF ptcoma
    (88) CONTENIDO -> . RAISE ptcoma
    (89) CONTENIDO -> . BEGINEND ptcoma
    (90) CONTENIDO -> . CALLPROCEDURE ptcoma
    (91) CONTENIDO -> . declare LDEC
    (92) CONTENIDO -> . RETURN ptcoma
    (93) CONTENIDO -> . INSERT ptcoma
    (94) CONTENIDO -> . SELECT ptcoma
    (95) CONTENIDO -> . UPDATE ptcoma
    (96) CONTENIDO -> . DELETE ptcoma
    (71) ASIGNACION -> . id dospuntos igual EXP
    (72) ASIGNACION -> . id igual EXP
    (73) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (97) RAISE -> . raise LEVEL FORMAT
    (98) RAISE -> . raise LEVEL EXP
    (99) RAISE -> . raise LEVEL
    (100) RAISE -> . raise
    (101) RAISE -> . raise LEVEL cadena coma id
    (46) BEGINEND -> . begin LISTACONTENIDO end
    (30) CALLPROCEDURE -> . execute id para parc
    (24) RETURN -> . return EXP
    (114) INSERT -> . insert into id values para LEXP parc
    (115) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (220) UPDATE -> . update id set LCAMPOS WHERE
    (223) DELETE -> . delete r_from id WHERE

  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for if resolved as shift
  ! shift/reduce conflict for execute resolved as shift
  ! shift/reduce conflict for insert resolved as shift
  ! shift/reduce conflict for select resolved as shift
  ! shift/reduce conflict for update resolved as shift
  ! shift/reduce conflict for delete resolved as shift
    use             reduce using rule 32 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .)
    create          reduce using rule 32 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .)
    alter           reduce using rule 32 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .)
    drop            reduce using rule 32 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .)
    case            reduce using rule 32 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .)
    show            reduce using rule 32 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .)
    $end            reduce using rule 32 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .)
    as              shift and go to state 492
    do              shift and go to state 494
    declare         shift and go to state 296
    id              shift and go to state 17
    if              shift and go to state 30
    raise           shift and go to state 302
    begin           shift and go to state 303
    execute         shift and go to state 34
    return          shift and go to state 304
    insert          shift and go to state 31
    select          shift and go to state 24
    update          shift and go to state 26
    delete          shift and go to state 27

  ! select          [ reduce using rule 32 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .) ]
  ! update          [ reduce using rule 32 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .) ]
  ! delete          [ reduce using rule 32 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .) ]
  ! insert          [ reduce using rule 32 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .) ]
  ! id              [ reduce using rule 32 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .) ]
  ! if              [ reduce using rule 32 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .) ]
  ! execute         [ reduce using rule 32 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .) ]

    CONTENIDOP                     shift and go to state 590
    LISTACONTENIDO                 shift and go to state 493
    CONTENIDO                      shift and go to state 290
    ASIGNACION                     shift and go to state 291
    CONDICIONIF                    shift and go to state 292
    RAISE                          shift and go to state 293
    BEGINEND                       shift and go to state 294
    CALLPROCEDURE                  shift and go to state 295
    RETURN                         shift and go to state 297
    INSERT                         shift and go to state 298
    SELECT                         shift and go to state 299
    UPDATE                         shift and go to state 300
    DELETE                         shift and go to state 301

state 589

    (34) PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .

    use             reduce using rule 34 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    select          reduce using rule 34 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    create          reduce using rule 34 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    update          reduce using rule 34 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    delete          reduce using rule 34 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    alter           reduce using rule 34 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    drop            reduce using rule 34 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    insert          reduce using rule 34 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    case            reduce using rule 34 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    show            reduce using rule 34 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    id              reduce using rule 34 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    if              reduce using rule 34 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    execute         reduce using rule 34 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    $end            reduce using rule 34 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)


state 590

    (35) LCONTENIDOP -> LCONTENIDOP CONTENIDOP .

    language        reduce using rule 35 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    as              reduce using rule 35 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    do              reduce using rule 35 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    declare         reduce using rule 35 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    id              reduce using rule 35 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    if              reduce using rule 35 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    raise           reduce using rule 35 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    begin           reduce using rule 35 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    execute         reduce using rule 35 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    return          reduce using rule 35 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    insert          reduce using rule 35 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    select          reduce using rule 35 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    update          reduce using rule 35 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    delete          reduce using rule 35 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    use             reduce using rule 35 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    create          reduce using rule 35 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    alter           reduce using rule 35 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    drop            reduce using rule 35 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    case            reduce using rule 35 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    show            reduce using rule 35 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    $end            reduce using rule 35 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)


state 591

    (44) LENGUAJE -> language plpgsql .
    (45) LENGUAJE -> language plpgsql . ptcoma

    as              reduce using rule 44 (LENGUAJE -> language plpgsql .)
    do              reduce using rule 44 (LENGUAJE -> language plpgsql .)
    declare         reduce using rule 44 (LENGUAJE -> language plpgsql .)
    id              reduce using rule 44 (LENGUAJE -> language plpgsql .)
    if              reduce using rule 44 (LENGUAJE -> language plpgsql .)
    raise           reduce using rule 44 (LENGUAJE -> language plpgsql .)
    begin           reduce using rule 44 (LENGUAJE -> language plpgsql .)
    execute         reduce using rule 44 (LENGUAJE -> language plpgsql .)
    return          reduce using rule 44 (LENGUAJE -> language plpgsql .)
    insert          reduce using rule 44 (LENGUAJE -> language plpgsql .)
    select          reduce using rule 44 (LENGUAJE -> language plpgsql .)
    update          reduce using rule 44 (LENGUAJE -> language plpgsql .)
    delete          reduce using rule 44 (LENGUAJE -> language plpgsql .)
    use             reduce using rule 44 (LENGUAJE -> language plpgsql .)
    create          reduce using rule 44 (LENGUAJE -> language plpgsql .)
    alter           reduce using rule 44 (LENGUAJE -> language plpgsql .)
    drop            reduce using rule 44 (LENGUAJE -> language plpgsql .)
    case            reduce using rule 44 (LENGUAJE -> language plpgsql .)
    show            reduce using rule 44 (LENGUAJE -> language plpgsql .)
    $end            reduce using rule 44 (LENGUAJE -> language plpgsql .)
    ptcoma          shift and go to state 675


state 592

    (37) CONTENIDOP -> as dolarn . LISTACONTENIDO dolarn
    (84) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (85) LISTACONTENIDO -> . CONTENIDO
    (86) CONTENIDO -> . ASIGNACION ptcoma
    (87) CONTENIDO -> . CONDICIONIF ptcoma
    (88) CONTENIDO -> . RAISE ptcoma
    (89) CONTENIDO -> . BEGINEND ptcoma
    (90) CONTENIDO -> . CALLPROCEDURE ptcoma
    (91) CONTENIDO -> . declare LDEC
    (92) CONTENIDO -> . RETURN ptcoma
    (93) CONTENIDO -> . INSERT ptcoma
    (94) CONTENIDO -> . SELECT ptcoma
    (95) CONTENIDO -> . UPDATE ptcoma
    (96) CONTENIDO -> . DELETE ptcoma
    (71) ASIGNACION -> . id dospuntos igual EXP
    (72) ASIGNACION -> . id igual EXP
    (73) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (97) RAISE -> . raise LEVEL FORMAT
    (98) RAISE -> . raise LEVEL EXP
    (99) RAISE -> . raise LEVEL
    (100) RAISE -> . raise
    (101) RAISE -> . raise LEVEL cadena coma id
    (46) BEGINEND -> . begin LISTACONTENIDO end
    (30) CALLPROCEDURE -> . execute id para parc
    (24) RETURN -> . return EXP
    (114) INSERT -> . insert into id values para LEXP parc
    (115) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (220) UPDATE -> . update id set LCAMPOS WHERE
    (223) DELETE -> . delete r_from id WHERE

    declare         shift and go to state 296
    id              shift and go to state 17
    if              shift and go to state 30
    raise           shift and go to state 302
    begin           shift and go to state 303
    execute         shift and go to state 34
    return          shift and go to state 304
    insert          shift and go to state 31
    select          shift and go to state 24
    update          shift and go to state 26
    delete          shift and go to state 27

    LISTACONTENIDO                 shift and go to state 676
    CONTENIDO                      shift and go to state 290
    ASIGNACION                     shift and go to state 291
    CONDICIONIF                    shift and go to state 292
    RAISE                          shift and go to state 293
    BEGINEND                       shift and go to state 294
    CALLPROCEDURE                  shift and go to state 295
    RETURN                         shift and go to state 297
    INSERT                         shift and go to state 298
    SELECT                         shift and go to state 299
    UPDATE                         shift and go to state 300
    DELETE                         shift and go to state 301

state 593

    (38) CONTENIDOP -> do dolarn . LISTACONTENIDO dolarn
    (84) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (85) LISTACONTENIDO -> . CONTENIDO
    (86) CONTENIDO -> . ASIGNACION ptcoma
    (87) CONTENIDO -> . CONDICIONIF ptcoma
    (88) CONTENIDO -> . RAISE ptcoma
    (89) CONTENIDO -> . BEGINEND ptcoma
    (90) CONTENIDO -> . CALLPROCEDURE ptcoma
    (91) CONTENIDO -> . declare LDEC
    (92) CONTENIDO -> . RETURN ptcoma
    (93) CONTENIDO -> . INSERT ptcoma
    (94) CONTENIDO -> . SELECT ptcoma
    (95) CONTENIDO -> . UPDATE ptcoma
    (96) CONTENIDO -> . DELETE ptcoma
    (71) ASIGNACION -> . id dospuntos igual EXP
    (72) ASIGNACION -> . id igual EXP
    (73) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (97) RAISE -> . raise LEVEL FORMAT
    (98) RAISE -> . raise LEVEL EXP
    (99) RAISE -> . raise LEVEL
    (100) RAISE -> . raise
    (101) RAISE -> . raise LEVEL cadena coma id
    (46) BEGINEND -> . begin LISTACONTENIDO end
    (30) CALLPROCEDURE -> . execute id para parc
    (24) RETURN -> . return EXP
    (114) INSERT -> . insert into id values para LEXP parc
    (115) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (220) UPDATE -> . update id set LCAMPOS WHERE
    (223) DELETE -> . delete r_from id WHERE

    declare         shift and go to state 296
    id              shift and go to state 17
    if              shift and go to state 30
    raise           shift and go to state 302
    begin           shift and go to state 303
    execute         shift and go to state 34
    return          shift and go to state 304
    insert          shift and go to state 31
    select          shift and go to state 24
    update          shift and go to state 26
    delete          shift and go to state 27

    LISTACONTENIDO                 shift and go to state 677
    CONTENIDO                      shift and go to state 290
    ASIGNACION                     shift and go to state 291
    CONDICIONIF                    shift and go to state 292
    RAISE                          shift and go to state 293
    BEGINEND                       shift and go to state 294
    CALLPROCEDURE                  shift and go to state 295
    RETURN                         shift and go to state 297
    INSERT                         shift and go to state 298
    SELECT                         shift and go to state 299
    UPDATE                         shift and go to state 300
    DELETE                         shift and go to state 301

state 594

    (42) LPARAM -> inout id TIPO .

    parc            reduce using rule 42 (LPARAM -> inout id TIPO .)
    coma            reduce using rule 42 (LPARAM -> inout id TIPO .)


state 595

    (25) FUNCIONES -> create function id para LPARAM parc RETURNP . LENGUAJE LCONTENIDOP
    (27) FUNCIONES -> create function id para LPARAM parc RETURNP . LCONTENIDOP LENGUAJE
    (44) LENGUAJE -> . language plpgsql
    (45) LENGUAJE -> . language plpgsql ptcoma
    (35) LCONTENIDOP -> . LCONTENIDOP CONTENIDOP
    (36) LCONTENIDOP -> . CONTENIDOP
    (37) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (38) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn
    (39) CONTENIDOP -> . LISTACONTENIDO
    (84) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (85) LISTACONTENIDO -> . CONTENIDO
    (86) CONTENIDO -> . ASIGNACION ptcoma
    (87) CONTENIDO -> . CONDICIONIF ptcoma
    (88) CONTENIDO -> . RAISE ptcoma
    (89) CONTENIDO -> . BEGINEND ptcoma
    (90) CONTENIDO -> . CALLPROCEDURE ptcoma
    (91) CONTENIDO -> . declare LDEC
    (92) CONTENIDO -> . RETURN ptcoma
    (93) CONTENIDO -> . INSERT ptcoma
    (94) CONTENIDO -> . SELECT ptcoma
    (95) CONTENIDO -> . UPDATE ptcoma
    (96) CONTENIDO -> . DELETE ptcoma
    (71) ASIGNACION -> . id dospuntos igual EXP
    (72) ASIGNACION -> . id igual EXP
    (73) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (97) RAISE -> . raise LEVEL FORMAT
    (98) RAISE -> . raise LEVEL EXP
    (99) RAISE -> . raise LEVEL
    (100) RAISE -> . raise
    (101) RAISE -> . raise LEVEL cadena coma id
    (46) BEGINEND -> . begin LISTACONTENIDO end
    (30) CALLPROCEDURE -> . execute id para parc
    (24) RETURN -> . return EXP
    (114) INSERT -> . insert into id values para LEXP parc
    (115) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (220) UPDATE -> . update id set LCAMPOS WHERE
    (223) DELETE -> . delete r_from id WHERE

    language        shift and go to state 490
    as              shift and go to state 492
    do              shift and go to state 494
    declare         shift and go to state 296
    id              shift and go to state 17
    if              shift and go to state 30
    raise           shift and go to state 302
    begin           shift and go to state 303
    execute         shift and go to state 34
    return          shift and go to state 304
    insert          shift and go to state 31
    select          shift and go to state 24
    update          shift and go to state 26
    delete          shift and go to state 27

    LENGUAJE                       shift and go to state 678
    LCONTENIDOP                    shift and go to state 679
    CONTENIDOP                     shift and go to state 491
    LISTACONTENIDO                 shift and go to state 493
    CONTENIDO                      shift and go to state 290
    ASIGNACION                     shift and go to state 291
    CONDICIONIF                    shift and go to state 292
    RAISE                          shift and go to state 293
    BEGINEND                       shift and go to state 294
    CALLPROCEDURE                  shift and go to state 295
    RETURN                         shift and go to state 297
    INSERT                         shift and go to state 298
    SELECT                         shift and go to state 299
    UPDATE                         shift and go to state 300
    DELETE                         shift and go to state 301

state 596

    (26) FUNCIONES -> create function id para parc RETURNP LENGUAJE . LCONTENIDOP
    (35) LCONTENIDOP -> . LCONTENIDOP CONTENIDOP
    (36) LCONTENIDOP -> . CONTENIDOP
    (37) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (38) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn
    (39) CONTENIDOP -> . LISTACONTENIDO
    (84) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (85) LISTACONTENIDO -> . CONTENIDO
    (86) CONTENIDO -> . ASIGNACION ptcoma
    (87) CONTENIDO -> . CONDICIONIF ptcoma
    (88) CONTENIDO -> . RAISE ptcoma
    (89) CONTENIDO -> . BEGINEND ptcoma
    (90) CONTENIDO -> . CALLPROCEDURE ptcoma
    (91) CONTENIDO -> . declare LDEC
    (92) CONTENIDO -> . RETURN ptcoma
    (93) CONTENIDO -> . INSERT ptcoma
    (94) CONTENIDO -> . SELECT ptcoma
    (95) CONTENIDO -> . UPDATE ptcoma
    (96) CONTENIDO -> . DELETE ptcoma
    (71) ASIGNACION -> . id dospuntos igual EXP
    (72) ASIGNACION -> . id igual EXP
    (73) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (97) RAISE -> . raise LEVEL FORMAT
    (98) RAISE -> . raise LEVEL EXP
    (99) RAISE -> . raise LEVEL
    (100) RAISE -> . raise
    (101) RAISE -> . raise LEVEL cadena coma id
    (46) BEGINEND -> . begin LISTACONTENIDO end
    (30) CALLPROCEDURE -> . execute id para parc
    (24) RETURN -> . return EXP
    (114) INSERT -> . insert into id values para LEXP parc
    (115) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (220) UPDATE -> . update id set LCAMPOS WHERE
    (223) DELETE -> . delete r_from id WHERE

    as              shift and go to state 492
    do              shift and go to state 494
    declare         shift and go to state 296
    id              shift and go to state 17
    if              shift and go to state 30
    raise           shift and go to state 302
    begin           shift and go to state 303
    execute         shift and go to state 34
    return          shift and go to state 304
    insert          shift and go to state 31
    select          shift and go to state 24
    update          shift and go to state 26
    delete          shift and go to state 27

    LCONTENIDOP                    shift and go to state 680
    CONTENIDOP                     shift and go to state 491
    LISTACONTENIDO                 shift and go to state 493
    CONTENIDO                      shift and go to state 290
    ASIGNACION                     shift and go to state 291
    CONDICIONIF                    shift and go to state 292
    RAISE                          shift and go to state 293
    BEGINEND                       shift and go to state 294
    CALLPROCEDURE                  shift and go to state 295
    RETURN                         shift and go to state 297
    INSERT                         shift and go to state 298
    SELECT                         shift and go to state 299
    UPDATE                         shift and go to state 300
    DELETE                         shift and go to state 301

state 597

    (28) FUNCIONES -> create function id para parc RETURNP LCONTENIDOP . LENGUAJE
    (35) LCONTENIDOP -> LCONTENIDOP . CONTENIDOP
    (44) LENGUAJE -> . language plpgsql
    (45) LENGUAJE -> . language plpgsql ptcoma
    (37) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (38) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn
    (39) CONTENIDOP -> . LISTACONTENIDO
    (84) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (85) LISTACONTENIDO -> . CONTENIDO
    (86) CONTENIDO -> . ASIGNACION ptcoma
    (87) CONTENIDO -> . CONDICIONIF ptcoma
    (88) CONTENIDO -> . RAISE ptcoma
    (89) CONTENIDO -> . BEGINEND ptcoma
    (90) CONTENIDO -> . CALLPROCEDURE ptcoma
    (91) CONTENIDO -> . declare LDEC
    (92) CONTENIDO -> . RETURN ptcoma
    (93) CONTENIDO -> . INSERT ptcoma
    (94) CONTENIDO -> . SELECT ptcoma
    (95) CONTENIDO -> . UPDATE ptcoma
    (96) CONTENIDO -> . DELETE ptcoma
    (71) ASIGNACION -> . id dospuntos igual EXP
    (72) ASIGNACION -> . id igual EXP
    (73) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (97) RAISE -> . raise LEVEL FORMAT
    (98) RAISE -> . raise LEVEL EXP
    (99) RAISE -> . raise LEVEL
    (100) RAISE -> . raise
    (101) RAISE -> . raise LEVEL cadena coma id
    (46) BEGINEND -> . begin LISTACONTENIDO end
    (30) CALLPROCEDURE -> . execute id para parc
    (24) RETURN -> . return EXP
    (114) INSERT -> . insert into id values para LEXP parc
    (115) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (220) UPDATE -> . update id set LCAMPOS WHERE
    (223) DELETE -> . delete r_from id WHERE

    language        shift and go to state 490
    as              shift and go to state 492
    do              shift and go to state 494
    declare         shift and go to state 296
    id              shift and go to state 17
    if              shift and go to state 30
    raise           shift and go to state 302
    begin           shift and go to state 303
    execute         shift and go to state 34
    return          shift and go to state 304
    insert          shift and go to state 31
    select          shift and go to state 24
    update          shift and go to state 26
    delete          shift and go to state 27

    LENGUAJE                       shift and go to state 681
    CONTENIDOP                     shift and go to state 590
    LISTACONTENIDO                 shift and go to state 493
    CONTENIDO                      shift and go to state 290
    ASIGNACION                     shift and go to state 291
    CONDICIONIF                    shift and go to state 292
    RAISE                          shift and go to state 293
    BEGINEND                       shift and go to state 294
    CALLPROCEDURE                  shift and go to state 295
    RETURN                         shift and go to state 297
    INSERT                         shift and go to state 298
    SELECT                         shift and go to state 299
    UPDATE                         shift and go to state 300
    DELETE                         shift and go to state 301

state 598

    (29) RETURNP -> returns TIPO .

    language        reduce using rule 29 (RETURNP -> returns TIPO .)
    as              reduce using rule 29 (RETURNP -> returns TIPO .)
    do              reduce using rule 29 (RETURNP -> returns TIPO .)
    declare         reduce using rule 29 (RETURNP -> returns TIPO .)
    id              reduce using rule 29 (RETURNP -> returns TIPO .)
    if              reduce using rule 29 (RETURNP -> returns TIPO .)
    raise           reduce using rule 29 (RETURNP -> returns TIPO .)
    begin           reduce using rule 29 (RETURNP -> returns TIPO .)
    execute         reduce using rule 29 (RETURNP -> returns TIPO .)
    return          reduce using rule 29 (RETURNP -> returns TIPO .)
    insert          reduce using rule 29 (RETURNP -> returns TIPO .)
    select          reduce using rule 29 (RETURNP -> returns TIPO .)
    update          reduce using rule 29 (RETURNP -> returns TIPO .)
    delete          reduce using rule 29 (RETURNP -> returns TIPO .)


state 599

    (221) LCAMPOS -> LCAMPOS coma id igual . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 682
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 600

    (133) OP -> alter column id set . not null
    (134) OP -> alter column id set . null

    not             shift and go to state 683
    null            shift and go to state 684


state 601

    (139) OP -> alter column id type . TIPO
    (228) TIPO -> . interval cadena
    (229) TIPO -> . decimal para int coma int parc
    (230) TIPO -> . decimal para int parc
    (231) TIPO -> . decimal
    (232) TIPO -> . numeric para int coma int parc
    (233) TIPO -> . numeric para int parc
    (234) TIPO -> . numeric
    (235) TIPO -> . varchar para int parc
    (236) TIPO -> . timestamp para int parc
    (237) TIPO -> . character para int parc
    (238) TIPO -> . interval para int parc
    (239) TIPO -> . char para int parc
    (240) TIPO -> . time para int parc
    (241) TIPO -> . character varying para int parc
    (242) TIPO -> . id modulo rowtype
    (243) TIPO -> . idPunto modulo type
    (244) TIPO -> . timestamp para int parc without time zone
    (245) TIPO -> . timestamp para int parc with time zone
    (246) TIPO -> . time para int parc without time zone
    (247) TIPO -> . time para int parc with time zone
    (248) TIPO -> . interval para int parc cadena
    (249) TIPO -> . smallint
    (250) TIPO -> . integer
    (251) TIPO -> . r_int
    (252) TIPO -> . bigint
    (253) TIPO -> . real
    (254) TIPO -> . double precision
    (255) TIPO -> . money
    (256) TIPO -> . text
    (257) TIPO -> . timestamp
    (258) TIPO -> . date
    (259) TIPO -> . time
    (260) TIPO -> . interval
    (261) TIPO -> . boolean
    (262) TIPO -> . record
    (263) TIPO -> . varchar
    (264) TIPO -> . timestamp without time zone
    (265) TIPO -> . timestamp with time zone
    (266) TIPO -> . time without time zone
    (267) TIPO -> . time with time zone
    (268) TIPO -> . id

    interval        shift and go to state 231
    decimal         shift and go to state 232
    numeric         shift and go to state 233
    varchar         shift and go to state 234
    timestamp       shift and go to state 235
    character       shift and go to state 236
    char            shift and go to state 237
    time            shift and go to state 238
    id              shift and go to state 239
    idPunto         shift and go to state 240
    smallint        shift and go to state 241
    integer         shift and go to state 242
    r_int           shift and go to state 243
    bigint          shift and go to state 244
    real            shift and go to state 245
    double          shift and go to state 246
    money           shift and go to state 247
    text            shift and go to state 248
    date            shift and go to state 249
    boolean         shift and go to state 250
    record          shift and go to state 251

    TIPO                           shift and go to state 685

state 602

    (126) OP -> add column id TIPO .

    coma            reduce using rule 126 (OP -> add column id TIPO .)
    ptcoma          reduce using rule 126 (OP -> add column id TIPO .)


state 603

    (127) OP -> add check para CONDCHECK . parc

    parc            shift and go to state 686


state 604

    (128) OP -> add constraint id check . para CONDCHECK parc

    para            shift and go to state 687


state 605

    (129) OP -> add constraint id unique . para LEXP parc

    para            shift and go to state 688


state 606

    (132) OP -> add constraint id foreign . key para LEXP parc references id para LEXP parc

    key             shift and go to state 689


state 607

    (130) OP -> add unique para LEXP . parc
    (226) LEXP -> LEXP . coma EXP

    parc            shift and go to state 690
    coma            shift and go to state 121


state 608

    (131) OP -> add foreign key para . LEXP parc references id para LEXP parc
    (226) LEXP -> . LEXP coma EXP
    (227) LEXP -> . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 691
    EXP                            shift and go to state 57
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 609

    (138) OP -> rename column id to . id

    id              shift and go to state 692


state 610

    (73) CONDICIONIF -> if EXP then LISTACONTENIDO ELSEF end if .

    ptcoma          reduce using rule 73 (CONDICIONIF -> if EXP then LISTACONTENIDO ELSEF end if .)


state 611

    (74) CONDICIONIF -> if EXP then LISTACONTENIDO LELIF end if .

    ptcoma          reduce using rule 74 (CONDICIONIF -> if EXP then LISTACONTENIDO LELIF end if .)


state 612

    (76) CONDICIONIF -> if EXP then LISTACONTENIDO LELIF ELSEF end . if

    if              shift and go to state 693


state 613

    (77) LELIF -> LELIF elsif EXP . then LISTACONTENIDO
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    then            shift and go to state 694
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    and             shift and go to state 128
    or              shift and go to state 129
    mayor           shift and go to state 130
    menor           shift and go to state 131
    mayor_igual     shift and go to state 132
    menor_igual     shift and go to state 133
    igual           shift and go to state 134
    diferente1      shift and go to state 135
    diferente2      shift and go to state 136
    between         shift and go to state 137
    is              shift and go to state 138
    isnull          shift and go to state 140
    notnull         shift and go to state 141
    as              shift and go to state 142
    cadenaString    shift and go to state 143
    id              shift and go to state 144
    cadena          shift and go to state 145
    in              shift and go to state 146
    not             shift and go to state 139
    like            shift and go to state 147


state 614

    (78) LELIF -> elsif EXP then . LISTACONTENIDO
    (84) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (85) LISTACONTENIDO -> . CONTENIDO
    (86) CONTENIDO -> . ASIGNACION ptcoma
    (87) CONTENIDO -> . CONDICIONIF ptcoma
    (88) CONTENIDO -> . RAISE ptcoma
    (89) CONTENIDO -> . BEGINEND ptcoma
    (90) CONTENIDO -> . CALLPROCEDURE ptcoma
    (91) CONTENIDO -> . declare LDEC
    (92) CONTENIDO -> . RETURN ptcoma
    (93) CONTENIDO -> . INSERT ptcoma
    (94) CONTENIDO -> . SELECT ptcoma
    (95) CONTENIDO -> . UPDATE ptcoma
    (96) CONTENIDO -> . DELETE ptcoma
    (71) ASIGNACION -> . id dospuntos igual EXP
    (72) ASIGNACION -> . id igual EXP
    (73) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (97) RAISE -> . raise LEVEL FORMAT
    (98) RAISE -> . raise LEVEL EXP
    (99) RAISE -> . raise LEVEL
    (100) RAISE -> . raise
    (101) RAISE -> . raise LEVEL cadena coma id
    (46) BEGINEND -> . begin LISTACONTENIDO end
    (30) CALLPROCEDURE -> . execute id para parc
    (24) RETURN -> . return EXP
    (114) INSERT -> . insert into id values para LEXP parc
    (115) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (220) UPDATE -> . update id set LCAMPOS WHERE
    (223) DELETE -> . delete r_from id WHERE

    declare         shift and go to state 296
    id              shift and go to state 17
    if              shift and go to state 30
    raise           shift and go to state 302
    begin           shift and go to state 303
    execute         shift and go to state 34
    return          shift and go to state 304
    insert          shift and go to state 31
    select          shift and go to state 24
    update          shift and go to state 26
    delete          shift and go to state 27

    LISTACONTENIDO                 shift and go to state 695
    CONTENIDO                      shift and go to state 290
    ASIGNACION                     shift and go to state 291
    CONDICIONIF                    shift and go to state 292
    RAISE                          shift and go to state 293
    BEGINEND                       shift and go to state 294
    CALLPROCEDURE                  shift and go to state 295
    RETURN                         shift and go to state 297
    INSERT                         shift and go to state 298
    SELECT                         shift and go to state 299
    UPDATE                         shift and go to state 300
    DELETE                         shift and go to state 301

state 615

    (63) DECLARACIONES -> id TIPO not . null ASIG ptcoma

    null            shift and go to state 696


state 616

    (64) DECLARACIONES -> id TIPO ASIG . ptcoma

    ptcoma          shift and go to state 697


state 617

    (67) ASIG -> default . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 698
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 618

    (68) ASIG -> dospuntos . igual EXP

    igual           shift and go to state 699


state 619

    (69) ASIG -> igual . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 700
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 620

    (65) DECLARACIONES -> id constant TIPO . not null ASIG ptcoma
    (66) DECLARACIONES -> id constant TIPO . ASIG ptcoma
    (67) ASIG -> . default EXP
    (68) ASIG -> . dospuntos igual EXP
    (69) ASIG -> . igual EXP
    (70) ASIG -> .

    not             shift and go to state 701
    default         shift and go to state 617
    dospuntos       shift and go to state 618
    igual           shift and go to state 619
    ptcoma          reduce using rule 70 (ASIG -> .)

    ASIG                           shift and go to state 702

state 621

    (101) RAISE -> raise LEVEL cadena coma . id

    id              shift and go to state 703


state 622

    (108) FORMAT -> format para . EXP coma LEXP parc
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 704
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 623

    (114) INSERT -> insert into id values para LEXP parc .

    ptcoma          reduce using rule 114 (INSERT -> insert into id values para LEXP parc .)


state 624

    (115) INSERT -> insert into id para LEXP parc values . para LEXP parc

    para            shift and go to state 705


state 625

    (192) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING . COMBINING ORDER LIMIT
    (206) COMBINING -> . union EXP
    (207) COMBINING -> . union all EXP
    (208) COMBINING -> . intersect EXP
    (209) COMBINING -> . except EXP
    (210) COMBINING -> .

  ! shift/reduce conflict for union resolved as shift
  ! shift/reduce conflict for intersect resolved as shift
  ! shift/reduce conflict for except resolved as shift
    union           shift and go to state 442
    intersect       shift and go to state 443
    except          shift and go to state 444
    r_from          reduce using rule 210 (COMBINING -> .)
    coma            reduce using rule 210 (COMBINING -> .)
    where           reduce using rule 210 (COMBINING -> .)
    group           reduce using rule 210 (COMBINING -> .)
    having          reduce using rule 210 (COMBINING -> .)
    order           reduce using rule 210 (COMBINING -> .)
    limit           reduce using rule 210 (COMBINING -> .)
    offset          reduce using rule 210 (COMBINING -> .)
    ptcoma          reduce using rule 210 (COMBINING -> .)
    mas             reduce using rule 210 (COMBINING -> .)
    menos           reduce using rule 210 (COMBINING -> .)
    multiplicacion  reduce using rule 210 (COMBINING -> .)
    division        reduce using rule 210 (COMBINING -> .)
    modulo          reduce using rule 210 (COMBINING -> .)
    elevado         reduce using rule 210 (COMBINING -> .)
    and             reduce using rule 210 (COMBINING -> .)
    or              reduce using rule 210 (COMBINING -> .)
    mayor           reduce using rule 210 (COMBINING -> .)
    menor           reduce using rule 210 (COMBINING -> .)
    mayor_igual     reduce using rule 210 (COMBINING -> .)
    menor_igual     reduce using rule 210 (COMBINING -> .)
    igual           reduce using rule 210 (COMBINING -> .)
    diferente1      reduce using rule 210 (COMBINING -> .)
    diferente2      reduce using rule 210 (COMBINING -> .)
    between         reduce using rule 210 (COMBINING -> .)
    is              reduce using rule 210 (COMBINING -> .)
    isnull          reduce using rule 210 (COMBINING -> .)
    notnull         reduce using rule 210 (COMBINING -> .)
    as              reduce using rule 210 (COMBINING -> .)
    cadenaString    reduce using rule 210 (COMBINING -> .)
    id              reduce using rule 210 (COMBINING -> .)
    cadena          reduce using rule 210 (COMBINING -> .)
    in              reduce using rule 210 (COMBINING -> .)
    not             reduce using rule 210 (COMBINING -> .)
    like            reduce using rule 210 (COMBINING -> .)
    then            reduce using rule 210 (COMBINING -> .)
    when            reduce using rule 210 (COMBINING -> .)
    parc            reduce using rule 210 (COMBINING -> .)
    end             reduce using rule 210 (COMBINING -> .)
    else            reduce using rule 210 (COMBINING -> .)
    constraint      reduce using rule 210 (COMBINING -> .)
    unique          reduce using rule 210 (COMBINING -> .)
    check           reduce using rule 210 (COMBINING -> .)
    default         reduce using rule 210 (COMBINING -> .)
    null            reduce using rule 210 (COMBINING -> .)
    primary         reduce using rule 210 (COMBINING -> .)
    references      reduce using rule 210 (COMBINING -> .)
    asc             reduce using rule 210 (COMBINING -> .)
    desc            reduce using rule 210 (COMBINING -> .)

  ! union           [ reduce using rule 210 (COMBINING -> .) ]
  ! intersect       [ reduce using rule 210 (COMBINING -> .) ]
  ! except          [ reduce using rule 210 (COMBINING -> .) ]

    COMBINING                      shift and go to state 706

state 626

    (193) SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING . ORDER LIMIT
    (215) ORDER -> . order by LEXP ORD
    (216) ORDER -> . order by LEXP
    (217) ORDER -> .

  ! shift/reduce conflict for order resolved as shift
    order           shift and go to state 535
    r_from          reduce using rule 217 (ORDER -> .)
    coma            reduce using rule 217 (ORDER -> .)
    where           reduce using rule 217 (ORDER -> .)
    group           reduce using rule 217 (ORDER -> .)
    having          reduce using rule 217 (ORDER -> .)
    union           reduce using rule 217 (ORDER -> .)
    intersect       reduce using rule 217 (ORDER -> .)
    except          reduce using rule 217 (ORDER -> .)
    limit           reduce using rule 217 (ORDER -> .)
    offset          reduce using rule 217 (ORDER -> .)
    ptcoma          reduce using rule 217 (ORDER -> .)
    mas             reduce using rule 217 (ORDER -> .)
    menos           reduce using rule 217 (ORDER -> .)
    multiplicacion  reduce using rule 217 (ORDER -> .)
    division        reduce using rule 217 (ORDER -> .)
    modulo          reduce using rule 217 (ORDER -> .)
    elevado         reduce using rule 217 (ORDER -> .)
    and             reduce using rule 217 (ORDER -> .)
    or              reduce using rule 217 (ORDER -> .)
    mayor           reduce using rule 217 (ORDER -> .)
    menor           reduce using rule 217 (ORDER -> .)
    mayor_igual     reduce using rule 217 (ORDER -> .)
    menor_igual     reduce using rule 217 (ORDER -> .)
    igual           reduce using rule 217 (ORDER -> .)
    diferente1      reduce using rule 217 (ORDER -> .)
    diferente2      reduce using rule 217 (ORDER -> .)
    between         reduce using rule 217 (ORDER -> .)
    is              reduce using rule 217 (ORDER -> .)
    isnull          reduce using rule 217 (ORDER -> .)
    notnull         reduce using rule 217 (ORDER -> .)
    as              reduce using rule 217 (ORDER -> .)
    cadenaString    reduce using rule 217 (ORDER -> .)
    id              reduce using rule 217 (ORDER -> .)
    cadena          reduce using rule 217 (ORDER -> .)
    in              reduce using rule 217 (ORDER -> .)
    not             reduce using rule 217 (ORDER -> .)
    like            reduce using rule 217 (ORDER -> .)
    then            reduce using rule 217 (ORDER -> .)
    when            reduce using rule 217 (ORDER -> .)
    parc            reduce using rule 217 (ORDER -> .)
    end             reduce using rule 217 (ORDER -> .)
    else            reduce using rule 217 (ORDER -> .)
    constraint      reduce using rule 217 (ORDER -> .)
    unique          reduce using rule 217 (ORDER -> .)
    check           reduce using rule 217 (ORDER -> .)
    default         reduce using rule 217 (ORDER -> .)
    null            reduce using rule 217 (ORDER -> .)
    primary         reduce using rule 217 (ORDER -> .)
    references      reduce using rule 217 (ORDER -> .)
    asc             reduce using rule 217 (ORDER -> .)
    desc            reduce using rule 217 (ORDER -> .)

  ! order           [ reduce using rule 217 (ORDER -> .) ]

    ORDER                          shift and go to state 707

state 627

    (194) SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .

    ptcoma          reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    r_from          reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    coma            reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    where           reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    group           reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    having          reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    union           reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    intersect       reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    except          reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    order           reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    limit           reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    offset          reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mas             reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menos           reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    multiplicacion  reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    division        reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    modulo          reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    elevado         reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    and             reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    or              reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor           reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor           reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor_igual     reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor_igual     reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    igual           reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente1      reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente2      reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    between         reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    is              reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    isnull          reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    notnull         reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    as              reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadenaString    reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    id              reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadena          reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    in              reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    not             reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    like            reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    then            reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    when            reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    parc            reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    end             reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    else            reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    constraint      reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    unique          reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    check           reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    default         reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    null            reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    primary         reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    references      reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    asc             reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    desc            reduce using rule 194 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)


state 628

    (195) LIMIT -> limit . int
    (196) LIMIT -> limit . all
    (198) LIMIT -> limit . int offset int
    (200) LIMIT -> limit . all offset int

    int             shift and go to state 708
    all             shift and go to state 709


state 629

    (197) LIMIT -> offset . int
    (199) LIMIT -> offset . int limit int
    (201) LIMIT -> offset . int limit all

    int             shift and go to state 710


state 630

    (215) ORDER -> order by . LEXP ORD
    (216) ORDER -> order by . LEXP
    (226) LEXP -> . LEXP coma EXP
    (227) LEXP -> . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 711
    EXP                            shift and go to state 57
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 631

    (207) COMBINING -> union all EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    r_from          reduce using rule 207 (COMBINING -> union all EXP .)
    coma            reduce using rule 207 (COMBINING -> union all EXP .)
    where           reduce using rule 207 (COMBINING -> union all EXP .)
    group           reduce using rule 207 (COMBINING -> union all EXP .)
    having          reduce using rule 207 (COMBINING -> union all EXP .)
    union           reduce using rule 207 (COMBINING -> union all EXP .)
    intersect       reduce using rule 207 (COMBINING -> union all EXP .)
    except          reduce using rule 207 (COMBINING -> union all EXP .)
    order           reduce using rule 207 (COMBINING -> union all EXP .)
    limit           reduce using rule 207 (COMBINING -> union all EXP .)
    offset          reduce using rule 207 (COMBINING -> union all EXP .)
    ptcoma          reduce using rule 207 (COMBINING -> union all EXP .)
    then            reduce using rule 207 (COMBINING -> union all EXP .)
    when            reduce using rule 207 (COMBINING -> union all EXP .)
    parc            reduce using rule 207 (COMBINING -> union all EXP .)
    end             reduce using rule 207 (COMBINING -> union all EXP .)
    else            reduce using rule 207 (COMBINING -> union all EXP .)
    constraint      reduce using rule 207 (COMBINING -> union all EXP .)
    unique          reduce using rule 207 (COMBINING -> union all EXP .)
    check           reduce using rule 207 (COMBINING -> union all EXP .)
    default         reduce using rule 207 (COMBINING -> union all EXP .)
    null            reduce using rule 207 (COMBINING -> union all EXP .)
    primary         reduce using rule 207 (COMBINING -> union all EXP .)
    references      reduce using rule 207 (COMBINING -> union all EXP .)
    asc             reduce using rule 207 (COMBINING -> union all EXP .)
    desc            reduce using rule 207 (COMBINING -> union all EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    and             shift and go to state 128
    or              shift and go to state 129
    mayor           shift and go to state 130
    menor           shift and go to state 131
    mayor_igual     shift and go to state 132
    menor_igual     shift and go to state 133
    igual           shift and go to state 134
    diferente1      shift and go to state 135
    diferente2      shift and go to state 136
    between         shift and go to state 137
    is              shift and go to state 138
    isnull          shift and go to state 140
    notnull         shift and go to state 141
    as              shift and go to state 142
    cadenaString    shift and go to state 143
    id              shift and go to state 144
    cadena          shift and go to state 145
    in              shift and go to state 146
    not             shift and go to state 139
    like            shift and go to state 147

  ! mas             [ reduce using rule 207 (COMBINING -> union all EXP .) ]
  ! menos           [ reduce using rule 207 (COMBINING -> union all EXP .) ]
  ! multiplicacion  [ reduce using rule 207 (COMBINING -> union all EXP .) ]
  ! division        [ reduce using rule 207 (COMBINING -> union all EXP .) ]
  ! modulo          [ reduce using rule 207 (COMBINING -> union all EXP .) ]
  ! elevado         [ reduce using rule 207 (COMBINING -> union all EXP .) ]
  ! and             [ reduce using rule 207 (COMBINING -> union all EXP .) ]
  ! or              [ reduce using rule 207 (COMBINING -> union all EXP .) ]
  ! mayor           [ reduce using rule 207 (COMBINING -> union all EXP .) ]
  ! menor           [ reduce using rule 207 (COMBINING -> union all EXP .) ]
  ! mayor_igual     [ reduce using rule 207 (COMBINING -> union all EXP .) ]
  ! menor_igual     [ reduce using rule 207 (COMBINING -> union all EXP .) ]
  ! igual           [ reduce using rule 207 (COMBINING -> union all EXP .) ]
  ! diferente1      [ reduce using rule 207 (COMBINING -> union all EXP .) ]
  ! diferente2      [ reduce using rule 207 (COMBINING -> union all EXP .) ]
  ! between         [ reduce using rule 207 (COMBINING -> union all EXP .) ]
  ! is              [ reduce using rule 207 (COMBINING -> union all EXP .) ]
  ! isnull          [ reduce using rule 207 (COMBINING -> union all EXP .) ]
  ! notnull         [ reduce using rule 207 (COMBINING -> union all EXP .) ]
  ! as              [ reduce using rule 207 (COMBINING -> union all EXP .) ]
  ! cadenaString    [ reduce using rule 207 (COMBINING -> union all EXP .) ]
  ! id              [ reduce using rule 207 (COMBINING -> union all EXP .) ]
  ! cadena          [ reduce using rule 207 (COMBINING -> union all EXP .) ]
  ! in              [ reduce using rule 207 (COMBINING -> union all EXP .) ]
  ! not             [ reduce using rule 207 (COMBINING -> union all EXP .) ]
  ! like            [ reduce using rule 207 (COMBINING -> union all EXP .) ]


state 632

    (325) EXP -> all para . LEXP parc
    (320) EXP -> para . EXP parc
    (226) LEXP -> . LEXP coma EXP
    (227) LEXP -> . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 254
    EXP                            shift and go to state 712
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 633

    (248) TIPO -> interval para int parc cadena .

    r_from          reduce using rule 248 (TIPO -> interval para int parc cadena .)
    coma            reduce using rule 248 (TIPO -> interval para int parc cadena .)
    where           reduce using rule 248 (TIPO -> interval para int parc cadena .)
    group           reduce using rule 248 (TIPO -> interval para int parc cadena .)
    having          reduce using rule 248 (TIPO -> interval para int parc cadena .)
    union           reduce using rule 248 (TIPO -> interval para int parc cadena .)
    intersect       reduce using rule 248 (TIPO -> interval para int parc cadena .)
    except          reduce using rule 248 (TIPO -> interval para int parc cadena .)
    order           reduce using rule 248 (TIPO -> interval para int parc cadena .)
    limit           reduce using rule 248 (TIPO -> interval para int parc cadena .)
    offset          reduce using rule 248 (TIPO -> interval para int parc cadena .)
    ptcoma          reduce using rule 248 (TIPO -> interval para int parc cadena .)
    mas             reduce using rule 248 (TIPO -> interval para int parc cadena .)
    menos           reduce using rule 248 (TIPO -> interval para int parc cadena .)
    multiplicacion  reduce using rule 248 (TIPO -> interval para int parc cadena .)
    division        reduce using rule 248 (TIPO -> interval para int parc cadena .)
    modulo          reduce using rule 248 (TIPO -> interval para int parc cadena .)
    elevado         reduce using rule 248 (TIPO -> interval para int parc cadena .)
    and             reduce using rule 248 (TIPO -> interval para int parc cadena .)
    or              reduce using rule 248 (TIPO -> interval para int parc cadena .)
    mayor           reduce using rule 248 (TIPO -> interval para int parc cadena .)
    menor           reduce using rule 248 (TIPO -> interval para int parc cadena .)
    mayor_igual     reduce using rule 248 (TIPO -> interval para int parc cadena .)
    menor_igual     reduce using rule 248 (TIPO -> interval para int parc cadena .)
    igual           reduce using rule 248 (TIPO -> interval para int parc cadena .)
    diferente1      reduce using rule 248 (TIPO -> interval para int parc cadena .)
    diferente2      reduce using rule 248 (TIPO -> interval para int parc cadena .)
    between         reduce using rule 248 (TIPO -> interval para int parc cadena .)
    is              reduce using rule 248 (TIPO -> interval para int parc cadena .)
    isnull          reduce using rule 248 (TIPO -> interval para int parc cadena .)
    notnull         reduce using rule 248 (TIPO -> interval para int parc cadena .)
    as              reduce using rule 248 (TIPO -> interval para int parc cadena .)
    cadenaString    reduce using rule 248 (TIPO -> interval para int parc cadena .)
    id              reduce using rule 248 (TIPO -> interval para int parc cadena .)
    cadena          reduce using rule 248 (TIPO -> interval para int parc cadena .)
    in              reduce using rule 248 (TIPO -> interval para int parc cadena .)
    not             reduce using rule 248 (TIPO -> interval para int parc cadena .)
    like            reduce using rule 248 (TIPO -> interval para int parc cadena .)
    then            reduce using rule 248 (TIPO -> interval para int parc cadena .)
    when            reduce using rule 248 (TIPO -> interval para int parc cadena .)
    parc            reduce using rule 248 (TIPO -> interval para int parc cadena .)
    end             reduce using rule 248 (TIPO -> interval para int parc cadena .)
    else            reduce using rule 248 (TIPO -> interval para int parc cadena .)
    constraint      reduce using rule 248 (TIPO -> interval para int parc cadena .)
    unique          reduce using rule 248 (TIPO -> interval para int parc cadena .)
    check           reduce using rule 248 (TIPO -> interval para int parc cadena .)
    default         reduce using rule 248 (TIPO -> interval para int parc cadena .)
    null            reduce using rule 248 (TIPO -> interval para int parc cadena .)
    primary         reduce using rule 248 (TIPO -> interval para int parc cadena .)
    references      reduce using rule 248 (TIPO -> interval para int parc cadena .)
    asc             reduce using rule 248 (TIPO -> interval para int parc cadena .)
    desc            reduce using rule 248 (TIPO -> interval para int parc cadena .)
    dospuntos       reduce using rule 248 (TIPO -> interval para int parc cadena .)
    language        reduce using rule 248 (TIPO -> interval para int parc cadena .)
    do              reduce using rule 248 (TIPO -> interval para int parc cadena .)
    declare         reduce using rule 248 (TIPO -> interval para int parc cadena .)
    if              reduce using rule 248 (TIPO -> interval para int parc cadena .)
    raise           reduce using rule 248 (TIPO -> interval para int parc cadena .)
    begin           reduce using rule 248 (TIPO -> interval para int parc cadena .)
    execute         reduce using rule 248 (TIPO -> interval para int parc cadena .)
    return          reduce using rule 248 (TIPO -> interval para int parc cadena .)
    insert          reduce using rule 248 (TIPO -> interval para int parc cadena .)
    select          reduce using rule 248 (TIPO -> interval para int parc cadena .)
    update          reduce using rule 248 (TIPO -> interval para int parc cadena .)
    delete          reduce using rule 248 (TIPO -> interval para int parc cadena .)


state 634

    (229) TIPO -> decimal para int coma int . parc

    parc            shift and go to state 713


state 635

    (232) TIPO -> numeric para int coma int . parc

    parc            shift and go to state 714


state 636

    (244) TIPO -> timestamp para int parc without . time zone

    time            shift and go to state 715


state 637

    (245) TIPO -> timestamp para int parc with . time zone

    time            shift and go to state 716


state 638

    (241) TIPO -> character varying para int parc .

    r_from          reduce using rule 241 (TIPO -> character varying para int parc .)
    coma            reduce using rule 241 (TIPO -> character varying para int parc .)
    where           reduce using rule 241 (TIPO -> character varying para int parc .)
    group           reduce using rule 241 (TIPO -> character varying para int parc .)
    having          reduce using rule 241 (TIPO -> character varying para int parc .)
    union           reduce using rule 241 (TIPO -> character varying para int parc .)
    intersect       reduce using rule 241 (TIPO -> character varying para int parc .)
    except          reduce using rule 241 (TIPO -> character varying para int parc .)
    order           reduce using rule 241 (TIPO -> character varying para int parc .)
    limit           reduce using rule 241 (TIPO -> character varying para int parc .)
    offset          reduce using rule 241 (TIPO -> character varying para int parc .)
    ptcoma          reduce using rule 241 (TIPO -> character varying para int parc .)
    mas             reduce using rule 241 (TIPO -> character varying para int parc .)
    menos           reduce using rule 241 (TIPO -> character varying para int parc .)
    multiplicacion  reduce using rule 241 (TIPO -> character varying para int parc .)
    division        reduce using rule 241 (TIPO -> character varying para int parc .)
    modulo          reduce using rule 241 (TIPO -> character varying para int parc .)
    elevado         reduce using rule 241 (TIPO -> character varying para int parc .)
    and             reduce using rule 241 (TIPO -> character varying para int parc .)
    or              reduce using rule 241 (TIPO -> character varying para int parc .)
    mayor           reduce using rule 241 (TIPO -> character varying para int parc .)
    menor           reduce using rule 241 (TIPO -> character varying para int parc .)
    mayor_igual     reduce using rule 241 (TIPO -> character varying para int parc .)
    menor_igual     reduce using rule 241 (TIPO -> character varying para int parc .)
    igual           reduce using rule 241 (TIPO -> character varying para int parc .)
    diferente1      reduce using rule 241 (TIPO -> character varying para int parc .)
    diferente2      reduce using rule 241 (TIPO -> character varying para int parc .)
    between         reduce using rule 241 (TIPO -> character varying para int parc .)
    is              reduce using rule 241 (TIPO -> character varying para int parc .)
    isnull          reduce using rule 241 (TIPO -> character varying para int parc .)
    notnull         reduce using rule 241 (TIPO -> character varying para int parc .)
    as              reduce using rule 241 (TIPO -> character varying para int parc .)
    cadenaString    reduce using rule 241 (TIPO -> character varying para int parc .)
    id              reduce using rule 241 (TIPO -> character varying para int parc .)
    cadena          reduce using rule 241 (TIPO -> character varying para int parc .)
    in              reduce using rule 241 (TIPO -> character varying para int parc .)
    not             reduce using rule 241 (TIPO -> character varying para int parc .)
    like            reduce using rule 241 (TIPO -> character varying para int parc .)
    then            reduce using rule 241 (TIPO -> character varying para int parc .)
    when            reduce using rule 241 (TIPO -> character varying para int parc .)
    parc            reduce using rule 241 (TIPO -> character varying para int parc .)
    end             reduce using rule 241 (TIPO -> character varying para int parc .)
    else            reduce using rule 241 (TIPO -> character varying para int parc .)
    constraint      reduce using rule 241 (TIPO -> character varying para int parc .)
    unique          reduce using rule 241 (TIPO -> character varying para int parc .)
    check           reduce using rule 241 (TIPO -> character varying para int parc .)
    default         reduce using rule 241 (TIPO -> character varying para int parc .)
    null            reduce using rule 241 (TIPO -> character varying para int parc .)
    primary         reduce using rule 241 (TIPO -> character varying para int parc .)
    references      reduce using rule 241 (TIPO -> character varying para int parc .)
    asc             reduce using rule 241 (TIPO -> character varying para int parc .)
    desc            reduce using rule 241 (TIPO -> character varying para int parc .)
    dospuntos       reduce using rule 241 (TIPO -> character varying para int parc .)
    language        reduce using rule 241 (TIPO -> character varying para int parc .)
    do              reduce using rule 241 (TIPO -> character varying para int parc .)
    declare         reduce using rule 241 (TIPO -> character varying para int parc .)
    if              reduce using rule 241 (TIPO -> character varying para int parc .)
    raise           reduce using rule 241 (TIPO -> character varying para int parc .)
    begin           reduce using rule 241 (TIPO -> character varying para int parc .)
    execute         reduce using rule 241 (TIPO -> character varying para int parc .)
    return          reduce using rule 241 (TIPO -> character varying para int parc .)
    insert          reduce using rule 241 (TIPO -> character varying para int parc .)
    select          reduce using rule 241 (TIPO -> character varying para int parc .)
    update          reduce using rule 241 (TIPO -> character varying para int parc .)
    delete          reduce using rule 241 (TIPO -> character varying para int parc .)


state 639

    (246) TIPO -> time para int parc without . time zone

    time            shift and go to state 717


state 640

    (247) TIPO -> time para int parc with . time zone

    time            shift and go to state 718


state 641

    (327) EXP -> extract para FIELDS r_from timestamp cadena parc .

    r_from          reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    coma            reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    where           reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    group           reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    having          reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    union           reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    intersect       reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    except          reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    order           reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    limit           reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    offset          reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    ptcoma          reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    mas             reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    menos           reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    multiplicacion  reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    division        reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    modulo          reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    elevado         reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    and             reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    or              reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    mayor           reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    menor           reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    mayor_igual     reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    menor_igual     reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    igual           reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    diferente1      reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    diferente2      reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    between         reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    is              reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    isnull          reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    notnull         reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    as              reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    cadenaString    reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    id              reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    cadena          reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    in              reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    not             reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    like            reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    then            reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    when            reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    parc            reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    end             reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    else            reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    constraint      reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    unique          reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    check           reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    default         reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    null            reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    primary         reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    references      reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    asc             reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    desc            reduce using rule 327 (EXP -> extract para FIELDS r_from timestamp cadena parc .)


state 642

    (168) LOPCOLUMN -> LOPCOLUMN OPCOLUMN .

    constraint      reduce using rule 168 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    unique          reduce using rule 168 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    check           reduce using rule 168 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    default         reduce using rule 168 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    not             reduce using rule 168 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    null            reduce using rule 168 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    primary         reduce using rule 168 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    references      reduce using rule 168 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    parc            reduce using rule 168 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    coma            reduce using rule 168 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)


state 643

    (170) OPCOLUMN -> constraint id . unique
    (172) OPCOLUMN -> constraint id . check para CONDCHECK parc

    unique          shift and go to state 719
    check           shift and go to state 720


state 644

    (173) OPCOLUMN -> check para . CONDCHECK parc
    (183) CONDCHECK -> . EXP mayor EXP
    (184) CONDCHECK -> . EXP menor EXP
    (185) CONDCHECK -> . EXP mayor_igual EXP
    (186) CONDCHECK -> . EXP menor_igual EXP
    (187) CONDCHECK -> . EXP igual EXP
    (188) CONDCHECK -> . EXP diferente1 EXP
    (189) CONDCHECK -> . EXP diferente2 EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    CONDCHECK                      shift and go to state 721
    EXP                            shift and go to state 577
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 645

    (174) OPCOLUMN -> default EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

  ! shift/reduce conflict for not resolved as shift
    constraint      reduce using rule 174 (OPCOLUMN -> default EXP .)
    unique          reduce using rule 174 (OPCOLUMN -> default EXP .)
    check           reduce using rule 174 (OPCOLUMN -> default EXP .)
    default         reduce using rule 174 (OPCOLUMN -> default EXP .)
    null            reduce using rule 174 (OPCOLUMN -> default EXP .)
    primary         reduce using rule 174 (OPCOLUMN -> default EXP .)
    references      reduce using rule 174 (OPCOLUMN -> default EXP .)
    parc            reduce using rule 174 (OPCOLUMN -> default EXP .)
    coma            reduce using rule 174 (OPCOLUMN -> default EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    and             shift and go to state 128
    or              shift and go to state 129
    mayor           shift and go to state 130
    menor           shift and go to state 131
    mayor_igual     shift and go to state 132
    menor_igual     shift and go to state 133
    igual           shift and go to state 134
    diferente1      shift and go to state 135
    diferente2      shift and go to state 136
    between         shift and go to state 137
    is              shift and go to state 138
    isnull          shift and go to state 140
    notnull         shift and go to state 141
    as              shift and go to state 142
    cadenaString    shift and go to state 143
    id              shift and go to state 144
    cadena          shift and go to state 145
    in              shift and go to state 146
    not             shift and go to state 139
    like            shift and go to state 147

  ! not             [ reduce using rule 174 (OPCOLUMN -> default EXP .) ]


state 646

    (175) OPCOLUMN -> not null .

    constraint      reduce using rule 175 (OPCOLUMN -> not null .)
    unique          reduce using rule 175 (OPCOLUMN -> not null .)
    check           reduce using rule 175 (OPCOLUMN -> not null .)
    default         reduce using rule 175 (OPCOLUMN -> not null .)
    not             reduce using rule 175 (OPCOLUMN -> not null .)
    null            reduce using rule 175 (OPCOLUMN -> not null .)
    primary         reduce using rule 175 (OPCOLUMN -> not null .)
    references      reduce using rule 175 (OPCOLUMN -> not null .)
    parc            reduce using rule 175 (OPCOLUMN -> not null .)
    coma            reduce using rule 175 (OPCOLUMN -> not null .)


state 647

    (177) OPCOLUMN -> primary key .

    constraint      reduce using rule 177 (OPCOLUMN -> primary key .)
    unique          reduce using rule 177 (OPCOLUMN -> primary key .)
    check           reduce using rule 177 (OPCOLUMN -> primary key .)
    default         reduce using rule 177 (OPCOLUMN -> primary key .)
    not             reduce using rule 177 (OPCOLUMN -> primary key .)
    null            reduce using rule 177 (OPCOLUMN -> primary key .)
    primary         reduce using rule 177 (OPCOLUMN -> primary key .)
    references      reduce using rule 177 (OPCOLUMN -> primary key .)
    parc            reduce using rule 177 (OPCOLUMN -> primary key .)
    coma            reduce using rule 177 (OPCOLUMN -> primary key .)


state 648

    (178) OPCOLUMN -> references id .

    constraint      reduce using rule 178 (OPCOLUMN -> references id .)
    unique          reduce using rule 178 (OPCOLUMN -> references id .)
    check           reduce using rule 178 (OPCOLUMN -> references id .)
    default         reduce using rule 178 (OPCOLUMN -> references id .)
    not             reduce using rule 178 (OPCOLUMN -> references id .)
    null            reduce using rule 178 (OPCOLUMN -> references id .)
    primary         reduce using rule 178 (OPCOLUMN -> references id .)
    references      reduce using rule 178 (OPCOLUMN -> references id .)
    parc            reduce using rule 178 (OPCOLUMN -> references id .)
    coma            reduce using rule 178 (OPCOLUMN -> references id .)


state 649

    (161) CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .

    use             reduce using rule 161 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    select          reduce using rule 161 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    create          reduce using rule 161 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    update          reduce using rule 161 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    delete          reduce using rule 161 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    alter           reduce using rule 161 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    drop            reduce using rule 161 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    insert          reduce using rule 161 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    case            reduce using rule 161 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    show            reduce using rule 161 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    id              reduce using rule 161 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    if              reduce using rule 161 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    execute         reduce using rule 161 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    $end            reduce using rule 161 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)


state 650

    (190) HERENCIA -> inherits para . id parc

    id              shift and go to state 722


state 651

    (179) OPCONST -> primary key para LEXP . parc
    (226) LEXP -> LEXP . coma EXP

    parc            shift and go to state 723
    coma            shift and go to state 121


state 652

    (180) OPCONST -> foreign key para LEXP . parc references id para LEXP parc
    (226) LEXP -> LEXP . coma EXP

    parc            shift and go to state 724
    coma            shift and go to state 121


state 653

    (181) OPCONST -> unique para LEXP parc .

    parc            reduce using rule 181 (OPCONST -> unique para LEXP parc .)
    coma            reduce using rule 181 (OPCONST -> unique para LEXP parc .)


state 654

    (182) OPCONST -> check para CONDCHECK parc .

    parc            reduce using rule 182 (OPCONST -> check para CONDCHECK parc .)
    coma            reduce using rule 182 (OPCONST -> check para CONDCHECK parc .)


state 655

    (183) CONDCHECK -> EXP mayor . EXP
    (283) EXP -> EXP mayor . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 725
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 656

    (184) CONDCHECK -> EXP menor . EXP
    (284) EXP -> EXP menor . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 726
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 657

    (185) CONDCHECK -> EXP mayor_igual . EXP
    (285) EXP -> EXP mayor_igual . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 727
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 658

    (186) CONDCHECK -> EXP menor_igual . EXP
    (286) EXP -> EXP menor_igual . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 728
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 659

    (187) CONDCHECK -> EXP igual . EXP
    (287) EXP -> EXP igual . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 729
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 660

    (188) CONDCHECK -> EXP diferente1 . EXP
    (288) EXP -> EXP diferente1 . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 730
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 661

    (189) CONDCHECK -> EXP diferente2 . EXP
    (289) EXP -> EXP diferente2 . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 731
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 662

    (191) CREATETYPE -> create type id as enum para LEXP parc .

    ptcoma          reduce using rule 191 (CREATETYPE -> create type id as enum para LEXP parc .)


state 663

    (51) CREATEINDEX -> create index id on id para id id . ORDEN parc
    (52) CREATEINDEX -> create index id on id para id id . parc
    (53) ORDEN -> . asc
    (54) ORDEN -> . desc
    (55) ORDEN -> . nulls first
    (56) ORDEN -> . nulls last
    (57) ORDEN -> . asc nulls first
    (58) ORDEN -> . desc nulls last
    (59) ORDEN -> . desc nulls first
    (60) ORDEN -> . asc nulls last

    parc            shift and go to state 733
    asc             shift and go to state 665
    desc            shift and go to state 666
    nulls           shift and go to state 667

    ORDEN                          shift and go to state 732

state 664

    (50) CREATEINDEX -> create index id on id para id ORDEN . parc

    parc            shift and go to state 734


state 665

    (53) ORDEN -> asc .
    (57) ORDEN -> asc . nulls first
    (60) ORDEN -> asc . nulls last

    parc            reduce using rule 53 (ORDEN -> asc .)
    nulls           shift and go to state 735


state 666

    (54) ORDEN -> desc .
    (58) ORDEN -> desc . nulls last
    (59) ORDEN -> desc . nulls first

    parc            reduce using rule 54 (ORDEN -> desc .)
    nulls           shift and go to state 736


state 667

    (55) ORDEN -> nulls . first
    (56) ORDEN -> nulls . last

    first           shift and go to state 737
    last            shift and go to state 738


state 668

    (47) CREATEINDEX -> create index id on id para LEXP parc .

    ptcoma          reduce using rule 47 (CREATEINDEX -> create index id on id para LEXP parc .)
    where           reduce using rule 47 (CREATEINDEX -> create index id on id para LEXP parc .)


state 669

    (49) CREATEINDEX -> create index id on id using hash para . LEXP parc
    (226) LEXP -> . LEXP coma EXP
    (227) LEXP -> . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 739
    EXP                            shift and go to state 57
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 670

    (48) CREATEINDEX -> create unique index id on id para LEXP . parc
    (226) LEXP -> LEXP . coma EXP

    parc            shift and go to state 740
    coma            shift and go to state 121


state 671

    (31) PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .
    (35) LCONTENIDOP -> LCONTENIDOP . CONTENIDOP
    (37) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (38) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn
    (39) CONTENIDOP -> . LISTACONTENIDO
    (84) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (85) LISTACONTENIDO -> . CONTENIDO
    (86) CONTENIDO -> . ASIGNACION ptcoma
    (87) CONTENIDO -> . CONDICIONIF ptcoma
    (88) CONTENIDO -> . RAISE ptcoma
    (89) CONTENIDO -> . BEGINEND ptcoma
    (90) CONTENIDO -> . CALLPROCEDURE ptcoma
    (91) CONTENIDO -> . declare LDEC
    (92) CONTENIDO -> . RETURN ptcoma
    (93) CONTENIDO -> . INSERT ptcoma
    (94) CONTENIDO -> . SELECT ptcoma
    (95) CONTENIDO -> . UPDATE ptcoma
    (96) CONTENIDO -> . DELETE ptcoma
    (71) ASIGNACION -> . id dospuntos igual EXP
    (72) ASIGNACION -> . id igual EXP
    (73) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (97) RAISE -> . raise LEVEL FORMAT
    (98) RAISE -> . raise LEVEL EXP
    (99) RAISE -> . raise LEVEL
    (100) RAISE -> . raise
    (101) RAISE -> . raise LEVEL cadena coma id
    (46) BEGINEND -> . begin LISTACONTENIDO end
    (30) CALLPROCEDURE -> . execute id para parc
    (24) RETURN -> . return EXP
    (114) INSERT -> . insert into id values para LEXP parc
    (115) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (220) UPDATE -> . update id set LCAMPOS WHERE
    (223) DELETE -> . delete r_from id WHERE

  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for if resolved as shift
  ! shift/reduce conflict for execute resolved as shift
  ! shift/reduce conflict for insert resolved as shift
  ! shift/reduce conflict for select resolved as shift
  ! shift/reduce conflict for update resolved as shift
  ! shift/reduce conflict for delete resolved as shift
    use             reduce using rule 31 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    create          reduce using rule 31 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    alter           reduce using rule 31 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    drop            reduce using rule 31 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    case            reduce using rule 31 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    show            reduce using rule 31 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    $end            reduce using rule 31 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    as              shift and go to state 492
    do              shift and go to state 494
    declare         shift and go to state 296
    id              shift and go to state 17
    if              shift and go to state 30
    raise           shift and go to state 302
    begin           shift and go to state 303
    execute         shift and go to state 34
    return          shift and go to state 304
    insert          shift and go to state 31
    select          shift and go to state 24
    update          shift and go to state 26
    delete          shift and go to state 27

  ! select          [ reduce using rule 31 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .) ]
  ! update          [ reduce using rule 31 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .) ]
  ! delete          [ reduce using rule 31 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .) ]
  ! insert          [ reduce using rule 31 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .) ]
  ! id              [ reduce using rule 31 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .) ]
  ! if              [ reduce using rule 31 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .) ]
  ! execute         [ reduce using rule 31 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .) ]

    CONTENIDOP                     shift and go to state 590
    LISTACONTENIDO                 shift and go to state 493
    CONTENIDO                      shift and go to state 290
    ASIGNACION                     shift and go to state 291
    CONDICIONIF                    shift and go to state 292
    RAISE                          shift and go to state 293
    BEGINEND                       shift and go to state 294
    CALLPROCEDURE                  shift and go to state 295
    RETURN                         shift and go to state 297
    INSERT                         shift and go to state 298
    SELECT                         shift and go to state 299
    UPDATE                         shift and go to state 300
    DELETE                         shift and go to state 301

state 672

    (33) PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .

    use             reduce using rule 33 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    select          reduce using rule 33 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    create          reduce using rule 33 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    update          reduce using rule 33 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    delete          reduce using rule 33 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    alter           reduce using rule 33 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    drop            reduce using rule 33 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    insert          reduce using rule 33 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    case            reduce using rule 33 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    show            reduce using rule 33 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    id              reduce using rule 33 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    if              reduce using rule 33 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    execute         reduce using rule 33 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    $end            reduce using rule 33 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)


state 673

    (40) LPARAM -> LPARAM coma inout id . TIPO
    (228) TIPO -> . interval cadena
    (229) TIPO -> . decimal para int coma int parc
    (230) TIPO -> . decimal para int parc
    (231) TIPO -> . decimal
    (232) TIPO -> . numeric para int coma int parc
    (233) TIPO -> . numeric para int parc
    (234) TIPO -> . numeric
    (235) TIPO -> . varchar para int parc
    (236) TIPO -> . timestamp para int parc
    (237) TIPO -> . character para int parc
    (238) TIPO -> . interval para int parc
    (239) TIPO -> . char para int parc
    (240) TIPO -> . time para int parc
    (241) TIPO -> . character varying para int parc
    (242) TIPO -> . id modulo rowtype
    (243) TIPO -> . idPunto modulo type
    (244) TIPO -> . timestamp para int parc without time zone
    (245) TIPO -> . timestamp para int parc with time zone
    (246) TIPO -> . time para int parc without time zone
    (247) TIPO -> . time para int parc with time zone
    (248) TIPO -> . interval para int parc cadena
    (249) TIPO -> . smallint
    (250) TIPO -> . integer
    (251) TIPO -> . r_int
    (252) TIPO -> . bigint
    (253) TIPO -> . real
    (254) TIPO -> . double precision
    (255) TIPO -> . money
    (256) TIPO -> . text
    (257) TIPO -> . timestamp
    (258) TIPO -> . date
    (259) TIPO -> . time
    (260) TIPO -> . interval
    (261) TIPO -> . boolean
    (262) TIPO -> . record
    (263) TIPO -> . varchar
    (264) TIPO -> . timestamp without time zone
    (265) TIPO -> . timestamp with time zone
    (266) TIPO -> . time without time zone
    (267) TIPO -> . time with time zone
    (268) TIPO -> . id

    interval        shift and go to state 231
    decimal         shift and go to state 232
    numeric         shift and go to state 233
    varchar         shift and go to state 234
    timestamp       shift and go to state 235
    character       shift and go to state 236
    char            shift and go to state 237
    time            shift and go to state 238
    id              shift and go to state 239
    idPunto         shift and go to state 240
    smallint        shift and go to state 241
    integer         shift and go to state 242
    r_int           shift and go to state 243
    bigint          shift and go to state 244
    real            shift and go to state 245
    double          shift and go to state 246
    money           shift and go to state 247
    text            shift and go to state 248
    date            shift and go to state 249
    boolean         shift and go to state 250
    record          shift and go to state 251

    TIPO                           shift and go to state 741

state 674

    (41) LPARAM -> LPARAM coma id TIPO .

    parc            reduce using rule 41 (LPARAM -> LPARAM coma id TIPO .)
    coma            reduce using rule 41 (LPARAM -> LPARAM coma id TIPO .)


state 675

    (45) LENGUAJE -> language plpgsql ptcoma .

    as              reduce using rule 45 (LENGUAJE -> language plpgsql ptcoma .)
    do              reduce using rule 45 (LENGUAJE -> language plpgsql ptcoma .)
    declare         reduce using rule 45 (LENGUAJE -> language plpgsql ptcoma .)
    id              reduce using rule 45 (LENGUAJE -> language plpgsql ptcoma .)
    if              reduce using rule 45 (LENGUAJE -> language plpgsql ptcoma .)
    raise           reduce using rule 45 (LENGUAJE -> language plpgsql ptcoma .)
    begin           reduce using rule 45 (LENGUAJE -> language plpgsql ptcoma .)
    execute         reduce using rule 45 (LENGUAJE -> language plpgsql ptcoma .)
    return          reduce using rule 45 (LENGUAJE -> language plpgsql ptcoma .)
    insert          reduce using rule 45 (LENGUAJE -> language plpgsql ptcoma .)
    select          reduce using rule 45 (LENGUAJE -> language plpgsql ptcoma .)
    update          reduce using rule 45 (LENGUAJE -> language plpgsql ptcoma .)
    delete          reduce using rule 45 (LENGUAJE -> language plpgsql ptcoma .)
    use             reduce using rule 45 (LENGUAJE -> language plpgsql ptcoma .)
    create          reduce using rule 45 (LENGUAJE -> language plpgsql ptcoma .)
    alter           reduce using rule 45 (LENGUAJE -> language plpgsql ptcoma .)
    drop            reduce using rule 45 (LENGUAJE -> language plpgsql ptcoma .)
    case            reduce using rule 45 (LENGUAJE -> language plpgsql ptcoma .)
    show            reduce using rule 45 (LENGUAJE -> language plpgsql ptcoma .)
    $end            reduce using rule 45 (LENGUAJE -> language plpgsql ptcoma .)


state 676

    (37) CONTENIDOP -> as dolarn LISTACONTENIDO . dolarn
    (84) LISTACONTENIDO -> LISTACONTENIDO . CONTENIDO
    (86) CONTENIDO -> . ASIGNACION ptcoma
    (87) CONTENIDO -> . CONDICIONIF ptcoma
    (88) CONTENIDO -> . RAISE ptcoma
    (89) CONTENIDO -> . BEGINEND ptcoma
    (90) CONTENIDO -> . CALLPROCEDURE ptcoma
    (91) CONTENIDO -> . declare LDEC
    (92) CONTENIDO -> . RETURN ptcoma
    (93) CONTENIDO -> . INSERT ptcoma
    (94) CONTENIDO -> . SELECT ptcoma
    (95) CONTENIDO -> . UPDATE ptcoma
    (96) CONTENIDO -> . DELETE ptcoma
    (71) ASIGNACION -> . id dospuntos igual EXP
    (72) ASIGNACION -> . id igual EXP
    (73) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (97) RAISE -> . raise LEVEL FORMAT
    (98) RAISE -> . raise LEVEL EXP
    (99) RAISE -> . raise LEVEL
    (100) RAISE -> . raise
    (101) RAISE -> . raise LEVEL cadena coma id
    (46) BEGINEND -> . begin LISTACONTENIDO end
    (30) CALLPROCEDURE -> . execute id para parc
    (24) RETURN -> . return EXP
    (114) INSERT -> . insert into id values para LEXP parc
    (115) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (220) UPDATE -> . update id set LCAMPOS WHERE
    (223) DELETE -> . delete r_from id WHERE

    dolarn          shift and go to state 742
    declare         shift and go to state 296
    id              shift and go to state 17
    if              shift and go to state 30
    raise           shift and go to state 302
    begin           shift and go to state 303
    execute         shift and go to state 34
    return          shift and go to state 304
    insert          shift and go to state 31
    select          shift and go to state 24
    update          shift and go to state 26
    delete          shift and go to state 27

    CONTENIDO                      shift and go to state 403
    ASIGNACION                     shift and go to state 291
    CONDICIONIF                    shift and go to state 292
    RAISE                          shift and go to state 293
    BEGINEND                       shift and go to state 294
    CALLPROCEDURE                  shift and go to state 295
    RETURN                         shift and go to state 297
    INSERT                         shift and go to state 298
    SELECT                         shift and go to state 299
    UPDATE                         shift and go to state 300
    DELETE                         shift and go to state 301

state 677

    (38) CONTENIDOP -> do dolarn LISTACONTENIDO . dolarn
    (84) LISTACONTENIDO -> LISTACONTENIDO . CONTENIDO
    (86) CONTENIDO -> . ASIGNACION ptcoma
    (87) CONTENIDO -> . CONDICIONIF ptcoma
    (88) CONTENIDO -> . RAISE ptcoma
    (89) CONTENIDO -> . BEGINEND ptcoma
    (90) CONTENIDO -> . CALLPROCEDURE ptcoma
    (91) CONTENIDO -> . declare LDEC
    (92) CONTENIDO -> . RETURN ptcoma
    (93) CONTENIDO -> . INSERT ptcoma
    (94) CONTENIDO -> . SELECT ptcoma
    (95) CONTENIDO -> . UPDATE ptcoma
    (96) CONTENIDO -> . DELETE ptcoma
    (71) ASIGNACION -> . id dospuntos igual EXP
    (72) ASIGNACION -> . id igual EXP
    (73) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (97) RAISE -> . raise LEVEL FORMAT
    (98) RAISE -> . raise LEVEL EXP
    (99) RAISE -> . raise LEVEL
    (100) RAISE -> . raise
    (101) RAISE -> . raise LEVEL cadena coma id
    (46) BEGINEND -> . begin LISTACONTENIDO end
    (30) CALLPROCEDURE -> . execute id para parc
    (24) RETURN -> . return EXP
    (114) INSERT -> . insert into id values para LEXP parc
    (115) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (220) UPDATE -> . update id set LCAMPOS WHERE
    (223) DELETE -> . delete r_from id WHERE

    dolarn          shift and go to state 743
    declare         shift and go to state 296
    id              shift and go to state 17
    if              shift and go to state 30
    raise           shift and go to state 302
    begin           shift and go to state 303
    execute         shift and go to state 34
    return          shift and go to state 304
    insert          shift and go to state 31
    select          shift and go to state 24
    update          shift and go to state 26
    delete          shift and go to state 27

    CONTENIDO                      shift and go to state 403
    ASIGNACION                     shift and go to state 291
    CONDICIONIF                    shift and go to state 292
    RAISE                          shift and go to state 293
    BEGINEND                       shift and go to state 294
    CALLPROCEDURE                  shift and go to state 295
    RETURN                         shift and go to state 297
    INSERT                         shift and go to state 298
    SELECT                         shift and go to state 299
    UPDATE                         shift and go to state 300
    DELETE                         shift and go to state 301

state 678

    (25) FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE . LCONTENIDOP
    (35) LCONTENIDOP -> . LCONTENIDOP CONTENIDOP
    (36) LCONTENIDOP -> . CONTENIDOP
    (37) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (38) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn
    (39) CONTENIDOP -> . LISTACONTENIDO
    (84) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (85) LISTACONTENIDO -> . CONTENIDO
    (86) CONTENIDO -> . ASIGNACION ptcoma
    (87) CONTENIDO -> . CONDICIONIF ptcoma
    (88) CONTENIDO -> . RAISE ptcoma
    (89) CONTENIDO -> . BEGINEND ptcoma
    (90) CONTENIDO -> . CALLPROCEDURE ptcoma
    (91) CONTENIDO -> . declare LDEC
    (92) CONTENIDO -> . RETURN ptcoma
    (93) CONTENIDO -> . INSERT ptcoma
    (94) CONTENIDO -> . SELECT ptcoma
    (95) CONTENIDO -> . UPDATE ptcoma
    (96) CONTENIDO -> . DELETE ptcoma
    (71) ASIGNACION -> . id dospuntos igual EXP
    (72) ASIGNACION -> . id igual EXP
    (73) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (97) RAISE -> . raise LEVEL FORMAT
    (98) RAISE -> . raise LEVEL EXP
    (99) RAISE -> . raise LEVEL
    (100) RAISE -> . raise
    (101) RAISE -> . raise LEVEL cadena coma id
    (46) BEGINEND -> . begin LISTACONTENIDO end
    (30) CALLPROCEDURE -> . execute id para parc
    (24) RETURN -> . return EXP
    (114) INSERT -> . insert into id values para LEXP parc
    (115) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (220) UPDATE -> . update id set LCAMPOS WHERE
    (223) DELETE -> . delete r_from id WHERE

    as              shift and go to state 492
    do              shift and go to state 494
    declare         shift and go to state 296
    id              shift and go to state 17
    if              shift and go to state 30
    raise           shift and go to state 302
    begin           shift and go to state 303
    execute         shift and go to state 34
    return          shift and go to state 304
    insert          shift and go to state 31
    select          shift and go to state 24
    update          shift and go to state 26
    delete          shift and go to state 27

    LCONTENIDOP                    shift and go to state 744
    CONTENIDOP                     shift and go to state 491
    LISTACONTENIDO                 shift and go to state 493
    CONTENIDO                      shift and go to state 290
    ASIGNACION                     shift and go to state 291
    CONDICIONIF                    shift and go to state 292
    RAISE                          shift and go to state 293
    BEGINEND                       shift and go to state 294
    CALLPROCEDURE                  shift and go to state 295
    RETURN                         shift and go to state 297
    INSERT                         shift and go to state 298
    SELECT                         shift and go to state 299
    UPDATE                         shift and go to state 300
    DELETE                         shift and go to state 301

state 679

    (27) FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP . LENGUAJE
    (35) LCONTENIDOP -> LCONTENIDOP . CONTENIDOP
    (44) LENGUAJE -> . language plpgsql
    (45) LENGUAJE -> . language plpgsql ptcoma
    (37) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (38) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn
    (39) CONTENIDOP -> . LISTACONTENIDO
    (84) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (85) LISTACONTENIDO -> . CONTENIDO
    (86) CONTENIDO -> . ASIGNACION ptcoma
    (87) CONTENIDO -> . CONDICIONIF ptcoma
    (88) CONTENIDO -> . RAISE ptcoma
    (89) CONTENIDO -> . BEGINEND ptcoma
    (90) CONTENIDO -> . CALLPROCEDURE ptcoma
    (91) CONTENIDO -> . declare LDEC
    (92) CONTENIDO -> . RETURN ptcoma
    (93) CONTENIDO -> . INSERT ptcoma
    (94) CONTENIDO -> . SELECT ptcoma
    (95) CONTENIDO -> . UPDATE ptcoma
    (96) CONTENIDO -> . DELETE ptcoma
    (71) ASIGNACION -> . id dospuntos igual EXP
    (72) ASIGNACION -> . id igual EXP
    (73) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (97) RAISE -> . raise LEVEL FORMAT
    (98) RAISE -> . raise LEVEL EXP
    (99) RAISE -> . raise LEVEL
    (100) RAISE -> . raise
    (101) RAISE -> . raise LEVEL cadena coma id
    (46) BEGINEND -> . begin LISTACONTENIDO end
    (30) CALLPROCEDURE -> . execute id para parc
    (24) RETURN -> . return EXP
    (114) INSERT -> . insert into id values para LEXP parc
    (115) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (220) UPDATE -> . update id set LCAMPOS WHERE
    (223) DELETE -> . delete r_from id WHERE

    language        shift and go to state 490
    as              shift and go to state 492
    do              shift and go to state 494
    declare         shift and go to state 296
    id              shift and go to state 17
    if              shift and go to state 30
    raise           shift and go to state 302
    begin           shift and go to state 303
    execute         shift and go to state 34
    return          shift and go to state 304
    insert          shift and go to state 31
    select          shift and go to state 24
    update          shift and go to state 26
    delete          shift and go to state 27

    LENGUAJE                       shift and go to state 745
    CONTENIDOP                     shift and go to state 590
    LISTACONTENIDO                 shift and go to state 493
    CONTENIDO                      shift and go to state 290
    ASIGNACION                     shift and go to state 291
    CONDICIONIF                    shift and go to state 292
    RAISE                          shift and go to state 293
    BEGINEND                       shift and go to state 294
    CALLPROCEDURE                  shift and go to state 295
    RETURN                         shift and go to state 297
    INSERT                         shift and go to state 298
    SELECT                         shift and go to state 299
    UPDATE                         shift and go to state 300
    DELETE                         shift and go to state 301

state 680

    (26) FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .
    (35) LCONTENIDOP -> LCONTENIDOP . CONTENIDOP
    (37) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (38) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn
    (39) CONTENIDOP -> . LISTACONTENIDO
    (84) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (85) LISTACONTENIDO -> . CONTENIDO
    (86) CONTENIDO -> . ASIGNACION ptcoma
    (87) CONTENIDO -> . CONDICIONIF ptcoma
    (88) CONTENIDO -> . RAISE ptcoma
    (89) CONTENIDO -> . BEGINEND ptcoma
    (90) CONTENIDO -> . CALLPROCEDURE ptcoma
    (91) CONTENIDO -> . declare LDEC
    (92) CONTENIDO -> . RETURN ptcoma
    (93) CONTENIDO -> . INSERT ptcoma
    (94) CONTENIDO -> . SELECT ptcoma
    (95) CONTENIDO -> . UPDATE ptcoma
    (96) CONTENIDO -> . DELETE ptcoma
    (71) ASIGNACION -> . id dospuntos igual EXP
    (72) ASIGNACION -> . id igual EXP
    (73) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (97) RAISE -> . raise LEVEL FORMAT
    (98) RAISE -> . raise LEVEL EXP
    (99) RAISE -> . raise LEVEL
    (100) RAISE -> . raise
    (101) RAISE -> . raise LEVEL cadena coma id
    (46) BEGINEND -> . begin LISTACONTENIDO end
    (30) CALLPROCEDURE -> . execute id para parc
    (24) RETURN -> . return EXP
    (114) INSERT -> . insert into id values para LEXP parc
    (115) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (220) UPDATE -> . update id set LCAMPOS WHERE
    (223) DELETE -> . delete r_from id WHERE

  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for if resolved as shift
  ! shift/reduce conflict for execute resolved as shift
  ! shift/reduce conflict for insert resolved as shift
  ! shift/reduce conflict for select resolved as shift
  ! shift/reduce conflict for update resolved as shift
  ! shift/reduce conflict for delete resolved as shift
    use             reduce using rule 26 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .)
    create          reduce using rule 26 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .)
    alter           reduce using rule 26 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .)
    drop            reduce using rule 26 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .)
    case            reduce using rule 26 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .)
    show            reduce using rule 26 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .)
    $end            reduce using rule 26 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .)
    as              shift and go to state 492
    do              shift and go to state 494
    declare         shift and go to state 296
    id              shift and go to state 17
    if              shift and go to state 30
    raise           shift and go to state 302
    begin           shift and go to state 303
    execute         shift and go to state 34
    return          shift and go to state 304
    insert          shift and go to state 31
    select          shift and go to state 24
    update          shift and go to state 26
    delete          shift and go to state 27

  ! select          [ reduce using rule 26 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .) ]
  ! update          [ reduce using rule 26 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .) ]
  ! delete          [ reduce using rule 26 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .) ]
  ! insert          [ reduce using rule 26 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .) ]
  ! id              [ reduce using rule 26 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .) ]
  ! if              [ reduce using rule 26 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .) ]
  ! execute         [ reduce using rule 26 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .) ]

    CONTENIDOP                     shift and go to state 590
    LISTACONTENIDO                 shift and go to state 493
    CONTENIDO                      shift and go to state 290
    ASIGNACION                     shift and go to state 291
    CONDICIONIF                    shift and go to state 292
    RAISE                          shift and go to state 293
    BEGINEND                       shift and go to state 294
    CALLPROCEDURE                  shift and go to state 295
    RETURN                         shift and go to state 297
    INSERT                         shift and go to state 298
    SELECT                         shift and go to state 299
    UPDATE                         shift and go to state 300
    DELETE                         shift and go to state 301

state 681

    (28) FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .

    use             reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    select          reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    create          reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    update          reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    delete          reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    alter           reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    drop            reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    insert          reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    case            reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    show            reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    id              reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    if              reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    execute         reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    $end            reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)


state 682

    (221) LCAMPOS -> LCAMPOS coma id igual EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    coma            reduce using rule 221 (LCAMPOS -> LCAMPOS coma id igual EXP .)
    where           reduce using rule 221 (LCAMPOS -> LCAMPOS coma id igual EXP .)
    ptcoma          reduce using rule 221 (LCAMPOS -> LCAMPOS coma id igual EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    and             shift and go to state 128
    or              shift and go to state 129
    mayor           shift and go to state 130
    menor           shift and go to state 131
    mayor_igual     shift and go to state 132
    menor_igual     shift and go to state 133
    igual           shift and go to state 134
    diferente1      shift and go to state 135
    diferente2      shift and go to state 136
    between         shift and go to state 137
    is              shift and go to state 138
    isnull          shift and go to state 140
    notnull         shift and go to state 141
    as              shift and go to state 142
    cadenaString    shift and go to state 143
    id              shift and go to state 144
    cadena          shift and go to state 145
    in              shift and go to state 146
    not             shift and go to state 139
    like            shift and go to state 147


state 683

    (133) OP -> alter column id set not . null

    null            shift and go to state 746


state 684

    (134) OP -> alter column id set null .

    coma            reduce using rule 134 (OP -> alter column id set null .)
    ptcoma          reduce using rule 134 (OP -> alter column id set null .)


state 685

    (139) OP -> alter column id type TIPO .

    coma            reduce using rule 139 (OP -> alter column id type TIPO .)
    ptcoma          reduce using rule 139 (OP -> alter column id type TIPO .)


state 686

    (127) OP -> add check para CONDCHECK parc .

    coma            reduce using rule 127 (OP -> add check para CONDCHECK parc .)
    ptcoma          reduce using rule 127 (OP -> add check para CONDCHECK parc .)


state 687

    (128) OP -> add constraint id check para . CONDCHECK parc
    (183) CONDCHECK -> . EXP mayor EXP
    (184) CONDCHECK -> . EXP menor EXP
    (185) CONDCHECK -> . EXP mayor_igual EXP
    (186) CONDCHECK -> . EXP menor_igual EXP
    (187) CONDCHECK -> . EXP igual EXP
    (188) CONDCHECK -> . EXP diferente1 EXP
    (189) CONDCHECK -> . EXP diferente2 EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    CONDCHECK                      shift and go to state 747
    EXP                            shift and go to state 577
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 688

    (129) OP -> add constraint id unique para . LEXP parc
    (226) LEXP -> . LEXP coma EXP
    (227) LEXP -> . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 748
    EXP                            shift and go to state 57
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 689

    (132) OP -> add constraint id foreign key . para LEXP parc references id para LEXP parc

    para            shift and go to state 749


state 690

    (130) OP -> add unique para LEXP parc .

    coma            reduce using rule 130 (OP -> add unique para LEXP parc .)
    ptcoma          reduce using rule 130 (OP -> add unique para LEXP parc .)


state 691

    (131) OP -> add foreign key para LEXP . parc references id para LEXP parc
    (226) LEXP -> LEXP . coma EXP

    parc            shift and go to state 750
    coma            shift and go to state 121


state 692

    (138) OP -> rename column id to id .

    coma            reduce using rule 138 (OP -> rename column id to id .)
    ptcoma          reduce using rule 138 (OP -> rename column id to id .)


state 693

    (76) CONDICIONIF -> if EXP then LISTACONTENIDO LELIF ELSEF end if .

    ptcoma          reduce using rule 76 (CONDICIONIF -> if EXP then LISTACONTENIDO LELIF ELSEF end if .)


state 694

    (77) LELIF -> LELIF elsif EXP then . LISTACONTENIDO
    (84) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (85) LISTACONTENIDO -> . CONTENIDO
    (86) CONTENIDO -> . ASIGNACION ptcoma
    (87) CONTENIDO -> . CONDICIONIF ptcoma
    (88) CONTENIDO -> . RAISE ptcoma
    (89) CONTENIDO -> . BEGINEND ptcoma
    (90) CONTENIDO -> . CALLPROCEDURE ptcoma
    (91) CONTENIDO -> . declare LDEC
    (92) CONTENIDO -> . RETURN ptcoma
    (93) CONTENIDO -> . INSERT ptcoma
    (94) CONTENIDO -> . SELECT ptcoma
    (95) CONTENIDO -> . UPDATE ptcoma
    (96) CONTENIDO -> . DELETE ptcoma
    (71) ASIGNACION -> . id dospuntos igual EXP
    (72) ASIGNACION -> . id igual EXP
    (73) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (97) RAISE -> . raise LEVEL FORMAT
    (98) RAISE -> . raise LEVEL EXP
    (99) RAISE -> . raise LEVEL
    (100) RAISE -> . raise
    (101) RAISE -> . raise LEVEL cadena coma id
    (46) BEGINEND -> . begin LISTACONTENIDO end
    (30) CALLPROCEDURE -> . execute id para parc
    (24) RETURN -> . return EXP
    (114) INSERT -> . insert into id values para LEXP parc
    (115) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (220) UPDATE -> . update id set LCAMPOS WHERE
    (223) DELETE -> . delete r_from id WHERE

    declare         shift and go to state 296
    id              shift and go to state 17
    if              shift and go to state 30
    raise           shift and go to state 302
    begin           shift and go to state 303
    execute         shift and go to state 34
    return          shift and go to state 304
    insert          shift and go to state 31
    select          shift and go to state 24
    update          shift and go to state 26
    delete          shift and go to state 27

    LISTACONTENIDO                 shift and go to state 751
    CONTENIDO                      shift and go to state 290
    ASIGNACION                     shift and go to state 291
    CONDICIONIF                    shift and go to state 292
    RAISE                          shift and go to state 293
    BEGINEND                       shift and go to state 294
    CALLPROCEDURE                  shift and go to state 295
    RETURN                         shift and go to state 297
    INSERT                         shift and go to state 298
    SELECT                         shift and go to state 299
    UPDATE                         shift and go to state 300
    DELETE                         shift and go to state 301

state 695

    (78) LELIF -> elsif EXP then LISTACONTENIDO .
    (84) LISTACONTENIDO -> LISTACONTENIDO . CONTENIDO
    (86) CONTENIDO -> . ASIGNACION ptcoma
    (87) CONTENIDO -> . CONDICIONIF ptcoma
    (88) CONTENIDO -> . RAISE ptcoma
    (89) CONTENIDO -> . BEGINEND ptcoma
    (90) CONTENIDO -> . CALLPROCEDURE ptcoma
    (91) CONTENIDO -> . declare LDEC
    (92) CONTENIDO -> . RETURN ptcoma
    (93) CONTENIDO -> . INSERT ptcoma
    (94) CONTENIDO -> . SELECT ptcoma
    (95) CONTENIDO -> . UPDATE ptcoma
    (96) CONTENIDO -> . DELETE ptcoma
    (71) ASIGNACION -> . id dospuntos igual EXP
    (72) ASIGNACION -> . id igual EXP
    (73) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (97) RAISE -> . raise LEVEL FORMAT
    (98) RAISE -> . raise LEVEL EXP
    (99) RAISE -> . raise LEVEL
    (100) RAISE -> . raise
    (101) RAISE -> . raise LEVEL cadena coma id
    (46) BEGINEND -> . begin LISTACONTENIDO end
    (30) CALLPROCEDURE -> . execute id para parc
    (24) RETURN -> . return EXP
    (114) INSERT -> . insert into id values para LEXP parc
    (115) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (220) UPDATE -> . update id set LCAMPOS WHERE
    (223) DELETE -> . delete r_from id WHERE

    end             reduce using rule 78 (LELIF -> elsif EXP then LISTACONTENIDO .)
    elsif           reduce using rule 78 (LELIF -> elsif EXP then LISTACONTENIDO .)
    else            reduce using rule 78 (LELIF -> elsif EXP then LISTACONTENIDO .)
    declare         shift and go to state 296
    id              shift and go to state 17
    if              shift and go to state 30
    raise           shift and go to state 302
    begin           shift and go to state 303
    execute         shift and go to state 34
    return          shift and go to state 304
    insert          shift and go to state 31
    select          shift and go to state 24
    update          shift and go to state 26
    delete          shift and go to state 27

    CONTENIDO                      shift and go to state 403
    ASIGNACION                     shift and go to state 291
    CONDICIONIF                    shift and go to state 292
    RAISE                          shift and go to state 293
    BEGINEND                       shift and go to state 294
    CALLPROCEDURE                  shift and go to state 295
    RETURN                         shift and go to state 297
    INSERT                         shift and go to state 298
    SELECT                         shift and go to state 299
    UPDATE                         shift and go to state 300
    DELETE                         shift and go to state 301

state 696

    (63) DECLARACIONES -> id TIPO not null . ASIG ptcoma
    (67) ASIG -> . default EXP
    (68) ASIG -> . dospuntos igual EXP
    (69) ASIG -> . igual EXP
    (70) ASIG -> .

    default         shift and go to state 617
    dospuntos       shift and go to state 618
    igual           shift and go to state 619
    ptcoma          reduce using rule 70 (ASIG -> .)

    ASIG                           shift and go to state 752

state 697

    (64) DECLARACIONES -> id TIPO ASIG ptcoma .

    id              reduce using rule 64 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    end             reduce using rule 64 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    else            reduce using rule 64 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    elsif           reduce using rule 64 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    declare         reduce using rule 64 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    if              reduce using rule 64 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    raise           reduce using rule 64 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    begin           reduce using rule 64 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    execute         reduce using rule 64 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    return          reduce using rule 64 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    insert          reduce using rule 64 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    select          reduce using rule 64 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    update          reduce using rule 64 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    delete          reduce using rule 64 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    when            reduce using rule 64 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    language        reduce using rule 64 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    as              reduce using rule 64 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    do              reduce using rule 64 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    use             reduce using rule 64 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    create          reduce using rule 64 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    alter           reduce using rule 64 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    drop            reduce using rule 64 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    case            reduce using rule 64 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    show            reduce using rule 64 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    $end            reduce using rule 64 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    dolarn          reduce using rule 64 (DECLARACIONES -> id TIPO ASIG ptcoma .)


state 698

    (67) ASIG -> default EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    ptcoma          reduce using rule 67 (ASIG -> default EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    and             shift and go to state 128
    or              shift and go to state 129
    mayor           shift and go to state 130
    menor           shift and go to state 131
    mayor_igual     shift and go to state 132
    menor_igual     shift and go to state 133
    igual           shift and go to state 134
    diferente1      shift and go to state 135
    diferente2      shift and go to state 136
    between         shift and go to state 137
    is              shift and go to state 138
    isnull          shift and go to state 140
    notnull         shift and go to state 141
    as              shift and go to state 142
    cadenaString    shift and go to state 143
    id              shift and go to state 144
    cadena          shift and go to state 145
    in              shift and go to state 146
    not             shift and go to state 139
    like            shift and go to state 147


state 699

    (68) ASIG -> dospuntos igual . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 753
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 700

    (69) ASIG -> igual EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    ptcoma          reduce using rule 69 (ASIG -> igual EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    and             shift and go to state 128
    or              shift and go to state 129
    mayor           shift and go to state 130
    menor           shift and go to state 131
    mayor_igual     shift and go to state 132
    menor_igual     shift and go to state 133
    igual           shift and go to state 134
    diferente1      shift and go to state 135
    diferente2      shift and go to state 136
    between         shift and go to state 137
    is              shift and go to state 138
    isnull          shift and go to state 140
    notnull         shift and go to state 141
    as              shift and go to state 142
    cadenaString    shift and go to state 143
    id              shift and go to state 144
    cadena          shift and go to state 145
    in              shift and go to state 146
    not             shift and go to state 139
    like            shift and go to state 147


state 701

    (65) DECLARACIONES -> id constant TIPO not . null ASIG ptcoma

    null            shift and go to state 754


state 702

    (66) DECLARACIONES -> id constant TIPO ASIG . ptcoma

    ptcoma          shift and go to state 755


state 703

    (101) RAISE -> raise LEVEL cadena coma id .

    ptcoma          reduce using rule 101 (RAISE -> raise LEVEL cadena coma id .)


state 704

    (108) FORMAT -> format para EXP . coma LEXP parc
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    coma            shift and go to state 756
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    and             shift and go to state 128
    or              shift and go to state 129
    mayor           shift and go to state 130
    menor           shift and go to state 131
    mayor_igual     shift and go to state 132
    menor_igual     shift and go to state 133
    igual           shift and go to state 134
    diferente1      shift and go to state 135
    diferente2      shift and go to state 136
    between         shift and go to state 137
    is              shift and go to state 138
    isnull          shift and go to state 140
    notnull         shift and go to state 141
    as              shift and go to state 142
    cadenaString    shift and go to state 143
    id              shift and go to state 144
    cadena          shift and go to state 145
    in              shift and go to state 146
    not             shift and go to state 139
    like            shift and go to state 147


state 705

    (115) INSERT -> insert into id para LEXP parc values para . LEXP parc
    (226) LEXP -> . LEXP coma EXP
    (227) LEXP -> . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 757
    EXP                            shift and go to state 57
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 706

    (192) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING . ORDER LIMIT
    (215) ORDER -> . order by LEXP ORD
    (216) ORDER -> . order by LEXP
    (217) ORDER -> .

  ! shift/reduce conflict for order resolved as shift
    order           shift and go to state 535
    r_from          reduce using rule 217 (ORDER -> .)
    coma            reduce using rule 217 (ORDER -> .)
    where           reduce using rule 217 (ORDER -> .)
    group           reduce using rule 217 (ORDER -> .)
    having          reduce using rule 217 (ORDER -> .)
    union           reduce using rule 217 (ORDER -> .)
    intersect       reduce using rule 217 (ORDER -> .)
    except          reduce using rule 217 (ORDER -> .)
    limit           reduce using rule 217 (ORDER -> .)
    offset          reduce using rule 217 (ORDER -> .)
    ptcoma          reduce using rule 217 (ORDER -> .)
    mas             reduce using rule 217 (ORDER -> .)
    menos           reduce using rule 217 (ORDER -> .)
    multiplicacion  reduce using rule 217 (ORDER -> .)
    division        reduce using rule 217 (ORDER -> .)
    modulo          reduce using rule 217 (ORDER -> .)
    elevado         reduce using rule 217 (ORDER -> .)
    and             reduce using rule 217 (ORDER -> .)
    or              reduce using rule 217 (ORDER -> .)
    mayor           reduce using rule 217 (ORDER -> .)
    menor           reduce using rule 217 (ORDER -> .)
    mayor_igual     reduce using rule 217 (ORDER -> .)
    menor_igual     reduce using rule 217 (ORDER -> .)
    igual           reduce using rule 217 (ORDER -> .)
    diferente1      reduce using rule 217 (ORDER -> .)
    diferente2      reduce using rule 217 (ORDER -> .)
    between         reduce using rule 217 (ORDER -> .)
    is              reduce using rule 217 (ORDER -> .)
    isnull          reduce using rule 217 (ORDER -> .)
    notnull         reduce using rule 217 (ORDER -> .)
    as              reduce using rule 217 (ORDER -> .)
    cadenaString    reduce using rule 217 (ORDER -> .)
    id              reduce using rule 217 (ORDER -> .)
    cadena          reduce using rule 217 (ORDER -> .)
    in              reduce using rule 217 (ORDER -> .)
    not             reduce using rule 217 (ORDER -> .)
    like            reduce using rule 217 (ORDER -> .)
    then            reduce using rule 217 (ORDER -> .)
    when            reduce using rule 217 (ORDER -> .)
    parc            reduce using rule 217 (ORDER -> .)
    end             reduce using rule 217 (ORDER -> .)
    else            reduce using rule 217 (ORDER -> .)
    constraint      reduce using rule 217 (ORDER -> .)
    unique          reduce using rule 217 (ORDER -> .)
    check           reduce using rule 217 (ORDER -> .)
    default         reduce using rule 217 (ORDER -> .)
    null            reduce using rule 217 (ORDER -> .)
    primary         reduce using rule 217 (ORDER -> .)
    references      reduce using rule 217 (ORDER -> .)
    asc             reduce using rule 217 (ORDER -> .)
    desc            reduce using rule 217 (ORDER -> .)

  ! order           [ reduce using rule 217 (ORDER -> .) ]

    ORDER                          shift and go to state 758

state 707

    (193) SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER . LIMIT
    (195) LIMIT -> . limit int
    (196) LIMIT -> . limit all
    (197) LIMIT -> . offset int
    (198) LIMIT -> . limit int offset int
    (199) LIMIT -> . offset int limit int
    (200) LIMIT -> . limit all offset int
    (201) LIMIT -> . offset int limit all
    (202) LIMIT -> .

  ! shift/reduce conflict for limit resolved as shift
  ! shift/reduce conflict for offset resolved as shift
    limit           shift and go to state 628
    offset          shift and go to state 629
    ptcoma          reduce using rule 202 (LIMIT -> .)
    r_from          reduce using rule 202 (LIMIT -> .)
    coma            reduce using rule 202 (LIMIT -> .)
    where           reduce using rule 202 (LIMIT -> .)
    group           reduce using rule 202 (LIMIT -> .)
    having          reduce using rule 202 (LIMIT -> .)
    union           reduce using rule 202 (LIMIT -> .)
    intersect       reduce using rule 202 (LIMIT -> .)
    except          reduce using rule 202 (LIMIT -> .)
    order           reduce using rule 202 (LIMIT -> .)
    mas             reduce using rule 202 (LIMIT -> .)
    menos           reduce using rule 202 (LIMIT -> .)
    multiplicacion  reduce using rule 202 (LIMIT -> .)
    division        reduce using rule 202 (LIMIT -> .)
    modulo          reduce using rule 202 (LIMIT -> .)
    elevado         reduce using rule 202 (LIMIT -> .)
    and             reduce using rule 202 (LIMIT -> .)
    or              reduce using rule 202 (LIMIT -> .)
    mayor           reduce using rule 202 (LIMIT -> .)
    menor           reduce using rule 202 (LIMIT -> .)
    mayor_igual     reduce using rule 202 (LIMIT -> .)
    menor_igual     reduce using rule 202 (LIMIT -> .)
    igual           reduce using rule 202 (LIMIT -> .)
    diferente1      reduce using rule 202 (LIMIT -> .)
    diferente2      reduce using rule 202 (LIMIT -> .)
    between         reduce using rule 202 (LIMIT -> .)
    is              reduce using rule 202 (LIMIT -> .)
    isnull          reduce using rule 202 (LIMIT -> .)
    notnull         reduce using rule 202 (LIMIT -> .)
    as              reduce using rule 202 (LIMIT -> .)
    cadenaString    reduce using rule 202 (LIMIT -> .)
    id              reduce using rule 202 (LIMIT -> .)
    cadena          reduce using rule 202 (LIMIT -> .)
    in              reduce using rule 202 (LIMIT -> .)
    not             reduce using rule 202 (LIMIT -> .)
    like            reduce using rule 202 (LIMIT -> .)
    then            reduce using rule 202 (LIMIT -> .)
    when            reduce using rule 202 (LIMIT -> .)
    parc            reduce using rule 202 (LIMIT -> .)
    end             reduce using rule 202 (LIMIT -> .)
    else            reduce using rule 202 (LIMIT -> .)
    constraint      reduce using rule 202 (LIMIT -> .)
    unique          reduce using rule 202 (LIMIT -> .)
    check           reduce using rule 202 (LIMIT -> .)
    default         reduce using rule 202 (LIMIT -> .)
    null            reduce using rule 202 (LIMIT -> .)
    primary         reduce using rule 202 (LIMIT -> .)
    references      reduce using rule 202 (LIMIT -> .)
    asc             reduce using rule 202 (LIMIT -> .)
    desc            reduce using rule 202 (LIMIT -> .)

  ! limit           [ reduce using rule 202 (LIMIT -> .) ]
  ! offset          [ reduce using rule 202 (LIMIT -> .) ]

    LIMIT                          shift and go to state 759

state 708

    (195) LIMIT -> limit int .
    (198) LIMIT -> limit int . offset int

  ! shift/reduce conflict for offset resolved as shift
    ptcoma          reduce using rule 195 (LIMIT -> limit int .)
    r_from          reduce using rule 195 (LIMIT -> limit int .)
    coma            reduce using rule 195 (LIMIT -> limit int .)
    where           reduce using rule 195 (LIMIT -> limit int .)
    group           reduce using rule 195 (LIMIT -> limit int .)
    having          reduce using rule 195 (LIMIT -> limit int .)
    union           reduce using rule 195 (LIMIT -> limit int .)
    intersect       reduce using rule 195 (LIMIT -> limit int .)
    except          reduce using rule 195 (LIMIT -> limit int .)
    order           reduce using rule 195 (LIMIT -> limit int .)
    limit           reduce using rule 195 (LIMIT -> limit int .)
    mas             reduce using rule 195 (LIMIT -> limit int .)
    menos           reduce using rule 195 (LIMIT -> limit int .)
    multiplicacion  reduce using rule 195 (LIMIT -> limit int .)
    division        reduce using rule 195 (LIMIT -> limit int .)
    modulo          reduce using rule 195 (LIMIT -> limit int .)
    elevado         reduce using rule 195 (LIMIT -> limit int .)
    and             reduce using rule 195 (LIMIT -> limit int .)
    or              reduce using rule 195 (LIMIT -> limit int .)
    mayor           reduce using rule 195 (LIMIT -> limit int .)
    menor           reduce using rule 195 (LIMIT -> limit int .)
    mayor_igual     reduce using rule 195 (LIMIT -> limit int .)
    menor_igual     reduce using rule 195 (LIMIT -> limit int .)
    igual           reduce using rule 195 (LIMIT -> limit int .)
    diferente1      reduce using rule 195 (LIMIT -> limit int .)
    diferente2      reduce using rule 195 (LIMIT -> limit int .)
    between         reduce using rule 195 (LIMIT -> limit int .)
    is              reduce using rule 195 (LIMIT -> limit int .)
    isnull          reduce using rule 195 (LIMIT -> limit int .)
    notnull         reduce using rule 195 (LIMIT -> limit int .)
    as              reduce using rule 195 (LIMIT -> limit int .)
    cadenaString    reduce using rule 195 (LIMIT -> limit int .)
    id              reduce using rule 195 (LIMIT -> limit int .)
    cadena          reduce using rule 195 (LIMIT -> limit int .)
    in              reduce using rule 195 (LIMIT -> limit int .)
    not             reduce using rule 195 (LIMIT -> limit int .)
    like            reduce using rule 195 (LIMIT -> limit int .)
    then            reduce using rule 195 (LIMIT -> limit int .)
    when            reduce using rule 195 (LIMIT -> limit int .)
    parc            reduce using rule 195 (LIMIT -> limit int .)
    end             reduce using rule 195 (LIMIT -> limit int .)
    else            reduce using rule 195 (LIMIT -> limit int .)
    constraint      reduce using rule 195 (LIMIT -> limit int .)
    unique          reduce using rule 195 (LIMIT -> limit int .)
    check           reduce using rule 195 (LIMIT -> limit int .)
    default         reduce using rule 195 (LIMIT -> limit int .)
    null            reduce using rule 195 (LIMIT -> limit int .)
    primary         reduce using rule 195 (LIMIT -> limit int .)
    references      reduce using rule 195 (LIMIT -> limit int .)
    asc             reduce using rule 195 (LIMIT -> limit int .)
    desc            reduce using rule 195 (LIMIT -> limit int .)
    offset          shift and go to state 760

  ! offset          [ reduce using rule 195 (LIMIT -> limit int .) ]


state 709

    (196) LIMIT -> limit all .
    (200) LIMIT -> limit all . offset int

  ! shift/reduce conflict for offset resolved as shift
    ptcoma          reduce using rule 196 (LIMIT -> limit all .)
    r_from          reduce using rule 196 (LIMIT -> limit all .)
    coma            reduce using rule 196 (LIMIT -> limit all .)
    where           reduce using rule 196 (LIMIT -> limit all .)
    group           reduce using rule 196 (LIMIT -> limit all .)
    having          reduce using rule 196 (LIMIT -> limit all .)
    union           reduce using rule 196 (LIMIT -> limit all .)
    intersect       reduce using rule 196 (LIMIT -> limit all .)
    except          reduce using rule 196 (LIMIT -> limit all .)
    order           reduce using rule 196 (LIMIT -> limit all .)
    limit           reduce using rule 196 (LIMIT -> limit all .)
    mas             reduce using rule 196 (LIMIT -> limit all .)
    menos           reduce using rule 196 (LIMIT -> limit all .)
    multiplicacion  reduce using rule 196 (LIMIT -> limit all .)
    division        reduce using rule 196 (LIMIT -> limit all .)
    modulo          reduce using rule 196 (LIMIT -> limit all .)
    elevado         reduce using rule 196 (LIMIT -> limit all .)
    and             reduce using rule 196 (LIMIT -> limit all .)
    or              reduce using rule 196 (LIMIT -> limit all .)
    mayor           reduce using rule 196 (LIMIT -> limit all .)
    menor           reduce using rule 196 (LIMIT -> limit all .)
    mayor_igual     reduce using rule 196 (LIMIT -> limit all .)
    menor_igual     reduce using rule 196 (LIMIT -> limit all .)
    igual           reduce using rule 196 (LIMIT -> limit all .)
    diferente1      reduce using rule 196 (LIMIT -> limit all .)
    diferente2      reduce using rule 196 (LIMIT -> limit all .)
    between         reduce using rule 196 (LIMIT -> limit all .)
    is              reduce using rule 196 (LIMIT -> limit all .)
    isnull          reduce using rule 196 (LIMIT -> limit all .)
    notnull         reduce using rule 196 (LIMIT -> limit all .)
    as              reduce using rule 196 (LIMIT -> limit all .)
    cadenaString    reduce using rule 196 (LIMIT -> limit all .)
    id              reduce using rule 196 (LIMIT -> limit all .)
    cadena          reduce using rule 196 (LIMIT -> limit all .)
    in              reduce using rule 196 (LIMIT -> limit all .)
    not             reduce using rule 196 (LIMIT -> limit all .)
    like            reduce using rule 196 (LIMIT -> limit all .)
    then            reduce using rule 196 (LIMIT -> limit all .)
    when            reduce using rule 196 (LIMIT -> limit all .)
    parc            reduce using rule 196 (LIMIT -> limit all .)
    end             reduce using rule 196 (LIMIT -> limit all .)
    else            reduce using rule 196 (LIMIT -> limit all .)
    constraint      reduce using rule 196 (LIMIT -> limit all .)
    unique          reduce using rule 196 (LIMIT -> limit all .)
    check           reduce using rule 196 (LIMIT -> limit all .)
    default         reduce using rule 196 (LIMIT -> limit all .)
    null            reduce using rule 196 (LIMIT -> limit all .)
    primary         reduce using rule 196 (LIMIT -> limit all .)
    references      reduce using rule 196 (LIMIT -> limit all .)
    asc             reduce using rule 196 (LIMIT -> limit all .)
    desc            reduce using rule 196 (LIMIT -> limit all .)
    offset          shift and go to state 761

  ! offset          [ reduce using rule 196 (LIMIT -> limit all .) ]


state 710

    (197) LIMIT -> offset int .
    (199) LIMIT -> offset int . limit int
    (201) LIMIT -> offset int . limit all

  ! shift/reduce conflict for limit resolved as shift
    ptcoma          reduce using rule 197 (LIMIT -> offset int .)
    r_from          reduce using rule 197 (LIMIT -> offset int .)
    coma            reduce using rule 197 (LIMIT -> offset int .)
    where           reduce using rule 197 (LIMIT -> offset int .)
    group           reduce using rule 197 (LIMIT -> offset int .)
    having          reduce using rule 197 (LIMIT -> offset int .)
    union           reduce using rule 197 (LIMIT -> offset int .)
    intersect       reduce using rule 197 (LIMIT -> offset int .)
    except          reduce using rule 197 (LIMIT -> offset int .)
    order           reduce using rule 197 (LIMIT -> offset int .)
    offset          reduce using rule 197 (LIMIT -> offset int .)
    mas             reduce using rule 197 (LIMIT -> offset int .)
    menos           reduce using rule 197 (LIMIT -> offset int .)
    multiplicacion  reduce using rule 197 (LIMIT -> offset int .)
    division        reduce using rule 197 (LIMIT -> offset int .)
    modulo          reduce using rule 197 (LIMIT -> offset int .)
    elevado         reduce using rule 197 (LIMIT -> offset int .)
    and             reduce using rule 197 (LIMIT -> offset int .)
    or              reduce using rule 197 (LIMIT -> offset int .)
    mayor           reduce using rule 197 (LIMIT -> offset int .)
    menor           reduce using rule 197 (LIMIT -> offset int .)
    mayor_igual     reduce using rule 197 (LIMIT -> offset int .)
    menor_igual     reduce using rule 197 (LIMIT -> offset int .)
    igual           reduce using rule 197 (LIMIT -> offset int .)
    diferente1      reduce using rule 197 (LIMIT -> offset int .)
    diferente2      reduce using rule 197 (LIMIT -> offset int .)
    between         reduce using rule 197 (LIMIT -> offset int .)
    is              reduce using rule 197 (LIMIT -> offset int .)
    isnull          reduce using rule 197 (LIMIT -> offset int .)
    notnull         reduce using rule 197 (LIMIT -> offset int .)
    as              reduce using rule 197 (LIMIT -> offset int .)
    cadenaString    reduce using rule 197 (LIMIT -> offset int .)
    id              reduce using rule 197 (LIMIT -> offset int .)
    cadena          reduce using rule 197 (LIMIT -> offset int .)
    in              reduce using rule 197 (LIMIT -> offset int .)
    not             reduce using rule 197 (LIMIT -> offset int .)
    like            reduce using rule 197 (LIMIT -> offset int .)
    then            reduce using rule 197 (LIMIT -> offset int .)
    when            reduce using rule 197 (LIMIT -> offset int .)
    parc            reduce using rule 197 (LIMIT -> offset int .)
    end             reduce using rule 197 (LIMIT -> offset int .)
    else            reduce using rule 197 (LIMIT -> offset int .)
    constraint      reduce using rule 197 (LIMIT -> offset int .)
    unique          reduce using rule 197 (LIMIT -> offset int .)
    check           reduce using rule 197 (LIMIT -> offset int .)
    default         reduce using rule 197 (LIMIT -> offset int .)
    null            reduce using rule 197 (LIMIT -> offset int .)
    primary         reduce using rule 197 (LIMIT -> offset int .)
    references      reduce using rule 197 (LIMIT -> offset int .)
    asc             reduce using rule 197 (LIMIT -> offset int .)
    desc            reduce using rule 197 (LIMIT -> offset int .)
    limit           shift and go to state 762

  ! limit           [ reduce using rule 197 (LIMIT -> offset int .) ]


state 711

    (215) ORDER -> order by LEXP . ORD
    (216) ORDER -> order by LEXP .
    (226) LEXP -> LEXP . coma EXP
    (218) ORD -> . asc
    (219) ORD -> . desc

  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for asc resolved as shift
  ! shift/reduce conflict for desc resolved as shift
    r_from          reduce using rule 216 (ORDER -> order by LEXP .)
    where           reduce using rule 216 (ORDER -> order by LEXP .)
    group           reduce using rule 216 (ORDER -> order by LEXP .)
    having          reduce using rule 216 (ORDER -> order by LEXP .)
    union           reduce using rule 216 (ORDER -> order by LEXP .)
    intersect       reduce using rule 216 (ORDER -> order by LEXP .)
    except          reduce using rule 216 (ORDER -> order by LEXP .)
    order           reduce using rule 216 (ORDER -> order by LEXP .)
    limit           reduce using rule 216 (ORDER -> order by LEXP .)
    offset          reduce using rule 216 (ORDER -> order by LEXP .)
    ptcoma          reduce using rule 216 (ORDER -> order by LEXP .)
    mas             reduce using rule 216 (ORDER -> order by LEXP .)
    menos           reduce using rule 216 (ORDER -> order by LEXP .)
    multiplicacion  reduce using rule 216 (ORDER -> order by LEXP .)
    division        reduce using rule 216 (ORDER -> order by LEXP .)
    modulo          reduce using rule 216 (ORDER -> order by LEXP .)
    elevado         reduce using rule 216 (ORDER -> order by LEXP .)
    and             reduce using rule 216 (ORDER -> order by LEXP .)
    or              reduce using rule 216 (ORDER -> order by LEXP .)
    mayor           reduce using rule 216 (ORDER -> order by LEXP .)
    menor           reduce using rule 216 (ORDER -> order by LEXP .)
    mayor_igual     reduce using rule 216 (ORDER -> order by LEXP .)
    menor_igual     reduce using rule 216 (ORDER -> order by LEXP .)
    igual           reduce using rule 216 (ORDER -> order by LEXP .)
    diferente1      reduce using rule 216 (ORDER -> order by LEXP .)
    diferente2      reduce using rule 216 (ORDER -> order by LEXP .)
    between         reduce using rule 216 (ORDER -> order by LEXP .)
    is              reduce using rule 216 (ORDER -> order by LEXP .)
    isnull          reduce using rule 216 (ORDER -> order by LEXP .)
    notnull         reduce using rule 216 (ORDER -> order by LEXP .)
    as              reduce using rule 216 (ORDER -> order by LEXP .)
    cadenaString    reduce using rule 216 (ORDER -> order by LEXP .)
    id              reduce using rule 216 (ORDER -> order by LEXP .)
    cadena          reduce using rule 216 (ORDER -> order by LEXP .)
    in              reduce using rule 216 (ORDER -> order by LEXP .)
    not             reduce using rule 216 (ORDER -> order by LEXP .)
    like            reduce using rule 216 (ORDER -> order by LEXP .)
    then            reduce using rule 216 (ORDER -> order by LEXP .)
    when            reduce using rule 216 (ORDER -> order by LEXP .)
    parc            reduce using rule 216 (ORDER -> order by LEXP .)
    end             reduce using rule 216 (ORDER -> order by LEXP .)
    else            reduce using rule 216 (ORDER -> order by LEXP .)
    constraint      reduce using rule 216 (ORDER -> order by LEXP .)
    unique          reduce using rule 216 (ORDER -> order by LEXP .)
    check           reduce using rule 216 (ORDER -> order by LEXP .)
    default         reduce using rule 216 (ORDER -> order by LEXP .)
    null            reduce using rule 216 (ORDER -> order by LEXP .)
    primary         reduce using rule 216 (ORDER -> order by LEXP .)
    references      reduce using rule 216 (ORDER -> order by LEXP .)
    coma            shift and go to state 121
    asc             shift and go to state 764
    desc            shift and go to state 765

  ! coma            [ reduce using rule 216 (ORDER -> order by LEXP .) ]
  ! asc             [ reduce using rule 216 (ORDER -> order by LEXP .) ]
  ! desc            [ reduce using rule 216 (ORDER -> order by LEXP .) ]

    ORD                            shift and go to state 763

state 712

    (320) EXP -> para EXP . parc
    (227) LEXP -> EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

  ! shift/reduce conflict for parc resolved as shift
    parc            shift and go to state 252
    coma            reduce using rule 227 (LEXP -> EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    and             shift and go to state 128
    or              shift and go to state 129
    mayor           shift and go to state 130
    menor           shift and go to state 131
    mayor_igual     shift and go to state 132
    menor_igual     shift and go to state 133
    igual           shift and go to state 134
    diferente1      shift and go to state 135
    diferente2      shift and go to state 136
    between         shift and go to state 137
    is              shift and go to state 138
    isnull          shift and go to state 140
    notnull         shift and go to state 141
    as              shift and go to state 142
    cadenaString    shift and go to state 143
    id              shift and go to state 144
    cadena          shift and go to state 145
    in              shift and go to state 146
    not             shift and go to state 139
    like            shift and go to state 147

  ! parc            [ reduce using rule 227 (LEXP -> EXP .) ]


state 713

    (229) TIPO -> decimal para int coma int parc .

    r_from          reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    coma            reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    where           reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    group           reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    having          reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    union           reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    intersect       reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    except          reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    order           reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    limit           reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    offset          reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    ptcoma          reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    mas             reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    menos           reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    multiplicacion  reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    division        reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    modulo          reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    elevado         reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    and             reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    or              reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    mayor           reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    menor           reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    mayor_igual     reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    menor_igual     reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    igual           reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    diferente1      reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    diferente2      reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    between         reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    is              reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    isnull          reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    notnull         reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    as              reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    cadenaString    reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    id              reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    cadena          reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    in              reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    not             reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    like            reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    then            reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    when            reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    parc            reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    end             reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    else            reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    constraint      reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    unique          reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    check           reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    default         reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    null            reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    primary         reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    references      reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    asc             reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    desc            reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    dospuntos       reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    language        reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    do              reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    declare         reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    if              reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    raise           reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    begin           reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    execute         reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    return          reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    insert          reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    select          reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    update          reduce using rule 229 (TIPO -> decimal para int coma int parc .)
    delete          reduce using rule 229 (TIPO -> decimal para int coma int parc .)


state 714

    (232) TIPO -> numeric para int coma int parc .

    r_from          reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    coma            reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    where           reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    group           reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    having          reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    union           reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    intersect       reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    except          reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    order           reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    limit           reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    offset          reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    ptcoma          reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    mas             reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    menos           reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    multiplicacion  reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    division        reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    modulo          reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    elevado         reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    and             reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    or              reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    mayor           reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    menor           reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    mayor_igual     reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    menor_igual     reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    igual           reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    diferente1      reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    diferente2      reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    between         reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    is              reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    isnull          reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    notnull         reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    as              reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    cadenaString    reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    id              reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    cadena          reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    in              reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    not             reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    like            reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    then            reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    when            reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    parc            reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    end             reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    else            reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    constraint      reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    unique          reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    check           reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    default         reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    null            reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    primary         reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    references      reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    asc             reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    desc            reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    dospuntos       reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    language        reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    do              reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    declare         reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    if              reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    raise           reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    begin           reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    execute         reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    return          reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    insert          reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    select          reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    update          reduce using rule 232 (TIPO -> numeric para int coma int parc .)
    delete          reduce using rule 232 (TIPO -> numeric para int coma int parc .)


state 715

    (244) TIPO -> timestamp para int parc without time . zone

    zone            shift and go to state 766


state 716

    (245) TIPO -> timestamp para int parc with time . zone

    zone            shift and go to state 767


state 717

    (246) TIPO -> time para int parc without time . zone

    zone            shift and go to state 768


state 718

    (247) TIPO -> time para int parc with time . zone

    zone            shift and go to state 769


state 719

    (170) OPCOLUMN -> constraint id unique .

    constraint      reduce using rule 170 (OPCOLUMN -> constraint id unique .)
    unique          reduce using rule 170 (OPCOLUMN -> constraint id unique .)
    check           reduce using rule 170 (OPCOLUMN -> constraint id unique .)
    default         reduce using rule 170 (OPCOLUMN -> constraint id unique .)
    not             reduce using rule 170 (OPCOLUMN -> constraint id unique .)
    null            reduce using rule 170 (OPCOLUMN -> constraint id unique .)
    primary         reduce using rule 170 (OPCOLUMN -> constraint id unique .)
    references      reduce using rule 170 (OPCOLUMN -> constraint id unique .)
    parc            reduce using rule 170 (OPCOLUMN -> constraint id unique .)
    coma            reduce using rule 170 (OPCOLUMN -> constraint id unique .)


state 720

    (172) OPCOLUMN -> constraint id check . para CONDCHECK parc

    para            shift and go to state 770


state 721

    (173) OPCOLUMN -> check para CONDCHECK . parc

    parc            shift and go to state 771


state 722

    (190) HERENCIA -> inherits para id . parc

    parc            shift and go to state 772


state 723

    (179) OPCONST -> primary key para LEXP parc .

    parc            reduce using rule 179 (OPCONST -> primary key para LEXP parc .)
    coma            reduce using rule 179 (OPCONST -> primary key para LEXP parc .)


state 724

    (180) OPCONST -> foreign key para LEXP parc . references id para LEXP parc

    references      shift and go to state 773


state 725

    (183) CONDCHECK -> EXP mayor EXP .
    (283) EXP -> EXP mayor EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    parc            reduce using rule 183 (CONDCHECK -> EXP mayor EXP .)
    mayor           reduce using rule 283 (EXP -> EXP mayor EXP .)
    menor           reduce using rule 283 (EXP -> EXP mayor EXP .)
    mayor_igual     reduce using rule 283 (EXP -> EXP mayor EXP .)
    menor_igual     reduce using rule 283 (EXP -> EXP mayor EXP .)
    igual           reduce using rule 283 (EXP -> EXP mayor EXP .)
    diferente1      reduce using rule 283 (EXP -> EXP mayor EXP .)
    diferente2      reduce using rule 283 (EXP -> EXP mayor EXP .)
    and             reduce using rule 283 (EXP -> EXP mayor EXP .)
    or              reduce using rule 283 (EXP -> EXP mayor EXP .)
    between         reduce using rule 283 (EXP -> EXP mayor EXP .)
    is              reduce using rule 283 (EXP -> EXP mayor EXP .)
    isnull          reduce using rule 283 (EXP -> EXP mayor EXP .)
    notnull         reduce using rule 283 (EXP -> EXP mayor EXP .)
    as              reduce using rule 283 (EXP -> EXP mayor EXP .)
    cadenaString    reduce using rule 283 (EXP -> EXP mayor EXP .)
    id              reduce using rule 283 (EXP -> EXP mayor EXP .)
    cadena          reduce using rule 283 (EXP -> EXP mayor EXP .)
    in              reduce using rule 283 (EXP -> EXP mayor EXP .)
    not             reduce using rule 283 (EXP -> EXP mayor EXP .)
    like            reduce using rule 283 (EXP -> EXP mayor EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127

  ! mas             [ reduce using rule 283 (EXP -> EXP mayor EXP .) ]
  ! menos           [ reduce using rule 283 (EXP -> EXP mayor EXP .) ]
  ! multiplicacion  [ reduce using rule 283 (EXP -> EXP mayor EXP .) ]
  ! division        [ reduce using rule 283 (EXP -> EXP mayor EXP .) ]
  ! modulo          [ reduce using rule 283 (EXP -> EXP mayor EXP .) ]
  ! elevado         [ reduce using rule 283 (EXP -> EXP mayor EXP .) ]
  ! and             [ shift and go to state 128 ]
  ! or              [ shift and go to state 129 ]
  ! mayor           [ shift and go to state 130 ]
  ! menor           [ shift and go to state 131 ]
  ! mayor_igual     [ shift and go to state 132 ]
  ! menor_igual     [ shift and go to state 133 ]
  ! igual           [ shift and go to state 134 ]
  ! diferente1      [ shift and go to state 135 ]
  ! diferente2      [ shift and go to state 136 ]
  ! between         [ shift and go to state 137 ]
  ! is              [ shift and go to state 138 ]
  ! isnull          [ shift and go to state 140 ]
  ! notnull         [ shift and go to state 141 ]
  ! as              [ shift and go to state 142 ]
  ! cadenaString    [ shift and go to state 143 ]
  ! id              [ shift and go to state 144 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 146 ]
  ! not             [ shift and go to state 139 ]
  ! like            [ shift and go to state 147 ]


state 726

    (184) CONDCHECK -> EXP menor EXP .
    (284) EXP -> EXP menor EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    parc            reduce using rule 184 (CONDCHECK -> EXP menor EXP .)
    mayor           reduce using rule 284 (EXP -> EXP menor EXP .)
    menor           reduce using rule 284 (EXP -> EXP menor EXP .)
    mayor_igual     reduce using rule 284 (EXP -> EXP menor EXP .)
    menor_igual     reduce using rule 284 (EXP -> EXP menor EXP .)
    igual           reduce using rule 284 (EXP -> EXP menor EXP .)
    diferente1      reduce using rule 284 (EXP -> EXP menor EXP .)
    diferente2      reduce using rule 284 (EXP -> EXP menor EXP .)
    and             reduce using rule 284 (EXP -> EXP menor EXP .)
    or              reduce using rule 284 (EXP -> EXP menor EXP .)
    between         reduce using rule 284 (EXP -> EXP menor EXP .)
    is              reduce using rule 284 (EXP -> EXP menor EXP .)
    isnull          reduce using rule 284 (EXP -> EXP menor EXP .)
    notnull         reduce using rule 284 (EXP -> EXP menor EXP .)
    as              reduce using rule 284 (EXP -> EXP menor EXP .)
    cadenaString    reduce using rule 284 (EXP -> EXP menor EXP .)
    id              reduce using rule 284 (EXP -> EXP menor EXP .)
    cadena          reduce using rule 284 (EXP -> EXP menor EXP .)
    in              reduce using rule 284 (EXP -> EXP menor EXP .)
    not             reduce using rule 284 (EXP -> EXP menor EXP .)
    like            reduce using rule 284 (EXP -> EXP menor EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127

  ! mas             [ reduce using rule 284 (EXP -> EXP menor EXP .) ]
  ! menos           [ reduce using rule 284 (EXP -> EXP menor EXP .) ]
  ! multiplicacion  [ reduce using rule 284 (EXP -> EXP menor EXP .) ]
  ! division        [ reduce using rule 284 (EXP -> EXP menor EXP .) ]
  ! modulo          [ reduce using rule 284 (EXP -> EXP menor EXP .) ]
  ! elevado         [ reduce using rule 284 (EXP -> EXP menor EXP .) ]
  ! and             [ shift and go to state 128 ]
  ! or              [ shift and go to state 129 ]
  ! mayor           [ shift and go to state 130 ]
  ! menor           [ shift and go to state 131 ]
  ! mayor_igual     [ shift and go to state 132 ]
  ! menor_igual     [ shift and go to state 133 ]
  ! igual           [ shift and go to state 134 ]
  ! diferente1      [ shift and go to state 135 ]
  ! diferente2      [ shift and go to state 136 ]
  ! between         [ shift and go to state 137 ]
  ! is              [ shift and go to state 138 ]
  ! isnull          [ shift and go to state 140 ]
  ! notnull         [ shift and go to state 141 ]
  ! as              [ shift and go to state 142 ]
  ! cadenaString    [ shift and go to state 143 ]
  ! id              [ shift and go to state 144 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 146 ]
  ! not             [ shift and go to state 139 ]
  ! like            [ shift and go to state 147 ]


state 727

    (185) CONDCHECK -> EXP mayor_igual EXP .
    (285) EXP -> EXP mayor_igual EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    parc            reduce using rule 185 (CONDCHECK -> EXP mayor_igual EXP .)
    mayor           reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    menor           reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    mayor_igual     reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    menor_igual     reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    igual           reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    diferente1      reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    diferente2      reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    and             reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    or              reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    between         reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    is              reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    isnull          reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    notnull         reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    as              reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    cadenaString    reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    id              reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    cadena          reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    in              reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    not             reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    like            reduce using rule 285 (EXP -> EXP mayor_igual EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127

  ! mas             [ reduce using rule 285 (EXP -> EXP mayor_igual EXP .) ]
  ! menos           [ reduce using rule 285 (EXP -> EXP mayor_igual EXP .) ]
  ! multiplicacion  [ reduce using rule 285 (EXP -> EXP mayor_igual EXP .) ]
  ! division        [ reduce using rule 285 (EXP -> EXP mayor_igual EXP .) ]
  ! modulo          [ reduce using rule 285 (EXP -> EXP mayor_igual EXP .) ]
  ! elevado         [ reduce using rule 285 (EXP -> EXP mayor_igual EXP .) ]
  ! and             [ shift and go to state 128 ]
  ! or              [ shift and go to state 129 ]
  ! mayor           [ shift and go to state 130 ]
  ! menor           [ shift and go to state 131 ]
  ! mayor_igual     [ shift and go to state 132 ]
  ! menor_igual     [ shift and go to state 133 ]
  ! igual           [ shift and go to state 134 ]
  ! diferente1      [ shift and go to state 135 ]
  ! diferente2      [ shift and go to state 136 ]
  ! between         [ shift and go to state 137 ]
  ! is              [ shift and go to state 138 ]
  ! isnull          [ shift and go to state 140 ]
  ! notnull         [ shift and go to state 141 ]
  ! as              [ shift and go to state 142 ]
  ! cadenaString    [ shift and go to state 143 ]
  ! id              [ shift and go to state 144 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 146 ]
  ! not             [ shift and go to state 139 ]
  ! like            [ shift and go to state 147 ]


state 728

    (186) CONDCHECK -> EXP menor_igual EXP .
    (286) EXP -> EXP menor_igual EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    parc            reduce using rule 186 (CONDCHECK -> EXP menor_igual EXP .)
    mayor           reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    menor           reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    mayor_igual     reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    menor_igual     reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    igual           reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    diferente1      reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    diferente2      reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    and             reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    or              reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    between         reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    is              reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    isnull          reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    notnull         reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    as              reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    cadenaString    reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    id              reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    cadena          reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    in              reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    not             reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    like            reduce using rule 286 (EXP -> EXP menor_igual EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127

  ! mas             [ reduce using rule 286 (EXP -> EXP menor_igual EXP .) ]
  ! menos           [ reduce using rule 286 (EXP -> EXP menor_igual EXP .) ]
  ! multiplicacion  [ reduce using rule 286 (EXP -> EXP menor_igual EXP .) ]
  ! division        [ reduce using rule 286 (EXP -> EXP menor_igual EXP .) ]
  ! modulo          [ reduce using rule 286 (EXP -> EXP menor_igual EXP .) ]
  ! elevado         [ reduce using rule 286 (EXP -> EXP menor_igual EXP .) ]
  ! and             [ shift and go to state 128 ]
  ! or              [ shift and go to state 129 ]
  ! mayor           [ shift and go to state 130 ]
  ! menor           [ shift and go to state 131 ]
  ! mayor_igual     [ shift and go to state 132 ]
  ! menor_igual     [ shift and go to state 133 ]
  ! igual           [ shift and go to state 134 ]
  ! diferente1      [ shift and go to state 135 ]
  ! diferente2      [ shift and go to state 136 ]
  ! between         [ shift and go to state 137 ]
  ! is              [ shift and go to state 138 ]
  ! isnull          [ shift and go to state 140 ]
  ! notnull         [ shift and go to state 141 ]
  ! as              [ shift and go to state 142 ]
  ! cadenaString    [ shift and go to state 143 ]
  ! id              [ shift and go to state 144 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 146 ]
  ! not             [ shift and go to state 139 ]
  ! like            [ shift and go to state 147 ]


state 729

    (187) CONDCHECK -> EXP igual EXP .
    (287) EXP -> EXP igual EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    parc            reduce using rule 187 (CONDCHECK -> EXP igual EXP .)
    mayor           reduce using rule 287 (EXP -> EXP igual EXP .)
    menor           reduce using rule 287 (EXP -> EXP igual EXP .)
    mayor_igual     reduce using rule 287 (EXP -> EXP igual EXP .)
    menor_igual     reduce using rule 287 (EXP -> EXP igual EXP .)
    igual           reduce using rule 287 (EXP -> EXP igual EXP .)
    diferente1      reduce using rule 287 (EXP -> EXP igual EXP .)
    diferente2      reduce using rule 287 (EXP -> EXP igual EXP .)
    and             reduce using rule 287 (EXP -> EXP igual EXP .)
    or              reduce using rule 287 (EXP -> EXP igual EXP .)
    between         reduce using rule 287 (EXP -> EXP igual EXP .)
    is              reduce using rule 287 (EXP -> EXP igual EXP .)
    isnull          reduce using rule 287 (EXP -> EXP igual EXP .)
    notnull         reduce using rule 287 (EXP -> EXP igual EXP .)
    as              reduce using rule 287 (EXP -> EXP igual EXP .)
    cadenaString    reduce using rule 287 (EXP -> EXP igual EXP .)
    id              reduce using rule 287 (EXP -> EXP igual EXP .)
    cadena          reduce using rule 287 (EXP -> EXP igual EXP .)
    in              reduce using rule 287 (EXP -> EXP igual EXP .)
    not             reduce using rule 287 (EXP -> EXP igual EXP .)
    like            reduce using rule 287 (EXP -> EXP igual EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127

  ! mas             [ reduce using rule 287 (EXP -> EXP igual EXP .) ]
  ! menos           [ reduce using rule 287 (EXP -> EXP igual EXP .) ]
  ! multiplicacion  [ reduce using rule 287 (EXP -> EXP igual EXP .) ]
  ! division        [ reduce using rule 287 (EXP -> EXP igual EXP .) ]
  ! modulo          [ reduce using rule 287 (EXP -> EXP igual EXP .) ]
  ! elevado         [ reduce using rule 287 (EXP -> EXP igual EXP .) ]
  ! and             [ shift and go to state 128 ]
  ! or              [ shift and go to state 129 ]
  ! mayor           [ shift and go to state 130 ]
  ! menor           [ shift and go to state 131 ]
  ! mayor_igual     [ shift and go to state 132 ]
  ! menor_igual     [ shift and go to state 133 ]
  ! igual           [ shift and go to state 134 ]
  ! diferente1      [ shift and go to state 135 ]
  ! diferente2      [ shift and go to state 136 ]
  ! between         [ shift and go to state 137 ]
  ! is              [ shift and go to state 138 ]
  ! isnull          [ shift and go to state 140 ]
  ! notnull         [ shift and go to state 141 ]
  ! as              [ shift and go to state 142 ]
  ! cadenaString    [ shift and go to state 143 ]
  ! id              [ shift and go to state 144 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 146 ]
  ! not             [ shift and go to state 139 ]
  ! like            [ shift and go to state 147 ]


state 730

    (188) CONDCHECK -> EXP diferente1 EXP .
    (288) EXP -> EXP diferente1 EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    parc            reduce using rule 188 (CONDCHECK -> EXP diferente1 EXP .)
    mayor           reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    menor           reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    mayor_igual     reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    menor_igual     reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    igual           reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    diferente1      reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    diferente2      reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    and             reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    or              reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    between         reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    is              reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    isnull          reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    notnull         reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    as              reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    cadenaString    reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    id              reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    cadena          reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    in              reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    not             reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    like            reduce using rule 288 (EXP -> EXP diferente1 EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127

  ! mas             [ reduce using rule 288 (EXP -> EXP diferente1 EXP .) ]
  ! menos           [ reduce using rule 288 (EXP -> EXP diferente1 EXP .) ]
  ! multiplicacion  [ reduce using rule 288 (EXP -> EXP diferente1 EXP .) ]
  ! division        [ reduce using rule 288 (EXP -> EXP diferente1 EXP .) ]
  ! modulo          [ reduce using rule 288 (EXP -> EXP diferente1 EXP .) ]
  ! elevado         [ reduce using rule 288 (EXP -> EXP diferente1 EXP .) ]
  ! and             [ shift and go to state 128 ]
  ! or              [ shift and go to state 129 ]
  ! mayor           [ shift and go to state 130 ]
  ! menor           [ shift and go to state 131 ]
  ! mayor_igual     [ shift and go to state 132 ]
  ! menor_igual     [ shift and go to state 133 ]
  ! igual           [ shift and go to state 134 ]
  ! diferente1      [ shift and go to state 135 ]
  ! diferente2      [ shift and go to state 136 ]
  ! between         [ shift and go to state 137 ]
  ! is              [ shift and go to state 138 ]
  ! isnull          [ shift and go to state 140 ]
  ! notnull         [ shift and go to state 141 ]
  ! as              [ shift and go to state 142 ]
  ! cadenaString    [ shift and go to state 143 ]
  ! id              [ shift and go to state 144 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 146 ]
  ! not             [ shift and go to state 139 ]
  ! like            [ shift and go to state 147 ]


state 731

    (189) CONDCHECK -> EXP diferente2 EXP .
    (289) EXP -> EXP diferente2 EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    parc            reduce using rule 189 (CONDCHECK -> EXP diferente2 EXP .)
    mayor           reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    menor           reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    mayor_igual     reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    menor_igual     reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    igual           reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    diferente1      reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    diferente2      reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    and             reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    or              reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    between         reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    is              reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    isnull          reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    notnull         reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    as              reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    cadenaString    reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    id              reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    cadena          reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    in              reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    not             reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    like            reduce using rule 289 (EXP -> EXP diferente2 EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127

  ! mas             [ reduce using rule 289 (EXP -> EXP diferente2 EXP .) ]
  ! menos           [ reduce using rule 289 (EXP -> EXP diferente2 EXP .) ]
  ! multiplicacion  [ reduce using rule 289 (EXP -> EXP diferente2 EXP .) ]
  ! division        [ reduce using rule 289 (EXP -> EXP diferente2 EXP .) ]
  ! modulo          [ reduce using rule 289 (EXP -> EXP diferente2 EXP .) ]
  ! elevado         [ reduce using rule 289 (EXP -> EXP diferente2 EXP .) ]
  ! and             [ shift and go to state 128 ]
  ! or              [ shift and go to state 129 ]
  ! mayor           [ shift and go to state 130 ]
  ! menor           [ shift and go to state 131 ]
  ! mayor_igual     [ shift and go to state 132 ]
  ! menor_igual     [ shift and go to state 133 ]
  ! igual           [ shift and go to state 134 ]
  ! diferente1      [ shift and go to state 135 ]
  ! diferente2      [ shift and go to state 136 ]
  ! between         [ shift and go to state 137 ]
  ! is              [ shift and go to state 138 ]
  ! isnull          [ shift and go to state 140 ]
  ! notnull         [ shift and go to state 141 ]
  ! as              [ shift and go to state 142 ]
  ! cadenaString    [ shift and go to state 143 ]
  ! id              [ shift and go to state 144 ]
  ! cadena          [ shift and go to state 145 ]
  ! in              [ shift and go to state 146 ]
  ! not             [ shift and go to state 139 ]
  ! like            [ shift and go to state 147 ]


state 732

    (51) CREATEINDEX -> create index id on id para id id ORDEN . parc

    parc            shift and go to state 774


state 733

    (52) CREATEINDEX -> create index id on id para id id parc .

    ptcoma          reduce using rule 52 (CREATEINDEX -> create index id on id para id id parc .)
    where           reduce using rule 52 (CREATEINDEX -> create index id on id para id id parc .)


state 734

    (50) CREATEINDEX -> create index id on id para id ORDEN parc .

    ptcoma          reduce using rule 50 (CREATEINDEX -> create index id on id para id ORDEN parc .)
    where           reduce using rule 50 (CREATEINDEX -> create index id on id para id ORDEN parc .)


state 735

    (57) ORDEN -> asc nulls . first
    (60) ORDEN -> asc nulls . last

    first           shift and go to state 775
    last            shift and go to state 776


state 736

    (58) ORDEN -> desc nulls . last
    (59) ORDEN -> desc nulls . first

    last            shift and go to state 777
    first           shift and go to state 778


state 737

    (55) ORDEN -> nulls first .

    parc            reduce using rule 55 (ORDEN -> nulls first .)


state 738

    (56) ORDEN -> nulls last .

    parc            reduce using rule 56 (ORDEN -> nulls last .)


state 739

    (49) CREATEINDEX -> create index id on id using hash para LEXP . parc
    (226) LEXP -> LEXP . coma EXP

    parc            shift and go to state 779
    coma            shift and go to state 121


state 740

    (48) CREATEINDEX -> create unique index id on id para LEXP parc .

    ptcoma          reduce using rule 48 (CREATEINDEX -> create unique index id on id para LEXP parc .)
    where           reduce using rule 48 (CREATEINDEX -> create unique index id on id para LEXP parc .)


state 741

    (40) LPARAM -> LPARAM coma inout id TIPO .

    parc            reduce using rule 40 (LPARAM -> LPARAM coma inout id TIPO .)
    coma            reduce using rule 40 (LPARAM -> LPARAM coma inout id TIPO .)


state 742

    (37) CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .

    language        reduce using rule 37 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    as              reduce using rule 37 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    do              reduce using rule 37 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    declare         reduce using rule 37 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    id              reduce using rule 37 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    if              reduce using rule 37 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    raise           reduce using rule 37 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    begin           reduce using rule 37 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    execute         reduce using rule 37 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    return          reduce using rule 37 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    insert          reduce using rule 37 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    select          reduce using rule 37 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    update          reduce using rule 37 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    delete          reduce using rule 37 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    use             reduce using rule 37 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    create          reduce using rule 37 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    alter           reduce using rule 37 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    drop            reduce using rule 37 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    case            reduce using rule 37 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    show            reduce using rule 37 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    $end            reduce using rule 37 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)


state 743

    (38) CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .

    language        reduce using rule 38 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    as              reduce using rule 38 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    do              reduce using rule 38 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    declare         reduce using rule 38 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    id              reduce using rule 38 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    if              reduce using rule 38 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    raise           reduce using rule 38 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    begin           reduce using rule 38 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    execute         reduce using rule 38 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    return          reduce using rule 38 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    insert          reduce using rule 38 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    select          reduce using rule 38 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    update          reduce using rule 38 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    delete          reduce using rule 38 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    use             reduce using rule 38 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    create          reduce using rule 38 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    alter           reduce using rule 38 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    drop            reduce using rule 38 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    case            reduce using rule 38 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    show            reduce using rule 38 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    $end            reduce using rule 38 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)


state 744

    (25) FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .
    (35) LCONTENIDOP -> LCONTENIDOP . CONTENIDOP
    (37) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (38) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn
    (39) CONTENIDOP -> . LISTACONTENIDO
    (84) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (85) LISTACONTENIDO -> . CONTENIDO
    (86) CONTENIDO -> . ASIGNACION ptcoma
    (87) CONTENIDO -> . CONDICIONIF ptcoma
    (88) CONTENIDO -> . RAISE ptcoma
    (89) CONTENIDO -> . BEGINEND ptcoma
    (90) CONTENIDO -> . CALLPROCEDURE ptcoma
    (91) CONTENIDO -> . declare LDEC
    (92) CONTENIDO -> . RETURN ptcoma
    (93) CONTENIDO -> . INSERT ptcoma
    (94) CONTENIDO -> . SELECT ptcoma
    (95) CONTENIDO -> . UPDATE ptcoma
    (96) CONTENIDO -> . DELETE ptcoma
    (71) ASIGNACION -> . id dospuntos igual EXP
    (72) ASIGNACION -> . id igual EXP
    (73) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (97) RAISE -> . raise LEVEL FORMAT
    (98) RAISE -> . raise LEVEL EXP
    (99) RAISE -> . raise LEVEL
    (100) RAISE -> . raise
    (101) RAISE -> . raise LEVEL cadena coma id
    (46) BEGINEND -> . begin LISTACONTENIDO end
    (30) CALLPROCEDURE -> . execute id para parc
    (24) RETURN -> . return EXP
    (114) INSERT -> . insert into id values para LEXP parc
    (115) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (220) UPDATE -> . update id set LCAMPOS WHERE
    (223) DELETE -> . delete r_from id WHERE

  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for if resolved as shift
  ! shift/reduce conflict for execute resolved as shift
  ! shift/reduce conflict for insert resolved as shift
  ! shift/reduce conflict for select resolved as shift
  ! shift/reduce conflict for update resolved as shift
  ! shift/reduce conflict for delete resolved as shift
    use             reduce using rule 25 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    create          reduce using rule 25 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    alter           reduce using rule 25 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    drop            reduce using rule 25 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    case            reduce using rule 25 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    show            reduce using rule 25 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    $end            reduce using rule 25 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    as              shift and go to state 492
    do              shift and go to state 494
    declare         shift and go to state 296
    id              shift and go to state 17
    if              shift and go to state 30
    raise           shift and go to state 302
    begin           shift and go to state 303
    execute         shift and go to state 34
    return          shift and go to state 304
    insert          shift and go to state 31
    select          shift and go to state 24
    update          shift and go to state 26
    delete          shift and go to state 27

  ! select          [ reduce using rule 25 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .) ]
  ! update          [ reduce using rule 25 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .) ]
  ! delete          [ reduce using rule 25 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .) ]
  ! insert          [ reduce using rule 25 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .) ]
  ! id              [ reduce using rule 25 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .) ]
  ! if              [ reduce using rule 25 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .) ]
  ! execute         [ reduce using rule 25 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .) ]

    CONTENIDOP                     shift and go to state 590
    LISTACONTENIDO                 shift and go to state 493
    CONTENIDO                      shift and go to state 290
    ASIGNACION                     shift and go to state 291
    CONDICIONIF                    shift and go to state 292
    RAISE                          shift and go to state 293
    BEGINEND                       shift and go to state 294
    CALLPROCEDURE                  shift and go to state 295
    RETURN                         shift and go to state 297
    INSERT                         shift and go to state 298
    SELECT                         shift and go to state 299
    UPDATE                         shift and go to state 300
    DELETE                         shift and go to state 301

state 745

    (27) FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .

    use             reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    select          reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    create          reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    update          reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    delete          reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    alter           reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    drop            reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    insert          reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    case            reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    show            reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    id              reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    if              reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    execute         reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    $end            reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)


state 746

    (133) OP -> alter column id set not null .

    coma            reduce using rule 133 (OP -> alter column id set not null .)
    ptcoma          reduce using rule 133 (OP -> alter column id set not null .)


state 747

    (128) OP -> add constraint id check para CONDCHECK . parc

    parc            shift and go to state 780


state 748

    (129) OP -> add constraint id unique para LEXP . parc
    (226) LEXP -> LEXP . coma EXP

    parc            shift and go to state 781
    coma            shift and go to state 121


state 749

    (132) OP -> add constraint id foreign key para . LEXP parc references id para LEXP parc
    (226) LEXP -> . LEXP coma EXP
    (227) LEXP -> . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 782
    EXP                            shift and go to state 57
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 750

    (131) OP -> add foreign key para LEXP parc . references id para LEXP parc

    references      shift and go to state 783


state 751

    (77) LELIF -> LELIF elsif EXP then LISTACONTENIDO .
    (84) LISTACONTENIDO -> LISTACONTENIDO . CONTENIDO
    (86) CONTENIDO -> . ASIGNACION ptcoma
    (87) CONTENIDO -> . CONDICIONIF ptcoma
    (88) CONTENIDO -> . RAISE ptcoma
    (89) CONTENIDO -> . BEGINEND ptcoma
    (90) CONTENIDO -> . CALLPROCEDURE ptcoma
    (91) CONTENIDO -> . declare LDEC
    (92) CONTENIDO -> . RETURN ptcoma
    (93) CONTENIDO -> . INSERT ptcoma
    (94) CONTENIDO -> . SELECT ptcoma
    (95) CONTENIDO -> . UPDATE ptcoma
    (96) CONTENIDO -> . DELETE ptcoma
    (71) ASIGNACION -> . id dospuntos igual EXP
    (72) ASIGNACION -> . id igual EXP
    (73) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (74) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (75) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (76) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (97) RAISE -> . raise LEVEL FORMAT
    (98) RAISE -> . raise LEVEL EXP
    (99) RAISE -> . raise LEVEL
    (100) RAISE -> . raise
    (101) RAISE -> . raise LEVEL cadena coma id
    (46) BEGINEND -> . begin LISTACONTENIDO end
    (30) CALLPROCEDURE -> . execute id para parc
    (24) RETURN -> . return EXP
    (114) INSERT -> . insert into id values para LEXP parc
    (115) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (220) UPDATE -> . update id set LCAMPOS WHERE
    (223) DELETE -> . delete r_from id WHERE

    end             reduce using rule 77 (LELIF -> LELIF elsif EXP then LISTACONTENIDO .)
    elsif           reduce using rule 77 (LELIF -> LELIF elsif EXP then LISTACONTENIDO .)
    else            reduce using rule 77 (LELIF -> LELIF elsif EXP then LISTACONTENIDO .)
    declare         shift and go to state 296
    id              shift and go to state 17
    if              shift and go to state 30
    raise           shift and go to state 302
    begin           shift and go to state 303
    execute         shift and go to state 34
    return          shift and go to state 304
    insert          shift and go to state 31
    select          shift and go to state 24
    update          shift and go to state 26
    delete          shift and go to state 27

    CONTENIDO                      shift and go to state 403
    ASIGNACION                     shift and go to state 291
    CONDICIONIF                    shift and go to state 292
    RAISE                          shift and go to state 293
    BEGINEND                       shift and go to state 294
    CALLPROCEDURE                  shift and go to state 295
    RETURN                         shift and go to state 297
    INSERT                         shift and go to state 298
    SELECT                         shift and go to state 299
    UPDATE                         shift and go to state 300
    DELETE                         shift and go to state 301

state 752

    (63) DECLARACIONES -> id TIPO not null ASIG . ptcoma

    ptcoma          shift and go to state 784


state 753

    (68) ASIG -> dospuntos igual EXP .
    (275) EXP -> EXP . mas EXP
    (276) EXP -> EXP . menos EXP
    (277) EXP -> EXP . multiplicacion EXP
    (278) EXP -> EXP . division EXP
    (279) EXP -> EXP . modulo EXP
    (280) EXP -> EXP . elevado EXP
    (281) EXP -> EXP . and EXP
    (282) EXP -> EXP . or EXP
    (283) EXP -> EXP . mayor EXP
    (284) EXP -> EXP . menor EXP
    (285) EXP -> EXP . mayor_igual EXP
    (286) EXP -> EXP . menor_igual EXP
    (287) EXP -> EXP . igual EXP
    (288) EXP -> EXP . diferente1 EXP
    (289) EXP -> EXP . diferente2 EXP
    (290) EXP -> EXP . between EXP
    (291) EXP -> EXP . is not null
    (292) EXP -> EXP . is null
    (293) EXP -> EXP . isnull
    (294) EXP -> EXP . notnull
    (295) EXP -> EXP . is true
    (296) EXP -> EXP . is not true
    (297) EXP -> EXP . is false
    (298) EXP -> EXP . is not false
    (299) EXP -> EXP . is unknown
    (300) EXP -> EXP . is not unknown
    (301) EXP -> EXP . as cadenaString
    (302) EXP -> EXP . cadenaString
    (303) EXP -> EXP . as id
    (304) EXP -> EXP . id
    (305) EXP -> EXP . as cadena
    (306) EXP -> EXP . cadena
    (310) EXP -> EXP . in para EXP parc
    (311) EXP -> EXP . not in para EXP parc
    (312) EXP -> EXP . not between EXP
    (313) EXP -> EXP . between symetric EXP
    (314) EXP -> EXP . not between symetric EXP
    (315) EXP -> EXP . is distinct r_from EXP
    (316) EXP -> EXP . is not distinct r_from EXP
    (317) EXP -> EXP . like cadena
    (318) EXP -> EXP . not like cadena

    ptcoma          reduce using rule 68 (ASIG -> dospuntos igual EXP .)
    mas             shift and go to state 122
    menos           shift and go to state 123
    multiplicacion  shift and go to state 124
    division        shift and go to state 125
    modulo          shift and go to state 126
    elevado         shift and go to state 127
    and             shift and go to state 128
    or              shift and go to state 129
    mayor           shift and go to state 130
    menor           shift and go to state 131
    mayor_igual     shift and go to state 132
    menor_igual     shift and go to state 133
    igual           shift and go to state 134
    diferente1      shift and go to state 135
    diferente2      shift and go to state 136
    between         shift and go to state 137
    is              shift and go to state 138
    isnull          shift and go to state 140
    notnull         shift and go to state 141
    as              shift and go to state 142
    cadenaString    shift and go to state 143
    id              shift and go to state 144
    cadena          shift and go to state 145
    in              shift and go to state 146
    not             shift and go to state 139
    like            shift and go to state 147


state 754

    (65) DECLARACIONES -> id constant TIPO not null . ASIG ptcoma
    (67) ASIG -> . default EXP
    (68) ASIG -> . dospuntos igual EXP
    (69) ASIG -> . igual EXP
    (70) ASIG -> .

    default         shift and go to state 617
    dospuntos       shift and go to state 618
    igual           shift and go to state 619
    ptcoma          reduce using rule 70 (ASIG -> .)

    ASIG                           shift and go to state 785

state 755

    (66) DECLARACIONES -> id constant TIPO ASIG ptcoma .

    id              reduce using rule 66 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    end             reduce using rule 66 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    else            reduce using rule 66 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    elsif           reduce using rule 66 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    declare         reduce using rule 66 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    if              reduce using rule 66 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    raise           reduce using rule 66 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    begin           reduce using rule 66 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    execute         reduce using rule 66 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    return          reduce using rule 66 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    insert          reduce using rule 66 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    select          reduce using rule 66 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    update          reduce using rule 66 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    delete          reduce using rule 66 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    when            reduce using rule 66 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    language        reduce using rule 66 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    as              reduce using rule 66 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    do              reduce using rule 66 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    use             reduce using rule 66 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    create          reduce using rule 66 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    alter           reduce using rule 66 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    drop            reduce using rule 66 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    case            reduce using rule 66 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    show            reduce using rule 66 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    $end            reduce using rule 66 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    dolarn          reduce using rule 66 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)


state 756

    (108) FORMAT -> format para EXP coma . LEXP parc
    (226) LEXP -> . LEXP coma EXP
    (227) LEXP -> . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 57
    LEXP                           shift and go to state 786
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 757

    (115) INSERT -> insert into id para LEXP parc values para LEXP . parc
    (226) LEXP -> LEXP . coma EXP

    parc            shift and go to state 787
    coma            shift and go to state 121


state 758

    (192) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER . LIMIT
    (195) LIMIT -> . limit int
    (196) LIMIT -> . limit all
    (197) LIMIT -> . offset int
    (198) LIMIT -> . limit int offset int
    (199) LIMIT -> . offset int limit int
    (200) LIMIT -> . limit all offset int
    (201) LIMIT -> . offset int limit all
    (202) LIMIT -> .

  ! shift/reduce conflict for limit resolved as shift
  ! shift/reduce conflict for offset resolved as shift
    limit           shift and go to state 628
    offset          shift and go to state 629
    ptcoma          reduce using rule 202 (LIMIT -> .)
    r_from          reduce using rule 202 (LIMIT -> .)
    coma            reduce using rule 202 (LIMIT -> .)
    where           reduce using rule 202 (LIMIT -> .)
    group           reduce using rule 202 (LIMIT -> .)
    having          reduce using rule 202 (LIMIT -> .)
    union           reduce using rule 202 (LIMIT -> .)
    intersect       reduce using rule 202 (LIMIT -> .)
    except          reduce using rule 202 (LIMIT -> .)
    order           reduce using rule 202 (LIMIT -> .)
    mas             reduce using rule 202 (LIMIT -> .)
    menos           reduce using rule 202 (LIMIT -> .)
    multiplicacion  reduce using rule 202 (LIMIT -> .)
    division        reduce using rule 202 (LIMIT -> .)
    modulo          reduce using rule 202 (LIMIT -> .)
    elevado         reduce using rule 202 (LIMIT -> .)
    and             reduce using rule 202 (LIMIT -> .)
    or              reduce using rule 202 (LIMIT -> .)
    mayor           reduce using rule 202 (LIMIT -> .)
    menor           reduce using rule 202 (LIMIT -> .)
    mayor_igual     reduce using rule 202 (LIMIT -> .)
    menor_igual     reduce using rule 202 (LIMIT -> .)
    igual           reduce using rule 202 (LIMIT -> .)
    diferente1      reduce using rule 202 (LIMIT -> .)
    diferente2      reduce using rule 202 (LIMIT -> .)
    between         reduce using rule 202 (LIMIT -> .)
    is              reduce using rule 202 (LIMIT -> .)
    isnull          reduce using rule 202 (LIMIT -> .)
    notnull         reduce using rule 202 (LIMIT -> .)
    as              reduce using rule 202 (LIMIT -> .)
    cadenaString    reduce using rule 202 (LIMIT -> .)
    id              reduce using rule 202 (LIMIT -> .)
    cadena          reduce using rule 202 (LIMIT -> .)
    in              reduce using rule 202 (LIMIT -> .)
    not             reduce using rule 202 (LIMIT -> .)
    like            reduce using rule 202 (LIMIT -> .)
    then            reduce using rule 202 (LIMIT -> .)
    when            reduce using rule 202 (LIMIT -> .)
    parc            reduce using rule 202 (LIMIT -> .)
    end             reduce using rule 202 (LIMIT -> .)
    else            reduce using rule 202 (LIMIT -> .)
    constraint      reduce using rule 202 (LIMIT -> .)
    unique          reduce using rule 202 (LIMIT -> .)
    check           reduce using rule 202 (LIMIT -> .)
    default         reduce using rule 202 (LIMIT -> .)
    null            reduce using rule 202 (LIMIT -> .)
    primary         reduce using rule 202 (LIMIT -> .)
    references      reduce using rule 202 (LIMIT -> .)
    asc             reduce using rule 202 (LIMIT -> .)
    desc            reduce using rule 202 (LIMIT -> .)

  ! limit           [ reduce using rule 202 (LIMIT -> .) ]
  ! offset          [ reduce using rule 202 (LIMIT -> .) ]

    LIMIT                          shift and go to state 788

state 759

    (193) SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .

    ptcoma          reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    r_from          reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    coma            reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    where           reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    group           reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    having          reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    union           reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    intersect       reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    except          reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    order           reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    limit           reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    offset          reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mas             reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menos           reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    multiplicacion  reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    division        reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    modulo          reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    elevado         reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    and             reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    or              reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor           reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor           reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor_igual     reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor_igual     reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    igual           reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente1      reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente2      reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    between         reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    is              reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    isnull          reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    notnull         reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    as              reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadenaString    reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    id              reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadena          reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    in              reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    not             reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    like            reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    then            reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    when            reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    parc            reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    end             reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    else            reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    constraint      reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    unique          reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    check           reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    default         reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    null            reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    primary         reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    references      reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    asc             reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    desc            reduce using rule 193 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)


state 760

    (198) LIMIT -> limit int offset . int

    int             shift and go to state 789


state 761

    (200) LIMIT -> limit all offset . int

    int             shift and go to state 790


state 762

    (199) LIMIT -> offset int limit . int
    (201) LIMIT -> offset int limit . all

    int             shift and go to state 791
    all             shift and go to state 792


state 763

    (215) ORDER -> order by LEXP ORD .

    r_from          reduce using rule 215 (ORDER -> order by LEXP ORD .)
    coma            reduce using rule 215 (ORDER -> order by LEXP ORD .)
    where           reduce using rule 215 (ORDER -> order by LEXP ORD .)
    group           reduce using rule 215 (ORDER -> order by LEXP ORD .)
    having          reduce using rule 215 (ORDER -> order by LEXP ORD .)
    union           reduce using rule 215 (ORDER -> order by LEXP ORD .)
    intersect       reduce using rule 215 (ORDER -> order by LEXP ORD .)
    except          reduce using rule 215 (ORDER -> order by LEXP ORD .)
    order           reduce using rule 215 (ORDER -> order by LEXP ORD .)
    limit           reduce using rule 215 (ORDER -> order by LEXP ORD .)
    offset          reduce using rule 215 (ORDER -> order by LEXP ORD .)
    ptcoma          reduce using rule 215 (ORDER -> order by LEXP ORD .)
    mas             reduce using rule 215 (ORDER -> order by LEXP ORD .)
    menos           reduce using rule 215 (ORDER -> order by LEXP ORD .)
    multiplicacion  reduce using rule 215 (ORDER -> order by LEXP ORD .)
    division        reduce using rule 215 (ORDER -> order by LEXP ORD .)
    modulo          reduce using rule 215 (ORDER -> order by LEXP ORD .)
    elevado         reduce using rule 215 (ORDER -> order by LEXP ORD .)
    and             reduce using rule 215 (ORDER -> order by LEXP ORD .)
    or              reduce using rule 215 (ORDER -> order by LEXP ORD .)
    mayor           reduce using rule 215 (ORDER -> order by LEXP ORD .)
    menor           reduce using rule 215 (ORDER -> order by LEXP ORD .)
    mayor_igual     reduce using rule 215 (ORDER -> order by LEXP ORD .)
    menor_igual     reduce using rule 215 (ORDER -> order by LEXP ORD .)
    igual           reduce using rule 215 (ORDER -> order by LEXP ORD .)
    diferente1      reduce using rule 215 (ORDER -> order by LEXP ORD .)
    diferente2      reduce using rule 215 (ORDER -> order by LEXP ORD .)
    between         reduce using rule 215 (ORDER -> order by LEXP ORD .)
    is              reduce using rule 215 (ORDER -> order by LEXP ORD .)
    isnull          reduce using rule 215 (ORDER -> order by LEXP ORD .)
    notnull         reduce using rule 215 (ORDER -> order by LEXP ORD .)
    as              reduce using rule 215 (ORDER -> order by LEXP ORD .)
    cadenaString    reduce using rule 215 (ORDER -> order by LEXP ORD .)
    id              reduce using rule 215 (ORDER -> order by LEXP ORD .)
    cadena          reduce using rule 215 (ORDER -> order by LEXP ORD .)
    in              reduce using rule 215 (ORDER -> order by LEXP ORD .)
    not             reduce using rule 215 (ORDER -> order by LEXP ORD .)
    like            reduce using rule 215 (ORDER -> order by LEXP ORD .)
    then            reduce using rule 215 (ORDER -> order by LEXP ORD .)
    when            reduce using rule 215 (ORDER -> order by LEXP ORD .)
    parc            reduce using rule 215 (ORDER -> order by LEXP ORD .)
    end             reduce using rule 215 (ORDER -> order by LEXP ORD .)
    else            reduce using rule 215 (ORDER -> order by LEXP ORD .)
    constraint      reduce using rule 215 (ORDER -> order by LEXP ORD .)
    unique          reduce using rule 215 (ORDER -> order by LEXP ORD .)
    check           reduce using rule 215 (ORDER -> order by LEXP ORD .)
    default         reduce using rule 215 (ORDER -> order by LEXP ORD .)
    null            reduce using rule 215 (ORDER -> order by LEXP ORD .)
    primary         reduce using rule 215 (ORDER -> order by LEXP ORD .)
    references      reduce using rule 215 (ORDER -> order by LEXP ORD .)
    asc             reduce using rule 215 (ORDER -> order by LEXP ORD .)
    desc            reduce using rule 215 (ORDER -> order by LEXP ORD .)


state 764

    (218) ORD -> asc .

    r_from          reduce using rule 218 (ORD -> asc .)
    coma            reduce using rule 218 (ORD -> asc .)
    where           reduce using rule 218 (ORD -> asc .)
    group           reduce using rule 218 (ORD -> asc .)
    having          reduce using rule 218 (ORD -> asc .)
    union           reduce using rule 218 (ORD -> asc .)
    intersect       reduce using rule 218 (ORD -> asc .)
    except          reduce using rule 218 (ORD -> asc .)
    order           reduce using rule 218 (ORD -> asc .)
    limit           reduce using rule 218 (ORD -> asc .)
    offset          reduce using rule 218 (ORD -> asc .)
    ptcoma          reduce using rule 218 (ORD -> asc .)
    mas             reduce using rule 218 (ORD -> asc .)
    menos           reduce using rule 218 (ORD -> asc .)
    multiplicacion  reduce using rule 218 (ORD -> asc .)
    division        reduce using rule 218 (ORD -> asc .)
    modulo          reduce using rule 218 (ORD -> asc .)
    elevado         reduce using rule 218 (ORD -> asc .)
    and             reduce using rule 218 (ORD -> asc .)
    or              reduce using rule 218 (ORD -> asc .)
    mayor           reduce using rule 218 (ORD -> asc .)
    menor           reduce using rule 218 (ORD -> asc .)
    mayor_igual     reduce using rule 218 (ORD -> asc .)
    menor_igual     reduce using rule 218 (ORD -> asc .)
    igual           reduce using rule 218 (ORD -> asc .)
    diferente1      reduce using rule 218 (ORD -> asc .)
    diferente2      reduce using rule 218 (ORD -> asc .)
    between         reduce using rule 218 (ORD -> asc .)
    is              reduce using rule 218 (ORD -> asc .)
    isnull          reduce using rule 218 (ORD -> asc .)
    notnull         reduce using rule 218 (ORD -> asc .)
    as              reduce using rule 218 (ORD -> asc .)
    cadenaString    reduce using rule 218 (ORD -> asc .)
    id              reduce using rule 218 (ORD -> asc .)
    cadena          reduce using rule 218 (ORD -> asc .)
    in              reduce using rule 218 (ORD -> asc .)
    not             reduce using rule 218 (ORD -> asc .)
    like            reduce using rule 218 (ORD -> asc .)
    then            reduce using rule 218 (ORD -> asc .)
    when            reduce using rule 218 (ORD -> asc .)
    parc            reduce using rule 218 (ORD -> asc .)
    end             reduce using rule 218 (ORD -> asc .)
    else            reduce using rule 218 (ORD -> asc .)
    constraint      reduce using rule 218 (ORD -> asc .)
    unique          reduce using rule 218 (ORD -> asc .)
    check           reduce using rule 218 (ORD -> asc .)
    default         reduce using rule 218 (ORD -> asc .)
    null            reduce using rule 218 (ORD -> asc .)
    primary         reduce using rule 218 (ORD -> asc .)
    references      reduce using rule 218 (ORD -> asc .)
    asc             reduce using rule 218 (ORD -> asc .)
    desc            reduce using rule 218 (ORD -> asc .)


state 765

    (219) ORD -> desc .

    r_from          reduce using rule 219 (ORD -> desc .)
    coma            reduce using rule 219 (ORD -> desc .)
    where           reduce using rule 219 (ORD -> desc .)
    group           reduce using rule 219 (ORD -> desc .)
    having          reduce using rule 219 (ORD -> desc .)
    union           reduce using rule 219 (ORD -> desc .)
    intersect       reduce using rule 219 (ORD -> desc .)
    except          reduce using rule 219 (ORD -> desc .)
    order           reduce using rule 219 (ORD -> desc .)
    limit           reduce using rule 219 (ORD -> desc .)
    offset          reduce using rule 219 (ORD -> desc .)
    ptcoma          reduce using rule 219 (ORD -> desc .)
    mas             reduce using rule 219 (ORD -> desc .)
    menos           reduce using rule 219 (ORD -> desc .)
    multiplicacion  reduce using rule 219 (ORD -> desc .)
    division        reduce using rule 219 (ORD -> desc .)
    modulo          reduce using rule 219 (ORD -> desc .)
    elevado         reduce using rule 219 (ORD -> desc .)
    and             reduce using rule 219 (ORD -> desc .)
    or              reduce using rule 219 (ORD -> desc .)
    mayor           reduce using rule 219 (ORD -> desc .)
    menor           reduce using rule 219 (ORD -> desc .)
    mayor_igual     reduce using rule 219 (ORD -> desc .)
    menor_igual     reduce using rule 219 (ORD -> desc .)
    igual           reduce using rule 219 (ORD -> desc .)
    diferente1      reduce using rule 219 (ORD -> desc .)
    diferente2      reduce using rule 219 (ORD -> desc .)
    between         reduce using rule 219 (ORD -> desc .)
    is              reduce using rule 219 (ORD -> desc .)
    isnull          reduce using rule 219 (ORD -> desc .)
    notnull         reduce using rule 219 (ORD -> desc .)
    as              reduce using rule 219 (ORD -> desc .)
    cadenaString    reduce using rule 219 (ORD -> desc .)
    id              reduce using rule 219 (ORD -> desc .)
    cadena          reduce using rule 219 (ORD -> desc .)
    in              reduce using rule 219 (ORD -> desc .)
    not             reduce using rule 219 (ORD -> desc .)
    like            reduce using rule 219 (ORD -> desc .)
    then            reduce using rule 219 (ORD -> desc .)
    when            reduce using rule 219 (ORD -> desc .)
    parc            reduce using rule 219 (ORD -> desc .)
    end             reduce using rule 219 (ORD -> desc .)
    else            reduce using rule 219 (ORD -> desc .)
    constraint      reduce using rule 219 (ORD -> desc .)
    unique          reduce using rule 219 (ORD -> desc .)
    check           reduce using rule 219 (ORD -> desc .)
    default         reduce using rule 219 (ORD -> desc .)
    null            reduce using rule 219 (ORD -> desc .)
    primary         reduce using rule 219 (ORD -> desc .)
    references      reduce using rule 219 (ORD -> desc .)
    asc             reduce using rule 219 (ORD -> desc .)
    desc            reduce using rule 219 (ORD -> desc .)


state 766

    (244) TIPO -> timestamp para int parc without time zone .

    r_from          reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    coma            reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    where           reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    group           reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    having          reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    union           reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    intersect       reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    except          reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    order           reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    limit           reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    offset          reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    ptcoma          reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    mas             reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    menos           reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    multiplicacion  reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    division        reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    modulo          reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    elevado         reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    and             reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    or              reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    mayor           reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    menor           reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    mayor_igual     reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    menor_igual     reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    igual           reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    diferente1      reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    diferente2      reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    between         reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    is              reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    isnull          reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    notnull         reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    as              reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    cadenaString    reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    id              reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    cadena          reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    in              reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    not             reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    like            reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    then            reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    when            reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    parc            reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    end             reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    else            reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    constraint      reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    unique          reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    check           reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    default         reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    null            reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    primary         reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    references      reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    asc             reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    desc            reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    dospuntos       reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    language        reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    do              reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    declare         reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    if              reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    raise           reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    begin           reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    execute         reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    return          reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    insert          reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    select          reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    update          reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)
    delete          reduce using rule 244 (TIPO -> timestamp para int parc without time zone .)


state 767

    (245) TIPO -> timestamp para int parc with time zone .

    r_from          reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    coma            reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    where           reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    group           reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    having          reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    union           reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    intersect       reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    except          reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    order           reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    limit           reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    offset          reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    ptcoma          reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    mas             reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    menos           reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    multiplicacion  reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    division        reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    modulo          reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    elevado         reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    and             reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    or              reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    mayor           reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    menor           reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    mayor_igual     reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    menor_igual     reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    igual           reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    diferente1      reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    diferente2      reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    between         reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    is              reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    isnull          reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    notnull         reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    as              reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    cadenaString    reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    id              reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    cadena          reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    in              reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    not             reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    like            reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    then            reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    when            reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    parc            reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    end             reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    else            reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    constraint      reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    unique          reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    check           reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    default         reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    null            reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    primary         reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    references      reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    asc             reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    desc            reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    dospuntos       reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    language        reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    do              reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    declare         reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    if              reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    raise           reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    begin           reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    execute         reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    return          reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    insert          reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    select          reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    update          reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)
    delete          reduce using rule 245 (TIPO -> timestamp para int parc with time zone .)


state 768

    (246) TIPO -> time para int parc without time zone .

    r_from          reduce using rule 246 (TIPO -> time para int parc without time zone .)
    coma            reduce using rule 246 (TIPO -> time para int parc without time zone .)
    where           reduce using rule 246 (TIPO -> time para int parc without time zone .)
    group           reduce using rule 246 (TIPO -> time para int parc without time zone .)
    having          reduce using rule 246 (TIPO -> time para int parc without time zone .)
    union           reduce using rule 246 (TIPO -> time para int parc without time zone .)
    intersect       reduce using rule 246 (TIPO -> time para int parc without time zone .)
    except          reduce using rule 246 (TIPO -> time para int parc without time zone .)
    order           reduce using rule 246 (TIPO -> time para int parc without time zone .)
    limit           reduce using rule 246 (TIPO -> time para int parc without time zone .)
    offset          reduce using rule 246 (TIPO -> time para int parc without time zone .)
    ptcoma          reduce using rule 246 (TIPO -> time para int parc without time zone .)
    mas             reduce using rule 246 (TIPO -> time para int parc without time zone .)
    menos           reduce using rule 246 (TIPO -> time para int parc without time zone .)
    multiplicacion  reduce using rule 246 (TIPO -> time para int parc without time zone .)
    division        reduce using rule 246 (TIPO -> time para int parc without time zone .)
    modulo          reduce using rule 246 (TIPO -> time para int parc without time zone .)
    elevado         reduce using rule 246 (TIPO -> time para int parc without time zone .)
    and             reduce using rule 246 (TIPO -> time para int parc without time zone .)
    or              reduce using rule 246 (TIPO -> time para int parc without time zone .)
    mayor           reduce using rule 246 (TIPO -> time para int parc without time zone .)
    menor           reduce using rule 246 (TIPO -> time para int parc without time zone .)
    mayor_igual     reduce using rule 246 (TIPO -> time para int parc without time zone .)
    menor_igual     reduce using rule 246 (TIPO -> time para int parc without time zone .)
    igual           reduce using rule 246 (TIPO -> time para int parc without time zone .)
    diferente1      reduce using rule 246 (TIPO -> time para int parc without time zone .)
    diferente2      reduce using rule 246 (TIPO -> time para int parc without time zone .)
    between         reduce using rule 246 (TIPO -> time para int parc without time zone .)
    is              reduce using rule 246 (TIPO -> time para int parc without time zone .)
    isnull          reduce using rule 246 (TIPO -> time para int parc without time zone .)
    notnull         reduce using rule 246 (TIPO -> time para int parc without time zone .)
    as              reduce using rule 246 (TIPO -> time para int parc without time zone .)
    cadenaString    reduce using rule 246 (TIPO -> time para int parc without time zone .)
    id              reduce using rule 246 (TIPO -> time para int parc without time zone .)
    cadena          reduce using rule 246 (TIPO -> time para int parc without time zone .)
    in              reduce using rule 246 (TIPO -> time para int parc without time zone .)
    not             reduce using rule 246 (TIPO -> time para int parc without time zone .)
    like            reduce using rule 246 (TIPO -> time para int parc without time zone .)
    then            reduce using rule 246 (TIPO -> time para int parc without time zone .)
    when            reduce using rule 246 (TIPO -> time para int parc without time zone .)
    parc            reduce using rule 246 (TIPO -> time para int parc without time zone .)
    end             reduce using rule 246 (TIPO -> time para int parc without time zone .)
    else            reduce using rule 246 (TIPO -> time para int parc without time zone .)
    constraint      reduce using rule 246 (TIPO -> time para int parc without time zone .)
    unique          reduce using rule 246 (TIPO -> time para int parc without time zone .)
    check           reduce using rule 246 (TIPO -> time para int parc without time zone .)
    default         reduce using rule 246 (TIPO -> time para int parc without time zone .)
    null            reduce using rule 246 (TIPO -> time para int parc without time zone .)
    primary         reduce using rule 246 (TIPO -> time para int parc without time zone .)
    references      reduce using rule 246 (TIPO -> time para int parc without time zone .)
    asc             reduce using rule 246 (TIPO -> time para int parc without time zone .)
    desc            reduce using rule 246 (TIPO -> time para int parc without time zone .)
    dospuntos       reduce using rule 246 (TIPO -> time para int parc without time zone .)
    language        reduce using rule 246 (TIPO -> time para int parc without time zone .)
    do              reduce using rule 246 (TIPO -> time para int parc without time zone .)
    declare         reduce using rule 246 (TIPO -> time para int parc without time zone .)
    if              reduce using rule 246 (TIPO -> time para int parc without time zone .)
    raise           reduce using rule 246 (TIPO -> time para int parc without time zone .)
    begin           reduce using rule 246 (TIPO -> time para int parc without time zone .)
    execute         reduce using rule 246 (TIPO -> time para int parc without time zone .)
    return          reduce using rule 246 (TIPO -> time para int parc without time zone .)
    insert          reduce using rule 246 (TIPO -> time para int parc without time zone .)
    select          reduce using rule 246 (TIPO -> time para int parc without time zone .)
    update          reduce using rule 246 (TIPO -> time para int parc without time zone .)
    delete          reduce using rule 246 (TIPO -> time para int parc without time zone .)


state 769

    (247) TIPO -> time para int parc with time zone .

    r_from          reduce using rule 247 (TIPO -> time para int parc with time zone .)
    coma            reduce using rule 247 (TIPO -> time para int parc with time zone .)
    where           reduce using rule 247 (TIPO -> time para int parc with time zone .)
    group           reduce using rule 247 (TIPO -> time para int parc with time zone .)
    having          reduce using rule 247 (TIPO -> time para int parc with time zone .)
    union           reduce using rule 247 (TIPO -> time para int parc with time zone .)
    intersect       reduce using rule 247 (TIPO -> time para int parc with time zone .)
    except          reduce using rule 247 (TIPO -> time para int parc with time zone .)
    order           reduce using rule 247 (TIPO -> time para int parc with time zone .)
    limit           reduce using rule 247 (TIPO -> time para int parc with time zone .)
    offset          reduce using rule 247 (TIPO -> time para int parc with time zone .)
    ptcoma          reduce using rule 247 (TIPO -> time para int parc with time zone .)
    mas             reduce using rule 247 (TIPO -> time para int parc with time zone .)
    menos           reduce using rule 247 (TIPO -> time para int parc with time zone .)
    multiplicacion  reduce using rule 247 (TIPO -> time para int parc with time zone .)
    division        reduce using rule 247 (TIPO -> time para int parc with time zone .)
    modulo          reduce using rule 247 (TIPO -> time para int parc with time zone .)
    elevado         reduce using rule 247 (TIPO -> time para int parc with time zone .)
    and             reduce using rule 247 (TIPO -> time para int parc with time zone .)
    or              reduce using rule 247 (TIPO -> time para int parc with time zone .)
    mayor           reduce using rule 247 (TIPO -> time para int parc with time zone .)
    menor           reduce using rule 247 (TIPO -> time para int parc with time zone .)
    mayor_igual     reduce using rule 247 (TIPO -> time para int parc with time zone .)
    menor_igual     reduce using rule 247 (TIPO -> time para int parc with time zone .)
    igual           reduce using rule 247 (TIPO -> time para int parc with time zone .)
    diferente1      reduce using rule 247 (TIPO -> time para int parc with time zone .)
    diferente2      reduce using rule 247 (TIPO -> time para int parc with time zone .)
    between         reduce using rule 247 (TIPO -> time para int parc with time zone .)
    is              reduce using rule 247 (TIPO -> time para int parc with time zone .)
    isnull          reduce using rule 247 (TIPO -> time para int parc with time zone .)
    notnull         reduce using rule 247 (TIPO -> time para int parc with time zone .)
    as              reduce using rule 247 (TIPO -> time para int parc with time zone .)
    cadenaString    reduce using rule 247 (TIPO -> time para int parc with time zone .)
    id              reduce using rule 247 (TIPO -> time para int parc with time zone .)
    cadena          reduce using rule 247 (TIPO -> time para int parc with time zone .)
    in              reduce using rule 247 (TIPO -> time para int parc with time zone .)
    not             reduce using rule 247 (TIPO -> time para int parc with time zone .)
    like            reduce using rule 247 (TIPO -> time para int parc with time zone .)
    then            reduce using rule 247 (TIPO -> time para int parc with time zone .)
    when            reduce using rule 247 (TIPO -> time para int parc with time zone .)
    parc            reduce using rule 247 (TIPO -> time para int parc with time zone .)
    end             reduce using rule 247 (TIPO -> time para int parc with time zone .)
    else            reduce using rule 247 (TIPO -> time para int parc with time zone .)
    constraint      reduce using rule 247 (TIPO -> time para int parc with time zone .)
    unique          reduce using rule 247 (TIPO -> time para int parc with time zone .)
    check           reduce using rule 247 (TIPO -> time para int parc with time zone .)
    default         reduce using rule 247 (TIPO -> time para int parc with time zone .)
    null            reduce using rule 247 (TIPO -> time para int parc with time zone .)
    primary         reduce using rule 247 (TIPO -> time para int parc with time zone .)
    references      reduce using rule 247 (TIPO -> time para int parc with time zone .)
    asc             reduce using rule 247 (TIPO -> time para int parc with time zone .)
    desc            reduce using rule 247 (TIPO -> time para int parc with time zone .)
    dospuntos       reduce using rule 247 (TIPO -> time para int parc with time zone .)
    language        reduce using rule 247 (TIPO -> time para int parc with time zone .)
    do              reduce using rule 247 (TIPO -> time para int parc with time zone .)
    declare         reduce using rule 247 (TIPO -> time para int parc with time zone .)
    if              reduce using rule 247 (TIPO -> time para int parc with time zone .)
    raise           reduce using rule 247 (TIPO -> time para int parc with time zone .)
    begin           reduce using rule 247 (TIPO -> time para int parc with time zone .)
    execute         reduce using rule 247 (TIPO -> time para int parc with time zone .)
    return          reduce using rule 247 (TIPO -> time para int parc with time zone .)
    insert          reduce using rule 247 (TIPO -> time para int parc with time zone .)
    select          reduce using rule 247 (TIPO -> time para int parc with time zone .)
    update          reduce using rule 247 (TIPO -> time para int parc with time zone .)
    delete          reduce using rule 247 (TIPO -> time para int parc with time zone .)


state 770

    (172) OPCOLUMN -> constraint id check para . CONDCHECK parc
    (183) CONDCHECK -> . EXP mayor EXP
    (184) CONDCHECK -> . EXP menor EXP
    (185) CONDCHECK -> . EXP mayor_igual EXP
    (186) CONDCHECK -> . EXP menor_igual EXP
    (187) CONDCHECK -> . EXP igual EXP
    (188) CONDCHECK -> . EXP diferente1 EXP
    (189) CONDCHECK -> . EXP diferente2 EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    CONDCHECK                      shift and go to state 793
    EXP                            shift and go to state 577
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 771

    (173) OPCOLUMN -> check para CONDCHECK parc .

    constraint      reduce using rule 173 (OPCOLUMN -> check para CONDCHECK parc .)
    unique          reduce using rule 173 (OPCOLUMN -> check para CONDCHECK parc .)
    check           reduce using rule 173 (OPCOLUMN -> check para CONDCHECK parc .)
    default         reduce using rule 173 (OPCOLUMN -> check para CONDCHECK parc .)
    not             reduce using rule 173 (OPCOLUMN -> check para CONDCHECK parc .)
    null            reduce using rule 173 (OPCOLUMN -> check para CONDCHECK parc .)
    primary         reduce using rule 173 (OPCOLUMN -> check para CONDCHECK parc .)
    references      reduce using rule 173 (OPCOLUMN -> check para CONDCHECK parc .)
    parc            reduce using rule 173 (OPCOLUMN -> check para CONDCHECK parc .)
    coma            reduce using rule 173 (OPCOLUMN -> check para CONDCHECK parc .)


state 772

    (190) HERENCIA -> inherits para id parc .

    ptcoma          reduce using rule 190 (HERENCIA -> inherits para id parc .)


state 773

    (180) OPCONST -> foreign key para LEXP parc references . id para LEXP parc

    id              shift and go to state 794


state 774

    (51) CREATEINDEX -> create index id on id para id id ORDEN parc .

    ptcoma          reduce using rule 51 (CREATEINDEX -> create index id on id para id id ORDEN parc .)
    where           reduce using rule 51 (CREATEINDEX -> create index id on id para id id ORDEN parc .)


state 775

    (57) ORDEN -> asc nulls first .

    parc            reduce using rule 57 (ORDEN -> asc nulls first .)


state 776

    (60) ORDEN -> asc nulls last .

    parc            reduce using rule 60 (ORDEN -> asc nulls last .)


state 777

    (58) ORDEN -> desc nulls last .

    parc            reduce using rule 58 (ORDEN -> desc nulls last .)


state 778

    (59) ORDEN -> desc nulls first .

    parc            reduce using rule 59 (ORDEN -> desc nulls first .)


state 779

    (49) CREATEINDEX -> create index id on id using hash para LEXP parc .

    ptcoma          reduce using rule 49 (CREATEINDEX -> create index id on id using hash para LEXP parc .)
    where           reduce using rule 49 (CREATEINDEX -> create index id on id using hash para LEXP parc .)


state 780

    (128) OP -> add constraint id check para CONDCHECK parc .

    coma            reduce using rule 128 (OP -> add constraint id check para CONDCHECK parc .)
    ptcoma          reduce using rule 128 (OP -> add constraint id check para CONDCHECK parc .)


state 781

    (129) OP -> add constraint id unique para LEXP parc .

    coma            reduce using rule 129 (OP -> add constraint id unique para LEXP parc .)
    ptcoma          reduce using rule 129 (OP -> add constraint id unique para LEXP parc .)


state 782

    (132) OP -> add constraint id foreign key para LEXP . parc references id para LEXP parc
    (226) LEXP -> LEXP . coma EXP

    parc            shift and go to state 795
    coma            shift and go to state 121


state 783

    (131) OP -> add foreign key para LEXP parc references . id para LEXP parc

    id              shift and go to state 796


state 784

    (63) DECLARACIONES -> id TIPO not null ASIG ptcoma .

    id              reduce using rule 63 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    end             reduce using rule 63 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    else            reduce using rule 63 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    elsif           reduce using rule 63 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    declare         reduce using rule 63 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    if              reduce using rule 63 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    raise           reduce using rule 63 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    begin           reduce using rule 63 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    execute         reduce using rule 63 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    return          reduce using rule 63 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    insert          reduce using rule 63 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    select          reduce using rule 63 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    update          reduce using rule 63 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    delete          reduce using rule 63 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    when            reduce using rule 63 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    language        reduce using rule 63 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    as              reduce using rule 63 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    do              reduce using rule 63 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    use             reduce using rule 63 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    create          reduce using rule 63 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    alter           reduce using rule 63 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    drop            reduce using rule 63 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    case            reduce using rule 63 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    show            reduce using rule 63 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    $end            reduce using rule 63 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    dolarn          reduce using rule 63 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)


state 785

    (65) DECLARACIONES -> id constant TIPO not null ASIG . ptcoma

    ptcoma          shift and go to state 797


state 786

    (108) FORMAT -> format para EXP coma LEXP . parc
    (226) LEXP -> LEXP . coma EXP

    parc            shift and go to state 798
    coma            shift and go to state 121


state 787

    (115) INSERT -> insert into id para LEXP parc values para LEXP parc .

    ptcoma          reduce using rule 115 (INSERT -> insert into id para LEXP parc values para LEXP parc .)


state 788

    (192) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .

    ptcoma          reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    r_from          reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    coma            reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    where           reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    group           reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    having          reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    union           reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    intersect       reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    except          reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    order           reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    limit           reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    offset          reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mas             reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menos           reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    multiplicacion  reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    division        reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    modulo          reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    elevado         reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    and             reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    or              reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor           reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor           reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor_igual     reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor_igual     reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    igual           reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente1      reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente2      reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    between         reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    is              reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    isnull          reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    notnull         reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    as              reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadenaString    reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    id              reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadena          reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    in              reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    not             reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    like            reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    then            reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    when            reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    parc            reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    end             reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    else            reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    constraint      reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    unique          reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    check           reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    default         reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    null            reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    primary         reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    references      reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    asc             reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    desc            reduce using rule 192 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)


state 789

    (198) LIMIT -> limit int offset int .

    ptcoma          reduce using rule 198 (LIMIT -> limit int offset int .)
    r_from          reduce using rule 198 (LIMIT -> limit int offset int .)
    coma            reduce using rule 198 (LIMIT -> limit int offset int .)
    where           reduce using rule 198 (LIMIT -> limit int offset int .)
    group           reduce using rule 198 (LIMIT -> limit int offset int .)
    having          reduce using rule 198 (LIMIT -> limit int offset int .)
    union           reduce using rule 198 (LIMIT -> limit int offset int .)
    intersect       reduce using rule 198 (LIMIT -> limit int offset int .)
    except          reduce using rule 198 (LIMIT -> limit int offset int .)
    order           reduce using rule 198 (LIMIT -> limit int offset int .)
    limit           reduce using rule 198 (LIMIT -> limit int offset int .)
    offset          reduce using rule 198 (LIMIT -> limit int offset int .)
    mas             reduce using rule 198 (LIMIT -> limit int offset int .)
    menos           reduce using rule 198 (LIMIT -> limit int offset int .)
    multiplicacion  reduce using rule 198 (LIMIT -> limit int offset int .)
    division        reduce using rule 198 (LIMIT -> limit int offset int .)
    modulo          reduce using rule 198 (LIMIT -> limit int offset int .)
    elevado         reduce using rule 198 (LIMIT -> limit int offset int .)
    and             reduce using rule 198 (LIMIT -> limit int offset int .)
    or              reduce using rule 198 (LIMIT -> limit int offset int .)
    mayor           reduce using rule 198 (LIMIT -> limit int offset int .)
    menor           reduce using rule 198 (LIMIT -> limit int offset int .)
    mayor_igual     reduce using rule 198 (LIMIT -> limit int offset int .)
    menor_igual     reduce using rule 198 (LIMIT -> limit int offset int .)
    igual           reduce using rule 198 (LIMIT -> limit int offset int .)
    diferente1      reduce using rule 198 (LIMIT -> limit int offset int .)
    diferente2      reduce using rule 198 (LIMIT -> limit int offset int .)
    between         reduce using rule 198 (LIMIT -> limit int offset int .)
    is              reduce using rule 198 (LIMIT -> limit int offset int .)
    isnull          reduce using rule 198 (LIMIT -> limit int offset int .)
    notnull         reduce using rule 198 (LIMIT -> limit int offset int .)
    as              reduce using rule 198 (LIMIT -> limit int offset int .)
    cadenaString    reduce using rule 198 (LIMIT -> limit int offset int .)
    id              reduce using rule 198 (LIMIT -> limit int offset int .)
    cadena          reduce using rule 198 (LIMIT -> limit int offset int .)
    in              reduce using rule 198 (LIMIT -> limit int offset int .)
    not             reduce using rule 198 (LIMIT -> limit int offset int .)
    like            reduce using rule 198 (LIMIT -> limit int offset int .)
    then            reduce using rule 198 (LIMIT -> limit int offset int .)
    when            reduce using rule 198 (LIMIT -> limit int offset int .)
    parc            reduce using rule 198 (LIMIT -> limit int offset int .)
    end             reduce using rule 198 (LIMIT -> limit int offset int .)
    else            reduce using rule 198 (LIMIT -> limit int offset int .)
    constraint      reduce using rule 198 (LIMIT -> limit int offset int .)
    unique          reduce using rule 198 (LIMIT -> limit int offset int .)
    check           reduce using rule 198 (LIMIT -> limit int offset int .)
    default         reduce using rule 198 (LIMIT -> limit int offset int .)
    null            reduce using rule 198 (LIMIT -> limit int offset int .)
    primary         reduce using rule 198 (LIMIT -> limit int offset int .)
    references      reduce using rule 198 (LIMIT -> limit int offset int .)
    asc             reduce using rule 198 (LIMIT -> limit int offset int .)
    desc            reduce using rule 198 (LIMIT -> limit int offset int .)


state 790

    (200) LIMIT -> limit all offset int .

    ptcoma          reduce using rule 200 (LIMIT -> limit all offset int .)
    r_from          reduce using rule 200 (LIMIT -> limit all offset int .)
    coma            reduce using rule 200 (LIMIT -> limit all offset int .)
    where           reduce using rule 200 (LIMIT -> limit all offset int .)
    group           reduce using rule 200 (LIMIT -> limit all offset int .)
    having          reduce using rule 200 (LIMIT -> limit all offset int .)
    union           reduce using rule 200 (LIMIT -> limit all offset int .)
    intersect       reduce using rule 200 (LIMIT -> limit all offset int .)
    except          reduce using rule 200 (LIMIT -> limit all offset int .)
    order           reduce using rule 200 (LIMIT -> limit all offset int .)
    limit           reduce using rule 200 (LIMIT -> limit all offset int .)
    offset          reduce using rule 200 (LIMIT -> limit all offset int .)
    mas             reduce using rule 200 (LIMIT -> limit all offset int .)
    menos           reduce using rule 200 (LIMIT -> limit all offset int .)
    multiplicacion  reduce using rule 200 (LIMIT -> limit all offset int .)
    division        reduce using rule 200 (LIMIT -> limit all offset int .)
    modulo          reduce using rule 200 (LIMIT -> limit all offset int .)
    elevado         reduce using rule 200 (LIMIT -> limit all offset int .)
    and             reduce using rule 200 (LIMIT -> limit all offset int .)
    or              reduce using rule 200 (LIMIT -> limit all offset int .)
    mayor           reduce using rule 200 (LIMIT -> limit all offset int .)
    menor           reduce using rule 200 (LIMIT -> limit all offset int .)
    mayor_igual     reduce using rule 200 (LIMIT -> limit all offset int .)
    menor_igual     reduce using rule 200 (LIMIT -> limit all offset int .)
    igual           reduce using rule 200 (LIMIT -> limit all offset int .)
    diferente1      reduce using rule 200 (LIMIT -> limit all offset int .)
    diferente2      reduce using rule 200 (LIMIT -> limit all offset int .)
    between         reduce using rule 200 (LIMIT -> limit all offset int .)
    is              reduce using rule 200 (LIMIT -> limit all offset int .)
    isnull          reduce using rule 200 (LIMIT -> limit all offset int .)
    notnull         reduce using rule 200 (LIMIT -> limit all offset int .)
    as              reduce using rule 200 (LIMIT -> limit all offset int .)
    cadenaString    reduce using rule 200 (LIMIT -> limit all offset int .)
    id              reduce using rule 200 (LIMIT -> limit all offset int .)
    cadena          reduce using rule 200 (LIMIT -> limit all offset int .)
    in              reduce using rule 200 (LIMIT -> limit all offset int .)
    not             reduce using rule 200 (LIMIT -> limit all offset int .)
    like            reduce using rule 200 (LIMIT -> limit all offset int .)
    then            reduce using rule 200 (LIMIT -> limit all offset int .)
    when            reduce using rule 200 (LIMIT -> limit all offset int .)
    parc            reduce using rule 200 (LIMIT -> limit all offset int .)
    end             reduce using rule 200 (LIMIT -> limit all offset int .)
    else            reduce using rule 200 (LIMIT -> limit all offset int .)
    constraint      reduce using rule 200 (LIMIT -> limit all offset int .)
    unique          reduce using rule 200 (LIMIT -> limit all offset int .)
    check           reduce using rule 200 (LIMIT -> limit all offset int .)
    default         reduce using rule 200 (LIMIT -> limit all offset int .)
    null            reduce using rule 200 (LIMIT -> limit all offset int .)
    primary         reduce using rule 200 (LIMIT -> limit all offset int .)
    references      reduce using rule 200 (LIMIT -> limit all offset int .)
    asc             reduce using rule 200 (LIMIT -> limit all offset int .)
    desc            reduce using rule 200 (LIMIT -> limit all offset int .)


state 791

    (199) LIMIT -> offset int limit int .

    ptcoma          reduce using rule 199 (LIMIT -> offset int limit int .)
    r_from          reduce using rule 199 (LIMIT -> offset int limit int .)
    coma            reduce using rule 199 (LIMIT -> offset int limit int .)
    where           reduce using rule 199 (LIMIT -> offset int limit int .)
    group           reduce using rule 199 (LIMIT -> offset int limit int .)
    having          reduce using rule 199 (LIMIT -> offset int limit int .)
    union           reduce using rule 199 (LIMIT -> offset int limit int .)
    intersect       reduce using rule 199 (LIMIT -> offset int limit int .)
    except          reduce using rule 199 (LIMIT -> offset int limit int .)
    order           reduce using rule 199 (LIMIT -> offset int limit int .)
    limit           reduce using rule 199 (LIMIT -> offset int limit int .)
    offset          reduce using rule 199 (LIMIT -> offset int limit int .)
    mas             reduce using rule 199 (LIMIT -> offset int limit int .)
    menos           reduce using rule 199 (LIMIT -> offset int limit int .)
    multiplicacion  reduce using rule 199 (LIMIT -> offset int limit int .)
    division        reduce using rule 199 (LIMIT -> offset int limit int .)
    modulo          reduce using rule 199 (LIMIT -> offset int limit int .)
    elevado         reduce using rule 199 (LIMIT -> offset int limit int .)
    and             reduce using rule 199 (LIMIT -> offset int limit int .)
    or              reduce using rule 199 (LIMIT -> offset int limit int .)
    mayor           reduce using rule 199 (LIMIT -> offset int limit int .)
    menor           reduce using rule 199 (LIMIT -> offset int limit int .)
    mayor_igual     reduce using rule 199 (LIMIT -> offset int limit int .)
    menor_igual     reduce using rule 199 (LIMIT -> offset int limit int .)
    igual           reduce using rule 199 (LIMIT -> offset int limit int .)
    diferente1      reduce using rule 199 (LIMIT -> offset int limit int .)
    diferente2      reduce using rule 199 (LIMIT -> offset int limit int .)
    between         reduce using rule 199 (LIMIT -> offset int limit int .)
    is              reduce using rule 199 (LIMIT -> offset int limit int .)
    isnull          reduce using rule 199 (LIMIT -> offset int limit int .)
    notnull         reduce using rule 199 (LIMIT -> offset int limit int .)
    as              reduce using rule 199 (LIMIT -> offset int limit int .)
    cadenaString    reduce using rule 199 (LIMIT -> offset int limit int .)
    id              reduce using rule 199 (LIMIT -> offset int limit int .)
    cadena          reduce using rule 199 (LIMIT -> offset int limit int .)
    in              reduce using rule 199 (LIMIT -> offset int limit int .)
    not             reduce using rule 199 (LIMIT -> offset int limit int .)
    like            reduce using rule 199 (LIMIT -> offset int limit int .)
    then            reduce using rule 199 (LIMIT -> offset int limit int .)
    when            reduce using rule 199 (LIMIT -> offset int limit int .)
    parc            reduce using rule 199 (LIMIT -> offset int limit int .)
    end             reduce using rule 199 (LIMIT -> offset int limit int .)
    else            reduce using rule 199 (LIMIT -> offset int limit int .)
    constraint      reduce using rule 199 (LIMIT -> offset int limit int .)
    unique          reduce using rule 199 (LIMIT -> offset int limit int .)
    check           reduce using rule 199 (LIMIT -> offset int limit int .)
    default         reduce using rule 199 (LIMIT -> offset int limit int .)
    null            reduce using rule 199 (LIMIT -> offset int limit int .)
    primary         reduce using rule 199 (LIMIT -> offset int limit int .)
    references      reduce using rule 199 (LIMIT -> offset int limit int .)
    asc             reduce using rule 199 (LIMIT -> offset int limit int .)
    desc            reduce using rule 199 (LIMIT -> offset int limit int .)


state 792

    (201) LIMIT -> offset int limit all .

    ptcoma          reduce using rule 201 (LIMIT -> offset int limit all .)
    r_from          reduce using rule 201 (LIMIT -> offset int limit all .)
    coma            reduce using rule 201 (LIMIT -> offset int limit all .)
    where           reduce using rule 201 (LIMIT -> offset int limit all .)
    group           reduce using rule 201 (LIMIT -> offset int limit all .)
    having          reduce using rule 201 (LIMIT -> offset int limit all .)
    union           reduce using rule 201 (LIMIT -> offset int limit all .)
    intersect       reduce using rule 201 (LIMIT -> offset int limit all .)
    except          reduce using rule 201 (LIMIT -> offset int limit all .)
    order           reduce using rule 201 (LIMIT -> offset int limit all .)
    limit           reduce using rule 201 (LIMIT -> offset int limit all .)
    offset          reduce using rule 201 (LIMIT -> offset int limit all .)
    mas             reduce using rule 201 (LIMIT -> offset int limit all .)
    menos           reduce using rule 201 (LIMIT -> offset int limit all .)
    multiplicacion  reduce using rule 201 (LIMIT -> offset int limit all .)
    division        reduce using rule 201 (LIMIT -> offset int limit all .)
    modulo          reduce using rule 201 (LIMIT -> offset int limit all .)
    elevado         reduce using rule 201 (LIMIT -> offset int limit all .)
    and             reduce using rule 201 (LIMIT -> offset int limit all .)
    or              reduce using rule 201 (LIMIT -> offset int limit all .)
    mayor           reduce using rule 201 (LIMIT -> offset int limit all .)
    menor           reduce using rule 201 (LIMIT -> offset int limit all .)
    mayor_igual     reduce using rule 201 (LIMIT -> offset int limit all .)
    menor_igual     reduce using rule 201 (LIMIT -> offset int limit all .)
    igual           reduce using rule 201 (LIMIT -> offset int limit all .)
    diferente1      reduce using rule 201 (LIMIT -> offset int limit all .)
    diferente2      reduce using rule 201 (LIMIT -> offset int limit all .)
    between         reduce using rule 201 (LIMIT -> offset int limit all .)
    is              reduce using rule 201 (LIMIT -> offset int limit all .)
    isnull          reduce using rule 201 (LIMIT -> offset int limit all .)
    notnull         reduce using rule 201 (LIMIT -> offset int limit all .)
    as              reduce using rule 201 (LIMIT -> offset int limit all .)
    cadenaString    reduce using rule 201 (LIMIT -> offset int limit all .)
    id              reduce using rule 201 (LIMIT -> offset int limit all .)
    cadena          reduce using rule 201 (LIMIT -> offset int limit all .)
    in              reduce using rule 201 (LIMIT -> offset int limit all .)
    not             reduce using rule 201 (LIMIT -> offset int limit all .)
    like            reduce using rule 201 (LIMIT -> offset int limit all .)
    then            reduce using rule 201 (LIMIT -> offset int limit all .)
    when            reduce using rule 201 (LIMIT -> offset int limit all .)
    parc            reduce using rule 201 (LIMIT -> offset int limit all .)
    end             reduce using rule 201 (LIMIT -> offset int limit all .)
    else            reduce using rule 201 (LIMIT -> offset int limit all .)
    constraint      reduce using rule 201 (LIMIT -> offset int limit all .)
    unique          reduce using rule 201 (LIMIT -> offset int limit all .)
    check           reduce using rule 201 (LIMIT -> offset int limit all .)
    default         reduce using rule 201 (LIMIT -> offset int limit all .)
    null            reduce using rule 201 (LIMIT -> offset int limit all .)
    primary         reduce using rule 201 (LIMIT -> offset int limit all .)
    references      reduce using rule 201 (LIMIT -> offset int limit all .)
    asc             reduce using rule 201 (LIMIT -> offset int limit all .)
    desc            reduce using rule 201 (LIMIT -> offset int limit all .)


state 793

    (172) OPCOLUMN -> constraint id check para CONDCHECK . parc

    parc            shift and go to state 799


state 794

    (180) OPCONST -> foreign key para LEXP parc references id . para LEXP parc

    para            shift and go to state 800


state 795

    (132) OP -> add constraint id foreign key para LEXP parc . references id para LEXP parc

    references      shift and go to state 801


state 796

    (131) OP -> add foreign key para LEXP parc references id . para LEXP parc

    para            shift and go to state 802


state 797

    (65) DECLARACIONES -> id constant TIPO not null ASIG ptcoma .

    id              reduce using rule 65 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    end             reduce using rule 65 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    else            reduce using rule 65 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    elsif           reduce using rule 65 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    declare         reduce using rule 65 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    if              reduce using rule 65 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    raise           reduce using rule 65 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    begin           reduce using rule 65 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    execute         reduce using rule 65 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    return          reduce using rule 65 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    insert          reduce using rule 65 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    select          reduce using rule 65 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    update          reduce using rule 65 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    delete          reduce using rule 65 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    when            reduce using rule 65 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    language        reduce using rule 65 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    as              reduce using rule 65 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    do              reduce using rule 65 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    use             reduce using rule 65 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    create          reduce using rule 65 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    alter           reduce using rule 65 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    drop            reduce using rule 65 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    case            reduce using rule 65 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    show            reduce using rule 65 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    $end            reduce using rule 65 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    dolarn          reduce using rule 65 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)


state 798

    (108) FORMAT -> format para EXP coma LEXP parc .

    ptcoma          reduce using rule 108 (FORMAT -> format para EXP coma LEXP parc .)


state 799

    (172) OPCOLUMN -> constraint id check para CONDCHECK parc .

    constraint      reduce using rule 172 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    unique          reduce using rule 172 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    check           reduce using rule 172 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    default         reduce using rule 172 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    not             reduce using rule 172 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    null            reduce using rule 172 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    primary         reduce using rule 172 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    references      reduce using rule 172 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    parc            reduce using rule 172 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    coma            reduce using rule 172 (OPCOLUMN -> constraint id check para CONDCHECK parc .)


state 800

    (180) OPCONST -> foreign key para LEXP parc references id para . LEXP parc
    (226) LEXP -> . LEXP coma EXP
    (227) LEXP -> . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 803
    EXP                            shift and go to state 57
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 801

    (132) OP -> add constraint id foreign key para LEXP parc references . id para LEXP parc

    id              shift and go to state 804


state 802

    (131) OP -> add foreign key para LEXP parc references id para . LEXP parc
    (226) LEXP -> . LEXP coma EXP
    (227) LEXP -> . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 805
    EXP                            shift and go to state 57
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 803

    (180) OPCONST -> foreign key para LEXP parc references id para LEXP . parc
    (226) LEXP -> LEXP . coma EXP

    parc            shift and go to state 806
    coma            shift and go to state 121


state 804

    (132) OP -> add constraint id foreign key para LEXP parc references id . para LEXP parc

    para            shift and go to state 807


state 805

    (131) OP -> add foreign key para LEXP parc references id para LEXP . parc
    (226) LEXP -> LEXP . coma EXP

    parc            shift and go to state 808
    coma            shift and go to state 121


state 806

    (180) OPCONST -> foreign key para LEXP parc references id para LEXP parc .

    parc            reduce using rule 180 (OPCONST -> foreign key para LEXP parc references id para LEXP parc .)
    coma            reduce using rule 180 (OPCONST -> foreign key para LEXP parc references id para LEXP parc .)


state 807

    (132) OP -> add constraint id foreign key para LEXP parc references id para . LEXP parc
    (226) LEXP -> . LEXP coma EXP
    (227) LEXP -> . EXP
    (275) EXP -> . EXP mas EXP
    (276) EXP -> . EXP menos EXP
    (277) EXP -> . EXP multiplicacion EXP
    (278) EXP -> . EXP division EXP
    (279) EXP -> . EXP modulo EXP
    (280) EXP -> . EXP elevado EXP
    (281) EXP -> . EXP and EXP
    (282) EXP -> . EXP or EXP
    (283) EXP -> . EXP mayor EXP
    (284) EXP -> . EXP menor EXP
    (285) EXP -> . EXP mayor_igual EXP
    (286) EXP -> . EXP menor_igual EXP
    (287) EXP -> . EXP igual EXP
    (288) EXP -> . EXP diferente1 EXP
    (289) EXP -> . EXP diferente2 EXP
    (290) EXP -> . EXP between EXP
    (291) EXP -> . EXP is not null
    (292) EXP -> . EXP is null
    (293) EXP -> . EXP isnull
    (294) EXP -> . EXP notnull
    (295) EXP -> . EXP is true
    (296) EXP -> . EXP is not true
    (297) EXP -> . EXP is false
    (298) EXP -> . EXP is not false
    (299) EXP -> . EXP is unknown
    (300) EXP -> . EXP is not unknown
    (301) EXP -> . EXP as cadenaString
    (302) EXP -> . EXP cadenaString
    (303) EXP -> . EXP as id
    (304) EXP -> . EXP id
    (305) EXP -> . EXP as cadena
    (306) EXP -> . EXP cadena
    (307) EXP -> . mas EXP
    (308) EXP -> . menos EXP
    (309) EXP -> . not EXP
    (310) EXP -> . EXP in para EXP parc
    (311) EXP -> . EXP not in para EXP parc
    (312) EXP -> . EXP not between EXP
    (313) EXP -> . EXP between symetric EXP
    (314) EXP -> . EXP not between symetric EXP
    (315) EXP -> . EXP is distinct r_from EXP
    (316) EXP -> . EXP is not distinct r_from EXP
    (317) EXP -> . EXP like cadena
    (318) EXP -> . EXP not like cadena
    (319) EXP -> . SELECT
    (320) EXP -> . para EXP parc
    (321) EXP -> . CASE
    (322) EXP -> . id para LEXP parc
    (323) EXP -> . id para parc
    (324) EXP -> . any para LEXP parc
    (325) EXP -> . all para LEXP parc
    (326) EXP -> . some para LEXP parc
    (327) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (328) EXP -> . int
    (329) EXP -> . decimales
    (330) EXP -> . cadena
    (331) EXP -> . cadenaString
    (332) EXP -> . true
    (333) EXP -> . false
    (334) EXP -> . id
    (335) EXP -> . multiplicacion
    (336) EXP -> . null
    (337) EXP -> . current_time
    (338) EXP -> . current_date
    (339) EXP -> . timestamp cadena
    (340) EXP -> . interval cadena
    (341) EXP -> . cadena as TIPO
    (342) EXP -> . default
    (343) EXP -> . idPunto
    (192) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (193) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (194) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (80) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (81) CASE -> . case LEXP LISTAWHEN end case
    (82) CASE -> . case LISTAWHEN ELSE end
    (83) CASE -> . case LISTAWHEN end

    mas             shift and go to state 58
    menos           shift and go to state 59
    not             shift and go to state 61
    para            shift and go to state 68
    id              shift and go to state 66
    any             shift and go to state 71
    all             shift and go to state 72
    some            shift and go to state 73
    extract         shift and go to state 74
    int             shift and go to state 76
    decimales       shift and go to state 77
    cadena          shift and go to state 67
    cadenaString    shift and go to state 65
    true            shift and go to state 63
    false           shift and go to state 64
    multiplicacion  shift and go to state 60
    null            shift and go to state 62
    current_time    shift and go to state 78
    current_date    shift and go to state 79
    timestamp       shift and go to state 75
    interval        shift and go to state 80
    default         shift and go to state 81
    idPunto         shift and go to state 82
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 809
    EXP                            shift and go to state 57
    SELECT                         shift and go to state 69
    CASE                           shift and go to state 70

state 808

    (131) OP -> add foreign key para LEXP parc references id para LEXP parc .

    coma            reduce using rule 131 (OP -> add foreign key para LEXP parc references id para LEXP parc .)
    ptcoma          reduce using rule 131 (OP -> add foreign key para LEXP parc references id para LEXP parc .)


state 809

    (132) OP -> add constraint id foreign key para LEXP parc references id para LEXP . parc
    (226) LEXP -> LEXP . coma EXP

    parc            shift and go to state 810
    coma            shift and go to state 121


state 810

    (132) OP -> add constraint id foreign key para LEXP parc references id para LEXP parc .

    coma            reduce using rule 132 (OP -> add constraint id foreign key para LEXP parc references id para LEXP parc .)
    ptcoma          reduce using rule 132 (OP -> add constraint id foreign key para LEXP parc references id para LEXP parc .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ptcoma in state 18 resolved as shift
WARNING: shift/reduce conflict for r_from in state 56 resolved as shift
WARNING: shift/reduce conflict for coma in state 56 resolved as shift
WARNING: shift/reduce conflict for where in state 56 resolved as shift
WARNING: shift/reduce conflict for mas in state 57 resolved as shift
WARNING: shift/reduce conflict for menos in state 57 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 57 resolved as shift
WARNING: shift/reduce conflict for division in state 57 resolved as shift
WARNING: shift/reduce conflict for modulo in state 57 resolved as shift
WARNING: shift/reduce conflict for elevado in state 57 resolved as shift
WARNING: shift/reduce conflict for and in state 57 resolved as shift
WARNING: shift/reduce conflict for or in state 57 resolved as shift
WARNING: shift/reduce conflict for mayor in state 57 resolved as shift
WARNING: shift/reduce conflict for menor in state 57 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 57 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 57 resolved as shift
WARNING: shift/reduce conflict for igual in state 57 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 57 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 57 resolved as shift
WARNING: shift/reduce conflict for between in state 57 resolved as shift
WARNING: shift/reduce conflict for is in state 57 resolved as shift
WARNING: shift/reduce conflict for isnull in state 57 resolved as shift
WARNING: shift/reduce conflict for notnull in state 57 resolved as shift
WARNING: shift/reduce conflict for as in state 57 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 57 resolved as shift
WARNING: shift/reduce conflict for id in state 57 resolved as shift
WARNING: shift/reduce conflict for cadena in state 57 resolved as shift
WARNING: shift/reduce conflict for in in state 57 resolved as shift
WARNING: shift/reduce conflict for not in state 57 resolved as shift
WARNING: shift/reduce conflict for like in state 57 resolved as shift
WARNING: shift/reduce conflict for as in state 67 resolved as shift
WARNING: shift/reduce conflict for mas in state 114 resolved as shift
WARNING: shift/reduce conflict for menos in state 114 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 114 resolved as shift
WARNING: shift/reduce conflict for division in state 114 resolved as shift
WARNING: shift/reduce conflict for modulo in state 114 resolved as shift
WARNING: shift/reduce conflict for elevado in state 114 resolved as shift
WARNING: shift/reduce conflict for and in state 114 resolved as shift
WARNING: shift/reduce conflict for or in state 114 resolved as shift
WARNING: shift/reduce conflict for mayor in state 114 resolved as shift
WARNING: shift/reduce conflict for menor in state 114 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 114 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 114 resolved as shift
WARNING: shift/reduce conflict for igual in state 114 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 114 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 114 resolved as shift
WARNING: shift/reduce conflict for between in state 114 resolved as shift
WARNING: shift/reduce conflict for is in state 114 resolved as shift
WARNING: shift/reduce conflict for isnull in state 114 resolved as shift
WARNING: shift/reduce conflict for notnull in state 114 resolved as shift
WARNING: shift/reduce conflict for as in state 114 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 114 resolved as shift
WARNING: shift/reduce conflict for id in state 114 resolved as shift
WARNING: shift/reduce conflict for cadena in state 114 resolved as shift
WARNING: shift/reduce conflict for in in state 114 resolved as shift
WARNING: shift/reduce conflict for not in state 114 resolved as shift
WARNING: shift/reduce conflict for like in state 114 resolved as shift
WARNING: shift/reduce conflict for group in state 120 resolved as shift
WARNING: shift/reduce conflict for coma in state 193 resolved as shift
WARNING: shift/reduce conflict for where in state 193 resolved as shift
WARNING: shift/reduce conflict for having in state 194 resolved as shift
WARNING: shift/reduce conflict for mas in state 196 resolved as shift
WARNING: shift/reduce conflict for menos in state 196 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 196 resolved as shift
WARNING: shift/reduce conflict for division in state 196 resolved as shift
WARNING: shift/reduce conflict for modulo in state 196 resolved as shift
WARNING: shift/reduce conflict for elevado in state 196 resolved as shift
WARNING: shift/reduce conflict for and in state 196 resolved as shift
WARNING: shift/reduce conflict for or in state 196 resolved as shift
WARNING: shift/reduce conflict for mayor in state 196 resolved as shift
WARNING: shift/reduce conflict for menor in state 196 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 196 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 196 resolved as shift
WARNING: shift/reduce conflict for igual in state 196 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 196 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 196 resolved as shift
WARNING: shift/reduce conflict for between in state 196 resolved as shift
WARNING: shift/reduce conflict for is in state 196 resolved as shift
WARNING: shift/reduce conflict for isnull in state 196 resolved as shift
WARNING: shift/reduce conflict for notnull in state 196 resolved as shift
WARNING: shift/reduce conflict for as in state 196 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 196 resolved as shift
WARNING: shift/reduce conflict for id in state 196 resolved as shift
WARNING: shift/reduce conflict for cadena in state 196 resolved as shift
WARNING: shift/reduce conflict for in in state 196 resolved as shift
WARNING: shift/reduce conflict for not in state 196 resolved as shift
WARNING: shift/reduce conflict for like in state 196 resolved as shift
WARNING: shift/reduce conflict for cadena in state 231 resolved as shift
WARNING: shift/reduce conflict for modulo in state 239 resolved as shift
WARNING: shift/reduce conflict for coma in state 318 resolved as shift
WARNING: shift/reduce conflict for where in state 318 resolved as shift
WARNING: shift/reduce conflict for group in state 319 resolved as shift
WARNING: shift/reduce conflict for union in state 320 resolved as shift
WARNING: shift/reduce conflict for intersect in state 320 resolved as shift
WARNING: shift/reduce conflict for except in state 320 resolved as shift
WARNING: shift/reduce conflict for id in state 410 resolved as shift
WARNING: shift/reduce conflict for igual in state 435 resolved as shift
WARNING: shift/reduce conflict for group in state 439 resolved as shift
WARNING: shift/reduce conflict for having in state 440 resolved as shift
WARNING: shift/reduce conflict for order in state 441 resolved as shift
WARNING: shift/reduce conflict for mas in state 445 resolved as shift
WARNING: shift/reduce conflict for menos in state 445 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 445 resolved as shift
WARNING: shift/reduce conflict for division in state 445 resolved as shift
WARNING: shift/reduce conflict for modulo in state 445 resolved as shift
WARNING: shift/reduce conflict for elevado in state 445 resolved as shift
WARNING: shift/reduce conflict for and in state 445 resolved as shift
WARNING: shift/reduce conflict for or in state 445 resolved as shift
WARNING: shift/reduce conflict for mayor in state 445 resolved as shift
WARNING: shift/reduce conflict for menor in state 445 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 445 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 445 resolved as shift
WARNING: shift/reduce conflict for igual in state 445 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 445 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 445 resolved as shift
WARNING: shift/reduce conflict for between in state 445 resolved as shift
WARNING: shift/reduce conflict for is in state 445 resolved as shift
WARNING: shift/reduce conflict for isnull in state 445 resolved as shift
WARNING: shift/reduce conflict for notnull in state 445 resolved as shift
WARNING: shift/reduce conflict for as in state 445 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 445 resolved as shift
WARNING: shift/reduce conflict for id in state 445 resolved as shift
WARNING: shift/reduce conflict for cadena in state 445 resolved as shift
WARNING: shift/reduce conflict for in in state 445 resolved as shift
WARNING: shift/reduce conflict for not in state 445 resolved as shift
WARNING: shift/reduce conflict for like in state 445 resolved as shift
WARNING: shift/reduce conflict for coma in state 446 resolved as shift
WARNING: shift/reduce conflict for declare in state 493 resolved as shift
WARNING: shift/reduce conflict for id in state 493 resolved as shift
WARNING: shift/reduce conflict for if in state 493 resolved as shift
WARNING: shift/reduce conflict for raise in state 493 resolved as shift
WARNING: shift/reduce conflict for begin in state 493 resolved as shift
WARNING: shift/reduce conflict for execute in state 493 resolved as shift
WARNING: shift/reduce conflict for return in state 493 resolved as shift
WARNING: shift/reduce conflict for insert in state 493 resolved as shift
WARNING: shift/reduce conflict for select in state 493 resolved as shift
WARNING: shift/reduce conflict for update in state 493 resolved as shift
WARNING: shift/reduce conflict for delete in state 493 resolved as shift
WARNING: shift/reduce conflict for coma in state 511 resolved as shift
WARNING: shift/reduce conflict for as in state 525 resolved as shift
WARNING: shift/reduce conflict for having in state 532 resolved as shift
WARNING: shift/reduce conflict for union in state 533 resolved as shift
WARNING: shift/reduce conflict for intersect in state 533 resolved as shift
WARNING: shift/reduce conflict for except in state 533 resolved as shift
WARNING: shift/reduce conflict for limit in state 534 resolved as shift
WARNING: shift/reduce conflict for offset in state 534 resolved as shift
WARNING: shift/reduce conflict for mas in state 536 resolved as shift
WARNING: shift/reduce conflict for menos in state 536 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 536 resolved as shift
WARNING: shift/reduce conflict for division in state 536 resolved as shift
WARNING: shift/reduce conflict for modulo in state 536 resolved as shift
WARNING: shift/reduce conflict for elevado in state 536 resolved as shift
WARNING: shift/reduce conflict for and in state 536 resolved as shift
WARNING: shift/reduce conflict for or in state 536 resolved as shift
WARNING: shift/reduce conflict for mayor in state 536 resolved as shift
WARNING: shift/reduce conflict for menor in state 536 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 536 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 536 resolved as shift
WARNING: shift/reduce conflict for igual in state 536 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 536 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 536 resolved as shift
WARNING: shift/reduce conflict for between in state 536 resolved as shift
WARNING: shift/reduce conflict for is in state 536 resolved as shift
WARNING: shift/reduce conflict for isnull in state 536 resolved as shift
WARNING: shift/reduce conflict for notnull in state 536 resolved as shift
WARNING: shift/reduce conflict for as in state 536 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 536 resolved as shift
WARNING: shift/reduce conflict for id in state 536 resolved as shift
WARNING: shift/reduce conflict for cadena in state 536 resolved as shift
WARNING: shift/reduce conflict for in in state 536 resolved as shift
WARNING: shift/reduce conflict for not in state 536 resolved as shift
WARNING: shift/reduce conflict for like in state 536 resolved as shift
WARNING: shift/reduce conflict for mas in state 538 resolved as shift
WARNING: shift/reduce conflict for menos in state 538 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 538 resolved as shift
WARNING: shift/reduce conflict for division in state 538 resolved as shift
WARNING: shift/reduce conflict for modulo in state 538 resolved as shift
WARNING: shift/reduce conflict for elevado in state 538 resolved as shift
WARNING: shift/reduce conflict for and in state 538 resolved as shift
WARNING: shift/reduce conflict for or in state 538 resolved as shift
WARNING: shift/reduce conflict for mayor in state 538 resolved as shift
WARNING: shift/reduce conflict for menor in state 538 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 538 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 538 resolved as shift
WARNING: shift/reduce conflict for igual in state 538 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 538 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 538 resolved as shift
WARNING: shift/reduce conflict for between in state 538 resolved as shift
WARNING: shift/reduce conflict for is in state 538 resolved as shift
WARNING: shift/reduce conflict for isnull in state 538 resolved as shift
WARNING: shift/reduce conflict for notnull in state 538 resolved as shift
WARNING: shift/reduce conflict for as in state 538 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 538 resolved as shift
WARNING: shift/reduce conflict for id in state 538 resolved as shift
WARNING: shift/reduce conflict for cadena in state 538 resolved as shift
WARNING: shift/reduce conflict for in in state 538 resolved as shift
WARNING: shift/reduce conflict for not in state 538 resolved as shift
WARNING: shift/reduce conflict for like in state 538 resolved as shift
WARNING: shift/reduce conflict for mas in state 539 resolved as shift
WARNING: shift/reduce conflict for menos in state 539 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 539 resolved as shift
WARNING: shift/reduce conflict for division in state 539 resolved as shift
WARNING: shift/reduce conflict for modulo in state 539 resolved as shift
WARNING: shift/reduce conflict for elevado in state 539 resolved as shift
WARNING: shift/reduce conflict for and in state 539 resolved as shift
WARNING: shift/reduce conflict for or in state 539 resolved as shift
WARNING: shift/reduce conflict for mayor in state 539 resolved as shift
WARNING: shift/reduce conflict for menor in state 539 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 539 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 539 resolved as shift
WARNING: shift/reduce conflict for igual in state 539 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 539 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 539 resolved as shift
WARNING: shift/reduce conflict for between in state 539 resolved as shift
WARNING: shift/reduce conflict for is in state 539 resolved as shift
WARNING: shift/reduce conflict for isnull in state 539 resolved as shift
WARNING: shift/reduce conflict for notnull in state 539 resolved as shift
WARNING: shift/reduce conflict for as in state 539 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 539 resolved as shift
WARNING: shift/reduce conflict for id in state 539 resolved as shift
WARNING: shift/reduce conflict for cadena in state 539 resolved as shift
WARNING: shift/reduce conflict for in in state 539 resolved as shift
WARNING: shift/reduce conflict for not in state 539 resolved as shift
WARNING: shift/reduce conflict for like in state 539 resolved as shift
WARNING: shift/reduce conflict for cadena in state 542 resolved as shift
WARNING: shift/reduce conflict for id in state 580 resolved as shift
WARNING: shift/reduce conflict for id in state 588 resolved as shift
WARNING: shift/reduce conflict for if in state 588 resolved as shift
WARNING: shift/reduce conflict for execute in state 588 resolved as shift
WARNING: shift/reduce conflict for insert in state 588 resolved as shift
WARNING: shift/reduce conflict for select in state 588 resolved as shift
WARNING: shift/reduce conflict for update in state 588 resolved as shift
WARNING: shift/reduce conflict for delete in state 588 resolved as shift
WARNING: shift/reduce conflict for union in state 625 resolved as shift
WARNING: shift/reduce conflict for intersect in state 625 resolved as shift
WARNING: shift/reduce conflict for except in state 625 resolved as shift
WARNING: shift/reduce conflict for order in state 626 resolved as shift
WARNING: shift/reduce conflict for mas in state 631 resolved as shift
WARNING: shift/reduce conflict for menos in state 631 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 631 resolved as shift
WARNING: shift/reduce conflict for division in state 631 resolved as shift
WARNING: shift/reduce conflict for modulo in state 631 resolved as shift
WARNING: shift/reduce conflict for elevado in state 631 resolved as shift
WARNING: shift/reduce conflict for and in state 631 resolved as shift
WARNING: shift/reduce conflict for or in state 631 resolved as shift
WARNING: shift/reduce conflict for mayor in state 631 resolved as shift
WARNING: shift/reduce conflict for menor in state 631 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 631 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 631 resolved as shift
WARNING: shift/reduce conflict for igual in state 631 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 631 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 631 resolved as shift
WARNING: shift/reduce conflict for between in state 631 resolved as shift
WARNING: shift/reduce conflict for is in state 631 resolved as shift
WARNING: shift/reduce conflict for isnull in state 631 resolved as shift
WARNING: shift/reduce conflict for notnull in state 631 resolved as shift
WARNING: shift/reduce conflict for as in state 631 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 631 resolved as shift
WARNING: shift/reduce conflict for id in state 631 resolved as shift
WARNING: shift/reduce conflict for cadena in state 631 resolved as shift
WARNING: shift/reduce conflict for in in state 631 resolved as shift
WARNING: shift/reduce conflict for not in state 631 resolved as shift
WARNING: shift/reduce conflict for like in state 631 resolved as shift
WARNING: shift/reduce conflict for not in state 645 resolved as shift
WARNING: shift/reduce conflict for id in state 671 resolved as shift
WARNING: shift/reduce conflict for if in state 671 resolved as shift
WARNING: shift/reduce conflict for execute in state 671 resolved as shift
WARNING: shift/reduce conflict for insert in state 671 resolved as shift
WARNING: shift/reduce conflict for select in state 671 resolved as shift
WARNING: shift/reduce conflict for update in state 671 resolved as shift
WARNING: shift/reduce conflict for delete in state 671 resolved as shift
WARNING: shift/reduce conflict for id in state 680 resolved as shift
WARNING: shift/reduce conflict for if in state 680 resolved as shift
WARNING: shift/reduce conflict for execute in state 680 resolved as shift
WARNING: shift/reduce conflict for insert in state 680 resolved as shift
WARNING: shift/reduce conflict for select in state 680 resolved as shift
WARNING: shift/reduce conflict for update in state 680 resolved as shift
WARNING: shift/reduce conflict for delete in state 680 resolved as shift
WARNING: shift/reduce conflict for order in state 706 resolved as shift
WARNING: shift/reduce conflict for limit in state 707 resolved as shift
WARNING: shift/reduce conflict for offset in state 707 resolved as shift
WARNING: shift/reduce conflict for offset in state 708 resolved as shift
WARNING: shift/reduce conflict for offset in state 709 resolved as shift
WARNING: shift/reduce conflict for limit in state 710 resolved as shift
WARNING: shift/reduce conflict for coma in state 711 resolved as shift
WARNING: shift/reduce conflict for asc in state 711 resolved as shift
WARNING: shift/reduce conflict for desc in state 711 resolved as shift
WARNING: shift/reduce conflict for parc in state 712 resolved as shift
WARNING: shift/reduce conflict for id in state 744 resolved as shift
WARNING: shift/reduce conflict for if in state 744 resolved as shift
WARNING: shift/reduce conflict for execute in state 744 resolved as shift
WARNING: shift/reduce conflict for insert in state 744 resolved as shift
WARNING: shift/reduce conflict for select in state 744 resolved as shift
WARNING: shift/reduce conflict for update in state 744 resolved as shift
WARNING: shift/reduce conflict for delete in state 744 resolved as shift
WARNING: shift/reduce conflict for limit in state 758 resolved as shift
WARNING: shift/reduce conflict for offset in state 758 resolved as shift
