Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> SELECT ptcoma
Rule 5     instruccion -> CREATETABLE
Rule 6     instruccion -> UPDATE ptcoma
Rule 7     instruccion -> DELETE ptcoma
Rule 8     instruccion -> ALTER ptcoma
Rule 9     instruccion -> DROP ptcoma
Rule 10    instruccion -> INSERT ptcoma
Rule 11    instruccion -> CREATETYPE ptcoma
Rule 12    instruccion -> CASE
Rule 13    instruccion -> CREATEDB ptcoma
Rule 14    instruccion -> SHOWDB ptcoma
Rule 15    CASE -> case LISTAWHEN ELSE end
Rule 16    CASE -> case LISTAWHEN end
Rule 17    LISTAWHEN -> LISTAWHEN WHEN
Rule 18    LISTAWHEN -> WHEN
Rule 19    WHEN -> when LEXP then LEXP
Rule 20    ELSE -> else LEXP
Rule 21    INSERT -> insert into id values para LEXP parc
Rule 22    DROP -> drop table id
Rule 23    DROP -> drop databases if exist id
Rule 24    DROP -> drop databases id
Rule 25    ALTER -> alter databases id RO
Rule 26    ALTER -> altertable
Rule 27    RO -> rename to id
Rule 28    RO -> owner to id
Rule 29    altertable -> alter table id OP
Rule 30    OP -> add ADD
Rule 31    OP -> drop column ALTERDROP
Rule 32    OP -> alter column id set not null
Rule 33    OP -> alter column id set null
Rule 34    OP -> listaalc
Rule 35    OP -> drop ALTERDROP
Rule 36    OP -> rename column id to id
Rule 37    listaalc -> listaalc coma alc
Rule 38    listaalc -> alc
Rule 39    alc -> alter column id type TIPO
Rule 40    ALTERDROP -> constraint id
Rule 41    ALTERDROP -> column LEXP
Rule 42    ALTERDROP -> check id
Rule 43    ADD -> column id TIPO
Rule 44    ADD -> check para LEXP parc
Rule 45    ADD -> constraint id unique para id parc
Rule 46    ADD -> foreign key para id parc references id para id parc
Rule 47    SHOWDB -> show databases
Rule 48    CREATEDB -> create RD if not exist id
Rule 49    CREATEDB -> create RD if not exist id OPCCDB
Rule 50    CREATEDB -> create RD id
Rule 51    CREATEDB -> create RD id OPCCDB
Rule 52    OPCCDB -> PROPIETARIO
Rule 53    OPCCDB -> MODO
Rule 54    OPCCDB -> PROPIETARIO MODO
Rule 55    RD -> or replace databases
Rule 56    RD -> databases
Rule 57    PROPIETARIO -> owner igual id
Rule 58    PROPIETARIO -> owner id
Rule 59    MODO -> mode igual int
Rule 60    MODO -> mode int
Rule 61    CREATETABLE -> create table id para LDEF parc ptcoma
Rule 62    CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma
Rule 63    LDEF -> LDEF coma COLDEF
Rule 64    LDEF -> COLDEF
Rule 65    COLDEF -> OPCONST
Rule 66    COLDEF -> constraint id OPCONST
Rule 67    COLDEF -> id TIPO
Rule 68    COLDEF -> id TIPO LOPCOLUMN
Rule 69    LOPCOLUMN -> LOPCOLUMN OPCOLUMN
Rule 70    LOPCOLUMN -> OPCOLUMN
Rule 71    OPCOLUMN -> constraint id unique
Rule 72    OPCOLUMN -> constraint id check para EXP parc
Rule 73    OPCOLUMN -> default EXP
Rule 74    OPCOLUMN -> PNULL
Rule 75    OPCOLUMN -> primary key
Rule 76    OPCOLUMN -> references id
Rule 77    PNULL -> not null
Rule 78    PNULL -> null
Rule 79    OPCONST -> primary key para LEXP parc
Rule 80    OPCONST -> foreign key para LEXP parc references table para LEXP parc
Rule 81    OPCONST -> unique para LEXP parc
Rule 82    OPCONST -> check para LEXP parc
Rule 83    HERENCIA -> inherits para LEXP parc
Rule 84    CREATETYPE -> create type id as enum para LEXP parc
Rule 85    SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
Rule 86    SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
Rule 87    SELECT -> select LEXP LIMIT COMBINING
Rule 88    LIMIT -> limit int
Rule 89    LIMIT -> limit all
Rule 90    LIMIT -> offset int
Rule 91    LIMIT -> limit int offset int
Rule 92    LIMIT -> offset int limit int
Rule 93    LIMIT -> limit all offset int
Rule 94    LIMIT -> offset int limit all
Rule 95    LIMIT -> <empty>
Rule 96    WHERE -> where LEXP
Rule 97    WHERE -> where EXIST
Rule 98    WHERE -> union LEXP
Rule 99    WHERE -> union all LEXP
Rule 100   WHERE -> <empty>
Rule 101   COMBINING -> union LEXP
Rule 102   COMBINING -> union all LEXP
Rule 103   COMBINING -> intersect LEXP
Rule 104   COMBINING -> intersect all LEXP
Rule 105   COMBINING -> except LEXP
Rule 106   COMBINING -> except all LEXP
Rule 107   COMBINING -> <empty>
Rule 108   GROUP -> group by LEXP
Rule 109   GROUP -> <empty>
Rule 110   HAVING -> having LEXP
Rule 111   HAVING -> <empty>
Rule 112   ORDER -> order by LEXP ORD
Rule 113   ORDER -> order by LEXP
Rule 114   ORDER -> <empty>
Rule 115   ORD -> asc
Rule 116   ORD -> desc
Rule 117   UPDATE -> update id set LCAMPOS where LEXP
Rule 118   LCAMPOS -> LCAMPOS id igual EXP
Rule 119   LCAMPOS -> id igual EXP
Rule 120   LCAMPOS -> id igual default
Rule 121   DELETE -> delete r_from id where LEXP
Rule 122   DELETE -> delete r_from id
Rule 123   EXIST -> exist para SELECT parc
Rule 124   LEXP -> LEXP coma EXP
Rule 125   LEXP -> EXP
Rule 126   TIPO -> smallint
Rule 127   TIPO -> integer
Rule 128   TIPO -> bigint
Rule 129   TIPO -> decimal para LEXP parc
Rule 130   TIPO -> numeric para LEXP parc
Rule 131   TIPO -> real
Rule 132   TIPO -> double precision
Rule 133   TIPO -> money
Rule 134   TIPO -> character varying para int parc
Rule 135   TIPO -> varchar para int parc
Rule 136   TIPO -> character para int parc
Rule 137   TIPO -> char para int parc
Rule 138   TIPO -> text
Rule 139   TIPO -> timestamp
Rule 140   TIPO -> timestamp without time zone
Rule 141   TIPO -> timestamp para int parc without time zone
Rule 142   TIPO -> timestamp with time zone
Rule 143   TIPO -> timestamp para int parc with time zone
Rule 144   TIPO -> timestamp para int parc
Rule 145   TIPO -> date
Rule 146   TIPO -> time
Rule 147   TIPO -> time without time zone
Rule 148   TIPO -> time para int parc without time zone
Rule 149   TIPO -> time with time zone
Rule 150   TIPO -> time para int parc with time zone
Rule 151   TIPO -> time para int parc
Rule 152   TIPO -> interval
Rule 153   TIPO -> interval para int parc
Rule 154   TIPO -> interval cadena
Rule 155   TIPO -> interval para int parc cadena
Rule 156   TIPO -> boolean
Rule 157   FIELDS -> year
Rule 158   FIELDS -> month
Rule 159   FIELDS -> day
Rule 160   FIELDS -> hour
Rule 161   FIELDS -> minute
Rule 162   FIELDS -> second
Rule 163   EXP -> EXP mas EXP
Rule 164   EXP -> EXP menos EXP
Rule 165   EXP -> EXP multiplicacion EXP
Rule 166   EXP -> EXP division EXP
Rule 167   EXP -> EXP modulo EXP
Rule 168   EXP -> EXP elevado EXP
Rule 169   EXP -> EXP and EXP
Rule 170   EXP -> EXP or EXP
Rule 171   EXP -> EXP mayor EXP
Rule 172   EXP -> EXP menor EXP
Rule 173   EXP -> EXP mayor_igual EXP
Rule 174   EXP -> EXP menor_igual EXP
Rule 175   EXP -> EXP igual EXP
Rule 176   EXP -> EXP diferente1 EXP
Rule 177   EXP -> EXP diferente2 EXP
Rule 178   EXP -> EXP punto EXP
Rule 179   EXP -> mas EXP
Rule 180   EXP -> menos EXP
Rule 181   EXP -> not EXP
Rule 182   EXP -> para EXP parc
Rule 183   EXP -> int
Rule 184   EXP -> decimales
Rule 185   EXP -> cadena
Rule 186   EXP -> cadenaString
Rule 187   EXP -> true
Rule 188   EXP -> false
Rule 189   EXP -> id
Rule 190   EXP -> PNULL
Rule 191   EXP -> SELECT
Rule 192   EXP -> PREDICADOS
Rule 193   EXP -> id para parc
Rule 194   EXP -> id para LEXP parc
Rule 195   EXP -> extract para FIELDS r_from timestamp cadena parc
Rule 196   EXP -> current_time
Rule 197   EXP -> current_date
Rule 198   EXP -> timestamp cadena
Rule 199   EXP -> interval cadena
Rule 200   EXP -> CASE
Rule 201   EXP -> cadena like cadena
Rule 202   EXP -> cadena not like cadena
Rule 203   EXP -> any para LEXP parc
Rule 204   EXP -> all para LEXP parc
Rule 205   EXP -> some para LEXP parc
Rule 206   EXP -> EXP as cadenaString
Rule 207   EXP -> EXP cadenaString
Rule 208   EXP -> EXP as id
Rule 209   EXP -> EXP id
Rule 210   EXP -> EXP as cadena
Rule 211   EXP -> EXP cadena
Rule 212   EXP -> multiplicacion
Rule 213   PREDICADOS -> EXP between EXP
Rule 214   PREDICADOS -> EXP in para LEXP parc
Rule 215   PREDICADOS -> EXP not in para LEXP parc
Rule 216   PREDICADOS -> EXP not between EXP
Rule 217   PREDICADOS -> EXP between symetric EXP
Rule 218   PREDICADOS -> EXP not between symetric EXP
Rule 219   PREDICADOS -> EXP is distinct r_from EXP
Rule 220   PREDICADOS -> EXP is not distinct r_from EXP
Rule 221   PREDICADOS -> EXP is PNULL
Rule 222   PREDICADOS -> EXP isnull
Rule 223   PREDICADOS -> EXP notnull
Rule 224   PREDICADOS -> EXP is true
Rule 225   PREDICADOS -> EXP is not true
Rule 226   PREDICADOS -> EXP is false
Rule 227   PREDICADOS -> EXP is not false
Rule 228   PREDICADOS -> EXP is unknown
Rule 229   PREDICADOS -> EXP is not unknown

Terminals, with rules where they appear

add                  : 30
all                  : 89 93 94 99 102 104 106 204
alter                : 25 29 32 33 39
and                  : 169
any                  : 203
as                   : 84 206 208 210
asc                  : 115
between              : 213 216 217 218
bigint               : 128
boolean              : 156
by                   : 108 112 113
cadena               : 154 155 185 195 198 199 201 201 202 202 210 211
cadenaString         : 186 206 207
case                 : 15 16
char                 : 137
character            : 134 136
check                : 42 44 72 82
column               : 31 32 33 36 39 41 43
coma                 : 37 63 124
constraint           : 40 45 66 71 72
create               : 48 49 50 51 61 62 84
current_date         : 197
current_time         : 196
databases            : 23 24 25 47 55 56
date                 : 145
day                  : 159
decimal              : 129
decimales            : 184
default              : 73 120
delete               : 121 122
desc                 : 116
diferente1           : 176
diferente2           : 177
distinct             : 85 219 220
division             : 166
double               : 132
drop                 : 22 23 24 31 35
elevado              : 168
else                 : 20
end                  : 15 16
enum                 : 84
error                : 
except               : 105 106
exist                : 23 48 49 123
extract              : 195
false                : 188 226 227
foreign              : 46 80
group                : 108
having               : 110
hour                 : 160
id                   : 21 22 23 24 25 27 28 29 32 33 36 36 39 40 42 43 45 45 46 46 46 48 49 50 51 57 58 61 62 66 67 68 71 72 76 84 117 118 119 120 121 122 189 193 194 208 209
if                   : 23 48 49
igual                : 57 59 118 119 120 175
in                   : 214 215
inherits             : 83
insert               : 21
int                  : 59 60 88 90 91 91 92 92 93 94 134 135 136 137 141 143 144 148 150 151 153 155 183
integer              : 127
intersect            : 103 104
interval             : 152 153 154 155 199
into                 : 21
is                   : 219 220 221 224 225 226 227 228 229
isnull               : 222
key                  : 46 75 79 80
like                 : 201 202
limit                : 88 89 91 92 93 94
mas                  : 163 179
mayor                : 171
mayor_igual          : 173
menor                : 172
menor_igual          : 174
menos                : 164 180
minute               : 161
mode                 : 59 60
modulo               : 167
money                : 133
month                : 158
multiplicacion       : 165 212
not                  : 32 48 49 77 181 202 215 216 218 220 225 227 229
notnull              : 223
null                 : 32 33 77 78
numeric              : 130
offset               : 90 91 92 93 94
or                   : 55 170
order                : 112 113
owner                : 28 57 58
para                 : 21 44 45 46 46 61 62 72 79 80 80 81 82 83 84 123 129 130 134 135 136 137 141 143 144 148 150 151 153 155 182 193 194 195 203 204 205 214 215
parc                 : 21 44 45 46 46 61 62 72 79 80 80 81 82 83 84 123 129 130 134 135 136 137 141 143 144 148 150 151 153 155 182 193 194 195 203 204 205 214 215
precision            : 132
primary              : 75 79
ptcoma               : 4 6 7 8 9 10 11 13 14 61 62
punto                : 178
r_from               : 85 86 121 122 195 219 220
real                 : 131
references           : 46 76 80
rename               : 27 36
replace              : 55
second               : 162
select               : 85 86 87
set                  : 32 33 117
show                 : 47
smallint             : 126
some                 : 205
symetric             : 217 218
table                : 22 29 61 62 80
text                 : 138
then                 : 19
time                 : 140 141 142 143 146 147 147 148 148 149 149 150 150 151
timestamp            : 139 140 141 142 143 144 195 198
to                   : 27 28 36
true                 : 187 224 225
type                 : 39 84
union                : 98 99 101 102
unique               : 45 71 81
unknown              : 228 229
update               : 117
values               : 21
varchar              : 135
varying              : 134
when                 : 19
where                : 96 97 117 121
with                 : 142 143 149 150
without              : 140 141 147 148
year                 : 157
zone                 : 140 141 142 143 147 148 149 150

Nonterminals, with rules where they appear

ADD                  : 30
ALTER                : 8
ALTERDROP            : 31 35
CASE                 : 12 200
COLDEF               : 63 64
COMBINING            : 85 86 87
CREATEDB             : 13
CREATETABLE          : 5
CREATETYPE           : 11
DELETE               : 7
DROP                 : 9
ELSE                 : 15
EXIST                : 97
EXP                  : 72 73 118 119 124 125 163 163 164 164 165 165 166 166 167 167 168 168 169 169 170 170 171 171 172 172 173 173 174 174 175 175 176 176 177 177 178 178 179 180 181 182 206 207 208 209 210 211 213 213 214 215 216 216 217 217 218 218 219 219 220 220 221 222 223 224 225 226 227 228 229
FIELDS               : 195
GROUP                : 85 86
HAVING               : 85 86
HERENCIA             : 62
INSERT               : 10
LCAMPOS              : 117 118
LDEF                 : 61 62 63
LEXP                 : 19 19 20 21 41 44 79 80 80 81 82 83 84 85 85 86 86 87 96 98 99 101 102 103 104 105 106 108 110 112 113 117 121 124 129 130 194 203 204 205 214 215
LIMIT                : 85 86 87
LISTAWHEN            : 15 16 17
LOPCOLUMN            : 68 69
MODO                 : 53 54
OP                   : 29
OPCCDB               : 49 51
OPCOLUMN             : 69 70
OPCONST              : 65 66
ORD                  : 112
ORDER                : 85 86
PNULL                : 74 190 221
PREDICADOS           : 192
PROPIETARIO          : 52 54
RD                   : 48 49 50 51
RO                   : 25
SELECT               : 4 123 191
SHOWDB               : 14
TIPO                 : 39 43 67 68
UPDATE               : 6
WHEN                 : 17 18
WHERE                : 85 86
alc                  : 37 38
altertable           : 26
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2
listaalc             : 34 37

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . SELECT ptcoma
    (5) instruccion -> . CREATETABLE
    (6) instruccion -> . UPDATE ptcoma
    (7) instruccion -> . DELETE ptcoma
    (8) instruccion -> . ALTER ptcoma
    (9) instruccion -> . DROP ptcoma
    (10) instruccion -> . INSERT ptcoma
    (11) instruccion -> . CREATETYPE ptcoma
    (12) instruccion -> . CASE
    (13) instruccion -> . CREATEDB ptcoma
    (14) instruccion -> . SHOWDB ptcoma
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (61) CREATETABLE -> . create table id para LDEF parc ptcoma
    (62) CREATETABLE -> . create table id para LDEF parc HERENCIA ptcoma
    (117) UPDATE -> . update id set LCAMPOS where LEXP
    (121) DELETE -> . delete r_from id where LEXP
    (122) DELETE -> . delete r_from id
    (25) ALTER -> . alter databases id RO
    (26) ALTER -> . altertable
    (22) DROP -> . drop table id
    (23) DROP -> . drop databases if exist id
    (24) DROP -> . drop databases id
    (21) INSERT -> . insert into id values para LEXP parc
    (84) CREATETYPE -> . create type id as enum para LEXP parc
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end
    (48) CREATEDB -> . create RD if not exist id
    (49) CREATEDB -> . create RD if not exist id OPCCDB
    (50) CREATEDB -> . create RD id
    (51) CREATEDB -> . create RD id OPCCDB
    (47) SHOWDB -> . show databases
    (29) altertable -> . alter table id OP

    select          shift and go to state 15
    create          shift and go to state 16
    update          shift and go to state 17
    delete          shift and go to state 18
    alter           shift and go to state 19
    drop            shift and go to state 21
    insert          shift and go to state 22
    case            shift and go to state 23
    show            shift and go to state 24

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    SELECT                         shift and go to state 4
    CREATETABLE                    shift and go to state 5
    UPDATE                         shift and go to state 6
    DELETE                         shift and go to state 7
    ALTER                          shift and go to state 8
    DROP                           shift and go to state 9
    INSERT                         shift and go to state 10
    CREATETYPE                     shift and go to state 11
    CASE                           shift and go to state 12
    CREATEDB                       shift and go to state 13
    SHOWDB                         shift and go to state 14
    altertable                     shift and go to state 20

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . SELECT ptcoma
    (5) instruccion -> . CREATETABLE
    (6) instruccion -> . UPDATE ptcoma
    (7) instruccion -> . DELETE ptcoma
    (8) instruccion -> . ALTER ptcoma
    (9) instruccion -> . DROP ptcoma
    (10) instruccion -> . INSERT ptcoma
    (11) instruccion -> . CREATETYPE ptcoma
    (12) instruccion -> . CASE
    (13) instruccion -> . CREATEDB ptcoma
    (14) instruccion -> . SHOWDB ptcoma
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (61) CREATETABLE -> . create table id para LDEF parc ptcoma
    (62) CREATETABLE -> . create table id para LDEF parc HERENCIA ptcoma
    (117) UPDATE -> . update id set LCAMPOS where LEXP
    (121) DELETE -> . delete r_from id where LEXP
    (122) DELETE -> . delete r_from id
    (25) ALTER -> . alter databases id RO
    (26) ALTER -> . altertable
    (22) DROP -> . drop table id
    (23) DROP -> . drop databases if exist id
    (24) DROP -> . drop databases id
    (21) INSERT -> . insert into id values para LEXP parc
    (84) CREATETYPE -> . create type id as enum para LEXP parc
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end
    (48) CREATEDB -> . create RD if not exist id
    (49) CREATEDB -> . create RD if not exist id OPCCDB
    (50) CREATEDB -> . create RD id
    (51) CREATEDB -> . create RD id OPCCDB
    (47) SHOWDB -> . show databases
    (29) altertable -> . alter table id OP

    $end            reduce using rule 1 (init -> instrucciones .)
    select          shift and go to state 15
    create          shift and go to state 16
    update          shift and go to state 17
    delete          shift and go to state 18
    alter           shift and go to state 19
    drop            shift and go to state 21
    insert          shift and go to state 22
    case            shift and go to state 23
    show            shift and go to state 24

    instruccion                    shift and go to state 25
    SELECT                         shift and go to state 4
    CREATETABLE                    shift and go to state 5
    UPDATE                         shift and go to state 6
    DELETE                         shift and go to state 7
    ALTER                          shift and go to state 8
    DROP                           shift and go to state 9
    INSERT                         shift and go to state 10
    CREATETYPE                     shift and go to state 11
    CASE                           shift and go to state 12
    CREATEDB                       shift and go to state 13
    SHOWDB                         shift and go to state 14
    altertable                     shift and go to state 20

state 3

    (3) instrucciones -> instruccion .

    select          reduce using rule 3 (instrucciones -> instruccion .)
    create          reduce using rule 3 (instrucciones -> instruccion .)
    update          reduce using rule 3 (instrucciones -> instruccion .)
    delete          reduce using rule 3 (instrucciones -> instruccion .)
    alter           reduce using rule 3 (instrucciones -> instruccion .)
    drop            reduce using rule 3 (instrucciones -> instruccion .)
    insert          reduce using rule 3 (instrucciones -> instruccion .)
    case            reduce using rule 3 (instrucciones -> instruccion .)
    show            reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> SELECT . ptcoma

    ptcoma          shift and go to state 26


state 5

    (5) instruccion -> CREATETABLE .

    select          reduce using rule 5 (instruccion -> CREATETABLE .)
    create          reduce using rule 5 (instruccion -> CREATETABLE .)
    update          reduce using rule 5 (instruccion -> CREATETABLE .)
    delete          reduce using rule 5 (instruccion -> CREATETABLE .)
    alter           reduce using rule 5 (instruccion -> CREATETABLE .)
    drop            reduce using rule 5 (instruccion -> CREATETABLE .)
    insert          reduce using rule 5 (instruccion -> CREATETABLE .)
    case            reduce using rule 5 (instruccion -> CREATETABLE .)
    show            reduce using rule 5 (instruccion -> CREATETABLE .)
    $end            reduce using rule 5 (instruccion -> CREATETABLE .)


state 6

    (6) instruccion -> UPDATE . ptcoma

    ptcoma          shift and go to state 27


state 7

    (7) instruccion -> DELETE . ptcoma

    ptcoma          shift and go to state 28


state 8

    (8) instruccion -> ALTER . ptcoma

    ptcoma          shift and go to state 29


state 9

    (9) instruccion -> DROP . ptcoma

    ptcoma          shift and go to state 30


state 10

    (10) instruccion -> INSERT . ptcoma

    ptcoma          shift and go to state 31


state 11

    (11) instruccion -> CREATETYPE . ptcoma

    ptcoma          shift and go to state 32


state 12

    (12) instruccion -> CASE .

    select          reduce using rule 12 (instruccion -> CASE .)
    create          reduce using rule 12 (instruccion -> CASE .)
    update          reduce using rule 12 (instruccion -> CASE .)
    delete          reduce using rule 12 (instruccion -> CASE .)
    alter           reduce using rule 12 (instruccion -> CASE .)
    drop            reduce using rule 12 (instruccion -> CASE .)
    insert          reduce using rule 12 (instruccion -> CASE .)
    case            reduce using rule 12 (instruccion -> CASE .)
    show            reduce using rule 12 (instruccion -> CASE .)
    $end            reduce using rule 12 (instruccion -> CASE .)


state 13

    (13) instruccion -> CREATEDB . ptcoma

    ptcoma          shift and go to state 33


state 14

    (14) instruccion -> SHOWDB . ptcoma

    ptcoma          shift and go to state 34


state 15

    (85) SELECT -> select . distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> select . LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> select . LEXP LIMIT COMBINING
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    distinct        shift and go to state 35
    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 36
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 16

    (61) CREATETABLE -> create . table id para LDEF parc ptcoma
    (62) CREATETABLE -> create . table id para LDEF parc HERENCIA ptcoma
    (84) CREATETYPE -> create . type id as enum para LEXP parc
    (48) CREATEDB -> create . RD if not exist id
    (49) CREATEDB -> create . RD if not exist id OPCCDB
    (50) CREATEDB -> create . RD id
    (51) CREATEDB -> create . RD id OPCCDB
    (55) RD -> . or replace databases
    (56) RD -> . databases

    table           shift and go to state 63
    type            shift and go to state 64
    or              shift and go to state 66
    databases       shift and go to state 67

    RD                             shift and go to state 65

state 17

    (117) UPDATE -> update . id set LCAMPOS where LEXP

    id              shift and go to state 68


state 18

    (121) DELETE -> delete . r_from id where LEXP
    (122) DELETE -> delete . r_from id

    r_from          shift and go to state 69


state 19

    (25) ALTER -> alter . databases id RO
    (29) altertable -> alter . table id OP

    databases       shift and go to state 70
    table           shift and go to state 71


state 20

    (26) ALTER -> altertable .

    ptcoma          reduce using rule 26 (ALTER -> altertable .)


state 21

    (22) DROP -> drop . table id
    (23) DROP -> drop . databases if exist id
    (24) DROP -> drop . databases id

    table           shift and go to state 72
    databases       shift and go to state 73


state 22

    (21) INSERT -> insert . into id values para LEXP parc

    into            shift and go to state 74


state 23

    (15) CASE -> case . LISTAWHEN ELSE end
    (16) CASE -> case . LISTAWHEN end
    (17) LISTAWHEN -> . LISTAWHEN WHEN
    (18) LISTAWHEN -> . WHEN
    (19) WHEN -> . when LEXP then LEXP

    when            shift and go to state 77

    LISTAWHEN                      shift and go to state 75
    WHEN                           shift and go to state 76

state 24

    (47) SHOWDB -> show . databases

    databases       shift and go to state 78


state 25

    (2) instrucciones -> instrucciones instruccion .

    select          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    create          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    update          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    delete          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    alter           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    drop            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    insert          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    case            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    show            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 26

    (4) instruccion -> SELECT ptcoma .

    select          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    create          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    update          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    delete          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    alter           reduce using rule 4 (instruccion -> SELECT ptcoma .)
    drop            reduce using rule 4 (instruccion -> SELECT ptcoma .)
    insert          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    case            reduce using rule 4 (instruccion -> SELECT ptcoma .)
    show            reduce using rule 4 (instruccion -> SELECT ptcoma .)
    $end            reduce using rule 4 (instruccion -> SELECT ptcoma .)


state 27

    (6) instruccion -> UPDATE ptcoma .

    select          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    create          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    update          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    delete          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    alter           reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    drop            reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    insert          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    case            reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    show            reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    $end            reduce using rule 6 (instruccion -> UPDATE ptcoma .)


state 28

    (7) instruccion -> DELETE ptcoma .

    select          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    create          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    update          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    delete          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    alter           reduce using rule 7 (instruccion -> DELETE ptcoma .)
    drop            reduce using rule 7 (instruccion -> DELETE ptcoma .)
    insert          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    case            reduce using rule 7 (instruccion -> DELETE ptcoma .)
    show            reduce using rule 7 (instruccion -> DELETE ptcoma .)
    $end            reduce using rule 7 (instruccion -> DELETE ptcoma .)


state 29

    (8) instruccion -> ALTER ptcoma .

    select          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    create          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    update          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    delete          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    alter           reduce using rule 8 (instruccion -> ALTER ptcoma .)
    drop            reduce using rule 8 (instruccion -> ALTER ptcoma .)
    insert          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    case            reduce using rule 8 (instruccion -> ALTER ptcoma .)
    show            reduce using rule 8 (instruccion -> ALTER ptcoma .)
    $end            reduce using rule 8 (instruccion -> ALTER ptcoma .)


state 30

    (9) instruccion -> DROP ptcoma .

    select          reduce using rule 9 (instruccion -> DROP ptcoma .)
    create          reduce using rule 9 (instruccion -> DROP ptcoma .)
    update          reduce using rule 9 (instruccion -> DROP ptcoma .)
    delete          reduce using rule 9 (instruccion -> DROP ptcoma .)
    alter           reduce using rule 9 (instruccion -> DROP ptcoma .)
    drop            reduce using rule 9 (instruccion -> DROP ptcoma .)
    insert          reduce using rule 9 (instruccion -> DROP ptcoma .)
    case            reduce using rule 9 (instruccion -> DROP ptcoma .)
    show            reduce using rule 9 (instruccion -> DROP ptcoma .)
    $end            reduce using rule 9 (instruccion -> DROP ptcoma .)


state 31

    (10) instruccion -> INSERT ptcoma .

    select          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    create          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    update          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    delete          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    alter           reduce using rule 10 (instruccion -> INSERT ptcoma .)
    drop            reduce using rule 10 (instruccion -> INSERT ptcoma .)
    insert          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    case            reduce using rule 10 (instruccion -> INSERT ptcoma .)
    show            reduce using rule 10 (instruccion -> INSERT ptcoma .)
    $end            reduce using rule 10 (instruccion -> INSERT ptcoma .)


state 32

    (11) instruccion -> CREATETYPE ptcoma .

    select          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    create          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    update          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    delete          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    alter           reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    drop            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    insert          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    case            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    show            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    $end            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)


state 33

    (13) instruccion -> CREATEDB ptcoma .

    select          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    create          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    update          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    delete          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    alter           reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    drop            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    insert          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    case            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    show            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    $end            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)


state 34

    (14) instruccion -> SHOWDB ptcoma .

    select          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    create          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    update          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    delete          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    alter           reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    drop            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    insert          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    case            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    show            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    $end            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)


state 35

    (85) SELECT -> select distinct . LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 79
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 36

    (86) SELECT -> select LEXP . r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> select LEXP . LIMIT COMBINING
    (124) LEXP -> LEXP . coma EXP
    (88) LIMIT -> . limit int
    (89) LIMIT -> . limit all
    (90) LIMIT -> . offset int
    (91) LIMIT -> . limit int offset int
    (92) LIMIT -> . offset int limit int
    (93) LIMIT -> . limit all offset int
    (94) LIMIT -> . offset int limit all
    (95) LIMIT -> .

  ! shift/reduce conflict for r_from resolved as shift
  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for limit resolved as shift
  ! shift/reduce conflict for offset resolved as shift
    r_from          shift and go to state 80
    coma            shift and go to state 82
    limit           shift and go to state 83
    offset          shift and go to state 84
    union           reduce using rule 95 (LIMIT -> .)
    intersect       reduce using rule 95 (LIMIT -> .)
    except          reduce using rule 95 (LIMIT -> .)
    ptcoma          reduce using rule 95 (LIMIT -> .)
    mas             reduce using rule 95 (LIMIT -> .)
    menos           reduce using rule 95 (LIMIT -> .)
    multiplicacion  reduce using rule 95 (LIMIT -> .)
    division        reduce using rule 95 (LIMIT -> .)
    modulo          reduce using rule 95 (LIMIT -> .)
    elevado         reduce using rule 95 (LIMIT -> .)
    and             reduce using rule 95 (LIMIT -> .)
    or              reduce using rule 95 (LIMIT -> .)
    mayor           reduce using rule 95 (LIMIT -> .)
    menor           reduce using rule 95 (LIMIT -> .)
    mayor_igual     reduce using rule 95 (LIMIT -> .)
    menor_igual     reduce using rule 95 (LIMIT -> .)
    igual           reduce using rule 95 (LIMIT -> .)
    diferente1      reduce using rule 95 (LIMIT -> .)
    diferente2      reduce using rule 95 (LIMIT -> .)
    punto           reduce using rule 95 (LIMIT -> .)
    as              reduce using rule 95 (LIMIT -> .)
    cadenaString    reduce using rule 95 (LIMIT -> .)
    id              reduce using rule 95 (LIMIT -> .)
    cadena          reduce using rule 95 (LIMIT -> .)
    between         reduce using rule 95 (LIMIT -> .)
    in              reduce using rule 95 (LIMIT -> .)
    not             reduce using rule 95 (LIMIT -> .)
    is              reduce using rule 95 (LIMIT -> .)
    isnull          reduce using rule 95 (LIMIT -> .)
    notnull         reduce using rule 95 (LIMIT -> .)
    parc            reduce using rule 95 (LIMIT -> .)
    then            reduce using rule 95 (LIMIT -> .)
    where           reduce using rule 95 (LIMIT -> .)
    group           reduce using rule 95 (LIMIT -> .)
    having          reduce using rule 95 (LIMIT -> .)
    order           reduce using rule 95 (LIMIT -> .)
    end             reduce using rule 95 (LIMIT -> .)
    else            reduce using rule 95 (LIMIT -> .)
    when            reduce using rule 95 (LIMIT -> .)
    constraint      reduce using rule 95 (LIMIT -> .)
    default         reduce using rule 95 (LIMIT -> .)
    primary         reduce using rule 95 (LIMIT -> .)
    references      reduce using rule 95 (LIMIT -> .)
    null            reduce using rule 95 (LIMIT -> .)
    asc             reduce using rule 95 (LIMIT -> .)
    desc            reduce using rule 95 (LIMIT -> .)

  ! r_from          [ reduce using rule 95 (LIMIT -> .) ]
  ! coma            [ reduce using rule 95 (LIMIT -> .) ]
  ! limit           [ reduce using rule 95 (LIMIT -> .) ]
  ! offset          [ reduce using rule 95 (LIMIT -> .) ]

    LIMIT                          shift and go to state 81

state 37

    (125) LEXP -> EXP .
    (163) EXP -> EXP . mas EXP
    (164) EXP -> EXP . menos EXP
    (165) EXP -> EXP . multiplicacion EXP
    (166) EXP -> EXP . division EXP
    (167) EXP -> EXP . modulo EXP
    (168) EXP -> EXP . elevado EXP
    (169) EXP -> EXP . and EXP
    (170) EXP -> EXP . or EXP
    (171) EXP -> EXP . mayor EXP
    (172) EXP -> EXP . menor EXP
    (173) EXP -> EXP . mayor_igual EXP
    (174) EXP -> EXP . menor_igual EXP
    (175) EXP -> EXP . igual EXP
    (176) EXP -> EXP . diferente1 EXP
    (177) EXP -> EXP . diferente2 EXP
    (178) EXP -> EXP . punto EXP
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (213) PREDICADOS -> EXP . between EXP
    (214) PREDICADOS -> EXP . in para LEXP parc
    (215) PREDICADOS -> EXP . not in para LEXP parc
    (216) PREDICADOS -> EXP . not between EXP
    (217) PREDICADOS -> EXP . between symetric EXP
    (218) PREDICADOS -> EXP . not between symetric EXP
    (219) PREDICADOS -> EXP . is distinct r_from EXP
    (220) PREDICADOS -> EXP . is not distinct r_from EXP
    (221) PREDICADOS -> EXP . is PNULL
    (222) PREDICADOS -> EXP . isnull
    (223) PREDICADOS -> EXP . notnull
    (224) PREDICADOS -> EXP . is true
    (225) PREDICADOS -> EXP . is not true
    (226) PREDICADOS -> EXP . is false
    (227) PREDICADOS -> EXP . is not false
    (228) PREDICADOS -> EXP . is unknown
    (229) PREDICADOS -> EXP . is not unknown

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for punto resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
    r_from          reduce using rule 125 (LEXP -> EXP .)
    coma            reduce using rule 125 (LEXP -> EXP .)
    limit           reduce using rule 125 (LEXP -> EXP .)
    offset          reduce using rule 125 (LEXP -> EXP .)
    union           reduce using rule 125 (LEXP -> EXP .)
    intersect       reduce using rule 125 (LEXP -> EXP .)
    except          reduce using rule 125 (LEXP -> EXP .)
    ptcoma          reduce using rule 125 (LEXP -> EXP .)
    parc            reduce using rule 125 (LEXP -> EXP .)
    then            reduce using rule 125 (LEXP -> EXP .)
    where           reduce using rule 125 (LEXP -> EXP .)
    group           reduce using rule 125 (LEXP -> EXP .)
    having          reduce using rule 125 (LEXP -> EXP .)
    order           reduce using rule 125 (LEXP -> EXP .)
    end             reduce using rule 125 (LEXP -> EXP .)
    else            reduce using rule 125 (LEXP -> EXP .)
    when            reduce using rule 125 (LEXP -> EXP .)
    constraint      reduce using rule 125 (LEXP -> EXP .)
    default         reduce using rule 125 (LEXP -> EXP .)
    primary         reduce using rule 125 (LEXP -> EXP .)
    references      reduce using rule 125 (LEXP -> EXP .)
    null            reduce using rule 125 (LEXP -> EXP .)
    asc             reduce using rule 125 (LEXP -> EXP .)
    desc            reduce using rule 125 (LEXP -> EXP .)
    mas             shift and go to state 85
    menos           shift and go to state 86
    multiplicacion  shift and go to state 87
    division        shift and go to state 88
    modulo          shift and go to state 89
    elevado         shift and go to state 90
    and             shift and go to state 91
    or              shift and go to state 92
    mayor           shift and go to state 93
    menor           shift and go to state 94
    mayor_igual     shift and go to state 95
    menor_igual     shift and go to state 96
    igual           shift and go to state 97
    diferente1      shift and go to state 98
    diferente2      shift and go to state 99
    punto           shift and go to state 100
    as              shift and go to state 101
    cadenaString    shift and go to state 102
    id              shift and go to state 103
    cadena          shift and go to state 104
    between         shift and go to state 105
    in              shift and go to state 106
    not             shift and go to state 107
    is              shift and go to state 108
    isnull          shift and go to state 109
    notnull         shift and go to state 110

  ! mas             [ reduce using rule 125 (LEXP -> EXP .) ]
  ! menos           [ reduce using rule 125 (LEXP -> EXP .) ]
  ! multiplicacion  [ reduce using rule 125 (LEXP -> EXP .) ]
  ! division        [ reduce using rule 125 (LEXP -> EXP .) ]
  ! modulo          [ reduce using rule 125 (LEXP -> EXP .) ]
  ! elevado         [ reduce using rule 125 (LEXP -> EXP .) ]
  ! and             [ reduce using rule 125 (LEXP -> EXP .) ]
  ! or              [ reduce using rule 125 (LEXP -> EXP .) ]
  ! mayor           [ reduce using rule 125 (LEXP -> EXP .) ]
  ! menor           [ reduce using rule 125 (LEXP -> EXP .) ]
  ! mayor_igual     [ reduce using rule 125 (LEXP -> EXP .) ]
  ! menor_igual     [ reduce using rule 125 (LEXP -> EXP .) ]
  ! igual           [ reduce using rule 125 (LEXP -> EXP .) ]
  ! diferente1      [ reduce using rule 125 (LEXP -> EXP .) ]
  ! diferente2      [ reduce using rule 125 (LEXP -> EXP .) ]
  ! punto           [ reduce using rule 125 (LEXP -> EXP .) ]
  ! as              [ reduce using rule 125 (LEXP -> EXP .) ]
  ! cadenaString    [ reduce using rule 125 (LEXP -> EXP .) ]
  ! id              [ reduce using rule 125 (LEXP -> EXP .) ]
  ! cadena          [ reduce using rule 125 (LEXP -> EXP .) ]
  ! between         [ reduce using rule 125 (LEXP -> EXP .) ]
  ! in              [ reduce using rule 125 (LEXP -> EXP .) ]
  ! not             [ reduce using rule 125 (LEXP -> EXP .) ]
  ! is              [ reduce using rule 125 (LEXP -> EXP .) ]
  ! isnull          [ reduce using rule 125 (LEXP -> EXP .) ]
  ! notnull         [ reduce using rule 125 (LEXP -> EXP .) ]


state 38

    (179) EXP -> mas . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 111
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 39

    (180) EXP -> menos . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 112
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 40

    (212) EXP -> multiplicacion .

    r_from          reduce using rule 212 (EXP -> multiplicacion .)
    coma            reduce using rule 212 (EXP -> multiplicacion .)
    limit           reduce using rule 212 (EXP -> multiplicacion .)
    offset          reduce using rule 212 (EXP -> multiplicacion .)
    union           reduce using rule 212 (EXP -> multiplicacion .)
    intersect       reduce using rule 212 (EXP -> multiplicacion .)
    except          reduce using rule 212 (EXP -> multiplicacion .)
    ptcoma          reduce using rule 212 (EXP -> multiplicacion .)
    mas             reduce using rule 212 (EXP -> multiplicacion .)
    menos           reduce using rule 212 (EXP -> multiplicacion .)
    multiplicacion  reduce using rule 212 (EXP -> multiplicacion .)
    division        reduce using rule 212 (EXP -> multiplicacion .)
    modulo          reduce using rule 212 (EXP -> multiplicacion .)
    elevado         reduce using rule 212 (EXP -> multiplicacion .)
    and             reduce using rule 212 (EXP -> multiplicacion .)
    or              reduce using rule 212 (EXP -> multiplicacion .)
    mayor           reduce using rule 212 (EXP -> multiplicacion .)
    menor           reduce using rule 212 (EXP -> multiplicacion .)
    mayor_igual     reduce using rule 212 (EXP -> multiplicacion .)
    menor_igual     reduce using rule 212 (EXP -> multiplicacion .)
    igual           reduce using rule 212 (EXP -> multiplicacion .)
    diferente1      reduce using rule 212 (EXP -> multiplicacion .)
    diferente2      reduce using rule 212 (EXP -> multiplicacion .)
    punto           reduce using rule 212 (EXP -> multiplicacion .)
    as              reduce using rule 212 (EXP -> multiplicacion .)
    cadenaString    reduce using rule 212 (EXP -> multiplicacion .)
    id              reduce using rule 212 (EXP -> multiplicacion .)
    cadena          reduce using rule 212 (EXP -> multiplicacion .)
    between         reduce using rule 212 (EXP -> multiplicacion .)
    in              reduce using rule 212 (EXP -> multiplicacion .)
    not             reduce using rule 212 (EXP -> multiplicacion .)
    is              reduce using rule 212 (EXP -> multiplicacion .)
    isnull          reduce using rule 212 (EXP -> multiplicacion .)
    notnull         reduce using rule 212 (EXP -> multiplicacion .)
    parc            reduce using rule 212 (EXP -> multiplicacion .)
    then            reduce using rule 212 (EXP -> multiplicacion .)
    where           reduce using rule 212 (EXP -> multiplicacion .)
    group           reduce using rule 212 (EXP -> multiplicacion .)
    having          reduce using rule 212 (EXP -> multiplicacion .)
    order           reduce using rule 212 (EXP -> multiplicacion .)
    end             reduce using rule 212 (EXP -> multiplicacion .)
    else            reduce using rule 212 (EXP -> multiplicacion .)
    when            reduce using rule 212 (EXP -> multiplicacion .)
    constraint      reduce using rule 212 (EXP -> multiplicacion .)
    default         reduce using rule 212 (EXP -> multiplicacion .)
    primary         reduce using rule 212 (EXP -> multiplicacion .)
    references      reduce using rule 212 (EXP -> multiplicacion .)
    null            reduce using rule 212 (EXP -> multiplicacion .)
    asc             reduce using rule 212 (EXP -> multiplicacion .)
    desc            reduce using rule 212 (EXP -> multiplicacion .)


state 41

    (181) EXP -> not . EXP
    (77) PNULL -> not . null
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    null            shift and go to state 114
    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 113
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 42

    (182) EXP -> para . EXP parc
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 115
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 43

    (183) EXP -> int .

    r_from          reduce using rule 183 (EXP -> int .)
    coma            reduce using rule 183 (EXP -> int .)
    limit           reduce using rule 183 (EXP -> int .)
    offset          reduce using rule 183 (EXP -> int .)
    union           reduce using rule 183 (EXP -> int .)
    intersect       reduce using rule 183 (EXP -> int .)
    except          reduce using rule 183 (EXP -> int .)
    ptcoma          reduce using rule 183 (EXP -> int .)
    mas             reduce using rule 183 (EXP -> int .)
    menos           reduce using rule 183 (EXP -> int .)
    multiplicacion  reduce using rule 183 (EXP -> int .)
    division        reduce using rule 183 (EXP -> int .)
    modulo          reduce using rule 183 (EXP -> int .)
    elevado         reduce using rule 183 (EXP -> int .)
    and             reduce using rule 183 (EXP -> int .)
    or              reduce using rule 183 (EXP -> int .)
    mayor           reduce using rule 183 (EXP -> int .)
    menor           reduce using rule 183 (EXP -> int .)
    mayor_igual     reduce using rule 183 (EXP -> int .)
    menor_igual     reduce using rule 183 (EXP -> int .)
    igual           reduce using rule 183 (EXP -> int .)
    diferente1      reduce using rule 183 (EXP -> int .)
    diferente2      reduce using rule 183 (EXP -> int .)
    punto           reduce using rule 183 (EXP -> int .)
    as              reduce using rule 183 (EXP -> int .)
    cadenaString    reduce using rule 183 (EXP -> int .)
    id              reduce using rule 183 (EXP -> int .)
    cadena          reduce using rule 183 (EXP -> int .)
    between         reduce using rule 183 (EXP -> int .)
    in              reduce using rule 183 (EXP -> int .)
    not             reduce using rule 183 (EXP -> int .)
    is              reduce using rule 183 (EXP -> int .)
    isnull          reduce using rule 183 (EXP -> int .)
    notnull         reduce using rule 183 (EXP -> int .)
    parc            reduce using rule 183 (EXP -> int .)
    then            reduce using rule 183 (EXP -> int .)
    where           reduce using rule 183 (EXP -> int .)
    group           reduce using rule 183 (EXP -> int .)
    having          reduce using rule 183 (EXP -> int .)
    order           reduce using rule 183 (EXP -> int .)
    end             reduce using rule 183 (EXP -> int .)
    else            reduce using rule 183 (EXP -> int .)
    when            reduce using rule 183 (EXP -> int .)
    constraint      reduce using rule 183 (EXP -> int .)
    default         reduce using rule 183 (EXP -> int .)
    primary         reduce using rule 183 (EXP -> int .)
    references      reduce using rule 183 (EXP -> int .)
    null            reduce using rule 183 (EXP -> int .)
    asc             reduce using rule 183 (EXP -> int .)
    desc            reduce using rule 183 (EXP -> int .)


state 44

    (184) EXP -> decimales .

    r_from          reduce using rule 184 (EXP -> decimales .)
    coma            reduce using rule 184 (EXP -> decimales .)
    limit           reduce using rule 184 (EXP -> decimales .)
    offset          reduce using rule 184 (EXP -> decimales .)
    union           reduce using rule 184 (EXP -> decimales .)
    intersect       reduce using rule 184 (EXP -> decimales .)
    except          reduce using rule 184 (EXP -> decimales .)
    ptcoma          reduce using rule 184 (EXP -> decimales .)
    mas             reduce using rule 184 (EXP -> decimales .)
    menos           reduce using rule 184 (EXP -> decimales .)
    multiplicacion  reduce using rule 184 (EXP -> decimales .)
    division        reduce using rule 184 (EXP -> decimales .)
    modulo          reduce using rule 184 (EXP -> decimales .)
    elevado         reduce using rule 184 (EXP -> decimales .)
    and             reduce using rule 184 (EXP -> decimales .)
    or              reduce using rule 184 (EXP -> decimales .)
    mayor           reduce using rule 184 (EXP -> decimales .)
    menor           reduce using rule 184 (EXP -> decimales .)
    mayor_igual     reduce using rule 184 (EXP -> decimales .)
    menor_igual     reduce using rule 184 (EXP -> decimales .)
    igual           reduce using rule 184 (EXP -> decimales .)
    diferente1      reduce using rule 184 (EXP -> decimales .)
    diferente2      reduce using rule 184 (EXP -> decimales .)
    punto           reduce using rule 184 (EXP -> decimales .)
    as              reduce using rule 184 (EXP -> decimales .)
    cadenaString    reduce using rule 184 (EXP -> decimales .)
    id              reduce using rule 184 (EXP -> decimales .)
    cadena          reduce using rule 184 (EXP -> decimales .)
    between         reduce using rule 184 (EXP -> decimales .)
    in              reduce using rule 184 (EXP -> decimales .)
    not             reduce using rule 184 (EXP -> decimales .)
    is              reduce using rule 184 (EXP -> decimales .)
    isnull          reduce using rule 184 (EXP -> decimales .)
    notnull         reduce using rule 184 (EXP -> decimales .)
    parc            reduce using rule 184 (EXP -> decimales .)
    then            reduce using rule 184 (EXP -> decimales .)
    where           reduce using rule 184 (EXP -> decimales .)
    group           reduce using rule 184 (EXP -> decimales .)
    having          reduce using rule 184 (EXP -> decimales .)
    order           reduce using rule 184 (EXP -> decimales .)
    end             reduce using rule 184 (EXP -> decimales .)
    else            reduce using rule 184 (EXP -> decimales .)
    when            reduce using rule 184 (EXP -> decimales .)
    constraint      reduce using rule 184 (EXP -> decimales .)
    default         reduce using rule 184 (EXP -> decimales .)
    primary         reduce using rule 184 (EXP -> decimales .)
    references      reduce using rule 184 (EXP -> decimales .)
    null            reduce using rule 184 (EXP -> decimales .)
    asc             reduce using rule 184 (EXP -> decimales .)
    desc            reduce using rule 184 (EXP -> decimales .)


state 45

    (185) EXP -> cadena .
    (201) EXP -> cadena . like cadena
    (202) EXP -> cadena . not like cadena

  ! shift/reduce conflict for not resolved as shift
    r_from          reduce using rule 185 (EXP -> cadena .)
    coma            reduce using rule 185 (EXP -> cadena .)
    limit           reduce using rule 185 (EXP -> cadena .)
    offset          reduce using rule 185 (EXP -> cadena .)
    union           reduce using rule 185 (EXP -> cadena .)
    intersect       reduce using rule 185 (EXP -> cadena .)
    except          reduce using rule 185 (EXP -> cadena .)
    ptcoma          reduce using rule 185 (EXP -> cadena .)
    mas             reduce using rule 185 (EXP -> cadena .)
    menos           reduce using rule 185 (EXP -> cadena .)
    multiplicacion  reduce using rule 185 (EXP -> cadena .)
    division        reduce using rule 185 (EXP -> cadena .)
    modulo          reduce using rule 185 (EXP -> cadena .)
    elevado         reduce using rule 185 (EXP -> cadena .)
    and             reduce using rule 185 (EXP -> cadena .)
    or              reduce using rule 185 (EXP -> cadena .)
    mayor           reduce using rule 185 (EXP -> cadena .)
    menor           reduce using rule 185 (EXP -> cadena .)
    mayor_igual     reduce using rule 185 (EXP -> cadena .)
    menor_igual     reduce using rule 185 (EXP -> cadena .)
    igual           reduce using rule 185 (EXP -> cadena .)
    diferente1      reduce using rule 185 (EXP -> cadena .)
    diferente2      reduce using rule 185 (EXP -> cadena .)
    punto           reduce using rule 185 (EXP -> cadena .)
    as              reduce using rule 185 (EXP -> cadena .)
    cadenaString    reduce using rule 185 (EXP -> cadena .)
    id              reduce using rule 185 (EXP -> cadena .)
    cadena          reduce using rule 185 (EXP -> cadena .)
    between         reduce using rule 185 (EXP -> cadena .)
    in              reduce using rule 185 (EXP -> cadena .)
    is              reduce using rule 185 (EXP -> cadena .)
    isnull          reduce using rule 185 (EXP -> cadena .)
    notnull         reduce using rule 185 (EXP -> cadena .)
    parc            reduce using rule 185 (EXP -> cadena .)
    then            reduce using rule 185 (EXP -> cadena .)
    where           reduce using rule 185 (EXP -> cadena .)
    group           reduce using rule 185 (EXP -> cadena .)
    having          reduce using rule 185 (EXP -> cadena .)
    order           reduce using rule 185 (EXP -> cadena .)
    end             reduce using rule 185 (EXP -> cadena .)
    else            reduce using rule 185 (EXP -> cadena .)
    when            reduce using rule 185 (EXP -> cadena .)
    constraint      reduce using rule 185 (EXP -> cadena .)
    default         reduce using rule 185 (EXP -> cadena .)
    primary         reduce using rule 185 (EXP -> cadena .)
    references      reduce using rule 185 (EXP -> cadena .)
    null            reduce using rule 185 (EXP -> cadena .)
    asc             reduce using rule 185 (EXP -> cadena .)
    desc            reduce using rule 185 (EXP -> cadena .)
    like            shift and go to state 116
    not             shift and go to state 117

  ! not             [ reduce using rule 185 (EXP -> cadena .) ]


state 46

    (186) EXP -> cadenaString .

    r_from          reduce using rule 186 (EXP -> cadenaString .)
    coma            reduce using rule 186 (EXP -> cadenaString .)
    limit           reduce using rule 186 (EXP -> cadenaString .)
    offset          reduce using rule 186 (EXP -> cadenaString .)
    union           reduce using rule 186 (EXP -> cadenaString .)
    intersect       reduce using rule 186 (EXP -> cadenaString .)
    except          reduce using rule 186 (EXP -> cadenaString .)
    ptcoma          reduce using rule 186 (EXP -> cadenaString .)
    mas             reduce using rule 186 (EXP -> cadenaString .)
    menos           reduce using rule 186 (EXP -> cadenaString .)
    multiplicacion  reduce using rule 186 (EXP -> cadenaString .)
    division        reduce using rule 186 (EXP -> cadenaString .)
    modulo          reduce using rule 186 (EXP -> cadenaString .)
    elevado         reduce using rule 186 (EXP -> cadenaString .)
    and             reduce using rule 186 (EXP -> cadenaString .)
    or              reduce using rule 186 (EXP -> cadenaString .)
    mayor           reduce using rule 186 (EXP -> cadenaString .)
    menor           reduce using rule 186 (EXP -> cadenaString .)
    mayor_igual     reduce using rule 186 (EXP -> cadenaString .)
    menor_igual     reduce using rule 186 (EXP -> cadenaString .)
    igual           reduce using rule 186 (EXP -> cadenaString .)
    diferente1      reduce using rule 186 (EXP -> cadenaString .)
    diferente2      reduce using rule 186 (EXP -> cadenaString .)
    punto           reduce using rule 186 (EXP -> cadenaString .)
    as              reduce using rule 186 (EXP -> cadenaString .)
    cadenaString    reduce using rule 186 (EXP -> cadenaString .)
    id              reduce using rule 186 (EXP -> cadenaString .)
    cadena          reduce using rule 186 (EXP -> cadenaString .)
    between         reduce using rule 186 (EXP -> cadenaString .)
    in              reduce using rule 186 (EXP -> cadenaString .)
    not             reduce using rule 186 (EXP -> cadenaString .)
    is              reduce using rule 186 (EXP -> cadenaString .)
    isnull          reduce using rule 186 (EXP -> cadenaString .)
    notnull         reduce using rule 186 (EXP -> cadenaString .)
    parc            reduce using rule 186 (EXP -> cadenaString .)
    then            reduce using rule 186 (EXP -> cadenaString .)
    where           reduce using rule 186 (EXP -> cadenaString .)
    group           reduce using rule 186 (EXP -> cadenaString .)
    having          reduce using rule 186 (EXP -> cadenaString .)
    order           reduce using rule 186 (EXP -> cadenaString .)
    end             reduce using rule 186 (EXP -> cadenaString .)
    else            reduce using rule 186 (EXP -> cadenaString .)
    when            reduce using rule 186 (EXP -> cadenaString .)
    constraint      reduce using rule 186 (EXP -> cadenaString .)
    default         reduce using rule 186 (EXP -> cadenaString .)
    primary         reduce using rule 186 (EXP -> cadenaString .)
    references      reduce using rule 186 (EXP -> cadenaString .)
    null            reduce using rule 186 (EXP -> cadenaString .)
    asc             reduce using rule 186 (EXP -> cadenaString .)
    desc            reduce using rule 186 (EXP -> cadenaString .)


state 47

    (187) EXP -> true .

    r_from          reduce using rule 187 (EXP -> true .)
    coma            reduce using rule 187 (EXP -> true .)
    limit           reduce using rule 187 (EXP -> true .)
    offset          reduce using rule 187 (EXP -> true .)
    union           reduce using rule 187 (EXP -> true .)
    intersect       reduce using rule 187 (EXP -> true .)
    except          reduce using rule 187 (EXP -> true .)
    ptcoma          reduce using rule 187 (EXP -> true .)
    mas             reduce using rule 187 (EXP -> true .)
    menos           reduce using rule 187 (EXP -> true .)
    multiplicacion  reduce using rule 187 (EXP -> true .)
    division        reduce using rule 187 (EXP -> true .)
    modulo          reduce using rule 187 (EXP -> true .)
    elevado         reduce using rule 187 (EXP -> true .)
    and             reduce using rule 187 (EXP -> true .)
    or              reduce using rule 187 (EXP -> true .)
    mayor           reduce using rule 187 (EXP -> true .)
    menor           reduce using rule 187 (EXP -> true .)
    mayor_igual     reduce using rule 187 (EXP -> true .)
    menor_igual     reduce using rule 187 (EXP -> true .)
    igual           reduce using rule 187 (EXP -> true .)
    diferente1      reduce using rule 187 (EXP -> true .)
    diferente2      reduce using rule 187 (EXP -> true .)
    punto           reduce using rule 187 (EXP -> true .)
    as              reduce using rule 187 (EXP -> true .)
    cadenaString    reduce using rule 187 (EXP -> true .)
    id              reduce using rule 187 (EXP -> true .)
    cadena          reduce using rule 187 (EXP -> true .)
    between         reduce using rule 187 (EXP -> true .)
    in              reduce using rule 187 (EXP -> true .)
    not             reduce using rule 187 (EXP -> true .)
    is              reduce using rule 187 (EXP -> true .)
    isnull          reduce using rule 187 (EXP -> true .)
    notnull         reduce using rule 187 (EXP -> true .)
    parc            reduce using rule 187 (EXP -> true .)
    then            reduce using rule 187 (EXP -> true .)
    where           reduce using rule 187 (EXP -> true .)
    group           reduce using rule 187 (EXP -> true .)
    having          reduce using rule 187 (EXP -> true .)
    order           reduce using rule 187 (EXP -> true .)
    end             reduce using rule 187 (EXP -> true .)
    else            reduce using rule 187 (EXP -> true .)
    when            reduce using rule 187 (EXP -> true .)
    constraint      reduce using rule 187 (EXP -> true .)
    default         reduce using rule 187 (EXP -> true .)
    primary         reduce using rule 187 (EXP -> true .)
    references      reduce using rule 187 (EXP -> true .)
    null            reduce using rule 187 (EXP -> true .)
    asc             reduce using rule 187 (EXP -> true .)
    desc            reduce using rule 187 (EXP -> true .)


state 48

    (188) EXP -> false .

    r_from          reduce using rule 188 (EXP -> false .)
    coma            reduce using rule 188 (EXP -> false .)
    limit           reduce using rule 188 (EXP -> false .)
    offset          reduce using rule 188 (EXP -> false .)
    union           reduce using rule 188 (EXP -> false .)
    intersect       reduce using rule 188 (EXP -> false .)
    except          reduce using rule 188 (EXP -> false .)
    ptcoma          reduce using rule 188 (EXP -> false .)
    mas             reduce using rule 188 (EXP -> false .)
    menos           reduce using rule 188 (EXP -> false .)
    multiplicacion  reduce using rule 188 (EXP -> false .)
    division        reduce using rule 188 (EXP -> false .)
    modulo          reduce using rule 188 (EXP -> false .)
    elevado         reduce using rule 188 (EXP -> false .)
    and             reduce using rule 188 (EXP -> false .)
    or              reduce using rule 188 (EXP -> false .)
    mayor           reduce using rule 188 (EXP -> false .)
    menor           reduce using rule 188 (EXP -> false .)
    mayor_igual     reduce using rule 188 (EXP -> false .)
    menor_igual     reduce using rule 188 (EXP -> false .)
    igual           reduce using rule 188 (EXP -> false .)
    diferente1      reduce using rule 188 (EXP -> false .)
    diferente2      reduce using rule 188 (EXP -> false .)
    punto           reduce using rule 188 (EXP -> false .)
    as              reduce using rule 188 (EXP -> false .)
    cadenaString    reduce using rule 188 (EXP -> false .)
    id              reduce using rule 188 (EXP -> false .)
    cadena          reduce using rule 188 (EXP -> false .)
    between         reduce using rule 188 (EXP -> false .)
    in              reduce using rule 188 (EXP -> false .)
    not             reduce using rule 188 (EXP -> false .)
    is              reduce using rule 188 (EXP -> false .)
    isnull          reduce using rule 188 (EXP -> false .)
    notnull         reduce using rule 188 (EXP -> false .)
    parc            reduce using rule 188 (EXP -> false .)
    then            reduce using rule 188 (EXP -> false .)
    where           reduce using rule 188 (EXP -> false .)
    group           reduce using rule 188 (EXP -> false .)
    having          reduce using rule 188 (EXP -> false .)
    order           reduce using rule 188 (EXP -> false .)
    end             reduce using rule 188 (EXP -> false .)
    else            reduce using rule 188 (EXP -> false .)
    when            reduce using rule 188 (EXP -> false .)
    constraint      reduce using rule 188 (EXP -> false .)
    default         reduce using rule 188 (EXP -> false .)
    primary         reduce using rule 188 (EXP -> false .)
    references      reduce using rule 188 (EXP -> false .)
    null            reduce using rule 188 (EXP -> false .)
    asc             reduce using rule 188 (EXP -> false .)
    desc            reduce using rule 188 (EXP -> false .)


state 49

    (189) EXP -> id .
    (193) EXP -> id . para parc
    (194) EXP -> id . para LEXP parc

    r_from          reduce using rule 189 (EXP -> id .)
    coma            reduce using rule 189 (EXP -> id .)
    limit           reduce using rule 189 (EXP -> id .)
    offset          reduce using rule 189 (EXP -> id .)
    union           reduce using rule 189 (EXP -> id .)
    intersect       reduce using rule 189 (EXP -> id .)
    except          reduce using rule 189 (EXP -> id .)
    ptcoma          reduce using rule 189 (EXP -> id .)
    mas             reduce using rule 189 (EXP -> id .)
    menos           reduce using rule 189 (EXP -> id .)
    multiplicacion  reduce using rule 189 (EXP -> id .)
    division        reduce using rule 189 (EXP -> id .)
    modulo          reduce using rule 189 (EXP -> id .)
    elevado         reduce using rule 189 (EXP -> id .)
    and             reduce using rule 189 (EXP -> id .)
    or              reduce using rule 189 (EXP -> id .)
    mayor           reduce using rule 189 (EXP -> id .)
    menor           reduce using rule 189 (EXP -> id .)
    mayor_igual     reduce using rule 189 (EXP -> id .)
    menor_igual     reduce using rule 189 (EXP -> id .)
    igual           reduce using rule 189 (EXP -> id .)
    diferente1      reduce using rule 189 (EXP -> id .)
    diferente2      reduce using rule 189 (EXP -> id .)
    punto           reduce using rule 189 (EXP -> id .)
    as              reduce using rule 189 (EXP -> id .)
    cadenaString    reduce using rule 189 (EXP -> id .)
    id              reduce using rule 189 (EXP -> id .)
    cadena          reduce using rule 189 (EXP -> id .)
    between         reduce using rule 189 (EXP -> id .)
    in              reduce using rule 189 (EXP -> id .)
    not             reduce using rule 189 (EXP -> id .)
    is              reduce using rule 189 (EXP -> id .)
    isnull          reduce using rule 189 (EXP -> id .)
    notnull         reduce using rule 189 (EXP -> id .)
    parc            reduce using rule 189 (EXP -> id .)
    then            reduce using rule 189 (EXP -> id .)
    where           reduce using rule 189 (EXP -> id .)
    group           reduce using rule 189 (EXP -> id .)
    having          reduce using rule 189 (EXP -> id .)
    order           reduce using rule 189 (EXP -> id .)
    end             reduce using rule 189 (EXP -> id .)
    else            reduce using rule 189 (EXP -> id .)
    when            reduce using rule 189 (EXP -> id .)
    constraint      reduce using rule 189 (EXP -> id .)
    default         reduce using rule 189 (EXP -> id .)
    primary         reduce using rule 189 (EXP -> id .)
    references      reduce using rule 189 (EXP -> id .)
    null            reduce using rule 189 (EXP -> id .)
    asc             reduce using rule 189 (EXP -> id .)
    desc            reduce using rule 189 (EXP -> id .)
    para            shift and go to state 118


state 50

    (190) EXP -> PNULL .

    r_from          reduce using rule 190 (EXP -> PNULL .)
    coma            reduce using rule 190 (EXP -> PNULL .)
    limit           reduce using rule 190 (EXP -> PNULL .)
    offset          reduce using rule 190 (EXP -> PNULL .)
    union           reduce using rule 190 (EXP -> PNULL .)
    intersect       reduce using rule 190 (EXP -> PNULL .)
    except          reduce using rule 190 (EXP -> PNULL .)
    ptcoma          reduce using rule 190 (EXP -> PNULL .)
    mas             reduce using rule 190 (EXP -> PNULL .)
    menos           reduce using rule 190 (EXP -> PNULL .)
    multiplicacion  reduce using rule 190 (EXP -> PNULL .)
    division        reduce using rule 190 (EXP -> PNULL .)
    modulo          reduce using rule 190 (EXP -> PNULL .)
    elevado         reduce using rule 190 (EXP -> PNULL .)
    and             reduce using rule 190 (EXP -> PNULL .)
    or              reduce using rule 190 (EXP -> PNULL .)
    mayor           reduce using rule 190 (EXP -> PNULL .)
    menor           reduce using rule 190 (EXP -> PNULL .)
    mayor_igual     reduce using rule 190 (EXP -> PNULL .)
    menor_igual     reduce using rule 190 (EXP -> PNULL .)
    igual           reduce using rule 190 (EXP -> PNULL .)
    diferente1      reduce using rule 190 (EXP -> PNULL .)
    diferente2      reduce using rule 190 (EXP -> PNULL .)
    punto           reduce using rule 190 (EXP -> PNULL .)
    as              reduce using rule 190 (EXP -> PNULL .)
    cadenaString    reduce using rule 190 (EXP -> PNULL .)
    id              reduce using rule 190 (EXP -> PNULL .)
    cadena          reduce using rule 190 (EXP -> PNULL .)
    between         reduce using rule 190 (EXP -> PNULL .)
    in              reduce using rule 190 (EXP -> PNULL .)
    not             reduce using rule 190 (EXP -> PNULL .)
    is              reduce using rule 190 (EXP -> PNULL .)
    isnull          reduce using rule 190 (EXP -> PNULL .)
    notnull         reduce using rule 190 (EXP -> PNULL .)
    parc            reduce using rule 190 (EXP -> PNULL .)
    then            reduce using rule 190 (EXP -> PNULL .)
    where           reduce using rule 190 (EXP -> PNULL .)
    group           reduce using rule 190 (EXP -> PNULL .)
    having          reduce using rule 190 (EXP -> PNULL .)
    order           reduce using rule 190 (EXP -> PNULL .)
    end             reduce using rule 190 (EXP -> PNULL .)
    else            reduce using rule 190 (EXP -> PNULL .)
    when            reduce using rule 190 (EXP -> PNULL .)
    constraint      reduce using rule 190 (EXP -> PNULL .)
    default         reduce using rule 190 (EXP -> PNULL .)
    primary         reduce using rule 190 (EXP -> PNULL .)
    references      reduce using rule 190 (EXP -> PNULL .)
    null            reduce using rule 190 (EXP -> PNULL .)
    asc             reduce using rule 190 (EXP -> PNULL .)
    desc            reduce using rule 190 (EXP -> PNULL .)


state 51

    (191) EXP -> SELECT .

    r_from          reduce using rule 191 (EXP -> SELECT .)
    coma            reduce using rule 191 (EXP -> SELECT .)
    limit           reduce using rule 191 (EXP -> SELECT .)
    offset          reduce using rule 191 (EXP -> SELECT .)
    union           reduce using rule 191 (EXP -> SELECT .)
    intersect       reduce using rule 191 (EXP -> SELECT .)
    except          reduce using rule 191 (EXP -> SELECT .)
    ptcoma          reduce using rule 191 (EXP -> SELECT .)
    mas             reduce using rule 191 (EXP -> SELECT .)
    menos           reduce using rule 191 (EXP -> SELECT .)
    multiplicacion  reduce using rule 191 (EXP -> SELECT .)
    division        reduce using rule 191 (EXP -> SELECT .)
    modulo          reduce using rule 191 (EXP -> SELECT .)
    elevado         reduce using rule 191 (EXP -> SELECT .)
    and             reduce using rule 191 (EXP -> SELECT .)
    or              reduce using rule 191 (EXP -> SELECT .)
    mayor           reduce using rule 191 (EXP -> SELECT .)
    menor           reduce using rule 191 (EXP -> SELECT .)
    mayor_igual     reduce using rule 191 (EXP -> SELECT .)
    menor_igual     reduce using rule 191 (EXP -> SELECT .)
    igual           reduce using rule 191 (EXP -> SELECT .)
    diferente1      reduce using rule 191 (EXP -> SELECT .)
    diferente2      reduce using rule 191 (EXP -> SELECT .)
    punto           reduce using rule 191 (EXP -> SELECT .)
    as              reduce using rule 191 (EXP -> SELECT .)
    cadenaString    reduce using rule 191 (EXP -> SELECT .)
    id              reduce using rule 191 (EXP -> SELECT .)
    cadena          reduce using rule 191 (EXP -> SELECT .)
    between         reduce using rule 191 (EXP -> SELECT .)
    in              reduce using rule 191 (EXP -> SELECT .)
    not             reduce using rule 191 (EXP -> SELECT .)
    is              reduce using rule 191 (EXP -> SELECT .)
    isnull          reduce using rule 191 (EXP -> SELECT .)
    notnull         reduce using rule 191 (EXP -> SELECT .)
    parc            reduce using rule 191 (EXP -> SELECT .)
    then            reduce using rule 191 (EXP -> SELECT .)
    where           reduce using rule 191 (EXP -> SELECT .)
    group           reduce using rule 191 (EXP -> SELECT .)
    having          reduce using rule 191 (EXP -> SELECT .)
    order           reduce using rule 191 (EXP -> SELECT .)
    end             reduce using rule 191 (EXP -> SELECT .)
    else            reduce using rule 191 (EXP -> SELECT .)
    when            reduce using rule 191 (EXP -> SELECT .)
    constraint      reduce using rule 191 (EXP -> SELECT .)
    default         reduce using rule 191 (EXP -> SELECT .)
    primary         reduce using rule 191 (EXP -> SELECT .)
    references      reduce using rule 191 (EXP -> SELECT .)
    null            reduce using rule 191 (EXP -> SELECT .)
    asc             reduce using rule 191 (EXP -> SELECT .)
    desc            reduce using rule 191 (EXP -> SELECT .)


state 52

    (192) EXP -> PREDICADOS .

    r_from          reduce using rule 192 (EXP -> PREDICADOS .)
    coma            reduce using rule 192 (EXP -> PREDICADOS .)
    limit           reduce using rule 192 (EXP -> PREDICADOS .)
    offset          reduce using rule 192 (EXP -> PREDICADOS .)
    union           reduce using rule 192 (EXP -> PREDICADOS .)
    intersect       reduce using rule 192 (EXP -> PREDICADOS .)
    except          reduce using rule 192 (EXP -> PREDICADOS .)
    ptcoma          reduce using rule 192 (EXP -> PREDICADOS .)
    mas             reduce using rule 192 (EXP -> PREDICADOS .)
    menos           reduce using rule 192 (EXP -> PREDICADOS .)
    multiplicacion  reduce using rule 192 (EXP -> PREDICADOS .)
    division        reduce using rule 192 (EXP -> PREDICADOS .)
    modulo          reduce using rule 192 (EXP -> PREDICADOS .)
    elevado         reduce using rule 192 (EXP -> PREDICADOS .)
    and             reduce using rule 192 (EXP -> PREDICADOS .)
    or              reduce using rule 192 (EXP -> PREDICADOS .)
    mayor           reduce using rule 192 (EXP -> PREDICADOS .)
    menor           reduce using rule 192 (EXP -> PREDICADOS .)
    mayor_igual     reduce using rule 192 (EXP -> PREDICADOS .)
    menor_igual     reduce using rule 192 (EXP -> PREDICADOS .)
    igual           reduce using rule 192 (EXP -> PREDICADOS .)
    diferente1      reduce using rule 192 (EXP -> PREDICADOS .)
    diferente2      reduce using rule 192 (EXP -> PREDICADOS .)
    punto           reduce using rule 192 (EXP -> PREDICADOS .)
    as              reduce using rule 192 (EXP -> PREDICADOS .)
    cadenaString    reduce using rule 192 (EXP -> PREDICADOS .)
    id              reduce using rule 192 (EXP -> PREDICADOS .)
    cadena          reduce using rule 192 (EXP -> PREDICADOS .)
    between         reduce using rule 192 (EXP -> PREDICADOS .)
    in              reduce using rule 192 (EXP -> PREDICADOS .)
    not             reduce using rule 192 (EXP -> PREDICADOS .)
    is              reduce using rule 192 (EXP -> PREDICADOS .)
    isnull          reduce using rule 192 (EXP -> PREDICADOS .)
    notnull         reduce using rule 192 (EXP -> PREDICADOS .)
    parc            reduce using rule 192 (EXP -> PREDICADOS .)
    then            reduce using rule 192 (EXP -> PREDICADOS .)
    where           reduce using rule 192 (EXP -> PREDICADOS .)
    group           reduce using rule 192 (EXP -> PREDICADOS .)
    having          reduce using rule 192 (EXP -> PREDICADOS .)
    order           reduce using rule 192 (EXP -> PREDICADOS .)
    end             reduce using rule 192 (EXP -> PREDICADOS .)
    else            reduce using rule 192 (EXP -> PREDICADOS .)
    when            reduce using rule 192 (EXP -> PREDICADOS .)
    constraint      reduce using rule 192 (EXP -> PREDICADOS .)
    default         reduce using rule 192 (EXP -> PREDICADOS .)
    primary         reduce using rule 192 (EXP -> PREDICADOS .)
    references      reduce using rule 192 (EXP -> PREDICADOS .)
    null            reduce using rule 192 (EXP -> PREDICADOS .)
    asc             reduce using rule 192 (EXP -> PREDICADOS .)
    desc            reduce using rule 192 (EXP -> PREDICADOS .)


state 53

    (195) EXP -> extract . para FIELDS r_from timestamp cadena parc

    para            shift and go to state 119


state 54

    (198) EXP -> timestamp . cadena

    cadena          shift and go to state 120


state 55

    (196) EXP -> current_time .

    r_from          reduce using rule 196 (EXP -> current_time .)
    coma            reduce using rule 196 (EXP -> current_time .)
    limit           reduce using rule 196 (EXP -> current_time .)
    offset          reduce using rule 196 (EXP -> current_time .)
    union           reduce using rule 196 (EXP -> current_time .)
    intersect       reduce using rule 196 (EXP -> current_time .)
    except          reduce using rule 196 (EXP -> current_time .)
    ptcoma          reduce using rule 196 (EXP -> current_time .)
    mas             reduce using rule 196 (EXP -> current_time .)
    menos           reduce using rule 196 (EXP -> current_time .)
    multiplicacion  reduce using rule 196 (EXP -> current_time .)
    division        reduce using rule 196 (EXP -> current_time .)
    modulo          reduce using rule 196 (EXP -> current_time .)
    elevado         reduce using rule 196 (EXP -> current_time .)
    and             reduce using rule 196 (EXP -> current_time .)
    or              reduce using rule 196 (EXP -> current_time .)
    mayor           reduce using rule 196 (EXP -> current_time .)
    menor           reduce using rule 196 (EXP -> current_time .)
    mayor_igual     reduce using rule 196 (EXP -> current_time .)
    menor_igual     reduce using rule 196 (EXP -> current_time .)
    igual           reduce using rule 196 (EXP -> current_time .)
    diferente1      reduce using rule 196 (EXP -> current_time .)
    diferente2      reduce using rule 196 (EXP -> current_time .)
    punto           reduce using rule 196 (EXP -> current_time .)
    as              reduce using rule 196 (EXP -> current_time .)
    cadenaString    reduce using rule 196 (EXP -> current_time .)
    id              reduce using rule 196 (EXP -> current_time .)
    cadena          reduce using rule 196 (EXP -> current_time .)
    between         reduce using rule 196 (EXP -> current_time .)
    in              reduce using rule 196 (EXP -> current_time .)
    not             reduce using rule 196 (EXP -> current_time .)
    is              reduce using rule 196 (EXP -> current_time .)
    isnull          reduce using rule 196 (EXP -> current_time .)
    notnull         reduce using rule 196 (EXP -> current_time .)
    parc            reduce using rule 196 (EXP -> current_time .)
    then            reduce using rule 196 (EXP -> current_time .)
    where           reduce using rule 196 (EXP -> current_time .)
    group           reduce using rule 196 (EXP -> current_time .)
    having          reduce using rule 196 (EXP -> current_time .)
    order           reduce using rule 196 (EXP -> current_time .)
    end             reduce using rule 196 (EXP -> current_time .)
    else            reduce using rule 196 (EXP -> current_time .)
    when            reduce using rule 196 (EXP -> current_time .)
    constraint      reduce using rule 196 (EXP -> current_time .)
    default         reduce using rule 196 (EXP -> current_time .)
    primary         reduce using rule 196 (EXP -> current_time .)
    references      reduce using rule 196 (EXP -> current_time .)
    null            reduce using rule 196 (EXP -> current_time .)
    asc             reduce using rule 196 (EXP -> current_time .)
    desc            reduce using rule 196 (EXP -> current_time .)


state 56

    (197) EXP -> current_date .

    r_from          reduce using rule 197 (EXP -> current_date .)
    coma            reduce using rule 197 (EXP -> current_date .)
    limit           reduce using rule 197 (EXP -> current_date .)
    offset          reduce using rule 197 (EXP -> current_date .)
    union           reduce using rule 197 (EXP -> current_date .)
    intersect       reduce using rule 197 (EXP -> current_date .)
    except          reduce using rule 197 (EXP -> current_date .)
    ptcoma          reduce using rule 197 (EXP -> current_date .)
    mas             reduce using rule 197 (EXP -> current_date .)
    menos           reduce using rule 197 (EXP -> current_date .)
    multiplicacion  reduce using rule 197 (EXP -> current_date .)
    division        reduce using rule 197 (EXP -> current_date .)
    modulo          reduce using rule 197 (EXP -> current_date .)
    elevado         reduce using rule 197 (EXP -> current_date .)
    and             reduce using rule 197 (EXP -> current_date .)
    or              reduce using rule 197 (EXP -> current_date .)
    mayor           reduce using rule 197 (EXP -> current_date .)
    menor           reduce using rule 197 (EXP -> current_date .)
    mayor_igual     reduce using rule 197 (EXP -> current_date .)
    menor_igual     reduce using rule 197 (EXP -> current_date .)
    igual           reduce using rule 197 (EXP -> current_date .)
    diferente1      reduce using rule 197 (EXP -> current_date .)
    diferente2      reduce using rule 197 (EXP -> current_date .)
    punto           reduce using rule 197 (EXP -> current_date .)
    as              reduce using rule 197 (EXP -> current_date .)
    cadenaString    reduce using rule 197 (EXP -> current_date .)
    id              reduce using rule 197 (EXP -> current_date .)
    cadena          reduce using rule 197 (EXP -> current_date .)
    between         reduce using rule 197 (EXP -> current_date .)
    in              reduce using rule 197 (EXP -> current_date .)
    not             reduce using rule 197 (EXP -> current_date .)
    is              reduce using rule 197 (EXP -> current_date .)
    isnull          reduce using rule 197 (EXP -> current_date .)
    notnull         reduce using rule 197 (EXP -> current_date .)
    parc            reduce using rule 197 (EXP -> current_date .)
    then            reduce using rule 197 (EXP -> current_date .)
    where           reduce using rule 197 (EXP -> current_date .)
    group           reduce using rule 197 (EXP -> current_date .)
    having          reduce using rule 197 (EXP -> current_date .)
    order           reduce using rule 197 (EXP -> current_date .)
    end             reduce using rule 197 (EXP -> current_date .)
    else            reduce using rule 197 (EXP -> current_date .)
    when            reduce using rule 197 (EXP -> current_date .)
    constraint      reduce using rule 197 (EXP -> current_date .)
    default         reduce using rule 197 (EXP -> current_date .)
    primary         reduce using rule 197 (EXP -> current_date .)
    references      reduce using rule 197 (EXP -> current_date .)
    null            reduce using rule 197 (EXP -> current_date .)
    asc             reduce using rule 197 (EXP -> current_date .)
    desc            reduce using rule 197 (EXP -> current_date .)


state 57

    (199) EXP -> interval . cadena

    cadena          shift and go to state 121


state 58

    (200) EXP -> CASE .

    r_from          reduce using rule 200 (EXP -> CASE .)
    coma            reduce using rule 200 (EXP -> CASE .)
    limit           reduce using rule 200 (EXP -> CASE .)
    offset          reduce using rule 200 (EXP -> CASE .)
    union           reduce using rule 200 (EXP -> CASE .)
    intersect       reduce using rule 200 (EXP -> CASE .)
    except          reduce using rule 200 (EXP -> CASE .)
    ptcoma          reduce using rule 200 (EXP -> CASE .)
    mas             reduce using rule 200 (EXP -> CASE .)
    menos           reduce using rule 200 (EXP -> CASE .)
    multiplicacion  reduce using rule 200 (EXP -> CASE .)
    division        reduce using rule 200 (EXP -> CASE .)
    modulo          reduce using rule 200 (EXP -> CASE .)
    elevado         reduce using rule 200 (EXP -> CASE .)
    and             reduce using rule 200 (EXP -> CASE .)
    or              reduce using rule 200 (EXP -> CASE .)
    mayor           reduce using rule 200 (EXP -> CASE .)
    menor           reduce using rule 200 (EXP -> CASE .)
    mayor_igual     reduce using rule 200 (EXP -> CASE .)
    menor_igual     reduce using rule 200 (EXP -> CASE .)
    igual           reduce using rule 200 (EXP -> CASE .)
    diferente1      reduce using rule 200 (EXP -> CASE .)
    diferente2      reduce using rule 200 (EXP -> CASE .)
    punto           reduce using rule 200 (EXP -> CASE .)
    as              reduce using rule 200 (EXP -> CASE .)
    cadenaString    reduce using rule 200 (EXP -> CASE .)
    id              reduce using rule 200 (EXP -> CASE .)
    cadena          reduce using rule 200 (EXP -> CASE .)
    between         reduce using rule 200 (EXP -> CASE .)
    in              reduce using rule 200 (EXP -> CASE .)
    not             reduce using rule 200 (EXP -> CASE .)
    is              reduce using rule 200 (EXP -> CASE .)
    isnull          reduce using rule 200 (EXP -> CASE .)
    notnull         reduce using rule 200 (EXP -> CASE .)
    parc            reduce using rule 200 (EXP -> CASE .)
    then            reduce using rule 200 (EXP -> CASE .)
    where           reduce using rule 200 (EXP -> CASE .)
    group           reduce using rule 200 (EXP -> CASE .)
    having          reduce using rule 200 (EXP -> CASE .)
    order           reduce using rule 200 (EXP -> CASE .)
    end             reduce using rule 200 (EXP -> CASE .)
    else            reduce using rule 200 (EXP -> CASE .)
    when            reduce using rule 200 (EXP -> CASE .)
    constraint      reduce using rule 200 (EXP -> CASE .)
    default         reduce using rule 200 (EXP -> CASE .)
    primary         reduce using rule 200 (EXP -> CASE .)
    references      reduce using rule 200 (EXP -> CASE .)
    null            reduce using rule 200 (EXP -> CASE .)
    asc             reduce using rule 200 (EXP -> CASE .)
    desc            reduce using rule 200 (EXP -> CASE .)


state 59

    (203) EXP -> any . para LEXP parc

    para            shift and go to state 122


state 60

    (204) EXP -> all . para LEXP parc

    para            shift and go to state 123


state 61

    (205) EXP -> some . para LEXP parc

    para            shift and go to state 124


state 62

    (78) PNULL -> null .

    r_from          reduce using rule 78 (PNULL -> null .)
    coma            reduce using rule 78 (PNULL -> null .)
    limit           reduce using rule 78 (PNULL -> null .)
    offset          reduce using rule 78 (PNULL -> null .)
    union           reduce using rule 78 (PNULL -> null .)
    intersect       reduce using rule 78 (PNULL -> null .)
    except          reduce using rule 78 (PNULL -> null .)
    ptcoma          reduce using rule 78 (PNULL -> null .)
    mas             reduce using rule 78 (PNULL -> null .)
    menos           reduce using rule 78 (PNULL -> null .)
    multiplicacion  reduce using rule 78 (PNULL -> null .)
    division        reduce using rule 78 (PNULL -> null .)
    modulo          reduce using rule 78 (PNULL -> null .)
    elevado         reduce using rule 78 (PNULL -> null .)
    and             reduce using rule 78 (PNULL -> null .)
    or              reduce using rule 78 (PNULL -> null .)
    mayor           reduce using rule 78 (PNULL -> null .)
    menor           reduce using rule 78 (PNULL -> null .)
    mayor_igual     reduce using rule 78 (PNULL -> null .)
    menor_igual     reduce using rule 78 (PNULL -> null .)
    igual           reduce using rule 78 (PNULL -> null .)
    diferente1      reduce using rule 78 (PNULL -> null .)
    diferente2      reduce using rule 78 (PNULL -> null .)
    punto           reduce using rule 78 (PNULL -> null .)
    as              reduce using rule 78 (PNULL -> null .)
    cadenaString    reduce using rule 78 (PNULL -> null .)
    id              reduce using rule 78 (PNULL -> null .)
    cadena          reduce using rule 78 (PNULL -> null .)
    between         reduce using rule 78 (PNULL -> null .)
    in              reduce using rule 78 (PNULL -> null .)
    not             reduce using rule 78 (PNULL -> null .)
    is              reduce using rule 78 (PNULL -> null .)
    isnull          reduce using rule 78 (PNULL -> null .)
    notnull         reduce using rule 78 (PNULL -> null .)
    parc            reduce using rule 78 (PNULL -> null .)
    then            reduce using rule 78 (PNULL -> null .)
    where           reduce using rule 78 (PNULL -> null .)
    group           reduce using rule 78 (PNULL -> null .)
    having          reduce using rule 78 (PNULL -> null .)
    order           reduce using rule 78 (PNULL -> null .)
    end             reduce using rule 78 (PNULL -> null .)
    else            reduce using rule 78 (PNULL -> null .)
    when            reduce using rule 78 (PNULL -> null .)
    constraint      reduce using rule 78 (PNULL -> null .)
    default         reduce using rule 78 (PNULL -> null .)
    primary         reduce using rule 78 (PNULL -> null .)
    references      reduce using rule 78 (PNULL -> null .)
    null            reduce using rule 78 (PNULL -> null .)
    asc             reduce using rule 78 (PNULL -> null .)
    desc            reduce using rule 78 (PNULL -> null .)


state 63

    (61) CREATETABLE -> create table . id para LDEF parc ptcoma
    (62) CREATETABLE -> create table . id para LDEF parc HERENCIA ptcoma

    id              shift and go to state 125


state 64

    (84) CREATETYPE -> create type . id as enum para LEXP parc

    id              shift and go to state 126


state 65

    (48) CREATEDB -> create RD . if not exist id
    (49) CREATEDB -> create RD . if not exist id OPCCDB
    (50) CREATEDB -> create RD . id
    (51) CREATEDB -> create RD . id OPCCDB

    if              shift and go to state 127
    id              shift and go to state 128


state 66

    (55) RD -> or . replace databases

    replace         shift and go to state 129


state 67

    (56) RD -> databases .

    if              reduce using rule 56 (RD -> databases .)
    id              reduce using rule 56 (RD -> databases .)


state 68

    (117) UPDATE -> update id . set LCAMPOS where LEXP

    set             shift and go to state 130


state 69

    (121) DELETE -> delete r_from . id where LEXP
    (122) DELETE -> delete r_from . id

    id              shift and go to state 131


state 70

    (25) ALTER -> alter databases . id RO

    id              shift and go to state 132


state 71

    (29) altertable -> alter table . id OP

    id              shift and go to state 133


state 72

    (22) DROP -> drop table . id

    id              shift and go to state 134


state 73

    (23) DROP -> drop databases . if exist id
    (24) DROP -> drop databases . id

    if              shift and go to state 135
    id              shift and go to state 136


state 74

    (21) INSERT -> insert into . id values para LEXP parc

    id              shift and go to state 137


state 75

    (15) CASE -> case LISTAWHEN . ELSE end
    (16) CASE -> case LISTAWHEN . end
    (17) LISTAWHEN -> LISTAWHEN . WHEN
    (20) ELSE -> . else LEXP
    (19) WHEN -> . when LEXP then LEXP

    end             shift and go to state 139
    else            shift and go to state 141
    when            shift and go to state 77

    ELSE                           shift and go to state 138
    WHEN                           shift and go to state 140

state 76

    (18) LISTAWHEN -> WHEN .

    end             reduce using rule 18 (LISTAWHEN -> WHEN .)
    else            reduce using rule 18 (LISTAWHEN -> WHEN .)
    when            reduce using rule 18 (LISTAWHEN -> WHEN .)


state 77

    (19) WHEN -> when . LEXP then LEXP
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 142
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 78

    (47) SHOWDB -> show databases .

    ptcoma          reduce using rule 47 (SHOWDB -> show databases .)


state 79

    (85) SELECT -> select distinct LEXP . r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (124) LEXP -> LEXP . coma EXP

    r_from          shift and go to state 143
    coma            shift and go to state 82


state 80

    (86) SELECT -> select LEXP r_from . LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 144
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 81

    (87) SELECT -> select LEXP LIMIT . COMBINING
    (101) COMBINING -> . union LEXP
    (102) COMBINING -> . union all LEXP
    (103) COMBINING -> . intersect LEXP
    (104) COMBINING -> . intersect all LEXP
    (105) COMBINING -> . except LEXP
    (106) COMBINING -> . except all LEXP
    (107) COMBINING -> .

  ! shift/reduce conflict for union resolved as shift
  ! shift/reduce conflict for intersect resolved as shift
  ! shift/reduce conflict for except resolved as shift
    union           shift and go to state 146
    intersect       shift and go to state 147
    except          shift and go to state 148
    r_from          reduce using rule 107 (COMBINING -> .)
    coma            reduce using rule 107 (COMBINING -> .)
    limit           reduce using rule 107 (COMBINING -> .)
    offset          reduce using rule 107 (COMBINING -> .)
    ptcoma          reduce using rule 107 (COMBINING -> .)
    mas             reduce using rule 107 (COMBINING -> .)
    menos           reduce using rule 107 (COMBINING -> .)
    multiplicacion  reduce using rule 107 (COMBINING -> .)
    division        reduce using rule 107 (COMBINING -> .)
    modulo          reduce using rule 107 (COMBINING -> .)
    elevado         reduce using rule 107 (COMBINING -> .)
    and             reduce using rule 107 (COMBINING -> .)
    or              reduce using rule 107 (COMBINING -> .)
    mayor           reduce using rule 107 (COMBINING -> .)
    menor           reduce using rule 107 (COMBINING -> .)
    mayor_igual     reduce using rule 107 (COMBINING -> .)
    menor_igual     reduce using rule 107 (COMBINING -> .)
    igual           reduce using rule 107 (COMBINING -> .)
    diferente1      reduce using rule 107 (COMBINING -> .)
    diferente2      reduce using rule 107 (COMBINING -> .)
    punto           reduce using rule 107 (COMBINING -> .)
    as              reduce using rule 107 (COMBINING -> .)
    cadenaString    reduce using rule 107 (COMBINING -> .)
    id              reduce using rule 107 (COMBINING -> .)
    cadena          reduce using rule 107 (COMBINING -> .)
    between         reduce using rule 107 (COMBINING -> .)
    in              reduce using rule 107 (COMBINING -> .)
    not             reduce using rule 107 (COMBINING -> .)
    is              reduce using rule 107 (COMBINING -> .)
    isnull          reduce using rule 107 (COMBINING -> .)
    notnull         reduce using rule 107 (COMBINING -> .)
    parc            reduce using rule 107 (COMBINING -> .)
    then            reduce using rule 107 (COMBINING -> .)
    where           reduce using rule 107 (COMBINING -> .)
    group           reduce using rule 107 (COMBINING -> .)
    having          reduce using rule 107 (COMBINING -> .)
    order           reduce using rule 107 (COMBINING -> .)
    end             reduce using rule 107 (COMBINING -> .)
    else            reduce using rule 107 (COMBINING -> .)
    when            reduce using rule 107 (COMBINING -> .)
    constraint      reduce using rule 107 (COMBINING -> .)
    default         reduce using rule 107 (COMBINING -> .)
    primary         reduce using rule 107 (COMBINING -> .)
    references      reduce using rule 107 (COMBINING -> .)
    null            reduce using rule 107 (COMBINING -> .)
    asc             reduce using rule 107 (COMBINING -> .)
    desc            reduce using rule 107 (COMBINING -> .)

  ! union           [ reduce using rule 107 (COMBINING -> .) ]
  ! intersect       [ reduce using rule 107 (COMBINING -> .) ]
  ! except          [ reduce using rule 107 (COMBINING -> .) ]

    COMBINING                      shift and go to state 145

state 82

    (124) LEXP -> LEXP coma . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 149
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 83

    (88) LIMIT -> limit . int
    (89) LIMIT -> limit . all
    (91) LIMIT -> limit . int offset int
    (93) LIMIT -> limit . all offset int

    int             shift and go to state 150
    all             shift and go to state 151


state 84

    (90) LIMIT -> offset . int
    (92) LIMIT -> offset . int limit int
    (94) LIMIT -> offset . int limit all

    int             shift and go to state 152


state 85

    (163) EXP -> EXP mas . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 153
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 86

    (164) EXP -> EXP menos . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 154
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 87

    (165) EXP -> EXP multiplicacion . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 155
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 88

    (166) EXP -> EXP division . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 156
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 89

    (167) EXP -> EXP modulo . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 157
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 90

    (168) EXP -> EXP elevado . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 158
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 91

    (169) EXP -> EXP and . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 159
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 92

    (170) EXP -> EXP or . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 160
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 93

    (171) EXP -> EXP mayor . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 161
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 94

    (172) EXP -> EXP menor . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 162
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 95

    (173) EXP -> EXP mayor_igual . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 163
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 96

    (174) EXP -> EXP menor_igual . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 164
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 97

    (175) EXP -> EXP igual . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 165
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 98

    (176) EXP -> EXP diferente1 . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 166
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 99

    (177) EXP -> EXP diferente2 . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 167
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 100

    (178) EXP -> EXP punto . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 168
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 101

    (206) EXP -> EXP as . cadenaString
    (208) EXP -> EXP as . id
    (210) EXP -> EXP as . cadena

    cadenaString    shift and go to state 169
    id              shift and go to state 170
    cadena          shift and go to state 171


state 102

    (207) EXP -> EXP cadenaString .

    r_from          reduce using rule 207 (EXP -> EXP cadenaString .)
    coma            reduce using rule 207 (EXP -> EXP cadenaString .)
    limit           reduce using rule 207 (EXP -> EXP cadenaString .)
    offset          reduce using rule 207 (EXP -> EXP cadenaString .)
    union           reduce using rule 207 (EXP -> EXP cadenaString .)
    intersect       reduce using rule 207 (EXP -> EXP cadenaString .)
    except          reduce using rule 207 (EXP -> EXP cadenaString .)
    ptcoma          reduce using rule 207 (EXP -> EXP cadenaString .)
    mas             reduce using rule 207 (EXP -> EXP cadenaString .)
    menos           reduce using rule 207 (EXP -> EXP cadenaString .)
    multiplicacion  reduce using rule 207 (EXP -> EXP cadenaString .)
    division        reduce using rule 207 (EXP -> EXP cadenaString .)
    modulo          reduce using rule 207 (EXP -> EXP cadenaString .)
    elevado         reduce using rule 207 (EXP -> EXP cadenaString .)
    and             reduce using rule 207 (EXP -> EXP cadenaString .)
    or              reduce using rule 207 (EXP -> EXP cadenaString .)
    mayor           reduce using rule 207 (EXP -> EXP cadenaString .)
    menor           reduce using rule 207 (EXP -> EXP cadenaString .)
    mayor_igual     reduce using rule 207 (EXP -> EXP cadenaString .)
    menor_igual     reduce using rule 207 (EXP -> EXP cadenaString .)
    igual           reduce using rule 207 (EXP -> EXP cadenaString .)
    diferente1      reduce using rule 207 (EXP -> EXP cadenaString .)
    diferente2      reduce using rule 207 (EXP -> EXP cadenaString .)
    punto           reduce using rule 207 (EXP -> EXP cadenaString .)
    as              reduce using rule 207 (EXP -> EXP cadenaString .)
    cadenaString    reduce using rule 207 (EXP -> EXP cadenaString .)
    id              reduce using rule 207 (EXP -> EXP cadenaString .)
    cadena          reduce using rule 207 (EXP -> EXP cadenaString .)
    between         reduce using rule 207 (EXP -> EXP cadenaString .)
    in              reduce using rule 207 (EXP -> EXP cadenaString .)
    not             reduce using rule 207 (EXP -> EXP cadenaString .)
    is              reduce using rule 207 (EXP -> EXP cadenaString .)
    isnull          reduce using rule 207 (EXP -> EXP cadenaString .)
    notnull         reduce using rule 207 (EXP -> EXP cadenaString .)
    parc            reduce using rule 207 (EXP -> EXP cadenaString .)
    then            reduce using rule 207 (EXP -> EXP cadenaString .)
    where           reduce using rule 207 (EXP -> EXP cadenaString .)
    group           reduce using rule 207 (EXP -> EXP cadenaString .)
    having          reduce using rule 207 (EXP -> EXP cadenaString .)
    order           reduce using rule 207 (EXP -> EXP cadenaString .)
    end             reduce using rule 207 (EXP -> EXP cadenaString .)
    else            reduce using rule 207 (EXP -> EXP cadenaString .)
    when            reduce using rule 207 (EXP -> EXP cadenaString .)
    constraint      reduce using rule 207 (EXP -> EXP cadenaString .)
    default         reduce using rule 207 (EXP -> EXP cadenaString .)
    primary         reduce using rule 207 (EXP -> EXP cadenaString .)
    references      reduce using rule 207 (EXP -> EXP cadenaString .)
    null            reduce using rule 207 (EXP -> EXP cadenaString .)
    asc             reduce using rule 207 (EXP -> EXP cadenaString .)
    desc            reduce using rule 207 (EXP -> EXP cadenaString .)


state 103

    (209) EXP -> EXP id .

    r_from          reduce using rule 209 (EXP -> EXP id .)
    coma            reduce using rule 209 (EXP -> EXP id .)
    limit           reduce using rule 209 (EXP -> EXP id .)
    offset          reduce using rule 209 (EXP -> EXP id .)
    union           reduce using rule 209 (EXP -> EXP id .)
    intersect       reduce using rule 209 (EXP -> EXP id .)
    except          reduce using rule 209 (EXP -> EXP id .)
    ptcoma          reduce using rule 209 (EXP -> EXP id .)
    mas             reduce using rule 209 (EXP -> EXP id .)
    menos           reduce using rule 209 (EXP -> EXP id .)
    multiplicacion  reduce using rule 209 (EXP -> EXP id .)
    division        reduce using rule 209 (EXP -> EXP id .)
    modulo          reduce using rule 209 (EXP -> EXP id .)
    elevado         reduce using rule 209 (EXP -> EXP id .)
    and             reduce using rule 209 (EXP -> EXP id .)
    or              reduce using rule 209 (EXP -> EXP id .)
    mayor           reduce using rule 209 (EXP -> EXP id .)
    menor           reduce using rule 209 (EXP -> EXP id .)
    mayor_igual     reduce using rule 209 (EXP -> EXP id .)
    menor_igual     reduce using rule 209 (EXP -> EXP id .)
    igual           reduce using rule 209 (EXP -> EXP id .)
    diferente1      reduce using rule 209 (EXP -> EXP id .)
    diferente2      reduce using rule 209 (EXP -> EXP id .)
    punto           reduce using rule 209 (EXP -> EXP id .)
    as              reduce using rule 209 (EXP -> EXP id .)
    cadenaString    reduce using rule 209 (EXP -> EXP id .)
    id              reduce using rule 209 (EXP -> EXP id .)
    cadena          reduce using rule 209 (EXP -> EXP id .)
    between         reduce using rule 209 (EXP -> EXP id .)
    in              reduce using rule 209 (EXP -> EXP id .)
    not             reduce using rule 209 (EXP -> EXP id .)
    is              reduce using rule 209 (EXP -> EXP id .)
    isnull          reduce using rule 209 (EXP -> EXP id .)
    notnull         reduce using rule 209 (EXP -> EXP id .)
    parc            reduce using rule 209 (EXP -> EXP id .)
    then            reduce using rule 209 (EXP -> EXP id .)
    where           reduce using rule 209 (EXP -> EXP id .)
    group           reduce using rule 209 (EXP -> EXP id .)
    having          reduce using rule 209 (EXP -> EXP id .)
    order           reduce using rule 209 (EXP -> EXP id .)
    end             reduce using rule 209 (EXP -> EXP id .)
    else            reduce using rule 209 (EXP -> EXP id .)
    when            reduce using rule 209 (EXP -> EXP id .)
    constraint      reduce using rule 209 (EXP -> EXP id .)
    default         reduce using rule 209 (EXP -> EXP id .)
    primary         reduce using rule 209 (EXP -> EXP id .)
    references      reduce using rule 209 (EXP -> EXP id .)
    null            reduce using rule 209 (EXP -> EXP id .)
    asc             reduce using rule 209 (EXP -> EXP id .)
    desc            reduce using rule 209 (EXP -> EXP id .)


state 104

    (211) EXP -> EXP cadena .

    r_from          reduce using rule 211 (EXP -> EXP cadena .)
    coma            reduce using rule 211 (EXP -> EXP cadena .)
    limit           reduce using rule 211 (EXP -> EXP cadena .)
    offset          reduce using rule 211 (EXP -> EXP cadena .)
    union           reduce using rule 211 (EXP -> EXP cadena .)
    intersect       reduce using rule 211 (EXP -> EXP cadena .)
    except          reduce using rule 211 (EXP -> EXP cadena .)
    ptcoma          reduce using rule 211 (EXP -> EXP cadena .)
    mas             reduce using rule 211 (EXP -> EXP cadena .)
    menos           reduce using rule 211 (EXP -> EXP cadena .)
    multiplicacion  reduce using rule 211 (EXP -> EXP cadena .)
    division        reduce using rule 211 (EXP -> EXP cadena .)
    modulo          reduce using rule 211 (EXP -> EXP cadena .)
    elevado         reduce using rule 211 (EXP -> EXP cadena .)
    and             reduce using rule 211 (EXP -> EXP cadena .)
    or              reduce using rule 211 (EXP -> EXP cadena .)
    mayor           reduce using rule 211 (EXP -> EXP cadena .)
    menor           reduce using rule 211 (EXP -> EXP cadena .)
    mayor_igual     reduce using rule 211 (EXP -> EXP cadena .)
    menor_igual     reduce using rule 211 (EXP -> EXP cadena .)
    igual           reduce using rule 211 (EXP -> EXP cadena .)
    diferente1      reduce using rule 211 (EXP -> EXP cadena .)
    diferente2      reduce using rule 211 (EXP -> EXP cadena .)
    punto           reduce using rule 211 (EXP -> EXP cadena .)
    as              reduce using rule 211 (EXP -> EXP cadena .)
    cadenaString    reduce using rule 211 (EXP -> EXP cadena .)
    id              reduce using rule 211 (EXP -> EXP cadena .)
    cadena          reduce using rule 211 (EXP -> EXP cadena .)
    between         reduce using rule 211 (EXP -> EXP cadena .)
    in              reduce using rule 211 (EXP -> EXP cadena .)
    not             reduce using rule 211 (EXP -> EXP cadena .)
    is              reduce using rule 211 (EXP -> EXP cadena .)
    isnull          reduce using rule 211 (EXP -> EXP cadena .)
    notnull         reduce using rule 211 (EXP -> EXP cadena .)
    parc            reduce using rule 211 (EXP -> EXP cadena .)
    then            reduce using rule 211 (EXP -> EXP cadena .)
    where           reduce using rule 211 (EXP -> EXP cadena .)
    group           reduce using rule 211 (EXP -> EXP cadena .)
    having          reduce using rule 211 (EXP -> EXP cadena .)
    order           reduce using rule 211 (EXP -> EXP cadena .)
    end             reduce using rule 211 (EXP -> EXP cadena .)
    else            reduce using rule 211 (EXP -> EXP cadena .)
    when            reduce using rule 211 (EXP -> EXP cadena .)
    constraint      reduce using rule 211 (EXP -> EXP cadena .)
    default         reduce using rule 211 (EXP -> EXP cadena .)
    primary         reduce using rule 211 (EXP -> EXP cadena .)
    references      reduce using rule 211 (EXP -> EXP cadena .)
    null            reduce using rule 211 (EXP -> EXP cadena .)
    asc             reduce using rule 211 (EXP -> EXP cadena .)
    desc            reduce using rule 211 (EXP -> EXP cadena .)


state 105

    (213) PREDICADOS -> EXP between . EXP
    (217) PREDICADOS -> EXP between . symetric EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    symetric        shift and go to state 173
    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 172
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 106

    (214) PREDICADOS -> EXP in . para LEXP parc

    para            shift and go to state 174


state 107

    (215) PREDICADOS -> EXP not . in para LEXP parc
    (216) PREDICADOS -> EXP not . between EXP
    (218) PREDICADOS -> EXP not . between symetric EXP

    in              shift and go to state 175
    between         shift and go to state 176


state 108

    (219) PREDICADOS -> EXP is . distinct r_from EXP
    (220) PREDICADOS -> EXP is . not distinct r_from EXP
    (221) PREDICADOS -> EXP is . PNULL
    (224) PREDICADOS -> EXP is . true
    (225) PREDICADOS -> EXP is . not true
    (226) PREDICADOS -> EXP is . false
    (227) PREDICADOS -> EXP is . not false
    (228) PREDICADOS -> EXP is . unknown
    (229) PREDICADOS -> EXP is . not unknown
    (77) PNULL -> . not null
    (78) PNULL -> . null

    distinct        shift and go to state 177
    not             shift and go to state 178
    true            shift and go to state 180
    false           shift and go to state 181
    unknown         shift and go to state 182
    null            shift and go to state 62

    PNULL                          shift and go to state 179

state 109

    (222) PREDICADOS -> EXP isnull .

    r_from          reduce using rule 222 (PREDICADOS -> EXP isnull .)
    coma            reduce using rule 222 (PREDICADOS -> EXP isnull .)
    limit           reduce using rule 222 (PREDICADOS -> EXP isnull .)
    offset          reduce using rule 222 (PREDICADOS -> EXP isnull .)
    union           reduce using rule 222 (PREDICADOS -> EXP isnull .)
    intersect       reduce using rule 222 (PREDICADOS -> EXP isnull .)
    except          reduce using rule 222 (PREDICADOS -> EXP isnull .)
    ptcoma          reduce using rule 222 (PREDICADOS -> EXP isnull .)
    mas             reduce using rule 222 (PREDICADOS -> EXP isnull .)
    menos           reduce using rule 222 (PREDICADOS -> EXP isnull .)
    multiplicacion  reduce using rule 222 (PREDICADOS -> EXP isnull .)
    division        reduce using rule 222 (PREDICADOS -> EXP isnull .)
    modulo          reduce using rule 222 (PREDICADOS -> EXP isnull .)
    elevado         reduce using rule 222 (PREDICADOS -> EXP isnull .)
    and             reduce using rule 222 (PREDICADOS -> EXP isnull .)
    or              reduce using rule 222 (PREDICADOS -> EXP isnull .)
    mayor           reduce using rule 222 (PREDICADOS -> EXP isnull .)
    menor           reduce using rule 222 (PREDICADOS -> EXP isnull .)
    mayor_igual     reduce using rule 222 (PREDICADOS -> EXP isnull .)
    menor_igual     reduce using rule 222 (PREDICADOS -> EXP isnull .)
    igual           reduce using rule 222 (PREDICADOS -> EXP isnull .)
    diferente1      reduce using rule 222 (PREDICADOS -> EXP isnull .)
    diferente2      reduce using rule 222 (PREDICADOS -> EXP isnull .)
    punto           reduce using rule 222 (PREDICADOS -> EXP isnull .)
    as              reduce using rule 222 (PREDICADOS -> EXP isnull .)
    cadenaString    reduce using rule 222 (PREDICADOS -> EXP isnull .)
    id              reduce using rule 222 (PREDICADOS -> EXP isnull .)
    cadena          reduce using rule 222 (PREDICADOS -> EXP isnull .)
    between         reduce using rule 222 (PREDICADOS -> EXP isnull .)
    in              reduce using rule 222 (PREDICADOS -> EXP isnull .)
    not             reduce using rule 222 (PREDICADOS -> EXP isnull .)
    is              reduce using rule 222 (PREDICADOS -> EXP isnull .)
    isnull          reduce using rule 222 (PREDICADOS -> EXP isnull .)
    notnull         reduce using rule 222 (PREDICADOS -> EXP isnull .)
    parc            reduce using rule 222 (PREDICADOS -> EXP isnull .)
    then            reduce using rule 222 (PREDICADOS -> EXP isnull .)
    where           reduce using rule 222 (PREDICADOS -> EXP isnull .)
    group           reduce using rule 222 (PREDICADOS -> EXP isnull .)
    having          reduce using rule 222 (PREDICADOS -> EXP isnull .)
    order           reduce using rule 222 (PREDICADOS -> EXP isnull .)
    end             reduce using rule 222 (PREDICADOS -> EXP isnull .)
    else            reduce using rule 222 (PREDICADOS -> EXP isnull .)
    when            reduce using rule 222 (PREDICADOS -> EXP isnull .)
    constraint      reduce using rule 222 (PREDICADOS -> EXP isnull .)
    default         reduce using rule 222 (PREDICADOS -> EXP isnull .)
    primary         reduce using rule 222 (PREDICADOS -> EXP isnull .)
    references      reduce using rule 222 (PREDICADOS -> EXP isnull .)
    null            reduce using rule 222 (PREDICADOS -> EXP isnull .)
    asc             reduce using rule 222 (PREDICADOS -> EXP isnull .)
    desc            reduce using rule 222 (PREDICADOS -> EXP isnull .)


state 110

    (223) PREDICADOS -> EXP notnull .

    r_from          reduce using rule 223 (PREDICADOS -> EXP notnull .)
    coma            reduce using rule 223 (PREDICADOS -> EXP notnull .)
    limit           reduce using rule 223 (PREDICADOS -> EXP notnull .)
    offset          reduce using rule 223 (PREDICADOS -> EXP notnull .)
    union           reduce using rule 223 (PREDICADOS -> EXP notnull .)
    intersect       reduce using rule 223 (PREDICADOS -> EXP notnull .)
    except          reduce using rule 223 (PREDICADOS -> EXP notnull .)
    ptcoma          reduce using rule 223 (PREDICADOS -> EXP notnull .)
    mas             reduce using rule 223 (PREDICADOS -> EXP notnull .)
    menos           reduce using rule 223 (PREDICADOS -> EXP notnull .)
    multiplicacion  reduce using rule 223 (PREDICADOS -> EXP notnull .)
    division        reduce using rule 223 (PREDICADOS -> EXP notnull .)
    modulo          reduce using rule 223 (PREDICADOS -> EXP notnull .)
    elevado         reduce using rule 223 (PREDICADOS -> EXP notnull .)
    and             reduce using rule 223 (PREDICADOS -> EXP notnull .)
    or              reduce using rule 223 (PREDICADOS -> EXP notnull .)
    mayor           reduce using rule 223 (PREDICADOS -> EXP notnull .)
    menor           reduce using rule 223 (PREDICADOS -> EXP notnull .)
    mayor_igual     reduce using rule 223 (PREDICADOS -> EXP notnull .)
    menor_igual     reduce using rule 223 (PREDICADOS -> EXP notnull .)
    igual           reduce using rule 223 (PREDICADOS -> EXP notnull .)
    diferente1      reduce using rule 223 (PREDICADOS -> EXP notnull .)
    diferente2      reduce using rule 223 (PREDICADOS -> EXP notnull .)
    punto           reduce using rule 223 (PREDICADOS -> EXP notnull .)
    as              reduce using rule 223 (PREDICADOS -> EXP notnull .)
    cadenaString    reduce using rule 223 (PREDICADOS -> EXP notnull .)
    id              reduce using rule 223 (PREDICADOS -> EXP notnull .)
    cadena          reduce using rule 223 (PREDICADOS -> EXP notnull .)
    between         reduce using rule 223 (PREDICADOS -> EXP notnull .)
    in              reduce using rule 223 (PREDICADOS -> EXP notnull .)
    not             reduce using rule 223 (PREDICADOS -> EXP notnull .)
    is              reduce using rule 223 (PREDICADOS -> EXP notnull .)
    isnull          reduce using rule 223 (PREDICADOS -> EXP notnull .)
    notnull         reduce using rule 223 (PREDICADOS -> EXP notnull .)
    parc            reduce using rule 223 (PREDICADOS -> EXP notnull .)
    then            reduce using rule 223 (PREDICADOS -> EXP notnull .)
    where           reduce using rule 223 (PREDICADOS -> EXP notnull .)
    group           reduce using rule 223 (PREDICADOS -> EXP notnull .)
    having          reduce using rule 223 (PREDICADOS -> EXP notnull .)
    order           reduce using rule 223 (PREDICADOS -> EXP notnull .)
    end             reduce using rule 223 (PREDICADOS -> EXP notnull .)
    else            reduce using rule 223 (PREDICADOS -> EXP notnull .)
    when            reduce using rule 223 (PREDICADOS -> EXP notnull .)
    constraint      reduce using rule 223 (PREDICADOS -> EXP notnull .)
    default         reduce using rule 223 (PREDICADOS -> EXP notnull .)
    primary         reduce using rule 223 (PREDICADOS -> EXP notnull .)
    references      reduce using rule 223 (PREDICADOS -> EXP notnull .)
    null            reduce using rule 223 (PREDICADOS -> EXP notnull .)
    asc             reduce using rule 223 (PREDICADOS -> EXP notnull .)
    desc            reduce using rule 223 (PREDICADOS -> EXP notnull .)


state 111

    (179) EXP -> mas EXP .
    (163) EXP -> EXP . mas EXP
    (164) EXP -> EXP . menos EXP
    (165) EXP -> EXP . multiplicacion EXP
    (166) EXP -> EXP . division EXP
    (167) EXP -> EXP . modulo EXP
    (168) EXP -> EXP . elevado EXP
    (169) EXP -> EXP . and EXP
    (170) EXP -> EXP . or EXP
    (171) EXP -> EXP . mayor EXP
    (172) EXP -> EXP . menor EXP
    (173) EXP -> EXP . mayor_igual EXP
    (174) EXP -> EXP . menor_igual EXP
    (175) EXP -> EXP . igual EXP
    (176) EXP -> EXP . diferente1 EXP
    (177) EXP -> EXP . diferente2 EXP
    (178) EXP -> EXP . punto EXP
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (213) PREDICADOS -> EXP . between EXP
    (214) PREDICADOS -> EXP . in para LEXP parc
    (215) PREDICADOS -> EXP . not in para LEXP parc
    (216) PREDICADOS -> EXP . not between EXP
    (217) PREDICADOS -> EXP . between symetric EXP
    (218) PREDICADOS -> EXP . not between symetric EXP
    (219) PREDICADOS -> EXP . is distinct r_from EXP
    (220) PREDICADOS -> EXP . is not distinct r_from EXP
    (221) PREDICADOS -> EXP . is PNULL
    (222) PREDICADOS -> EXP . isnull
    (223) PREDICADOS -> EXP . notnull
    (224) PREDICADOS -> EXP . is true
    (225) PREDICADOS -> EXP . is not true
    (226) PREDICADOS -> EXP . is false
    (227) PREDICADOS -> EXP . is not false
    (228) PREDICADOS -> EXP . is unknown
    (229) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 179 (EXP -> mas EXP .)
    coma            reduce using rule 179 (EXP -> mas EXP .)
    limit           reduce using rule 179 (EXP -> mas EXP .)
    offset          reduce using rule 179 (EXP -> mas EXP .)
    union           reduce using rule 179 (EXP -> mas EXP .)
    intersect       reduce using rule 179 (EXP -> mas EXP .)
    except          reduce using rule 179 (EXP -> mas EXP .)
    ptcoma          reduce using rule 179 (EXP -> mas EXP .)
    punto           reduce using rule 179 (EXP -> mas EXP .)
    as              reduce using rule 179 (EXP -> mas EXP .)
    cadenaString    reduce using rule 179 (EXP -> mas EXP .)
    id              reduce using rule 179 (EXP -> mas EXP .)
    cadena          reduce using rule 179 (EXP -> mas EXP .)
    between         reduce using rule 179 (EXP -> mas EXP .)
    in              reduce using rule 179 (EXP -> mas EXP .)
    is              reduce using rule 179 (EXP -> mas EXP .)
    isnull          reduce using rule 179 (EXP -> mas EXP .)
    notnull         reduce using rule 179 (EXP -> mas EXP .)
    parc            reduce using rule 179 (EXP -> mas EXP .)
    then            reduce using rule 179 (EXP -> mas EXP .)
    where           reduce using rule 179 (EXP -> mas EXP .)
    group           reduce using rule 179 (EXP -> mas EXP .)
    having          reduce using rule 179 (EXP -> mas EXP .)
    order           reduce using rule 179 (EXP -> mas EXP .)
    end             reduce using rule 179 (EXP -> mas EXP .)
    else            reduce using rule 179 (EXP -> mas EXP .)
    when            reduce using rule 179 (EXP -> mas EXP .)
    constraint      reduce using rule 179 (EXP -> mas EXP .)
    default         reduce using rule 179 (EXP -> mas EXP .)
    primary         reduce using rule 179 (EXP -> mas EXP .)
    references      reduce using rule 179 (EXP -> mas EXP .)
    null            reduce using rule 179 (EXP -> mas EXP .)
    asc             reduce using rule 179 (EXP -> mas EXP .)
    desc            reduce using rule 179 (EXP -> mas EXP .)
    mas             shift and go to state 85
    menos           shift and go to state 86
    multiplicacion  shift and go to state 87
    division        shift and go to state 88
    modulo          shift and go to state 89
    elevado         shift and go to state 90
    and             shift and go to state 91
    or              shift and go to state 92
    mayor           shift and go to state 93
    menor           shift and go to state 94
    mayor_igual     shift and go to state 95
    menor_igual     shift and go to state 96
    igual           shift and go to state 97
    diferente1      shift and go to state 98
    diferente2      shift and go to state 99
    not             shift and go to state 107

  ! mas             [ reduce using rule 179 (EXP -> mas EXP .) ]
  ! menos           [ reduce using rule 179 (EXP -> mas EXP .) ]
  ! multiplicacion  [ reduce using rule 179 (EXP -> mas EXP .) ]
  ! division        [ reduce using rule 179 (EXP -> mas EXP .) ]
  ! modulo          [ reduce using rule 179 (EXP -> mas EXP .) ]
  ! elevado         [ reduce using rule 179 (EXP -> mas EXP .) ]
  ! and             [ reduce using rule 179 (EXP -> mas EXP .) ]
  ! or              [ reduce using rule 179 (EXP -> mas EXP .) ]
  ! mayor           [ reduce using rule 179 (EXP -> mas EXP .) ]
  ! menor           [ reduce using rule 179 (EXP -> mas EXP .) ]
  ! mayor_igual     [ reduce using rule 179 (EXP -> mas EXP .) ]
  ! menor_igual     [ reduce using rule 179 (EXP -> mas EXP .) ]
  ! igual           [ reduce using rule 179 (EXP -> mas EXP .) ]
  ! diferente1      [ reduce using rule 179 (EXP -> mas EXP .) ]
  ! diferente2      [ reduce using rule 179 (EXP -> mas EXP .) ]
  ! not             [ reduce using rule 179 (EXP -> mas EXP .) ]
  ! punto           [ shift and go to state 100 ]
  ! as              [ shift and go to state 101 ]
  ! cadenaString    [ shift and go to state 102 ]
  ! id              [ shift and go to state 103 ]
  ! cadena          [ shift and go to state 104 ]
  ! between         [ shift and go to state 105 ]
  ! in              [ shift and go to state 106 ]
  ! is              [ shift and go to state 108 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]


state 112

    (180) EXP -> menos EXP .
    (163) EXP -> EXP . mas EXP
    (164) EXP -> EXP . menos EXP
    (165) EXP -> EXP . multiplicacion EXP
    (166) EXP -> EXP . division EXP
    (167) EXP -> EXP . modulo EXP
    (168) EXP -> EXP . elevado EXP
    (169) EXP -> EXP . and EXP
    (170) EXP -> EXP . or EXP
    (171) EXP -> EXP . mayor EXP
    (172) EXP -> EXP . menor EXP
    (173) EXP -> EXP . mayor_igual EXP
    (174) EXP -> EXP . menor_igual EXP
    (175) EXP -> EXP . igual EXP
    (176) EXP -> EXP . diferente1 EXP
    (177) EXP -> EXP . diferente2 EXP
    (178) EXP -> EXP . punto EXP
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (213) PREDICADOS -> EXP . between EXP
    (214) PREDICADOS -> EXP . in para LEXP parc
    (215) PREDICADOS -> EXP . not in para LEXP parc
    (216) PREDICADOS -> EXP . not between EXP
    (217) PREDICADOS -> EXP . between symetric EXP
    (218) PREDICADOS -> EXP . not between symetric EXP
    (219) PREDICADOS -> EXP . is distinct r_from EXP
    (220) PREDICADOS -> EXP . is not distinct r_from EXP
    (221) PREDICADOS -> EXP . is PNULL
    (222) PREDICADOS -> EXP . isnull
    (223) PREDICADOS -> EXP . notnull
    (224) PREDICADOS -> EXP . is true
    (225) PREDICADOS -> EXP . is not true
    (226) PREDICADOS -> EXP . is false
    (227) PREDICADOS -> EXP . is not false
    (228) PREDICADOS -> EXP . is unknown
    (229) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 180 (EXP -> menos EXP .)
    coma            reduce using rule 180 (EXP -> menos EXP .)
    limit           reduce using rule 180 (EXP -> menos EXP .)
    offset          reduce using rule 180 (EXP -> menos EXP .)
    union           reduce using rule 180 (EXP -> menos EXP .)
    intersect       reduce using rule 180 (EXP -> menos EXP .)
    except          reduce using rule 180 (EXP -> menos EXP .)
    ptcoma          reduce using rule 180 (EXP -> menos EXP .)
    punto           reduce using rule 180 (EXP -> menos EXP .)
    as              reduce using rule 180 (EXP -> menos EXP .)
    cadenaString    reduce using rule 180 (EXP -> menos EXP .)
    id              reduce using rule 180 (EXP -> menos EXP .)
    cadena          reduce using rule 180 (EXP -> menos EXP .)
    between         reduce using rule 180 (EXP -> menos EXP .)
    in              reduce using rule 180 (EXP -> menos EXP .)
    is              reduce using rule 180 (EXP -> menos EXP .)
    isnull          reduce using rule 180 (EXP -> menos EXP .)
    notnull         reduce using rule 180 (EXP -> menos EXP .)
    parc            reduce using rule 180 (EXP -> menos EXP .)
    then            reduce using rule 180 (EXP -> menos EXP .)
    where           reduce using rule 180 (EXP -> menos EXP .)
    group           reduce using rule 180 (EXP -> menos EXP .)
    having          reduce using rule 180 (EXP -> menos EXP .)
    order           reduce using rule 180 (EXP -> menos EXP .)
    end             reduce using rule 180 (EXP -> menos EXP .)
    else            reduce using rule 180 (EXP -> menos EXP .)
    when            reduce using rule 180 (EXP -> menos EXP .)
    constraint      reduce using rule 180 (EXP -> menos EXP .)
    default         reduce using rule 180 (EXP -> menos EXP .)
    primary         reduce using rule 180 (EXP -> menos EXP .)
    references      reduce using rule 180 (EXP -> menos EXP .)
    null            reduce using rule 180 (EXP -> menos EXP .)
    asc             reduce using rule 180 (EXP -> menos EXP .)
    desc            reduce using rule 180 (EXP -> menos EXP .)
    mas             shift and go to state 85
    menos           shift and go to state 86
    multiplicacion  shift and go to state 87
    division        shift and go to state 88
    modulo          shift and go to state 89
    elevado         shift and go to state 90
    and             shift and go to state 91
    or              shift and go to state 92
    mayor           shift and go to state 93
    menor           shift and go to state 94
    mayor_igual     shift and go to state 95
    menor_igual     shift and go to state 96
    igual           shift and go to state 97
    diferente1      shift and go to state 98
    diferente2      shift and go to state 99
    not             shift and go to state 107

  ! mas             [ reduce using rule 180 (EXP -> menos EXP .) ]
  ! menos           [ reduce using rule 180 (EXP -> menos EXP .) ]
  ! multiplicacion  [ reduce using rule 180 (EXP -> menos EXP .) ]
  ! division        [ reduce using rule 180 (EXP -> menos EXP .) ]
  ! modulo          [ reduce using rule 180 (EXP -> menos EXP .) ]
  ! elevado         [ reduce using rule 180 (EXP -> menos EXP .) ]
  ! and             [ reduce using rule 180 (EXP -> menos EXP .) ]
  ! or              [ reduce using rule 180 (EXP -> menos EXP .) ]
  ! mayor           [ reduce using rule 180 (EXP -> menos EXP .) ]
  ! menor           [ reduce using rule 180 (EXP -> menos EXP .) ]
  ! mayor_igual     [ reduce using rule 180 (EXP -> menos EXP .) ]
  ! menor_igual     [ reduce using rule 180 (EXP -> menos EXP .) ]
  ! igual           [ reduce using rule 180 (EXP -> menos EXP .) ]
  ! diferente1      [ reduce using rule 180 (EXP -> menos EXP .) ]
  ! diferente2      [ reduce using rule 180 (EXP -> menos EXP .) ]
  ! not             [ reduce using rule 180 (EXP -> menos EXP .) ]
  ! punto           [ shift and go to state 100 ]
  ! as              [ shift and go to state 101 ]
  ! cadenaString    [ shift and go to state 102 ]
  ! id              [ shift and go to state 103 ]
  ! cadena          [ shift and go to state 104 ]
  ! between         [ shift and go to state 105 ]
  ! in              [ shift and go to state 106 ]
  ! is              [ shift and go to state 108 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]


state 113

    (181) EXP -> not EXP .
    (163) EXP -> EXP . mas EXP
    (164) EXP -> EXP . menos EXP
    (165) EXP -> EXP . multiplicacion EXP
    (166) EXP -> EXP . division EXP
    (167) EXP -> EXP . modulo EXP
    (168) EXP -> EXP . elevado EXP
    (169) EXP -> EXP . and EXP
    (170) EXP -> EXP . or EXP
    (171) EXP -> EXP . mayor EXP
    (172) EXP -> EXP . menor EXP
    (173) EXP -> EXP . mayor_igual EXP
    (174) EXP -> EXP . menor_igual EXP
    (175) EXP -> EXP . igual EXP
    (176) EXP -> EXP . diferente1 EXP
    (177) EXP -> EXP . diferente2 EXP
    (178) EXP -> EXP . punto EXP
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (213) PREDICADOS -> EXP . between EXP
    (214) PREDICADOS -> EXP . in para LEXP parc
    (215) PREDICADOS -> EXP . not in para LEXP parc
    (216) PREDICADOS -> EXP . not between EXP
    (217) PREDICADOS -> EXP . between symetric EXP
    (218) PREDICADOS -> EXP . not between symetric EXP
    (219) PREDICADOS -> EXP . is distinct r_from EXP
    (220) PREDICADOS -> EXP . is not distinct r_from EXP
    (221) PREDICADOS -> EXP . is PNULL
    (222) PREDICADOS -> EXP . isnull
    (223) PREDICADOS -> EXP . notnull
    (224) PREDICADOS -> EXP . is true
    (225) PREDICADOS -> EXP . is not true
    (226) PREDICADOS -> EXP . is false
    (227) PREDICADOS -> EXP . is not false
    (228) PREDICADOS -> EXP . is unknown
    (229) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 181 (EXP -> not EXP .)
    coma            reduce using rule 181 (EXP -> not EXP .)
    limit           reduce using rule 181 (EXP -> not EXP .)
    offset          reduce using rule 181 (EXP -> not EXP .)
    union           reduce using rule 181 (EXP -> not EXP .)
    intersect       reduce using rule 181 (EXP -> not EXP .)
    except          reduce using rule 181 (EXP -> not EXP .)
    ptcoma          reduce using rule 181 (EXP -> not EXP .)
    mas             reduce using rule 181 (EXP -> not EXP .)
    menos           reduce using rule 181 (EXP -> not EXP .)
    multiplicacion  reduce using rule 181 (EXP -> not EXP .)
    division        reduce using rule 181 (EXP -> not EXP .)
    modulo          reduce using rule 181 (EXP -> not EXP .)
    elevado         reduce using rule 181 (EXP -> not EXP .)
    mayor           reduce using rule 181 (EXP -> not EXP .)
    menor           reduce using rule 181 (EXP -> not EXP .)
    mayor_igual     reduce using rule 181 (EXP -> not EXP .)
    menor_igual     reduce using rule 181 (EXP -> not EXP .)
    igual           reduce using rule 181 (EXP -> not EXP .)
    diferente1      reduce using rule 181 (EXP -> not EXP .)
    diferente2      reduce using rule 181 (EXP -> not EXP .)
    punto           reduce using rule 181 (EXP -> not EXP .)
    as              reduce using rule 181 (EXP -> not EXP .)
    cadenaString    reduce using rule 181 (EXP -> not EXP .)
    id              reduce using rule 181 (EXP -> not EXP .)
    cadena          reduce using rule 181 (EXP -> not EXP .)
    between         reduce using rule 181 (EXP -> not EXP .)
    in              reduce using rule 181 (EXP -> not EXP .)
    is              reduce using rule 181 (EXP -> not EXP .)
    isnull          reduce using rule 181 (EXP -> not EXP .)
    notnull         reduce using rule 181 (EXP -> not EXP .)
    parc            reduce using rule 181 (EXP -> not EXP .)
    then            reduce using rule 181 (EXP -> not EXP .)
    where           reduce using rule 181 (EXP -> not EXP .)
    group           reduce using rule 181 (EXP -> not EXP .)
    having          reduce using rule 181 (EXP -> not EXP .)
    order           reduce using rule 181 (EXP -> not EXP .)
    end             reduce using rule 181 (EXP -> not EXP .)
    else            reduce using rule 181 (EXP -> not EXP .)
    when            reduce using rule 181 (EXP -> not EXP .)
    constraint      reduce using rule 181 (EXP -> not EXP .)
    default         reduce using rule 181 (EXP -> not EXP .)
    primary         reduce using rule 181 (EXP -> not EXP .)
    references      reduce using rule 181 (EXP -> not EXP .)
    null            reduce using rule 181 (EXP -> not EXP .)
    asc             reduce using rule 181 (EXP -> not EXP .)
    desc            reduce using rule 181 (EXP -> not EXP .)
    and             shift and go to state 91
    or              shift and go to state 92
    not             shift and go to state 107

  ! and             [ reduce using rule 181 (EXP -> not EXP .) ]
  ! or              [ reduce using rule 181 (EXP -> not EXP .) ]
  ! not             [ reduce using rule 181 (EXP -> not EXP .) ]
  ! mas             [ shift and go to state 85 ]
  ! menos           [ shift and go to state 86 ]
  ! multiplicacion  [ shift and go to state 87 ]
  ! division        [ shift and go to state 88 ]
  ! modulo          [ shift and go to state 89 ]
  ! elevado         [ shift and go to state 90 ]
  ! mayor           [ shift and go to state 93 ]
  ! menor           [ shift and go to state 94 ]
  ! mayor_igual     [ shift and go to state 95 ]
  ! menor_igual     [ shift and go to state 96 ]
  ! igual           [ shift and go to state 97 ]
  ! diferente1      [ shift and go to state 98 ]
  ! diferente2      [ shift and go to state 99 ]
  ! punto           [ shift and go to state 100 ]
  ! as              [ shift and go to state 101 ]
  ! cadenaString    [ shift and go to state 102 ]
  ! id              [ shift and go to state 103 ]
  ! cadena          [ shift and go to state 104 ]
  ! between         [ shift and go to state 105 ]
  ! in              [ shift and go to state 106 ]
  ! is              [ shift and go to state 108 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]


state 114

    (77) PNULL -> not null .
    (78) PNULL -> null .

  ! reduce/reduce conflict for r_from resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for coma resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for limit resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for offset resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for union resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for intersect resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for except resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for ptcoma resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for mas resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for menos resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for multiplicacion resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for division resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for modulo resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for elevado resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for and resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for or resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for mayor resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for menor resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for mayor_igual resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for menor_igual resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for igual resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for diferente1 resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for diferente2 resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for punto resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for as resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for cadenaString resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for id resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for cadena resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for between resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for in resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for not resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for is resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for isnull resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for notnull resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for parc resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for then resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for where resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for group resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for having resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for order resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for end resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for else resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for when resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for constraint resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for default resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for primary resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for references resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for null resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for asc resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for desc resolved using rule 77 (PNULL -> not null .)
    r_from          reduce using rule 77 (PNULL -> not null .)
    coma            reduce using rule 77 (PNULL -> not null .)
    limit           reduce using rule 77 (PNULL -> not null .)
    offset          reduce using rule 77 (PNULL -> not null .)
    union           reduce using rule 77 (PNULL -> not null .)
    intersect       reduce using rule 77 (PNULL -> not null .)
    except          reduce using rule 77 (PNULL -> not null .)
    ptcoma          reduce using rule 77 (PNULL -> not null .)
    mas             reduce using rule 77 (PNULL -> not null .)
    menos           reduce using rule 77 (PNULL -> not null .)
    multiplicacion  reduce using rule 77 (PNULL -> not null .)
    division        reduce using rule 77 (PNULL -> not null .)
    modulo          reduce using rule 77 (PNULL -> not null .)
    elevado         reduce using rule 77 (PNULL -> not null .)
    and             reduce using rule 77 (PNULL -> not null .)
    or              reduce using rule 77 (PNULL -> not null .)
    mayor           reduce using rule 77 (PNULL -> not null .)
    menor           reduce using rule 77 (PNULL -> not null .)
    mayor_igual     reduce using rule 77 (PNULL -> not null .)
    menor_igual     reduce using rule 77 (PNULL -> not null .)
    igual           reduce using rule 77 (PNULL -> not null .)
    diferente1      reduce using rule 77 (PNULL -> not null .)
    diferente2      reduce using rule 77 (PNULL -> not null .)
    punto           reduce using rule 77 (PNULL -> not null .)
    as              reduce using rule 77 (PNULL -> not null .)
    cadenaString    reduce using rule 77 (PNULL -> not null .)
    id              reduce using rule 77 (PNULL -> not null .)
    cadena          reduce using rule 77 (PNULL -> not null .)
    between         reduce using rule 77 (PNULL -> not null .)
    in              reduce using rule 77 (PNULL -> not null .)
    not             reduce using rule 77 (PNULL -> not null .)
    is              reduce using rule 77 (PNULL -> not null .)
    isnull          reduce using rule 77 (PNULL -> not null .)
    notnull         reduce using rule 77 (PNULL -> not null .)
    parc            reduce using rule 77 (PNULL -> not null .)
    then            reduce using rule 77 (PNULL -> not null .)
    where           reduce using rule 77 (PNULL -> not null .)
    group           reduce using rule 77 (PNULL -> not null .)
    having          reduce using rule 77 (PNULL -> not null .)
    order           reduce using rule 77 (PNULL -> not null .)
    end             reduce using rule 77 (PNULL -> not null .)
    else            reduce using rule 77 (PNULL -> not null .)
    when            reduce using rule 77 (PNULL -> not null .)
    constraint      reduce using rule 77 (PNULL -> not null .)
    default         reduce using rule 77 (PNULL -> not null .)
    primary         reduce using rule 77 (PNULL -> not null .)
    references      reduce using rule 77 (PNULL -> not null .)
    null            reduce using rule 77 (PNULL -> not null .)
    asc             reduce using rule 77 (PNULL -> not null .)
    desc            reduce using rule 77 (PNULL -> not null .)

  ! r_from          [ reduce using rule 78 (PNULL -> null .) ]
  ! coma            [ reduce using rule 78 (PNULL -> null .) ]
  ! limit           [ reduce using rule 78 (PNULL -> null .) ]
  ! offset          [ reduce using rule 78 (PNULL -> null .) ]
  ! union           [ reduce using rule 78 (PNULL -> null .) ]
  ! intersect       [ reduce using rule 78 (PNULL -> null .) ]
  ! except          [ reduce using rule 78 (PNULL -> null .) ]
  ! ptcoma          [ reduce using rule 78 (PNULL -> null .) ]
  ! mas             [ reduce using rule 78 (PNULL -> null .) ]
  ! menos           [ reduce using rule 78 (PNULL -> null .) ]
  ! multiplicacion  [ reduce using rule 78 (PNULL -> null .) ]
  ! division        [ reduce using rule 78 (PNULL -> null .) ]
  ! modulo          [ reduce using rule 78 (PNULL -> null .) ]
  ! elevado         [ reduce using rule 78 (PNULL -> null .) ]
  ! and             [ reduce using rule 78 (PNULL -> null .) ]
  ! or              [ reduce using rule 78 (PNULL -> null .) ]
  ! mayor           [ reduce using rule 78 (PNULL -> null .) ]
  ! menor           [ reduce using rule 78 (PNULL -> null .) ]
  ! mayor_igual     [ reduce using rule 78 (PNULL -> null .) ]
  ! menor_igual     [ reduce using rule 78 (PNULL -> null .) ]
  ! igual           [ reduce using rule 78 (PNULL -> null .) ]
  ! diferente1      [ reduce using rule 78 (PNULL -> null .) ]
  ! diferente2      [ reduce using rule 78 (PNULL -> null .) ]
  ! punto           [ reduce using rule 78 (PNULL -> null .) ]
  ! as              [ reduce using rule 78 (PNULL -> null .) ]
  ! cadenaString    [ reduce using rule 78 (PNULL -> null .) ]
  ! id              [ reduce using rule 78 (PNULL -> null .) ]
  ! cadena          [ reduce using rule 78 (PNULL -> null .) ]
  ! between         [ reduce using rule 78 (PNULL -> null .) ]
  ! in              [ reduce using rule 78 (PNULL -> null .) ]
  ! not             [ reduce using rule 78 (PNULL -> null .) ]
  ! is              [ reduce using rule 78 (PNULL -> null .) ]
  ! isnull          [ reduce using rule 78 (PNULL -> null .) ]
  ! notnull         [ reduce using rule 78 (PNULL -> null .) ]
  ! parc            [ reduce using rule 78 (PNULL -> null .) ]
  ! then            [ reduce using rule 78 (PNULL -> null .) ]
  ! where           [ reduce using rule 78 (PNULL -> null .) ]
  ! group           [ reduce using rule 78 (PNULL -> null .) ]
  ! having          [ reduce using rule 78 (PNULL -> null .) ]
  ! order           [ reduce using rule 78 (PNULL -> null .) ]
  ! end             [ reduce using rule 78 (PNULL -> null .) ]
  ! else            [ reduce using rule 78 (PNULL -> null .) ]
  ! when            [ reduce using rule 78 (PNULL -> null .) ]
  ! constraint      [ reduce using rule 78 (PNULL -> null .) ]
  ! default         [ reduce using rule 78 (PNULL -> null .) ]
  ! primary         [ reduce using rule 78 (PNULL -> null .) ]
  ! references      [ reduce using rule 78 (PNULL -> null .) ]
  ! null            [ reduce using rule 78 (PNULL -> null .) ]
  ! asc             [ reduce using rule 78 (PNULL -> null .) ]
  ! desc            [ reduce using rule 78 (PNULL -> null .) ]


state 115

    (182) EXP -> para EXP . parc
    (163) EXP -> EXP . mas EXP
    (164) EXP -> EXP . menos EXP
    (165) EXP -> EXP . multiplicacion EXP
    (166) EXP -> EXP . division EXP
    (167) EXP -> EXP . modulo EXP
    (168) EXP -> EXP . elevado EXP
    (169) EXP -> EXP . and EXP
    (170) EXP -> EXP . or EXP
    (171) EXP -> EXP . mayor EXP
    (172) EXP -> EXP . menor EXP
    (173) EXP -> EXP . mayor_igual EXP
    (174) EXP -> EXP . menor_igual EXP
    (175) EXP -> EXP . igual EXP
    (176) EXP -> EXP . diferente1 EXP
    (177) EXP -> EXP . diferente2 EXP
    (178) EXP -> EXP . punto EXP
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (213) PREDICADOS -> EXP . between EXP
    (214) PREDICADOS -> EXP . in para LEXP parc
    (215) PREDICADOS -> EXP . not in para LEXP parc
    (216) PREDICADOS -> EXP . not between EXP
    (217) PREDICADOS -> EXP . between symetric EXP
    (218) PREDICADOS -> EXP . not between symetric EXP
    (219) PREDICADOS -> EXP . is distinct r_from EXP
    (220) PREDICADOS -> EXP . is not distinct r_from EXP
    (221) PREDICADOS -> EXP . is PNULL
    (222) PREDICADOS -> EXP . isnull
    (223) PREDICADOS -> EXP . notnull
    (224) PREDICADOS -> EXP . is true
    (225) PREDICADOS -> EXP . is not true
    (226) PREDICADOS -> EXP . is false
    (227) PREDICADOS -> EXP . is not false
    (228) PREDICADOS -> EXP . is unknown
    (229) PREDICADOS -> EXP . is not unknown

    parc            shift and go to state 183
    mas             shift and go to state 85
    menos           shift and go to state 86
    multiplicacion  shift and go to state 87
    division        shift and go to state 88
    modulo          shift and go to state 89
    elevado         shift and go to state 90
    and             shift and go to state 91
    or              shift and go to state 92
    mayor           shift and go to state 93
    menor           shift and go to state 94
    mayor_igual     shift and go to state 95
    menor_igual     shift and go to state 96
    igual           shift and go to state 97
    diferente1      shift and go to state 98
    diferente2      shift and go to state 99
    punto           shift and go to state 100
    as              shift and go to state 101
    cadenaString    shift and go to state 102
    id              shift and go to state 103
    cadena          shift and go to state 104
    between         shift and go to state 105
    in              shift and go to state 106
    not             shift and go to state 107
    is              shift and go to state 108
    isnull          shift and go to state 109
    notnull         shift and go to state 110


state 116

    (201) EXP -> cadena like . cadena

    cadena          shift and go to state 184


state 117

    (202) EXP -> cadena not . like cadena

    like            shift and go to state 185


state 118

    (193) EXP -> id para . parc
    (194) EXP -> id para . LEXP parc
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    parc            shift and go to state 186
    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 187
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 119

    (195) EXP -> extract para . FIELDS r_from timestamp cadena parc
    (157) FIELDS -> . year
    (158) FIELDS -> . month
    (159) FIELDS -> . day
    (160) FIELDS -> . hour
    (161) FIELDS -> . minute
    (162) FIELDS -> . second

    year            shift and go to state 189
    month           shift and go to state 190
    day             shift and go to state 191
    hour            shift and go to state 192
    minute          shift and go to state 193
    second          shift and go to state 194

    FIELDS                         shift and go to state 188

state 120

    (198) EXP -> timestamp cadena .

    r_from          reduce using rule 198 (EXP -> timestamp cadena .)
    coma            reduce using rule 198 (EXP -> timestamp cadena .)
    limit           reduce using rule 198 (EXP -> timestamp cadena .)
    offset          reduce using rule 198 (EXP -> timestamp cadena .)
    union           reduce using rule 198 (EXP -> timestamp cadena .)
    intersect       reduce using rule 198 (EXP -> timestamp cadena .)
    except          reduce using rule 198 (EXP -> timestamp cadena .)
    ptcoma          reduce using rule 198 (EXP -> timestamp cadena .)
    mas             reduce using rule 198 (EXP -> timestamp cadena .)
    menos           reduce using rule 198 (EXP -> timestamp cadena .)
    multiplicacion  reduce using rule 198 (EXP -> timestamp cadena .)
    division        reduce using rule 198 (EXP -> timestamp cadena .)
    modulo          reduce using rule 198 (EXP -> timestamp cadena .)
    elevado         reduce using rule 198 (EXP -> timestamp cadena .)
    and             reduce using rule 198 (EXP -> timestamp cadena .)
    or              reduce using rule 198 (EXP -> timestamp cadena .)
    mayor           reduce using rule 198 (EXP -> timestamp cadena .)
    menor           reduce using rule 198 (EXP -> timestamp cadena .)
    mayor_igual     reduce using rule 198 (EXP -> timestamp cadena .)
    menor_igual     reduce using rule 198 (EXP -> timestamp cadena .)
    igual           reduce using rule 198 (EXP -> timestamp cadena .)
    diferente1      reduce using rule 198 (EXP -> timestamp cadena .)
    diferente2      reduce using rule 198 (EXP -> timestamp cadena .)
    punto           reduce using rule 198 (EXP -> timestamp cadena .)
    as              reduce using rule 198 (EXP -> timestamp cadena .)
    cadenaString    reduce using rule 198 (EXP -> timestamp cadena .)
    id              reduce using rule 198 (EXP -> timestamp cadena .)
    cadena          reduce using rule 198 (EXP -> timestamp cadena .)
    between         reduce using rule 198 (EXP -> timestamp cadena .)
    in              reduce using rule 198 (EXP -> timestamp cadena .)
    not             reduce using rule 198 (EXP -> timestamp cadena .)
    is              reduce using rule 198 (EXP -> timestamp cadena .)
    isnull          reduce using rule 198 (EXP -> timestamp cadena .)
    notnull         reduce using rule 198 (EXP -> timestamp cadena .)
    parc            reduce using rule 198 (EXP -> timestamp cadena .)
    then            reduce using rule 198 (EXP -> timestamp cadena .)
    where           reduce using rule 198 (EXP -> timestamp cadena .)
    group           reduce using rule 198 (EXP -> timestamp cadena .)
    having          reduce using rule 198 (EXP -> timestamp cadena .)
    order           reduce using rule 198 (EXP -> timestamp cadena .)
    end             reduce using rule 198 (EXP -> timestamp cadena .)
    else            reduce using rule 198 (EXP -> timestamp cadena .)
    when            reduce using rule 198 (EXP -> timestamp cadena .)
    constraint      reduce using rule 198 (EXP -> timestamp cadena .)
    default         reduce using rule 198 (EXP -> timestamp cadena .)
    primary         reduce using rule 198 (EXP -> timestamp cadena .)
    references      reduce using rule 198 (EXP -> timestamp cadena .)
    null            reduce using rule 198 (EXP -> timestamp cadena .)
    asc             reduce using rule 198 (EXP -> timestamp cadena .)
    desc            reduce using rule 198 (EXP -> timestamp cadena .)


state 121

    (199) EXP -> interval cadena .

    r_from          reduce using rule 199 (EXP -> interval cadena .)
    coma            reduce using rule 199 (EXP -> interval cadena .)
    limit           reduce using rule 199 (EXP -> interval cadena .)
    offset          reduce using rule 199 (EXP -> interval cadena .)
    union           reduce using rule 199 (EXP -> interval cadena .)
    intersect       reduce using rule 199 (EXP -> interval cadena .)
    except          reduce using rule 199 (EXP -> interval cadena .)
    ptcoma          reduce using rule 199 (EXP -> interval cadena .)
    mas             reduce using rule 199 (EXP -> interval cadena .)
    menos           reduce using rule 199 (EXP -> interval cadena .)
    multiplicacion  reduce using rule 199 (EXP -> interval cadena .)
    division        reduce using rule 199 (EXP -> interval cadena .)
    modulo          reduce using rule 199 (EXP -> interval cadena .)
    elevado         reduce using rule 199 (EXP -> interval cadena .)
    and             reduce using rule 199 (EXP -> interval cadena .)
    or              reduce using rule 199 (EXP -> interval cadena .)
    mayor           reduce using rule 199 (EXP -> interval cadena .)
    menor           reduce using rule 199 (EXP -> interval cadena .)
    mayor_igual     reduce using rule 199 (EXP -> interval cadena .)
    menor_igual     reduce using rule 199 (EXP -> interval cadena .)
    igual           reduce using rule 199 (EXP -> interval cadena .)
    diferente1      reduce using rule 199 (EXP -> interval cadena .)
    diferente2      reduce using rule 199 (EXP -> interval cadena .)
    punto           reduce using rule 199 (EXP -> interval cadena .)
    as              reduce using rule 199 (EXP -> interval cadena .)
    cadenaString    reduce using rule 199 (EXP -> interval cadena .)
    id              reduce using rule 199 (EXP -> interval cadena .)
    cadena          reduce using rule 199 (EXP -> interval cadena .)
    between         reduce using rule 199 (EXP -> interval cadena .)
    in              reduce using rule 199 (EXP -> interval cadena .)
    not             reduce using rule 199 (EXP -> interval cadena .)
    is              reduce using rule 199 (EXP -> interval cadena .)
    isnull          reduce using rule 199 (EXP -> interval cadena .)
    notnull         reduce using rule 199 (EXP -> interval cadena .)
    parc            reduce using rule 199 (EXP -> interval cadena .)
    then            reduce using rule 199 (EXP -> interval cadena .)
    where           reduce using rule 199 (EXP -> interval cadena .)
    group           reduce using rule 199 (EXP -> interval cadena .)
    having          reduce using rule 199 (EXP -> interval cadena .)
    order           reduce using rule 199 (EXP -> interval cadena .)
    end             reduce using rule 199 (EXP -> interval cadena .)
    else            reduce using rule 199 (EXP -> interval cadena .)
    when            reduce using rule 199 (EXP -> interval cadena .)
    constraint      reduce using rule 199 (EXP -> interval cadena .)
    default         reduce using rule 199 (EXP -> interval cadena .)
    primary         reduce using rule 199 (EXP -> interval cadena .)
    references      reduce using rule 199 (EXP -> interval cadena .)
    null            reduce using rule 199 (EXP -> interval cadena .)
    asc             reduce using rule 199 (EXP -> interval cadena .)
    desc            reduce using rule 199 (EXP -> interval cadena .)


state 122

    (203) EXP -> any para . LEXP parc
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 195
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 123

    (204) EXP -> all para . LEXP parc
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 196
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 124

    (205) EXP -> some para . LEXP parc
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 197
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 125

    (61) CREATETABLE -> create table id . para LDEF parc ptcoma
    (62) CREATETABLE -> create table id . para LDEF parc HERENCIA ptcoma

    para            shift and go to state 198


state 126

    (84) CREATETYPE -> create type id . as enum para LEXP parc

    as              shift and go to state 199


state 127

    (48) CREATEDB -> create RD if . not exist id
    (49) CREATEDB -> create RD if . not exist id OPCCDB

    not             shift and go to state 200


state 128

    (50) CREATEDB -> create RD id .
    (51) CREATEDB -> create RD id . OPCCDB
    (52) OPCCDB -> . PROPIETARIO
    (53) OPCCDB -> . MODO
    (54) OPCCDB -> . PROPIETARIO MODO
    (57) PROPIETARIO -> . owner igual id
    (58) PROPIETARIO -> . owner id
    (59) MODO -> . mode igual int
    (60) MODO -> . mode int

    ptcoma          reduce using rule 50 (CREATEDB -> create RD id .)
    owner           shift and go to state 204
    mode            shift and go to state 205

    OPCCDB                         shift and go to state 201
    PROPIETARIO                    shift and go to state 202
    MODO                           shift and go to state 203

state 129

    (55) RD -> or replace . databases

    databases       shift and go to state 206


state 130

    (117) UPDATE -> update id set . LCAMPOS where LEXP
    (118) LCAMPOS -> . LCAMPOS id igual EXP
    (119) LCAMPOS -> . id igual EXP
    (120) LCAMPOS -> . id igual default

    id              shift and go to state 207

    LCAMPOS                        shift and go to state 208

state 131

    (121) DELETE -> delete r_from id . where LEXP
    (122) DELETE -> delete r_from id .

    where           shift and go to state 209
    ptcoma          reduce using rule 122 (DELETE -> delete r_from id .)


state 132

    (25) ALTER -> alter databases id . RO
    (27) RO -> . rename to id
    (28) RO -> . owner to id

    rename          shift and go to state 211
    owner           shift and go to state 212

    RO                             shift and go to state 210

state 133

    (29) altertable -> alter table id . OP
    (30) OP -> . add ADD
    (31) OP -> . drop column ALTERDROP
    (32) OP -> . alter column id set not null
    (33) OP -> . alter column id set null
    (34) OP -> . listaalc
    (35) OP -> . drop ALTERDROP
    (36) OP -> . rename column id to id
    (37) listaalc -> . listaalc coma alc
    (38) listaalc -> . alc
    (39) alc -> . alter column id type TIPO

    add             shift and go to state 215
    drop            shift and go to state 216
    alter           shift and go to state 213
    rename          shift and go to state 218

    OP                             shift and go to state 214
    listaalc                       shift and go to state 217
    alc                            shift and go to state 219

state 134

    (22) DROP -> drop table id .

    ptcoma          reduce using rule 22 (DROP -> drop table id .)


state 135

    (23) DROP -> drop databases if . exist id

    exist           shift and go to state 220


state 136

    (24) DROP -> drop databases id .

    ptcoma          reduce using rule 24 (DROP -> drop databases id .)


state 137

    (21) INSERT -> insert into id . values para LEXP parc

    values          shift and go to state 221


state 138

    (15) CASE -> case LISTAWHEN ELSE . end

    end             shift and go to state 222


state 139

    (16) CASE -> case LISTAWHEN end .

    select          reduce using rule 16 (CASE -> case LISTAWHEN end .)
    create          reduce using rule 16 (CASE -> case LISTAWHEN end .)
    update          reduce using rule 16 (CASE -> case LISTAWHEN end .)
    delete          reduce using rule 16 (CASE -> case LISTAWHEN end .)
    alter           reduce using rule 16 (CASE -> case LISTAWHEN end .)
    drop            reduce using rule 16 (CASE -> case LISTAWHEN end .)
    insert          reduce using rule 16 (CASE -> case LISTAWHEN end .)
    case            reduce using rule 16 (CASE -> case LISTAWHEN end .)
    show            reduce using rule 16 (CASE -> case LISTAWHEN end .)
    $end            reduce using rule 16 (CASE -> case LISTAWHEN end .)
    r_from          reduce using rule 16 (CASE -> case LISTAWHEN end .)
    coma            reduce using rule 16 (CASE -> case LISTAWHEN end .)
    limit           reduce using rule 16 (CASE -> case LISTAWHEN end .)
    offset          reduce using rule 16 (CASE -> case LISTAWHEN end .)
    union           reduce using rule 16 (CASE -> case LISTAWHEN end .)
    intersect       reduce using rule 16 (CASE -> case LISTAWHEN end .)
    except          reduce using rule 16 (CASE -> case LISTAWHEN end .)
    ptcoma          reduce using rule 16 (CASE -> case LISTAWHEN end .)
    mas             reduce using rule 16 (CASE -> case LISTAWHEN end .)
    menos           reduce using rule 16 (CASE -> case LISTAWHEN end .)
    multiplicacion  reduce using rule 16 (CASE -> case LISTAWHEN end .)
    division        reduce using rule 16 (CASE -> case LISTAWHEN end .)
    modulo          reduce using rule 16 (CASE -> case LISTAWHEN end .)
    elevado         reduce using rule 16 (CASE -> case LISTAWHEN end .)
    and             reduce using rule 16 (CASE -> case LISTAWHEN end .)
    or              reduce using rule 16 (CASE -> case LISTAWHEN end .)
    mayor           reduce using rule 16 (CASE -> case LISTAWHEN end .)
    menor           reduce using rule 16 (CASE -> case LISTAWHEN end .)
    mayor_igual     reduce using rule 16 (CASE -> case LISTAWHEN end .)
    menor_igual     reduce using rule 16 (CASE -> case LISTAWHEN end .)
    igual           reduce using rule 16 (CASE -> case LISTAWHEN end .)
    diferente1      reduce using rule 16 (CASE -> case LISTAWHEN end .)
    diferente2      reduce using rule 16 (CASE -> case LISTAWHEN end .)
    punto           reduce using rule 16 (CASE -> case LISTAWHEN end .)
    as              reduce using rule 16 (CASE -> case LISTAWHEN end .)
    cadenaString    reduce using rule 16 (CASE -> case LISTAWHEN end .)
    id              reduce using rule 16 (CASE -> case LISTAWHEN end .)
    cadena          reduce using rule 16 (CASE -> case LISTAWHEN end .)
    between         reduce using rule 16 (CASE -> case LISTAWHEN end .)
    in              reduce using rule 16 (CASE -> case LISTAWHEN end .)
    not             reduce using rule 16 (CASE -> case LISTAWHEN end .)
    is              reduce using rule 16 (CASE -> case LISTAWHEN end .)
    isnull          reduce using rule 16 (CASE -> case LISTAWHEN end .)
    notnull         reduce using rule 16 (CASE -> case LISTAWHEN end .)
    parc            reduce using rule 16 (CASE -> case LISTAWHEN end .)
    then            reduce using rule 16 (CASE -> case LISTAWHEN end .)
    where           reduce using rule 16 (CASE -> case LISTAWHEN end .)
    group           reduce using rule 16 (CASE -> case LISTAWHEN end .)
    having          reduce using rule 16 (CASE -> case LISTAWHEN end .)
    order           reduce using rule 16 (CASE -> case LISTAWHEN end .)
    end             reduce using rule 16 (CASE -> case LISTAWHEN end .)
    else            reduce using rule 16 (CASE -> case LISTAWHEN end .)
    when            reduce using rule 16 (CASE -> case LISTAWHEN end .)
    constraint      reduce using rule 16 (CASE -> case LISTAWHEN end .)
    default         reduce using rule 16 (CASE -> case LISTAWHEN end .)
    primary         reduce using rule 16 (CASE -> case LISTAWHEN end .)
    references      reduce using rule 16 (CASE -> case LISTAWHEN end .)
    null            reduce using rule 16 (CASE -> case LISTAWHEN end .)
    asc             reduce using rule 16 (CASE -> case LISTAWHEN end .)
    desc            reduce using rule 16 (CASE -> case LISTAWHEN end .)


state 140

    (17) LISTAWHEN -> LISTAWHEN WHEN .

    end             reduce using rule 17 (LISTAWHEN -> LISTAWHEN WHEN .)
    else            reduce using rule 17 (LISTAWHEN -> LISTAWHEN WHEN .)
    when            reduce using rule 17 (LISTAWHEN -> LISTAWHEN WHEN .)


state 141

    (20) ELSE -> else . LEXP
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 223
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 142

    (19) WHEN -> when LEXP . then LEXP
    (124) LEXP -> LEXP . coma EXP

    then            shift and go to state 224
    coma            shift and go to state 82


state 143

    (85) SELECT -> select distinct LEXP r_from . LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 225
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 144

    (86) SELECT -> select LEXP r_from LEXP . WHERE GROUP HAVING ORDER LIMIT COMBINING
    (124) LEXP -> LEXP . coma EXP
    (96) WHERE -> . where LEXP
    (97) WHERE -> . where EXIST
    (98) WHERE -> . union LEXP
    (99) WHERE -> . union all LEXP
    (100) WHERE -> .

  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for union resolved as shift
  ! shift/reduce conflict for where resolved as shift
    coma            shift and go to state 82
    where           shift and go to state 227
    union           shift and go to state 228
    r_from          reduce using rule 100 (WHERE -> .)
    limit           reduce using rule 100 (WHERE -> .)
    offset          reduce using rule 100 (WHERE -> .)
    intersect       reduce using rule 100 (WHERE -> .)
    except          reduce using rule 100 (WHERE -> .)
    ptcoma          reduce using rule 100 (WHERE -> .)
    mas             reduce using rule 100 (WHERE -> .)
    menos           reduce using rule 100 (WHERE -> .)
    multiplicacion  reduce using rule 100 (WHERE -> .)
    division        reduce using rule 100 (WHERE -> .)
    modulo          reduce using rule 100 (WHERE -> .)
    elevado         reduce using rule 100 (WHERE -> .)
    and             reduce using rule 100 (WHERE -> .)
    or              reduce using rule 100 (WHERE -> .)
    mayor           reduce using rule 100 (WHERE -> .)
    menor           reduce using rule 100 (WHERE -> .)
    mayor_igual     reduce using rule 100 (WHERE -> .)
    menor_igual     reduce using rule 100 (WHERE -> .)
    igual           reduce using rule 100 (WHERE -> .)
    diferente1      reduce using rule 100 (WHERE -> .)
    diferente2      reduce using rule 100 (WHERE -> .)
    punto           reduce using rule 100 (WHERE -> .)
    as              reduce using rule 100 (WHERE -> .)
    cadenaString    reduce using rule 100 (WHERE -> .)
    id              reduce using rule 100 (WHERE -> .)
    cadena          reduce using rule 100 (WHERE -> .)
    between         reduce using rule 100 (WHERE -> .)
    in              reduce using rule 100 (WHERE -> .)
    not             reduce using rule 100 (WHERE -> .)
    is              reduce using rule 100 (WHERE -> .)
    isnull          reduce using rule 100 (WHERE -> .)
    notnull         reduce using rule 100 (WHERE -> .)
    parc            reduce using rule 100 (WHERE -> .)
    then            reduce using rule 100 (WHERE -> .)
    group           reduce using rule 100 (WHERE -> .)
    having          reduce using rule 100 (WHERE -> .)
    order           reduce using rule 100 (WHERE -> .)
    end             reduce using rule 100 (WHERE -> .)
    else            reduce using rule 100 (WHERE -> .)
    when            reduce using rule 100 (WHERE -> .)
    constraint      reduce using rule 100 (WHERE -> .)
    default         reduce using rule 100 (WHERE -> .)
    primary         reduce using rule 100 (WHERE -> .)
    references      reduce using rule 100 (WHERE -> .)
    null            reduce using rule 100 (WHERE -> .)
    asc             reduce using rule 100 (WHERE -> .)
    desc            reduce using rule 100 (WHERE -> .)

  ! coma            [ reduce using rule 100 (WHERE -> .) ]
  ! union           [ reduce using rule 100 (WHERE -> .) ]
  ! where           [ reduce using rule 100 (WHERE -> .) ]

    WHERE                          shift and go to state 226

state 145

    (87) SELECT -> select LEXP LIMIT COMBINING .

    ptcoma          reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    r_from          reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    coma            reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    limit           reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    offset          reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    union           reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    intersect       reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    except          reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    mas             reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    menos           reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    multiplicacion  reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    division        reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    modulo          reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    elevado         reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    and             reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    or              reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    mayor           reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    menor           reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    mayor_igual     reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    menor_igual     reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    igual           reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    diferente1      reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    diferente2      reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    punto           reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    as              reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    cadenaString    reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    id              reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    cadena          reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    between         reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    in              reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    not             reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    is              reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    isnull          reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    notnull         reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    parc            reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    then            reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    where           reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    group           reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    having          reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    order           reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    end             reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    else            reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    when            reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    constraint      reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    default         reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    primary         reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    references      reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    null            reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    asc             reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)
    desc            reduce using rule 87 (SELECT -> select LEXP LIMIT COMBINING .)


state 146

    (101) COMBINING -> union . LEXP
    (102) COMBINING -> union . all LEXP
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    all             shift and go to state 230
    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 229
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 147

    (103) COMBINING -> intersect . LEXP
    (104) COMBINING -> intersect . all LEXP
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    all             shift and go to state 232
    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 231
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 148

    (105) COMBINING -> except . LEXP
    (106) COMBINING -> except . all LEXP
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    all             shift and go to state 234
    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 233
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 149

    (124) LEXP -> LEXP coma EXP .
    (163) EXP -> EXP . mas EXP
    (164) EXP -> EXP . menos EXP
    (165) EXP -> EXP . multiplicacion EXP
    (166) EXP -> EXP . division EXP
    (167) EXP -> EXP . modulo EXP
    (168) EXP -> EXP . elevado EXP
    (169) EXP -> EXP . and EXP
    (170) EXP -> EXP . or EXP
    (171) EXP -> EXP . mayor EXP
    (172) EXP -> EXP . menor EXP
    (173) EXP -> EXP . mayor_igual EXP
    (174) EXP -> EXP . menor_igual EXP
    (175) EXP -> EXP . igual EXP
    (176) EXP -> EXP . diferente1 EXP
    (177) EXP -> EXP . diferente2 EXP
    (178) EXP -> EXP . punto EXP
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (213) PREDICADOS -> EXP . between EXP
    (214) PREDICADOS -> EXP . in para LEXP parc
    (215) PREDICADOS -> EXP . not in para LEXP parc
    (216) PREDICADOS -> EXP . not between EXP
    (217) PREDICADOS -> EXP . between symetric EXP
    (218) PREDICADOS -> EXP . not between symetric EXP
    (219) PREDICADOS -> EXP . is distinct r_from EXP
    (220) PREDICADOS -> EXP . is not distinct r_from EXP
    (221) PREDICADOS -> EXP . is PNULL
    (222) PREDICADOS -> EXP . isnull
    (223) PREDICADOS -> EXP . notnull
    (224) PREDICADOS -> EXP . is true
    (225) PREDICADOS -> EXP . is not true
    (226) PREDICADOS -> EXP . is false
    (227) PREDICADOS -> EXP . is not false
    (228) PREDICADOS -> EXP . is unknown
    (229) PREDICADOS -> EXP . is not unknown

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for punto resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
    r_from          reduce using rule 124 (LEXP -> LEXP coma EXP .)
    coma            reduce using rule 124 (LEXP -> LEXP coma EXP .)
    limit           reduce using rule 124 (LEXP -> LEXP coma EXP .)
    offset          reduce using rule 124 (LEXP -> LEXP coma EXP .)
    union           reduce using rule 124 (LEXP -> LEXP coma EXP .)
    intersect       reduce using rule 124 (LEXP -> LEXP coma EXP .)
    except          reduce using rule 124 (LEXP -> LEXP coma EXP .)
    ptcoma          reduce using rule 124 (LEXP -> LEXP coma EXP .)
    parc            reduce using rule 124 (LEXP -> LEXP coma EXP .)
    then            reduce using rule 124 (LEXP -> LEXP coma EXP .)
    where           reduce using rule 124 (LEXP -> LEXP coma EXP .)
    group           reduce using rule 124 (LEXP -> LEXP coma EXP .)
    having          reduce using rule 124 (LEXP -> LEXP coma EXP .)
    order           reduce using rule 124 (LEXP -> LEXP coma EXP .)
    end             reduce using rule 124 (LEXP -> LEXP coma EXP .)
    else            reduce using rule 124 (LEXP -> LEXP coma EXP .)
    when            reduce using rule 124 (LEXP -> LEXP coma EXP .)
    constraint      reduce using rule 124 (LEXP -> LEXP coma EXP .)
    default         reduce using rule 124 (LEXP -> LEXP coma EXP .)
    primary         reduce using rule 124 (LEXP -> LEXP coma EXP .)
    references      reduce using rule 124 (LEXP -> LEXP coma EXP .)
    null            reduce using rule 124 (LEXP -> LEXP coma EXP .)
    asc             reduce using rule 124 (LEXP -> LEXP coma EXP .)
    desc            reduce using rule 124 (LEXP -> LEXP coma EXP .)
    mas             shift and go to state 85
    menos           shift and go to state 86
    multiplicacion  shift and go to state 87
    division        shift and go to state 88
    modulo          shift and go to state 89
    elevado         shift and go to state 90
    and             shift and go to state 91
    or              shift and go to state 92
    mayor           shift and go to state 93
    menor           shift and go to state 94
    mayor_igual     shift and go to state 95
    menor_igual     shift and go to state 96
    igual           shift and go to state 97
    diferente1      shift and go to state 98
    diferente2      shift and go to state 99
    punto           shift and go to state 100
    as              shift and go to state 101
    cadenaString    shift and go to state 102
    id              shift and go to state 103
    cadena          shift and go to state 104
    between         shift and go to state 105
    in              shift and go to state 106
    not             shift and go to state 107
    is              shift and go to state 108
    isnull          shift and go to state 109
    notnull         shift and go to state 110

  ! mas             [ reduce using rule 124 (LEXP -> LEXP coma EXP .) ]
  ! menos           [ reduce using rule 124 (LEXP -> LEXP coma EXP .) ]
  ! multiplicacion  [ reduce using rule 124 (LEXP -> LEXP coma EXP .) ]
  ! division        [ reduce using rule 124 (LEXP -> LEXP coma EXP .) ]
  ! modulo          [ reduce using rule 124 (LEXP -> LEXP coma EXP .) ]
  ! elevado         [ reduce using rule 124 (LEXP -> LEXP coma EXP .) ]
  ! and             [ reduce using rule 124 (LEXP -> LEXP coma EXP .) ]
  ! or              [ reduce using rule 124 (LEXP -> LEXP coma EXP .) ]
  ! mayor           [ reduce using rule 124 (LEXP -> LEXP coma EXP .) ]
  ! menor           [ reduce using rule 124 (LEXP -> LEXP coma EXP .) ]
  ! mayor_igual     [ reduce using rule 124 (LEXP -> LEXP coma EXP .) ]
  ! menor_igual     [ reduce using rule 124 (LEXP -> LEXP coma EXP .) ]
  ! igual           [ reduce using rule 124 (LEXP -> LEXP coma EXP .) ]
  ! diferente1      [ reduce using rule 124 (LEXP -> LEXP coma EXP .) ]
  ! diferente2      [ reduce using rule 124 (LEXP -> LEXP coma EXP .) ]
  ! punto           [ reduce using rule 124 (LEXP -> LEXP coma EXP .) ]
  ! as              [ reduce using rule 124 (LEXP -> LEXP coma EXP .) ]
  ! cadenaString    [ reduce using rule 124 (LEXP -> LEXP coma EXP .) ]
  ! id              [ reduce using rule 124 (LEXP -> LEXP coma EXP .) ]
  ! cadena          [ reduce using rule 124 (LEXP -> LEXP coma EXP .) ]
  ! between         [ reduce using rule 124 (LEXP -> LEXP coma EXP .) ]
  ! in              [ reduce using rule 124 (LEXP -> LEXP coma EXP .) ]
  ! not             [ reduce using rule 124 (LEXP -> LEXP coma EXP .) ]
  ! is              [ reduce using rule 124 (LEXP -> LEXP coma EXP .) ]
  ! isnull          [ reduce using rule 124 (LEXP -> LEXP coma EXP .) ]
  ! notnull         [ reduce using rule 124 (LEXP -> LEXP coma EXP .) ]


state 150

    (88) LIMIT -> limit int .
    (91) LIMIT -> limit int . offset int

  ! shift/reduce conflict for offset resolved as shift
    union           reduce using rule 88 (LIMIT -> limit int .)
    intersect       reduce using rule 88 (LIMIT -> limit int .)
    except          reduce using rule 88 (LIMIT -> limit int .)
    ptcoma          reduce using rule 88 (LIMIT -> limit int .)
    r_from          reduce using rule 88 (LIMIT -> limit int .)
    coma            reduce using rule 88 (LIMIT -> limit int .)
    limit           reduce using rule 88 (LIMIT -> limit int .)
    mas             reduce using rule 88 (LIMIT -> limit int .)
    menos           reduce using rule 88 (LIMIT -> limit int .)
    multiplicacion  reduce using rule 88 (LIMIT -> limit int .)
    division        reduce using rule 88 (LIMIT -> limit int .)
    modulo          reduce using rule 88 (LIMIT -> limit int .)
    elevado         reduce using rule 88 (LIMIT -> limit int .)
    and             reduce using rule 88 (LIMIT -> limit int .)
    or              reduce using rule 88 (LIMIT -> limit int .)
    mayor           reduce using rule 88 (LIMIT -> limit int .)
    menor           reduce using rule 88 (LIMIT -> limit int .)
    mayor_igual     reduce using rule 88 (LIMIT -> limit int .)
    menor_igual     reduce using rule 88 (LIMIT -> limit int .)
    igual           reduce using rule 88 (LIMIT -> limit int .)
    diferente1      reduce using rule 88 (LIMIT -> limit int .)
    diferente2      reduce using rule 88 (LIMIT -> limit int .)
    punto           reduce using rule 88 (LIMIT -> limit int .)
    as              reduce using rule 88 (LIMIT -> limit int .)
    cadenaString    reduce using rule 88 (LIMIT -> limit int .)
    id              reduce using rule 88 (LIMIT -> limit int .)
    cadena          reduce using rule 88 (LIMIT -> limit int .)
    between         reduce using rule 88 (LIMIT -> limit int .)
    in              reduce using rule 88 (LIMIT -> limit int .)
    not             reduce using rule 88 (LIMIT -> limit int .)
    is              reduce using rule 88 (LIMIT -> limit int .)
    isnull          reduce using rule 88 (LIMIT -> limit int .)
    notnull         reduce using rule 88 (LIMIT -> limit int .)
    parc            reduce using rule 88 (LIMIT -> limit int .)
    then            reduce using rule 88 (LIMIT -> limit int .)
    where           reduce using rule 88 (LIMIT -> limit int .)
    group           reduce using rule 88 (LIMIT -> limit int .)
    having          reduce using rule 88 (LIMIT -> limit int .)
    order           reduce using rule 88 (LIMIT -> limit int .)
    end             reduce using rule 88 (LIMIT -> limit int .)
    else            reduce using rule 88 (LIMIT -> limit int .)
    when            reduce using rule 88 (LIMIT -> limit int .)
    constraint      reduce using rule 88 (LIMIT -> limit int .)
    default         reduce using rule 88 (LIMIT -> limit int .)
    primary         reduce using rule 88 (LIMIT -> limit int .)
    references      reduce using rule 88 (LIMIT -> limit int .)
    null            reduce using rule 88 (LIMIT -> limit int .)
    asc             reduce using rule 88 (LIMIT -> limit int .)
    desc            reduce using rule 88 (LIMIT -> limit int .)
    offset          shift and go to state 235

  ! offset          [ reduce using rule 88 (LIMIT -> limit int .) ]


state 151

    (89) LIMIT -> limit all .
    (93) LIMIT -> limit all . offset int

  ! shift/reduce conflict for offset resolved as shift
    union           reduce using rule 89 (LIMIT -> limit all .)
    intersect       reduce using rule 89 (LIMIT -> limit all .)
    except          reduce using rule 89 (LIMIT -> limit all .)
    ptcoma          reduce using rule 89 (LIMIT -> limit all .)
    r_from          reduce using rule 89 (LIMIT -> limit all .)
    coma            reduce using rule 89 (LIMIT -> limit all .)
    limit           reduce using rule 89 (LIMIT -> limit all .)
    mas             reduce using rule 89 (LIMIT -> limit all .)
    menos           reduce using rule 89 (LIMIT -> limit all .)
    multiplicacion  reduce using rule 89 (LIMIT -> limit all .)
    division        reduce using rule 89 (LIMIT -> limit all .)
    modulo          reduce using rule 89 (LIMIT -> limit all .)
    elevado         reduce using rule 89 (LIMIT -> limit all .)
    and             reduce using rule 89 (LIMIT -> limit all .)
    or              reduce using rule 89 (LIMIT -> limit all .)
    mayor           reduce using rule 89 (LIMIT -> limit all .)
    menor           reduce using rule 89 (LIMIT -> limit all .)
    mayor_igual     reduce using rule 89 (LIMIT -> limit all .)
    menor_igual     reduce using rule 89 (LIMIT -> limit all .)
    igual           reduce using rule 89 (LIMIT -> limit all .)
    diferente1      reduce using rule 89 (LIMIT -> limit all .)
    diferente2      reduce using rule 89 (LIMIT -> limit all .)
    punto           reduce using rule 89 (LIMIT -> limit all .)
    as              reduce using rule 89 (LIMIT -> limit all .)
    cadenaString    reduce using rule 89 (LIMIT -> limit all .)
    id              reduce using rule 89 (LIMIT -> limit all .)
    cadena          reduce using rule 89 (LIMIT -> limit all .)
    between         reduce using rule 89 (LIMIT -> limit all .)
    in              reduce using rule 89 (LIMIT -> limit all .)
    not             reduce using rule 89 (LIMIT -> limit all .)
    is              reduce using rule 89 (LIMIT -> limit all .)
    isnull          reduce using rule 89 (LIMIT -> limit all .)
    notnull         reduce using rule 89 (LIMIT -> limit all .)
    parc            reduce using rule 89 (LIMIT -> limit all .)
    then            reduce using rule 89 (LIMIT -> limit all .)
    where           reduce using rule 89 (LIMIT -> limit all .)
    group           reduce using rule 89 (LIMIT -> limit all .)
    having          reduce using rule 89 (LIMIT -> limit all .)
    order           reduce using rule 89 (LIMIT -> limit all .)
    end             reduce using rule 89 (LIMIT -> limit all .)
    else            reduce using rule 89 (LIMIT -> limit all .)
    when            reduce using rule 89 (LIMIT -> limit all .)
    constraint      reduce using rule 89 (LIMIT -> limit all .)
    default         reduce using rule 89 (LIMIT -> limit all .)
    primary         reduce using rule 89 (LIMIT -> limit all .)
    references      reduce using rule 89 (LIMIT -> limit all .)
    null            reduce using rule 89 (LIMIT -> limit all .)
    asc             reduce using rule 89 (LIMIT -> limit all .)
    desc            reduce using rule 89 (LIMIT -> limit all .)
    offset          shift and go to state 236

  ! offset          [ reduce using rule 89 (LIMIT -> limit all .) ]


state 152

    (90) LIMIT -> offset int .
    (92) LIMIT -> offset int . limit int
    (94) LIMIT -> offset int . limit all

  ! shift/reduce conflict for limit resolved as shift
    union           reduce using rule 90 (LIMIT -> offset int .)
    intersect       reduce using rule 90 (LIMIT -> offset int .)
    except          reduce using rule 90 (LIMIT -> offset int .)
    ptcoma          reduce using rule 90 (LIMIT -> offset int .)
    r_from          reduce using rule 90 (LIMIT -> offset int .)
    coma            reduce using rule 90 (LIMIT -> offset int .)
    offset          reduce using rule 90 (LIMIT -> offset int .)
    mas             reduce using rule 90 (LIMIT -> offset int .)
    menos           reduce using rule 90 (LIMIT -> offset int .)
    multiplicacion  reduce using rule 90 (LIMIT -> offset int .)
    division        reduce using rule 90 (LIMIT -> offset int .)
    modulo          reduce using rule 90 (LIMIT -> offset int .)
    elevado         reduce using rule 90 (LIMIT -> offset int .)
    and             reduce using rule 90 (LIMIT -> offset int .)
    or              reduce using rule 90 (LIMIT -> offset int .)
    mayor           reduce using rule 90 (LIMIT -> offset int .)
    menor           reduce using rule 90 (LIMIT -> offset int .)
    mayor_igual     reduce using rule 90 (LIMIT -> offset int .)
    menor_igual     reduce using rule 90 (LIMIT -> offset int .)
    igual           reduce using rule 90 (LIMIT -> offset int .)
    diferente1      reduce using rule 90 (LIMIT -> offset int .)
    diferente2      reduce using rule 90 (LIMIT -> offset int .)
    punto           reduce using rule 90 (LIMIT -> offset int .)
    as              reduce using rule 90 (LIMIT -> offset int .)
    cadenaString    reduce using rule 90 (LIMIT -> offset int .)
    id              reduce using rule 90 (LIMIT -> offset int .)
    cadena          reduce using rule 90 (LIMIT -> offset int .)
    between         reduce using rule 90 (LIMIT -> offset int .)
    in              reduce using rule 90 (LIMIT -> offset int .)
    not             reduce using rule 90 (LIMIT -> offset int .)
    is              reduce using rule 90 (LIMIT -> offset int .)
    isnull          reduce using rule 90 (LIMIT -> offset int .)
    notnull         reduce using rule 90 (LIMIT -> offset int .)
    parc            reduce using rule 90 (LIMIT -> offset int .)
    then            reduce using rule 90 (LIMIT -> offset int .)
    where           reduce using rule 90 (LIMIT -> offset int .)
    group           reduce using rule 90 (LIMIT -> offset int .)
    having          reduce using rule 90 (LIMIT -> offset int .)
    order           reduce using rule 90 (LIMIT -> offset int .)
    end             reduce using rule 90 (LIMIT -> offset int .)
    else            reduce using rule 90 (LIMIT -> offset int .)
    when            reduce using rule 90 (LIMIT -> offset int .)
    constraint      reduce using rule 90 (LIMIT -> offset int .)
    default         reduce using rule 90 (LIMIT -> offset int .)
    primary         reduce using rule 90 (LIMIT -> offset int .)
    references      reduce using rule 90 (LIMIT -> offset int .)
    null            reduce using rule 90 (LIMIT -> offset int .)
    asc             reduce using rule 90 (LIMIT -> offset int .)
    desc            reduce using rule 90 (LIMIT -> offset int .)
    limit           shift and go to state 237

  ! limit           [ reduce using rule 90 (LIMIT -> offset int .) ]


state 153

    (163) EXP -> EXP mas EXP .
    (163) EXP -> EXP . mas EXP
    (164) EXP -> EXP . menos EXP
    (165) EXP -> EXP . multiplicacion EXP
    (166) EXP -> EXP . division EXP
    (167) EXP -> EXP . modulo EXP
    (168) EXP -> EXP . elevado EXP
    (169) EXP -> EXP . and EXP
    (170) EXP -> EXP . or EXP
    (171) EXP -> EXP . mayor EXP
    (172) EXP -> EXP . menor EXP
    (173) EXP -> EXP . mayor_igual EXP
    (174) EXP -> EXP . menor_igual EXP
    (175) EXP -> EXP . igual EXP
    (176) EXP -> EXP . diferente1 EXP
    (177) EXP -> EXP . diferente2 EXP
    (178) EXP -> EXP . punto EXP
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (213) PREDICADOS -> EXP . between EXP
    (214) PREDICADOS -> EXP . in para LEXP parc
    (215) PREDICADOS -> EXP . not in para LEXP parc
    (216) PREDICADOS -> EXP . not between EXP
    (217) PREDICADOS -> EXP . between symetric EXP
    (218) PREDICADOS -> EXP . not between symetric EXP
    (219) PREDICADOS -> EXP . is distinct r_from EXP
    (220) PREDICADOS -> EXP . is not distinct r_from EXP
    (221) PREDICADOS -> EXP . is PNULL
    (222) PREDICADOS -> EXP . isnull
    (223) PREDICADOS -> EXP . notnull
    (224) PREDICADOS -> EXP . is true
    (225) PREDICADOS -> EXP . is not true
    (226) PREDICADOS -> EXP . is false
    (227) PREDICADOS -> EXP . is not false
    (228) PREDICADOS -> EXP . is unknown
    (229) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 163 (EXP -> EXP mas EXP .)
    coma            reduce using rule 163 (EXP -> EXP mas EXP .)
    limit           reduce using rule 163 (EXP -> EXP mas EXP .)
    offset          reduce using rule 163 (EXP -> EXP mas EXP .)
    union           reduce using rule 163 (EXP -> EXP mas EXP .)
    intersect       reduce using rule 163 (EXP -> EXP mas EXP .)
    except          reduce using rule 163 (EXP -> EXP mas EXP .)
    ptcoma          reduce using rule 163 (EXP -> EXP mas EXP .)
    mas             reduce using rule 163 (EXP -> EXP mas EXP .)
    menos           reduce using rule 163 (EXP -> EXP mas EXP .)
    multiplicacion  reduce using rule 163 (EXP -> EXP mas EXP .)
    division        reduce using rule 163 (EXP -> EXP mas EXP .)
    modulo          reduce using rule 163 (EXP -> EXP mas EXP .)
    elevado         reduce using rule 163 (EXP -> EXP mas EXP .)
    punto           reduce using rule 163 (EXP -> EXP mas EXP .)
    as              reduce using rule 163 (EXP -> EXP mas EXP .)
    cadenaString    reduce using rule 163 (EXP -> EXP mas EXP .)
    id              reduce using rule 163 (EXP -> EXP mas EXP .)
    cadena          reduce using rule 163 (EXP -> EXP mas EXP .)
    between         reduce using rule 163 (EXP -> EXP mas EXP .)
    in              reduce using rule 163 (EXP -> EXP mas EXP .)
    is              reduce using rule 163 (EXP -> EXP mas EXP .)
    isnull          reduce using rule 163 (EXP -> EXP mas EXP .)
    notnull         reduce using rule 163 (EXP -> EXP mas EXP .)
    parc            reduce using rule 163 (EXP -> EXP mas EXP .)
    then            reduce using rule 163 (EXP -> EXP mas EXP .)
    where           reduce using rule 163 (EXP -> EXP mas EXP .)
    group           reduce using rule 163 (EXP -> EXP mas EXP .)
    having          reduce using rule 163 (EXP -> EXP mas EXP .)
    order           reduce using rule 163 (EXP -> EXP mas EXP .)
    end             reduce using rule 163 (EXP -> EXP mas EXP .)
    else            reduce using rule 163 (EXP -> EXP mas EXP .)
    when            reduce using rule 163 (EXP -> EXP mas EXP .)
    constraint      reduce using rule 163 (EXP -> EXP mas EXP .)
    default         reduce using rule 163 (EXP -> EXP mas EXP .)
    primary         reduce using rule 163 (EXP -> EXP mas EXP .)
    references      reduce using rule 163 (EXP -> EXP mas EXP .)
    null            reduce using rule 163 (EXP -> EXP mas EXP .)
    asc             reduce using rule 163 (EXP -> EXP mas EXP .)
    desc            reduce using rule 163 (EXP -> EXP mas EXP .)
    and             shift and go to state 91
    or              shift and go to state 92
    mayor           shift and go to state 93
    menor           shift and go to state 94
    mayor_igual     shift and go to state 95
    menor_igual     shift and go to state 96
    igual           shift and go to state 97
    diferente1      shift and go to state 98
    diferente2      shift and go to state 99
    not             shift and go to state 107

  ! and             [ reduce using rule 163 (EXP -> EXP mas EXP .) ]
  ! or              [ reduce using rule 163 (EXP -> EXP mas EXP .) ]
  ! mayor           [ reduce using rule 163 (EXP -> EXP mas EXP .) ]
  ! menor           [ reduce using rule 163 (EXP -> EXP mas EXP .) ]
  ! mayor_igual     [ reduce using rule 163 (EXP -> EXP mas EXP .) ]
  ! menor_igual     [ reduce using rule 163 (EXP -> EXP mas EXP .) ]
  ! igual           [ reduce using rule 163 (EXP -> EXP mas EXP .) ]
  ! diferente1      [ reduce using rule 163 (EXP -> EXP mas EXP .) ]
  ! diferente2      [ reduce using rule 163 (EXP -> EXP mas EXP .) ]
  ! not             [ reduce using rule 163 (EXP -> EXP mas EXP .) ]
  ! mas             [ shift and go to state 85 ]
  ! menos           [ shift and go to state 86 ]
  ! multiplicacion  [ shift and go to state 87 ]
  ! division        [ shift and go to state 88 ]
  ! modulo          [ shift and go to state 89 ]
  ! elevado         [ shift and go to state 90 ]
  ! punto           [ shift and go to state 100 ]
  ! as              [ shift and go to state 101 ]
  ! cadenaString    [ shift and go to state 102 ]
  ! id              [ shift and go to state 103 ]
  ! cadena          [ shift and go to state 104 ]
  ! between         [ shift and go to state 105 ]
  ! in              [ shift and go to state 106 ]
  ! is              [ shift and go to state 108 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]


state 154

    (164) EXP -> EXP menos EXP .
    (163) EXP -> EXP . mas EXP
    (164) EXP -> EXP . menos EXP
    (165) EXP -> EXP . multiplicacion EXP
    (166) EXP -> EXP . division EXP
    (167) EXP -> EXP . modulo EXP
    (168) EXP -> EXP . elevado EXP
    (169) EXP -> EXP . and EXP
    (170) EXP -> EXP . or EXP
    (171) EXP -> EXP . mayor EXP
    (172) EXP -> EXP . menor EXP
    (173) EXP -> EXP . mayor_igual EXP
    (174) EXP -> EXP . menor_igual EXP
    (175) EXP -> EXP . igual EXP
    (176) EXP -> EXP . diferente1 EXP
    (177) EXP -> EXP . diferente2 EXP
    (178) EXP -> EXP . punto EXP
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (213) PREDICADOS -> EXP . between EXP
    (214) PREDICADOS -> EXP . in para LEXP parc
    (215) PREDICADOS -> EXP . not in para LEXP parc
    (216) PREDICADOS -> EXP . not between EXP
    (217) PREDICADOS -> EXP . between symetric EXP
    (218) PREDICADOS -> EXP . not between symetric EXP
    (219) PREDICADOS -> EXP . is distinct r_from EXP
    (220) PREDICADOS -> EXP . is not distinct r_from EXP
    (221) PREDICADOS -> EXP . is PNULL
    (222) PREDICADOS -> EXP . isnull
    (223) PREDICADOS -> EXP . notnull
    (224) PREDICADOS -> EXP . is true
    (225) PREDICADOS -> EXP . is not true
    (226) PREDICADOS -> EXP . is false
    (227) PREDICADOS -> EXP . is not false
    (228) PREDICADOS -> EXP . is unknown
    (229) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 164 (EXP -> EXP menos EXP .)
    coma            reduce using rule 164 (EXP -> EXP menos EXP .)
    limit           reduce using rule 164 (EXP -> EXP menos EXP .)
    offset          reduce using rule 164 (EXP -> EXP menos EXP .)
    union           reduce using rule 164 (EXP -> EXP menos EXP .)
    intersect       reduce using rule 164 (EXP -> EXP menos EXP .)
    except          reduce using rule 164 (EXP -> EXP menos EXP .)
    ptcoma          reduce using rule 164 (EXP -> EXP menos EXP .)
    mas             reduce using rule 164 (EXP -> EXP menos EXP .)
    menos           reduce using rule 164 (EXP -> EXP menos EXP .)
    multiplicacion  reduce using rule 164 (EXP -> EXP menos EXP .)
    division        reduce using rule 164 (EXP -> EXP menos EXP .)
    modulo          reduce using rule 164 (EXP -> EXP menos EXP .)
    elevado         reduce using rule 164 (EXP -> EXP menos EXP .)
    punto           reduce using rule 164 (EXP -> EXP menos EXP .)
    as              reduce using rule 164 (EXP -> EXP menos EXP .)
    cadenaString    reduce using rule 164 (EXP -> EXP menos EXP .)
    id              reduce using rule 164 (EXP -> EXP menos EXP .)
    cadena          reduce using rule 164 (EXP -> EXP menos EXP .)
    between         reduce using rule 164 (EXP -> EXP menos EXP .)
    in              reduce using rule 164 (EXP -> EXP menos EXP .)
    is              reduce using rule 164 (EXP -> EXP menos EXP .)
    isnull          reduce using rule 164 (EXP -> EXP menos EXP .)
    notnull         reduce using rule 164 (EXP -> EXP menos EXP .)
    parc            reduce using rule 164 (EXP -> EXP menos EXP .)
    then            reduce using rule 164 (EXP -> EXP menos EXP .)
    where           reduce using rule 164 (EXP -> EXP menos EXP .)
    group           reduce using rule 164 (EXP -> EXP menos EXP .)
    having          reduce using rule 164 (EXP -> EXP menos EXP .)
    order           reduce using rule 164 (EXP -> EXP menos EXP .)
    end             reduce using rule 164 (EXP -> EXP menos EXP .)
    else            reduce using rule 164 (EXP -> EXP menos EXP .)
    when            reduce using rule 164 (EXP -> EXP menos EXP .)
    constraint      reduce using rule 164 (EXP -> EXP menos EXP .)
    default         reduce using rule 164 (EXP -> EXP menos EXP .)
    primary         reduce using rule 164 (EXP -> EXP menos EXP .)
    references      reduce using rule 164 (EXP -> EXP menos EXP .)
    null            reduce using rule 164 (EXP -> EXP menos EXP .)
    asc             reduce using rule 164 (EXP -> EXP menos EXP .)
    desc            reduce using rule 164 (EXP -> EXP menos EXP .)
    and             shift and go to state 91
    or              shift and go to state 92
    mayor           shift and go to state 93
    menor           shift and go to state 94
    mayor_igual     shift and go to state 95
    menor_igual     shift and go to state 96
    igual           shift and go to state 97
    diferente1      shift and go to state 98
    diferente2      shift and go to state 99
    not             shift and go to state 107

  ! and             [ reduce using rule 164 (EXP -> EXP menos EXP .) ]
  ! or              [ reduce using rule 164 (EXP -> EXP menos EXP .) ]
  ! mayor           [ reduce using rule 164 (EXP -> EXP menos EXP .) ]
  ! menor           [ reduce using rule 164 (EXP -> EXP menos EXP .) ]
  ! mayor_igual     [ reduce using rule 164 (EXP -> EXP menos EXP .) ]
  ! menor_igual     [ reduce using rule 164 (EXP -> EXP menos EXP .) ]
  ! igual           [ reduce using rule 164 (EXP -> EXP menos EXP .) ]
  ! diferente1      [ reduce using rule 164 (EXP -> EXP menos EXP .) ]
  ! diferente2      [ reduce using rule 164 (EXP -> EXP menos EXP .) ]
  ! not             [ reduce using rule 164 (EXP -> EXP menos EXP .) ]
  ! mas             [ shift and go to state 85 ]
  ! menos           [ shift and go to state 86 ]
  ! multiplicacion  [ shift and go to state 87 ]
  ! division        [ shift and go to state 88 ]
  ! modulo          [ shift and go to state 89 ]
  ! elevado         [ shift and go to state 90 ]
  ! punto           [ shift and go to state 100 ]
  ! as              [ shift and go to state 101 ]
  ! cadenaString    [ shift and go to state 102 ]
  ! id              [ shift and go to state 103 ]
  ! cadena          [ shift and go to state 104 ]
  ! between         [ shift and go to state 105 ]
  ! in              [ shift and go to state 106 ]
  ! is              [ shift and go to state 108 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]


state 155

    (165) EXP -> EXP multiplicacion EXP .
    (163) EXP -> EXP . mas EXP
    (164) EXP -> EXP . menos EXP
    (165) EXP -> EXP . multiplicacion EXP
    (166) EXP -> EXP . division EXP
    (167) EXP -> EXP . modulo EXP
    (168) EXP -> EXP . elevado EXP
    (169) EXP -> EXP . and EXP
    (170) EXP -> EXP . or EXP
    (171) EXP -> EXP . mayor EXP
    (172) EXP -> EXP . menor EXP
    (173) EXP -> EXP . mayor_igual EXP
    (174) EXP -> EXP . menor_igual EXP
    (175) EXP -> EXP . igual EXP
    (176) EXP -> EXP . diferente1 EXP
    (177) EXP -> EXP . diferente2 EXP
    (178) EXP -> EXP . punto EXP
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (213) PREDICADOS -> EXP . between EXP
    (214) PREDICADOS -> EXP . in para LEXP parc
    (215) PREDICADOS -> EXP . not in para LEXP parc
    (216) PREDICADOS -> EXP . not between EXP
    (217) PREDICADOS -> EXP . between symetric EXP
    (218) PREDICADOS -> EXP . not between symetric EXP
    (219) PREDICADOS -> EXP . is distinct r_from EXP
    (220) PREDICADOS -> EXP . is not distinct r_from EXP
    (221) PREDICADOS -> EXP . is PNULL
    (222) PREDICADOS -> EXP . isnull
    (223) PREDICADOS -> EXP . notnull
    (224) PREDICADOS -> EXP . is true
    (225) PREDICADOS -> EXP . is not true
    (226) PREDICADOS -> EXP . is false
    (227) PREDICADOS -> EXP . is not false
    (228) PREDICADOS -> EXP . is unknown
    (229) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    coma            reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    limit           reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    offset          reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    union           reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    intersect       reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    except          reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    ptcoma          reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    multiplicacion  reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    division        reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    modulo          reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    elevado         reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    punto           reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    as              reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    cadenaString    reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    id              reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    cadena          reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    between         reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    in              reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    is              reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    isnull          reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    notnull         reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    parc            reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    then            reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    where           reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    group           reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    having          reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    order           reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    end             reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    else            reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    when            reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    constraint      reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    default         reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    primary         reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    references      reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    null            reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    asc             reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    desc            reduce using rule 165 (EXP -> EXP multiplicacion EXP .)
    mas             shift and go to state 85
    menos           shift and go to state 86
    and             shift and go to state 91
    or              shift and go to state 92
    mayor           shift and go to state 93
    menor           shift and go to state 94
    mayor_igual     shift and go to state 95
    menor_igual     shift and go to state 96
    igual           shift and go to state 97
    diferente1      shift and go to state 98
    diferente2      shift and go to state 99
    not             shift and go to state 107

  ! mas             [ reduce using rule 165 (EXP -> EXP multiplicacion EXP .) ]
  ! menos           [ reduce using rule 165 (EXP -> EXP multiplicacion EXP .) ]
  ! and             [ reduce using rule 165 (EXP -> EXP multiplicacion EXP .) ]
  ! or              [ reduce using rule 165 (EXP -> EXP multiplicacion EXP .) ]
  ! mayor           [ reduce using rule 165 (EXP -> EXP multiplicacion EXP .) ]
  ! menor           [ reduce using rule 165 (EXP -> EXP multiplicacion EXP .) ]
  ! mayor_igual     [ reduce using rule 165 (EXP -> EXP multiplicacion EXP .) ]
  ! menor_igual     [ reduce using rule 165 (EXP -> EXP multiplicacion EXP .) ]
  ! igual           [ reduce using rule 165 (EXP -> EXP multiplicacion EXP .) ]
  ! diferente1      [ reduce using rule 165 (EXP -> EXP multiplicacion EXP .) ]
  ! diferente2      [ reduce using rule 165 (EXP -> EXP multiplicacion EXP .) ]
  ! not             [ reduce using rule 165 (EXP -> EXP multiplicacion EXP .) ]
  ! multiplicacion  [ shift and go to state 87 ]
  ! division        [ shift and go to state 88 ]
  ! modulo          [ shift and go to state 89 ]
  ! elevado         [ shift and go to state 90 ]
  ! punto           [ shift and go to state 100 ]
  ! as              [ shift and go to state 101 ]
  ! cadenaString    [ shift and go to state 102 ]
  ! id              [ shift and go to state 103 ]
  ! cadena          [ shift and go to state 104 ]
  ! between         [ shift and go to state 105 ]
  ! in              [ shift and go to state 106 ]
  ! is              [ shift and go to state 108 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]


state 156

    (166) EXP -> EXP division EXP .
    (163) EXP -> EXP . mas EXP
    (164) EXP -> EXP . menos EXP
    (165) EXP -> EXP . multiplicacion EXP
    (166) EXP -> EXP . division EXP
    (167) EXP -> EXP . modulo EXP
    (168) EXP -> EXP . elevado EXP
    (169) EXP -> EXP . and EXP
    (170) EXP -> EXP . or EXP
    (171) EXP -> EXP . mayor EXP
    (172) EXP -> EXP . menor EXP
    (173) EXP -> EXP . mayor_igual EXP
    (174) EXP -> EXP . menor_igual EXP
    (175) EXP -> EXP . igual EXP
    (176) EXP -> EXP . diferente1 EXP
    (177) EXP -> EXP . diferente2 EXP
    (178) EXP -> EXP . punto EXP
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (213) PREDICADOS -> EXP . between EXP
    (214) PREDICADOS -> EXP . in para LEXP parc
    (215) PREDICADOS -> EXP . not in para LEXP parc
    (216) PREDICADOS -> EXP . not between EXP
    (217) PREDICADOS -> EXP . between symetric EXP
    (218) PREDICADOS -> EXP . not between symetric EXP
    (219) PREDICADOS -> EXP . is distinct r_from EXP
    (220) PREDICADOS -> EXP . is not distinct r_from EXP
    (221) PREDICADOS -> EXP . is PNULL
    (222) PREDICADOS -> EXP . isnull
    (223) PREDICADOS -> EXP . notnull
    (224) PREDICADOS -> EXP . is true
    (225) PREDICADOS -> EXP . is not true
    (226) PREDICADOS -> EXP . is false
    (227) PREDICADOS -> EXP . is not false
    (228) PREDICADOS -> EXP . is unknown
    (229) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 166 (EXP -> EXP division EXP .)
    coma            reduce using rule 166 (EXP -> EXP division EXP .)
    limit           reduce using rule 166 (EXP -> EXP division EXP .)
    offset          reduce using rule 166 (EXP -> EXP division EXP .)
    union           reduce using rule 166 (EXP -> EXP division EXP .)
    intersect       reduce using rule 166 (EXP -> EXP division EXP .)
    except          reduce using rule 166 (EXP -> EXP division EXP .)
    ptcoma          reduce using rule 166 (EXP -> EXP division EXP .)
    multiplicacion  reduce using rule 166 (EXP -> EXP division EXP .)
    division        reduce using rule 166 (EXP -> EXP division EXP .)
    modulo          reduce using rule 166 (EXP -> EXP division EXP .)
    elevado         reduce using rule 166 (EXP -> EXP division EXP .)
    punto           reduce using rule 166 (EXP -> EXP division EXP .)
    as              reduce using rule 166 (EXP -> EXP division EXP .)
    cadenaString    reduce using rule 166 (EXP -> EXP division EXP .)
    id              reduce using rule 166 (EXP -> EXP division EXP .)
    cadena          reduce using rule 166 (EXP -> EXP division EXP .)
    between         reduce using rule 166 (EXP -> EXP division EXP .)
    in              reduce using rule 166 (EXP -> EXP division EXP .)
    is              reduce using rule 166 (EXP -> EXP division EXP .)
    isnull          reduce using rule 166 (EXP -> EXP division EXP .)
    notnull         reduce using rule 166 (EXP -> EXP division EXP .)
    parc            reduce using rule 166 (EXP -> EXP division EXP .)
    then            reduce using rule 166 (EXP -> EXP division EXP .)
    where           reduce using rule 166 (EXP -> EXP division EXP .)
    group           reduce using rule 166 (EXP -> EXP division EXP .)
    having          reduce using rule 166 (EXP -> EXP division EXP .)
    order           reduce using rule 166 (EXP -> EXP division EXP .)
    end             reduce using rule 166 (EXP -> EXP division EXP .)
    else            reduce using rule 166 (EXP -> EXP division EXP .)
    when            reduce using rule 166 (EXP -> EXP division EXP .)
    constraint      reduce using rule 166 (EXP -> EXP division EXP .)
    default         reduce using rule 166 (EXP -> EXP division EXP .)
    primary         reduce using rule 166 (EXP -> EXP division EXP .)
    references      reduce using rule 166 (EXP -> EXP division EXP .)
    null            reduce using rule 166 (EXP -> EXP division EXP .)
    asc             reduce using rule 166 (EXP -> EXP division EXP .)
    desc            reduce using rule 166 (EXP -> EXP division EXP .)
    mas             shift and go to state 85
    menos           shift and go to state 86
    and             shift and go to state 91
    or              shift and go to state 92
    mayor           shift and go to state 93
    menor           shift and go to state 94
    mayor_igual     shift and go to state 95
    menor_igual     shift and go to state 96
    igual           shift and go to state 97
    diferente1      shift and go to state 98
    diferente2      shift and go to state 99
    not             shift and go to state 107

  ! mas             [ reduce using rule 166 (EXP -> EXP division EXP .) ]
  ! menos           [ reduce using rule 166 (EXP -> EXP division EXP .) ]
  ! and             [ reduce using rule 166 (EXP -> EXP division EXP .) ]
  ! or              [ reduce using rule 166 (EXP -> EXP division EXP .) ]
  ! mayor           [ reduce using rule 166 (EXP -> EXP division EXP .) ]
  ! menor           [ reduce using rule 166 (EXP -> EXP division EXP .) ]
  ! mayor_igual     [ reduce using rule 166 (EXP -> EXP division EXP .) ]
  ! menor_igual     [ reduce using rule 166 (EXP -> EXP division EXP .) ]
  ! igual           [ reduce using rule 166 (EXP -> EXP division EXP .) ]
  ! diferente1      [ reduce using rule 166 (EXP -> EXP division EXP .) ]
  ! diferente2      [ reduce using rule 166 (EXP -> EXP division EXP .) ]
  ! not             [ reduce using rule 166 (EXP -> EXP division EXP .) ]
  ! multiplicacion  [ shift and go to state 87 ]
  ! division        [ shift and go to state 88 ]
  ! modulo          [ shift and go to state 89 ]
  ! elevado         [ shift and go to state 90 ]
  ! punto           [ shift and go to state 100 ]
  ! as              [ shift and go to state 101 ]
  ! cadenaString    [ shift and go to state 102 ]
  ! id              [ shift and go to state 103 ]
  ! cadena          [ shift and go to state 104 ]
  ! between         [ shift and go to state 105 ]
  ! in              [ shift and go to state 106 ]
  ! is              [ shift and go to state 108 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]


state 157

    (167) EXP -> EXP modulo EXP .
    (163) EXP -> EXP . mas EXP
    (164) EXP -> EXP . menos EXP
    (165) EXP -> EXP . multiplicacion EXP
    (166) EXP -> EXP . division EXP
    (167) EXP -> EXP . modulo EXP
    (168) EXP -> EXP . elevado EXP
    (169) EXP -> EXP . and EXP
    (170) EXP -> EXP . or EXP
    (171) EXP -> EXP . mayor EXP
    (172) EXP -> EXP . menor EXP
    (173) EXP -> EXP . mayor_igual EXP
    (174) EXP -> EXP . menor_igual EXP
    (175) EXP -> EXP . igual EXP
    (176) EXP -> EXP . diferente1 EXP
    (177) EXP -> EXP . diferente2 EXP
    (178) EXP -> EXP . punto EXP
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (213) PREDICADOS -> EXP . between EXP
    (214) PREDICADOS -> EXP . in para LEXP parc
    (215) PREDICADOS -> EXP . not in para LEXP parc
    (216) PREDICADOS -> EXP . not between EXP
    (217) PREDICADOS -> EXP . between symetric EXP
    (218) PREDICADOS -> EXP . not between symetric EXP
    (219) PREDICADOS -> EXP . is distinct r_from EXP
    (220) PREDICADOS -> EXP . is not distinct r_from EXP
    (221) PREDICADOS -> EXP . is PNULL
    (222) PREDICADOS -> EXP . isnull
    (223) PREDICADOS -> EXP . notnull
    (224) PREDICADOS -> EXP . is true
    (225) PREDICADOS -> EXP . is not true
    (226) PREDICADOS -> EXP . is false
    (227) PREDICADOS -> EXP . is not false
    (228) PREDICADOS -> EXP . is unknown
    (229) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 167 (EXP -> EXP modulo EXP .)
    coma            reduce using rule 167 (EXP -> EXP modulo EXP .)
    limit           reduce using rule 167 (EXP -> EXP modulo EXP .)
    offset          reduce using rule 167 (EXP -> EXP modulo EXP .)
    union           reduce using rule 167 (EXP -> EXP modulo EXP .)
    intersect       reduce using rule 167 (EXP -> EXP modulo EXP .)
    except          reduce using rule 167 (EXP -> EXP modulo EXP .)
    ptcoma          reduce using rule 167 (EXP -> EXP modulo EXP .)
    multiplicacion  reduce using rule 167 (EXP -> EXP modulo EXP .)
    division        reduce using rule 167 (EXP -> EXP modulo EXP .)
    modulo          reduce using rule 167 (EXP -> EXP modulo EXP .)
    elevado         reduce using rule 167 (EXP -> EXP modulo EXP .)
    punto           reduce using rule 167 (EXP -> EXP modulo EXP .)
    as              reduce using rule 167 (EXP -> EXP modulo EXP .)
    cadenaString    reduce using rule 167 (EXP -> EXP modulo EXP .)
    id              reduce using rule 167 (EXP -> EXP modulo EXP .)
    cadena          reduce using rule 167 (EXP -> EXP modulo EXP .)
    between         reduce using rule 167 (EXP -> EXP modulo EXP .)
    in              reduce using rule 167 (EXP -> EXP modulo EXP .)
    is              reduce using rule 167 (EXP -> EXP modulo EXP .)
    isnull          reduce using rule 167 (EXP -> EXP modulo EXP .)
    notnull         reduce using rule 167 (EXP -> EXP modulo EXP .)
    parc            reduce using rule 167 (EXP -> EXP modulo EXP .)
    then            reduce using rule 167 (EXP -> EXP modulo EXP .)
    where           reduce using rule 167 (EXP -> EXP modulo EXP .)
    group           reduce using rule 167 (EXP -> EXP modulo EXP .)
    having          reduce using rule 167 (EXP -> EXP modulo EXP .)
    order           reduce using rule 167 (EXP -> EXP modulo EXP .)
    end             reduce using rule 167 (EXP -> EXP modulo EXP .)
    else            reduce using rule 167 (EXP -> EXP modulo EXP .)
    when            reduce using rule 167 (EXP -> EXP modulo EXP .)
    constraint      reduce using rule 167 (EXP -> EXP modulo EXP .)
    default         reduce using rule 167 (EXP -> EXP modulo EXP .)
    primary         reduce using rule 167 (EXP -> EXP modulo EXP .)
    references      reduce using rule 167 (EXP -> EXP modulo EXP .)
    null            reduce using rule 167 (EXP -> EXP modulo EXP .)
    asc             reduce using rule 167 (EXP -> EXP modulo EXP .)
    desc            reduce using rule 167 (EXP -> EXP modulo EXP .)
    mas             shift and go to state 85
    menos           shift and go to state 86
    and             shift and go to state 91
    or              shift and go to state 92
    mayor           shift and go to state 93
    menor           shift and go to state 94
    mayor_igual     shift and go to state 95
    menor_igual     shift and go to state 96
    igual           shift and go to state 97
    diferente1      shift and go to state 98
    diferente2      shift and go to state 99
    not             shift and go to state 107

  ! mas             [ reduce using rule 167 (EXP -> EXP modulo EXP .) ]
  ! menos           [ reduce using rule 167 (EXP -> EXP modulo EXP .) ]
  ! and             [ reduce using rule 167 (EXP -> EXP modulo EXP .) ]
  ! or              [ reduce using rule 167 (EXP -> EXP modulo EXP .) ]
  ! mayor           [ reduce using rule 167 (EXP -> EXP modulo EXP .) ]
  ! menor           [ reduce using rule 167 (EXP -> EXP modulo EXP .) ]
  ! mayor_igual     [ reduce using rule 167 (EXP -> EXP modulo EXP .) ]
  ! menor_igual     [ reduce using rule 167 (EXP -> EXP modulo EXP .) ]
  ! igual           [ reduce using rule 167 (EXP -> EXP modulo EXP .) ]
  ! diferente1      [ reduce using rule 167 (EXP -> EXP modulo EXP .) ]
  ! diferente2      [ reduce using rule 167 (EXP -> EXP modulo EXP .) ]
  ! not             [ reduce using rule 167 (EXP -> EXP modulo EXP .) ]
  ! multiplicacion  [ shift and go to state 87 ]
  ! division        [ shift and go to state 88 ]
  ! modulo          [ shift and go to state 89 ]
  ! elevado         [ shift and go to state 90 ]
  ! punto           [ shift and go to state 100 ]
  ! as              [ shift and go to state 101 ]
  ! cadenaString    [ shift and go to state 102 ]
  ! id              [ shift and go to state 103 ]
  ! cadena          [ shift and go to state 104 ]
  ! between         [ shift and go to state 105 ]
  ! in              [ shift and go to state 106 ]
  ! is              [ shift and go to state 108 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]


state 158

    (168) EXP -> EXP elevado EXP .
    (163) EXP -> EXP . mas EXP
    (164) EXP -> EXP . menos EXP
    (165) EXP -> EXP . multiplicacion EXP
    (166) EXP -> EXP . division EXP
    (167) EXP -> EXP . modulo EXP
    (168) EXP -> EXP . elevado EXP
    (169) EXP -> EXP . and EXP
    (170) EXP -> EXP . or EXP
    (171) EXP -> EXP . mayor EXP
    (172) EXP -> EXP . menor EXP
    (173) EXP -> EXP . mayor_igual EXP
    (174) EXP -> EXP . menor_igual EXP
    (175) EXP -> EXP . igual EXP
    (176) EXP -> EXP . diferente1 EXP
    (177) EXP -> EXP . diferente2 EXP
    (178) EXP -> EXP . punto EXP
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (213) PREDICADOS -> EXP . between EXP
    (214) PREDICADOS -> EXP . in para LEXP parc
    (215) PREDICADOS -> EXP . not in para LEXP parc
    (216) PREDICADOS -> EXP . not between EXP
    (217) PREDICADOS -> EXP . between symetric EXP
    (218) PREDICADOS -> EXP . not between symetric EXP
    (219) PREDICADOS -> EXP . is distinct r_from EXP
    (220) PREDICADOS -> EXP . is not distinct r_from EXP
    (221) PREDICADOS -> EXP . is PNULL
    (222) PREDICADOS -> EXP . isnull
    (223) PREDICADOS -> EXP . notnull
    (224) PREDICADOS -> EXP . is true
    (225) PREDICADOS -> EXP . is not true
    (226) PREDICADOS -> EXP . is false
    (227) PREDICADOS -> EXP . is not false
    (228) PREDICADOS -> EXP . is unknown
    (229) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 168 (EXP -> EXP elevado EXP .)
    coma            reduce using rule 168 (EXP -> EXP elevado EXP .)
    limit           reduce using rule 168 (EXP -> EXP elevado EXP .)
    offset          reduce using rule 168 (EXP -> EXP elevado EXP .)
    union           reduce using rule 168 (EXP -> EXP elevado EXP .)
    intersect       reduce using rule 168 (EXP -> EXP elevado EXP .)
    except          reduce using rule 168 (EXP -> EXP elevado EXP .)
    ptcoma          reduce using rule 168 (EXP -> EXP elevado EXP .)
    elevado         reduce using rule 168 (EXP -> EXP elevado EXP .)
    punto           reduce using rule 168 (EXP -> EXP elevado EXP .)
    as              reduce using rule 168 (EXP -> EXP elevado EXP .)
    cadenaString    reduce using rule 168 (EXP -> EXP elevado EXP .)
    id              reduce using rule 168 (EXP -> EXP elevado EXP .)
    cadena          reduce using rule 168 (EXP -> EXP elevado EXP .)
    between         reduce using rule 168 (EXP -> EXP elevado EXP .)
    in              reduce using rule 168 (EXP -> EXP elevado EXP .)
    is              reduce using rule 168 (EXP -> EXP elevado EXP .)
    isnull          reduce using rule 168 (EXP -> EXP elevado EXP .)
    notnull         reduce using rule 168 (EXP -> EXP elevado EXP .)
    parc            reduce using rule 168 (EXP -> EXP elevado EXP .)
    then            reduce using rule 168 (EXP -> EXP elevado EXP .)
    where           reduce using rule 168 (EXP -> EXP elevado EXP .)
    group           reduce using rule 168 (EXP -> EXP elevado EXP .)
    having          reduce using rule 168 (EXP -> EXP elevado EXP .)
    order           reduce using rule 168 (EXP -> EXP elevado EXP .)
    end             reduce using rule 168 (EXP -> EXP elevado EXP .)
    else            reduce using rule 168 (EXP -> EXP elevado EXP .)
    when            reduce using rule 168 (EXP -> EXP elevado EXP .)
    constraint      reduce using rule 168 (EXP -> EXP elevado EXP .)
    default         reduce using rule 168 (EXP -> EXP elevado EXP .)
    primary         reduce using rule 168 (EXP -> EXP elevado EXP .)
    references      reduce using rule 168 (EXP -> EXP elevado EXP .)
    null            reduce using rule 168 (EXP -> EXP elevado EXP .)
    asc             reduce using rule 168 (EXP -> EXP elevado EXP .)
    desc            reduce using rule 168 (EXP -> EXP elevado EXP .)
    mas             shift and go to state 85
    menos           shift and go to state 86
    multiplicacion  shift and go to state 87
    division        shift and go to state 88
    modulo          shift and go to state 89
    and             shift and go to state 91
    or              shift and go to state 92
    mayor           shift and go to state 93
    menor           shift and go to state 94
    mayor_igual     shift and go to state 95
    menor_igual     shift and go to state 96
    igual           shift and go to state 97
    diferente1      shift and go to state 98
    diferente2      shift and go to state 99
    not             shift and go to state 107

  ! mas             [ reduce using rule 168 (EXP -> EXP elevado EXP .) ]
  ! menos           [ reduce using rule 168 (EXP -> EXP elevado EXP .) ]
  ! multiplicacion  [ reduce using rule 168 (EXP -> EXP elevado EXP .) ]
  ! division        [ reduce using rule 168 (EXP -> EXP elevado EXP .) ]
  ! modulo          [ reduce using rule 168 (EXP -> EXP elevado EXP .) ]
  ! and             [ reduce using rule 168 (EXP -> EXP elevado EXP .) ]
  ! or              [ reduce using rule 168 (EXP -> EXP elevado EXP .) ]
  ! mayor           [ reduce using rule 168 (EXP -> EXP elevado EXP .) ]
  ! menor           [ reduce using rule 168 (EXP -> EXP elevado EXP .) ]
  ! mayor_igual     [ reduce using rule 168 (EXP -> EXP elevado EXP .) ]
  ! menor_igual     [ reduce using rule 168 (EXP -> EXP elevado EXP .) ]
  ! igual           [ reduce using rule 168 (EXP -> EXP elevado EXP .) ]
  ! diferente1      [ reduce using rule 168 (EXP -> EXP elevado EXP .) ]
  ! diferente2      [ reduce using rule 168 (EXP -> EXP elevado EXP .) ]
  ! not             [ reduce using rule 168 (EXP -> EXP elevado EXP .) ]
  ! elevado         [ shift and go to state 90 ]
  ! punto           [ shift and go to state 100 ]
  ! as              [ shift and go to state 101 ]
  ! cadenaString    [ shift and go to state 102 ]
  ! id              [ shift and go to state 103 ]
  ! cadena          [ shift and go to state 104 ]
  ! between         [ shift and go to state 105 ]
  ! in              [ shift and go to state 106 ]
  ! is              [ shift and go to state 108 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]


state 159

    (169) EXP -> EXP and EXP .
    (163) EXP -> EXP . mas EXP
    (164) EXP -> EXP . menos EXP
    (165) EXP -> EXP . multiplicacion EXP
    (166) EXP -> EXP . division EXP
    (167) EXP -> EXP . modulo EXP
    (168) EXP -> EXP . elevado EXP
    (169) EXP -> EXP . and EXP
    (170) EXP -> EXP . or EXP
    (171) EXP -> EXP . mayor EXP
    (172) EXP -> EXP . menor EXP
    (173) EXP -> EXP . mayor_igual EXP
    (174) EXP -> EXP . menor_igual EXP
    (175) EXP -> EXP . igual EXP
    (176) EXP -> EXP . diferente1 EXP
    (177) EXP -> EXP . diferente2 EXP
    (178) EXP -> EXP . punto EXP
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (213) PREDICADOS -> EXP . between EXP
    (214) PREDICADOS -> EXP . in para LEXP parc
    (215) PREDICADOS -> EXP . not in para LEXP parc
    (216) PREDICADOS -> EXP . not between EXP
    (217) PREDICADOS -> EXP . between symetric EXP
    (218) PREDICADOS -> EXP . not between symetric EXP
    (219) PREDICADOS -> EXP . is distinct r_from EXP
    (220) PREDICADOS -> EXP . is not distinct r_from EXP
    (221) PREDICADOS -> EXP . is PNULL
    (222) PREDICADOS -> EXP . isnull
    (223) PREDICADOS -> EXP . notnull
    (224) PREDICADOS -> EXP . is true
    (225) PREDICADOS -> EXP . is not true
    (226) PREDICADOS -> EXP . is false
    (227) PREDICADOS -> EXP . is not false
    (228) PREDICADOS -> EXP . is unknown
    (229) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 169 (EXP -> EXP and EXP .)
    coma            reduce using rule 169 (EXP -> EXP and EXP .)
    limit           reduce using rule 169 (EXP -> EXP and EXP .)
    offset          reduce using rule 169 (EXP -> EXP and EXP .)
    union           reduce using rule 169 (EXP -> EXP and EXP .)
    intersect       reduce using rule 169 (EXP -> EXP and EXP .)
    except          reduce using rule 169 (EXP -> EXP and EXP .)
    ptcoma          reduce using rule 169 (EXP -> EXP and EXP .)
    mas             reduce using rule 169 (EXP -> EXP and EXP .)
    menos           reduce using rule 169 (EXP -> EXP and EXP .)
    multiplicacion  reduce using rule 169 (EXP -> EXP and EXP .)
    division        reduce using rule 169 (EXP -> EXP and EXP .)
    modulo          reduce using rule 169 (EXP -> EXP and EXP .)
    elevado         reduce using rule 169 (EXP -> EXP and EXP .)
    and             reduce using rule 169 (EXP -> EXP and EXP .)
    mayor           reduce using rule 169 (EXP -> EXP and EXP .)
    menor           reduce using rule 169 (EXP -> EXP and EXP .)
    mayor_igual     reduce using rule 169 (EXP -> EXP and EXP .)
    menor_igual     reduce using rule 169 (EXP -> EXP and EXP .)
    igual           reduce using rule 169 (EXP -> EXP and EXP .)
    diferente1      reduce using rule 169 (EXP -> EXP and EXP .)
    diferente2      reduce using rule 169 (EXP -> EXP and EXP .)
    punto           reduce using rule 169 (EXP -> EXP and EXP .)
    as              reduce using rule 169 (EXP -> EXP and EXP .)
    cadenaString    reduce using rule 169 (EXP -> EXP and EXP .)
    id              reduce using rule 169 (EXP -> EXP and EXP .)
    cadena          reduce using rule 169 (EXP -> EXP and EXP .)
    between         reduce using rule 169 (EXP -> EXP and EXP .)
    in              reduce using rule 169 (EXP -> EXP and EXP .)
    not             reduce using rule 169 (EXP -> EXP and EXP .)
    is              reduce using rule 169 (EXP -> EXP and EXP .)
    isnull          reduce using rule 169 (EXP -> EXP and EXP .)
    notnull         reduce using rule 169 (EXP -> EXP and EXP .)
    parc            reduce using rule 169 (EXP -> EXP and EXP .)
    then            reduce using rule 169 (EXP -> EXP and EXP .)
    where           reduce using rule 169 (EXP -> EXP and EXP .)
    group           reduce using rule 169 (EXP -> EXP and EXP .)
    having          reduce using rule 169 (EXP -> EXP and EXP .)
    order           reduce using rule 169 (EXP -> EXP and EXP .)
    end             reduce using rule 169 (EXP -> EXP and EXP .)
    else            reduce using rule 169 (EXP -> EXP and EXP .)
    when            reduce using rule 169 (EXP -> EXP and EXP .)
    constraint      reduce using rule 169 (EXP -> EXP and EXP .)
    default         reduce using rule 169 (EXP -> EXP and EXP .)
    primary         reduce using rule 169 (EXP -> EXP and EXP .)
    references      reduce using rule 169 (EXP -> EXP and EXP .)
    null            reduce using rule 169 (EXP -> EXP and EXP .)
    asc             reduce using rule 169 (EXP -> EXP and EXP .)
    desc            reduce using rule 169 (EXP -> EXP and EXP .)
    or              shift and go to state 92

  ! or              [ reduce using rule 169 (EXP -> EXP and EXP .) ]
  ! mas             [ shift and go to state 85 ]
  ! menos           [ shift and go to state 86 ]
  ! multiplicacion  [ shift and go to state 87 ]
  ! division        [ shift and go to state 88 ]
  ! modulo          [ shift and go to state 89 ]
  ! elevado         [ shift and go to state 90 ]
  ! and             [ shift and go to state 91 ]
  ! mayor           [ shift and go to state 93 ]
  ! menor           [ shift and go to state 94 ]
  ! mayor_igual     [ shift and go to state 95 ]
  ! menor_igual     [ shift and go to state 96 ]
  ! igual           [ shift and go to state 97 ]
  ! diferente1      [ shift and go to state 98 ]
  ! diferente2      [ shift and go to state 99 ]
  ! punto           [ shift and go to state 100 ]
  ! as              [ shift and go to state 101 ]
  ! cadenaString    [ shift and go to state 102 ]
  ! id              [ shift and go to state 103 ]
  ! cadena          [ shift and go to state 104 ]
  ! between         [ shift and go to state 105 ]
  ! in              [ shift and go to state 106 ]
  ! not             [ shift and go to state 107 ]
  ! is              [ shift and go to state 108 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]


state 160

    (170) EXP -> EXP or EXP .
    (163) EXP -> EXP . mas EXP
    (164) EXP -> EXP . menos EXP
    (165) EXP -> EXP . multiplicacion EXP
    (166) EXP -> EXP . division EXP
    (167) EXP -> EXP . modulo EXP
    (168) EXP -> EXP . elevado EXP
    (169) EXP -> EXP . and EXP
    (170) EXP -> EXP . or EXP
    (171) EXP -> EXP . mayor EXP
    (172) EXP -> EXP . menor EXP
    (173) EXP -> EXP . mayor_igual EXP
    (174) EXP -> EXP . menor_igual EXP
    (175) EXP -> EXP . igual EXP
    (176) EXP -> EXP . diferente1 EXP
    (177) EXP -> EXP . diferente2 EXP
    (178) EXP -> EXP . punto EXP
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (213) PREDICADOS -> EXP . between EXP
    (214) PREDICADOS -> EXP . in para LEXP parc
    (215) PREDICADOS -> EXP . not in para LEXP parc
    (216) PREDICADOS -> EXP . not between EXP
    (217) PREDICADOS -> EXP . between symetric EXP
    (218) PREDICADOS -> EXP . not between symetric EXP
    (219) PREDICADOS -> EXP . is distinct r_from EXP
    (220) PREDICADOS -> EXP . is not distinct r_from EXP
    (221) PREDICADOS -> EXP . is PNULL
    (222) PREDICADOS -> EXP . isnull
    (223) PREDICADOS -> EXP . notnull
    (224) PREDICADOS -> EXP . is true
    (225) PREDICADOS -> EXP . is not true
    (226) PREDICADOS -> EXP . is false
    (227) PREDICADOS -> EXP . is not false
    (228) PREDICADOS -> EXP . is unknown
    (229) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 170 (EXP -> EXP or EXP .)
    coma            reduce using rule 170 (EXP -> EXP or EXP .)
    limit           reduce using rule 170 (EXP -> EXP or EXP .)
    offset          reduce using rule 170 (EXP -> EXP or EXP .)
    union           reduce using rule 170 (EXP -> EXP or EXP .)
    intersect       reduce using rule 170 (EXP -> EXP or EXP .)
    except          reduce using rule 170 (EXP -> EXP or EXP .)
    ptcoma          reduce using rule 170 (EXP -> EXP or EXP .)
    mas             reduce using rule 170 (EXP -> EXP or EXP .)
    menos           reduce using rule 170 (EXP -> EXP or EXP .)
    multiplicacion  reduce using rule 170 (EXP -> EXP or EXP .)
    division        reduce using rule 170 (EXP -> EXP or EXP .)
    modulo          reduce using rule 170 (EXP -> EXP or EXP .)
    elevado         reduce using rule 170 (EXP -> EXP or EXP .)
    and             reduce using rule 170 (EXP -> EXP or EXP .)
    or              reduce using rule 170 (EXP -> EXP or EXP .)
    mayor           reduce using rule 170 (EXP -> EXP or EXP .)
    menor           reduce using rule 170 (EXP -> EXP or EXP .)
    mayor_igual     reduce using rule 170 (EXP -> EXP or EXP .)
    menor_igual     reduce using rule 170 (EXP -> EXP or EXP .)
    igual           reduce using rule 170 (EXP -> EXP or EXP .)
    diferente1      reduce using rule 170 (EXP -> EXP or EXP .)
    diferente2      reduce using rule 170 (EXP -> EXP or EXP .)
    punto           reduce using rule 170 (EXP -> EXP or EXP .)
    as              reduce using rule 170 (EXP -> EXP or EXP .)
    cadenaString    reduce using rule 170 (EXP -> EXP or EXP .)
    id              reduce using rule 170 (EXP -> EXP or EXP .)
    cadena          reduce using rule 170 (EXP -> EXP or EXP .)
    between         reduce using rule 170 (EXP -> EXP or EXP .)
    in              reduce using rule 170 (EXP -> EXP or EXP .)
    not             reduce using rule 170 (EXP -> EXP or EXP .)
    is              reduce using rule 170 (EXP -> EXP or EXP .)
    isnull          reduce using rule 170 (EXP -> EXP or EXP .)
    notnull         reduce using rule 170 (EXP -> EXP or EXP .)
    parc            reduce using rule 170 (EXP -> EXP or EXP .)
    then            reduce using rule 170 (EXP -> EXP or EXP .)
    where           reduce using rule 170 (EXP -> EXP or EXP .)
    group           reduce using rule 170 (EXP -> EXP or EXP .)
    having          reduce using rule 170 (EXP -> EXP or EXP .)
    order           reduce using rule 170 (EXP -> EXP or EXP .)
    end             reduce using rule 170 (EXP -> EXP or EXP .)
    else            reduce using rule 170 (EXP -> EXP or EXP .)
    when            reduce using rule 170 (EXP -> EXP or EXP .)
    constraint      reduce using rule 170 (EXP -> EXP or EXP .)
    default         reduce using rule 170 (EXP -> EXP or EXP .)
    primary         reduce using rule 170 (EXP -> EXP or EXP .)
    references      reduce using rule 170 (EXP -> EXP or EXP .)
    null            reduce using rule 170 (EXP -> EXP or EXP .)
    asc             reduce using rule 170 (EXP -> EXP or EXP .)
    desc            reduce using rule 170 (EXP -> EXP or EXP .)

  ! mas             [ shift and go to state 85 ]
  ! menos           [ shift and go to state 86 ]
  ! multiplicacion  [ shift and go to state 87 ]
  ! division        [ shift and go to state 88 ]
  ! modulo          [ shift and go to state 89 ]
  ! elevado         [ shift and go to state 90 ]
  ! and             [ shift and go to state 91 ]
  ! or              [ shift and go to state 92 ]
  ! mayor           [ shift and go to state 93 ]
  ! menor           [ shift and go to state 94 ]
  ! mayor_igual     [ shift and go to state 95 ]
  ! menor_igual     [ shift and go to state 96 ]
  ! igual           [ shift and go to state 97 ]
  ! diferente1      [ shift and go to state 98 ]
  ! diferente2      [ shift and go to state 99 ]
  ! punto           [ shift and go to state 100 ]
  ! as              [ shift and go to state 101 ]
  ! cadenaString    [ shift and go to state 102 ]
  ! id              [ shift and go to state 103 ]
  ! cadena          [ shift and go to state 104 ]
  ! between         [ shift and go to state 105 ]
  ! in              [ shift and go to state 106 ]
  ! not             [ shift and go to state 107 ]
  ! is              [ shift and go to state 108 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]


state 161

    (171) EXP -> EXP mayor EXP .
    (163) EXP -> EXP . mas EXP
    (164) EXP -> EXP . menos EXP
    (165) EXP -> EXP . multiplicacion EXP
    (166) EXP -> EXP . division EXP
    (167) EXP -> EXP . modulo EXP
    (168) EXP -> EXP . elevado EXP
    (169) EXP -> EXP . and EXP
    (170) EXP -> EXP . or EXP
    (171) EXP -> EXP . mayor EXP
    (172) EXP -> EXP . menor EXP
    (173) EXP -> EXP . mayor_igual EXP
    (174) EXP -> EXP . menor_igual EXP
    (175) EXP -> EXP . igual EXP
    (176) EXP -> EXP . diferente1 EXP
    (177) EXP -> EXP . diferente2 EXP
    (178) EXP -> EXP . punto EXP
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (213) PREDICADOS -> EXP . between EXP
    (214) PREDICADOS -> EXP . in para LEXP parc
    (215) PREDICADOS -> EXP . not in para LEXP parc
    (216) PREDICADOS -> EXP . not between EXP
    (217) PREDICADOS -> EXP . between symetric EXP
    (218) PREDICADOS -> EXP . not between symetric EXP
    (219) PREDICADOS -> EXP . is distinct r_from EXP
    (220) PREDICADOS -> EXP . is not distinct r_from EXP
    (221) PREDICADOS -> EXP . is PNULL
    (222) PREDICADOS -> EXP . isnull
    (223) PREDICADOS -> EXP . notnull
    (224) PREDICADOS -> EXP . is true
    (225) PREDICADOS -> EXP . is not true
    (226) PREDICADOS -> EXP . is false
    (227) PREDICADOS -> EXP . is not false
    (228) PREDICADOS -> EXP . is unknown
    (229) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 171 (EXP -> EXP mayor EXP .)
    coma            reduce using rule 171 (EXP -> EXP mayor EXP .)
    limit           reduce using rule 171 (EXP -> EXP mayor EXP .)
    offset          reduce using rule 171 (EXP -> EXP mayor EXP .)
    union           reduce using rule 171 (EXP -> EXP mayor EXP .)
    intersect       reduce using rule 171 (EXP -> EXP mayor EXP .)
    except          reduce using rule 171 (EXP -> EXP mayor EXP .)
    ptcoma          reduce using rule 171 (EXP -> EXP mayor EXP .)
    mas             reduce using rule 171 (EXP -> EXP mayor EXP .)
    menos           reduce using rule 171 (EXP -> EXP mayor EXP .)
    multiplicacion  reduce using rule 171 (EXP -> EXP mayor EXP .)
    division        reduce using rule 171 (EXP -> EXP mayor EXP .)
    modulo          reduce using rule 171 (EXP -> EXP mayor EXP .)
    elevado         reduce using rule 171 (EXP -> EXP mayor EXP .)
    mayor           reduce using rule 171 (EXP -> EXP mayor EXP .)
    menor           reduce using rule 171 (EXP -> EXP mayor EXP .)
    mayor_igual     reduce using rule 171 (EXP -> EXP mayor EXP .)
    menor_igual     reduce using rule 171 (EXP -> EXP mayor EXP .)
    igual           reduce using rule 171 (EXP -> EXP mayor EXP .)
    diferente1      reduce using rule 171 (EXP -> EXP mayor EXP .)
    diferente2      reduce using rule 171 (EXP -> EXP mayor EXP .)
    punto           reduce using rule 171 (EXP -> EXP mayor EXP .)
    as              reduce using rule 171 (EXP -> EXP mayor EXP .)
    cadenaString    reduce using rule 171 (EXP -> EXP mayor EXP .)
    id              reduce using rule 171 (EXP -> EXP mayor EXP .)
    cadena          reduce using rule 171 (EXP -> EXP mayor EXP .)
    between         reduce using rule 171 (EXP -> EXP mayor EXP .)
    in              reduce using rule 171 (EXP -> EXP mayor EXP .)
    is              reduce using rule 171 (EXP -> EXP mayor EXP .)
    isnull          reduce using rule 171 (EXP -> EXP mayor EXP .)
    notnull         reduce using rule 171 (EXP -> EXP mayor EXP .)
    parc            reduce using rule 171 (EXP -> EXP mayor EXP .)
    then            reduce using rule 171 (EXP -> EXP mayor EXP .)
    where           reduce using rule 171 (EXP -> EXP mayor EXP .)
    group           reduce using rule 171 (EXP -> EXP mayor EXP .)
    having          reduce using rule 171 (EXP -> EXP mayor EXP .)
    order           reduce using rule 171 (EXP -> EXP mayor EXP .)
    end             reduce using rule 171 (EXP -> EXP mayor EXP .)
    else            reduce using rule 171 (EXP -> EXP mayor EXP .)
    when            reduce using rule 171 (EXP -> EXP mayor EXP .)
    constraint      reduce using rule 171 (EXP -> EXP mayor EXP .)
    default         reduce using rule 171 (EXP -> EXP mayor EXP .)
    primary         reduce using rule 171 (EXP -> EXP mayor EXP .)
    references      reduce using rule 171 (EXP -> EXP mayor EXP .)
    null            reduce using rule 171 (EXP -> EXP mayor EXP .)
    asc             reduce using rule 171 (EXP -> EXP mayor EXP .)
    desc            reduce using rule 171 (EXP -> EXP mayor EXP .)
    and             shift and go to state 91
    or              shift and go to state 92
    not             shift and go to state 107

  ! and             [ reduce using rule 171 (EXP -> EXP mayor EXP .) ]
  ! or              [ reduce using rule 171 (EXP -> EXP mayor EXP .) ]
  ! not             [ reduce using rule 171 (EXP -> EXP mayor EXP .) ]
  ! mas             [ shift and go to state 85 ]
  ! menos           [ shift and go to state 86 ]
  ! multiplicacion  [ shift and go to state 87 ]
  ! division        [ shift and go to state 88 ]
  ! modulo          [ shift and go to state 89 ]
  ! elevado         [ shift and go to state 90 ]
  ! mayor           [ shift and go to state 93 ]
  ! menor           [ shift and go to state 94 ]
  ! mayor_igual     [ shift and go to state 95 ]
  ! menor_igual     [ shift and go to state 96 ]
  ! igual           [ shift and go to state 97 ]
  ! diferente1      [ shift and go to state 98 ]
  ! diferente2      [ shift and go to state 99 ]
  ! punto           [ shift and go to state 100 ]
  ! as              [ shift and go to state 101 ]
  ! cadenaString    [ shift and go to state 102 ]
  ! id              [ shift and go to state 103 ]
  ! cadena          [ shift and go to state 104 ]
  ! between         [ shift and go to state 105 ]
  ! in              [ shift and go to state 106 ]
  ! is              [ shift and go to state 108 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]


state 162

    (172) EXP -> EXP menor EXP .
    (163) EXP -> EXP . mas EXP
    (164) EXP -> EXP . menos EXP
    (165) EXP -> EXP . multiplicacion EXP
    (166) EXP -> EXP . division EXP
    (167) EXP -> EXP . modulo EXP
    (168) EXP -> EXP . elevado EXP
    (169) EXP -> EXP . and EXP
    (170) EXP -> EXP . or EXP
    (171) EXP -> EXP . mayor EXP
    (172) EXP -> EXP . menor EXP
    (173) EXP -> EXP . mayor_igual EXP
    (174) EXP -> EXP . menor_igual EXP
    (175) EXP -> EXP . igual EXP
    (176) EXP -> EXP . diferente1 EXP
    (177) EXP -> EXP . diferente2 EXP
    (178) EXP -> EXP . punto EXP
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (213) PREDICADOS -> EXP . between EXP
    (214) PREDICADOS -> EXP . in para LEXP parc
    (215) PREDICADOS -> EXP . not in para LEXP parc
    (216) PREDICADOS -> EXP . not between EXP
    (217) PREDICADOS -> EXP . between symetric EXP
    (218) PREDICADOS -> EXP . not between symetric EXP
    (219) PREDICADOS -> EXP . is distinct r_from EXP
    (220) PREDICADOS -> EXP . is not distinct r_from EXP
    (221) PREDICADOS -> EXP . is PNULL
    (222) PREDICADOS -> EXP . isnull
    (223) PREDICADOS -> EXP . notnull
    (224) PREDICADOS -> EXP . is true
    (225) PREDICADOS -> EXP . is not true
    (226) PREDICADOS -> EXP . is false
    (227) PREDICADOS -> EXP . is not false
    (228) PREDICADOS -> EXP . is unknown
    (229) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 172 (EXP -> EXP menor EXP .)
    coma            reduce using rule 172 (EXP -> EXP menor EXP .)
    limit           reduce using rule 172 (EXP -> EXP menor EXP .)
    offset          reduce using rule 172 (EXP -> EXP menor EXP .)
    union           reduce using rule 172 (EXP -> EXP menor EXP .)
    intersect       reduce using rule 172 (EXP -> EXP menor EXP .)
    except          reduce using rule 172 (EXP -> EXP menor EXP .)
    ptcoma          reduce using rule 172 (EXP -> EXP menor EXP .)
    mas             reduce using rule 172 (EXP -> EXP menor EXP .)
    menos           reduce using rule 172 (EXP -> EXP menor EXP .)
    multiplicacion  reduce using rule 172 (EXP -> EXP menor EXP .)
    division        reduce using rule 172 (EXP -> EXP menor EXP .)
    modulo          reduce using rule 172 (EXP -> EXP menor EXP .)
    elevado         reduce using rule 172 (EXP -> EXP menor EXP .)
    mayor           reduce using rule 172 (EXP -> EXP menor EXP .)
    menor           reduce using rule 172 (EXP -> EXP menor EXP .)
    mayor_igual     reduce using rule 172 (EXP -> EXP menor EXP .)
    menor_igual     reduce using rule 172 (EXP -> EXP menor EXP .)
    igual           reduce using rule 172 (EXP -> EXP menor EXP .)
    diferente1      reduce using rule 172 (EXP -> EXP menor EXP .)
    diferente2      reduce using rule 172 (EXP -> EXP menor EXP .)
    punto           reduce using rule 172 (EXP -> EXP menor EXP .)
    as              reduce using rule 172 (EXP -> EXP menor EXP .)
    cadenaString    reduce using rule 172 (EXP -> EXP menor EXP .)
    id              reduce using rule 172 (EXP -> EXP menor EXP .)
    cadena          reduce using rule 172 (EXP -> EXP menor EXP .)
    between         reduce using rule 172 (EXP -> EXP menor EXP .)
    in              reduce using rule 172 (EXP -> EXP menor EXP .)
    is              reduce using rule 172 (EXP -> EXP menor EXP .)
    isnull          reduce using rule 172 (EXP -> EXP menor EXP .)
    notnull         reduce using rule 172 (EXP -> EXP menor EXP .)
    parc            reduce using rule 172 (EXP -> EXP menor EXP .)
    then            reduce using rule 172 (EXP -> EXP menor EXP .)
    where           reduce using rule 172 (EXP -> EXP menor EXP .)
    group           reduce using rule 172 (EXP -> EXP menor EXP .)
    having          reduce using rule 172 (EXP -> EXP menor EXP .)
    order           reduce using rule 172 (EXP -> EXP menor EXP .)
    end             reduce using rule 172 (EXP -> EXP menor EXP .)
    else            reduce using rule 172 (EXP -> EXP menor EXP .)
    when            reduce using rule 172 (EXP -> EXP menor EXP .)
    constraint      reduce using rule 172 (EXP -> EXP menor EXP .)
    default         reduce using rule 172 (EXP -> EXP menor EXP .)
    primary         reduce using rule 172 (EXP -> EXP menor EXP .)
    references      reduce using rule 172 (EXP -> EXP menor EXP .)
    null            reduce using rule 172 (EXP -> EXP menor EXP .)
    asc             reduce using rule 172 (EXP -> EXP menor EXP .)
    desc            reduce using rule 172 (EXP -> EXP menor EXP .)
    and             shift and go to state 91
    or              shift and go to state 92
    not             shift and go to state 107

  ! and             [ reduce using rule 172 (EXP -> EXP menor EXP .) ]
  ! or              [ reduce using rule 172 (EXP -> EXP menor EXP .) ]
  ! not             [ reduce using rule 172 (EXP -> EXP menor EXP .) ]
  ! mas             [ shift and go to state 85 ]
  ! menos           [ shift and go to state 86 ]
  ! multiplicacion  [ shift and go to state 87 ]
  ! division        [ shift and go to state 88 ]
  ! modulo          [ shift and go to state 89 ]
  ! elevado         [ shift and go to state 90 ]
  ! mayor           [ shift and go to state 93 ]
  ! menor           [ shift and go to state 94 ]
  ! mayor_igual     [ shift and go to state 95 ]
  ! menor_igual     [ shift and go to state 96 ]
  ! igual           [ shift and go to state 97 ]
  ! diferente1      [ shift and go to state 98 ]
  ! diferente2      [ shift and go to state 99 ]
  ! punto           [ shift and go to state 100 ]
  ! as              [ shift and go to state 101 ]
  ! cadenaString    [ shift and go to state 102 ]
  ! id              [ shift and go to state 103 ]
  ! cadena          [ shift and go to state 104 ]
  ! between         [ shift and go to state 105 ]
  ! in              [ shift and go to state 106 ]
  ! is              [ shift and go to state 108 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]


state 163

    (173) EXP -> EXP mayor_igual EXP .
    (163) EXP -> EXP . mas EXP
    (164) EXP -> EXP . menos EXP
    (165) EXP -> EXP . multiplicacion EXP
    (166) EXP -> EXP . division EXP
    (167) EXP -> EXP . modulo EXP
    (168) EXP -> EXP . elevado EXP
    (169) EXP -> EXP . and EXP
    (170) EXP -> EXP . or EXP
    (171) EXP -> EXP . mayor EXP
    (172) EXP -> EXP . menor EXP
    (173) EXP -> EXP . mayor_igual EXP
    (174) EXP -> EXP . menor_igual EXP
    (175) EXP -> EXP . igual EXP
    (176) EXP -> EXP . diferente1 EXP
    (177) EXP -> EXP . diferente2 EXP
    (178) EXP -> EXP . punto EXP
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (213) PREDICADOS -> EXP . between EXP
    (214) PREDICADOS -> EXP . in para LEXP parc
    (215) PREDICADOS -> EXP . not in para LEXP parc
    (216) PREDICADOS -> EXP . not between EXP
    (217) PREDICADOS -> EXP . between symetric EXP
    (218) PREDICADOS -> EXP . not between symetric EXP
    (219) PREDICADOS -> EXP . is distinct r_from EXP
    (220) PREDICADOS -> EXP . is not distinct r_from EXP
    (221) PREDICADOS -> EXP . is PNULL
    (222) PREDICADOS -> EXP . isnull
    (223) PREDICADOS -> EXP . notnull
    (224) PREDICADOS -> EXP . is true
    (225) PREDICADOS -> EXP . is not true
    (226) PREDICADOS -> EXP . is false
    (227) PREDICADOS -> EXP . is not false
    (228) PREDICADOS -> EXP . is unknown
    (229) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    coma            reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    limit           reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    offset          reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    union           reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    intersect       reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    except          reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    ptcoma          reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    mas             reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    menos           reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    multiplicacion  reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    division        reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    modulo          reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    elevado         reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    mayor           reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    menor           reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    mayor_igual     reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    menor_igual     reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    igual           reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    diferente1      reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    diferente2      reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    punto           reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    as              reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    cadenaString    reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    id              reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    cadena          reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    between         reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    in              reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    is              reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    isnull          reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    notnull         reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    parc            reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    then            reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    where           reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    group           reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    having          reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    order           reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    end             reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    else            reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    when            reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    constraint      reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    default         reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    primary         reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    references      reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    null            reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    asc             reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    desc            reduce using rule 173 (EXP -> EXP mayor_igual EXP .)
    and             shift and go to state 91
    or              shift and go to state 92
    not             shift and go to state 107

  ! and             [ reduce using rule 173 (EXP -> EXP mayor_igual EXP .) ]
  ! or              [ reduce using rule 173 (EXP -> EXP mayor_igual EXP .) ]
  ! not             [ reduce using rule 173 (EXP -> EXP mayor_igual EXP .) ]
  ! mas             [ shift and go to state 85 ]
  ! menos           [ shift and go to state 86 ]
  ! multiplicacion  [ shift and go to state 87 ]
  ! division        [ shift and go to state 88 ]
  ! modulo          [ shift and go to state 89 ]
  ! elevado         [ shift and go to state 90 ]
  ! mayor           [ shift and go to state 93 ]
  ! menor           [ shift and go to state 94 ]
  ! mayor_igual     [ shift and go to state 95 ]
  ! menor_igual     [ shift and go to state 96 ]
  ! igual           [ shift and go to state 97 ]
  ! diferente1      [ shift and go to state 98 ]
  ! diferente2      [ shift and go to state 99 ]
  ! punto           [ shift and go to state 100 ]
  ! as              [ shift and go to state 101 ]
  ! cadenaString    [ shift and go to state 102 ]
  ! id              [ shift and go to state 103 ]
  ! cadena          [ shift and go to state 104 ]
  ! between         [ shift and go to state 105 ]
  ! in              [ shift and go to state 106 ]
  ! is              [ shift and go to state 108 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]


state 164

    (174) EXP -> EXP menor_igual EXP .
    (163) EXP -> EXP . mas EXP
    (164) EXP -> EXP . menos EXP
    (165) EXP -> EXP . multiplicacion EXP
    (166) EXP -> EXP . division EXP
    (167) EXP -> EXP . modulo EXP
    (168) EXP -> EXP . elevado EXP
    (169) EXP -> EXP . and EXP
    (170) EXP -> EXP . or EXP
    (171) EXP -> EXP . mayor EXP
    (172) EXP -> EXP . menor EXP
    (173) EXP -> EXP . mayor_igual EXP
    (174) EXP -> EXP . menor_igual EXP
    (175) EXP -> EXP . igual EXP
    (176) EXP -> EXP . diferente1 EXP
    (177) EXP -> EXP . diferente2 EXP
    (178) EXP -> EXP . punto EXP
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (213) PREDICADOS -> EXP . between EXP
    (214) PREDICADOS -> EXP . in para LEXP parc
    (215) PREDICADOS -> EXP . not in para LEXP parc
    (216) PREDICADOS -> EXP . not between EXP
    (217) PREDICADOS -> EXP . between symetric EXP
    (218) PREDICADOS -> EXP . not between symetric EXP
    (219) PREDICADOS -> EXP . is distinct r_from EXP
    (220) PREDICADOS -> EXP . is not distinct r_from EXP
    (221) PREDICADOS -> EXP . is PNULL
    (222) PREDICADOS -> EXP . isnull
    (223) PREDICADOS -> EXP . notnull
    (224) PREDICADOS -> EXP . is true
    (225) PREDICADOS -> EXP . is not true
    (226) PREDICADOS -> EXP . is false
    (227) PREDICADOS -> EXP . is not false
    (228) PREDICADOS -> EXP . is unknown
    (229) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    coma            reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    limit           reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    offset          reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    union           reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    intersect       reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    except          reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    ptcoma          reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    mas             reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    menos           reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    multiplicacion  reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    division        reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    modulo          reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    elevado         reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    mayor           reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    menor           reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    mayor_igual     reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    menor_igual     reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    igual           reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    diferente1      reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    diferente2      reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    punto           reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    as              reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    cadenaString    reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    id              reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    cadena          reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    between         reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    in              reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    is              reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    isnull          reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    notnull         reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    parc            reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    then            reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    where           reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    group           reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    having          reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    order           reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    end             reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    else            reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    when            reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    constraint      reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    default         reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    primary         reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    references      reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    null            reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    asc             reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    desc            reduce using rule 174 (EXP -> EXP menor_igual EXP .)
    and             shift and go to state 91
    or              shift and go to state 92
    not             shift and go to state 107

  ! and             [ reduce using rule 174 (EXP -> EXP menor_igual EXP .) ]
  ! or              [ reduce using rule 174 (EXP -> EXP menor_igual EXP .) ]
  ! not             [ reduce using rule 174 (EXP -> EXP menor_igual EXP .) ]
  ! mas             [ shift and go to state 85 ]
  ! menos           [ shift and go to state 86 ]
  ! multiplicacion  [ shift and go to state 87 ]
  ! division        [ shift and go to state 88 ]
  ! modulo          [ shift and go to state 89 ]
  ! elevado         [ shift and go to state 90 ]
  ! mayor           [ shift and go to state 93 ]
  ! menor           [ shift and go to state 94 ]
  ! mayor_igual     [ shift and go to state 95 ]
  ! menor_igual     [ shift and go to state 96 ]
  ! igual           [ shift and go to state 97 ]
  ! diferente1      [ shift and go to state 98 ]
  ! diferente2      [ shift and go to state 99 ]
  ! punto           [ shift and go to state 100 ]
  ! as              [ shift and go to state 101 ]
  ! cadenaString    [ shift and go to state 102 ]
  ! id              [ shift and go to state 103 ]
  ! cadena          [ shift and go to state 104 ]
  ! between         [ shift and go to state 105 ]
  ! in              [ shift and go to state 106 ]
  ! is              [ shift and go to state 108 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]


state 165

    (175) EXP -> EXP igual EXP .
    (163) EXP -> EXP . mas EXP
    (164) EXP -> EXP . menos EXP
    (165) EXP -> EXP . multiplicacion EXP
    (166) EXP -> EXP . division EXP
    (167) EXP -> EXP . modulo EXP
    (168) EXP -> EXP . elevado EXP
    (169) EXP -> EXP . and EXP
    (170) EXP -> EXP . or EXP
    (171) EXP -> EXP . mayor EXP
    (172) EXP -> EXP . menor EXP
    (173) EXP -> EXP . mayor_igual EXP
    (174) EXP -> EXP . menor_igual EXP
    (175) EXP -> EXP . igual EXP
    (176) EXP -> EXP . diferente1 EXP
    (177) EXP -> EXP . diferente2 EXP
    (178) EXP -> EXP . punto EXP
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (213) PREDICADOS -> EXP . between EXP
    (214) PREDICADOS -> EXP . in para LEXP parc
    (215) PREDICADOS -> EXP . not in para LEXP parc
    (216) PREDICADOS -> EXP . not between EXP
    (217) PREDICADOS -> EXP . between symetric EXP
    (218) PREDICADOS -> EXP . not between symetric EXP
    (219) PREDICADOS -> EXP . is distinct r_from EXP
    (220) PREDICADOS -> EXP . is not distinct r_from EXP
    (221) PREDICADOS -> EXP . is PNULL
    (222) PREDICADOS -> EXP . isnull
    (223) PREDICADOS -> EXP . notnull
    (224) PREDICADOS -> EXP . is true
    (225) PREDICADOS -> EXP . is not true
    (226) PREDICADOS -> EXP . is false
    (227) PREDICADOS -> EXP . is not false
    (228) PREDICADOS -> EXP . is unknown
    (229) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 175 (EXP -> EXP igual EXP .)
    coma            reduce using rule 175 (EXP -> EXP igual EXP .)
    limit           reduce using rule 175 (EXP -> EXP igual EXP .)
    offset          reduce using rule 175 (EXP -> EXP igual EXP .)
    union           reduce using rule 175 (EXP -> EXP igual EXP .)
    intersect       reduce using rule 175 (EXP -> EXP igual EXP .)
    except          reduce using rule 175 (EXP -> EXP igual EXP .)
    ptcoma          reduce using rule 175 (EXP -> EXP igual EXP .)
    mas             reduce using rule 175 (EXP -> EXP igual EXP .)
    menos           reduce using rule 175 (EXP -> EXP igual EXP .)
    multiplicacion  reduce using rule 175 (EXP -> EXP igual EXP .)
    division        reduce using rule 175 (EXP -> EXP igual EXP .)
    modulo          reduce using rule 175 (EXP -> EXP igual EXP .)
    elevado         reduce using rule 175 (EXP -> EXP igual EXP .)
    mayor           reduce using rule 175 (EXP -> EXP igual EXP .)
    menor           reduce using rule 175 (EXP -> EXP igual EXP .)
    mayor_igual     reduce using rule 175 (EXP -> EXP igual EXP .)
    menor_igual     reduce using rule 175 (EXP -> EXP igual EXP .)
    igual           reduce using rule 175 (EXP -> EXP igual EXP .)
    diferente1      reduce using rule 175 (EXP -> EXP igual EXP .)
    diferente2      reduce using rule 175 (EXP -> EXP igual EXP .)
    punto           reduce using rule 175 (EXP -> EXP igual EXP .)
    as              reduce using rule 175 (EXP -> EXP igual EXP .)
    cadenaString    reduce using rule 175 (EXP -> EXP igual EXP .)
    id              reduce using rule 175 (EXP -> EXP igual EXP .)
    cadena          reduce using rule 175 (EXP -> EXP igual EXP .)
    between         reduce using rule 175 (EXP -> EXP igual EXP .)
    in              reduce using rule 175 (EXP -> EXP igual EXP .)
    is              reduce using rule 175 (EXP -> EXP igual EXP .)
    isnull          reduce using rule 175 (EXP -> EXP igual EXP .)
    notnull         reduce using rule 175 (EXP -> EXP igual EXP .)
    parc            reduce using rule 175 (EXP -> EXP igual EXP .)
    then            reduce using rule 175 (EXP -> EXP igual EXP .)
    where           reduce using rule 175 (EXP -> EXP igual EXP .)
    group           reduce using rule 175 (EXP -> EXP igual EXP .)
    having          reduce using rule 175 (EXP -> EXP igual EXP .)
    order           reduce using rule 175 (EXP -> EXP igual EXP .)
    end             reduce using rule 175 (EXP -> EXP igual EXP .)
    else            reduce using rule 175 (EXP -> EXP igual EXP .)
    when            reduce using rule 175 (EXP -> EXP igual EXP .)
    constraint      reduce using rule 175 (EXP -> EXP igual EXP .)
    default         reduce using rule 175 (EXP -> EXP igual EXP .)
    primary         reduce using rule 175 (EXP -> EXP igual EXP .)
    references      reduce using rule 175 (EXP -> EXP igual EXP .)
    null            reduce using rule 175 (EXP -> EXP igual EXP .)
    asc             reduce using rule 175 (EXP -> EXP igual EXP .)
    desc            reduce using rule 175 (EXP -> EXP igual EXP .)
    and             shift and go to state 91
    or              shift and go to state 92
    not             shift and go to state 107

  ! and             [ reduce using rule 175 (EXP -> EXP igual EXP .) ]
  ! or              [ reduce using rule 175 (EXP -> EXP igual EXP .) ]
  ! not             [ reduce using rule 175 (EXP -> EXP igual EXP .) ]
  ! mas             [ shift and go to state 85 ]
  ! menos           [ shift and go to state 86 ]
  ! multiplicacion  [ shift and go to state 87 ]
  ! division        [ shift and go to state 88 ]
  ! modulo          [ shift and go to state 89 ]
  ! elevado         [ shift and go to state 90 ]
  ! mayor           [ shift and go to state 93 ]
  ! menor           [ shift and go to state 94 ]
  ! mayor_igual     [ shift and go to state 95 ]
  ! menor_igual     [ shift and go to state 96 ]
  ! igual           [ shift and go to state 97 ]
  ! diferente1      [ shift and go to state 98 ]
  ! diferente2      [ shift and go to state 99 ]
  ! punto           [ shift and go to state 100 ]
  ! as              [ shift and go to state 101 ]
  ! cadenaString    [ shift and go to state 102 ]
  ! id              [ shift and go to state 103 ]
  ! cadena          [ shift and go to state 104 ]
  ! between         [ shift and go to state 105 ]
  ! in              [ shift and go to state 106 ]
  ! is              [ shift and go to state 108 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]


state 166

    (176) EXP -> EXP diferente1 EXP .
    (163) EXP -> EXP . mas EXP
    (164) EXP -> EXP . menos EXP
    (165) EXP -> EXP . multiplicacion EXP
    (166) EXP -> EXP . division EXP
    (167) EXP -> EXP . modulo EXP
    (168) EXP -> EXP . elevado EXP
    (169) EXP -> EXP . and EXP
    (170) EXP -> EXP . or EXP
    (171) EXP -> EXP . mayor EXP
    (172) EXP -> EXP . menor EXP
    (173) EXP -> EXP . mayor_igual EXP
    (174) EXP -> EXP . menor_igual EXP
    (175) EXP -> EXP . igual EXP
    (176) EXP -> EXP . diferente1 EXP
    (177) EXP -> EXP . diferente2 EXP
    (178) EXP -> EXP . punto EXP
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (213) PREDICADOS -> EXP . between EXP
    (214) PREDICADOS -> EXP . in para LEXP parc
    (215) PREDICADOS -> EXP . not in para LEXP parc
    (216) PREDICADOS -> EXP . not between EXP
    (217) PREDICADOS -> EXP . between symetric EXP
    (218) PREDICADOS -> EXP . not between symetric EXP
    (219) PREDICADOS -> EXP . is distinct r_from EXP
    (220) PREDICADOS -> EXP . is not distinct r_from EXP
    (221) PREDICADOS -> EXP . is PNULL
    (222) PREDICADOS -> EXP . isnull
    (223) PREDICADOS -> EXP . notnull
    (224) PREDICADOS -> EXP . is true
    (225) PREDICADOS -> EXP . is not true
    (226) PREDICADOS -> EXP . is false
    (227) PREDICADOS -> EXP . is not false
    (228) PREDICADOS -> EXP . is unknown
    (229) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    coma            reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    limit           reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    offset          reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    union           reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    intersect       reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    except          reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    ptcoma          reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    mas             reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    menos           reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    multiplicacion  reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    division        reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    modulo          reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    elevado         reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    mayor           reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    menor           reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    mayor_igual     reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    menor_igual     reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    igual           reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    diferente1      reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    diferente2      reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    punto           reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    as              reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    cadenaString    reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    id              reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    cadena          reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    between         reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    in              reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    is              reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    isnull          reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    notnull         reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    parc            reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    then            reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    where           reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    group           reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    having          reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    order           reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    end             reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    else            reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    when            reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    constraint      reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    default         reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    primary         reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    references      reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    null            reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    asc             reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    desc            reduce using rule 176 (EXP -> EXP diferente1 EXP .)
    and             shift and go to state 91
    or              shift and go to state 92
    not             shift and go to state 107

  ! and             [ reduce using rule 176 (EXP -> EXP diferente1 EXP .) ]
  ! or              [ reduce using rule 176 (EXP -> EXP diferente1 EXP .) ]
  ! not             [ reduce using rule 176 (EXP -> EXP diferente1 EXP .) ]
  ! mas             [ shift and go to state 85 ]
  ! menos           [ shift and go to state 86 ]
  ! multiplicacion  [ shift and go to state 87 ]
  ! division        [ shift and go to state 88 ]
  ! modulo          [ shift and go to state 89 ]
  ! elevado         [ shift and go to state 90 ]
  ! mayor           [ shift and go to state 93 ]
  ! menor           [ shift and go to state 94 ]
  ! mayor_igual     [ shift and go to state 95 ]
  ! menor_igual     [ shift and go to state 96 ]
  ! igual           [ shift and go to state 97 ]
  ! diferente1      [ shift and go to state 98 ]
  ! diferente2      [ shift and go to state 99 ]
  ! punto           [ shift and go to state 100 ]
  ! as              [ shift and go to state 101 ]
  ! cadenaString    [ shift and go to state 102 ]
  ! id              [ shift and go to state 103 ]
  ! cadena          [ shift and go to state 104 ]
  ! between         [ shift and go to state 105 ]
  ! in              [ shift and go to state 106 ]
  ! is              [ shift and go to state 108 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]


state 167

    (177) EXP -> EXP diferente2 EXP .
    (163) EXP -> EXP . mas EXP
    (164) EXP -> EXP . menos EXP
    (165) EXP -> EXP . multiplicacion EXP
    (166) EXP -> EXP . division EXP
    (167) EXP -> EXP . modulo EXP
    (168) EXP -> EXP . elevado EXP
    (169) EXP -> EXP . and EXP
    (170) EXP -> EXP . or EXP
    (171) EXP -> EXP . mayor EXP
    (172) EXP -> EXP . menor EXP
    (173) EXP -> EXP . mayor_igual EXP
    (174) EXP -> EXP . menor_igual EXP
    (175) EXP -> EXP . igual EXP
    (176) EXP -> EXP . diferente1 EXP
    (177) EXP -> EXP . diferente2 EXP
    (178) EXP -> EXP . punto EXP
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (213) PREDICADOS -> EXP . between EXP
    (214) PREDICADOS -> EXP . in para LEXP parc
    (215) PREDICADOS -> EXP . not in para LEXP parc
    (216) PREDICADOS -> EXP . not between EXP
    (217) PREDICADOS -> EXP . between symetric EXP
    (218) PREDICADOS -> EXP . not between symetric EXP
    (219) PREDICADOS -> EXP . is distinct r_from EXP
    (220) PREDICADOS -> EXP . is not distinct r_from EXP
    (221) PREDICADOS -> EXP . is PNULL
    (222) PREDICADOS -> EXP . isnull
    (223) PREDICADOS -> EXP . notnull
    (224) PREDICADOS -> EXP . is true
    (225) PREDICADOS -> EXP . is not true
    (226) PREDICADOS -> EXP . is false
    (227) PREDICADOS -> EXP . is not false
    (228) PREDICADOS -> EXP . is unknown
    (229) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    coma            reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    limit           reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    offset          reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    union           reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    intersect       reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    except          reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    ptcoma          reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    mas             reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    menos           reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    multiplicacion  reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    division        reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    modulo          reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    elevado         reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    mayor           reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    menor           reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    mayor_igual     reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    menor_igual     reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    igual           reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    diferente1      reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    diferente2      reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    punto           reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    as              reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    cadenaString    reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    id              reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    cadena          reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    between         reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    in              reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    is              reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    isnull          reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    notnull         reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    parc            reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    then            reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    where           reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    group           reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    having          reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    order           reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    end             reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    else            reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    when            reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    constraint      reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    default         reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    primary         reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    references      reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    null            reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    asc             reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    desc            reduce using rule 177 (EXP -> EXP diferente2 EXP .)
    and             shift and go to state 91
    or              shift and go to state 92
    not             shift and go to state 107

  ! and             [ reduce using rule 177 (EXP -> EXP diferente2 EXP .) ]
  ! or              [ reduce using rule 177 (EXP -> EXP diferente2 EXP .) ]
  ! not             [ reduce using rule 177 (EXP -> EXP diferente2 EXP .) ]
  ! mas             [ shift and go to state 85 ]
  ! menos           [ shift and go to state 86 ]
  ! multiplicacion  [ shift and go to state 87 ]
  ! division        [ shift and go to state 88 ]
  ! modulo          [ shift and go to state 89 ]
  ! elevado         [ shift and go to state 90 ]
  ! mayor           [ shift and go to state 93 ]
  ! menor           [ shift and go to state 94 ]
  ! mayor_igual     [ shift and go to state 95 ]
  ! menor_igual     [ shift and go to state 96 ]
  ! igual           [ shift and go to state 97 ]
  ! diferente1      [ shift and go to state 98 ]
  ! diferente2      [ shift and go to state 99 ]
  ! punto           [ shift and go to state 100 ]
  ! as              [ shift and go to state 101 ]
  ! cadenaString    [ shift and go to state 102 ]
  ! id              [ shift and go to state 103 ]
  ! cadena          [ shift and go to state 104 ]
  ! between         [ shift and go to state 105 ]
  ! in              [ shift and go to state 106 ]
  ! is              [ shift and go to state 108 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]


state 168

    (178) EXP -> EXP punto EXP .
    (163) EXP -> EXP . mas EXP
    (164) EXP -> EXP . menos EXP
    (165) EXP -> EXP . multiplicacion EXP
    (166) EXP -> EXP . division EXP
    (167) EXP -> EXP . modulo EXP
    (168) EXP -> EXP . elevado EXP
    (169) EXP -> EXP . and EXP
    (170) EXP -> EXP . or EXP
    (171) EXP -> EXP . mayor EXP
    (172) EXP -> EXP . menor EXP
    (173) EXP -> EXP . mayor_igual EXP
    (174) EXP -> EXP . menor_igual EXP
    (175) EXP -> EXP . igual EXP
    (176) EXP -> EXP . diferente1 EXP
    (177) EXP -> EXP . diferente2 EXP
    (178) EXP -> EXP . punto EXP
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (213) PREDICADOS -> EXP . between EXP
    (214) PREDICADOS -> EXP . in para LEXP parc
    (215) PREDICADOS -> EXP . not in para LEXP parc
    (216) PREDICADOS -> EXP . not between EXP
    (217) PREDICADOS -> EXP . between symetric EXP
    (218) PREDICADOS -> EXP . not between symetric EXP
    (219) PREDICADOS -> EXP . is distinct r_from EXP
    (220) PREDICADOS -> EXP . is not distinct r_from EXP
    (221) PREDICADOS -> EXP . is PNULL
    (222) PREDICADOS -> EXP . isnull
    (223) PREDICADOS -> EXP . notnull
    (224) PREDICADOS -> EXP . is true
    (225) PREDICADOS -> EXP . is not true
    (226) PREDICADOS -> EXP . is false
    (227) PREDICADOS -> EXP . is not false
    (228) PREDICADOS -> EXP . is unknown
    (229) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 178 (EXP -> EXP punto EXP .)
    coma            reduce using rule 178 (EXP -> EXP punto EXP .)
    limit           reduce using rule 178 (EXP -> EXP punto EXP .)
    offset          reduce using rule 178 (EXP -> EXP punto EXP .)
    union           reduce using rule 178 (EXP -> EXP punto EXP .)
    intersect       reduce using rule 178 (EXP -> EXP punto EXP .)
    except          reduce using rule 178 (EXP -> EXP punto EXP .)
    ptcoma          reduce using rule 178 (EXP -> EXP punto EXP .)
    punto           reduce using rule 178 (EXP -> EXP punto EXP .)
    as              reduce using rule 178 (EXP -> EXP punto EXP .)
    cadenaString    reduce using rule 178 (EXP -> EXP punto EXP .)
    id              reduce using rule 178 (EXP -> EXP punto EXP .)
    cadena          reduce using rule 178 (EXP -> EXP punto EXP .)
    between         reduce using rule 178 (EXP -> EXP punto EXP .)
    in              reduce using rule 178 (EXP -> EXP punto EXP .)
    is              reduce using rule 178 (EXP -> EXP punto EXP .)
    isnull          reduce using rule 178 (EXP -> EXP punto EXP .)
    notnull         reduce using rule 178 (EXP -> EXP punto EXP .)
    parc            reduce using rule 178 (EXP -> EXP punto EXP .)
    then            reduce using rule 178 (EXP -> EXP punto EXP .)
    where           reduce using rule 178 (EXP -> EXP punto EXP .)
    group           reduce using rule 178 (EXP -> EXP punto EXP .)
    having          reduce using rule 178 (EXP -> EXP punto EXP .)
    order           reduce using rule 178 (EXP -> EXP punto EXP .)
    end             reduce using rule 178 (EXP -> EXP punto EXP .)
    else            reduce using rule 178 (EXP -> EXP punto EXP .)
    when            reduce using rule 178 (EXP -> EXP punto EXP .)
    constraint      reduce using rule 178 (EXP -> EXP punto EXP .)
    default         reduce using rule 178 (EXP -> EXP punto EXP .)
    primary         reduce using rule 178 (EXP -> EXP punto EXP .)
    references      reduce using rule 178 (EXP -> EXP punto EXP .)
    null            reduce using rule 178 (EXP -> EXP punto EXP .)
    asc             reduce using rule 178 (EXP -> EXP punto EXP .)
    desc            reduce using rule 178 (EXP -> EXP punto EXP .)
    mas             shift and go to state 85
    menos           shift and go to state 86
    multiplicacion  shift and go to state 87
    division        shift and go to state 88
    modulo          shift and go to state 89
    elevado         shift and go to state 90
    and             shift and go to state 91
    or              shift and go to state 92
    mayor           shift and go to state 93
    menor           shift and go to state 94
    mayor_igual     shift and go to state 95
    menor_igual     shift and go to state 96
    igual           shift and go to state 97
    diferente1      shift and go to state 98
    diferente2      shift and go to state 99
    not             shift and go to state 107

  ! mas             [ reduce using rule 178 (EXP -> EXP punto EXP .) ]
  ! menos           [ reduce using rule 178 (EXP -> EXP punto EXP .) ]
  ! multiplicacion  [ reduce using rule 178 (EXP -> EXP punto EXP .) ]
  ! division        [ reduce using rule 178 (EXP -> EXP punto EXP .) ]
  ! modulo          [ reduce using rule 178 (EXP -> EXP punto EXP .) ]
  ! elevado         [ reduce using rule 178 (EXP -> EXP punto EXP .) ]
  ! and             [ reduce using rule 178 (EXP -> EXP punto EXP .) ]
  ! or              [ reduce using rule 178 (EXP -> EXP punto EXP .) ]
  ! mayor           [ reduce using rule 178 (EXP -> EXP punto EXP .) ]
  ! menor           [ reduce using rule 178 (EXP -> EXP punto EXP .) ]
  ! mayor_igual     [ reduce using rule 178 (EXP -> EXP punto EXP .) ]
  ! menor_igual     [ reduce using rule 178 (EXP -> EXP punto EXP .) ]
  ! igual           [ reduce using rule 178 (EXP -> EXP punto EXP .) ]
  ! diferente1      [ reduce using rule 178 (EXP -> EXP punto EXP .) ]
  ! diferente2      [ reduce using rule 178 (EXP -> EXP punto EXP .) ]
  ! not             [ reduce using rule 178 (EXP -> EXP punto EXP .) ]
  ! punto           [ shift and go to state 100 ]
  ! as              [ shift and go to state 101 ]
  ! cadenaString    [ shift and go to state 102 ]
  ! id              [ shift and go to state 103 ]
  ! cadena          [ shift and go to state 104 ]
  ! between         [ shift and go to state 105 ]
  ! in              [ shift and go to state 106 ]
  ! is              [ shift and go to state 108 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]


state 169

    (206) EXP -> EXP as cadenaString .

    r_from          reduce using rule 206 (EXP -> EXP as cadenaString .)
    coma            reduce using rule 206 (EXP -> EXP as cadenaString .)
    limit           reduce using rule 206 (EXP -> EXP as cadenaString .)
    offset          reduce using rule 206 (EXP -> EXP as cadenaString .)
    union           reduce using rule 206 (EXP -> EXP as cadenaString .)
    intersect       reduce using rule 206 (EXP -> EXP as cadenaString .)
    except          reduce using rule 206 (EXP -> EXP as cadenaString .)
    ptcoma          reduce using rule 206 (EXP -> EXP as cadenaString .)
    mas             reduce using rule 206 (EXP -> EXP as cadenaString .)
    menos           reduce using rule 206 (EXP -> EXP as cadenaString .)
    multiplicacion  reduce using rule 206 (EXP -> EXP as cadenaString .)
    division        reduce using rule 206 (EXP -> EXP as cadenaString .)
    modulo          reduce using rule 206 (EXP -> EXP as cadenaString .)
    elevado         reduce using rule 206 (EXP -> EXP as cadenaString .)
    and             reduce using rule 206 (EXP -> EXP as cadenaString .)
    or              reduce using rule 206 (EXP -> EXP as cadenaString .)
    mayor           reduce using rule 206 (EXP -> EXP as cadenaString .)
    menor           reduce using rule 206 (EXP -> EXP as cadenaString .)
    mayor_igual     reduce using rule 206 (EXP -> EXP as cadenaString .)
    menor_igual     reduce using rule 206 (EXP -> EXP as cadenaString .)
    igual           reduce using rule 206 (EXP -> EXP as cadenaString .)
    diferente1      reduce using rule 206 (EXP -> EXP as cadenaString .)
    diferente2      reduce using rule 206 (EXP -> EXP as cadenaString .)
    punto           reduce using rule 206 (EXP -> EXP as cadenaString .)
    as              reduce using rule 206 (EXP -> EXP as cadenaString .)
    cadenaString    reduce using rule 206 (EXP -> EXP as cadenaString .)
    id              reduce using rule 206 (EXP -> EXP as cadenaString .)
    cadena          reduce using rule 206 (EXP -> EXP as cadenaString .)
    between         reduce using rule 206 (EXP -> EXP as cadenaString .)
    in              reduce using rule 206 (EXP -> EXP as cadenaString .)
    not             reduce using rule 206 (EXP -> EXP as cadenaString .)
    is              reduce using rule 206 (EXP -> EXP as cadenaString .)
    isnull          reduce using rule 206 (EXP -> EXP as cadenaString .)
    notnull         reduce using rule 206 (EXP -> EXP as cadenaString .)
    parc            reduce using rule 206 (EXP -> EXP as cadenaString .)
    then            reduce using rule 206 (EXP -> EXP as cadenaString .)
    where           reduce using rule 206 (EXP -> EXP as cadenaString .)
    group           reduce using rule 206 (EXP -> EXP as cadenaString .)
    having          reduce using rule 206 (EXP -> EXP as cadenaString .)
    order           reduce using rule 206 (EXP -> EXP as cadenaString .)
    end             reduce using rule 206 (EXP -> EXP as cadenaString .)
    else            reduce using rule 206 (EXP -> EXP as cadenaString .)
    when            reduce using rule 206 (EXP -> EXP as cadenaString .)
    constraint      reduce using rule 206 (EXP -> EXP as cadenaString .)
    default         reduce using rule 206 (EXP -> EXP as cadenaString .)
    primary         reduce using rule 206 (EXP -> EXP as cadenaString .)
    references      reduce using rule 206 (EXP -> EXP as cadenaString .)
    null            reduce using rule 206 (EXP -> EXP as cadenaString .)
    asc             reduce using rule 206 (EXP -> EXP as cadenaString .)
    desc            reduce using rule 206 (EXP -> EXP as cadenaString .)


state 170

    (208) EXP -> EXP as id .

    r_from          reduce using rule 208 (EXP -> EXP as id .)
    coma            reduce using rule 208 (EXP -> EXP as id .)
    limit           reduce using rule 208 (EXP -> EXP as id .)
    offset          reduce using rule 208 (EXP -> EXP as id .)
    union           reduce using rule 208 (EXP -> EXP as id .)
    intersect       reduce using rule 208 (EXP -> EXP as id .)
    except          reduce using rule 208 (EXP -> EXP as id .)
    ptcoma          reduce using rule 208 (EXP -> EXP as id .)
    mas             reduce using rule 208 (EXP -> EXP as id .)
    menos           reduce using rule 208 (EXP -> EXP as id .)
    multiplicacion  reduce using rule 208 (EXP -> EXP as id .)
    division        reduce using rule 208 (EXP -> EXP as id .)
    modulo          reduce using rule 208 (EXP -> EXP as id .)
    elevado         reduce using rule 208 (EXP -> EXP as id .)
    and             reduce using rule 208 (EXP -> EXP as id .)
    or              reduce using rule 208 (EXP -> EXP as id .)
    mayor           reduce using rule 208 (EXP -> EXP as id .)
    menor           reduce using rule 208 (EXP -> EXP as id .)
    mayor_igual     reduce using rule 208 (EXP -> EXP as id .)
    menor_igual     reduce using rule 208 (EXP -> EXP as id .)
    igual           reduce using rule 208 (EXP -> EXP as id .)
    diferente1      reduce using rule 208 (EXP -> EXP as id .)
    diferente2      reduce using rule 208 (EXP -> EXP as id .)
    punto           reduce using rule 208 (EXP -> EXP as id .)
    as              reduce using rule 208 (EXP -> EXP as id .)
    cadenaString    reduce using rule 208 (EXP -> EXP as id .)
    id              reduce using rule 208 (EXP -> EXP as id .)
    cadena          reduce using rule 208 (EXP -> EXP as id .)
    between         reduce using rule 208 (EXP -> EXP as id .)
    in              reduce using rule 208 (EXP -> EXP as id .)
    not             reduce using rule 208 (EXP -> EXP as id .)
    is              reduce using rule 208 (EXP -> EXP as id .)
    isnull          reduce using rule 208 (EXP -> EXP as id .)
    notnull         reduce using rule 208 (EXP -> EXP as id .)
    parc            reduce using rule 208 (EXP -> EXP as id .)
    then            reduce using rule 208 (EXP -> EXP as id .)
    where           reduce using rule 208 (EXP -> EXP as id .)
    group           reduce using rule 208 (EXP -> EXP as id .)
    having          reduce using rule 208 (EXP -> EXP as id .)
    order           reduce using rule 208 (EXP -> EXP as id .)
    end             reduce using rule 208 (EXP -> EXP as id .)
    else            reduce using rule 208 (EXP -> EXP as id .)
    when            reduce using rule 208 (EXP -> EXP as id .)
    constraint      reduce using rule 208 (EXP -> EXP as id .)
    default         reduce using rule 208 (EXP -> EXP as id .)
    primary         reduce using rule 208 (EXP -> EXP as id .)
    references      reduce using rule 208 (EXP -> EXP as id .)
    null            reduce using rule 208 (EXP -> EXP as id .)
    asc             reduce using rule 208 (EXP -> EXP as id .)
    desc            reduce using rule 208 (EXP -> EXP as id .)


state 171

    (210) EXP -> EXP as cadena .

    r_from          reduce using rule 210 (EXP -> EXP as cadena .)
    coma            reduce using rule 210 (EXP -> EXP as cadena .)
    limit           reduce using rule 210 (EXP -> EXP as cadena .)
    offset          reduce using rule 210 (EXP -> EXP as cadena .)
    union           reduce using rule 210 (EXP -> EXP as cadena .)
    intersect       reduce using rule 210 (EXP -> EXP as cadena .)
    except          reduce using rule 210 (EXP -> EXP as cadena .)
    ptcoma          reduce using rule 210 (EXP -> EXP as cadena .)
    mas             reduce using rule 210 (EXP -> EXP as cadena .)
    menos           reduce using rule 210 (EXP -> EXP as cadena .)
    multiplicacion  reduce using rule 210 (EXP -> EXP as cadena .)
    division        reduce using rule 210 (EXP -> EXP as cadena .)
    modulo          reduce using rule 210 (EXP -> EXP as cadena .)
    elevado         reduce using rule 210 (EXP -> EXP as cadena .)
    and             reduce using rule 210 (EXP -> EXP as cadena .)
    or              reduce using rule 210 (EXP -> EXP as cadena .)
    mayor           reduce using rule 210 (EXP -> EXP as cadena .)
    menor           reduce using rule 210 (EXP -> EXP as cadena .)
    mayor_igual     reduce using rule 210 (EXP -> EXP as cadena .)
    menor_igual     reduce using rule 210 (EXP -> EXP as cadena .)
    igual           reduce using rule 210 (EXP -> EXP as cadena .)
    diferente1      reduce using rule 210 (EXP -> EXP as cadena .)
    diferente2      reduce using rule 210 (EXP -> EXP as cadena .)
    punto           reduce using rule 210 (EXP -> EXP as cadena .)
    as              reduce using rule 210 (EXP -> EXP as cadena .)
    cadenaString    reduce using rule 210 (EXP -> EXP as cadena .)
    id              reduce using rule 210 (EXP -> EXP as cadena .)
    cadena          reduce using rule 210 (EXP -> EXP as cadena .)
    between         reduce using rule 210 (EXP -> EXP as cadena .)
    in              reduce using rule 210 (EXP -> EXP as cadena .)
    not             reduce using rule 210 (EXP -> EXP as cadena .)
    is              reduce using rule 210 (EXP -> EXP as cadena .)
    isnull          reduce using rule 210 (EXP -> EXP as cadena .)
    notnull         reduce using rule 210 (EXP -> EXP as cadena .)
    parc            reduce using rule 210 (EXP -> EXP as cadena .)
    then            reduce using rule 210 (EXP -> EXP as cadena .)
    where           reduce using rule 210 (EXP -> EXP as cadena .)
    group           reduce using rule 210 (EXP -> EXP as cadena .)
    having          reduce using rule 210 (EXP -> EXP as cadena .)
    order           reduce using rule 210 (EXP -> EXP as cadena .)
    end             reduce using rule 210 (EXP -> EXP as cadena .)
    else            reduce using rule 210 (EXP -> EXP as cadena .)
    when            reduce using rule 210 (EXP -> EXP as cadena .)
    constraint      reduce using rule 210 (EXP -> EXP as cadena .)
    default         reduce using rule 210 (EXP -> EXP as cadena .)
    primary         reduce using rule 210 (EXP -> EXP as cadena .)
    references      reduce using rule 210 (EXP -> EXP as cadena .)
    null            reduce using rule 210 (EXP -> EXP as cadena .)
    asc             reduce using rule 210 (EXP -> EXP as cadena .)
    desc            reduce using rule 210 (EXP -> EXP as cadena .)


state 172

    (213) PREDICADOS -> EXP between EXP .
    (163) EXP -> EXP . mas EXP
    (164) EXP -> EXP . menos EXP
    (165) EXP -> EXP . multiplicacion EXP
    (166) EXP -> EXP . division EXP
    (167) EXP -> EXP . modulo EXP
    (168) EXP -> EXP . elevado EXP
    (169) EXP -> EXP . and EXP
    (170) EXP -> EXP . or EXP
    (171) EXP -> EXP . mayor EXP
    (172) EXP -> EXP . menor EXP
    (173) EXP -> EXP . mayor_igual EXP
    (174) EXP -> EXP . menor_igual EXP
    (175) EXP -> EXP . igual EXP
    (176) EXP -> EXP . diferente1 EXP
    (177) EXP -> EXP . diferente2 EXP
    (178) EXP -> EXP . punto EXP
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (213) PREDICADOS -> EXP . between EXP
    (214) PREDICADOS -> EXP . in para LEXP parc
    (215) PREDICADOS -> EXP . not in para LEXP parc
    (216) PREDICADOS -> EXP . not between EXP
    (217) PREDICADOS -> EXP . between symetric EXP
    (218) PREDICADOS -> EXP . not between symetric EXP
    (219) PREDICADOS -> EXP . is distinct r_from EXP
    (220) PREDICADOS -> EXP . is not distinct r_from EXP
    (221) PREDICADOS -> EXP . is PNULL
    (222) PREDICADOS -> EXP . isnull
    (223) PREDICADOS -> EXP . notnull
    (224) PREDICADOS -> EXP . is true
    (225) PREDICADOS -> EXP . is not true
    (226) PREDICADOS -> EXP . is false
    (227) PREDICADOS -> EXP . is not false
    (228) PREDICADOS -> EXP . is unknown
    (229) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    coma            reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    limit           reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    offset          reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    union           reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    intersect       reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    except          reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    ptcoma          reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    mas             reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    menos           reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    multiplicacion  reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    division        reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    modulo          reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    elevado         reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    mayor           reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    menor           reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    mayor_igual     reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    menor_igual     reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    igual           reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    diferente1      reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    diferente2      reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    punto           reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    as              reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    cadenaString    reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    id              reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    cadena          reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    between         reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    in              reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    is              reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    isnull          reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    notnull         reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    parc            reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    then            reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    where           reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    group           reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    having          reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    order           reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    end             reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    else            reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    when            reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    constraint      reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    default         reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    primary         reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    references      reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    null            reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    asc             reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    desc            reduce using rule 213 (PREDICADOS -> EXP between EXP .)
    and             shift and go to state 91
    or              shift and go to state 92
    not             shift and go to state 107

  ! and             [ reduce using rule 213 (PREDICADOS -> EXP between EXP .) ]
  ! or              [ reduce using rule 213 (PREDICADOS -> EXP between EXP .) ]
  ! not             [ reduce using rule 213 (PREDICADOS -> EXP between EXP .) ]
  ! mas             [ shift and go to state 85 ]
  ! menos           [ shift and go to state 86 ]
  ! multiplicacion  [ shift and go to state 87 ]
  ! division        [ shift and go to state 88 ]
  ! modulo          [ shift and go to state 89 ]
  ! elevado         [ shift and go to state 90 ]
  ! mayor           [ shift and go to state 93 ]
  ! menor           [ shift and go to state 94 ]
  ! mayor_igual     [ shift and go to state 95 ]
  ! menor_igual     [ shift and go to state 96 ]
  ! igual           [ shift and go to state 97 ]
  ! diferente1      [ shift and go to state 98 ]
  ! diferente2      [ shift and go to state 99 ]
  ! punto           [ shift and go to state 100 ]
  ! as              [ shift and go to state 101 ]
  ! cadenaString    [ shift and go to state 102 ]
  ! id              [ shift and go to state 103 ]
  ! cadena          [ shift and go to state 104 ]
  ! between         [ shift and go to state 105 ]
  ! in              [ shift and go to state 106 ]
  ! is              [ shift and go to state 108 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]


state 173

    (217) PREDICADOS -> EXP between symetric . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 238
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 174

    (214) PREDICADOS -> EXP in para . LEXP parc
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 37
    LEXP                           shift and go to state 239
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 175

    (215) PREDICADOS -> EXP not in . para LEXP parc

    para            shift and go to state 240


state 176

    (216) PREDICADOS -> EXP not between . EXP
    (218) PREDICADOS -> EXP not between . symetric EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    symetric        shift and go to state 242
    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 241
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 177

    (219) PREDICADOS -> EXP is distinct . r_from EXP

    r_from          shift and go to state 243


state 178

    (220) PREDICADOS -> EXP is not . distinct r_from EXP
    (225) PREDICADOS -> EXP is not . true
    (227) PREDICADOS -> EXP is not . false
    (229) PREDICADOS -> EXP is not . unknown
    (77) PNULL -> not . null

    distinct        shift and go to state 244
    true            shift and go to state 245
    false           shift and go to state 246
    unknown         shift and go to state 247
    null            shift and go to state 248


state 179

    (221) PREDICADOS -> EXP is PNULL .

    r_from          reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    coma            reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    limit           reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    offset          reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    union           reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    intersect       reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    except          reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    ptcoma          reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    mas             reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    menos           reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    multiplicacion  reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    division        reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    modulo          reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    elevado         reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    and             reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    or              reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    mayor           reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    menor           reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    mayor_igual     reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    menor_igual     reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    igual           reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    diferente1      reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    diferente2      reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    punto           reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    as              reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    cadenaString    reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    id              reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    cadena          reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    between         reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    in              reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    not             reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    is              reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    isnull          reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    notnull         reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    parc            reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    then            reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    where           reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    group           reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    having          reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    order           reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    end             reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    else            reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    when            reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    constraint      reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    default         reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    primary         reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    references      reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    null            reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    asc             reduce using rule 221 (PREDICADOS -> EXP is PNULL .)
    desc            reduce using rule 221 (PREDICADOS -> EXP is PNULL .)


state 180

    (224) PREDICADOS -> EXP is true .

    r_from          reduce using rule 224 (PREDICADOS -> EXP is true .)
    coma            reduce using rule 224 (PREDICADOS -> EXP is true .)
    limit           reduce using rule 224 (PREDICADOS -> EXP is true .)
    offset          reduce using rule 224 (PREDICADOS -> EXP is true .)
    union           reduce using rule 224 (PREDICADOS -> EXP is true .)
    intersect       reduce using rule 224 (PREDICADOS -> EXP is true .)
    except          reduce using rule 224 (PREDICADOS -> EXP is true .)
    ptcoma          reduce using rule 224 (PREDICADOS -> EXP is true .)
    mas             reduce using rule 224 (PREDICADOS -> EXP is true .)
    menos           reduce using rule 224 (PREDICADOS -> EXP is true .)
    multiplicacion  reduce using rule 224 (PREDICADOS -> EXP is true .)
    division        reduce using rule 224 (PREDICADOS -> EXP is true .)
    modulo          reduce using rule 224 (PREDICADOS -> EXP is true .)
    elevado         reduce using rule 224 (PREDICADOS -> EXP is true .)
    and             reduce using rule 224 (PREDICADOS -> EXP is true .)
    or              reduce using rule 224 (PREDICADOS -> EXP is true .)
    mayor           reduce using rule 224 (PREDICADOS -> EXP is true .)
    menor           reduce using rule 224 (PREDICADOS -> EXP is true .)
    mayor_igual     reduce using rule 224 (PREDICADOS -> EXP is true .)
    menor_igual     reduce using rule 224 (PREDICADOS -> EXP is true .)
    igual           reduce using rule 224 (PREDICADOS -> EXP is true .)
    diferente1      reduce using rule 224 (PREDICADOS -> EXP is true .)
    diferente2      reduce using rule 224 (PREDICADOS -> EXP is true .)
    punto           reduce using rule 224 (PREDICADOS -> EXP is true .)
    as              reduce using rule 224 (PREDICADOS -> EXP is true .)
    cadenaString    reduce using rule 224 (PREDICADOS -> EXP is true .)
    id              reduce using rule 224 (PREDICADOS -> EXP is true .)
    cadena          reduce using rule 224 (PREDICADOS -> EXP is true .)
    between         reduce using rule 224 (PREDICADOS -> EXP is true .)
    in              reduce using rule 224 (PREDICADOS -> EXP is true .)
    not             reduce using rule 224 (PREDICADOS -> EXP is true .)
    is              reduce using rule 224 (PREDICADOS -> EXP is true .)
    isnull          reduce using rule 224 (PREDICADOS -> EXP is true .)
    notnull         reduce using rule 224 (PREDICADOS -> EXP is true .)
    parc            reduce using rule 224 (PREDICADOS -> EXP is true .)
    then            reduce using rule 224 (PREDICADOS -> EXP is true .)
    where           reduce using rule 224 (PREDICADOS -> EXP is true .)
    group           reduce using rule 224 (PREDICADOS -> EXP is true .)
    having          reduce using rule 224 (PREDICADOS -> EXP is true .)
    order           reduce using rule 224 (PREDICADOS -> EXP is true .)
    end             reduce using rule 224 (PREDICADOS -> EXP is true .)
    else            reduce using rule 224 (PREDICADOS -> EXP is true .)
    when            reduce using rule 224 (PREDICADOS -> EXP is true .)
    constraint      reduce using rule 224 (PREDICADOS -> EXP is true .)
    default         reduce using rule 224 (PREDICADOS -> EXP is true .)
    primary         reduce using rule 224 (PREDICADOS -> EXP is true .)
    references      reduce using rule 224 (PREDICADOS -> EXP is true .)
    null            reduce using rule 224 (PREDICADOS -> EXP is true .)
    asc             reduce using rule 224 (PREDICADOS -> EXP is true .)
    desc            reduce using rule 224 (PREDICADOS -> EXP is true .)


state 181

    (226) PREDICADOS -> EXP is false .

    r_from          reduce using rule 226 (PREDICADOS -> EXP is false .)
    coma            reduce using rule 226 (PREDICADOS -> EXP is false .)
    limit           reduce using rule 226 (PREDICADOS -> EXP is false .)
    offset          reduce using rule 226 (PREDICADOS -> EXP is false .)
    union           reduce using rule 226 (PREDICADOS -> EXP is false .)
    intersect       reduce using rule 226 (PREDICADOS -> EXP is false .)
    except          reduce using rule 226 (PREDICADOS -> EXP is false .)
    ptcoma          reduce using rule 226 (PREDICADOS -> EXP is false .)
    mas             reduce using rule 226 (PREDICADOS -> EXP is false .)
    menos           reduce using rule 226 (PREDICADOS -> EXP is false .)
    multiplicacion  reduce using rule 226 (PREDICADOS -> EXP is false .)
    division        reduce using rule 226 (PREDICADOS -> EXP is false .)
    modulo          reduce using rule 226 (PREDICADOS -> EXP is false .)
    elevado         reduce using rule 226 (PREDICADOS -> EXP is false .)
    and             reduce using rule 226 (PREDICADOS -> EXP is false .)
    or              reduce using rule 226 (PREDICADOS -> EXP is false .)
    mayor           reduce using rule 226 (PREDICADOS -> EXP is false .)
    menor           reduce using rule 226 (PREDICADOS -> EXP is false .)
    mayor_igual     reduce using rule 226 (PREDICADOS -> EXP is false .)
    menor_igual     reduce using rule 226 (PREDICADOS -> EXP is false .)
    igual           reduce using rule 226 (PREDICADOS -> EXP is false .)
    diferente1      reduce using rule 226 (PREDICADOS -> EXP is false .)
    diferente2      reduce using rule 226 (PREDICADOS -> EXP is false .)
    punto           reduce using rule 226 (PREDICADOS -> EXP is false .)
    as              reduce using rule 226 (PREDICADOS -> EXP is false .)
    cadenaString    reduce using rule 226 (PREDICADOS -> EXP is false .)
    id              reduce using rule 226 (PREDICADOS -> EXP is false .)
    cadena          reduce using rule 226 (PREDICADOS -> EXP is false .)
    between         reduce using rule 226 (PREDICADOS -> EXP is false .)
    in              reduce using rule 226 (PREDICADOS -> EXP is false .)
    not             reduce using rule 226 (PREDICADOS -> EXP is false .)
    is              reduce using rule 226 (PREDICADOS -> EXP is false .)
    isnull          reduce using rule 226 (PREDICADOS -> EXP is false .)
    notnull         reduce using rule 226 (PREDICADOS -> EXP is false .)
    parc            reduce using rule 226 (PREDICADOS -> EXP is false .)
    then            reduce using rule 226 (PREDICADOS -> EXP is false .)
    where           reduce using rule 226 (PREDICADOS -> EXP is false .)
    group           reduce using rule 226 (PREDICADOS -> EXP is false .)
    having          reduce using rule 226 (PREDICADOS -> EXP is false .)
    order           reduce using rule 226 (PREDICADOS -> EXP is false .)
    end             reduce using rule 226 (PREDICADOS -> EXP is false .)
    else            reduce using rule 226 (PREDICADOS -> EXP is false .)
    when            reduce using rule 226 (PREDICADOS -> EXP is false .)
    constraint      reduce using rule 226 (PREDICADOS -> EXP is false .)
    default         reduce using rule 226 (PREDICADOS -> EXP is false .)
    primary         reduce using rule 226 (PREDICADOS -> EXP is false .)
    references      reduce using rule 226 (PREDICADOS -> EXP is false .)
    null            reduce using rule 226 (PREDICADOS -> EXP is false .)
    asc             reduce using rule 226 (PREDICADOS -> EXP is false .)
    desc            reduce using rule 226 (PREDICADOS -> EXP is false .)


state 182

    (228) PREDICADOS -> EXP is unknown .

    r_from          reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    coma            reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    limit           reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    offset          reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    union           reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    intersect       reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    except          reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    ptcoma          reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    mas             reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    menos           reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    multiplicacion  reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    division        reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    modulo          reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    elevado         reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    and             reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    or              reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    mayor           reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    menor           reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    mayor_igual     reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    menor_igual     reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    igual           reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    diferente1      reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    diferente2      reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    punto           reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    as              reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    cadenaString    reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    id              reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    cadena          reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    between         reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    in              reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    not             reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    is              reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    isnull          reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    notnull         reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    parc            reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    then            reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    where           reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    group           reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    having          reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    order           reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    end             reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    else            reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    when            reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    constraint      reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    default         reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    primary         reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    references      reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    null            reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    asc             reduce using rule 228 (PREDICADOS -> EXP is unknown .)
    desc            reduce using rule 228 (PREDICADOS -> EXP is unknown .)


state 183

    (182) EXP -> para EXP parc .

    r_from          reduce using rule 182 (EXP -> para EXP parc .)
    coma            reduce using rule 182 (EXP -> para EXP parc .)
    limit           reduce using rule 182 (EXP -> para EXP parc .)
    offset          reduce using rule 182 (EXP -> para EXP parc .)
    union           reduce using rule 182 (EXP -> para EXP parc .)
    intersect       reduce using rule 182 (EXP -> para EXP parc .)
    except          reduce using rule 182 (EXP -> para EXP parc .)
    ptcoma          reduce using rule 182 (EXP -> para EXP parc .)
    mas             reduce using rule 182 (EXP -> para EXP parc .)
    menos           reduce using rule 182 (EXP -> para EXP parc .)
    multiplicacion  reduce using rule 182 (EXP -> para EXP parc .)
    division        reduce using rule 182 (EXP -> para EXP parc .)
    modulo          reduce using rule 182 (EXP -> para EXP parc .)
    elevado         reduce using rule 182 (EXP -> para EXP parc .)
    and             reduce using rule 182 (EXP -> para EXP parc .)
    or              reduce using rule 182 (EXP -> para EXP parc .)
    mayor           reduce using rule 182 (EXP -> para EXP parc .)
    menor           reduce using rule 182 (EXP -> para EXP parc .)
    mayor_igual     reduce using rule 182 (EXP -> para EXP parc .)
    menor_igual     reduce using rule 182 (EXP -> para EXP parc .)
    igual           reduce using rule 182 (EXP -> para EXP parc .)
    diferente1      reduce using rule 182 (EXP -> para EXP parc .)
    diferente2      reduce using rule 182 (EXP -> para EXP parc .)
    punto           reduce using rule 182 (EXP -> para EXP parc .)
    as              reduce using rule 182 (EXP -> para EXP parc .)
    cadenaString    reduce using rule 182 (EXP -> para EXP parc .)
    id              reduce using rule 182 (EXP -> para EXP parc .)
    cadena          reduce using rule 182 (EXP -> para EXP parc .)
    between         reduce using rule 182 (EXP -> para EXP parc .)
    in              reduce using rule 182 (EXP -> para EXP parc .)
    not             reduce using rule 182 (EXP -> para EXP parc .)
    is              reduce using rule 182 (EXP -> para EXP parc .)
    isnull          reduce using rule 182 (EXP -> para EXP parc .)
    notnull         reduce using rule 182 (EXP -> para EXP parc .)
    parc            reduce using rule 182 (EXP -> para EXP parc .)
    then            reduce using rule 182 (EXP -> para EXP parc .)
    where           reduce using rule 182 (EXP -> para EXP parc .)
    group           reduce using rule 182 (EXP -> para EXP parc .)
    having          reduce using rule 182 (EXP -> para EXP parc .)
    order           reduce using rule 182 (EXP -> para EXP parc .)
    end             reduce using rule 182 (EXP -> para EXP parc .)
    else            reduce using rule 182 (EXP -> para EXP parc .)
    when            reduce using rule 182 (EXP -> para EXP parc .)
    constraint      reduce using rule 182 (EXP -> para EXP parc .)
    default         reduce using rule 182 (EXP -> para EXP parc .)
    primary         reduce using rule 182 (EXP -> para EXP parc .)
    references      reduce using rule 182 (EXP -> para EXP parc .)
    null            reduce using rule 182 (EXP -> para EXP parc .)
    asc             reduce using rule 182 (EXP -> para EXP parc .)
    desc            reduce using rule 182 (EXP -> para EXP parc .)


state 184

    (201) EXP -> cadena like cadena .

    r_from          reduce using rule 201 (EXP -> cadena like cadena .)
    coma            reduce using rule 201 (EXP -> cadena like cadena .)
    limit           reduce using rule 201 (EXP -> cadena like cadena .)
    offset          reduce using rule 201 (EXP -> cadena like cadena .)
    union           reduce using rule 201 (EXP -> cadena like cadena .)
    intersect       reduce using rule 201 (EXP -> cadena like cadena .)
    except          reduce using rule 201 (EXP -> cadena like cadena .)
    ptcoma          reduce using rule 201 (EXP -> cadena like cadena .)
    mas             reduce using rule 201 (EXP -> cadena like cadena .)
    menos           reduce using rule 201 (EXP -> cadena like cadena .)
    multiplicacion  reduce using rule 201 (EXP -> cadena like cadena .)
    division        reduce using rule 201 (EXP -> cadena like cadena .)
    modulo          reduce using rule 201 (EXP -> cadena like cadena .)
    elevado         reduce using rule 201 (EXP -> cadena like cadena .)
    and             reduce using rule 201 (EXP -> cadena like cadena .)
    or              reduce using rule 201 (EXP -> cadena like cadena .)
    mayor           reduce using rule 201 (EXP -> cadena like cadena .)
    menor           reduce using rule 201 (EXP -> cadena like cadena .)
    mayor_igual     reduce using rule 201 (EXP -> cadena like cadena .)
    menor_igual     reduce using rule 201 (EXP -> cadena like cadena .)
    igual           reduce using rule 201 (EXP -> cadena like cadena .)
    diferente1      reduce using rule 201 (EXP -> cadena like cadena .)
    diferente2      reduce using rule 201 (EXP -> cadena like cadena .)
    punto           reduce using rule 201 (EXP -> cadena like cadena .)
    as              reduce using rule 201 (EXP -> cadena like cadena .)
    cadenaString    reduce using rule 201 (EXP -> cadena like cadena .)
    id              reduce using rule 201 (EXP -> cadena like cadena .)
    cadena          reduce using rule 201 (EXP -> cadena like cadena .)
    between         reduce using rule 201 (EXP -> cadena like cadena .)
    in              reduce using rule 201 (EXP -> cadena like cadena .)
    not             reduce using rule 201 (EXP -> cadena like cadena .)
    is              reduce using rule 201 (EXP -> cadena like cadena .)
    isnull          reduce using rule 201 (EXP -> cadena like cadena .)
    notnull         reduce using rule 201 (EXP -> cadena like cadena .)
    parc            reduce using rule 201 (EXP -> cadena like cadena .)
    then            reduce using rule 201 (EXP -> cadena like cadena .)
    where           reduce using rule 201 (EXP -> cadena like cadena .)
    group           reduce using rule 201 (EXP -> cadena like cadena .)
    having          reduce using rule 201 (EXP -> cadena like cadena .)
    order           reduce using rule 201 (EXP -> cadena like cadena .)
    end             reduce using rule 201 (EXP -> cadena like cadena .)
    else            reduce using rule 201 (EXP -> cadena like cadena .)
    when            reduce using rule 201 (EXP -> cadena like cadena .)
    constraint      reduce using rule 201 (EXP -> cadena like cadena .)
    default         reduce using rule 201 (EXP -> cadena like cadena .)
    primary         reduce using rule 201 (EXP -> cadena like cadena .)
    references      reduce using rule 201 (EXP -> cadena like cadena .)
    null            reduce using rule 201 (EXP -> cadena like cadena .)
    asc             reduce using rule 201 (EXP -> cadena like cadena .)
    desc            reduce using rule 201 (EXP -> cadena like cadena .)


state 185

    (202) EXP -> cadena not like . cadena

    cadena          shift and go to state 249


state 186

    (193) EXP -> id para parc .

    r_from          reduce using rule 193 (EXP -> id para parc .)
    coma            reduce using rule 193 (EXP -> id para parc .)
    limit           reduce using rule 193 (EXP -> id para parc .)
    offset          reduce using rule 193 (EXP -> id para parc .)
    union           reduce using rule 193 (EXP -> id para parc .)
    intersect       reduce using rule 193 (EXP -> id para parc .)
    except          reduce using rule 193 (EXP -> id para parc .)
    ptcoma          reduce using rule 193 (EXP -> id para parc .)
    mas             reduce using rule 193 (EXP -> id para parc .)
    menos           reduce using rule 193 (EXP -> id para parc .)
    multiplicacion  reduce using rule 193 (EXP -> id para parc .)
    division        reduce using rule 193 (EXP -> id para parc .)
    modulo          reduce using rule 193 (EXP -> id para parc .)
    elevado         reduce using rule 193 (EXP -> id para parc .)
    and             reduce using rule 193 (EXP -> id para parc .)
    or              reduce using rule 193 (EXP -> id para parc .)
    mayor           reduce using rule 193 (EXP -> id para parc .)
    menor           reduce using rule 193 (EXP -> id para parc .)
    mayor_igual     reduce using rule 193 (EXP -> id para parc .)
    menor_igual     reduce using rule 193 (EXP -> id para parc .)
    igual           reduce using rule 193 (EXP -> id para parc .)
    diferente1      reduce using rule 193 (EXP -> id para parc .)
    diferente2      reduce using rule 193 (EXP -> id para parc .)
    punto           reduce using rule 193 (EXP -> id para parc .)
    as              reduce using rule 193 (EXP -> id para parc .)
    cadenaString    reduce using rule 193 (EXP -> id para parc .)
    id              reduce using rule 193 (EXP -> id para parc .)
    cadena          reduce using rule 193 (EXP -> id para parc .)
    between         reduce using rule 193 (EXP -> id para parc .)
    in              reduce using rule 193 (EXP -> id para parc .)
    not             reduce using rule 193 (EXP -> id para parc .)
    is              reduce using rule 193 (EXP -> id para parc .)
    isnull          reduce using rule 193 (EXP -> id para parc .)
    notnull         reduce using rule 193 (EXP -> id para parc .)
    parc            reduce using rule 193 (EXP -> id para parc .)
    then            reduce using rule 193 (EXP -> id para parc .)
    where           reduce using rule 193 (EXP -> id para parc .)
    group           reduce using rule 193 (EXP -> id para parc .)
    having          reduce using rule 193 (EXP -> id para parc .)
    order           reduce using rule 193 (EXP -> id para parc .)
    end             reduce using rule 193 (EXP -> id para parc .)
    else            reduce using rule 193 (EXP -> id para parc .)
    when            reduce using rule 193 (EXP -> id para parc .)
    constraint      reduce using rule 193 (EXP -> id para parc .)
    default         reduce using rule 193 (EXP -> id para parc .)
    primary         reduce using rule 193 (EXP -> id para parc .)
    references      reduce using rule 193 (EXP -> id para parc .)
    null            reduce using rule 193 (EXP -> id para parc .)
    asc             reduce using rule 193 (EXP -> id para parc .)
    desc            reduce using rule 193 (EXP -> id para parc .)


state 187

    (194) EXP -> id para LEXP . parc
    (124) LEXP -> LEXP . coma EXP

    parc            shift and go to state 250
    coma            shift and go to state 82


state 188

    (195) EXP -> extract para FIELDS . r_from timestamp cadena parc

    r_from          shift and go to state 251


state 189

    (157) FIELDS -> year .

    r_from          reduce using rule 157 (FIELDS -> year .)


state 190

    (158) FIELDS -> month .

    r_from          reduce using rule 158 (FIELDS -> month .)


state 191

    (159) FIELDS -> day .

    r_from          reduce using rule 159 (FIELDS -> day .)


state 192

    (160) FIELDS -> hour .

    r_from          reduce using rule 160 (FIELDS -> hour .)


state 193

    (161) FIELDS -> minute .

    r_from          reduce using rule 161 (FIELDS -> minute .)


state 194

    (162) FIELDS -> second .

    r_from          reduce using rule 162 (FIELDS -> second .)


state 195

    (203) EXP -> any para LEXP . parc
    (124) LEXP -> LEXP . coma EXP

    parc            shift and go to state 252
    coma            shift and go to state 82


state 196

    (204) EXP -> all para LEXP . parc
    (124) LEXP -> LEXP . coma EXP

    parc            shift and go to state 253
    coma            shift and go to state 82


state 197

    (205) EXP -> some para LEXP . parc
    (124) LEXP -> LEXP . coma EXP

    parc            shift and go to state 254
    coma            shift and go to state 82


state 198

    (61) CREATETABLE -> create table id para . LDEF parc ptcoma
    (62) CREATETABLE -> create table id para . LDEF parc HERENCIA ptcoma
    (63) LDEF -> . LDEF coma COLDEF
    (64) LDEF -> . COLDEF
    (65) COLDEF -> . OPCONST
    (66) COLDEF -> . constraint id OPCONST
    (67) COLDEF -> . id TIPO
    (68) COLDEF -> . id TIPO LOPCOLUMN
    (79) OPCONST -> . primary key para LEXP parc
    (80) OPCONST -> . foreign key para LEXP parc references table para LEXP parc
    (81) OPCONST -> . unique para LEXP parc
    (82) OPCONST -> . check para LEXP parc

    constraint      shift and go to state 259
    id              shift and go to state 255
    primary         shift and go to state 260
    foreign         shift and go to state 261
    unique          shift and go to state 262
    check           shift and go to state 263

    LDEF                           shift and go to state 256
    COLDEF                         shift and go to state 257
    OPCONST                        shift and go to state 258

state 199

    (84) CREATETYPE -> create type id as . enum para LEXP parc

    enum            shift and go to state 264


state 200

    (48) CREATEDB -> create RD if not . exist id
    (49) CREATEDB -> create RD if not . exist id OPCCDB

    exist           shift and go to state 265


state 201

    (51) CREATEDB -> create RD id OPCCDB .

    ptcoma          reduce using rule 51 (CREATEDB -> create RD id OPCCDB .)


state 202

    (52) OPCCDB -> PROPIETARIO .
    (54) OPCCDB -> PROPIETARIO . MODO
    (59) MODO -> . mode igual int
    (60) MODO -> . mode int

    ptcoma          reduce using rule 52 (OPCCDB -> PROPIETARIO .)
    mode            shift and go to state 205

    MODO                           shift and go to state 266

state 203

    (53) OPCCDB -> MODO .

    ptcoma          reduce using rule 53 (OPCCDB -> MODO .)


state 204

    (57) PROPIETARIO -> owner . igual id
    (58) PROPIETARIO -> owner . id

    igual           shift and go to state 267
    id              shift and go to state 268


state 205

    (59) MODO -> mode . igual int
    (60) MODO -> mode . int

    igual           shift and go to state 269
    int             shift and go to state 270


state 206

    (55) RD -> or replace databases .

    if              reduce using rule 55 (RD -> or replace databases .)
    id              reduce using rule 55 (RD -> or replace databases .)


state 207

    (119) LCAMPOS -> id . igual EXP
    (120) LCAMPOS -> id . igual default

    igual           shift and go to state 271


state 208

    (117) UPDATE -> update id set LCAMPOS . where LEXP
    (118) LCAMPOS -> LCAMPOS . id igual EXP

    where           shift and go to state 273
    id              shift and go to state 272


state 209

    (121) DELETE -> delete r_from id where . LEXP
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 274
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 210

    (25) ALTER -> alter databases id RO .

    ptcoma          reduce using rule 25 (ALTER -> alter databases id RO .)


state 211

    (27) RO -> rename . to id

    to              shift and go to state 275


state 212

    (28) RO -> owner . to id

    to              shift and go to state 276


state 213

    (32) OP -> alter . column id set not null
    (33) OP -> alter . column id set null
    (39) alc -> alter . column id type TIPO

    column          shift and go to state 277


state 214

    (29) altertable -> alter table id OP .

    ptcoma          reduce using rule 29 (altertable -> alter table id OP .)


state 215

    (30) OP -> add . ADD
    (43) ADD -> . column id TIPO
    (44) ADD -> . check para LEXP parc
    (45) ADD -> . constraint id unique para id parc
    (46) ADD -> . foreign key para id parc references id para id parc

    column          shift and go to state 279
    check           shift and go to state 280
    constraint      shift and go to state 281
    foreign         shift and go to state 282

    ADD                            shift and go to state 278

state 216

    (31) OP -> drop . column ALTERDROP
    (35) OP -> drop . ALTERDROP
    (40) ALTERDROP -> . constraint id
    (41) ALTERDROP -> . column LEXP
    (42) ALTERDROP -> . check id

    column          shift and go to state 283
    constraint      shift and go to state 285
    check           shift and go to state 286

    ALTERDROP                      shift and go to state 284

state 217

    (34) OP -> listaalc .
    (37) listaalc -> listaalc . coma alc

    ptcoma          reduce using rule 34 (OP -> listaalc .)
    coma            shift and go to state 287


state 218

    (36) OP -> rename . column id to id

    column          shift and go to state 288


state 219

    (38) listaalc -> alc .

    coma            reduce using rule 38 (listaalc -> alc .)
    ptcoma          reduce using rule 38 (listaalc -> alc .)


state 220

    (23) DROP -> drop databases if exist . id

    id              shift and go to state 289


state 221

    (21) INSERT -> insert into id values . para LEXP parc

    para            shift and go to state 290


state 222

    (15) CASE -> case LISTAWHEN ELSE end .

    select          reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    create          reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    update          reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    delete          reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    alter           reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    drop            reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    insert          reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    case            reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    show            reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    $end            reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    r_from          reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    coma            reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    limit           reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    offset          reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    union           reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    intersect       reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    except          reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    ptcoma          reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    mas             reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    menos           reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    multiplicacion  reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    division        reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    modulo          reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    elevado         reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    and             reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    or              reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    mayor           reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    menor           reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    mayor_igual     reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    menor_igual     reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    igual           reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    diferente1      reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    diferente2      reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    punto           reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    as              reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    cadenaString    reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    id              reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    cadena          reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    between         reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    in              reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    not             reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    is              reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    isnull          reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    notnull         reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    parc            reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    then            reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    where           reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    group           reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    having          reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    order           reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    end             reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    else            reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    when            reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    constraint      reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    default         reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    primary         reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    references      reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    null            reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    asc             reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    desc            reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)


state 223

    (20) ELSE -> else LEXP .
    (124) LEXP -> LEXP . coma EXP

    end             reduce using rule 20 (ELSE -> else LEXP .)
    coma            shift and go to state 82


state 224

    (19) WHEN -> when LEXP then . LEXP
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 291
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 225

    (85) SELECT -> select distinct LEXP r_from LEXP . WHERE GROUP HAVING ORDER LIMIT COMBINING
    (124) LEXP -> LEXP . coma EXP
    (96) WHERE -> . where LEXP
    (97) WHERE -> . where EXIST
    (98) WHERE -> . union LEXP
    (99) WHERE -> . union all LEXP
    (100) WHERE -> .

  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for union resolved as shift
  ! shift/reduce conflict for where resolved as shift
    coma            shift and go to state 82
    where           shift and go to state 227
    union           shift and go to state 228
    r_from          reduce using rule 100 (WHERE -> .)
    limit           reduce using rule 100 (WHERE -> .)
    offset          reduce using rule 100 (WHERE -> .)
    intersect       reduce using rule 100 (WHERE -> .)
    except          reduce using rule 100 (WHERE -> .)
    ptcoma          reduce using rule 100 (WHERE -> .)
    mas             reduce using rule 100 (WHERE -> .)
    menos           reduce using rule 100 (WHERE -> .)
    multiplicacion  reduce using rule 100 (WHERE -> .)
    division        reduce using rule 100 (WHERE -> .)
    modulo          reduce using rule 100 (WHERE -> .)
    elevado         reduce using rule 100 (WHERE -> .)
    and             reduce using rule 100 (WHERE -> .)
    or              reduce using rule 100 (WHERE -> .)
    mayor           reduce using rule 100 (WHERE -> .)
    menor           reduce using rule 100 (WHERE -> .)
    mayor_igual     reduce using rule 100 (WHERE -> .)
    menor_igual     reduce using rule 100 (WHERE -> .)
    igual           reduce using rule 100 (WHERE -> .)
    diferente1      reduce using rule 100 (WHERE -> .)
    diferente2      reduce using rule 100 (WHERE -> .)
    punto           reduce using rule 100 (WHERE -> .)
    as              reduce using rule 100 (WHERE -> .)
    cadenaString    reduce using rule 100 (WHERE -> .)
    id              reduce using rule 100 (WHERE -> .)
    cadena          reduce using rule 100 (WHERE -> .)
    between         reduce using rule 100 (WHERE -> .)
    in              reduce using rule 100 (WHERE -> .)
    not             reduce using rule 100 (WHERE -> .)
    is              reduce using rule 100 (WHERE -> .)
    isnull          reduce using rule 100 (WHERE -> .)
    notnull         reduce using rule 100 (WHERE -> .)
    parc            reduce using rule 100 (WHERE -> .)
    then            reduce using rule 100 (WHERE -> .)
    group           reduce using rule 100 (WHERE -> .)
    having          reduce using rule 100 (WHERE -> .)
    order           reduce using rule 100 (WHERE -> .)
    end             reduce using rule 100 (WHERE -> .)
    else            reduce using rule 100 (WHERE -> .)
    when            reduce using rule 100 (WHERE -> .)
    constraint      reduce using rule 100 (WHERE -> .)
    default         reduce using rule 100 (WHERE -> .)
    primary         reduce using rule 100 (WHERE -> .)
    references      reduce using rule 100 (WHERE -> .)
    null            reduce using rule 100 (WHERE -> .)
    asc             reduce using rule 100 (WHERE -> .)
    desc            reduce using rule 100 (WHERE -> .)

  ! coma            [ reduce using rule 100 (WHERE -> .) ]
  ! union           [ reduce using rule 100 (WHERE -> .) ]
  ! where           [ reduce using rule 100 (WHERE -> .) ]

    WHERE                          shift and go to state 292

state 226

    (86) SELECT -> select LEXP r_from LEXP WHERE . GROUP HAVING ORDER LIMIT COMBINING
    (108) GROUP -> . group by LEXP
    (109) GROUP -> .

  ! shift/reduce conflict for group resolved as shift
    group           shift and go to state 294
    r_from          reduce using rule 109 (GROUP -> .)
    coma            reduce using rule 109 (GROUP -> .)
    limit           reduce using rule 109 (GROUP -> .)
    offset          reduce using rule 109 (GROUP -> .)
    union           reduce using rule 109 (GROUP -> .)
    intersect       reduce using rule 109 (GROUP -> .)
    except          reduce using rule 109 (GROUP -> .)
    ptcoma          reduce using rule 109 (GROUP -> .)
    mas             reduce using rule 109 (GROUP -> .)
    menos           reduce using rule 109 (GROUP -> .)
    multiplicacion  reduce using rule 109 (GROUP -> .)
    division        reduce using rule 109 (GROUP -> .)
    modulo          reduce using rule 109 (GROUP -> .)
    elevado         reduce using rule 109 (GROUP -> .)
    and             reduce using rule 109 (GROUP -> .)
    or              reduce using rule 109 (GROUP -> .)
    mayor           reduce using rule 109 (GROUP -> .)
    menor           reduce using rule 109 (GROUP -> .)
    mayor_igual     reduce using rule 109 (GROUP -> .)
    menor_igual     reduce using rule 109 (GROUP -> .)
    igual           reduce using rule 109 (GROUP -> .)
    diferente1      reduce using rule 109 (GROUP -> .)
    diferente2      reduce using rule 109 (GROUP -> .)
    punto           reduce using rule 109 (GROUP -> .)
    as              reduce using rule 109 (GROUP -> .)
    cadenaString    reduce using rule 109 (GROUP -> .)
    id              reduce using rule 109 (GROUP -> .)
    cadena          reduce using rule 109 (GROUP -> .)
    between         reduce using rule 109 (GROUP -> .)
    in              reduce using rule 109 (GROUP -> .)
    not             reduce using rule 109 (GROUP -> .)
    is              reduce using rule 109 (GROUP -> .)
    isnull          reduce using rule 109 (GROUP -> .)
    notnull         reduce using rule 109 (GROUP -> .)
    parc            reduce using rule 109 (GROUP -> .)
    then            reduce using rule 109 (GROUP -> .)
    where           reduce using rule 109 (GROUP -> .)
    having          reduce using rule 109 (GROUP -> .)
    order           reduce using rule 109 (GROUP -> .)
    end             reduce using rule 109 (GROUP -> .)
    else            reduce using rule 109 (GROUP -> .)
    when            reduce using rule 109 (GROUP -> .)
    constraint      reduce using rule 109 (GROUP -> .)
    default         reduce using rule 109 (GROUP -> .)
    primary         reduce using rule 109 (GROUP -> .)
    references      reduce using rule 109 (GROUP -> .)
    null            reduce using rule 109 (GROUP -> .)
    asc             reduce using rule 109 (GROUP -> .)
    desc            reduce using rule 109 (GROUP -> .)

  ! group           [ reduce using rule 109 (GROUP -> .) ]

    GROUP                          shift and go to state 293

state 227

    (96) WHERE -> where . LEXP
    (97) WHERE -> where . EXIST
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (123) EXIST -> . exist para SELECT parc
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    exist           shift and go to state 297
    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 295
    EXIST                          shift and go to state 296
    EXP                            shift and go to state 37
    SELECT                         shift and go to state 51
    PNULL                          shift and go to state 50
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 228

    (98) WHERE -> union . LEXP
    (99) WHERE -> union . all LEXP
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    all             shift and go to state 299
    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 298
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 229

    (101) COMBINING -> union LEXP .
    (124) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 101 (COMBINING -> union LEXP .)
    limit           reduce using rule 101 (COMBINING -> union LEXP .)
    offset          reduce using rule 101 (COMBINING -> union LEXP .)
    union           reduce using rule 101 (COMBINING -> union LEXP .)
    intersect       reduce using rule 101 (COMBINING -> union LEXP .)
    except          reduce using rule 101 (COMBINING -> union LEXP .)
    ptcoma          reduce using rule 101 (COMBINING -> union LEXP .)
    mas             reduce using rule 101 (COMBINING -> union LEXP .)
    menos           reduce using rule 101 (COMBINING -> union LEXP .)
    multiplicacion  reduce using rule 101 (COMBINING -> union LEXP .)
    division        reduce using rule 101 (COMBINING -> union LEXP .)
    modulo          reduce using rule 101 (COMBINING -> union LEXP .)
    elevado         reduce using rule 101 (COMBINING -> union LEXP .)
    and             reduce using rule 101 (COMBINING -> union LEXP .)
    or              reduce using rule 101 (COMBINING -> union LEXP .)
    mayor           reduce using rule 101 (COMBINING -> union LEXP .)
    menor           reduce using rule 101 (COMBINING -> union LEXP .)
    mayor_igual     reduce using rule 101 (COMBINING -> union LEXP .)
    menor_igual     reduce using rule 101 (COMBINING -> union LEXP .)
    igual           reduce using rule 101 (COMBINING -> union LEXP .)
    diferente1      reduce using rule 101 (COMBINING -> union LEXP .)
    diferente2      reduce using rule 101 (COMBINING -> union LEXP .)
    punto           reduce using rule 101 (COMBINING -> union LEXP .)
    as              reduce using rule 101 (COMBINING -> union LEXP .)
    cadenaString    reduce using rule 101 (COMBINING -> union LEXP .)
    id              reduce using rule 101 (COMBINING -> union LEXP .)
    cadena          reduce using rule 101 (COMBINING -> union LEXP .)
    between         reduce using rule 101 (COMBINING -> union LEXP .)
    in              reduce using rule 101 (COMBINING -> union LEXP .)
    not             reduce using rule 101 (COMBINING -> union LEXP .)
    is              reduce using rule 101 (COMBINING -> union LEXP .)
    isnull          reduce using rule 101 (COMBINING -> union LEXP .)
    notnull         reduce using rule 101 (COMBINING -> union LEXP .)
    parc            reduce using rule 101 (COMBINING -> union LEXP .)
    then            reduce using rule 101 (COMBINING -> union LEXP .)
    where           reduce using rule 101 (COMBINING -> union LEXP .)
    group           reduce using rule 101 (COMBINING -> union LEXP .)
    having          reduce using rule 101 (COMBINING -> union LEXP .)
    order           reduce using rule 101 (COMBINING -> union LEXP .)
    end             reduce using rule 101 (COMBINING -> union LEXP .)
    else            reduce using rule 101 (COMBINING -> union LEXP .)
    when            reduce using rule 101 (COMBINING -> union LEXP .)
    constraint      reduce using rule 101 (COMBINING -> union LEXP .)
    default         reduce using rule 101 (COMBINING -> union LEXP .)
    primary         reduce using rule 101 (COMBINING -> union LEXP .)
    references      reduce using rule 101 (COMBINING -> union LEXP .)
    null            reduce using rule 101 (COMBINING -> union LEXP .)
    asc             reduce using rule 101 (COMBINING -> union LEXP .)
    desc            reduce using rule 101 (COMBINING -> union LEXP .)
    coma            shift and go to state 82

  ! coma            [ reduce using rule 101 (COMBINING -> union LEXP .) ]


state 230

    (102) COMBINING -> union all . LEXP
    (204) EXP -> all . para LEXP parc
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    para            shift and go to state 301
    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 300
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 231

    (103) COMBINING -> intersect LEXP .
    (124) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 103 (COMBINING -> intersect LEXP .)
    limit           reduce using rule 103 (COMBINING -> intersect LEXP .)
    offset          reduce using rule 103 (COMBINING -> intersect LEXP .)
    union           reduce using rule 103 (COMBINING -> intersect LEXP .)
    intersect       reduce using rule 103 (COMBINING -> intersect LEXP .)
    except          reduce using rule 103 (COMBINING -> intersect LEXP .)
    ptcoma          reduce using rule 103 (COMBINING -> intersect LEXP .)
    mas             reduce using rule 103 (COMBINING -> intersect LEXP .)
    menos           reduce using rule 103 (COMBINING -> intersect LEXP .)
    multiplicacion  reduce using rule 103 (COMBINING -> intersect LEXP .)
    division        reduce using rule 103 (COMBINING -> intersect LEXP .)
    modulo          reduce using rule 103 (COMBINING -> intersect LEXP .)
    elevado         reduce using rule 103 (COMBINING -> intersect LEXP .)
    and             reduce using rule 103 (COMBINING -> intersect LEXP .)
    or              reduce using rule 103 (COMBINING -> intersect LEXP .)
    mayor           reduce using rule 103 (COMBINING -> intersect LEXP .)
    menor           reduce using rule 103 (COMBINING -> intersect LEXP .)
    mayor_igual     reduce using rule 103 (COMBINING -> intersect LEXP .)
    menor_igual     reduce using rule 103 (COMBINING -> intersect LEXP .)
    igual           reduce using rule 103 (COMBINING -> intersect LEXP .)
    diferente1      reduce using rule 103 (COMBINING -> intersect LEXP .)
    diferente2      reduce using rule 103 (COMBINING -> intersect LEXP .)
    punto           reduce using rule 103 (COMBINING -> intersect LEXP .)
    as              reduce using rule 103 (COMBINING -> intersect LEXP .)
    cadenaString    reduce using rule 103 (COMBINING -> intersect LEXP .)
    id              reduce using rule 103 (COMBINING -> intersect LEXP .)
    cadena          reduce using rule 103 (COMBINING -> intersect LEXP .)
    between         reduce using rule 103 (COMBINING -> intersect LEXP .)
    in              reduce using rule 103 (COMBINING -> intersect LEXP .)
    not             reduce using rule 103 (COMBINING -> intersect LEXP .)
    is              reduce using rule 103 (COMBINING -> intersect LEXP .)
    isnull          reduce using rule 103 (COMBINING -> intersect LEXP .)
    notnull         reduce using rule 103 (COMBINING -> intersect LEXP .)
    parc            reduce using rule 103 (COMBINING -> intersect LEXP .)
    then            reduce using rule 103 (COMBINING -> intersect LEXP .)
    where           reduce using rule 103 (COMBINING -> intersect LEXP .)
    group           reduce using rule 103 (COMBINING -> intersect LEXP .)
    having          reduce using rule 103 (COMBINING -> intersect LEXP .)
    order           reduce using rule 103 (COMBINING -> intersect LEXP .)
    end             reduce using rule 103 (COMBINING -> intersect LEXP .)
    else            reduce using rule 103 (COMBINING -> intersect LEXP .)
    when            reduce using rule 103 (COMBINING -> intersect LEXP .)
    constraint      reduce using rule 103 (COMBINING -> intersect LEXP .)
    default         reduce using rule 103 (COMBINING -> intersect LEXP .)
    primary         reduce using rule 103 (COMBINING -> intersect LEXP .)
    references      reduce using rule 103 (COMBINING -> intersect LEXP .)
    null            reduce using rule 103 (COMBINING -> intersect LEXP .)
    asc             reduce using rule 103 (COMBINING -> intersect LEXP .)
    desc            reduce using rule 103 (COMBINING -> intersect LEXP .)
    coma            shift and go to state 82

  ! coma            [ reduce using rule 103 (COMBINING -> intersect LEXP .) ]


state 232

    (104) COMBINING -> intersect all . LEXP
    (204) EXP -> all . para LEXP parc
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    para            shift and go to state 301
    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 302
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 233

    (105) COMBINING -> except LEXP .
    (124) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 105 (COMBINING -> except LEXP .)
    limit           reduce using rule 105 (COMBINING -> except LEXP .)
    offset          reduce using rule 105 (COMBINING -> except LEXP .)
    union           reduce using rule 105 (COMBINING -> except LEXP .)
    intersect       reduce using rule 105 (COMBINING -> except LEXP .)
    except          reduce using rule 105 (COMBINING -> except LEXP .)
    ptcoma          reduce using rule 105 (COMBINING -> except LEXP .)
    mas             reduce using rule 105 (COMBINING -> except LEXP .)
    menos           reduce using rule 105 (COMBINING -> except LEXP .)
    multiplicacion  reduce using rule 105 (COMBINING -> except LEXP .)
    division        reduce using rule 105 (COMBINING -> except LEXP .)
    modulo          reduce using rule 105 (COMBINING -> except LEXP .)
    elevado         reduce using rule 105 (COMBINING -> except LEXP .)
    and             reduce using rule 105 (COMBINING -> except LEXP .)
    or              reduce using rule 105 (COMBINING -> except LEXP .)
    mayor           reduce using rule 105 (COMBINING -> except LEXP .)
    menor           reduce using rule 105 (COMBINING -> except LEXP .)
    mayor_igual     reduce using rule 105 (COMBINING -> except LEXP .)
    menor_igual     reduce using rule 105 (COMBINING -> except LEXP .)
    igual           reduce using rule 105 (COMBINING -> except LEXP .)
    diferente1      reduce using rule 105 (COMBINING -> except LEXP .)
    diferente2      reduce using rule 105 (COMBINING -> except LEXP .)
    punto           reduce using rule 105 (COMBINING -> except LEXP .)
    as              reduce using rule 105 (COMBINING -> except LEXP .)
    cadenaString    reduce using rule 105 (COMBINING -> except LEXP .)
    id              reduce using rule 105 (COMBINING -> except LEXP .)
    cadena          reduce using rule 105 (COMBINING -> except LEXP .)
    between         reduce using rule 105 (COMBINING -> except LEXP .)
    in              reduce using rule 105 (COMBINING -> except LEXP .)
    not             reduce using rule 105 (COMBINING -> except LEXP .)
    is              reduce using rule 105 (COMBINING -> except LEXP .)
    isnull          reduce using rule 105 (COMBINING -> except LEXP .)
    notnull         reduce using rule 105 (COMBINING -> except LEXP .)
    parc            reduce using rule 105 (COMBINING -> except LEXP .)
    then            reduce using rule 105 (COMBINING -> except LEXP .)
    where           reduce using rule 105 (COMBINING -> except LEXP .)
    group           reduce using rule 105 (COMBINING -> except LEXP .)
    having          reduce using rule 105 (COMBINING -> except LEXP .)
    order           reduce using rule 105 (COMBINING -> except LEXP .)
    end             reduce using rule 105 (COMBINING -> except LEXP .)
    else            reduce using rule 105 (COMBINING -> except LEXP .)
    when            reduce using rule 105 (COMBINING -> except LEXP .)
    constraint      reduce using rule 105 (COMBINING -> except LEXP .)
    default         reduce using rule 105 (COMBINING -> except LEXP .)
    primary         reduce using rule 105 (COMBINING -> except LEXP .)
    references      reduce using rule 105 (COMBINING -> except LEXP .)
    null            reduce using rule 105 (COMBINING -> except LEXP .)
    asc             reduce using rule 105 (COMBINING -> except LEXP .)
    desc            reduce using rule 105 (COMBINING -> except LEXP .)
    coma            shift and go to state 82

  ! coma            [ reduce using rule 105 (COMBINING -> except LEXP .) ]


state 234

    (106) COMBINING -> except all . LEXP
    (204) EXP -> all . para LEXP parc
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    para            shift and go to state 301
    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 303
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 235

    (91) LIMIT -> limit int offset . int

    int             shift and go to state 304


state 236

    (93) LIMIT -> limit all offset . int

    int             shift and go to state 305


state 237

    (92) LIMIT -> offset int limit . int
    (94) LIMIT -> offset int limit . all

    int             shift and go to state 306
    all             shift and go to state 307


state 238

    (217) PREDICADOS -> EXP between symetric EXP .
    (163) EXP -> EXP . mas EXP
    (164) EXP -> EXP . menos EXP
    (165) EXP -> EXP . multiplicacion EXP
    (166) EXP -> EXP . division EXP
    (167) EXP -> EXP . modulo EXP
    (168) EXP -> EXP . elevado EXP
    (169) EXP -> EXP . and EXP
    (170) EXP -> EXP . or EXP
    (171) EXP -> EXP . mayor EXP
    (172) EXP -> EXP . menor EXP
    (173) EXP -> EXP . mayor_igual EXP
    (174) EXP -> EXP . menor_igual EXP
    (175) EXP -> EXP . igual EXP
    (176) EXP -> EXP . diferente1 EXP
    (177) EXP -> EXP . diferente2 EXP
    (178) EXP -> EXP . punto EXP
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (213) PREDICADOS -> EXP . between EXP
    (214) PREDICADOS -> EXP . in para LEXP parc
    (215) PREDICADOS -> EXP . not in para LEXP parc
    (216) PREDICADOS -> EXP . not between EXP
    (217) PREDICADOS -> EXP . between symetric EXP
    (218) PREDICADOS -> EXP . not between symetric EXP
    (219) PREDICADOS -> EXP . is distinct r_from EXP
    (220) PREDICADOS -> EXP . is not distinct r_from EXP
    (221) PREDICADOS -> EXP . is PNULL
    (222) PREDICADOS -> EXP . isnull
    (223) PREDICADOS -> EXP . notnull
    (224) PREDICADOS -> EXP . is true
    (225) PREDICADOS -> EXP . is not true
    (226) PREDICADOS -> EXP . is false
    (227) PREDICADOS -> EXP . is not false
    (228) PREDICADOS -> EXP . is unknown
    (229) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    coma            reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    limit           reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    offset          reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    union           reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    intersect       reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    except          reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    ptcoma          reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    mas             reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    menos           reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    multiplicacion  reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    division        reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    modulo          reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    elevado         reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    mayor           reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    menor           reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    mayor_igual     reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    menor_igual     reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    igual           reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    diferente1      reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    diferente2      reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    punto           reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    as              reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    cadenaString    reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    id              reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    cadena          reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    between         reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    in              reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    is              reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    isnull          reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    notnull         reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    parc            reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    then            reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    where           reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    group           reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    having          reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    order           reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    end             reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    else            reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    when            reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    constraint      reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    default         reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    primary         reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    references      reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    null            reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    asc             reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    desc            reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .)
    and             shift and go to state 91
    or              shift and go to state 92
    not             shift and go to state 107

  ! and             [ reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .) ]
  ! or              [ reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .) ]
  ! not             [ reduce using rule 217 (PREDICADOS -> EXP between symetric EXP .) ]
  ! mas             [ shift and go to state 85 ]
  ! menos           [ shift and go to state 86 ]
  ! multiplicacion  [ shift and go to state 87 ]
  ! division        [ shift and go to state 88 ]
  ! modulo          [ shift and go to state 89 ]
  ! elevado         [ shift and go to state 90 ]
  ! mayor           [ shift and go to state 93 ]
  ! menor           [ shift and go to state 94 ]
  ! mayor_igual     [ shift and go to state 95 ]
  ! menor_igual     [ shift and go to state 96 ]
  ! igual           [ shift and go to state 97 ]
  ! diferente1      [ shift and go to state 98 ]
  ! diferente2      [ shift and go to state 99 ]
  ! punto           [ shift and go to state 100 ]
  ! as              [ shift and go to state 101 ]
  ! cadenaString    [ shift and go to state 102 ]
  ! id              [ shift and go to state 103 ]
  ! cadena          [ shift and go to state 104 ]
  ! between         [ shift and go to state 105 ]
  ! in              [ shift and go to state 106 ]
  ! is              [ shift and go to state 108 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]


state 239

    (214) PREDICADOS -> EXP in para LEXP . parc
    (124) LEXP -> LEXP . coma EXP

    parc            shift and go to state 308
    coma            shift and go to state 82


state 240

    (215) PREDICADOS -> EXP not in para . LEXP parc
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 37
    LEXP                           shift and go to state 309
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 241

    (216) PREDICADOS -> EXP not between EXP .
    (163) EXP -> EXP . mas EXP
    (164) EXP -> EXP . menos EXP
    (165) EXP -> EXP . multiplicacion EXP
    (166) EXP -> EXP . division EXP
    (167) EXP -> EXP . modulo EXP
    (168) EXP -> EXP . elevado EXP
    (169) EXP -> EXP . and EXP
    (170) EXP -> EXP . or EXP
    (171) EXP -> EXP . mayor EXP
    (172) EXP -> EXP . menor EXP
    (173) EXP -> EXP . mayor_igual EXP
    (174) EXP -> EXP . menor_igual EXP
    (175) EXP -> EXP . igual EXP
    (176) EXP -> EXP . diferente1 EXP
    (177) EXP -> EXP . diferente2 EXP
    (178) EXP -> EXP . punto EXP
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (213) PREDICADOS -> EXP . between EXP
    (214) PREDICADOS -> EXP . in para LEXP parc
    (215) PREDICADOS -> EXP . not in para LEXP parc
    (216) PREDICADOS -> EXP . not between EXP
    (217) PREDICADOS -> EXP . between symetric EXP
    (218) PREDICADOS -> EXP . not between symetric EXP
    (219) PREDICADOS -> EXP . is distinct r_from EXP
    (220) PREDICADOS -> EXP . is not distinct r_from EXP
    (221) PREDICADOS -> EXP . is PNULL
    (222) PREDICADOS -> EXP . isnull
    (223) PREDICADOS -> EXP . notnull
    (224) PREDICADOS -> EXP . is true
    (225) PREDICADOS -> EXP . is not true
    (226) PREDICADOS -> EXP . is false
    (227) PREDICADOS -> EXP . is not false
    (228) PREDICADOS -> EXP . is unknown
    (229) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    coma            reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    limit           reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    offset          reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    union           reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    intersect       reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    except          reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    ptcoma          reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    mas             reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    menos           reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    multiplicacion  reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    division        reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    modulo          reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    elevado         reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    mayor           reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    menor           reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    mayor_igual     reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    menor_igual     reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    igual           reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    diferente1      reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    diferente2      reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    punto           reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    as              reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    cadenaString    reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    id              reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    cadena          reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    between         reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    in              reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    is              reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    isnull          reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    notnull         reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    parc            reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    then            reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    where           reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    group           reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    having          reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    order           reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    end             reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    else            reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    when            reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    constraint      reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    default         reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    primary         reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    references      reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    null            reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    asc             reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    desc            reduce using rule 216 (PREDICADOS -> EXP not between EXP .)
    and             shift and go to state 91
    or              shift and go to state 92
    not             shift and go to state 107

  ! and             [ reduce using rule 216 (PREDICADOS -> EXP not between EXP .) ]
  ! or              [ reduce using rule 216 (PREDICADOS -> EXP not between EXP .) ]
  ! not             [ reduce using rule 216 (PREDICADOS -> EXP not between EXP .) ]
  ! mas             [ shift and go to state 85 ]
  ! menos           [ shift and go to state 86 ]
  ! multiplicacion  [ shift and go to state 87 ]
  ! division        [ shift and go to state 88 ]
  ! modulo          [ shift and go to state 89 ]
  ! elevado         [ shift and go to state 90 ]
  ! mayor           [ shift and go to state 93 ]
  ! menor           [ shift and go to state 94 ]
  ! mayor_igual     [ shift and go to state 95 ]
  ! menor_igual     [ shift and go to state 96 ]
  ! igual           [ shift and go to state 97 ]
  ! diferente1      [ shift and go to state 98 ]
  ! diferente2      [ shift and go to state 99 ]
  ! punto           [ shift and go to state 100 ]
  ! as              [ shift and go to state 101 ]
  ! cadenaString    [ shift and go to state 102 ]
  ! id              [ shift and go to state 103 ]
  ! cadena          [ shift and go to state 104 ]
  ! between         [ shift and go to state 105 ]
  ! in              [ shift and go to state 106 ]
  ! is              [ shift and go to state 108 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]


state 242

    (218) PREDICADOS -> EXP not between symetric . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 310
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 243

    (219) PREDICADOS -> EXP is distinct r_from . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 311
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 244

    (220) PREDICADOS -> EXP is not distinct . r_from EXP

    r_from          shift and go to state 312


state 245

    (225) PREDICADOS -> EXP is not true .

    r_from          reduce using rule 225 (PREDICADOS -> EXP is not true .)
    coma            reduce using rule 225 (PREDICADOS -> EXP is not true .)
    limit           reduce using rule 225 (PREDICADOS -> EXP is not true .)
    offset          reduce using rule 225 (PREDICADOS -> EXP is not true .)
    union           reduce using rule 225 (PREDICADOS -> EXP is not true .)
    intersect       reduce using rule 225 (PREDICADOS -> EXP is not true .)
    except          reduce using rule 225 (PREDICADOS -> EXP is not true .)
    ptcoma          reduce using rule 225 (PREDICADOS -> EXP is not true .)
    mas             reduce using rule 225 (PREDICADOS -> EXP is not true .)
    menos           reduce using rule 225 (PREDICADOS -> EXP is not true .)
    multiplicacion  reduce using rule 225 (PREDICADOS -> EXP is not true .)
    division        reduce using rule 225 (PREDICADOS -> EXP is not true .)
    modulo          reduce using rule 225 (PREDICADOS -> EXP is not true .)
    elevado         reduce using rule 225 (PREDICADOS -> EXP is not true .)
    and             reduce using rule 225 (PREDICADOS -> EXP is not true .)
    or              reduce using rule 225 (PREDICADOS -> EXP is not true .)
    mayor           reduce using rule 225 (PREDICADOS -> EXP is not true .)
    menor           reduce using rule 225 (PREDICADOS -> EXP is not true .)
    mayor_igual     reduce using rule 225 (PREDICADOS -> EXP is not true .)
    menor_igual     reduce using rule 225 (PREDICADOS -> EXP is not true .)
    igual           reduce using rule 225 (PREDICADOS -> EXP is not true .)
    diferente1      reduce using rule 225 (PREDICADOS -> EXP is not true .)
    diferente2      reduce using rule 225 (PREDICADOS -> EXP is not true .)
    punto           reduce using rule 225 (PREDICADOS -> EXP is not true .)
    as              reduce using rule 225 (PREDICADOS -> EXP is not true .)
    cadenaString    reduce using rule 225 (PREDICADOS -> EXP is not true .)
    id              reduce using rule 225 (PREDICADOS -> EXP is not true .)
    cadena          reduce using rule 225 (PREDICADOS -> EXP is not true .)
    between         reduce using rule 225 (PREDICADOS -> EXP is not true .)
    in              reduce using rule 225 (PREDICADOS -> EXP is not true .)
    not             reduce using rule 225 (PREDICADOS -> EXP is not true .)
    is              reduce using rule 225 (PREDICADOS -> EXP is not true .)
    isnull          reduce using rule 225 (PREDICADOS -> EXP is not true .)
    notnull         reduce using rule 225 (PREDICADOS -> EXP is not true .)
    parc            reduce using rule 225 (PREDICADOS -> EXP is not true .)
    then            reduce using rule 225 (PREDICADOS -> EXP is not true .)
    where           reduce using rule 225 (PREDICADOS -> EXP is not true .)
    group           reduce using rule 225 (PREDICADOS -> EXP is not true .)
    having          reduce using rule 225 (PREDICADOS -> EXP is not true .)
    order           reduce using rule 225 (PREDICADOS -> EXP is not true .)
    end             reduce using rule 225 (PREDICADOS -> EXP is not true .)
    else            reduce using rule 225 (PREDICADOS -> EXP is not true .)
    when            reduce using rule 225 (PREDICADOS -> EXP is not true .)
    constraint      reduce using rule 225 (PREDICADOS -> EXP is not true .)
    default         reduce using rule 225 (PREDICADOS -> EXP is not true .)
    primary         reduce using rule 225 (PREDICADOS -> EXP is not true .)
    references      reduce using rule 225 (PREDICADOS -> EXP is not true .)
    null            reduce using rule 225 (PREDICADOS -> EXP is not true .)
    asc             reduce using rule 225 (PREDICADOS -> EXP is not true .)
    desc            reduce using rule 225 (PREDICADOS -> EXP is not true .)


state 246

    (227) PREDICADOS -> EXP is not false .

    r_from          reduce using rule 227 (PREDICADOS -> EXP is not false .)
    coma            reduce using rule 227 (PREDICADOS -> EXP is not false .)
    limit           reduce using rule 227 (PREDICADOS -> EXP is not false .)
    offset          reduce using rule 227 (PREDICADOS -> EXP is not false .)
    union           reduce using rule 227 (PREDICADOS -> EXP is not false .)
    intersect       reduce using rule 227 (PREDICADOS -> EXP is not false .)
    except          reduce using rule 227 (PREDICADOS -> EXP is not false .)
    ptcoma          reduce using rule 227 (PREDICADOS -> EXP is not false .)
    mas             reduce using rule 227 (PREDICADOS -> EXP is not false .)
    menos           reduce using rule 227 (PREDICADOS -> EXP is not false .)
    multiplicacion  reduce using rule 227 (PREDICADOS -> EXP is not false .)
    division        reduce using rule 227 (PREDICADOS -> EXP is not false .)
    modulo          reduce using rule 227 (PREDICADOS -> EXP is not false .)
    elevado         reduce using rule 227 (PREDICADOS -> EXP is not false .)
    and             reduce using rule 227 (PREDICADOS -> EXP is not false .)
    or              reduce using rule 227 (PREDICADOS -> EXP is not false .)
    mayor           reduce using rule 227 (PREDICADOS -> EXP is not false .)
    menor           reduce using rule 227 (PREDICADOS -> EXP is not false .)
    mayor_igual     reduce using rule 227 (PREDICADOS -> EXP is not false .)
    menor_igual     reduce using rule 227 (PREDICADOS -> EXP is not false .)
    igual           reduce using rule 227 (PREDICADOS -> EXP is not false .)
    diferente1      reduce using rule 227 (PREDICADOS -> EXP is not false .)
    diferente2      reduce using rule 227 (PREDICADOS -> EXP is not false .)
    punto           reduce using rule 227 (PREDICADOS -> EXP is not false .)
    as              reduce using rule 227 (PREDICADOS -> EXP is not false .)
    cadenaString    reduce using rule 227 (PREDICADOS -> EXP is not false .)
    id              reduce using rule 227 (PREDICADOS -> EXP is not false .)
    cadena          reduce using rule 227 (PREDICADOS -> EXP is not false .)
    between         reduce using rule 227 (PREDICADOS -> EXP is not false .)
    in              reduce using rule 227 (PREDICADOS -> EXP is not false .)
    not             reduce using rule 227 (PREDICADOS -> EXP is not false .)
    is              reduce using rule 227 (PREDICADOS -> EXP is not false .)
    isnull          reduce using rule 227 (PREDICADOS -> EXP is not false .)
    notnull         reduce using rule 227 (PREDICADOS -> EXP is not false .)
    parc            reduce using rule 227 (PREDICADOS -> EXP is not false .)
    then            reduce using rule 227 (PREDICADOS -> EXP is not false .)
    where           reduce using rule 227 (PREDICADOS -> EXP is not false .)
    group           reduce using rule 227 (PREDICADOS -> EXP is not false .)
    having          reduce using rule 227 (PREDICADOS -> EXP is not false .)
    order           reduce using rule 227 (PREDICADOS -> EXP is not false .)
    end             reduce using rule 227 (PREDICADOS -> EXP is not false .)
    else            reduce using rule 227 (PREDICADOS -> EXP is not false .)
    when            reduce using rule 227 (PREDICADOS -> EXP is not false .)
    constraint      reduce using rule 227 (PREDICADOS -> EXP is not false .)
    default         reduce using rule 227 (PREDICADOS -> EXP is not false .)
    primary         reduce using rule 227 (PREDICADOS -> EXP is not false .)
    references      reduce using rule 227 (PREDICADOS -> EXP is not false .)
    null            reduce using rule 227 (PREDICADOS -> EXP is not false .)
    asc             reduce using rule 227 (PREDICADOS -> EXP is not false .)
    desc            reduce using rule 227 (PREDICADOS -> EXP is not false .)


state 247

    (229) PREDICADOS -> EXP is not unknown .

    r_from          reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    coma            reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    limit           reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    offset          reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    union           reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    intersect       reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    except          reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    ptcoma          reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    mas             reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    menos           reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    multiplicacion  reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    division        reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    modulo          reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    elevado         reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    and             reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    or              reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    mayor           reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    menor           reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    mayor_igual     reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    menor_igual     reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    igual           reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    diferente1      reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    diferente2      reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    punto           reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    as              reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    cadenaString    reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    id              reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    cadena          reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    between         reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    in              reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    not             reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    is              reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    isnull          reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    notnull         reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    parc            reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    then            reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    where           reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    group           reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    having          reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    order           reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    end             reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    else            reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    when            reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    constraint      reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    default         reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    primary         reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    references      reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    null            reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    asc             reduce using rule 229 (PREDICADOS -> EXP is not unknown .)
    desc            reduce using rule 229 (PREDICADOS -> EXP is not unknown .)


state 248

    (77) PNULL -> not null .

    r_from          reduce using rule 77 (PNULL -> not null .)
    coma            reduce using rule 77 (PNULL -> not null .)
    limit           reduce using rule 77 (PNULL -> not null .)
    offset          reduce using rule 77 (PNULL -> not null .)
    union           reduce using rule 77 (PNULL -> not null .)
    intersect       reduce using rule 77 (PNULL -> not null .)
    except          reduce using rule 77 (PNULL -> not null .)
    ptcoma          reduce using rule 77 (PNULL -> not null .)
    mas             reduce using rule 77 (PNULL -> not null .)
    menos           reduce using rule 77 (PNULL -> not null .)
    multiplicacion  reduce using rule 77 (PNULL -> not null .)
    division        reduce using rule 77 (PNULL -> not null .)
    modulo          reduce using rule 77 (PNULL -> not null .)
    elevado         reduce using rule 77 (PNULL -> not null .)
    and             reduce using rule 77 (PNULL -> not null .)
    or              reduce using rule 77 (PNULL -> not null .)
    mayor           reduce using rule 77 (PNULL -> not null .)
    menor           reduce using rule 77 (PNULL -> not null .)
    mayor_igual     reduce using rule 77 (PNULL -> not null .)
    menor_igual     reduce using rule 77 (PNULL -> not null .)
    igual           reduce using rule 77 (PNULL -> not null .)
    diferente1      reduce using rule 77 (PNULL -> not null .)
    diferente2      reduce using rule 77 (PNULL -> not null .)
    punto           reduce using rule 77 (PNULL -> not null .)
    as              reduce using rule 77 (PNULL -> not null .)
    cadenaString    reduce using rule 77 (PNULL -> not null .)
    id              reduce using rule 77 (PNULL -> not null .)
    cadena          reduce using rule 77 (PNULL -> not null .)
    between         reduce using rule 77 (PNULL -> not null .)
    in              reduce using rule 77 (PNULL -> not null .)
    not             reduce using rule 77 (PNULL -> not null .)
    is              reduce using rule 77 (PNULL -> not null .)
    isnull          reduce using rule 77 (PNULL -> not null .)
    notnull         reduce using rule 77 (PNULL -> not null .)
    parc            reduce using rule 77 (PNULL -> not null .)
    then            reduce using rule 77 (PNULL -> not null .)
    where           reduce using rule 77 (PNULL -> not null .)
    group           reduce using rule 77 (PNULL -> not null .)
    having          reduce using rule 77 (PNULL -> not null .)
    order           reduce using rule 77 (PNULL -> not null .)
    end             reduce using rule 77 (PNULL -> not null .)
    else            reduce using rule 77 (PNULL -> not null .)
    when            reduce using rule 77 (PNULL -> not null .)
    constraint      reduce using rule 77 (PNULL -> not null .)
    default         reduce using rule 77 (PNULL -> not null .)
    primary         reduce using rule 77 (PNULL -> not null .)
    references      reduce using rule 77 (PNULL -> not null .)
    null            reduce using rule 77 (PNULL -> not null .)
    asc             reduce using rule 77 (PNULL -> not null .)
    desc            reduce using rule 77 (PNULL -> not null .)


state 249

    (202) EXP -> cadena not like cadena .

    r_from          reduce using rule 202 (EXP -> cadena not like cadena .)
    coma            reduce using rule 202 (EXP -> cadena not like cadena .)
    limit           reduce using rule 202 (EXP -> cadena not like cadena .)
    offset          reduce using rule 202 (EXP -> cadena not like cadena .)
    union           reduce using rule 202 (EXP -> cadena not like cadena .)
    intersect       reduce using rule 202 (EXP -> cadena not like cadena .)
    except          reduce using rule 202 (EXP -> cadena not like cadena .)
    ptcoma          reduce using rule 202 (EXP -> cadena not like cadena .)
    mas             reduce using rule 202 (EXP -> cadena not like cadena .)
    menos           reduce using rule 202 (EXP -> cadena not like cadena .)
    multiplicacion  reduce using rule 202 (EXP -> cadena not like cadena .)
    division        reduce using rule 202 (EXP -> cadena not like cadena .)
    modulo          reduce using rule 202 (EXP -> cadena not like cadena .)
    elevado         reduce using rule 202 (EXP -> cadena not like cadena .)
    and             reduce using rule 202 (EXP -> cadena not like cadena .)
    or              reduce using rule 202 (EXP -> cadena not like cadena .)
    mayor           reduce using rule 202 (EXP -> cadena not like cadena .)
    menor           reduce using rule 202 (EXP -> cadena not like cadena .)
    mayor_igual     reduce using rule 202 (EXP -> cadena not like cadena .)
    menor_igual     reduce using rule 202 (EXP -> cadena not like cadena .)
    igual           reduce using rule 202 (EXP -> cadena not like cadena .)
    diferente1      reduce using rule 202 (EXP -> cadena not like cadena .)
    diferente2      reduce using rule 202 (EXP -> cadena not like cadena .)
    punto           reduce using rule 202 (EXP -> cadena not like cadena .)
    as              reduce using rule 202 (EXP -> cadena not like cadena .)
    cadenaString    reduce using rule 202 (EXP -> cadena not like cadena .)
    id              reduce using rule 202 (EXP -> cadena not like cadena .)
    cadena          reduce using rule 202 (EXP -> cadena not like cadena .)
    between         reduce using rule 202 (EXP -> cadena not like cadena .)
    in              reduce using rule 202 (EXP -> cadena not like cadena .)
    not             reduce using rule 202 (EXP -> cadena not like cadena .)
    is              reduce using rule 202 (EXP -> cadena not like cadena .)
    isnull          reduce using rule 202 (EXP -> cadena not like cadena .)
    notnull         reduce using rule 202 (EXP -> cadena not like cadena .)
    parc            reduce using rule 202 (EXP -> cadena not like cadena .)
    then            reduce using rule 202 (EXP -> cadena not like cadena .)
    where           reduce using rule 202 (EXP -> cadena not like cadena .)
    group           reduce using rule 202 (EXP -> cadena not like cadena .)
    having          reduce using rule 202 (EXP -> cadena not like cadena .)
    order           reduce using rule 202 (EXP -> cadena not like cadena .)
    end             reduce using rule 202 (EXP -> cadena not like cadena .)
    else            reduce using rule 202 (EXP -> cadena not like cadena .)
    when            reduce using rule 202 (EXP -> cadena not like cadena .)
    constraint      reduce using rule 202 (EXP -> cadena not like cadena .)
    default         reduce using rule 202 (EXP -> cadena not like cadena .)
    primary         reduce using rule 202 (EXP -> cadena not like cadena .)
    references      reduce using rule 202 (EXP -> cadena not like cadena .)
    null            reduce using rule 202 (EXP -> cadena not like cadena .)
    asc             reduce using rule 202 (EXP -> cadena not like cadena .)
    desc            reduce using rule 202 (EXP -> cadena not like cadena .)


state 250

    (194) EXP -> id para LEXP parc .

    r_from          reduce using rule 194 (EXP -> id para LEXP parc .)
    coma            reduce using rule 194 (EXP -> id para LEXP parc .)
    limit           reduce using rule 194 (EXP -> id para LEXP parc .)
    offset          reduce using rule 194 (EXP -> id para LEXP parc .)
    union           reduce using rule 194 (EXP -> id para LEXP parc .)
    intersect       reduce using rule 194 (EXP -> id para LEXP parc .)
    except          reduce using rule 194 (EXP -> id para LEXP parc .)
    ptcoma          reduce using rule 194 (EXP -> id para LEXP parc .)
    mas             reduce using rule 194 (EXP -> id para LEXP parc .)
    menos           reduce using rule 194 (EXP -> id para LEXP parc .)
    multiplicacion  reduce using rule 194 (EXP -> id para LEXP parc .)
    division        reduce using rule 194 (EXP -> id para LEXP parc .)
    modulo          reduce using rule 194 (EXP -> id para LEXP parc .)
    elevado         reduce using rule 194 (EXP -> id para LEXP parc .)
    and             reduce using rule 194 (EXP -> id para LEXP parc .)
    or              reduce using rule 194 (EXP -> id para LEXP parc .)
    mayor           reduce using rule 194 (EXP -> id para LEXP parc .)
    menor           reduce using rule 194 (EXP -> id para LEXP parc .)
    mayor_igual     reduce using rule 194 (EXP -> id para LEXP parc .)
    menor_igual     reduce using rule 194 (EXP -> id para LEXP parc .)
    igual           reduce using rule 194 (EXP -> id para LEXP parc .)
    diferente1      reduce using rule 194 (EXP -> id para LEXP parc .)
    diferente2      reduce using rule 194 (EXP -> id para LEXP parc .)
    punto           reduce using rule 194 (EXP -> id para LEXP parc .)
    as              reduce using rule 194 (EXP -> id para LEXP parc .)
    cadenaString    reduce using rule 194 (EXP -> id para LEXP parc .)
    id              reduce using rule 194 (EXP -> id para LEXP parc .)
    cadena          reduce using rule 194 (EXP -> id para LEXP parc .)
    between         reduce using rule 194 (EXP -> id para LEXP parc .)
    in              reduce using rule 194 (EXP -> id para LEXP parc .)
    not             reduce using rule 194 (EXP -> id para LEXP parc .)
    is              reduce using rule 194 (EXP -> id para LEXP parc .)
    isnull          reduce using rule 194 (EXP -> id para LEXP parc .)
    notnull         reduce using rule 194 (EXP -> id para LEXP parc .)
    parc            reduce using rule 194 (EXP -> id para LEXP parc .)
    then            reduce using rule 194 (EXP -> id para LEXP parc .)
    where           reduce using rule 194 (EXP -> id para LEXP parc .)
    group           reduce using rule 194 (EXP -> id para LEXP parc .)
    having          reduce using rule 194 (EXP -> id para LEXP parc .)
    order           reduce using rule 194 (EXP -> id para LEXP parc .)
    end             reduce using rule 194 (EXP -> id para LEXP parc .)
    else            reduce using rule 194 (EXP -> id para LEXP parc .)
    when            reduce using rule 194 (EXP -> id para LEXP parc .)
    constraint      reduce using rule 194 (EXP -> id para LEXP parc .)
    default         reduce using rule 194 (EXP -> id para LEXP parc .)
    primary         reduce using rule 194 (EXP -> id para LEXP parc .)
    references      reduce using rule 194 (EXP -> id para LEXP parc .)
    null            reduce using rule 194 (EXP -> id para LEXP parc .)
    asc             reduce using rule 194 (EXP -> id para LEXP parc .)
    desc            reduce using rule 194 (EXP -> id para LEXP parc .)


state 251

    (195) EXP -> extract para FIELDS r_from . timestamp cadena parc

    timestamp       shift and go to state 313


state 252

    (203) EXP -> any para LEXP parc .

    r_from          reduce using rule 203 (EXP -> any para LEXP parc .)
    coma            reduce using rule 203 (EXP -> any para LEXP parc .)
    limit           reduce using rule 203 (EXP -> any para LEXP parc .)
    offset          reduce using rule 203 (EXP -> any para LEXP parc .)
    union           reduce using rule 203 (EXP -> any para LEXP parc .)
    intersect       reduce using rule 203 (EXP -> any para LEXP parc .)
    except          reduce using rule 203 (EXP -> any para LEXP parc .)
    ptcoma          reduce using rule 203 (EXP -> any para LEXP parc .)
    mas             reduce using rule 203 (EXP -> any para LEXP parc .)
    menos           reduce using rule 203 (EXP -> any para LEXP parc .)
    multiplicacion  reduce using rule 203 (EXP -> any para LEXP parc .)
    division        reduce using rule 203 (EXP -> any para LEXP parc .)
    modulo          reduce using rule 203 (EXP -> any para LEXP parc .)
    elevado         reduce using rule 203 (EXP -> any para LEXP parc .)
    and             reduce using rule 203 (EXP -> any para LEXP parc .)
    or              reduce using rule 203 (EXP -> any para LEXP parc .)
    mayor           reduce using rule 203 (EXP -> any para LEXP parc .)
    menor           reduce using rule 203 (EXP -> any para LEXP parc .)
    mayor_igual     reduce using rule 203 (EXP -> any para LEXP parc .)
    menor_igual     reduce using rule 203 (EXP -> any para LEXP parc .)
    igual           reduce using rule 203 (EXP -> any para LEXP parc .)
    diferente1      reduce using rule 203 (EXP -> any para LEXP parc .)
    diferente2      reduce using rule 203 (EXP -> any para LEXP parc .)
    punto           reduce using rule 203 (EXP -> any para LEXP parc .)
    as              reduce using rule 203 (EXP -> any para LEXP parc .)
    cadenaString    reduce using rule 203 (EXP -> any para LEXP parc .)
    id              reduce using rule 203 (EXP -> any para LEXP parc .)
    cadena          reduce using rule 203 (EXP -> any para LEXP parc .)
    between         reduce using rule 203 (EXP -> any para LEXP parc .)
    in              reduce using rule 203 (EXP -> any para LEXP parc .)
    not             reduce using rule 203 (EXP -> any para LEXP parc .)
    is              reduce using rule 203 (EXP -> any para LEXP parc .)
    isnull          reduce using rule 203 (EXP -> any para LEXP parc .)
    notnull         reduce using rule 203 (EXP -> any para LEXP parc .)
    parc            reduce using rule 203 (EXP -> any para LEXP parc .)
    then            reduce using rule 203 (EXP -> any para LEXP parc .)
    where           reduce using rule 203 (EXP -> any para LEXP parc .)
    group           reduce using rule 203 (EXP -> any para LEXP parc .)
    having          reduce using rule 203 (EXP -> any para LEXP parc .)
    order           reduce using rule 203 (EXP -> any para LEXP parc .)
    end             reduce using rule 203 (EXP -> any para LEXP parc .)
    else            reduce using rule 203 (EXP -> any para LEXP parc .)
    when            reduce using rule 203 (EXP -> any para LEXP parc .)
    constraint      reduce using rule 203 (EXP -> any para LEXP parc .)
    default         reduce using rule 203 (EXP -> any para LEXP parc .)
    primary         reduce using rule 203 (EXP -> any para LEXP parc .)
    references      reduce using rule 203 (EXP -> any para LEXP parc .)
    null            reduce using rule 203 (EXP -> any para LEXP parc .)
    asc             reduce using rule 203 (EXP -> any para LEXP parc .)
    desc            reduce using rule 203 (EXP -> any para LEXP parc .)


state 253

    (204) EXP -> all para LEXP parc .

    r_from          reduce using rule 204 (EXP -> all para LEXP parc .)
    coma            reduce using rule 204 (EXP -> all para LEXP parc .)
    limit           reduce using rule 204 (EXP -> all para LEXP parc .)
    offset          reduce using rule 204 (EXP -> all para LEXP parc .)
    union           reduce using rule 204 (EXP -> all para LEXP parc .)
    intersect       reduce using rule 204 (EXP -> all para LEXP parc .)
    except          reduce using rule 204 (EXP -> all para LEXP parc .)
    ptcoma          reduce using rule 204 (EXP -> all para LEXP parc .)
    mas             reduce using rule 204 (EXP -> all para LEXP parc .)
    menos           reduce using rule 204 (EXP -> all para LEXP parc .)
    multiplicacion  reduce using rule 204 (EXP -> all para LEXP parc .)
    division        reduce using rule 204 (EXP -> all para LEXP parc .)
    modulo          reduce using rule 204 (EXP -> all para LEXP parc .)
    elevado         reduce using rule 204 (EXP -> all para LEXP parc .)
    and             reduce using rule 204 (EXP -> all para LEXP parc .)
    or              reduce using rule 204 (EXP -> all para LEXP parc .)
    mayor           reduce using rule 204 (EXP -> all para LEXP parc .)
    menor           reduce using rule 204 (EXP -> all para LEXP parc .)
    mayor_igual     reduce using rule 204 (EXP -> all para LEXP parc .)
    menor_igual     reduce using rule 204 (EXP -> all para LEXP parc .)
    igual           reduce using rule 204 (EXP -> all para LEXP parc .)
    diferente1      reduce using rule 204 (EXP -> all para LEXP parc .)
    diferente2      reduce using rule 204 (EXP -> all para LEXP parc .)
    punto           reduce using rule 204 (EXP -> all para LEXP parc .)
    as              reduce using rule 204 (EXP -> all para LEXP parc .)
    cadenaString    reduce using rule 204 (EXP -> all para LEXP parc .)
    id              reduce using rule 204 (EXP -> all para LEXP parc .)
    cadena          reduce using rule 204 (EXP -> all para LEXP parc .)
    between         reduce using rule 204 (EXP -> all para LEXP parc .)
    in              reduce using rule 204 (EXP -> all para LEXP parc .)
    not             reduce using rule 204 (EXP -> all para LEXP parc .)
    is              reduce using rule 204 (EXP -> all para LEXP parc .)
    isnull          reduce using rule 204 (EXP -> all para LEXP parc .)
    notnull         reduce using rule 204 (EXP -> all para LEXP parc .)
    parc            reduce using rule 204 (EXP -> all para LEXP parc .)
    then            reduce using rule 204 (EXP -> all para LEXP parc .)
    where           reduce using rule 204 (EXP -> all para LEXP parc .)
    group           reduce using rule 204 (EXP -> all para LEXP parc .)
    having          reduce using rule 204 (EXP -> all para LEXP parc .)
    order           reduce using rule 204 (EXP -> all para LEXP parc .)
    end             reduce using rule 204 (EXP -> all para LEXP parc .)
    else            reduce using rule 204 (EXP -> all para LEXP parc .)
    when            reduce using rule 204 (EXP -> all para LEXP parc .)
    constraint      reduce using rule 204 (EXP -> all para LEXP parc .)
    default         reduce using rule 204 (EXP -> all para LEXP parc .)
    primary         reduce using rule 204 (EXP -> all para LEXP parc .)
    references      reduce using rule 204 (EXP -> all para LEXP parc .)
    null            reduce using rule 204 (EXP -> all para LEXP parc .)
    asc             reduce using rule 204 (EXP -> all para LEXP parc .)
    desc            reduce using rule 204 (EXP -> all para LEXP parc .)


state 254

    (205) EXP -> some para LEXP parc .

    r_from          reduce using rule 205 (EXP -> some para LEXP parc .)
    coma            reduce using rule 205 (EXP -> some para LEXP parc .)
    limit           reduce using rule 205 (EXP -> some para LEXP parc .)
    offset          reduce using rule 205 (EXP -> some para LEXP parc .)
    union           reduce using rule 205 (EXP -> some para LEXP parc .)
    intersect       reduce using rule 205 (EXP -> some para LEXP parc .)
    except          reduce using rule 205 (EXP -> some para LEXP parc .)
    ptcoma          reduce using rule 205 (EXP -> some para LEXP parc .)
    mas             reduce using rule 205 (EXP -> some para LEXP parc .)
    menos           reduce using rule 205 (EXP -> some para LEXP parc .)
    multiplicacion  reduce using rule 205 (EXP -> some para LEXP parc .)
    division        reduce using rule 205 (EXP -> some para LEXP parc .)
    modulo          reduce using rule 205 (EXP -> some para LEXP parc .)
    elevado         reduce using rule 205 (EXP -> some para LEXP parc .)
    and             reduce using rule 205 (EXP -> some para LEXP parc .)
    or              reduce using rule 205 (EXP -> some para LEXP parc .)
    mayor           reduce using rule 205 (EXP -> some para LEXP parc .)
    menor           reduce using rule 205 (EXP -> some para LEXP parc .)
    mayor_igual     reduce using rule 205 (EXP -> some para LEXP parc .)
    menor_igual     reduce using rule 205 (EXP -> some para LEXP parc .)
    igual           reduce using rule 205 (EXP -> some para LEXP parc .)
    diferente1      reduce using rule 205 (EXP -> some para LEXP parc .)
    diferente2      reduce using rule 205 (EXP -> some para LEXP parc .)
    punto           reduce using rule 205 (EXP -> some para LEXP parc .)
    as              reduce using rule 205 (EXP -> some para LEXP parc .)
    cadenaString    reduce using rule 205 (EXP -> some para LEXP parc .)
    id              reduce using rule 205 (EXP -> some para LEXP parc .)
    cadena          reduce using rule 205 (EXP -> some para LEXP parc .)
    between         reduce using rule 205 (EXP -> some para LEXP parc .)
    in              reduce using rule 205 (EXP -> some para LEXP parc .)
    not             reduce using rule 205 (EXP -> some para LEXP parc .)
    is              reduce using rule 205 (EXP -> some para LEXP parc .)
    isnull          reduce using rule 205 (EXP -> some para LEXP parc .)
    notnull         reduce using rule 205 (EXP -> some para LEXP parc .)
    parc            reduce using rule 205 (EXP -> some para LEXP parc .)
    then            reduce using rule 205 (EXP -> some para LEXP parc .)
    where           reduce using rule 205 (EXP -> some para LEXP parc .)
    group           reduce using rule 205 (EXP -> some para LEXP parc .)
    having          reduce using rule 205 (EXP -> some para LEXP parc .)
    order           reduce using rule 205 (EXP -> some para LEXP parc .)
    end             reduce using rule 205 (EXP -> some para LEXP parc .)
    else            reduce using rule 205 (EXP -> some para LEXP parc .)
    when            reduce using rule 205 (EXP -> some para LEXP parc .)
    constraint      reduce using rule 205 (EXP -> some para LEXP parc .)
    default         reduce using rule 205 (EXP -> some para LEXP parc .)
    primary         reduce using rule 205 (EXP -> some para LEXP parc .)
    references      reduce using rule 205 (EXP -> some para LEXP parc .)
    null            reduce using rule 205 (EXP -> some para LEXP parc .)
    asc             reduce using rule 205 (EXP -> some para LEXP parc .)
    desc            reduce using rule 205 (EXP -> some para LEXP parc .)


state 255

    (67) COLDEF -> id . TIPO
    (68) COLDEF -> id . TIPO LOPCOLUMN
    (126) TIPO -> . smallint
    (127) TIPO -> . integer
    (128) TIPO -> . bigint
    (129) TIPO -> . decimal para LEXP parc
    (130) TIPO -> . numeric para LEXP parc
    (131) TIPO -> . real
    (132) TIPO -> . double precision
    (133) TIPO -> . money
    (134) TIPO -> . character varying para int parc
    (135) TIPO -> . varchar para int parc
    (136) TIPO -> . character para int parc
    (137) TIPO -> . char para int parc
    (138) TIPO -> . text
    (139) TIPO -> . timestamp
    (140) TIPO -> . timestamp without time zone
    (141) TIPO -> . timestamp para int parc without time zone
    (142) TIPO -> . timestamp with time zone
    (143) TIPO -> . timestamp para int parc with time zone
    (144) TIPO -> . timestamp para int parc
    (145) TIPO -> . date
    (146) TIPO -> . time
    (147) TIPO -> . time without time zone
    (148) TIPO -> . time para int parc without time zone
    (149) TIPO -> . time with time zone
    (150) TIPO -> . time para int parc with time zone
    (151) TIPO -> . time para int parc
    (152) TIPO -> . interval
    (153) TIPO -> . interval para int parc
    (154) TIPO -> . interval cadena
    (155) TIPO -> . interval para int parc cadena
    (156) TIPO -> . boolean

    smallint        shift and go to state 315
    integer         shift and go to state 316
    bigint          shift and go to state 317
    decimal         shift and go to state 318
    numeric         shift and go to state 319
    real            shift and go to state 320
    double          shift and go to state 321
    money           shift and go to state 322
    character       shift and go to state 323
    varchar         shift and go to state 324
    char            shift and go to state 325
    text            shift and go to state 326
    timestamp       shift and go to state 327
    date            shift and go to state 329
    time            shift and go to state 328
    interval        shift and go to state 330
    boolean         shift and go to state 331

    TIPO                           shift and go to state 314

state 256

    (61) CREATETABLE -> create table id para LDEF . parc ptcoma
    (62) CREATETABLE -> create table id para LDEF . parc HERENCIA ptcoma
    (63) LDEF -> LDEF . coma COLDEF

    parc            shift and go to state 332
    coma            shift and go to state 333


state 257

    (64) LDEF -> COLDEF .

    parc            reduce using rule 64 (LDEF -> COLDEF .)
    coma            reduce using rule 64 (LDEF -> COLDEF .)


state 258

    (65) COLDEF -> OPCONST .

    parc            reduce using rule 65 (COLDEF -> OPCONST .)
    coma            reduce using rule 65 (COLDEF -> OPCONST .)


state 259

    (66) COLDEF -> constraint . id OPCONST

    id              shift and go to state 334


state 260

    (79) OPCONST -> primary . key para LEXP parc

    key             shift and go to state 335


state 261

    (80) OPCONST -> foreign . key para LEXP parc references table para LEXP parc

    key             shift and go to state 336


state 262

    (81) OPCONST -> unique . para LEXP parc

    para            shift and go to state 337


state 263

    (82) OPCONST -> check . para LEXP parc

    para            shift and go to state 338


state 264

    (84) CREATETYPE -> create type id as enum . para LEXP parc

    para            shift and go to state 339


state 265

    (48) CREATEDB -> create RD if not exist . id
    (49) CREATEDB -> create RD if not exist . id OPCCDB

    id              shift and go to state 340


state 266

    (54) OPCCDB -> PROPIETARIO MODO .

    ptcoma          reduce using rule 54 (OPCCDB -> PROPIETARIO MODO .)


state 267

    (57) PROPIETARIO -> owner igual . id

    id              shift and go to state 341


state 268

    (58) PROPIETARIO -> owner id .

    mode            reduce using rule 58 (PROPIETARIO -> owner id .)
    ptcoma          reduce using rule 58 (PROPIETARIO -> owner id .)


state 269

    (59) MODO -> mode igual . int

    int             shift and go to state 342


state 270

    (60) MODO -> mode int .

    ptcoma          reduce using rule 60 (MODO -> mode int .)


state 271

    (119) LCAMPOS -> id igual . EXP
    (120) LCAMPOS -> id igual . default
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    default         shift and go to state 344
    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 343
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 272

    (118) LCAMPOS -> LCAMPOS id . igual EXP

    igual           shift and go to state 345


state 273

    (117) UPDATE -> update id set LCAMPOS where . LEXP
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 346
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 274

    (121) DELETE -> delete r_from id where LEXP .
    (124) LEXP -> LEXP . coma EXP

    ptcoma          reduce using rule 121 (DELETE -> delete r_from id where LEXP .)
    coma            shift and go to state 82


state 275

    (27) RO -> rename to . id

    id              shift and go to state 347


state 276

    (28) RO -> owner to . id

    id              shift and go to state 348


state 277

    (32) OP -> alter column . id set not null
    (33) OP -> alter column . id set null
    (39) alc -> alter column . id type TIPO

    id              shift and go to state 349


state 278

    (30) OP -> add ADD .

    ptcoma          reduce using rule 30 (OP -> add ADD .)


state 279

    (43) ADD -> column . id TIPO

    id              shift and go to state 350


state 280

    (44) ADD -> check . para LEXP parc

    para            shift and go to state 351


state 281

    (45) ADD -> constraint . id unique para id parc

    id              shift and go to state 352


state 282

    (46) ADD -> foreign . key para id parc references id para id parc

    key             shift and go to state 353


state 283

    (31) OP -> drop column . ALTERDROP
    (41) ALTERDROP -> column . LEXP
    (40) ALTERDROP -> . constraint id
    (41) ALTERDROP -> . column LEXP
    (42) ALTERDROP -> . check id
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    constraint      shift and go to state 285
    column          shift and go to state 354
    check           shift and go to state 286
    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    ALTERDROP                      shift and go to state 355
    LEXP                           shift and go to state 356
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 284

    (35) OP -> drop ALTERDROP .

    ptcoma          reduce using rule 35 (OP -> drop ALTERDROP .)


state 285

    (40) ALTERDROP -> constraint . id

    id              shift and go to state 357


state 286

    (42) ALTERDROP -> check . id

    id              shift and go to state 358


state 287

    (37) listaalc -> listaalc coma . alc
    (39) alc -> . alter column id type TIPO

    alter           shift and go to state 360

    alc                            shift and go to state 359

state 288

    (36) OP -> rename column . id to id

    id              shift and go to state 361


state 289

    (23) DROP -> drop databases if exist id .

    ptcoma          reduce using rule 23 (DROP -> drop databases if exist id .)


state 290

    (21) INSERT -> insert into id values para . LEXP parc
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 362
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 291

    (19) WHEN -> when LEXP then LEXP .
    (124) LEXP -> LEXP . coma EXP

    end             reduce using rule 19 (WHEN -> when LEXP then LEXP .)
    else            reduce using rule 19 (WHEN -> when LEXP then LEXP .)
    when            reduce using rule 19 (WHEN -> when LEXP then LEXP .)
    coma            shift and go to state 82


state 292

    (85) SELECT -> select distinct LEXP r_from LEXP WHERE . GROUP HAVING ORDER LIMIT COMBINING
    (108) GROUP -> . group by LEXP
    (109) GROUP -> .

  ! shift/reduce conflict for group resolved as shift
    group           shift and go to state 294
    r_from          reduce using rule 109 (GROUP -> .)
    coma            reduce using rule 109 (GROUP -> .)
    limit           reduce using rule 109 (GROUP -> .)
    offset          reduce using rule 109 (GROUP -> .)
    union           reduce using rule 109 (GROUP -> .)
    intersect       reduce using rule 109 (GROUP -> .)
    except          reduce using rule 109 (GROUP -> .)
    ptcoma          reduce using rule 109 (GROUP -> .)
    mas             reduce using rule 109 (GROUP -> .)
    menos           reduce using rule 109 (GROUP -> .)
    multiplicacion  reduce using rule 109 (GROUP -> .)
    division        reduce using rule 109 (GROUP -> .)
    modulo          reduce using rule 109 (GROUP -> .)
    elevado         reduce using rule 109 (GROUP -> .)
    and             reduce using rule 109 (GROUP -> .)
    or              reduce using rule 109 (GROUP -> .)
    mayor           reduce using rule 109 (GROUP -> .)
    menor           reduce using rule 109 (GROUP -> .)
    mayor_igual     reduce using rule 109 (GROUP -> .)
    menor_igual     reduce using rule 109 (GROUP -> .)
    igual           reduce using rule 109 (GROUP -> .)
    diferente1      reduce using rule 109 (GROUP -> .)
    diferente2      reduce using rule 109 (GROUP -> .)
    punto           reduce using rule 109 (GROUP -> .)
    as              reduce using rule 109 (GROUP -> .)
    cadenaString    reduce using rule 109 (GROUP -> .)
    id              reduce using rule 109 (GROUP -> .)
    cadena          reduce using rule 109 (GROUP -> .)
    between         reduce using rule 109 (GROUP -> .)
    in              reduce using rule 109 (GROUP -> .)
    not             reduce using rule 109 (GROUP -> .)
    is              reduce using rule 109 (GROUP -> .)
    isnull          reduce using rule 109 (GROUP -> .)
    notnull         reduce using rule 109 (GROUP -> .)
    parc            reduce using rule 109 (GROUP -> .)
    then            reduce using rule 109 (GROUP -> .)
    where           reduce using rule 109 (GROUP -> .)
    having          reduce using rule 109 (GROUP -> .)
    order           reduce using rule 109 (GROUP -> .)
    end             reduce using rule 109 (GROUP -> .)
    else            reduce using rule 109 (GROUP -> .)
    when            reduce using rule 109 (GROUP -> .)
    constraint      reduce using rule 109 (GROUP -> .)
    default         reduce using rule 109 (GROUP -> .)
    primary         reduce using rule 109 (GROUP -> .)
    references      reduce using rule 109 (GROUP -> .)
    null            reduce using rule 109 (GROUP -> .)
    asc             reduce using rule 109 (GROUP -> .)
    desc            reduce using rule 109 (GROUP -> .)

  ! group           [ reduce using rule 109 (GROUP -> .) ]

    GROUP                          shift and go to state 363

state 293

    (86) SELECT -> select LEXP r_from LEXP WHERE GROUP . HAVING ORDER LIMIT COMBINING
    (110) HAVING -> . having LEXP
    (111) HAVING -> .

  ! shift/reduce conflict for having resolved as shift
    having          shift and go to state 365
    r_from          reduce using rule 111 (HAVING -> .)
    coma            reduce using rule 111 (HAVING -> .)
    limit           reduce using rule 111 (HAVING -> .)
    offset          reduce using rule 111 (HAVING -> .)
    union           reduce using rule 111 (HAVING -> .)
    intersect       reduce using rule 111 (HAVING -> .)
    except          reduce using rule 111 (HAVING -> .)
    ptcoma          reduce using rule 111 (HAVING -> .)
    mas             reduce using rule 111 (HAVING -> .)
    menos           reduce using rule 111 (HAVING -> .)
    multiplicacion  reduce using rule 111 (HAVING -> .)
    division        reduce using rule 111 (HAVING -> .)
    modulo          reduce using rule 111 (HAVING -> .)
    elevado         reduce using rule 111 (HAVING -> .)
    and             reduce using rule 111 (HAVING -> .)
    or              reduce using rule 111 (HAVING -> .)
    mayor           reduce using rule 111 (HAVING -> .)
    menor           reduce using rule 111 (HAVING -> .)
    mayor_igual     reduce using rule 111 (HAVING -> .)
    menor_igual     reduce using rule 111 (HAVING -> .)
    igual           reduce using rule 111 (HAVING -> .)
    diferente1      reduce using rule 111 (HAVING -> .)
    diferente2      reduce using rule 111 (HAVING -> .)
    punto           reduce using rule 111 (HAVING -> .)
    as              reduce using rule 111 (HAVING -> .)
    cadenaString    reduce using rule 111 (HAVING -> .)
    id              reduce using rule 111 (HAVING -> .)
    cadena          reduce using rule 111 (HAVING -> .)
    between         reduce using rule 111 (HAVING -> .)
    in              reduce using rule 111 (HAVING -> .)
    not             reduce using rule 111 (HAVING -> .)
    is              reduce using rule 111 (HAVING -> .)
    isnull          reduce using rule 111 (HAVING -> .)
    notnull         reduce using rule 111 (HAVING -> .)
    parc            reduce using rule 111 (HAVING -> .)
    then            reduce using rule 111 (HAVING -> .)
    where           reduce using rule 111 (HAVING -> .)
    group           reduce using rule 111 (HAVING -> .)
    order           reduce using rule 111 (HAVING -> .)
    end             reduce using rule 111 (HAVING -> .)
    else            reduce using rule 111 (HAVING -> .)
    when            reduce using rule 111 (HAVING -> .)
    constraint      reduce using rule 111 (HAVING -> .)
    default         reduce using rule 111 (HAVING -> .)
    primary         reduce using rule 111 (HAVING -> .)
    references      reduce using rule 111 (HAVING -> .)
    null            reduce using rule 111 (HAVING -> .)
    asc             reduce using rule 111 (HAVING -> .)
    desc            reduce using rule 111 (HAVING -> .)

  ! having          [ reduce using rule 111 (HAVING -> .) ]

    HAVING                         shift and go to state 364

state 294

    (108) GROUP -> group . by LEXP

    by              shift and go to state 366


state 295

    (96) WHERE -> where LEXP .
    (124) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 96 (WHERE -> where LEXP .)
    limit           reduce using rule 96 (WHERE -> where LEXP .)
    offset          reduce using rule 96 (WHERE -> where LEXP .)
    union           reduce using rule 96 (WHERE -> where LEXP .)
    intersect       reduce using rule 96 (WHERE -> where LEXP .)
    except          reduce using rule 96 (WHERE -> where LEXP .)
    ptcoma          reduce using rule 96 (WHERE -> where LEXP .)
    mas             reduce using rule 96 (WHERE -> where LEXP .)
    menos           reduce using rule 96 (WHERE -> where LEXP .)
    multiplicacion  reduce using rule 96 (WHERE -> where LEXP .)
    division        reduce using rule 96 (WHERE -> where LEXP .)
    modulo          reduce using rule 96 (WHERE -> where LEXP .)
    elevado         reduce using rule 96 (WHERE -> where LEXP .)
    and             reduce using rule 96 (WHERE -> where LEXP .)
    or              reduce using rule 96 (WHERE -> where LEXP .)
    mayor           reduce using rule 96 (WHERE -> where LEXP .)
    menor           reduce using rule 96 (WHERE -> where LEXP .)
    mayor_igual     reduce using rule 96 (WHERE -> where LEXP .)
    menor_igual     reduce using rule 96 (WHERE -> where LEXP .)
    igual           reduce using rule 96 (WHERE -> where LEXP .)
    diferente1      reduce using rule 96 (WHERE -> where LEXP .)
    diferente2      reduce using rule 96 (WHERE -> where LEXP .)
    punto           reduce using rule 96 (WHERE -> where LEXP .)
    as              reduce using rule 96 (WHERE -> where LEXP .)
    cadenaString    reduce using rule 96 (WHERE -> where LEXP .)
    id              reduce using rule 96 (WHERE -> where LEXP .)
    cadena          reduce using rule 96 (WHERE -> where LEXP .)
    between         reduce using rule 96 (WHERE -> where LEXP .)
    in              reduce using rule 96 (WHERE -> where LEXP .)
    not             reduce using rule 96 (WHERE -> where LEXP .)
    is              reduce using rule 96 (WHERE -> where LEXP .)
    isnull          reduce using rule 96 (WHERE -> where LEXP .)
    notnull         reduce using rule 96 (WHERE -> where LEXP .)
    parc            reduce using rule 96 (WHERE -> where LEXP .)
    then            reduce using rule 96 (WHERE -> where LEXP .)
    where           reduce using rule 96 (WHERE -> where LEXP .)
    group           reduce using rule 96 (WHERE -> where LEXP .)
    having          reduce using rule 96 (WHERE -> where LEXP .)
    order           reduce using rule 96 (WHERE -> where LEXP .)
    end             reduce using rule 96 (WHERE -> where LEXP .)
    else            reduce using rule 96 (WHERE -> where LEXP .)
    when            reduce using rule 96 (WHERE -> where LEXP .)
    constraint      reduce using rule 96 (WHERE -> where LEXP .)
    default         reduce using rule 96 (WHERE -> where LEXP .)
    primary         reduce using rule 96 (WHERE -> where LEXP .)
    references      reduce using rule 96 (WHERE -> where LEXP .)
    null            reduce using rule 96 (WHERE -> where LEXP .)
    asc             reduce using rule 96 (WHERE -> where LEXP .)
    desc            reduce using rule 96 (WHERE -> where LEXP .)
    coma            shift and go to state 82

  ! coma            [ reduce using rule 96 (WHERE -> where LEXP .) ]


state 296

    (97) WHERE -> where EXIST .

    r_from          reduce using rule 97 (WHERE -> where EXIST .)
    coma            reduce using rule 97 (WHERE -> where EXIST .)
    limit           reduce using rule 97 (WHERE -> where EXIST .)
    offset          reduce using rule 97 (WHERE -> where EXIST .)
    union           reduce using rule 97 (WHERE -> where EXIST .)
    intersect       reduce using rule 97 (WHERE -> where EXIST .)
    except          reduce using rule 97 (WHERE -> where EXIST .)
    ptcoma          reduce using rule 97 (WHERE -> where EXIST .)
    mas             reduce using rule 97 (WHERE -> where EXIST .)
    menos           reduce using rule 97 (WHERE -> where EXIST .)
    multiplicacion  reduce using rule 97 (WHERE -> where EXIST .)
    division        reduce using rule 97 (WHERE -> where EXIST .)
    modulo          reduce using rule 97 (WHERE -> where EXIST .)
    elevado         reduce using rule 97 (WHERE -> where EXIST .)
    and             reduce using rule 97 (WHERE -> where EXIST .)
    or              reduce using rule 97 (WHERE -> where EXIST .)
    mayor           reduce using rule 97 (WHERE -> where EXIST .)
    menor           reduce using rule 97 (WHERE -> where EXIST .)
    mayor_igual     reduce using rule 97 (WHERE -> where EXIST .)
    menor_igual     reduce using rule 97 (WHERE -> where EXIST .)
    igual           reduce using rule 97 (WHERE -> where EXIST .)
    diferente1      reduce using rule 97 (WHERE -> where EXIST .)
    diferente2      reduce using rule 97 (WHERE -> where EXIST .)
    punto           reduce using rule 97 (WHERE -> where EXIST .)
    as              reduce using rule 97 (WHERE -> where EXIST .)
    cadenaString    reduce using rule 97 (WHERE -> where EXIST .)
    id              reduce using rule 97 (WHERE -> where EXIST .)
    cadena          reduce using rule 97 (WHERE -> where EXIST .)
    between         reduce using rule 97 (WHERE -> where EXIST .)
    in              reduce using rule 97 (WHERE -> where EXIST .)
    not             reduce using rule 97 (WHERE -> where EXIST .)
    is              reduce using rule 97 (WHERE -> where EXIST .)
    isnull          reduce using rule 97 (WHERE -> where EXIST .)
    notnull         reduce using rule 97 (WHERE -> where EXIST .)
    parc            reduce using rule 97 (WHERE -> where EXIST .)
    then            reduce using rule 97 (WHERE -> where EXIST .)
    where           reduce using rule 97 (WHERE -> where EXIST .)
    group           reduce using rule 97 (WHERE -> where EXIST .)
    having          reduce using rule 97 (WHERE -> where EXIST .)
    order           reduce using rule 97 (WHERE -> where EXIST .)
    end             reduce using rule 97 (WHERE -> where EXIST .)
    else            reduce using rule 97 (WHERE -> where EXIST .)
    when            reduce using rule 97 (WHERE -> where EXIST .)
    constraint      reduce using rule 97 (WHERE -> where EXIST .)
    default         reduce using rule 97 (WHERE -> where EXIST .)
    primary         reduce using rule 97 (WHERE -> where EXIST .)
    references      reduce using rule 97 (WHERE -> where EXIST .)
    null            reduce using rule 97 (WHERE -> where EXIST .)
    asc             reduce using rule 97 (WHERE -> where EXIST .)
    desc            reduce using rule 97 (WHERE -> where EXIST .)


state 297

    (123) EXIST -> exist . para SELECT parc

    para            shift and go to state 367


state 298

    (98) WHERE -> union LEXP .
    (124) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 98 (WHERE -> union LEXP .)
    limit           reduce using rule 98 (WHERE -> union LEXP .)
    offset          reduce using rule 98 (WHERE -> union LEXP .)
    union           reduce using rule 98 (WHERE -> union LEXP .)
    intersect       reduce using rule 98 (WHERE -> union LEXP .)
    except          reduce using rule 98 (WHERE -> union LEXP .)
    ptcoma          reduce using rule 98 (WHERE -> union LEXP .)
    mas             reduce using rule 98 (WHERE -> union LEXP .)
    menos           reduce using rule 98 (WHERE -> union LEXP .)
    multiplicacion  reduce using rule 98 (WHERE -> union LEXP .)
    division        reduce using rule 98 (WHERE -> union LEXP .)
    modulo          reduce using rule 98 (WHERE -> union LEXP .)
    elevado         reduce using rule 98 (WHERE -> union LEXP .)
    and             reduce using rule 98 (WHERE -> union LEXP .)
    or              reduce using rule 98 (WHERE -> union LEXP .)
    mayor           reduce using rule 98 (WHERE -> union LEXP .)
    menor           reduce using rule 98 (WHERE -> union LEXP .)
    mayor_igual     reduce using rule 98 (WHERE -> union LEXP .)
    menor_igual     reduce using rule 98 (WHERE -> union LEXP .)
    igual           reduce using rule 98 (WHERE -> union LEXP .)
    diferente1      reduce using rule 98 (WHERE -> union LEXP .)
    diferente2      reduce using rule 98 (WHERE -> union LEXP .)
    punto           reduce using rule 98 (WHERE -> union LEXP .)
    as              reduce using rule 98 (WHERE -> union LEXP .)
    cadenaString    reduce using rule 98 (WHERE -> union LEXP .)
    id              reduce using rule 98 (WHERE -> union LEXP .)
    cadena          reduce using rule 98 (WHERE -> union LEXP .)
    between         reduce using rule 98 (WHERE -> union LEXP .)
    in              reduce using rule 98 (WHERE -> union LEXP .)
    not             reduce using rule 98 (WHERE -> union LEXP .)
    is              reduce using rule 98 (WHERE -> union LEXP .)
    isnull          reduce using rule 98 (WHERE -> union LEXP .)
    notnull         reduce using rule 98 (WHERE -> union LEXP .)
    parc            reduce using rule 98 (WHERE -> union LEXP .)
    then            reduce using rule 98 (WHERE -> union LEXP .)
    where           reduce using rule 98 (WHERE -> union LEXP .)
    group           reduce using rule 98 (WHERE -> union LEXP .)
    having          reduce using rule 98 (WHERE -> union LEXP .)
    order           reduce using rule 98 (WHERE -> union LEXP .)
    end             reduce using rule 98 (WHERE -> union LEXP .)
    else            reduce using rule 98 (WHERE -> union LEXP .)
    when            reduce using rule 98 (WHERE -> union LEXP .)
    constraint      reduce using rule 98 (WHERE -> union LEXP .)
    default         reduce using rule 98 (WHERE -> union LEXP .)
    primary         reduce using rule 98 (WHERE -> union LEXP .)
    references      reduce using rule 98 (WHERE -> union LEXP .)
    null            reduce using rule 98 (WHERE -> union LEXP .)
    asc             reduce using rule 98 (WHERE -> union LEXP .)
    desc            reduce using rule 98 (WHERE -> union LEXP .)
    coma            shift and go to state 82

  ! coma            [ reduce using rule 98 (WHERE -> union LEXP .) ]


state 299

    (99) WHERE -> union all . LEXP
    (204) EXP -> all . para LEXP parc
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    para            shift and go to state 301
    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 368
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 300

    (102) COMBINING -> union all LEXP .
    (124) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 102 (COMBINING -> union all LEXP .)
    limit           reduce using rule 102 (COMBINING -> union all LEXP .)
    offset          reduce using rule 102 (COMBINING -> union all LEXP .)
    union           reduce using rule 102 (COMBINING -> union all LEXP .)
    intersect       reduce using rule 102 (COMBINING -> union all LEXP .)
    except          reduce using rule 102 (COMBINING -> union all LEXP .)
    ptcoma          reduce using rule 102 (COMBINING -> union all LEXP .)
    mas             reduce using rule 102 (COMBINING -> union all LEXP .)
    menos           reduce using rule 102 (COMBINING -> union all LEXP .)
    multiplicacion  reduce using rule 102 (COMBINING -> union all LEXP .)
    division        reduce using rule 102 (COMBINING -> union all LEXP .)
    modulo          reduce using rule 102 (COMBINING -> union all LEXP .)
    elevado         reduce using rule 102 (COMBINING -> union all LEXP .)
    and             reduce using rule 102 (COMBINING -> union all LEXP .)
    or              reduce using rule 102 (COMBINING -> union all LEXP .)
    mayor           reduce using rule 102 (COMBINING -> union all LEXP .)
    menor           reduce using rule 102 (COMBINING -> union all LEXP .)
    mayor_igual     reduce using rule 102 (COMBINING -> union all LEXP .)
    menor_igual     reduce using rule 102 (COMBINING -> union all LEXP .)
    igual           reduce using rule 102 (COMBINING -> union all LEXP .)
    diferente1      reduce using rule 102 (COMBINING -> union all LEXP .)
    diferente2      reduce using rule 102 (COMBINING -> union all LEXP .)
    punto           reduce using rule 102 (COMBINING -> union all LEXP .)
    as              reduce using rule 102 (COMBINING -> union all LEXP .)
    cadenaString    reduce using rule 102 (COMBINING -> union all LEXP .)
    id              reduce using rule 102 (COMBINING -> union all LEXP .)
    cadena          reduce using rule 102 (COMBINING -> union all LEXP .)
    between         reduce using rule 102 (COMBINING -> union all LEXP .)
    in              reduce using rule 102 (COMBINING -> union all LEXP .)
    not             reduce using rule 102 (COMBINING -> union all LEXP .)
    is              reduce using rule 102 (COMBINING -> union all LEXP .)
    isnull          reduce using rule 102 (COMBINING -> union all LEXP .)
    notnull         reduce using rule 102 (COMBINING -> union all LEXP .)
    parc            reduce using rule 102 (COMBINING -> union all LEXP .)
    then            reduce using rule 102 (COMBINING -> union all LEXP .)
    where           reduce using rule 102 (COMBINING -> union all LEXP .)
    group           reduce using rule 102 (COMBINING -> union all LEXP .)
    having          reduce using rule 102 (COMBINING -> union all LEXP .)
    order           reduce using rule 102 (COMBINING -> union all LEXP .)
    end             reduce using rule 102 (COMBINING -> union all LEXP .)
    else            reduce using rule 102 (COMBINING -> union all LEXP .)
    when            reduce using rule 102 (COMBINING -> union all LEXP .)
    constraint      reduce using rule 102 (COMBINING -> union all LEXP .)
    default         reduce using rule 102 (COMBINING -> union all LEXP .)
    primary         reduce using rule 102 (COMBINING -> union all LEXP .)
    references      reduce using rule 102 (COMBINING -> union all LEXP .)
    null            reduce using rule 102 (COMBINING -> union all LEXP .)
    asc             reduce using rule 102 (COMBINING -> union all LEXP .)
    desc            reduce using rule 102 (COMBINING -> union all LEXP .)
    coma            shift and go to state 82

  ! coma            [ reduce using rule 102 (COMBINING -> union all LEXP .) ]


state 301

    (204) EXP -> all para . LEXP parc
    (182) EXP -> para . EXP parc
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 196
    EXP                            shift and go to state 369
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 302

    (104) COMBINING -> intersect all LEXP .
    (124) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 104 (COMBINING -> intersect all LEXP .)
    limit           reduce using rule 104 (COMBINING -> intersect all LEXP .)
    offset          reduce using rule 104 (COMBINING -> intersect all LEXP .)
    union           reduce using rule 104 (COMBINING -> intersect all LEXP .)
    intersect       reduce using rule 104 (COMBINING -> intersect all LEXP .)
    except          reduce using rule 104 (COMBINING -> intersect all LEXP .)
    ptcoma          reduce using rule 104 (COMBINING -> intersect all LEXP .)
    mas             reduce using rule 104 (COMBINING -> intersect all LEXP .)
    menos           reduce using rule 104 (COMBINING -> intersect all LEXP .)
    multiplicacion  reduce using rule 104 (COMBINING -> intersect all LEXP .)
    division        reduce using rule 104 (COMBINING -> intersect all LEXP .)
    modulo          reduce using rule 104 (COMBINING -> intersect all LEXP .)
    elevado         reduce using rule 104 (COMBINING -> intersect all LEXP .)
    and             reduce using rule 104 (COMBINING -> intersect all LEXP .)
    or              reduce using rule 104 (COMBINING -> intersect all LEXP .)
    mayor           reduce using rule 104 (COMBINING -> intersect all LEXP .)
    menor           reduce using rule 104 (COMBINING -> intersect all LEXP .)
    mayor_igual     reduce using rule 104 (COMBINING -> intersect all LEXP .)
    menor_igual     reduce using rule 104 (COMBINING -> intersect all LEXP .)
    igual           reduce using rule 104 (COMBINING -> intersect all LEXP .)
    diferente1      reduce using rule 104 (COMBINING -> intersect all LEXP .)
    diferente2      reduce using rule 104 (COMBINING -> intersect all LEXP .)
    punto           reduce using rule 104 (COMBINING -> intersect all LEXP .)
    as              reduce using rule 104 (COMBINING -> intersect all LEXP .)
    cadenaString    reduce using rule 104 (COMBINING -> intersect all LEXP .)
    id              reduce using rule 104 (COMBINING -> intersect all LEXP .)
    cadena          reduce using rule 104 (COMBINING -> intersect all LEXP .)
    between         reduce using rule 104 (COMBINING -> intersect all LEXP .)
    in              reduce using rule 104 (COMBINING -> intersect all LEXP .)
    not             reduce using rule 104 (COMBINING -> intersect all LEXP .)
    is              reduce using rule 104 (COMBINING -> intersect all LEXP .)
    isnull          reduce using rule 104 (COMBINING -> intersect all LEXP .)
    notnull         reduce using rule 104 (COMBINING -> intersect all LEXP .)
    parc            reduce using rule 104 (COMBINING -> intersect all LEXP .)
    then            reduce using rule 104 (COMBINING -> intersect all LEXP .)
    where           reduce using rule 104 (COMBINING -> intersect all LEXP .)
    group           reduce using rule 104 (COMBINING -> intersect all LEXP .)
    having          reduce using rule 104 (COMBINING -> intersect all LEXP .)
    order           reduce using rule 104 (COMBINING -> intersect all LEXP .)
    end             reduce using rule 104 (COMBINING -> intersect all LEXP .)
    else            reduce using rule 104 (COMBINING -> intersect all LEXP .)
    when            reduce using rule 104 (COMBINING -> intersect all LEXP .)
    constraint      reduce using rule 104 (COMBINING -> intersect all LEXP .)
    default         reduce using rule 104 (COMBINING -> intersect all LEXP .)
    primary         reduce using rule 104 (COMBINING -> intersect all LEXP .)
    references      reduce using rule 104 (COMBINING -> intersect all LEXP .)
    null            reduce using rule 104 (COMBINING -> intersect all LEXP .)
    asc             reduce using rule 104 (COMBINING -> intersect all LEXP .)
    desc            reduce using rule 104 (COMBINING -> intersect all LEXP .)
    coma            shift and go to state 82

  ! coma            [ reduce using rule 104 (COMBINING -> intersect all LEXP .) ]


state 303

    (106) COMBINING -> except all LEXP .
    (124) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 106 (COMBINING -> except all LEXP .)
    limit           reduce using rule 106 (COMBINING -> except all LEXP .)
    offset          reduce using rule 106 (COMBINING -> except all LEXP .)
    union           reduce using rule 106 (COMBINING -> except all LEXP .)
    intersect       reduce using rule 106 (COMBINING -> except all LEXP .)
    except          reduce using rule 106 (COMBINING -> except all LEXP .)
    ptcoma          reduce using rule 106 (COMBINING -> except all LEXP .)
    mas             reduce using rule 106 (COMBINING -> except all LEXP .)
    menos           reduce using rule 106 (COMBINING -> except all LEXP .)
    multiplicacion  reduce using rule 106 (COMBINING -> except all LEXP .)
    division        reduce using rule 106 (COMBINING -> except all LEXP .)
    modulo          reduce using rule 106 (COMBINING -> except all LEXP .)
    elevado         reduce using rule 106 (COMBINING -> except all LEXP .)
    and             reduce using rule 106 (COMBINING -> except all LEXP .)
    or              reduce using rule 106 (COMBINING -> except all LEXP .)
    mayor           reduce using rule 106 (COMBINING -> except all LEXP .)
    menor           reduce using rule 106 (COMBINING -> except all LEXP .)
    mayor_igual     reduce using rule 106 (COMBINING -> except all LEXP .)
    menor_igual     reduce using rule 106 (COMBINING -> except all LEXP .)
    igual           reduce using rule 106 (COMBINING -> except all LEXP .)
    diferente1      reduce using rule 106 (COMBINING -> except all LEXP .)
    diferente2      reduce using rule 106 (COMBINING -> except all LEXP .)
    punto           reduce using rule 106 (COMBINING -> except all LEXP .)
    as              reduce using rule 106 (COMBINING -> except all LEXP .)
    cadenaString    reduce using rule 106 (COMBINING -> except all LEXP .)
    id              reduce using rule 106 (COMBINING -> except all LEXP .)
    cadena          reduce using rule 106 (COMBINING -> except all LEXP .)
    between         reduce using rule 106 (COMBINING -> except all LEXP .)
    in              reduce using rule 106 (COMBINING -> except all LEXP .)
    not             reduce using rule 106 (COMBINING -> except all LEXP .)
    is              reduce using rule 106 (COMBINING -> except all LEXP .)
    isnull          reduce using rule 106 (COMBINING -> except all LEXP .)
    notnull         reduce using rule 106 (COMBINING -> except all LEXP .)
    parc            reduce using rule 106 (COMBINING -> except all LEXP .)
    then            reduce using rule 106 (COMBINING -> except all LEXP .)
    where           reduce using rule 106 (COMBINING -> except all LEXP .)
    group           reduce using rule 106 (COMBINING -> except all LEXP .)
    having          reduce using rule 106 (COMBINING -> except all LEXP .)
    order           reduce using rule 106 (COMBINING -> except all LEXP .)
    end             reduce using rule 106 (COMBINING -> except all LEXP .)
    else            reduce using rule 106 (COMBINING -> except all LEXP .)
    when            reduce using rule 106 (COMBINING -> except all LEXP .)
    constraint      reduce using rule 106 (COMBINING -> except all LEXP .)
    default         reduce using rule 106 (COMBINING -> except all LEXP .)
    primary         reduce using rule 106 (COMBINING -> except all LEXP .)
    references      reduce using rule 106 (COMBINING -> except all LEXP .)
    null            reduce using rule 106 (COMBINING -> except all LEXP .)
    asc             reduce using rule 106 (COMBINING -> except all LEXP .)
    desc            reduce using rule 106 (COMBINING -> except all LEXP .)
    coma            shift and go to state 82

  ! coma            [ reduce using rule 106 (COMBINING -> except all LEXP .) ]


state 304

    (91) LIMIT -> limit int offset int .

    union           reduce using rule 91 (LIMIT -> limit int offset int .)
    intersect       reduce using rule 91 (LIMIT -> limit int offset int .)
    except          reduce using rule 91 (LIMIT -> limit int offset int .)
    ptcoma          reduce using rule 91 (LIMIT -> limit int offset int .)
    r_from          reduce using rule 91 (LIMIT -> limit int offset int .)
    coma            reduce using rule 91 (LIMIT -> limit int offset int .)
    limit           reduce using rule 91 (LIMIT -> limit int offset int .)
    offset          reduce using rule 91 (LIMIT -> limit int offset int .)
    mas             reduce using rule 91 (LIMIT -> limit int offset int .)
    menos           reduce using rule 91 (LIMIT -> limit int offset int .)
    multiplicacion  reduce using rule 91 (LIMIT -> limit int offset int .)
    division        reduce using rule 91 (LIMIT -> limit int offset int .)
    modulo          reduce using rule 91 (LIMIT -> limit int offset int .)
    elevado         reduce using rule 91 (LIMIT -> limit int offset int .)
    and             reduce using rule 91 (LIMIT -> limit int offset int .)
    or              reduce using rule 91 (LIMIT -> limit int offset int .)
    mayor           reduce using rule 91 (LIMIT -> limit int offset int .)
    menor           reduce using rule 91 (LIMIT -> limit int offset int .)
    mayor_igual     reduce using rule 91 (LIMIT -> limit int offset int .)
    menor_igual     reduce using rule 91 (LIMIT -> limit int offset int .)
    igual           reduce using rule 91 (LIMIT -> limit int offset int .)
    diferente1      reduce using rule 91 (LIMIT -> limit int offset int .)
    diferente2      reduce using rule 91 (LIMIT -> limit int offset int .)
    punto           reduce using rule 91 (LIMIT -> limit int offset int .)
    as              reduce using rule 91 (LIMIT -> limit int offset int .)
    cadenaString    reduce using rule 91 (LIMIT -> limit int offset int .)
    id              reduce using rule 91 (LIMIT -> limit int offset int .)
    cadena          reduce using rule 91 (LIMIT -> limit int offset int .)
    between         reduce using rule 91 (LIMIT -> limit int offset int .)
    in              reduce using rule 91 (LIMIT -> limit int offset int .)
    not             reduce using rule 91 (LIMIT -> limit int offset int .)
    is              reduce using rule 91 (LIMIT -> limit int offset int .)
    isnull          reduce using rule 91 (LIMIT -> limit int offset int .)
    notnull         reduce using rule 91 (LIMIT -> limit int offset int .)
    parc            reduce using rule 91 (LIMIT -> limit int offset int .)
    then            reduce using rule 91 (LIMIT -> limit int offset int .)
    where           reduce using rule 91 (LIMIT -> limit int offset int .)
    group           reduce using rule 91 (LIMIT -> limit int offset int .)
    having          reduce using rule 91 (LIMIT -> limit int offset int .)
    order           reduce using rule 91 (LIMIT -> limit int offset int .)
    end             reduce using rule 91 (LIMIT -> limit int offset int .)
    else            reduce using rule 91 (LIMIT -> limit int offset int .)
    when            reduce using rule 91 (LIMIT -> limit int offset int .)
    constraint      reduce using rule 91 (LIMIT -> limit int offset int .)
    default         reduce using rule 91 (LIMIT -> limit int offset int .)
    primary         reduce using rule 91 (LIMIT -> limit int offset int .)
    references      reduce using rule 91 (LIMIT -> limit int offset int .)
    null            reduce using rule 91 (LIMIT -> limit int offset int .)
    asc             reduce using rule 91 (LIMIT -> limit int offset int .)
    desc            reduce using rule 91 (LIMIT -> limit int offset int .)


state 305

    (93) LIMIT -> limit all offset int .

    union           reduce using rule 93 (LIMIT -> limit all offset int .)
    intersect       reduce using rule 93 (LIMIT -> limit all offset int .)
    except          reduce using rule 93 (LIMIT -> limit all offset int .)
    ptcoma          reduce using rule 93 (LIMIT -> limit all offset int .)
    r_from          reduce using rule 93 (LIMIT -> limit all offset int .)
    coma            reduce using rule 93 (LIMIT -> limit all offset int .)
    limit           reduce using rule 93 (LIMIT -> limit all offset int .)
    offset          reduce using rule 93 (LIMIT -> limit all offset int .)
    mas             reduce using rule 93 (LIMIT -> limit all offset int .)
    menos           reduce using rule 93 (LIMIT -> limit all offset int .)
    multiplicacion  reduce using rule 93 (LIMIT -> limit all offset int .)
    division        reduce using rule 93 (LIMIT -> limit all offset int .)
    modulo          reduce using rule 93 (LIMIT -> limit all offset int .)
    elevado         reduce using rule 93 (LIMIT -> limit all offset int .)
    and             reduce using rule 93 (LIMIT -> limit all offset int .)
    or              reduce using rule 93 (LIMIT -> limit all offset int .)
    mayor           reduce using rule 93 (LIMIT -> limit all offset int .)
    menor           reduce using rule 93 (LIMIT -> limit all offset int .)
    mayor_igual     reduce using rule 93 (LIMIT -> limit all offset int .)
    menor_igual     reduce using rule 93 (LIMIT -> limit all offset int .)
    igual           reduce using rule 93 (LIMIT -> limit all offset int .)
    diferente1      reduce using rule 93 (LIMIT -> limit all offset int .)
    diferente2      reduce using rule 93 (LIMIT -> limit all offset int .)
    punto           reduce using rule 93 (LIMIT -> limit all offset int .)
    as              reduce using rule 93 (LIMIT -> limit all offset int .)
    cadenaString    reduce using rule 93 (LIMIT -> limit all offset int .)
    id              reduce using rule 93 (LIMIT -> limit all offset int .)
    cadena          reduce using rule 93 (LIMIT -> limit all offset int .)
    between         reduce using rule 93 (LIMIT -> limit all offset int .)
    in              reduce using rule 93 (LIMIT -> limit all offset int .)
    not             reduce using rule 93 (LIMIT -> limit all offset int .)
    is              reduce using rule 93 (LIMIT -> limit all offset int .)
    isnull          reduce using rule 93 (LIMIT -> limit all offset int .)
    notnull         reduce using rule 93 (LIMIT -> limit all offset int .)
    parc            reduce using rule 93 (LIMIT -> limit all offset int .)
    then            reduce using rule 93 (LIMIT -> limit all offset int .)
    where           reduce using rule 93 (LIMIT -> limit all offset int .)
    group           reduce using rule 93 (LIMIT -> limit all offset int .)
    having          reduce using rule 93 (LIMIT -> limit all offset int .)
    order           reduce using rule 93 (LIMIT -> limit all offset int .)
    end             reduce using rule 93 (LIMIT -> limit all offset int .)
    else            reduce using rule 93 (LIMIT -> limit all offset int .)
    when            reduce using rule 93 (LIMIT -> limit all offset int .)
    constraint      reduce using rule 93 (LIMIT -> limit all offset int .)
    default         reduce using rule 93 (LIMIT -> limit all offset int .)
    primary         reduce using rule 93 (LIMIT -> limit all offset int .)
    references      reduce using rule 93 (LIMIT -> limit all offset int .)
    null            reduce using rule 93 (LIMIT -> limit all offset int .)
    asc             reduce using rule 93 (LIMIT -> limit all offset int .)
    desc            reduce using rule 93 (LIMIT -> limit all offset int .)


state 306

    (92) LIMIT -> offset int limit int .

    union           reduce using rule 92 (LIMIT -> offset int limit int .)
    intersect       reduce using rule 92 (LIMIT -> offset int limit int .)
    except          reduce using rule 92 (LIMIT -> offset int limit int .)
    ptcoma          reduce using rule 92 (LIMIT -> offset int limit int .)
    r_from          reduce using rule 92 (LIMIT -> offset int limit int .)
    coma            reduce using rule 92 (LIMIT -> offset int limit int .)
    limit           reduce using rule 92 (LIMIT -> offset int limit int .)
    offset          reduce using rule 92 (LIMIT -> offset int limit int .)
    mas             reduce using rule 92 (LIMIT -> offset int limit int .)
    menos           reduce using rule 92 (LIMIT -> offset int limit int .)
    multiplicacion  reduce using rule 92 (LIMIT -> offset int limit int .)
    division        reduce using rule 92 (LIMIT -> offset int limit int .)
    modulo          reduce using rule 92 (LIMIT -> offset int limit int .)
    elevado         reduce using rule 92 (LIMIT -> offset int limit int .)
    and             reduce using rule 92 (LIMIT -> offset int limit int .)
    or              reduce using rule 92 (LIMIT -> offset int limit int .)
    mayor           reduce using rule 92 (LIMIT -> offset int limit int .)
    menor           reduce using rule 92 (LIMIT -> offset int limit int .)
    mayor_igual     reduce using rule 92 (LIMIT -> offset int limit int .)
    menor_igual     reduce using rule 92 (LIMIT -> offset int limit int .)
    igual           reduce using rule 92 (LIMIT -> offset int limit int .)
    diferente1      reduce using rule 92 (LIMIT -> offset int limit int .)
    diferente2      reduce using rule 92 (LIMIT -> offset int limit int .)
    punto           reduce using rule 92 (LIMIT -> offset int limit int .)
    as              reduce using rule 92 (LIMIT -> offset int limit int .)
    cadenaString    reduce using rule 92 (LIMIT -> offset int limit int .)
    id              reduce using rule 92 (LIMIT -> offset int limit int .)
    cadena          reduce using rule 92 (LIMIT -> offset int limit int .)
    between         reduce using rule 92 (LIMIT -> offset int limit int .)
    in              reduce using rule 92 (LIMIT -> offset int limit int .)
    not             reduce using rule 92 (LIMIT -> offset int limit int .)
    is              reduce using rule 92 (LIMIT -> offset int limit int .)
    isnull          reduce using rule 92 (LIMIT -> offset int limit int .)
    notnull         reduce using rule 92 (LIMIT -> offset int limit int .)
    parc            reduce using rule 92 (LIMIT -> offset int limit int .)
    then            reduce using rule 92 (LIMIT -> offset int limit int .)
    where           reduce using rule 92 (LIMIT -> offset int limit int .)
    group           reduce using rule 92 (LIMIT -> offset int limit int .)
    having          reduce using rule 92 (LIMIT -> offset int limit int .)
    order           reduce using rule 92 (LIMIT -> offset int limit int .)
    end             reduce using rule 92 (LIMIT -> offset int limit int .)
    else            reduce using rule 92 (LIMIT -> offset int limit int .)
    when            reduce using rule 92 (LIMIT -> offset int limit int .)
    constraint      reduce using rule 92 (LIMIT -> offset int limit int .)
    default         reduce using rule 92 (LIMIT -> offset int limit int .)
    primary         reduce using rule 92 (LIMIT -> offset int limit int .)
    references      reduce using rule 92 (LIMIT -> offset int limit int .)
    null            reduce using rule 92 (LIMIT -> offset int limit int .)
    asc             reduce using rule 92 (LIMIT -> offset int limit int .)
    desc            reduce using rule 92 (LIMIT -> offset int limit int .)


state 307

    (94) LIMIT -> offset int limit all .

    union           reduce using rule 94 (LIMIT -> offset int limit all .)
    intersect       reduce using rule 94 (LIMIT -> offset int limit all .)
    except          reduce using rule 94 (LIMIT -> offset int limit all .)
    ptcoma          reduce using rule 94 (LIMIT -> offset int limit all .)
    r_from          reduce using rule 94 (LIMIT -> offset int limit all .)
    coma            reduce using rule 94 (LIMIT -> offset int limit all .)
    limit           reduce using rule 94 (LIMIT -> offset int limit all .)
    offset          reduce using rule 94 (LIMIT -> offset int limit all .)
    mas             reduce using rule 94 (LIMIT -> offset int limit all .)
    menos           reduce using rule 94 (LIMIT -> offset int limit all .)
    multiplicacion  reduce using rule 94 (LIMIT -> offset int limit all .)
    division        reduce using rule 94 (LIMIT -> offset int limit all .)
    modulo          reduce using rule 94 (LIMIT -> offset int limit all .)
    elevado         reduce using rule 94 (LIMIT -> offset int limit all .)
    and             reduce using rule 94 (LIMIT -> offset int limit all .)
    or              reduce using rule 94 (LIMIT -> offset int limit all .)
    mayor           reduce using rule 94 (LIMIT -> offset int limit all .)
    menor           reduce using rule 94 (LIMIT -> offset int limit all .)
    mayor_igual     reduce using rule 94 (LIMIT -> offset int limit all .)
    menor_igual     reduce using rule 94 (LIMIT -> offset int limit all .)
    igual           reduce using rule 94 (LIMIT -> offset int limit all .)
    diferente1      reduce using rule 94 (LIMIT -> offset int limit all .)
    diferente2      reduce using rule 94 (LIMIT -> offset int limit all .)
    punto           reduce using rule 94 (LIMIT -> offset int limit all .)
    as              reduce using rule 94 (LIMIT -> offset int limit all .)
    cadenaString    reduce using rule 94 (LIMIT -> offset int limit all .)
    id              reduce using rule 94 (LIMIT -> offset int limit all .)
    cadena          reduce using rule 94 (LIMIT -> offset int limit all .)
    between         reduce using rule 94 (LIMIT -> offset int limit all .)
    in              reduce using rule 94 (LIMIT -> offset int limit all .)
    not             reduce using rule 94 (LIMIT -> offset int limit all .)
    is              reduce using rule 94 (LIMIT -> offset int limit all .)
    isnull          reduce using rule 94 (LIMIT -> offset int limit all .)
    notnull         reduce using rule 94 (LIMIT -> offset int limit all .)
    parc            reduce using rule 94 (LIMIT -> offset int limit all .)
    then            reduce using rule 94 (LIMIT -> offset int limit all .)
    where           reduce using rule 94 (LIMIT -> offset int limit all .)
    group           reduce using rule 94 (LIMIT -> offset int limit all .)
    having          reduce using rule 94 (LIMIT -> offset int limit all .)
    order           reduce using rule 94 (LIMIT -> offset int limit all .)
    end             reduce using rule 94 (LIMIT -> offset int limit all .)
    else            reduce using rule 94 (LIMIT -> offset int limit all .)
    when            reduce using rule 94 (LIMIT -> offset int limit all .)
    constraint      reduce using rule 94 (LIMIT -> offset int limit all .)
    default         reduce using rule 94 (LIMIT -> offset int limit all .)
    primary         reduce using rule 94 (LIMIT -> offset int limit all .)
    references      reduce using rule 94 (LIMIT -> offset int limit all .)
    null            reduce using rule 94 (LIMIT -> offset int limit all .)
    asc             reduce using rule 94 (LIMIT -> offset int limit all .)
    desc            reduce using rule 94 (LIMIT -> offset int limit all .)


state 308

    (214) PREDICADOS -> EXP in para LEXP parc .

    r_from          reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    coma            reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    limit           reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    offset          reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    union           reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    intersect       reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    except          reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    ptcoma          reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    mas             reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    menos           reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    multiplicacion  reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    division        reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    modulo          reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    elevado         reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    and             reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    or              reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    mayor           reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    menor           reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    mayor_igual     reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    menor_igual     reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    igual           reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    diferente1      reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    diferente2      reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    punto           reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    as              reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    cadenaString    reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    id              reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    cadena          reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    between         reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    in              reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    not             reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    is              reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    isnull          reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    notnull         reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    parc            reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    then            reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    where           reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    group           reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    having          reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    order           reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    end             reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    else            reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    when            reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    constraint      reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    default         reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    primary         reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    references      reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    null            reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    asc             reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)
    desc            reduce using rule 214 (PREDICADOS -> EXP in para LEXP parc .)


state 309

    (215) PREDICADOS -> EXP not in para LEXP . parc
    (124) LEXP -> LEXP . coma EXP

    parc            shift and go to state 370
    coma            shift and go to state 82


state 310

    (218) PREDICADOS -> EXP not between symetric EXP .
    (163) EXP -> EXP . mas EXP
    (164) EXP -> EXP . menos EXP
    (165) EXP -> EXP . multiplicacion EXP
    (166) EXP -> EXP . division EXP
    (167) EXP -> EXP . modulo EXP
    (168) EXP -> EXP . elevado EXP
    (169) EXP -> EXP . and EXP
    (170) EXP -> EXP . or EXP
    (171) EXP -> EXP . mayor EXP
    (172) EXP -> EXP . menor EXP
    (173) EXP -> EXP . mayor_igual EXP
    (174) EXP -> EXP . menor_igual EXP
    (175) EXP -> EXP . igual EXP
    (176) EXP -> EXP . diferente1 EXP
    (177) EXP -> EXP . diferente2 EXP
    (178) EXP -> EXP . punto EXP
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (213) PREDICADOS -> EXP . between EXP
    (214) PREDICADOS -> EXP . in para LEXP parc
    (215) PREDICADOS -> EXP . not in para LEXP parc
    (216) PREDICADOS -> EXP . not between EXP
    (217) PREDICADOS -> EXP . between symetric EXP
    (218) PREDICADOS -> EXP . not between symetric EXP
    (219) PREDICADOS -> EXP . is distinct r_from EXP
    (220) PREDICADOS -> EXP . is not distinct r_from EXP
    (221) PREDICADOS -> EXP . is PNULL
    (222) PREDICADOS -> EXP . isnull
    (223) PREDICADOS -> EXP . notnull
    (224) PREDICADOS -> EXP . is true
    (225) PREDICADOS -> EXP . is not true
    (226) PREDICADOS -> EXP . is false
    (227) PREDICADOS -> EXP . is not false
    (228) PREDICADOS -> EXP . is unknown
    (229) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    coma            reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    limit           reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    offset          reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    union           reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    intersect       reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    except          reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    ptcoma          reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    mas             reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    menos           reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    multiplicacion  reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    division        reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    modulo          reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    elevado         reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    mayor           reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    menor           reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    mayor_igual     reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    menor_igual     reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    igual           reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    diferente1      reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    diferente2      reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    punto           reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    as              reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    cadenaString    reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    id              reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    cadena          reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    between         reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    in              reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    is              reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    isnull          reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    notnull         reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    parc            reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    then            reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    where           reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    group           reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    having          reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    order           reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    end             reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    else            reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    when            reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    constraint      reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    default         reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    primary         reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    references      reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    null            reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    asc             reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    desc            reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .)
    and             shift and go to state 91
    or              shift and go to state 92
    not             shift and go to state 107

  ! and             [ reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .) ]
  ! or              [ reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .) ]
  ! not             [ reduce using rule 218 (PREDICADOS -> EXP not between symetric EXP .) ]
  ! mas             [ shift and go to state 85 ]
  ! menos           [ shift and go to state 86 ]
  ! multiplicacion  [ shift and go to state 87 ]
  ! division        [ shift and go to state 88 ]
  ! modulo          [ shift and go to state 89 ]
  ! elevado         [ shift and go to state 90 ]
  ! mayor           [ shift and go to state 93 ]
  ! menor           [ shift and go to state 94 ]
  ! mayor_igual     [ shift and go to state 95 ]
  ! menor_igual     [ shift and go to state 96 ]
  ! igual           [ shift and go to state 97 ]
  ! diferente1      [ shift and go to state 98 ]
  ! diferente2      [ shift and go to state 99 ]
  ! punto           [ shift and go to state 100 ]
  ! as              [ shift and go to state 101 ]
  ! cadenaString    [ shift and go to state 102 ]
  ! id              [ shift and go to state 103 ]
  ! cadena          [ shift and go to state 104 ]
  ! between         [ shift and go to state 105 ]
  ! in              [ shift and go to state 106 ]
  ! is              [ shift and go to state 108 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]


state 311

    (219) PREDICADOS -> EXP is distinct r_from EXP .
    (163) EXP -> EXP . mas EXP
    (164) EXP -> EXP . menos EXP
    (165) EXP -> EXP . multiplicacion EXP
    (166) EXP -> EXP . division EXP
    (167) EXP -> EXP . modulo EXP
    (168) EXP -> EXP . elevado EXP
    (169) EXP -> EXP . and EXP
    (170) EXP -> EXP . or EXP
    (171) EXP -> EXP . mayor EXP
    (172) EXP -> EXP . menor EXP
    (173) EXP -> EXP . mayor_igual EXP
    (174) EXP -> EXP . menor_igual EXP
    (175) EXP -> EXP . igual EXP
    (176) EXP -> EXP . diferente1 EXP
    (177) EXP -> EXP . diferente2 EXP
    (178) EXP -> EXP . punto EXP
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (213) PREDICADOS -> EXP . between EXP
    (214) PREDICADOS -> EXP . in para LEXP parc
    (215) PREDICADOS -> EXP . not in para LEXP parc
    (216) PREDICADOS -> EXP . not between EXP
    (217) PREDICADOS -> EXP . between symetric EXP
    (218) PREDICADOS -> EXP . not between symetric EXP
    (219) PREDICADOS -> EXP . is distinct r_from EXP
    (220) PREDICADOS -> EXP . is not distinct r_from EXP
    (221) PREDICADOS -> EXP . is PNULL
    (222) PREDICADOS -> EXP . isnull
    (223) PREDICADOS -> EXP . notnull
    (224) PREDICADOS -> EXP . is true
    (225) PREDICADOS -> EXP . is not true
    (226) PREDICADOS -> EXP . is false
    (227) PREDICADOS -> EXP . is not false
    (228) PREDICADOS -> EXP . is unknown
    (229) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    coma            reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    limit           reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    offset          reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    union           reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    intersect       reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    except          reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    ptcoma          reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    mas             reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    menos           reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    multiplicacion  reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    division        reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    modulo          reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    elevado         reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    mayor           reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    menor           reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    mayor_igual     reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    menor_igual     reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    igual           reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    diferente1      reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    diferente2      reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    punto           reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    as              reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    cadenaString    reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    id              reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    cadena          reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    between         reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    in              reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    is              reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    isnull          reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    notnull         reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    parc            reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    then            reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    where           reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    group           reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    having          reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    order           reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    end             reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    else            reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    when            reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    constraint      reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    default         reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    primary         reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    references      reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    null            reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    asc             reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    desc            reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .)
    and             shift and go to state 91
    or              shift and go to state 92
    not             shift and go to state 107

  ! and             [ reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .) ]
  ! or              [ reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .) ]
  ! not             [ reduce using rule 219 (PREDICADOS -> EXP is distinct r_from EXP .) ]
  ! mas             [ shift and go to state 85 ]
  ! menos           [ shift and go to state 86 ]
  ! multiplicacion  [ shift and go to state 87 ]
  ! division        [ shift and go to state 88 ]
  ! modulo          [ shift and go to state 89 ]
  ! elevado         [ shift and go to state 90 ]
  ! mayor           [ shift and go to state 93 ]
  ! menor           [ shift and go to state 94 ]
  ! mayor_igual     [ shift and go to state 95 ]
  ! menor_igual     [ shift and go to state 96 ]
  ! igual           [ shift and go to state 97 ]
  ! diferente1      [ shift and go to state 98 ]
  ! diferente2      [ shift and go to state 99 ]
  ! punto           [ shift and go to state 100 ]
  ! as              [ shift and go to state 101 ]
  ! cadenaString    [ shift and go to state 102 ]
  ! id              [ shift and go to state 103 ]
  ! cadena          [ shift and go to state 104 ]
  ! between         [ shift and go to state 105 ]
  ! in              [ shift and go to state 106 ]
  ! is              [ shift and go to state 108 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]


state 312

    (220) PREDICADOS -> EXP is not distinct r_from . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 371
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 313

    (195) EXP -> extract para FIELDS r_from timestamp . cadena parc

    cadena          shift and go to state 372


state 314

    (67) COLDEF -> id TIPO .
    (68) COLDEF -> id TIPO . LOPCOLUMN
    (69) LOPCOLUMN -> . LOPCOLUMN OPCOLUMN
    (70) LOPCOLUMN -> . OPCOLUMN
    (71) OPCOLUMN -> . constraint id unique
    (72) OPCOLUMN -> . constraint id check para EXP parc
    (73) OPCOLUMN -> . default EXP
    (74) OPCOLUMN -> . PNULL
    (75) OPCOLUMN -> . primary key
    (76) OPCOLUMN -> . references id
    (77) PNULL -> . not null
    (78) PNULL -> . null

    parc            reduce using rule 67 (COLDEF -> id TIPO .)
    coma            reduce using rule 67 (COLDEF -> id TIPO .)
    constraint      shift and go to state 375
    default         shift and go to state 376
    primary         shift and go to state 378
    references      shift and go to state 379
    not             shift and go to state 380
    null            shift and go to state 62

    LOPCOLUMN                      shift and go to state 373
    OPCOLUMN                       shift and go to state 374
    PNULL                          shift and go to state 377

state 315

    (126) TIPO -> smallint .

    constraint      reduce using rule 126 (TIPO -> smallint .)
    default         reduce using rule 126 (TIPO -> smallint .)
    primary         reduce using rule 126 (TIPO -> smallint .)
    references      reduce using rule 126 (TIPO -> smallint .)
    not             reduce using rule 126 (TIPO -> smallint .)
    null            reduce using rule 126 (TIPO -> smallint .)
    parc            reduce using rule 126 (TIPO -> smallint .)
    coma            reduce using rule 126 (TIPO -> smallint .)
    ptcoma          reduce using rule 126 (TIPO -> smallint .)


state 316

    (127) TIPO -> integer .

    constraint      reduce using rule 127 (TIPO -> integer .)
    default         reduce using rule 127 (TIPO -> integer .)
    primary         reduce using rule 127 (TIPO -> integer .)
    references      reduce using rule 127 (TIPO -> integer .)
    not             reduce using rule 127 (TIPO -> integer .)
    null            reduce using rule 127 (TIPO -> integer .)
    parc            reduce using rule 127 (TIPO -> integer .)
    coma            reduce using rule 127 (TIPO -> integer .)
    ptcoma          reduce using rule 127 (TIPO -> integer .)


state 317

    (128) TIPO -> bigint .

    constraint      reduce using rule 128 (TIPO -> bigint .)
    default         reduce using rule 128 (TIPO -> bigint .)
    primary         reduce using rule 128 (TIPO -> bigint .)
    references      reduce using rule 128 (TIPO -> bigint .)
    not             reduce using rule 128 (TIPO -> bigint .)
    null            reduce using rule 128 (TIPO -> bigint .)
    parc            reduce using rule 128 (TIPO -> bigint .)
    coma            reduce using rule 128 (TIPO -> bigint .)
    ptcoma          reduce using rule 128 (TIPO -> bigint .)


state 318

    (129) TIPO -> decimal . para LEXP parc

    para            shift and go to state 381


state 319

    (130) TIPO -> numeric . para LEXP parc

    para            shift and go to state 382


state 320

    (131) TIPO -> real .

    constraint      reduce using rule 131 (TIPO -> real .)
    default         reduce using rule 131 (TIPO -> real .)
    primary         reduce using rule 131 (TIPO -> real .)
    references      reduce using rule 131 (TIPO -> real .)
    not             reduce using rule 131 (TIPO -> real .)
    null            reduce using rule 131 (TIPO -> real .)
    parc            reduce using rule 131 (TIPO -> real .)
    coma            reduce using rule 131 (TIPO -> real .)
    ptcoma          reduce using rule 131 (TIPO -> real .)


state 321

    (132) TIPO -> double . precision

    precision       shift and go to state 383


state 322

    (133) TIPO -> money .

    constraint      reduce using rule 133 (TIPO -> money .)
    default         reduce using rule 133 (TIPO -> money .)
    primary         reduce using rule 133 (TIPO -> money .)
    references      reduce using rule 133 (TIPO -> money .)
    not             reduce using rule 133 (TIPO -> money .)
    null            reduce using rule 133 (TIPO -> money .)
    parc            reduce using rule 133 (TIPO -> money .)
    coma            reduce using rule 133 (TIPO -> money .)
    ptcoma          reduce using rule 133 (TIPO -> money .)


state 323

    (134) TIPO -> character . varying para int parc
    (136) TIPO -> character . para int parc

    varying         shift and go to state 384
    para            shift and go to state 385


state 324

    (135) TIPO -> varchar . para int parc

    para            shift and go to state 386


state 325

    (137) TIPO -> char . para int parc

    para            shift and go to state 387


state 326

    (138) TIPO -> text .

    constraint      reduce using rule 138 (TIPO -> text .)
    default         reduce using rule 138 (TIPO -> text .)
    primary         reduce using rule 138 (TIPO -> text .)
    references      reduce using rule 138 (TIPO -> text .)
    not             reduce using rule 138 (TIPO -> text .)
    null            reduce using rule 138 (TIPO -> text .)
    parc            reduce using rule 138 (TIPO -> text .)
    coma            reduce using rule 138 (TIPO -> text .)
    ptcoma          reduce using rule 138 (TIPO -> text .)


state 327

    (139) TIPO -> timestamp .
    (140) TIPO -> timestamp . without time zone
    (141) TIPO -> timestamp . para int parc without time zone
    (142) TIPO -> timestamp . with time zone
    (143) TIPO -> timestamp . para int parc with time zone
    (144) TIPO -> timestamp . para int parc

    constraint      reduce using rule 139 (TIPO -> timestamp .)
    default         reduce using rule 139 (TIPO -> timestamp .)
    primary         reduce using rule 139 (TIPO -> timestamp .)
    references      reduce using rule 139 (TIPO -> timestamp .)
    not             reduce using rule 139 (TIPO -> timestamp .)
    null            reduce using rule 139 (TIPO -> timestamp .)
    parc            reduce using rule 139 (TIPO -> timestamp .)
    coma            reduce using rule 139 (TIPO -> timestamp .)
    ptcoma          reduce using rule 139 (TIPO -> timestamp .)
    without         shift and go to state 388
    para            shift and go to state 389
    with            shift and go to state 390


state 328

    (146) TIPO -> time .
    (147) TIPO -> time . without time zone
    (148) TIPO -> time . para int parc without time zone
    (149) TIPO -> time . with time zone
    (150) TIPO -> time . para int parc with time zone
    (151) TIPO -> time . para int parc

    constraint      reduce using rule 146 (TIPO -> time .)
    default         reduce using rule 146 (TIPO -> time .)
    primary         reduce using rule 146 (TIPO -> time .)
    references      reduce using rule 146 (TIPO -> time .)
    not             reduce using rule 146 (TIPO -> time .)
    null            reduce using rule 146 (TIPO -> time .)
    parc            reduce using rule 146 (TIPO -> time .)
    coma            reduce using rule 146 (TIPO -> time .)
    ptcoma          reduce using rule 146 (TIPO -> time .)
    without         shift and go to state 391
    para            shift and go to state 392
    with            shift and go to state 393


state 329

    (145) TIPO -> date .

    constraint      reduce using rule 145 (TIPO -> date .)
    default         reduce using rule 145 (TIPO -> date .)
    primary         reduce using rule 145 (TIPO -> date .)
    references      reduce using rule 145 (TIPO -> date .)
    not             reduce using rule 145 (TIPO -> date .)
    null            reduce using rule 145 (TIPO -> date .)
    parc            reduce using rule 145 (TIPO -> date .)
    coma            reduce using rule 145 (TIPO -> date .)
    ptcoma          reduce using rule 145 (TIPO -> date .)


state 330

    (152) TIPO -> interval .
    (153) TIPO -> interval . para int parc
    (154) TIPO -> interval . cadena
    (155) TIPO -> interval . para int parc cadena

    constraint      reduce using rule 152 (TIPO -> interval .)
    default         reduce using rule 152 (TIPO -> interval .)
    primary         reduce using rule 152 (TIPO -> interval .)
    references      reduce using rule 152 (TIPO -> interval .)
    not             reduce using rule 152 (TIPO -> interval .)
    null            reduce using rule 152 (TIPO -> interval .)
    parc            reduce using rule 152 (TIPO -> interval .)
    coma            reduce using rule 152 (TIPO -> interval .)
    ptcoma          reduce using rule 152 (TIPO -> interval .)
    para            shift and go to state 394
    cadena          shift and go to state 395


state 331

    (156) TIPO -> boolean .

    constraint      reduce using rule 156 (TIPO -> boolean .)
    default         reduce using rule 156 (TIPO -> boolean .)
    primary         reduce using rule 156 (TIPO -> boolean .)
    references      reduce using rule 156 (TIPO -> boolean .)
    not             reduce using rule 156 (TIPO -> boolean .)
    null            reduce using rule 156 (TIPO -> boolean .)
    parc            reduce using rule 156 (TIPO -> boolean .)
    coma            reduce using rule 156 (TIPO -> boolean .)
    ptcoma          reduce using rule 156 (TIPO -> boolean .)


state 332

    (61) CREATETABLE -> create table id para LDEF parc . ptcoma
    (62) CREATETABLE -> create table id para LDEF parc . HERENCIA ptcoma
    (83) HERENCIA -> . inherits para LEXP parc

    ptcoma          shift and go to state 396
    inherits        shift and go to state 398

    HERENCIA                       shift and go to state 397

state 333

    (63) LDEF -> LDEF coma . COLDEF
    (65) COLDEF -> . OPCONST
    (66) COLDEF -> . constraint id OPCONST
    (67) COLDEF -> . id TIPO
    (68) COLDEF -> . id TIPO LOPCOLUMN
    (79) OPCONST -> . primary key para LEXP parc
    (80) OPCONST -> . foreign key para LEXP parc references table para LEXP parc
    (81) OPCONST -> . unique para LEXP parc
    (82) OPCONST -> . check para LEXP parc

    constraint      shift and go to state 259
    id              shift and go to state 255
    primary         shift and go to state 260
    foreign         shift and go to state 261
    unique          shift and go to state 262
    check           shift and go to state 263

    COLDEF                         shift and go to state 399
    OPCONST                        shift and go to state 258

state 334

    (66) COLDEF -> constraint id . OPCONST
    (79) OPCONST -> . primary key para LEXP parc
    (80) OPCONST -> . foreign key para LEXP parc references table para LEXP parc
    (81) OPCONST -> . unique para LEXP parc
    (82) OPCONST -> . check para LEXP parc

    primary         shift and go to state 260
    foreign         shift and go to state 261
    unique          shift and go to state 262
    check           shift and go to state 263

    OPCONST                        shift and go to state 400

state 335

    (79) OPCONST -> primary key . para LEXP parc

    para            shift and go to state 401


state 336

    (80) OPCONST -> foreign key . para LEXP parc references table para LEXP parc

    para            shift and go to state 402


state 337

    (81) OPCONST -> unique para . LEXP parc
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 403
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 338

    (82) OPCONST -> check para . LEXP parc
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 404
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 339

    (84) CREATETYPE -> create type id as enum para . LEXP parc
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 405
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 340

    (48) CREATEDB -> create RD if not exist id .
    (49) CREATEDB -> create RD if not exist id . OPCCDB
    (52) OPCCDB -> . PROPIETARIO
    (53) OPCCDB -> . MODO
    (54) OPCCDB -> . PROPIETARIO MODO
    (57) PROPIETARIO -> . owner igual id
    (58) PROPIETARIO -> . owner id
    (59) MODO -> . mode igual int
    (60) MODO -> . mode int

    ptcoma          reduce using rule 48 (CREATEDB -> create RD if not exist id .)
    owner           shift and go to state 204
    mode            shift and go to state 205

    OPCCDB                         shift and go to state 406
    PROPIETARIO                    shift and go to state 202
    MODO                           shift and go to state 203

state 341

    (57) PROPIETARIO -> owner igual id .

    mode            reduce using rule 57 (PROPIETARIO -> owner igual id .)
    ptcoma          reduce using rule 57 (PROPIETARIO -> owner igual id .)


state 342

    (59) MODO -> mode igual int .

    ptcoma          reduce using rule 59 (MODO -> mode igual int .)


state 343

    (119) LCAMPOS -> id igual EXP .
    (163) EXP -> EXP . mas EXP
    (164) EXP -> EXP . menos EXP
    (165) EXP -> EXP . multiplicacion EXP
    (166) EXP -> EXP . division EXP
    (167) EXP -> EXP . modulo EXP
    (168) EXP -> EXP . elevado EXP
    (169) EXP -> EXP . and EXP
    (170) EXP -> EXP . or EXP
    (171) EXP -> EXP . mayor EXP
    (172) EXP -> EXP . menor EXP
    (173) EXP -> EXP . mayor_igual EXP
    (174) EXP -> EXP . menor_igual EXP
    (175) EXP -> EXP . igual EXP
    (176) EXP -> EXP . diferente1 EXP
    (177) EXP -> EXP . diferente2 EXP
    (178) EXP -> EXP . punto EXP
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (213) PREDICADOS -> EXP . between EXP
    (214) PREDICADOS -> EXP . in para LEXP parc
    (215) PREDICADOS -> EXP . not in para LEXP parc
    (216) PREDICADOS -> EXP . not between EXP
    (217) PREDICADOS -> EXP . between symetric EXP
    (218) PREDICADOS -> EXP . not between symetric EXP
    (219) PREDICADOS -> EXP . is distinct r_from EXP
    (220) PREDICADOS -> EXP . is not distinct r_from EXP
    (221) PREDICADOS -> EXP . is PNULL
    (222) PREDICADOS -> EXP . isnull
    (223) PREDICADOS -> EXP . notnull
    (224) PREDICADOS -> EXP . is true
    (225) PREDICADOS -> EXP . is not true
    (226) PREDICADOS -> EXP . is false
    (227) PREDICADOS -> EXP . is not false
    (228) PREDICADOS -> EXP . is unknown
    (229) PREDICADOS -> EXP . is not unknown

    where           reduce using rule 119 (LCAMPOS -> id igual EXP .)
    id              reduce using rule 119 (LCAMPOS -> id igual EXP .)
    mas             shift and go to state 85
    menos           shift and go to state 86
    multiplicacion  shift and go to state 87
    division        shift and go to state 88
    modulo          shift and go to state 89
    elevado         shift and go to state 90
    and             shift and go to state 91
    or              shift and go to state 92
    mayor           shift and go to state 93
    menor           shift and go to state 94
    mayor_igual     shift and go to state 95
    menor_igual     shift and go to state 96
    igual           shift and go to state 97
    diferente1      shift and go to state 98
    diferente2      shift and go to state 99
    punto           shift and go to state 100
    as              shift and go to state 101
    cadenaString    shift and go to state 102
    cadena          shift and go to state 104
    between         shift and go to state 105
    in              shift and go to state 106
    not             shift and go to state 107
    is              shift and go to state 108
    isnull          shift and go to state 109
    notnull         shift and go to state 110

  ! id              [ shift and go to state 103 ]


state 344

    (120) LCAMPOS -> id igual default .

    where           reduce using rule 120 (LCAMPOS -> id igual default .)
    id              reduce using rule 120 (LCAMPOS -> id igual default .)


state 345

    (118) LCAMPOS -> LCAMPOS id igual . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 407
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 346

    (117) UPDATE -> update id set LCAMPOS where LEXP .
    (124) LEXP -> LEXP . coma EXP

    ptcoma          reduce using rule 117 (UPDATE -> update id set LCAMPOS where LEXP .)
    coma            shift and go to state 82


state 347

    (27) RO -> rename to id .

    ptcoma          reduce using rule 27 (RO -> rename to id .)


state 348

    (28) RO -> owner to id .

    ptcoma          reduce using rule 28 (RO -> owner to id .)


state 349

    (32) OP -> alter column id . set not null
    (33) OP -> alter column id . set null
    (39) alc -> alter column id . type TIPO

    set             shift and go to state 408
    type            shift and go to state 409


state 350

    (43) ADD -> column id . TIPO
    (126) TIPO -> . smallint
    (127) TIPO -> . integer
    (128) TIPO -> . bigint
    (129) TIPO -> . decimal para LEXP parc
    (130) TIPO -> . numeric para LEXP parc
    (131) TIPO -> . real
    (132) TIPO -> . double precision
    (133) TIPO -> . money
    (134) TIPO -> . character varying para int parc
    (135) TIPO -> . varchar para int parc
    (136) TIPO -> . character para int parc
    (137) TIPO -> . char para int parc
    (138) TIPO -> . text
    (139) TIPO -> . timestamp
    (140) TIPO -> . timestamp without time zone
    (141) TIPO -> . timestamp para int parc without time zone
    (142) TIPO -> . timestamp with time zone
    (143) TIPO -> . timestamp para int parc with time zone
    (144) TIPO -> . timestamp para int parc
    (145) TIPO -> . date
    (146) TIPO -> . time
    (147) TIPO -> . time without time zone
    (148) TIPO -> . time para int parc without time zone
    (149) TIPO -> . time with time zone
    (150) TIPO -> . time para int parc with time zone
    (151) TIPO -> . time para int parc
    (152) TIPO -> . interval
    (153) TIPO -> . interval para int parc
    (154) TIPO -> . interval cadena
    (155) TIPO -> . interval para int parc cadena
    (156) TIPO -> . boolean

    smallint        shift and go to state 315
    integer         shift and go to state 316
    bigint          shift and go to state 317
    decimal         shift and go to state 318
    numeric         shift and go to state 319
    real            shift and go to state 320
    double          shift and go to state 321
    money           shift and go to state 322
    character       shift and go to state 323
    varchar         shift and go to state 324
    char            shift and go to state 325
    text            shift and go to state 326
    timestamp       shift and go to state 327
    date            shift and go to state 329
    time            shift and go to state 328
    interval        shift and go to state 330
    boolean         shift and go to state 331

    TIPO                           shift and go to state 410

state 351

    (44) ADD -> check para . LEXP parc
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 411
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 352

    (45) ADD -> constraint id . unique para id parc

    unique          shift and go to state 412


state 353

    (46) ADD -> foreign key . para id parc references id para id parc

    para            shift and go to state 413


state 354

    (41) ALTERDROP -> column . LEXP
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 356
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 355

    (31) OP -> drop column ALTERDROP .

    ptcoma          reduce using rule 31 (OP -> drop column ALTERDROP .)


state 356

    (41) ALTERDROP -> column LEXP .
    (124) LEXP -> LEXP . coma EXP

    ptcoma          reduce using rule 41 (ALTERDROP -> column LEXP .)
    coma            shift and go to state 82


state 357

    (40) ALTERDROP -> constraint id .

    ptcoma          reduce using rule 40 (ALTERDROP -> constraint id .)


state 358

    (42) ALTERDROP -> check id .

    ptcoma          reduce using rule 42 (ALTERDROP -> check id .)


state 359

    (37) listaalc -> listaalc coma alc .

    coma            reduce using rule 37 (listaalc -> listaalc coma alc .)
    ptcoma          reduce using rule 37 (listaalc -> listaalc coma alc .)


state 360

    (39) alc -> alter . column id type TIPO

    column          shift and go to state 414


state 361

    (36) OP -> rename column id . to id

    to              shift and go to state 415


state 362

    (21) INSERT -> insert into id values para LEXP . parc
    (124) LEXP -> LEXP . coma EXP

    parc            shift and go to state 416
    coma            shift and go to state 82


state 363

    (85) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP . HAVING ORDER LIMIT COMBINING
    (110) HAVING -> . having LEXP
    (111) HAVING -> .

  ! shift/reduce conflict for having resolved as shift
    having          shift and go to state 365
    r_from          reduce using rule 111 (HAVING -> .)
    coma            reduce using rule 111 (HAVING -> .)
    limit           reduce using rule 111 (HAVING -> .)
    offset          reduce using rule 111 (HAVING -> .)
    union           reduce using rule 111 (HAVING -> .)
    intersect       reduce using rule 111 (HAVING -> .)
    except          reduce using rule 111 (HAVING -> .)
    ptcoma          reduce using rule 111 (HAVING -> .)
    mas             reduce using rule 111 (HAVING -> .)
    menos           reduce using rule 111 (HAVING -> .)
    multiplicacion  reduce using rule 111 (HAVING -> .)
    division        reduce using rule 111 (HAVING -> .)
    modulo          reduce using rule 111 (HAVING -> .)
    elevado         reduce using rule 111 (HAVING -> .)
    and             reduce using rule 111 (HAVING -> .)
    or              reduce using rule 111 (HAVING -> .)
    mayor           reduce using rule 111 (HAVING -> .)
    menor           reduce using rule 111 (HAVING -> .)
    mayor_igual     reduce using rule 111 (HAVING -> .)
    menor_igual     reduce using rule 111 (HAVING -> .)
    igual           reduce using rule 111 (HAVING -> .)
    diferente1      reduce using rule 111 (HAVING -> .)
    diferente2      reduce using rule 111 (HAVING -> .)
    punto           reduce using rule 111 (HAVING -> .)
    as              reduce using rule 111 (HAVING -> .)
    cadenaString    reduce using rule 111 (HAVING -> .)
    id              reduce using rule 111 (HAVING -> .)
    cadena          reduce using rule 111 (HAVING -> .)
    between         reduce using rule 111 (HAVING -> .)
    in              reduce using rule 111 (HAVING -> .)
    not             reduce using rule 111 (HAVING -> .)
    is              reduce using rule 111 (HAVING -> .)
    isnull          reduce using rule 111 (HAVING -> .)
    notnull         reduce using rule 111 (HAVING -> .)
    parc            reduce using rule 111 (HAVING -> .)
    then            reduce using rule 111 (HAVING -> .)
    where           reduce using rule 111 (HAVING -> .)
    group           reduce using rule 111 (HAVING -> .)
    order           reduce using rule 111 (HAVING -> .)
    end             reduce using rule 111 (HAVING -> .)
    else            reduce using rule 111 (HAVING -> .)
    when            reduce using rule 111 (HAVING -> .)
    constraint      reduce using rule 111 (HAVING -> .)
    default         reduce using rule 111 (HAVING -> .)
    primary         reduce using rule 111 (HAVING -> .)
    references      reduce using rule 111 (HAVING -> .)
    null            reduce using rule 111 (HAVING -> .)
    asc             reduce using rule 111 (HAVING -> .)
    desc            reduce using rule 111 (HAVING -> .)

  ! having          [ reduce using rule 111 (HAVING -> .) ]

    HAVING                         shift and go to state 417

state 364

    (86) SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING . ORDER LIMIT COMBINING
    (112) ORDER -> . order by LEXP ORD
    (113) ORDER -> . order by LEXP
    (114) ORDER -> .

  ! shift/reduce conflict for order resolved as shift
    order           shift and go to state 419
    r_from          reduce using rule 114 (ORDER -> .)
    coma            reduce using rule 114 (ORDER -> .)
    limit           reduce using rule 114 (ORDER -> .)
    offset          reduce using rule 114 (ORDER -> .)
    union           reduce using rule 114 (ORDER -> .)
    intersect       reduce using rule 114 (ORDER -> .)
    except          reduce using rule 114 (ORDER -> .)
    ptcoma          reduce using rule 114 (ORDER -> .)
    mas             reduce using rule 114 (ORDER -> .)
    menos           reduce using rule 114 (ORDER -> .)
    multiplicacion  reduce using rule 114 (ORDER -> .)
    division        reduce using rule 114 (ORDER -> .)
    modulo          reduce using rule 114 (ORDER -> .)
    elevado         reduce using rule 114 (ORDER -> .)
    and             reduce using rule 114 (ORDER -> .)
    or              reduce using rule 114 (ORDER -> .)
    mayor           reduce using rule 114 (ORDER -> .)
    menor           reduce using rule 114 (ORDER -> .)
    mayor_igual     reduce using rule 114 (ORDER -> .)
    menor_igual     reduce using rule 114 (ORDER -> .)
    igual           reduce using rule 114 (ORDER -> .)
    diferente1      reduce using rule 114 (ORDER -> .)
    diferente2      reduce using rule 114 (ORDER -> .)
    punto           reduce using rule 114 (ORDER -> .)
    as              reduce using rule 114 (ORDER -> .)
    cadenaString    reduce using rule 114 (ORDER -> .)
    id              reduce using rule 114 (ORDER -> .)
    cadena          reduce using rule 114 (ORDER -> .)
    between         reduce using rule 114 (ORDER -> .)
    in              reduce using rule 114 (ORDER -> .)
    not             reduce using rule 114 (ORDER -> .)
    is              reduce using rule 114 (ORDER -> .)
    isnull          reduce using rule 114 (ORDER -> .)
    notnull         reduce using rule 114 (ORDER -> .)
    parc            reduce using rule 114 (ORDER -> .)
    then            reduce using rule 114 (ORDER -> .)
    where           reduce using rule 114 (ORDER -> .)
    group           reduce using rule 114 (ORDER -> .)
    having          reduce using rule 114 (ORDER -> .)
    end             reduce using rule 114 (ORDER -> .)
    else            reduce using rule 114 (ORDER -> .)
    when            reduce using rule 114 (ORDER -> .)
    constraint      reduce using rule 114 (ORDER -> .)
    default         reduce using rule 114 (ORDER -> .)
    primary         reduce using rule 114 (ORDER -> .)
    references      reduce using rule 114 (ORDER -> .)
    null            reduce using rule 114 (ORDER -> .)
    asc             reduce using rule 114 (ORDER -> .)
    desc            reduce using rule 114 (ORDER -> .)

  ! order           [ reduce using rule 114 (ORDER -> .) ]

    ORDER                          shift and go to state 418

state 365

    (110) HAVING -> having . LEXP
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 420
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 366

    (108) GROUP -> group by . LEXP
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 421
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 367

    (123) EXIST -> exist para . SELECT parc
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING

    select          shift and go to state 15

    SELECT                         shift and go to state 422

state 368

    (99) WHERE -> union all LEXP .
    (124) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 99 (WHERE -> union all LEXP .)
    limit           reduce using rule 99 (WHERE -> union all LEXP .)
    offset          reduce using rule 99 (WHERE -> union all LEXP .)
    union           reduce using rule 99 (WHERE -> union all LEXP .)
    intersect       reduce using rule 99 (WHERE -> union all LEXP .)
    except          reduce using rule 99 (WHERE -> union all LEXP .)
    ptcoma          reduce using rule 99 (WHERE -> union all LEXP .)
    mas             reduce using rule 99 (WHERE -> union all LEXP .)
    menos           reduce using rule 99 (WHERE -> union all LEXP .)
    multiplicacion  reduce using rule 99 (WHERE -> union all LEXP .)
    division        reduce using rule 99 (WHERE -> union all LEXP .)
    modulo          reduce using rule 99 (WHERE -> union all LEXP .)
    elevado         reduce using rule 99 (WHERE -> union all LEXP .)
    and             reduce using rule 99 (WHERE -> union all LEXP .)
    or              reduce using rule 99 (WHERE -> union all LEXP .)
    mayor           reduce using rule 99 (WHERE -> union all LEXP .)
    menor           reduce using rule 99 (WHERE -> union all LEXP .)
    mayor_igual     reduce using rule 99 (WHERE -> union all LEXP .)
    menor_igual     reduce using rule 99 (WHERE -> union all LEXP .)
    igual           reduce using rule 99 (WHERE -> union all LEXP .)
    diferente1      reduce using rule 99 (WHERE -> union all LEXP .)
    diferente2      reduce using rule 99 (WHERE -> union all LEXP .)
    punto           reduce using rule 99 (WHERE -> union all LEXP .)
    as              reduce using rule 99 (WHERE -> union all LEXP .)
    cadenaString    reduce using rule 99 (WHERE -> union all LEXP .)
    id              reduce using rule 99 (WHERE -> union all LEXP .)
    cadena          reduce using rule 99 (WHERE -> union all LEXP .)
    between         reduce using rule 99 (WHERE -> union all LEXP .)
    in              reduce using rule 99 (WHERE -> union all LEXP .)
    not             reduce using rule 99 (WHERE -> union all LEXP .)
    is              reduce using rule 99 (WHERE -> union all LEXP .)
    isnull          reduce using rule 99 (WHERE -> union all LEXP .)
    notnull         reduce using rule 99 (WHERE -> union all LEXP .)
    parc            reduce using rule 99 (WHERE -> union all LEXP .)
    then            reduce using rule 99 (WHERE -> union all LEXP .)
    where           reduce using rule 99 (WHERE -> union all LEXP .)
    group           reduce using rule 99 (WHERE -> union all LEXP .)
    having          reduce using rule 99 (WHERE -> union all LEXP .)
    order           reduce using rule 99 (WHERE -> union all LEXP .)
    end             reduce using rule 99 (WHERE -> union all LEXP .)
    else            reduce using rule 99 (WHERE -> union all LEXP .)
    when            reduce using rule 99 (WHERE -> union all LEXP .)
    constraint      reduce using rule 99 (WHERE -> union all LEXP .)
    default         reduce using rule 99 (WHERE -> union all LEXP .)
    primary         reduce using rule 99 (WHERE -> union all LEXP .)
    references      reduce using rule 99 (WHERE -> union all LEXP .)
    null            reduce using rule 99 (WHERE -> union all LEXP .)
    asc             reduce using rule 99 (WHERE -> union all LEXP .)
    desc            reduce using rule 99 (WHERE -> union all LEXP .)
    coma            shift and go to state 82

  ! coma            [ reduce using rule 99 (WHERE -> union all LEXP .) ]


state 369

    (182) EXP -> para EXP . parc
    (125) LEXP -> EXP .
    (163) EXP -> EXP . mas EXP
    (164) EXP -> EXP . menos EXP
    (165) EXP -> EXP . multiplicacion EXP
    (166) EXP -> EXP . division EXP
    (167) EXP -> EXP . modulo EXP
    (168) EXP -> EXP . elevado EXP
    (169) EXP -> EXP . and EXP
    (170) EXP -> EXP . or EXP
    (171) EXP -> EXP . mayor EXP
    (172) EXP -> EXP . menor EXP
    (173) EXP -> EXP . mayor_igual EXP
    (174) EXP -> EXP . menor_igual EXP
    (175) EXP -> EXP . igual EXP
    (176) EXP -> EXP . diferente1 EXP
    (177) EXP -> EXP . diferente2 EXP
    (178) EXP -> EXP . punto EXP
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (213) PREDICADOS -> EXP . between EXP
    (214) PREDICADOS -> EXP . in para LEXP parc
    (215) PREDICADOS -> EXP . not in para LEXP parc
    (216) PREDICADOS -> EXP . not between EXP
    (217) PREDICADOS -> EXP . between symetric EXP
    (218) PREDICADOS -> EXP . not between symetric EXP
    (219) PREDICADOS -> EXP . is distinct r_from EXP
    (220) PREDICADOS -> EXP . is not distinct r_from EXP
    (221) PREDICADOS -> EXP . is PNULL
    (222) PREDICADOS -> EXP . isnull
    (223) PREDICADOS -> EXP . notnull
    (224) PREDICADOS -> EXP . is true
    (225) PREDICADOS -> EXP . is not true
    (226) PREDICADOS -> EXP . is false
    (227) PREDICADOS -> EXP . is not false
    (228) PREDICADOS -> EXP . is unknown
    (229) PREDICADOS -> EXP . is not unknown

  ! shift/reduce conflict for parc resolved as shift
    parc            shift and go to state 183
    coma            reduce using rule 125 (LEXP -> EXP .)
    mas             shift and go to state 85
    menos           shift and go to state 86
    multiplicacion  shift and go to state 87
    division        shift and go to state 88
    modulo          shift and go to state 89
    elevado         shift and go to state 90
    and             shift and go to state 91
    or              shift and go to state 92
    mayor           shift and go to state 93
    menor           shift and go to state 94
    mayor_igual     shift and go to state 95
    menor_igual     shift and go to state 96
    igual           shift and go to state 97
    diferente1      shift and go to state 98
    diferente2      shift and go to state 99
    punto           shift and go to state 100
    as              shift and go to state 101
    cadenaString    shift and go to state 102
    id              shift and go to state 103
    cadena          shift and go to state 104
    between         shift and go to state 105
    in              shift and go to state 106
    not             shift and go to state 107
    is              shift and go to state 108
    isnull          shift and go to state 109
    notnull         shift and go to state 110

  ! parc            [ reduce using rule 125 (LEXP -> EXP .) ]


state 370

    (215) PREDICADOS -> EXP not in para LEXP parc .

    r_from          reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    coma            reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    limit           reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    offset          reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    union           reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    intersect       reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    except          reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    ptcoma          reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    mas             reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    menos           reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    multiplicacion  reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    division        reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    modulo          reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    elevado         reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    and             reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    or              reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    mayor           reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    menor           reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    mayor_igual     reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    menor_igual     reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    igual           reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    diferente1      reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    diferente2      reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    punto           reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    as              reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    cadenaString    reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    id              reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    cadena          reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    between         reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    in              reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    not             reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    is              reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    isnull          reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    notnull         reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    parc            reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    then            reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    where           reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    group           reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    having          reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    order           reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    end             reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    else            reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    when            reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    constraint      reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    default         reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    primary         reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    references      reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    null            reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    asc             reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)
    desc            reduce using rule 215 (PREDICADOS -> EXP not in para LEXP parc .)


state 371

    (220) PREDICADOS -> EXP is not distinct r_from EXP .
    (163) EXP -> EXP . mas EXP
    (164) EXP -> EXP . menos EXP
    (165) EXP -> EXP . multiplicacion EXP
    (166) EXP -> EXP . division EXP
    (167) EXP -> EXP . modulo EXP
    (168) EXP -> EXP . elevado EXP
    (169) EXP -> EXP . and EXP
    (170) EXP -> EXP . or EXP
    (171) EXP -> EXP . mayor EXP
    (172) EXP -> EXP . menor EXP
    (173) EXP -> EXP . mayor_igual EXP
    (174) EXP -> EXP . menor_igual EXP
    (175) EXP -> EXP . igual EXP
    (176) EXP -> EXP . diferente1 EXP
    (177) EXP -> EXP . diferente2 EXP
    (178) EXP -> EXP . punto EXP
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (213) PREDICADOS -> EXP . between EXP
    (214) PREDICADOS -> EXP . in para LEXP parc
    (215) PREDICADOS -> EXP . not in para LEXP parc
    (216) PREDICADOS -> EXP . not between EXP
    (217) PREDICADOS -> EXP . between symetric EXP
    (218) PREDICADOS -> EXP . not between symetric EXP
    (219) PREDICADOS -> EXP . is distinct r_from EXP
    (220) PREDICADOS -> EXP . is not distinct r_from EXP
    (221) PREDICADOS -> EXP . is PNULL
    (222) PREDICADOS -> EXP . isnull
    (223) PREDICADOS -> EXP . notnull
    (224) PREDICADOS -> EXP . is true
    (225) PREDICADOS -> EXP . is not true
    (226) PREDICADOS -> EXP . is false
    (227) PREDICADOS -> EXP . is not false
    (228) PREDICADOS -> EXP . is unknown
    (229) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    coma            reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    limit           reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    offset          reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    union           reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    intersect       reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    except          reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    ptcoma          reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    mas             reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    menos           reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    multiplicacion  reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    division        reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    modulo          reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    elevado         reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    mayor           reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    menor           reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    mayor_igual     reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    menor_igual     reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    igual           reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    diferente1      reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    diferente2      reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    punto           reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    as              reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    cadenaString    reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    id              reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    cadena          reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    between         reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    in              reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    is              reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    isnull          reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    notnull         reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    parc            reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    then            reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    where           reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    group           reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    having          reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    order           reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    end             reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    else            reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    when            reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    constraint      reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    default         reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    primary         reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    references      reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    null            reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    asc             reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    desc            reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .)
    and             shift and go to state 91
    or              shift and go to state 92
    not             shift and go to state 107

  ! and             [ reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .) ]
  ! or              [ reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .) ]
  ! not             [ reduce using rule 220 (PREDICADOS -> EXP is not distinct r_from EXP .) ]
  ! mas             [ shift and go to state 85 ]
  ! menos           [ shift and go to state 86 ]
  ! multiplicacion  [ shift and go to state 87 ]
  ! division        [ shift and go to state 88 ]
  ! modulo          [ shift and go to state 89 ]
  ! elevado         [ shift and go to state 90 ]
  ! mayor           [ shift and go to state 93 ]
  ! menor           [ shift and go to state 94 ]
  ! mayor_igual     [ shift and go to state 95 ]
  ! menor_igual     [ shift and go to state 96 ]
  ! igual           [ shift and go to state 97 ]
  ! diferente1      [ shift and go to state 98 ]
  ! diferente2      [ shift and go to state 99 ]
  ! punto           [ shift and go to state 100 ]
  ! as              [ shift and go to state 101 ]
  ! cadenaString    [ shift and go to state 102 ]
  ! id              [ shift and go to state 103 ]
  ! cadena          [ shift and go to state 104 ]
  ! between         [ shift and go to state 105 ]
  ! in              [ shift and go to state 106 ]
  ! is              [ shift and go to state 108 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]


state 372

    (195) EXP -> extract para FIELDS r_from timestamp cadena . parc

    parc            shift and go to state 423


state 373

    (68) COLDEF -> id TIPO LOPCOLUMN .
    (69) LOPCOLUMN -> LOPCOLUMN . OPCOLUMN
    (71) OPCOLUMN -> . constraint id unique
    (72) OPCOLUMN -> . constraint id check para EXP parc
    (73) OPCOLUMN -> . default EXP
    (74) OPCOLUMN -> . PNULL
    (75) OPCOLUMN -> . primary key
    (76) OPCOLUMN -> . references id
    (77) PNULL -> . not null
    (78) PNULL -> . null

    parc            reduce using rule 68 (COLDEF -> id TIPO LOPCOLUMN .)
    coma            reduce using rule 68 (COLDEF -> id TIPO LOPCOLUMN .)
    constraint      shift and go to state 375
    default         shift and go to state 376
    primary         shift and go to state 378
    references      shift and go to state 379
    not             shift and go to state 380
    null            shift and go to state 62

    OPCOLUMN                       shift and go to state 424
    PNULL                          shift and go to state 377

state 374

    (70) LOPCOLUMN -> OPCOLUMN .

    constraint      reduce using rule 70 (LOPCOLUMN -> OPCOLUMN .)
    default         reduce using rule 70 (LOPCOLUMN -> OPCOLUMN .)
    primary         reduce using rule 70 (LOPCOLUMN -> OPCOLUMN .)
    references      reduce using rule 70 (LOPCOLUMN -> OPCOLUMN .)
    not             reduce using rule 70 (LOPCOLUMN -> OPCOLUMN .)
    null            reduce using rule 70 (LOPCOLUMN -> OPCOLUMN .)
    parc            reduce using rule 70 (LOPCOLUMN -> OPCOLUMN .)
    coma            reduce using rule 70 (LOPCOLUMN -> OPCOLUMN .)


state 375

    (71) OPCOLUMN -> constraint . id unique
    (72) OPCOLUMN -> constraint . id check para EXP parc

    id              shift and go to state 425


state 376

    (73) OPCOLUMN -> default . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 426
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 377

    (74) OPCOLUMN -> PNULL .

    constraint      reduce using rule 74 (OPCOLUMN -> PNULL .)
    default         reduce using rule 74 (OPCOLUMN -> PNULL .)
    primary         reduce using rule 74 (OPCOLUMN -> PNULL .)
    references      reduce using rule 74 (OPCOLUMN -> PNULL .)
    not             reduce using rule 74 (OPCOLUMN -> PNULL .)
    null            reduce using rule 74 (OPCOLUMN -> PNULL .)
    parc            reduce using rule 74 (OPCOLUMN -> PNULL .)
    coma            reduce using rule 74 (OPCOLUMN -> PNULL .)


state 378

    (75) OPCOLUMN -> primary . key

    key             shift and go to state 427


state 379

    (76) OPCOLUMN -> references . id

    id              shift and go to state 428


state 380

    (77) PNULL -> not . null

    null            shift and go to state 248


state 381

    (129) TIPO -> decimal para . LEXP parc
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 429
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 382

    (130) TIPO -> numeric para . LEXP parc
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 430
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 383

    (132) TIPO -> double precision .

    constraint      reduce using rule 132 (TIPO -> double precision .)
    default         reduce using rule 132 (TIPO -> double precision .)
    primary         reduce using rule 132 (TIPO -> double precision .)
    references      reduce using rule 132 (TIPO -> double precision .)
    not             reduce using rule 132 (TIPO -> double precision .)
    null            reduce using rule 132 (TIPO -> double precision .)
    parc            reduce using rule 132 (TIPO -> double precision .)
    coma            reduce using rule 132 (TIPO -> double precision .)
    ptcoma          reduce using rule 132 (TIPO -> double precision .)


state 384

    (134) TIPO -> character varying . para int parc

    para            shift and go to state 431


state 385

    (136) TIPO -> character para . int parc

    int             shift and go to state 432


state 386

    (135) TIPO -> varchar para . int parc

    int             shift and go to state 433


state 387

    (137) TIPO -> char para . int parc

    int             shift and go to state 434


state 388

    (140) TIPO -> timestamp without . time zone

    time            shift and go to state 435


state 389

    (141) TIPO -> timestamp para . int parc without time zone
    (143) TIPO -> timestamp para . int parc with time zone
    (144) TIPO -> timestamp para . int parc

    int             shift and go to state 436


state 390

    (142) TIPO -> timestamp with . time zone

    time            shift and go to state 437


state 391

    (147) TIPO -> time without . time zone

    time            shift and go to state 438


state 392

    (148) TIPO -> time para . int parc without time zone
    (150) TIPO -> time para . int parc with time zone
    (151) TIPO -> time para . int parc

    int             shift and go to state 439


state 393

    (149) TIPO -> time with . time zone

    time            shift and go to state 440


state 394

    (153) TIPO -> interval para . int parc
    (155) TIPO -> interval para . int parc cadena

    int             shift and go to state 441


state 395

    (154) TIPO -> interval cadena .

    constraint      reduce using rule 154 (TIPO -> interval cadena .)
    default         reduce using rule 154 (TIPO -> interval cadena .)
    primary         reduce using rule 154 (TIPO -> interval cadena .)
    references      reduce using rule 154 (TIPO -> interval cadena .)
    not             reduce using rule 154 (TIPO -> interval cadena .)
    null            reduce using rule 154 (TIPO -> interval cadena .)
    parc            reduce using rule 154 (TIPO -> interval cadena .)
    coma            reduce using rule 154 (TIPO -> interval cadena .)
    ptcoma          reduce using rule 154 (TIPO -> interval cadena .)


state 396

    (61) CREATETABLE -> create table id para LDEF parc ptcoma .

    select          reduce using rule 61 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    create          reduce using rule 61 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    update          reduce using rule 61 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    delete          reduce using rule 61 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    alter           reduce using rule 61 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    drop            reduce using rule 61 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    insert          reduce using rule 61 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    case            reduce using rule 61 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    show            reduce using rule 61 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    $end            reduce using rule 61 (CREATETABLE -> create table id para LDEF parc ptcoma .)


state 397

    (62) CREATETABLE -> create table id para LDEF parc HERENCIA . ptcoma

    ptcoma          shift and go to state 442


state 398

    (83) HERENCIA -> inherits . para LEXP parc

    para            shift and go to state 443


state 399

    (63) LDEF -> LDEF coma COLDEF .

    parc            reduce using rule 63 (LDEF -> LDEF coma COLDEF .)
    coma            reduce using rule 63 (LDEF -> LDEF coma COLDEF .)


state 400

    (66) COLDEF -> constraint id OPCONST .

    parc            reduce using rule 66 (COLDEF -> constraint id OPCONST .)
    coma            reduce using rule 66 (COLDEF -> constraint id OPCONST .)


state 401

    (79) OPCONST -> primary key para . LEXP parc
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 444
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 402

    (80) OPCONST -> foreign key para . LEXP parc references table para LEXP parc
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 445
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 403

    (81) OPCONST -> unique para LEXP . parc
    (124) LEXP -> LEXP . coma EXP

    parc            shift and go to state 446
    coma            shift and go to state 82


state 404

    (82) OPCONST -> check para LEXP . parc
    (124) LEXP -> LEXP . coma EXP

    parc            shift and go to state 447
    coma            shift and go to state 82


state 405

    (84) CREATETYPE -> create type id as enum para LEXP . parc
    (124) LEXP -> LEXP . coma EXP

    parc            shift and go to state 448
    coma            shift and go to state 82


state 406

    (49) CREATEDB -> create RD if not exist id OPCCDB .

    ptcoma          reduce using rule 49 (CREATEDB -> create RD if not exist id OPCCDB .)


state 407

    (118) LCAMPOS -> LCAMPOS id igual EXP .
    (163) EXP -> EXP . mas EXP
    (164) EXP -> EXP . menos EXP
    (165) EXP -> EXP . multiplicacion EXP
    (166) EXP -> EXP . division EXP
    (167) EXP -> EXP . modulo EXP
    (168) EXP -> EXP . elevado EXP
    (169) EXP -> EXP . and EXP
    (170) EXP -> EXP . or EXP
    (171) EXP -> EXP . mayor EXP
    (172) EXP -> EXP . menor EXP
    (173) EXP -> EXP . mayor_igual EXP
    (174) EXP -> EXP . menor_igual EXP
    (175) EXP -> EXP . igual EXP
    (176) EXP -> EXP . diferente1 EXP
    (177) EXP -> EXP . diferente2 EXP
    (178) EXP -> EXP . punto EXP
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (213) PREDICADOS -> EXP . between EXP
    (214) PREDICADOS -> EXP . in para LEXP parc
    (215) PREDICADOS -> EXP . not in para LEXP parc
    (216) PREDICADOS -> EXP . not between EXP
    (217) PREDICADOS -> EXP . between symetric EXP
    (218) PREDICADOS -> EXP . not between symetric EXP
    (219) PREDICADOS -> EXP . is distinct r_from EXP
    (220) PREDICADOS -> EXP . is not distinct r_from EXP
    (221) PREDICADOS -> EXP . is PNULL
    (222) PREDICADOS -> EXP . isnull
    (223) PREDICADOS -> EXP . notnull
    (224) PREDICADOS -> EXP . is true
    (225) PREDICADOS -> EXP . is not true
    (226) PREDICADOS -> EXP . is false
    (227) PREDICADOS -> EXP . is not false
    (228) PREDICADOS -> EXP . is unknown
    (229) PREDICADOS -> EXP . is not unknown

    where           reduce using rule 118 (LCAMPOS -> LCAMPOS id igual EXP .)
    id              reduce using rule 118 (LCAMPOS -> LCAMPOS id igual EXP .)
    mas             shift and go to state 85
    menos           shift and go to state 86
    multiplicacion  shift and go to state 87
    division        shift and go to state 88
    modulo          shift and go to state 89
    elevado         shift and go to state 90
    and             shift and go to state 91
    or              shift and go to state 92
    mayor           shift and go to state 93
    menor           shift and go to state 94
    mayor_igual     shift and go to state 95
    menor_igual     shift and go to state 96
    igual           shift and go to state 97
    diferente1      shift and go to state 98
    diferente2      shift and go to state 99
    punto           shift and go to state 100
    as              shift and go to state 101
    cadenaString    shift and go to state 102
    cadena          shift and go to state 104
    between         shift and go to state 105
    in              shift and go to state 106
    not             shift and go to state 107
    is              shift and go to state 108
    isnull          shift and go to state 109
    notnull         shift and go to state 110

  ! id              [ shift and go to state 103 ]


state 408

    (32) OP -> alter column id set . not null
    (33) OP -> alter column id set . null

    not             shift and go to state 449
    null            shift and go to state 450


state 409

    (39) alc -> alter column id type . TIPO
    (126) TIPO -> . smallint
    (127) TIPO -> . integer
    (128) TIPO -> . bigint
    (129) TIPO -> . decimal para LEXP parc
    (130) TIPO -> . numeric para LEXP parc
    (131) TIPO -> . real
    (132) TIPO -> . double precision
    (133) TIPO -> . money
    (134) TIPO -> . character varying para int parc
    (135) TIPO -> . varchar para int parc
    (136) TIPO -> . character para int parc
    (137) TIPO -> . char para int parc
    (138) TIPO -> . text
    (139) TIPO -> . timestamp
    (140) TIPO -> . timestamp without time zone
    (141) TIPO -> . timestamp para int parc without time zone
    (142) TIPO -> . timestamp with time zone
    (143) TIPO -> . timestamp para int parc with time zone
    (144) TIPO -> . timestamp para int parc
    (145) TIPO -> . date
    (146) TIPO -> . time
    (147) TIPO -> . time without time zone
    (148) TIPO -> . time para int parc without time zone
    (149) TIPO -> . time with time zone
    (150) TIPO -> . time para int parc with time zone
    (151) TIPO -> . time para int parc
    (152) TIPO -> . interval
    (153) TIPO -> . interval para int parc
    (154) TIPO -> . interval cadena
    (155) TIPO -> . interval para int parc cadena
    (156) TIPO -> . boolean

    smallint        shift and go to state 315
    integer         shift and go to state 316
    bigint          shift and go to state 317
    decimal         shift and go to state 318
    numeric         shift and go to state 319
    real            shift and go to state 320
    double          shift and go to state 321
    money           shift and go to state 322
    character       shift and go to state 323
    varchar         shift and go to state 324
    char            shift and go to state 325
    text            shift and go to state 326
    timestamp       shift and go to state 327
    date            shift and go to state 329
    time            shift and go to state 328
    interval        shift and go to state 330
    boolean         shift and go to state 331

    TIPO                           shift and go to state 451

state 410

    (43) ADD -> column id TIPO .

    ptcoma          reduce using rule 43 (ADD -> column id TIPO .)


state 411

    (44) ADD -> check para LEXP . parc
    (124) LEXP -> LEXP . coma EXP

    parc            shift and go to state 452
    coma            shift and go to state 82


state 412

    (45) ADD -> constraint id unique . para id parc

    para            shift and go to state 453


state 413

    (46) ADD -> foreign key para . id parc references id para id parc

    id              shift and go to state 454


state 414

    (39) alc -> alter column . id type TIPO

    id              shift and go to state 455


state 415

    (36) OP -> rename column id to . id

    id              shift and go to state 456


state 416

    (21) INSERT -> insert into id values para LEXP parc .

    ptcoma          reduce using rule 21 (INSERT -> insert into id values para LEXP parc .)


state 417

    (85) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING . ORDER LIMIT COMBINING
    (112) ORDER -> . order by LEXP ORD
    (113) ORDER -> . order by LEXP
    (114) ORDER -> .

  ! shift/reduce conflict for order resolved as shift
    order           shift and go to state 419
    r_from          reduce using rule 114 (ORDER -> .)
    coma            reduce using rule 114 (ORDER -> .)
    limit           reduce using rule 114 (ORDER -> .)
    offset          reduce using rule 114 (ORDER -> .)
    union           reduce using rule 114 (ORDER -> .)
    intersect       reduce using rule 114 (ORDER -> .)
    except          reduce using rule 114 (ORDER -> .)
    ptcoma          reduce using rule 114 (ORDER -> .)
    mas             reduce using rule 114 (ORDER -> .)
    menos           reduce using rule 114 (ORDER -> .)
    multiplicacion  reduce using rule 114 (ORDER -> .)
    division        reduce using rule 114 (ORDER -> .)
    modulo          reduce using rule 114 (ORDER -> .)
    elevado         reduce using rule 114 (ORDER -> .)
    and             reduce using rule 114 (ORDER -> .)
    or              reduce using rule 114 (ORDER -> .)
    mayor           reduce using rule 114 (ORDER -> .)
    menor           reduce using rule 114 (ORDER -> .)
    mayor_igual     reduce using rule 114 (ORDER -> .)
    menor_igual     reduce using rule 114 (ORDER -> .)
    igual           reduce using rule 114 (ORDER -> .)
    diferente1      reduce using rule 114 (ORDER -> .)
    diferente2      reduce using rule 114 (ORDER -> .)
    punto           reduce using rule 114 (ORDER -> .)
    as              reduce using rule 114 (ORDER -> .)
    cadenaString    reduce using rule 114 (ORDER -> .)
    id              reduce using rule 114 (ORDER -> .)
    cadena          reduce using rule 114 (ORDER -> .)
    between         reduce using rule 114 (ORDER -> .)
    in              reduce using rule 114 (ORDER -> .)
    not             reduce using rule 114 (ORDER -> .)
    is              reduce using rule 114 (ORDER -> .)
    isnull          reduce using rule 114 (ORDER -> .)
    notnull         reduce using rule 114 (ORDER -> .)
    parc            reduce using rule 114 (ORDER -> .)
    then            reduce using rule 114 (ORDER -> .)
    where           reduce using rule 114 (ORDER -> .)
    group           reduce using rule 114 (ORDER -> .)
    having          reduce using rule 114 (ORDER -> .)
    end             reduce using rule 114 (ORDER -> .)
    else            reduce using rule 114 (ORDER -> .)
    when            reduce using rule 114 (ORDER -> .)
    constraint      reduce using rule 114 (ORDER -> .)
    default         reduce using rule 114 (ORDER -> .)
    primary         reduce using rule 114 (ORDER -> .)
    references      reduce using rule 114 (ORDER -> .)
    null            reduce using rule 114 (ORDER -> .)
    asc             reduce using rule 114 (ORDER -> .)
    desc            reduce using rule 114 (ORDER -> .)

  ! order           [ reduce using rule 114 (ORDER -> .) ]

    ORDER                          shift and go to state 457

state 418

    (86) SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER . LIMIT COMBINING
    (88) LIMIT -> . limit int
    (89) LIMIT -> . limit all
    (90) LIMIT -> . offset int
    (91) LIMIT -> . limit int offset int
    (92) LIMIT -> . offset int limit int
    (93) LIMIT -> . limit all offset int
    (94) LIMIT -> . offset int limit all
    (95) LIMIT -> .

  ! shift/reduce conflict for limit resolved as shift
  ! shift/reduce conflict for offset resolved as shift
    limit           shift and go to state 83
    offset          shift and go to state 84
    union           reduce using rule 95 (LIMIT -> .)
    intersect       reduce using rule 95 (LIMIT -> .)
    except          reduce using rule 95 (LIMIT -> .)
    ptcoma          reduce using rule 95 (LIMIT -> .)
    r_from          reduce using rule 95 (LIMIT -> .)
    coma            reduce using rule 95 (LIMIT -> .)
    mas             reduce using rule 95 (LIMIT -> .)
    menos           reduce using rule 95 (LIMIT -> .)
    multiplicacion  reduce using rule 95 (LIMIT -> .)
    division        reduce using rule 95 (LIMIT -> .)
    modulo          reduce using rule 95 (LIMIT -> .)
    elevado         reduce using rule 95 (LIMIT -> .)
    and             reduce using rule 95 (LIMIT -> .)
    or              reduce using rule 95 (LIMIT -> .)
    mayor           reduce using rule 95 (LIMIT -> .)
    menor           reduce using rule 95 (LIMIT -> .)
    mayor_igual     reduce using rule 95 (LIMIT -> .)
    menor_igual     reduce using rule 95 (LIMIT -> .)
    igual           reduce using rule 95 (LIMIT -> .)
    diferente1      reduce using rule 95 (LIMIT -> .)
    diferente2      reduce using rule 95 (LIMIT -> .)
    punto           reduce using rule 95 (LIMIT -> .)
    as              reduce using rule 95 (LIMIT -> .)
    cadenaString    reduce using rule 95 (LIMIT -> .)
    id              reduce using rule 95 (LIMIT -> .)
    cadena          reduce using rule 95 (LIMIT -> .)
    between         reduce using rule 95 (LIMIT -> .)
    in              reduce using rule 95 (LIMIT -> .)
    not             reduce using rule 95 (LIMIT -> .)
    is              reduce using rule 95 (LIMIT -> .)
    isnull          reduce using rule 95 (LIMIT -> .)
    notnull         reduce using rule 95 (LIMIT -> .)
    parc            reduce using rule 95 (LIMIT -> .)
    then            reduce using rule 95 (LIMIT -> .)
    where           reduce using rule 95 (LIMIT -> .)
    group           reduce using rule 95 (LIMIT -> .)
    having          reduce using rule 95 (LIMIT -> .)
    order           reduce using rule 95 (LIMIT -> .)
    end             reduce using rule 95 (LIMIT -> .)
    else            reduce using rule 95 (LIMIT -> .)
    when            reduce using rule 95 (LIMIT -> .)
    constraint      reduce using rule 95 (LIMIT -> .)
    default         reduce using rule 95 (LIMIT -> .)
    primary         reduce using rule 95 (LIMIT -> .)
    references      reduce using rule 95 (LIMIT -> .)
    null            reduce using rule 95 (LIMIT -> .)
    asc             reduce using rule 95 (LIMIT -> .)
    desc            reduce using rule 95 (LIMIT -> .)

  ! limit           [ reduce using rule 95 (LIMIT -> .) ]
  ! offset          [ reduce using rule 95 (LIMIT -> .) ]

    LIMIT                          shift and go to state 458

state 419

    (112) ORDER -> order . by LEXP ORD
    (113) ORDER -> order . by LEXP

    by              shift and go to state 459


state 420

    (110) HAVING -> having LEXP .
    (124) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 110 (HAVING -> having LEXP .)
    limit           reduce using rule 110 (HAVING -> having LEXP .)
    offset          reduce using rule 110 (HAVING -> having LEXP .)
    union           reduce using rule 110 (HAVING -> having LEXP .)
    intersect       reduce using rule 110 (HAVING -> having LEXP .)
    except          reduce using rule 110 (HAVING -> having LEXP .)
    ptcoma          reduce using rule 110 (HAVING -> having LEXP .)
    mas             reduce using rule 110 (HAVING -> having LEXP .)
    menos           reduce using rule 110 (HAVING -> having LEXP .)
    multiplicacion  reduce using rule 110 (HAVING -> having LEXP .)
    division        reduce using rule 110 (HAVING -> having LEXP .)
    modulo          reduce using rule 110 (HAVING -> having LEXP .)
    elevado         reduce using rule 110 (HAVING -> having LEXP .)
    and             reduce using rule 110 (HAVING -> having LEXP .)
    or              reduce using rule 110 (HAVING -> having LEXP .)
    mayor           reduce using rule 110 (HAVING -> having LEXP .)
    menor           reduce using rule 110 (HAVING -> having LEXP .)
    mayor_igual     reduce using rule 110 (HAVING -> having LEXP .)
    menor_igual     reduce using rule 110 (HAVING -> having LEXP .)
    igual           reduce using rule 110 (HAVING -> having LEXP .)
    diferente1      reduce using rule 110 (HAVING -> having LEXP .)
    diferente2      reduce using rule 110 (HAVING -> having LEXP .)
    punto           reduce using rule 110 (HAVING -> having LEXP .)
    as              reduce using rule 110 (HAVING -> having LEXP .)
    cadenaString    reduce using rule 110 (HAVING -> having LEXP .)
    id              reduce using rule 110 (HAVING -> having LEXP .)
    cadena          reduce using rule 110 (HAVING -> having LEXP .)
    between         reduce using rule 110 (HAVING -> having LEXP .)
    in              reduce using rule 110 (HAVING -> having LEXP .)
    not             reduce using rule 110 (HAVING -> having LEXP .)
    is              reduce using rule 110 (HAVING -> having LEXP .)
    isnull          reduce using rule 110 (HAVING -> having LEXP .)
    notnull         reduce using rule 110 (HAVING -> having LEXP .)
    parc            reduce using rule 110 (HAVING -> having LEXP .)
    then            reduce using rule 110 (HAVING -> having LEXP .)
    where           reduce using rule 110 (HAVING -> having LEXP .)
    group           reduce using rule 110 (HAVING -> having LEXP .)
    having          reduce using rule 110 (HAVING -> having LEXP .)
    order           reduce using rule 110 (HAVING -> having LEXP .)
    end             reduce using rule 110 (HAVING -> having LEXP .)
    else            reduce using rule 110 (HAVING -> having LEXP .)
    when            reduce using rule 110 (HAVING -> having LEXP .)
    constraint      reduce using rule 110 (HAVING -> having LEXP .)
    default         reduce using rule 110 (HAVING -> having LEXP .)
    primary         reduce using rule 110 (HAVING -> having LEXP .)
    references      reduce using rule 110 (HAVING -> having LEXP .)
    null            reduce using rule 110 (HAVING -> having LEXP .)
    asc             reduce using rule 110 (HAVING -> having LEXP .)
    desc            reduce using rule 110 (HAVING -> having LEXP .)
    coma            shift and go to state 82

  ! coma            [ reduce using rule 110 (HAVING -> having LEXP .) ]


state 421

    (108) GROUP -> group by LEXP .
    (124) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 108 (GROUP -> group by LEXP .)
    limit           reduce using rule 108 (GROUP -> group by LEXP .)
    offset          reduce using rule 108 (GROUP -> group by LEXP .)
    union           reduce using rule 108 (GROUP -> group by LEXP .)
    intersect       reduce using rule 108 (GROUP -> group by LEXP .)
    except          reduce using rule 108 (GROUP -> group by LEXP .)
    ptcoma          reduce using rule 108 (GROUP -> group by LEXP .)
    mas             reduce using rule 108 (GROUP -> group by LEXP .)
    menos           reduce using rule 108 (GROUP -> group by LEXP .)
    multiplicacion  reduce using rule 108 (GROUP -> group by LEXP .)
    division        reduce using rule 108 (GROUP -> group by LEXP .)
    modulo          reduce using rule 108 (GROUP -> group by LEXP .)
    elevado         reduce using rule 108 (GROUP -> group by LEXP .)
    and             reduce using rule 108 (GROUP -> group by LEXP .)
    or              reduce using rule 108 (GROUP -> group by LEXP .)
    mayor           reduce using rule 108 (GROUP -> group by LEXP .)
    menor           reduce using rule 108 (GROUP -> group by LEXP .)
    mayor_igual     reduce using rule 108 (GROUP -> group by LEXP .)
    menor_igual     reduce using rule 108 (GROUP -> group by LEXP .)
    igual           reduce using rule 108 (GROUP -> group by LEXP .)
    diferente1      reduce using rule 108 (GROUP -> group by LEXP .)
    diferente2      reduce using rule 108 (GROUP -> group by LEXP .)
    punto           reduce using rule 108 (GROUP -> group by LEXP .)
    as              reduce using rule 108 (GROUP -> group by LEXP .)
    cadenaString    reduce using rule 108 (GROUP -> group by LEXP .)
    id              reduce using rule 108 (GROUP -> group by LEXP .)
    cadena          reduce using rule 108 (GROUP -> group by LEXP .)
    between         reduce using rule 108 (GROUP -> group by LEXP .)
    in              reduce using rule 108 (GROUP -> group by LEXP .)
    not             reduce using rule 108 (GROUP -> group by LEXP .)
    is              reduce using rule 108 (GROUP -> group by LEXP .)
    isnull          reduce using rule 108 (GROUP -> group by LEXP .)
    notnull         reduce using rule 108 (GROUP -> group by LEXP .)
    parc            reduce using rule 108 (GROUP -> group by LEXP .)
    then            reduce using rule 108 (GROUP -> group by LEXP .)
    where           reduce using rule 108 (GROUP -> group by LEXP .)
    group           reduce using rule 108 (GROUP -> group by LEXP .)
    having          reduce using rule 108 (GROUP -> group by LEXP .)
    order           reduce using rule 108 (GROUP -> group by LEXP .)
    end             reduce using rule 108 (GROUP -> group by LEXP .)
    else            reduce using rule 108 (GROUP -> group by LEXP .)
    when            reduce using rule 108 (GROUP -> group by LEXP .)
    constraint      reduce using rule 108 (GROUP -> group by LEXP .)
    default         reduce using rule 108 (GROUP -> group by LEXP .)
    primary         reduce using rule 108 (GROUP -> group by LEXP .)
    references      reduce using rule 108 (GROUP -> group by LEXP .)
    null            reduce using rule 108 (GROUP -> group by LEXP .)
    asc             reduce using rule 108 (GROUP -> group by LEXP .)
    desc            reduce using rule 108 (GROUP -> group by LEXP .)
    coma            shift and go to state 82

  ! coma            [ reduce using rule 108 (GROUP -> group by LEXP .) ]


state 422

    (123) EXIST -> exist para SELECT . parc

    parc            shift and go to state 460


state 423

    (195) EXP -> extract para FIELDS r_from timestamp cadena parc .

    r_from          reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    coma            reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    limit           reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    offset          reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    union           reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    intersect       reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    except          reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    ptcoma          reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    mas             reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    menos           reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    multiplicacion  reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    division        reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    modulo          reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    elevado         reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    and             reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    or              reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    mayor           reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    menor           reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    mayor_igual     reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    menor_igual     reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    igual           reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    diferente1      reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    diferente2      reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    punto           reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    as              reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    cadenaString    reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    id              reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    cadena          reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    between         reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    in              reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    not             reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    is              reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    isnull          reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    notnull         reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    parc            reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    then            reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    where           reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    group           reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    having          reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    order           reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    end             reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    else            reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    when            reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    constraint      reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    default         reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    primary         reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    references      reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    null            reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    asc             reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    desc            reduce using rule 195 (EXP -> extract para FIELDS r_from timestamp cadena parc .)


state 424

    (69) LOPCOLUMN -> LOPCOLUMN OPCOLUMN .

    constraint      reduce using rule 69 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    default         reduce using rule 69 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    primary         reduce using rule 69 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    references      reduce using rule 69 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    not             reduce using rule 69 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    null            reduce using rule 69 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    parc            reduce using rule 69 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    coma            reduce using rule 69 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)


state 425

    (71) OPCOLUMN -> constraint id . unique
    (72) OPCOLUMN -> constraint id . check para EXP parc

    unique          shift and go to state 461
    check           shift and go to state 462


state 426

    (73) OPCOLUMN -> default EXP .
    (163) EXP -> EXP . mas EXP
    (164) EXP -> EXP . menos EXP
    (165) EXP -> EXP . multiplicacion EXP
    (166) EXP -> EXP . division EXP
    (167) EXP -> EXP . modulo EXP
    (168) EXP -> EXP . elevado EXP
    (169) EXP -> EXP . and EXP
    (170) EXP -> EXP . or EXP
    (171) EXP -> EXP . mayor EXP
    (172) EXP -> EXP . menor EXP
    (173) EXP -> EXP . mayor_igual EXP
    (174) EXP -> EXP . menor_igual EXP
    (175) EXP -> EXP . igual EXP
    (176) EXP -> EXP . diferente1 EXP
    (177) EXP -> EXP . diferente2 EXP
    (178) EXP -> EXP . punto EXP
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (213) PREDICADOS -> EXP . between EXP
    (214) PREDICADOS -> EXP . in para LEXP parc
    (215) PREDICADOS -> EXP . not in para LEXP parc
    (216) PREDICADOS -> EXP . not between EXP
    (217) PREDICADOS -> EXP . between symetric EXP
    (218) PREDICADOS -> EXP . not between symetric EXP
    (219) PREDICADOS -> EXP . is distinct r_from EXP
    (220) PREDICADOS -> EXP . is not distinct r_from EXP
    (221) PREDICADOS -> EXP . is PNULL
    (222) PREDICADOS -> EXP . isnull
    (223) PREDICADOS -> EXP . notnull
    (224) PREDICADOS -> EXP . is true
    (225) PREDICADOS -> EXP . is not true
    (226) PREDICADOS -> EXP . is false
    (227) PREDICADOS -> EXP . is not false
    (228) PREDICADOS -> EXP . is unknown
    (229) PREDICADOS -> EXP . is not unknown

  ! shift/reduce conflict for not resolved as shift
    constraint      reduce using rule 73 (OPCOLUMN -> default EXP .)
    default         reduce using rule 73 (OPCOLUMN -> default EXP .)
    primary         reduce using rule 73 (OPCOLUMN -> default EXP .)
    references      reduce using rule 73 (OPCOLUMN -> default EXP .)
    null            reduce using rule 73 (OPCOLUMN -> default EXP .)
    parc            reduce using rule 73 (OPCOLUMN -> default EXP .)
    coma            reduce using rule 73 (OPCOLUMN -> default EXP .)
    mas             shift and go to state 85
    menos           shift and go to state 86
    multiplicacion  shift and go to state 87
    division        shift and go to state 88
    modulo          shift and go to state 89
    elevado         shift and go to state 90
    and             shift and go to state 91
    or              shift and go to state 92
    mayor           shift and go to state 93
    menor           shift and go to state 94
    mayor_igual     shift and go to state 95
    menor_igual     shift and go to state 96
    igual           shift and go to state 97
    diferente1      shift and go to state 98
    diferente2      shift and go to state 99
    punto           shift and go to state 100
    as              shift and go to state 101
    cadenaString    shift and go to state 102
    id              shift and go to state 103
    cadena          shift and go to state 104
    between         shift and go to state 105
    in              shift and go to state 106
    not             shift and go to state 107
    is              shift and go to state 108
    isnull          shift and go to state 109
    notnull         shift and go to state 110

  ! not             [ reduce using rule 73 (OPCOLUMN -> default EXP .) ]


state 427

    (75) OPCOLUMN -> primary key .

    constraint      reduce using rule 75 (OPCOLUMN -> primary key .)
    default         reduce using rule 75 (OPCOLUMN -> primary key .)
    primary         reduce using rule 75 (OPCOLUMN -> primary key .)
    references      reduce using rule 75 (OPCOLUMN -> primary key .)
    not             reduce using rule 75 (OPCOLUMN -> primary key .)
    null            reduce using rule 75 (OPCOLUMN -> primary key .)
    parc            reduce using rule 75 (OPCOLUMN -> primary key .)
    coma            reduce using rule 75 (OPCOLUMN -> primary key .)


state 428

    (76) OPCOLUMN -> references id .

    constraint      reduce using rule 76 (OPCOLUMN -> references id .)
    default         reduce using rule 76 (OPCOLUMN -> references id .)
    primary         reduce using rule 76 (OPCOLUMN -> references id .)
    references      reduce using rule 76 (OPCOLUMN -> references id .)
    not             reduce using rule 76 (OPCOLUMN -> references id .)
    null            reduce using rule 76 (OPCOLUMN -> references id .)
    parc            reduce using rule 76 (OPCOLUMN -> references id .)
    coma            reduce using rule 76 (OPCOLUMN -> references id .)


state 429

    (129) TIPO -> decimal para LEXP . parc
    (124) LEXP -> LEXP . coma EXP

    parc            shift and go to state 463
    coma            shift and go to state 82


state 430

    (130) TIPO -> numeric para LEXP . parc
    (124) LEXP -> LEXP . coma EXP

    parc            shift and go to state 464
    coma            shift and go to state 82


state 431

    (134) TIPO -> character varying para . int parc

    int             shift and go to state 465


state 432

    (136) TIPO -> character para int . parc

    parc            shift and go to state 466


state 433

    (135) TIPO -> varchar para int . parc

    parc            shift and go to state 467


state 434

    (137) TIPO -> char para int . parc

    parc            shift and go to state 468


state 435

    (140) TIPO -> timestamp without time . zone

    zone            shift and go to state 469


state 436

    (141) TIPO -> timestamp para int . parc without time zone
    (143) TIPO -> timestamp para int . parc with time zone
    (144) TIPO -> timestamp para int . parc

    parc            shift and go to state 470


state 437

    (142) TIPO -> timestamp with time . zone

    zone            shift and go to state 471


state 438

    (147) TIPO -> time without time . zone

    zone            shift and go to state 472


state 439

    (148) TIPO -> time para int . parc without time zone
    (150) TIPO -> time para int . parc with time zone
    (151) TIPO -> time para int . parc

    parc            shift and go to state 473


state 440

    (149) TIPO -> time with time . zone

    zone            shift and go to state 474


state 441

    (153) TIPO -> interval para int . parc
    (155) TIPO -> interval para int . parc cadena

    parc            shift and go to state 475


state 442

    (62) CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .

    select          reduce using rule 62 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    create          reduce using rule 62 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    update          reduce using rule 62 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    delete          reduce using rule 62 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    alter           reduce using rule 62 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    drop            reduce using rule 62 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    insert          reduce using rule 62 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    case            reduce using rule 62 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    show            reduce using rule 62 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    $end            reduce using rule 62 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)


state 443

    (83) HERENCIA -> inherits para . LEXP parc
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 476
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 444

    (79) OPCONST -> primary key para LEXP . parc
    (124) LEXP -> LEXP . coma EXP

    parc            shift and go to state 477
    coma            shift and go to state 82


state 445

    (80) OPCONST -> foreign key para LEXP . parc references table para LEXP parc
    (124) LEXP -> LEXP . coma EXP

    parc            shift and go to state 478
    coma            shift and go to state 82


state 446

    (81) OPCONST -> unique para LEXP parc .

    parc            reduce using rule 81 (OPCONST -> unique para LEXP parc .)
    coma            reduce using rule 81 (OPCONST -> unique para LEXP parc .)


state 447

    (82) OPCONST -> check para LEXP parc .

    parc            reduce using rule 82 (OPCONST -> check para LEXP parc .)
    coma            reduce using rule 82 (OPCONST -> check para LEXP parc .)


state 448

    (84) CREATETYPE -> create type id as enum para LEXP parc .

    ptcoma          reduce using rule 84 (CREATETYPE -> create type id as enum para LEXP parc .)


state 449

    (32) OP -> alter column id set not . null

    null            shift and go to state 479


state 450

    (33) OP -> alter column id set null .

    ptcoma          reduce using rule 33 (OP -> alter column id set null .)


state 451

    (39) alc -> alter column id type TIPO .

    coma            reduce using rule 39 (alc -> alter column id type TIPO .)
    ptcoma          reduce using rule 39 (alc -> alter column id type TIPO .)


state 452

    (44) ADD -> check para LEXP parc .

    ptcoma          reduce using rule 44 (ADD -> check para LEXP parc .)


state 453

    (45) ADD -> constraint id unique para . id parc

    id              shift and go to state 480


state 454

    (46) ADD -> foreign key para id . parc references id para id parc

    parc            shift and go to state 481


state 455

    (39) alc -> alter column id . type TIPO

    type            shift and go to state 409


state 456

    (36) OP -> rename column id to id .

    ptcoma          reduce using rule 36 (OP -> rename column id to id .)


state 457

    (85) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER . LIMIT COMBINING
    (88) LIMIT -> . limit int
    (89) LIMIT -> . limit all
    (90) LIMIT -> . offset int
    (91) LIMIT -> . limit int offset int
    (92) LIMIT -> . offset int limit int
    (93) LIMIT -> . limit all offset int
    (94) LIMIT -> . offset int limit all
    (95) LIMIT -> .

  ! shift/reduce conflict for limit resolved as shift
  ! shift/reduce conflict for offset resolved as shift
    limit           shift and go to state 83
    offset          shift and go to state 84
    union           reduce using rule 95 (LIMIT -> .)
    intersect       reduce using rule 95 (LIMIT -> .)
    except          reduce using rule 95 (LIMIT -> .)
    ptcoma          reduce using rule 95 (LIMIT -> .)
    r_from          reduce using rule 95 (LIMIT -> .)
    coma            reduce using rule 95 (LIMIT -> .)
    mas             reduce using rule 95 (LIMIT -> .)
    menos           reduce using rule 95 (LIMIT -> .)
    multiplicacion  reduce using rule 95 (LIMIT -> .)
    division        reduce using rule 95 (LIMIT -> .)
    modulo          reduce using rule 95 (LIMIT -> .)
    elevado         reduce using rule 95 (LIMIT -> .)
    and             reduce using rule 95 (LIMIT -> .)
    or              reduce using rule 95 (LIMIT -> .)
    mayor           reduce using rule 95 (LIMIT -> .)
    menor           reduce using rule 95 (LIMIT -> .)
    mayor_igual     reduce using rule 95 (LIMIT -> .)
    menor_igual     reduce using rule 95 (LIMIT -> .)
    igual           reduce using rule 95 (LIMIT -> .)
    diferente1      reduce using rule 95 (LIMIT -> .)
    diferente2      reduce using rule 95 (LIMIT -> .)
    punto           reduce using rule 95 (LIMIT -> .)
    as              reduce using rule 95 (LIMIT -> .)
    cadenaString    reduce using rule 95 (LIMIT -> .)
    id              reduce using rule 95 (LIMIT -> .)
    cadena          reduce using rule 95 (LIMIT -> .)
    between         reduce using rule 95 (LIMIT -> .)
    in              reduce using rule 95 (LIMIT -> .)
    not             reduce using rule 95 (LIMIT -> .)
    is              reduce using rule 95 (LIMIT -> .)
    isnull          reduce using rule 95 (LIMIT -> .)
    notnull         reduce using rule 95 (LIMIT -> .)
    parc            reduce using rule 95 (LIMIT -> .)
    then            reduce using rule 95 (LIMIT -> .)
    where           reduce using rule 95 (LIMIT -> .)
    group           reduce using rule 95 (LIMIT -> .)
    having          reduce using rule 95 (LIMIT -> .)
    order           reduce using rule 95 (LIMIT -> .)
    end             reduce using rule 95 (LIMIT -> .)
    else            reduce using rule 95 (LIMIT -> .)
    when            reduce using rule 95 (LIMIT -> .)
    constraint      reduce using rule 95 (LIMIT -> .)
    default         reduce using rule 95 (LIMIT -> .)
    primary         reduce using rule 95 (LIMIT -> .)
    references      reduce using rule 95 (LIMIT -> .)
    null            reduce using rule 95 (LIMIT -> .)
    asc             reduce using rule 95 (LIMIT -> .)
    desc            reduce using rule 95 (LIMIT -> .)

  ! limit           [ reduce using rule 95 (LIMIT -> .) ]
  ! offset          [ reduce using rule 95 (LIMIT -> .) ]

    LIMIT                          shift and go to state 482

state 458

    (86) SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT . COMBINING
    (101) COMBINING -> . union LEXP
    (102) COMBINING -> . union all LEXP
    (103) COMBINING -> . intersect LEXP
    (104) COMBINING -> . intersect all LEXP
    (105) COMBINING -> . except LEXP
    (106) COMBINING -> . except all LEXP
    (107) COMBINING -> .

  ! shift/reduce conflict for union resolved as shift
  ! shift/reduce conflict for intersect resolved as shift
  ! shift/reduce conflict for except resolved as shift
    union           shift and go to state 146
    intersect       shift and go to state 147
    except          shift and go to state 148
    r_from          reduce using rule 107 (COMBINING -> .)
    coma            reduce using rule 107 (COMBINING -> .)
    limit           reduce using rule 107 (COMBINING -> .)
    offset          reduce using rule 107 (COMBINING -> .)
    ptcoma          reduce using rule 107 (COMBINING -> .)
    mas             reduce using rule 107 (COMBINING -> .)
    menos           reduce using rule 107 (COMBINING -> .)
    multiplicacion  reduce using rule 107 (COMBINING -> .)
    division        reduce using rule 107 (COMBINING -> .)
    modulo          reduce using rule 107 (COMBINING -> .)
    elevado         reduce using rule 107 (COMBINING -> .)
    and             reduce using rule 107 (COMBINING -> .)
    or              reduce using rule 107 (COMBINING -> .)
    mayor           reduce using rule 107 (COMBINING -> .)
    menor           reduce using rule 107 (COMBINING -> .)
    mayor_igual     reduce using rule 107 (COMBINING -> .)
    menor_igual     reduce using rule 107 (COMBINING -> .)
    igual           reduce using rule 107 (COMBINING -> .)
    diferente1      reduce using rule 107 (COMBINING -> .)
    diferente2      reduce using rule 107 (COMBINING -> .)
    punto           reduce using rule 107 (COMBINING -> .)
    as              reduce using rule 107 (COMBINING -> .)
    cadenaString    reduce using rule 107 (COMBINING -> .)
    id              reduce using rule 107 (COMBINING -> .)
    cadena          reduce using rule 107 (COMBINING -> .)
    between         reduce using rule 107 (COMBINING -> .)
    in              reduce using rule 107 (COMBINING -> .)
    not             reduce using rule 107 (COMBINING -> .)
    is              reduce using rule 107 (COMBINING -> .)
    isnull          reduce using rule 107 (COMBINING -> .)
    notnull         reduce using rule 107 (COMBINING -> .)
    parc            reduce using rule 107 (COMBINING -> .)
    then            reduce using rule 107 (COMBINING -> .)
    where           reduce using rule 107 (COMBINING -> .)
    group           reduce using rule 107 (COMBINING -> .)
    having          reduce using rule 107 (COMBINING -> .)
    order           reduce using rule 107 (COMBINING -> .)
    end             reduce using rule 107 (COMBINING -> .)
    else            reduce using rule 107 (COMBINING -> .)
    when            reduce using rule 107 (COMBINING -> .)
    constraint      reduce using rule 107 (COMBINING -> .)
    default         reduce using rule 107 (COMBINING -> .)
    primary         reduce using rule 107 (COMBINING -> .)
    references      reduce using rule 107 (COMBINING -> .)
    null            reduce using rule 107 (COMBINING -> .)
    asc             reduce using rule 107 (COMBINING -> .)
    desc            reduce using rule 107 (COMBINING -> .)

  ! union           [ reduce using rule 107 (COMBINING -> .) ]
  ! intersect       [ reduce using rule 107 (COMBINING -> .) ]
  ! except          [ reduce using rule 107 (COMBINING -> .) ]

    COMBINING                      shift and go to state 483

state 459

    (112) ORDER -> order by . LEXP ORD
    (113) ORDER -> order by . LEXP
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 484
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 460

    (123) EXIST -> exist para SELECT parc .

    r_from          reduce using rule 123 (EXIST -> exist para SELECT parc .)
    coma            reduce using rule 123 (EXIST -> exist para SELECT parc .)
    limit           reduce using rule 123 (EXIST -> exist para SELECT parc .)
    offset          reduce using rule 123 (EXIST -> exist para SELECT parc .)
    union           reduce using rule 123 (EXIST -> exist para SELECT parc .)
    intersect       reduce using rule 123 (EXIST -> exist para SELECT parc .)
    except          reduce using rule 123 (EXIST -> exist para SELECT parc .)
    ptcoma          reduce using rule 123 (EXIST -> exist para SELECT parc .)
    mas             reduce using rule 123 (EXIST -> exist para SELECT parc .)
    menos           reduce using rule 123 (EXIST -> exist para SELECT parc .)
    multiplicacion  reduce using rule 123 (EXIST -> exist para SELECT parc .)
    division        reduce using rule 123 (EXIST -> exist para SELECT parc .)
    modulo          reduce using rule 123 (EXIST -> exist para SELECT parc .)
    elevado         reduce using rule 123 (EXIST -> exist para SELECT parc .)
    and             reduce using rule 123 (EXIST -> exist para SELECT parc .)
    or              reduce using rule 123 (EXIST -> exist para SELECT parc .)
    mayor           reduce using rule 123 (EXIST -> exist para SELECT parc .)
    menor           reduce using rule 123 (EXIST -> exist para SELECT parc .)
    mayor_igual     reduce using rule 123 (EXIST -> exist para SELECT parc .)
    menor_igual     reduce using rule 123 (EXIST -> exist para SELECT parc .)
    igual           reduce using rule 123 (EXIST -> exist para SELECT parc .)
    diferente1      reduce using rule 123 (EXIST -> exist para SELECT parc .)
    diferente2      reduce using rule 123 (EXIST -> exist para SELECT parc .)
    punto           reduce using rule 123 (EXIST -> exist para SELECT parc .)
    as              reduce using rule 123 (EXIST -> exist para SELECT parc .)
    cadenaString    reduce using rule 123 (EXIST -> exist para SELECT parc .)
    id              reduce using rule 123 (EXIST -> exist para SELECT parc .)
    cadena          reduce using rule 123 (EXIST -> exist para SELECT parc .)
    between         reduce using rule 123 (EXIST -> exist para SELECT parc .)
    in              reduce using rule 123 (EXIST -> exist para SELECT parc .)
    not             reduce using rule 123 (EXIST -> exist para SELECT parc .)
    is              reduce using rule 123 (EXIST -> exist para SELECT parc .)
    isnull          reduce using rule 123 (EXIST -> exist para SELECT parc .)
    notnull         reduce using rule 123 (EXIST -> exist para SELECT parc .)
    parc            reduce using rule 123 (EXIST -> exist para SELECT parc .)
    then            reduce using rule 123 (EXIST -> exist para SELECT parc .)
    where           reduce using rule 123 (EXIST -> exist para SELECT parc .)
    group           reduce using rule 123 (EXIST -> exist para SELECT parc .)
    having          reduce using rule 123 (EXIST -> exist para SELECT parc .)
    order           reduce using rule 123 (EXIST -> exist para SELECT parc .)
    end             reduce using rule 123 (EXIST -> exist para SELECT parc .)
    else            reduce using rule 123 (EXIST -> exist para SELECT parc .)
    when            reduce using rule 123 (EXIST -> exist para SELECT parc .)
    constraint      reduce using rule 123 (EXIST -> exist para SELECT parc .)
    default         reduce using rule 123 (EXIST -> exist para SELECT parc .)
    primary         reduce using rule 123 (EXIST -> exist para SELECT parc .)
    references      reduce using rule 123 (EXIST -> exist para SELECT parc .)
    null            reduce using rule 123 (EXIST -> exist para SELECT parc .)
    asc             reduce using rule 123 (EXIST -> exist para SELECT parc .)
    desc            reduce using rule 123 (EXIST -> exist para SELECT parc .)


state 461

    (71) OPCOLUMN -> constraint id unique .

    constraint      reduce using rule 71 (OPCOLUMN -> constraint id unique .)
    default         reduce using rule 71 (OPCOLUMN -> constraint id unique .)
    primary         reduce using rule 71 (OPCOLUMN -> constraint id unique .)
    references      reduce using rule 71 (OPCOLUMN -> constraint id unique .)
    not             reduce using rule 71 (OPCOLUMN -> constraint id unique .)
    null            reduce using rule 71 (OPCOLUMN -> constraint id unique .)
    parc            reduce using rule 71 (OPCOLUMN -> constraint id unique .)
    coma            reduce using rule 71 (OPCOLUMN -> constraint id unique .)


state 462

    (72) OPCOLUMN -> constraint id check . para EXP parc

    para            shift and go to state 485


state 463

    (129) TIPO -> decimal para LEXP parc .

    constraint      reduce using rule 129 (TIPO -> decimal para LEXP parc .)
    default         reduce using rule 129 (TIPO -> decimal para LEXP parc .)
    primary         reduce using rule 129 (TIPO -> decimal para LEXP parc .)
    references      reduce using rule 129 (TIPO -> decimal para LEXP parc .)
    not             reduce using rule 129 (TIPO -> decimal para LEXP parc .)
    null            reduce using rule 129 (TIPO -> decimal para LEXP parc .)
    parc            reduce using rule 129 (TIPO -> decimal para LEXP parc .)
    coma            reduce using rule 129 (TIPO -> decimal para LEXP parc .)
    ptcoma          reduce using rule 129 (TIPO -> decimal para LEXP parc .)


state 464

    (130) TIPO -> numeric para LEXP parc .

    constraint      reduce using rule 130 (TIPO -> numeric para LEXP parc .)
    default         reduce using rule 130 (TIPO -> numeric para LEXP parc .)
    primary         reduce using rule 130 (TIPO -> numeric para LEXP parc .)
    references      reduce using rule 130 (TIPO -> numeric para LEXP parc .)
    not             reduce using rule 130 (TIPO -> numeric para LEXP parc .)
    null            reduce using rule 130 (TIPO -> numeric para LEXP parc .)
    parc            reduce using rule 130 (TIPO -> numeric para LEXP parc .)
    coma            reduce using rule 130 (TIPO -> numeric para LEXP parc .)
    ptcoma          reduce using rule 130 (TIPO -> numeric para LEXP parc .)


state 465

    (134) TIPO -> character varying para int . parc

    parc            shift and go to state 486


state 466

    (136) TIPO -> character para int parc .

    constraint      reduce using rule 136 (TIPO -> character para int parc .)
    default         reduce using rule 136 (TIPO -> character para int parc .)
    primary         reduce using rule 136 (TIPO -> character para int parc .)
    references      reduce using rule 136 (TIPO -> character para int parc .)
    not             reduce using rule 136 (TIPO -> character para int parc .)
    null            reduce using rule 136 (TIPO -> character para int parc .)
    parc            reduce using rule 136 (TIPO -> character para int parc .)
    coma            reduce using rule 136 (TIPO -> character para int parc .)
    ptcoma          reduce using rule 136 (TIPO -> character para int parc .)


state 467

    (135) TIPO -> varchar para int parc .

    constraint      reduce using rule 135 (TIPO -> varchar para int parc .)
    default         reduce using rule 135 (TIPO -> varchar para int parc .)
    primary         reduce using rule 135 (TIPO -> varchar para int parc .)
    references      reduce using rule 135 (TIPO -> varchar para int parc .)
    not             reduce using rule 135 (TIPO -> varchar para int parc .)
    null            reduce using rule 135 (TIPO -> varchar para int parc .)
    parc            reduce using rule 135 (TIPO -> varchar para int parc .)
    coma            reduce using rule 135 (TIPO -> varchar para int parc .)
    ptcoma          reduce using rule 135 (TIPO -> varchar para int parc .)


state 468

    (137) TIPO -> char para int parc .

    constraint      reduce using rule 137 (TIPO -> char para int parc .)
    default         reduce using rule 137 (TIPO -> char para int parc .)
    primary         reduce using rule 137 (TIPO -> char para int parc .)
    references      reduce using rule 137 (TIPO -> char para int parc .)
    not             reduce using rule 137 (TIPO -> char para int parc .)
    null            reduce using rule 137 (TIPO -> char para int parc .)
    parc            reduce using rule 137 (TIPO -> char para int parc .)
    coma            reduce using rule 137 (TIPO -> char para int parc .)
    ptcoma          reduce using rule 137 (TIPO -> char para int parc .)


state 469

    (140) TIPO -> timestamp without time zone .

    constraint      reduce using rule 140 (TIPO -> timestamp without time zone .)
    default         reduce using rule 140 (TIPO -> timestamp without time zone .)
    primary         reduce using rule 140 (TIPO -> timestamp without time zone .)
    references      reduce using rule 140 (TIPO -> timestamp without time zone .)
    not             reduce using rule 140 (TIPO -> timestamp without time zone .)
    null            reduce using rule 140 (TIPO -> timestamp without time zone .)
    parc            reduce using rule 140 (TIPO -> timestamp without time zone .)
    coma            reduce using rule 140 (TIPO -> timestamp without time zone .)
    ptcoma          reduce using rule 140 (TIPO -> timestamp without time zone .)


state 470

    (141) TIPO -> timestamp para int parc . without time zone
    (143) TIPO -> timestamp para int parc . with time zone
    (144) TIPO -> timestamp para int parc .

    without         shift and go to state 487
    with            shift and go to state 488
    constraint      reduce using rule 144 (TIPO -> timestamp para int parc .)
    default         reduce using rule 144 (TIPO -> timestamp para int parc .)
    primary         reduce using rule 144 (TIPO -> timestamp para int parc .)
    references      reduce using rule 144 (TIPO -> timestamp para int parc .)
    not             reduce using rule 144 (TIPO -> timestamp para int parc .)
    null            reduce using rule 144 (TIPO -> timestamp para int parc .)
    parc            reduce using rule 144 (TIPO -> timestamp para int parc .)
    coma            reduce using rule 144 (TIPO -> timestamp para int parc .)
    ptcoma          reduce using rule 144 (TIPO -> timestamp para int parc .)


state 471

    (142) TIPO -> timestamp with time zone .

    constraint      reduce using rule 142 (TIPO -> timestamp with time zone .)
    default         reduce using rule 142 (TIPO -> timestamp with time zone .)
    primary         reduce using rule 142 (TIPO -> timestamp with time zone .)
    references      reduce using rule 142 (TIPO -> timestamp with time zone .)
    not             reduce using rule 142 (TIPO -> timestamp with time zone .)
    null            reduce using rule 142 (TIPO -> timestamp with time zone .)
    parc            reduce using rule 142 (TIPO -> timestamp with time zone .)
    coma            reduce using rule 142 (TIPO -> timestamp with time zone .)
    ptcoma          reduce using rule 142 (TIPO -> timestamp with time zone .)


state 472

    (147) TIPO -> time without time zone .

    constraint      reduce using rule 147 (TIPO -> time without time zone .)
    default         reduce using rule 147 (TIPO -> time without time zone .)
    primary         reduce using rule 147 (TIPO -> time without time zone .)
    references      reduce using rule 147 (TIPO -> time without time zone .)
    not             reduce using rule 147 (TIPO -> time without time zone .)
    null            reduce using rule 147 (TIPO -> time without time zone .)
    parc            reduce using rule 147 (TIPO -> time without time zone .)
    coma            reduce using rule 147 (TIPO -> time without time zone .)
    ptcoma          reduce using rule 147 (TIPO -> time without time zone .)


state 473

    (148) TIPO -> time para int parc . without time zone
    (150) TIPO -> time para int parc . with time zone
    (151) TIPO -> time para int parc .

    without         shift and go to state 489
    with            shift and go to state 490
    constraint      reduce using rule 151 (TIPO -> time para int parc .)
    default         reduce using rule 151 (TIPO -> time para int parc .)
    primary         reduce using rule 151 (TIPO -> time para int parc .)
    references      reduce using rule 151 (TIPO -> time para int parc .)
    not             reduce using rule 151 (TIPO -> time para int parc .)
    null            reduce using rule 151 (TIPO -> time para int parc .)
    parc            reduce using rule 151 (TIPO -> time para int parc .)
    coma            reduce using rule 151 (TIPO -> time para int parc .)
    ptcoma          reduce using rule 151 (TIPO -> time para int parc .)


state 474

    (149) TIPO -> time with time zone .

    constraint      reduce using rule 149 (TIPO -> time with time zone .)
    default         reduce using rule 149 (TIPO -> time with time zone .)
    primary         reduce using rule 149 (TIPO -> time with time zone .)
    references      reduce using rule 149 (TIPO -> time with time zone .)
    not             reduce using rule 149 (TIPO -> time with time zone .)
    null            reduce using rule 149 (TIPO -> time with time zone .)
    parc            reduce using rule 149 (TIPO -> time with time zone .)
    coma            reduce using rule 149 (TIPO -> time with time zone .)
    ptcoma          reduce using rule 149 (TIPO -> time with time zone .)


state 475

    (153) TIPO -> interval para int parc .
    (155) TIPO -> interval para int parc . cadena

    constraint      reduce using rule 153 (TIPO -> interval para int parc .)
    default         reduce using rule 153 (TIPO -> interval para int parc .)
    primary         reduce using rule 153 (TIPO -> interval para int parc .)
    references      reduce using rule 153 (TIPO -> interval para int parc .)
    not             reduce using rule 153 (TIPO -> interval para int parc .)
    null            reduce using rule 153 (TIPO -> interval para int parc .)
    parc            reduce using rule 153 (TIPO -> interval para int parc .)
    coma            reduce using rule 153 (TIPO -> interval para int parc .)
    ptcoma          reduce using rule 153 (TIPO -> interval para int parc .)
    cadena          shift and go to state 491


state 476

    (83) HERENCIA -> inherits para LEXP . parc
    (124) LEXP -> LEXP . coma EXP

    parc            shift and go to state 492
    coma            shift and go to state 82


state 477

    (79) OPCONST -> primary key para LEXP parc .

    parc            reduce using rule 79 (OPCONST -> primary key para LEXP parc .)
    coma            reduce using rule 79 (OPCONST -> primary key para LEXP parc .)


state 478

    (80) OPCONST -> foreign key para LEXP parc . references table para LEXP parc

    references      shift and go to state 493


state 479

    (32) OP -> alter column id set not null .

    ptcoma          reduce using rule 32 (OP -> alter column id set not null .)


state 480

    (45) ADD -> constraint id unique para id . parc

    parc            shift and go to state 494


state 481

    (46) ADD -> foreign key para id parc . references id para id parc

    references      shift and go to state 495


state 482

    (85) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT . COMBINING
    (101) COMBINING -> . union LEXP
    (102) COMBINING -> . union all LEXP
    (103) COMBINING -> . intersect LEXP
    (104) COMBINING -> . intersect all LEXP
    (105) COMBINING -> . except LEXP
    (106) COMBINING -> . except all LEXP
    (107) COMBINING -> .

  ! shift/reduce conflict for union resolved as shift
  ! shift/reduce conflict for intersect resolved as shift
  ! shift/reduce conflict for except resolved as shift
    union           shift and go to state 146
    intersect       shift and go to state 147
    except          shift and go to state 148
    r_from          reduce using rule 107 (COMBINING -> .)
    coma            reduce using rule 107 (COMBINING -> .)
    limit           reduce using rule 107 (COMBINING -> .)
    offset          reduce using rule 107 (COMBINING -> .)
    ptcoma          reduce using rule 107 (COMBINING -> .)
    mas             reduce using rule 107 (COMBINING -> .)
    menos           reduce using rule 107 (COMBINING -> .)
    multiplicacion  reduce using rule 107 (COMBINING -> .)
    division        reduce using rule 107 (COMBINING -> .)
    modulo          reduce using rule 107 (COMBINING -> .)
    elevado         reduce using rule 107 (COMBINING -> .)
    and             reduce using rule 107 (COMBINING -> .)
    or              reduce using rule 107 (COMBINING -> .)
    mayor           reduce using rule 107 (COMBINING -> .)
    menor           reduce using rule 107 (COMBINING -> .)
    mayor_igual     reduce using rule 107 (COMBINING -> .)
    menor_igual     reduce using rule 107 (COMBINING -> .)
    igual           reduce using rule 107 (COMBINING -> .)
    diferente1      reduce using rule 107 (COMBINING -> .)
    diferente2      reduce using rule 107 (COMBINING -> .)
    punto           reduce using rule 107 (COMBINING -> .)
    as              reduce using rule 107 (COMBINING -> .)
    cadenaString    reduce using rule 107 (COMBINING -> .)
    id              reduce using rule 107 (COMBINING -> .)
    cadena          reduce using rule 107 (COMBINING -> .)
    between         reduce using rule 107 (COMBINING -> .)
    in              reduce using rule 107 (COMBINING -> .)
    not             reduce using rule 107 (COMBINING -> .)
    is              reduce using rule 107 (COMBINING -> .)
    isnull          reduce using rule 107 (COMBINING -> .)
    notnull         reduce using rule 107 (COMBINING -> .)
    parc            reduce using rule 107 (COMBINING -> .)
    then            reduce using rule 107 (COMBINING -> .)
    where           reduce using rule 107 (COMBINING -> .)
    group           reduce using rule 107 (COMBINING -> .)
    having          reduce using rule 107 (COMBINING -> .)
    order           reduce using rule 107 (COMBINING -> .)
    end             reduce using rule 107 (COMBINING -> .)
    else            reduce using rule 107 (COMBINING -> .)
    when            reduce using rule 107 (COMBINING -> .)
    constraint      reduce using rule 107 (COMBINING -> .)
    default         reduce using rule 107 (COMBINING -> .)
    primary         reduce using rule 107 (COMBINING -> .)
    references      reduce using rule 107 (COMBINING -> .)
    null            reduce using rule 107 (COMBINING -> .)
    asc             reduce using rule 107 (COMBINING -> .)
    desc            reduce using rule 107 (COMBINING -> .)

  ! union           [ reduce using rule 107 (COMBINING -> .) ]
  ! intersect       [ reduce using rule 107 (COMBINING -> .) ]
  ! except          [ reduce using rule 107 (COMBINING -> .) ]

    COMBINING                      shift and go to state 496

state 483

    (86) SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .

    ptcoma          reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    r_from          reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    coma            reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    limit           reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    offset          reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    union           reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    intersect       reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    except          reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    mas             reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    menos           reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    multiplicacion  reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    division        reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    modulo          reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    elevado         reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    and             reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    or              reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    mayor           reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    menor           reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    mayor_igual     reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    menor_igual     reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    igual           reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    diferente1      reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    diferente2      reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    punto           reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    as              reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    cadenaString    reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    id              reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    cadena          reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    between         reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    in              reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    not             reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    is              reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    isnull          reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    notnull         reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    parc            reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    then            reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    where           reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    group           reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    having          reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    order           reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    end             reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    else            reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    when            reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    constraint      reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    default         reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    primary         reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    references      reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    null            reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    asc             reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    desc            reduce using rule 86 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)


state 484

    (112) ORDER -> order by LEXP . ORD
    (113) ORDER -> order by LEXP .
    (124) LEXP -> LEXP . coma EXP
    (115) ORD -> . asc
    (116) ORD -> . desc

  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for asc resolved as shift
  ! shift/reduce conflict for desc resolved as shift
    r_from          reduce using rule 113 (ORDER -> order by LEXP .)
    limit           reduce using rule 113 (ORDER -> order by LEXP .)
    offset          reduce using rule 113 (ORDER -> order by LEXP .)
    union           reduce using rule 113 (ORDER -> order by LEXP .)
    intersect       reduce using rule 113 (ORDER -> order by LEXP .)
    except          reduce using rule 113 (ORDER -> order by LEXP .)
    ptcoma          reduce using rule 113 (ORDER -> order by LEXP .)
    mas             reduce using rule 113 (ORDER -> order by LEXP .)
    menos           reduce using rule 113 (ORDER -> order by LEXP .)
    multiplicacion  reduce using rule 113 (ORDER -> order by LEXP .)
    division        reduce using rule 113 (ORDER -> order by LEXP .)
    modulo          reduce using rule 113 (ORDER -> order by LEXP .)
    elevado         reduce using rule 113 (ORDER -> order by LEXP .)
    and             reduce using rule 113 (ORDER -> order by LEXP .)
    or              reduce using rule 113 (ORDER -> order by LEXP .)
    mayor           reduce using rule 113 (ORDER -> order by LEXP .)
    menor           reduce using rule 113 (ORDER -> order by LEXP .)
    mayor_igual     reduce using rule 113 (ORDER -> order by LEXP .)
    menor_igual     reduce using rule 113 (ORDER -> order by LEXP .)
    igual           reduce using rule 113 (ORDER -> order by LEXP .)
    diferente1      reduce using rule 113 (ORDER -> order by LEXP .)
    diferente2      reduce using rule 113 (ORDER -> order by LEXP .)
    punto           reduce using rule 113 (ORDER -> order by LEXP .)
    as              reduce using rule 113 (ORDER -> order by LEXP .)
    cadenaString    reduce using rule 113 (ORDER -> order by LEXP .)
    id              reduce using rule 113 (ORDER -> order by LEXP .)
    cadena          reduce using rule 113 (ORDER -> order by LEXP .)
    between         reduce using rule 113 (ORDER -> order by LEXP .)
    in              reduce using rule 113 (ORDER -> order by LEXP .)
    not             reduce using rule 113 (ORDER -> order by LEXP .)
    is              reduce using rule 113 (ORDER -> order by LEXP .)
    isnull          reduce using rule 113 (ORDER -> order by LEXP .)
    notnull         reduce using rule 113 (ORDER -> order by LEXP .)
    parc            reduce using rule 113 (ORDER -> order by LEXP .)
    then            reduce using rule 113 (ORDER -> order by LEXP .)
    where           reduce using rule 113 (ORDER -> order by LEXP .)
    group           reduce using rule 113 (ORDER -> order by LEXP .)
    having          reduce using rule 113 (ORDER -> order by LEXP .)
    order           reduce using rule 113 (ORDER -> order by LEXP .)
    end             reduce using rule 113 (ORDER -> order by LEXP .)
    else            reduce using rule 113 (ORDER -> order by LEXP .)
    when            reduce using rule 113 (ORDER -> order by LEXP .)
    constraint      reduce using rule 113 (ORDER -> order by LEXP .)
    default         reduce using rule 113 (ORDER -> order by LEXP .)
    primary         reduce using rule 113 (ORDER -> order by LEXP .)
    references      reduce using rule 113 (ORDER -> order by LEXP .)
    null            reduce using rule 113 (ORDER -> order by LEXP .)
    coma            shift and go to state 82
    asc             shift and go to state 498
    desc            shift and go to state 499

  ! coma            [ reduce using rule 113 (ORDER -> order by LEXP .) ]
  ! asc             [ reduce using rule 113 (ORDER -> order by LEXP .) ]
  ! desc            [ reduce using rule 113 (ORDER -> order by LEXP .) ]

    ORD                            shift and go to state 497

state 485

    (72) OPCOLUMN -> constraint id check para . EXP parc
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 500
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 486

    (134) TIPO -> character varying para int parc .

    constraint      reduce using rule 134 (TIPO -> character varying para int parc .)
    default         reduce using rule 134 (TIPO -> character varying para int parc .)
    primary         reduce using rule 134 (TIPO -> character varying para int parc .)
    references      reduce using rule 134 (TIPO -> character varying para int parc .)
    not             reduce using rule 134 (TIPO -> character varying para int parc .)
    null            reduce using rule 134 (TIPO -> character varying para int parc .)
    parc            reduce using rule 134 (TIPO -> character varying para int parc .)
    coma            reduce using rule 134 (TIPO -> character varying para int parc .)
    ptcoma          reduce using rule 134 (TIPO -> character varying para int parc .)


state 487

    (141) TIPO -> timestamp para int parc without . time zone

    time            shift and go to state 501


state 488

    (143) TIPO -> timestamp para int parc with . time zone

    time            shift and go to state 502


state 489

    (148) TIPO -> time para int parc without . time zone

    time            shift and go to state 503


state 490

    (150) TIPO -> time para int parc with . time zone

    time            shift and go to state 504


state 491

    (155) TIPO -> interval para int parc cadena .

    constraint      reduce using rule 155 (TIPO -> interval para int parc cadena .)
    default         reduce using rule 155 (TIPO -> interval para int parc cadena .)
    primary         reduce using rule 155 (TIPO -> interval para int parc cadena .)
    references      reduce using rule 155 (TIPO -> interval para int parc cadena .)
    not             reduce using rule 155 (TIPO -> interval para int parc cadena .)
    null            reduce using rule 155 (TIPO -> interval para int parc cadena .)
    parc            reduce using rule 155 (TIPO -> interval para int parc cadena .)
    coma            reduce using rule 155 (TIPO -> interval para int parc cadena .)
    ptcoma          reduce using rule 155 (TIPO -> interval para int parc cadena .)


state 492

    (83) HERENCIA -> inherits para LEXP parc .

    ptcoma          reduce using rule 83 (HERENCIA -> inherits para LEXP parc .)


state 493

    (80) OPCONST -> foreign key para LEXP parc references . table para LEXP parc

    table           shift and go to state 505


state 494

    (45) ADD -> constraint id unique para id parc .

    ptcoma          reduce using rule 45 (ADD -> constraint id unique para id parc .)


state 495

    (46) ADD -> foreign key para id parc references . id para id parc

    id              shift and go to state 506


state 496

    (85) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .

    ptcoma          reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    r_from          reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    coma            reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    limit           reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    offset          reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    union           reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    intersect       reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    except          reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    mas             reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    menos           reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    multiplicacion  reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    division        reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    modulo          reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    elevado         reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    and             reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    or              reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    mayor           reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    menor           reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    mayor_igual     reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    menor_igual     reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    igual           reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    diferente1      reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    diferente2      reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    punto           reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    as              reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    cadenaString    reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    id              reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    cadena          reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    between         reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    in              reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    not             reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    is              reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    isnull          reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    notnull         reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    parc            reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    then            reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    where           reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    group           reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    having          reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    order           reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    end             reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    else            reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    when            reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    constraint      reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    default         reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    primary         reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    references      reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    null            reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    asc             reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    desc            reduce using rule 85 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING .)


state 497

    (112) ORDER -> order by LEXP ORD .

    r_from          reduce using rule 112 (ORDER -> order by LEXP ORD .)
    coma            reduce using rule 112 (ORDER -> order by LEXP ORD .)
    limit           reduce using rule 112 (ORDER -> order by LEXP ORD .)
    offset          reduce using rule 112 (ORDER -> order by LEXP ORD .)
    union           reduce using rule 112 (ORDER -> order by LEXP ORD .)
    intersect       reduce using rule 112 (ORDER -> order by LEXP ORD .)
    except          reduce using rule 112 (ORDER -> order by LEXP ORD .)
    ptcoma          reduce using rule 112 (ORDER -> order by LEXP ORD .)
    mas             reduce using rule 112 (ORDER -> order by LEXP ORD .)
    menos           reduce using rule 112 (ORDER -> order by LEXP ORD .)
    multiplicacion  reduce using rule 112 (ORDER -> order by LEXP ORD .)
    division        reduce using rule 112 (ORDER -> order by LEXP ORD .)
    modulo          reduce using rule 112 (ORDER -> order by LEXP ORD .)
    elevado         reduce using rule 112 (ORDER -> order by LEXP ORD .)
    and             reduce using rule 112 (ORDER -> order by LEXP ORD .)
    or              reduce using rule 112 (ORDER -> order by LEXP ORD .)
    mayor           reduce using rule 112 (ORDER -> order by LEXP ORD .)
    menor           reduce using rule 112 (ORDER -> order by LEXP ORD .)
    mayor_igual     reduce using rule 112 (ORDER -> order by LEXP ORD .)
    menor_igual     reduce using rule 112 (ORDER -> order by LEXP ORD .)
    igual           reduce using rule 112 (ORDER -> order by LEXP ORD .)
    diferente1      reduce using rule 112 (ORDER -> order by LEXP ORD .)
    diferente2      reduce using rule 112 (ORDER -> order by LEXP ORD .)
    punto           reduce using rule 112 (ORDER -> order by LEXP ORD .)
    as              reduce using rule 112 (ORDER -> order by LEXP ORD .)
    cadenaString    reduce using rule 112 (ORDER -> order by LEXP ORD .)
    id              reduce using rule 112 (ORDER -> order by LEXP ORD .)
    cadena          reduce using rule 112 (ORDER -> order by LEXP ORD .)
    between         reduce using rule 112 (ORDER -> order by LEXP ORD .)
    in              reduce using rule 112 (ORDER -> order by LEXP ORD .)
    not             reduce using rule 112 (ORDER -> order by LEXP ORD .)
    is              reduce using rule 112 (ORDER -> order by LEXP ORD .)
    isnull          reduce using rule 112 (ORDER -> order by LEXP ORD .)
    notnull         reduce using rule 112 (ORDER -> order by LEXP ORD .)
    parc            reduce using rule 112 (ORDER -> order by LEXP ORD .)
    then            reduce using rule 112 (ORDER -> order by LEXP ORD .)
    where           reduce using rule 112 (ORDER -> order by LEXP ORD .)
    group           reduce using rule 112 (ORDER -> order by LEXP ORD .)
    having          reduce using rule 112 (ORDER -> order by LEXP ORD .)
    order           reduce using rule 112 (ORDER -> order by LEXP ORD .)
    end             reduce using rule 112 (ORDER -> order by LEXP ORD .)
    else            reduce using rule 112 (ORDER -> order by LEXP ORD .)
    when            reduce using rule 112 (ORDER -> order by LEXP ORD .)
    constraint      reduce using rule 112 (ORDER -> order by LEXP ORD .)
    default         reduce using rule 112 (ORDER -> order by LEXP ORD .)
    primary         reduce using rule 112 (ORDER -> order by LEXP ORD .)
    references      reduce using rule 112 (ORDER -> order by LEXP ORD .)
    null            reduce using rule 112 (ORDER -> order by LEXP ORD .)
    asc             reduce using rule 112 (ORDER -> order by LEXP ORD .)
    desc            reduce using rule 112 (ORDER -> order by LEXP ORD .)


state 498

    (115) ORD -> asc .

    r_from          reduce using rule 115 (ORD -> asc .)
    coma            reduce using rule 115 (ORD -> asc .)
    limit           reduce using rule 115 (ORD -> asc .)
    offset          reduce using rule 115 (ORD -> asc .)
    union           reduce using rule 115 (ORD -> asc .)
    intersect       reduce using rule 115 (ORD -> asc .)
    except          reduce using rule 115 (ORD -> asc .)
    ptcoma          reduce using rule 115 (ORD -> asc .)
    mas             reduce using rule 115 (ORD -> asc .)
    menos           reduce using rule 115 (ORD -> asc .)
    multiplicacion  reduce using rule 115 (ORD -> asc .)
    division        reduce using rule 115 (ORD -> asc .)
    modulo          reduce using rule 115 (ORD -> asc .)
    elevado         reduce using rule 115 (ORD -> asc .)
    and             reduce using rule 115 (ORD -> asc .)
    or              reduce using rule 115 (ORD -> asc .)
    mayor           reduce using rule 115 (ORD -> asc .)
    menor           reduce using rule 115 (ORD -> asc .)
    mayor_igual     reduce using rule 115 (ORD -> asc .)
    menor_igual     reduce using rule 115 (ORD -> asc .)
    igual           reduce using rule 115 (ORD -> asc .)
    diferente1      reduce using rule 115 (ORD -> asc .)
    diferente2      reduce using rule 115 (ORD -> asc .)
    punto           reduce using rule 115 (ORD -> asc .)
    as              reduce using rule 115 (ORD -> asc .)
    cadenaString    reduce using rule 115 (ORD -> asc .)
    id              reduce using rule 115 (ORD -> asc .)
    cadena          reduce using rule 115 (ORD -> asc .)
    between         reduce using rule 115 (ORD -> asc .)
    in              reduce using rule 115 (ORD -> asc .)
    not             reduce using rule 115 (ORD -> asc .)
    is              reduce using rule 115 (ORD -> asc .)
    isnull          reduce using rule 115 (ORD -> asc .)
    notnull         reduce using rule 115 (ORD -> asc .)
    parc            reduce using rule 115 (ORD -> asc .)
    then            reduce using rule 115 (ORD -> asc .)
    where           reduce using rule 115 (ORD -> asc .)
    group           reduce using rule 115 (ORD -> asc .)
    having          reduce using rule 115 (ORD -> asc .)
    order           reduce using rule 115 (ORD -> asc .)
    end             reduce using rule 115 (ORD -> asc .)
    else            reduce using rule 115 (ORD -> asc .)
    when            reduce using rule 115 (ORD -> asc .)
    constraint      reduce using rule 115 (ORD -> asc .)
    default         reduce using rule 115 (ORD -> asc .)
    primary         reduce using rule 115 (ORD -> asc .)
    references      reduce using rule 115 (ORD -> asc .)
    null            reduce using rule 115 (ORD -> asc .)
    asc             reduce using rule 115 (ORD -> asc .)
    desc            reduce using rule 115 (ORD -> asc .)


state 499

    (116) ORD -> desc .

    r_from          reduce using rule 116 (ORD -> desc .)
    coma            reduce using rule 116 (ORD -> desc .)
    limit           reduce using rule 116 (ORD -> desc .)
    offset          reduce using rule 116 (ORD -> desc .)
    union           reduce using rule 116 (ORD -> desc .)
    intersect       reduce using rule 116 (ORD -> desc .)
    except          reduce using rule 116 (ORD -> desc .)
    ptcoma          reduce using rule 116 (ORD -> desc .)
    mas             reduce using rule 116 (ORD -> desc .)
    menos           reduce using rule 116 (ORD -> desc .)
    multiplicacion  reduce using rule 116 (ORD -> desc .)
    division        reduce using rule 116 (ORD -> desc .)
    modulo          reduce using rule 116 (ORD -> desc .)
    elevado         reduce using rule 116 (ORD -> desc .)
    and             reduce using rule 116 (ORD -> desc .)
    or              reduce using rule 116 (ORD -> desc .)
    mayor           reduce using rule 116 (ORD -> desc .)
    menor           reduce using rule 116 (ORD -> desc .)
    mayor_igual     reduce using rule 116 (ORD -> desc .)
    menor_igual     reduce using rule 116 (ORD -> desc .)
    igual           reduce using rule 116 (ORD -> desc .)
    diferente1      reduce using rule 116 (ORD -> desc .)
    diferente2      reduce using rule 116 (ORD -> desc .)
    punto           reduce using rule 116 (ORD -> desc .)
    as              reduce using rule 116 (ORD -> desc .)
    cadenaString    reduce using rule 116 (ORD -> desc .)
    id              reduce using rule 116 (ORD -> desc .)
    cadena          reduce using rule 116 (ORD -> desc .)
    between         reduce using rule 116 (ORD -> desc .)
    in              reduce using rule 116 (ORD -> desc .)
    not             reduce using rule 116 (ORD -> desc .)
    is              reduce using rule 116 (ORD -> desc .)
    isnull          reduce using rule 116 (ORD -> desc .)
    notnull         reduce using rule 116 (ORD -> desc .)
    parc            reduce using rule 116 (ORD -> desc .)
    then            reduce using rule 116 (ORD -> desc .)
    where           reduce using rule 116 (ORD -> desc .)
    group           reduce using rule 116 (ORD -> desc .)
    having          reduce using rule 116 (ORD -> desc .)
    order           reduce using rule 116 (ORD -> desc .)
    end             reduce using rule 116 (ORD -> desc .)
    else            reduce using rule 116 (ORD -> desc .)
    when            reduce using rule 116 (ORD -> desc .)
    constraint      reduce using rule 116 (ORD -> desc .)
    default         reduce using rule 116 (ORD -> desc .)
    primary         reduce using rule 116 (ORD -> desc .)
    references      reduce using rule 116 (ORD -> desc .)
    null            reduce using rule 116 (ORD -> desc .)
    asc             reduce using rule 116 (ORD -> desc .)
    desc            reduce using rule 116 (ORD -> desc .)


state 500

    (72) OPCOLUMN -> constraint id check para EXP . parc
    (163) EXP -> EXP . mas EXP
    (164) EXP -> EXP . menos EXP
    (165) EXP -> EXP . multiplicacion EXP
    (166) EXP -> EXP . division EXP
    (167) EXP -> EXP . modulo EXP
    (168) EXP -> EXP . elevado EXP
    (169) EXP -> EXP . and EXP
    (170) EXP -> EXP . or EXP
    (171) EXP -> EXP . mayor EXP
    (172) EXP -> EXP . menor EXP
    (173) EXP -> EXP . mayor_igual EXP
    (174) EXP -> EXP . menor_igual EXP
    (175) EXP -> EXP . igual EXP
    (176) EXP -> EXP . diferente1 EXP
    (177) EXP -> EXP . diferente2 EXP
    (178) EXP -> EXP . punto EXP
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (213) PREDICADOS -> EXP . between EXP
    (214) PREDICADOS -> EXP . in para LEXP parc
    (215) PREDICADOS -> EXP . not in para LEXP parc
    (216) PREDICADOS -> EXP . not between EXP
    (217) PREDICADOS -> EXP . between symetric EXP
    (218) PREDICADOS -> EXP . not between symetric EXP
    (219) PREDICADOS -> EXP . is distinct r_from EXP
    (220) PREDICADOS -> EXP . is not distinct r_from EXP
    (221) PREDICADOS -> EXP . is PNULL
    (222) PREDICADOS -> EXP . isnull
    (223) PREDICADOS -> EXP . notnull
    (224) PREDICADOS -> EXP . is true
    (225) PREDICADOS -> EXP . is not true
    (226) PREDICADOS -> EXP . is false
    (227) PREDICADOS -> EXP . is not false
    (228) PREDICADOS -> EXP . is unknown
    (229) PREDICADOS -> EXP . is not unknown

    parc            shift and go to state 507
    mas             shift and go to state 85
    menos           shift and go to state 86
    multiplicacion  shift and go to state 87
    division        shift and go to state 88
    modulo          shift and go to state 89
    elevado         shift and go to state 90
    and             shift and go to state 91
    or              shift and go to state 92
    mayor           shift and go to state 93
    menor           shift and go to state 94
    mayor_igual     shift and go to state 95
    menor_igual     shift and go to state 96
    igual           shift and go to state 97
    diferente1      shift and go to state 98
    diferente2      shift and go to state 99
    punto           shift and go to state 100
    as              shift and go to state 101
    cadenaString    shift and go to state 102
    id              shift and go to state 103
    cadena          shift and go to state 104
    between         shift and go to state 105
    in              shift and go to state 106
    not             shift and go to state 107
    is              shift and go to state 108
    isnull          shift and go to state 109
    notnull         shift and go to state 110


state 501

    (141) TIPO -> timestamp para int parc without time . zone

    zone            shift and go to state 508


state 502

    (143) TIPO -> timestamp para int parc with time . zone

    zone            shift and go to state 509


state 503

    (148) TIPO -> time para int parc without time . zone

    zone            shift and go to state 510


state 504

    (150) TIPO -> time para int parc with time . zone

    zone            shift and go to state 511


state 505

    (80) OPCONST -> foreign key para LEXP parc references table . para LEXP parc

    para            shift and go to state 512


state 506

    (46) ADD -> foreign key para id parc references id . para id parc

    para            shift and go to state 513


state 507

    (72) OPCOLUMN -> constraint id check para EXP parc .

    constraint      reduce using rule 72 (OPCOLUMN -> constraint id check para EXP parc .)
    default         reduce using rule 72 (OPCOLUMN -> constraint id check para EXP parc .)
    primary         reduce using rule 72 (OPCOLUMN -> constraint id check para EXP parc .)
    references      reduce using rule 72 (OPCOLUMN -> constraint id check para EXP parc .)
    not             reduce using rule 72 (OPCOLUMN -> constraint id check para EXP parc .)
    null            reduce using rule 72 (OPCOLUMN -> constraint id check para EXP parc .)
    parc            reduce using rule 72 (OPCOLUMN -> constraint id check para EXP parc .)
    coma            reduce using rule 72 (OPCOLUMN -> constraint id check para EXP parc .)


state 508

    (141) TIPO -> timestamp para int parc without time zone .

    constraint      reduce using rule 141 (TIPO -> timestamp para int parc without time zone .)
    default         reduce using rule 141 (TIPO -> timestamp para int parc without time zone .)
    primary         reduce using rule 141 (TIPO -> timestamp para int parc without time zone .)
    references      reduce using rule 141 (TIPO -> timestamp para int parc without time zone .)
    not             reduce using rule 141 (TIPO -> timestamp para int parc without time zone .)
    null            reduce using rule 141 (TIPO -> timestamp para int parc without time zone .)
    parc            reduce using rule 141 (TIPO -> timestamp para int parc without time zone .)
    coma            reduce using rule 141 (TIPO -> timestamp para int parc without time zone .)
    ptcoma          reduce using rule 141 (TIPO -> timestamp para int parc without time zone .)


state 509

    (143) TIPO -> timestamp para int parc with time zone .

    constraint      reduce using rule 143 (TIPO -> timestamp para int parc with time zone .)
    default         reduce using rule 143 (TIPO -> timestamp para int parc with time zone .)
    primary         reduce using rule 143 (TIPO -> timestamp para int parc with time zone .)
    references      reduce using rule 143 (TIPO -> timestamp para int parc with time zone .)
    not             reduce using rule 143 (TIPO -> timestamp para int parc with time zone .)
    null            reduce using rule 143 (TIPO -> timestamp para int parc with time zone .)
    parc            reduce using rule 143 (TIPO -> timestamp para int parc with time zone .)
    coma            reduce using rule 143 (TIPO -> timestamp para int parc with time zone .)
    ptcoma          reduce using rule 143 (TIPO -> timestamp para int parc with time zone .)


state 510

    (148) TIPO -> time para int parc without time zone .

    constraint      reduce using rule 148 (TIPO -> time para int parc without time zone .)
    default         reduce using rule 148 (TIPO -> time para int parc without time zone .)
    primary         reduce using rule 148 (TIPO -> time para int parc without time zone .)
    references      reduce using rule 148 (TIPO -> time para int parc without time zone .)
    not             reduce using rule 148 (TIPO -> time para int parc without time zone .)
    null            reduce using rule 148 (TIPO -> time para int parc without time zone .)
    parc            reduce using rule 148 (TIPO -> time para int parc without time zone .)
    coma            reduce using rule 148 (TIPO -> time para int parc without time zone .)
    ptcoma          reduce using rule 148 (TIPO -> time para int parc without time zone .)


state 511

    (150) TIPO -> time para int parc with time zone .

    constraint      reduce using rule 150 (TIPO -> time para int parc with time zone .)
    default         reduce using rule 150 (TIPO -> time para int parc with time zone .)
    primary         reduce using rule 150 (TIPO -> time para int parc with time zone .)
    references      reduce using rule 150 (TIPO -> time para int parc with time zone .)
    not             reduce using rule 150 (TIPO -> time para int parc with time zone .)
    null            reduce using rule 150 (TIPO -> time para int parc with time zone .)
    parc            reduce using rule 150 (TIPO -> time para int parc with time zone .)
    coma            reduce using rule 150 (TIPO -> time para int parc with time zone .)
    ptcoma          reduce using rule 150 (TIPO -> time para int parc with time zone .)


state 512

    (80) OPCONST -> foreign key para LEXP parc references table para . LEXP parc
    (124) LEXP -> . LEXP coma EXP
    (125) LEXP -> . EXP
    (163) EXP -> . EXP mas EXP
    (164) EXP -> . EXP menos EXP
    (165) EXP -> . EXP multiplicacion EXP
    (166) EXP -> . EXP division EXP
    (167) EXP -> . EXP modulo EXP
    (168) EXP -> . EXP elevado EXP
    (169) EXP -> . EXP and EXP
    (170) EXP -> . EXP or EXP
    (171) EXP -> . EXP mayor EXP
    (172) EXP -> . EXP menor EXP
    (173) EXP -> . EXP mayor_igual EXP
    (174) EXP -> . EXP menor_igual EXP
    (175) EXP -> . EXP igual EXP
    (176) EXP -> . EXP diferente1 EXP
    (177) EXP -> . EXP diferente2 EXP
    (178) EXP -> . EXP punto EXP
    (179) EXP -> . mas EXP
    (180) EXP -> . menos EXP
    (181) EXP -> . not EXP
    (182) EXP -> . para EXP parc
    (183) EXP -> . int
    (184) EXP -> . decimales
    (185) EXP -> . cadena
    (186) EXP -> . cadenaString
    (187) EXP -> . true
    (188) EXP -> . false
    (189) EXP -> . id
    (190) EXP -> . PNULL
    (191) EXP -> . SELECT
    (192) EXP -> . PREDICADOS
    (193) EXP -> . id para parc
    (194) EXP -> . id para LEXP parc
    (195) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (196) EXP -> . current_time
    (197) EXP -> . current_date
    (198) EXP -> . timestamp cadena
    (199) EXP -> . interval cadena
    (200) EXP -> . CASE
    (201) EXP -> . cadena like cadena
    (202) EXP -> . cadena not like cadena
    (203) EXP -> . any para LEXP parc
    (204) EXP -> . all para LEXP parc
    (205) EXP -> . some para LEXP parc
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . multiplicacion
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LEXP LIMIT COMBINING
    (213) PREDICADOS -> . EXP between EXP
    (214) PREDICADOS -> . EXP in para LEXP parc
    (215) PREDICADOS -> . EXP not in para LEXP parc
    (216) PREDICADOS -> . EXP not between EXP
    (217) PREDICADOS -> . EXP between symetric EXP
    (218) PREDICADOS -> . EXP not between symetric EXP
    (219) PREDICADOS -> . EXP is distinct r_from EXP
    (220) PREDICADOS -> . EXP is not distinct r_from EXP
    (221) PREDICADOS -> . EXP is PNULL
    (222) PREDICADOS -> . EXP isnull
    (223) PREDICADOS -> . EXP notnull
    (224) PREDICADOS -> . EXP is true
    (225) PREDICADOS -> . EXP is not true
    (226) PREDICADOS -> . EXP is false
    (227) PREDICADOS -> . EXP is not false
    (228) PREDICADOS -> . EXP is unknown
    (229) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 38
    menos           shift and go to state 39
    not             shift and go to state 41
    para            shift and go to state 42
    int             shift and go to state 43
    decimales       shift and go to state 44
    cadena          shift and go to state 45
    cadenaString    shift and go to state 46
    true            shift and go to state 47
    false           shift and go to state 48
    id              shift and go to state 49
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    multiplicacion  shift and go to state 40
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 514
    EXP                            shift and go to state 37
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 513

    (46) ADD -> foreign key para id parc references id para . id parc

    id              shift and go to state 515


state 514

    (80) OPCONST -> foreign key para LEXP parc references table para LEXP . parc
    (124) LEXP -> LEXP . coma EXP

    parc            shift and go to state 516
    coma            shift and go to state 82


state 515

    (46) ADD -> foreign key para id parc references id para id . parc

    parc            shift and go to state 517


state 516

    (80) OPCONST -> foreign key para LEXP parc references table para LEXP parc .

    parc            reduce using rule 80 (OPCONST -> foreign key para LEXP parc references table para LEXP parc .)
    coma            reduce using rule 80 (OPCONST -> foreign key para LEXP parc references table para LEXP parc .)


state 517

    (46) ADD -> foreign key para id parc references id para id parc .

    ptcoma          reduce using rule 46 (ADD -> foreign key para id parc references id para id parc .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for r_from in state 36 resolved as shift
WARNING: shift/reduce conflict for coma in state 36 resolved as shift
WARNING: shift/reduce conflict for limit in state 36 resolved as shift
WARNING: shift/reduce conflict for offset in state 36 resolved as shift
WARNING: shift/reduce conflict for mas in state 37 resolved as shift
WARNING: shift/reduce conflict for menos in state 37 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 37 resolved as shift
WARNING: shift/reduce conflict for division in state 37 resolved as shift
WARNING: shift/reduce conflict for modulo in state 37 resolved as shift
WARNING: shift/reduce conflict for elevado in state 37 resolved as shift
WARNING: shift/reduce conflict for and in state 37 resolved as shift
WARNING: shift/reduce conflict for or in state 37 resolved as shift
WARNING: shift/reduce conflict for mayor in state 37 resolved as shift
WARNING: shift/reduce conflict for menor in state 37 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 37 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 37 resolved as shift
WARNING: shift/reduce conflict for igual in state 37 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 37 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 37 resolved as shift
WARNING: shift/reduce conflict for punto in state 37 resolved as shift
WARNING: shift/reduce conflict for as in state 37 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 37 resolved as shift
WARNING: shift/reduce conflict for id in state 37 resolved as shift
WARNING: shift/reduce conflict for cadena in state 37 resolved as shift
WARNING: shift/reduce conflict for between in state 37 resolved as shift
WARNING: shift/reduce conflict for in in state 37 resolved as shift
WARNING: shift/reduce conflict for not in state 37 resolved as shift
WARNING: shift/reduce conflict for is in state 37 resolved as shift
WARNING: shift/reduce conflict for isnull in state 37 resolved as shift
WARNING: shift/reduce conflict for notnull in state 37 resolved as shift
WARNING: shift/reduce conflict for not in state 45 resolved as shift
WARNING: shift/reduce conflict for union in state 81 resolved as shift
WARNING: shift/reduce conflict for intersect in state 81 resolved as shift
WARNING: shift/reduce conflict for except in state 81 resolved as shift
WARNING: shift/reduce conflict for coma in state 144 resolved as shift
WARNING: shift/reduce conflict for union in state 144 resolved as shift
WARNING: shift/reduce conflict for where in state 144 resolved as shift
WARNING: shift/reduce conflict for mas in state 149 resolved as shift
WARNING: shift/reduce conflict for menos in state 149 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 149 resolved as shift
WARNING: shift/reduce conflict for division in state 149 resolved as shift
WARNING: shift/reduce conflict for modulo in state 149 resolved as shift
WARNING: shift/reduce conflict for elevado in state 149 resolved as shift
WARNING: shift/reduce conflict for and in state 149 resolved as shift
WARNING: shift/reduce conflict for or in state 149 resolved as shift
WARNING: shift/reduce conflict for mayor in state 149 resolved as shift
WARNING: shift/reduce conflict for menor in state 149 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 149 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 149 resolved as shift
WARNING: shift/reduce conflict for igual in state 149 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 149 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 149 resolved as shift
WARNING: shift/reduce conflict for punto in state 149 resolved as shift
WARNING: shift/reduce conflict for as in state 149 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 149 resolved as shift
WARNING: shift/reduce conflict for id in state 149 resolved as shift
WARNING: shift/reduce conflict for cadena in state 149 resolved as shift
WARNING: shift/reduce conflict for between in state 149 resolved as shift
WARNING: shift/reduce conflict for in in state 149 resolved as shift
WARNING: shift/reduce conflict for not in state 149 resolved as shift
WARNING: shift/reduce conflict for is in state 149 resolved as shift
WARNING: shift/reduce conflict for isnull in state 149 resolved as shift
WARNING: shift/reduce conflict for notnull in state 149 resolved as shift
WARNING: shift/reduce conflict for offset in state 150 resolved as shift
WARNING: shift/reduce conflict for offset in state 151 resolved as shift
WARNING: shift/reduce conflict for limit in state 152 resolved as shift
WARNING: shift/reduce conflict for coma in state 225 resolved as shift
WARNING: shift/reduce conflict for union in state 225 resolved as shift
WARNING: shift/reduce conflict for where in state 225 resolved as shift
WARNING: shift/reduce conflict for group in state 226 resolved as shift
WARNING: shift/reduce conflict for coma in state 229 resolved as shift
WARNING: shift/reduce conflict for coma in state 231 resolved as shift
WARNING: shift/reduce conflict for coma in state 233 resolved as shift
WARNING: shift/reduce conflict for group in state 292 resolved as shift
WARNING: shift/reduce conflict for having in state 293 resolved as shift
WARNING: shift/reduce conflict for coma in state 295 resolved as shift
WARNING: shift/reduce conflict for coma in state 298 resolved as shift
WARNING: shift/reduce conflict for coma in state 300 resolved as shift
WARNING: shift/reduce conflict for coma in state 302 resolved as shift
WARNING: shift/reduce conflict for coma in state 303 resolved as shift
WARNING: shift/reduce conflict for having in state 363 resolved as shift
WARNING: shift/reduce conflict for order in state 364 resolved as shift
WARNING: shift/reduce conflict for coma in state 368 resolved as shift
WARNING: shift/reduce conflict for parc in state 369 resolved as shift
WARNING: shift/reduce conflict for order in state 417 resolved as shift
WARNING: shift/reduce conflict for limit in state 418 resolved as shift
WARNING: shift/reduce conflict for offset in state 418 resolved as shift
WARNING: shift/reduce conflict for coma in state 420 resolved as shift
WARNING: shift/reduce conflict for coma in state 421 resolved as shift
WARNING: shift/reduce conflict for not in state 426 resolved as shift
WARNING: shift/reduce conflict for limit in state 457 resolved as shift
WARNING: shift/reduce conflict for offset in state 457 resolved as shift
WARNING: shift/reduce conflict for union in state 458 resolved as shift
WARNING: shift/reduce conflict for intersect in state 458 resolved as shift
WARNING: shift/reduce conflict for except in state 458 resolved as shift
WARNING: shift/reduce conflict for union in state 482 resolved as shift
WARNING: shift/reduce conflict for intersect in state 482 resolved as shift
WARNING: shift/reduce conflict for except in state 482 resolved as shift
WARNING: shift/reduce conflict for coma in state 484 resolved as shift
WARNING: shift/reduce conflict for asc in state 484 resolved as shift
WARNING: shift/reduce conflict for desc in state 484 resolved as shift
WARNING: reduce/reduce conflict in state 114 resolved using rule (PNULL -> not null)
WARNING: rejected rule (PNULL -> null) in state 114
