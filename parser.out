Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    call

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> SELECT ptcoma
Rule 5     instruccion -> CREATETABLE
Rule 6     instruccion -> UPDATE ptcoma
Rule 7     instruccion -> DELETE ptcoma
Rule 8     instruccion -> ALTER ptcoma
Rule 9     instruccion -> DROP ptcoma
Rule 10    instruccion -> INSERT ptcoma
Rule 11    instruccion -> CREATETYPE ptcoma
Rule 12    instruccion -> CASE ptcoma
Rule 13    instruccion -> CREATEDB ptcoma
Rule 14    instruccion -> SHOWDB ptcoma
Rule 15    instruccion -> SHOW ptcoma
Rule 16    instruccion -> use id ptcoma
Rule 17    instruccion -> CREATEINDEX ptcoma
Rule 18    instruccion -> CREATEINDEX WHERE ptcoma
Rule 19    instruccion -> ASIGNACION ptcoma
Rule 20    instruccion -> CONDICIONIF ptcoma
Rule 21    instruccion -> PROCEDIMIENTOS
Rule 22    instruccion -> FUNCIONES
Rule 23    instruccion -> CALLPROCEDURE ptcoma
Rule 24    instruccion -> DROPFUNC ptcoma
Rule 25    instruccion -> DROPPROCEDURE ptcoma
Rule 26    RETURN -> return EXP
Rule 27    FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP
Rule 28    FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP
Rule 29    FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE
Rule 30    FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE
Rule 31    DROPFUNC -> drop function id
Rule 32    DROPFUNC -> drop function if exist id
Rule 33    DROPPROCEDURE -> drop procedure id
Rule 34    RETURNP -> returns TIPO
Rule 35    CALLPROCEDURE -> execute id para LEXP parc
Rule 36    CALLPROCEDURE -> execute id para parc
Rule 37    PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP
Rule 38    PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP
Rule 39    PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE
Rule 40    PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE
Rule 41    LCONTENIDOP -> LCONTENIDOP CONTENIDOP
Rule 42    LCONTENIDOP -> CONTENIDOP
Rule 43    CONTENIDOP -> as dolarn LISTACONTENIDO dolarn
Rule 44    CONTENIDOP -> do dolarn LISTACONTENIDO dolarn
Rule 45    LPARAM -> LPARAM coma inout id TIPO
Rule 46    LPARAM -> LPARAM coma id TIPO
Rule 47    LPARAM -> inout id TIPO
Rule 48    LPARAM -> id TIPO
Rule 49    LENGUAJE -> language plpgsql
Rule 50    LENGUAJE -> language plpgsql ptcoma
Rule 51    BEGINEND -> begin LISTACONTENIDO end
Rule 52    CREATEINDEX -> create index id on id para LEXP parc
Rule 53    CREATEINDEX -> create unique index id on id para LEXP parc
Rule 54    CREATEINDEX -> create index id on id using hash para LEXP parc
Rule 55    CREATEINDEX -> create index id on id para id ORDEN parc
Rule 56    CREATEINDEX -> create index id on id para id id ORDEN parc
Rule 57    CREATEINDEX -> create index id on id para id id parc
Rule 58    ORDEN -> asc
Rule 59    ORDEN -> desc
Rule 60    ORDEN -> nulls first
Rule 61    ORDEN -> nulls last
Rule 62    ORDEN -> asc nulls first
Rule 63    ORDEN -> desc nulls last
Rule 64    ORDEN -> desc nulls first
Rule 65    ORDEN -> asc nulls last
Rule 66    LDEC -> LDEC DECLARACIONES
Rule 67    LDEC -> DECLARACIONES
Rule 68    DECLARACIONES -> id TIPO not null ASIG ptcoma
Rule 69    DECLARACIONES -> id TIPO ASIG ptcoma
Rule 70    DECLARACIONES -> id constant TIPO not null ASIG ptcoma
Rule 71    DECLARACIONES -> id constant TIPO ASIG ptcoma
Rule 72    ASIG -> default EXP
Rule 73    ASIG -> dospuntos igual EXP
Rule 74    ASIG -> igual EXP
Rule 75    ASIG -> <empty>
Rule 76    ASIGNACION -> id dospuntos igual EXP
Rule 77    ASIGNACION -> id igual EXP
Rule 78    CONDICIONIF -> if EXP then LISTACONTENIDO ELSEF end if
Rule 79    CONDICIONIF -> if EXP then LISTACONTENIDO LELIF end if
Rule 80    CONDICIONIF -> if EXP then LISTACONTENIDO end if
Rule 81    CONDICIONIF -> if EXP then LISTACONTENIDO LELIF ELSEF end if
Rule 82    LELIF -> LELIF elsif EXP then LISTACONTENIDO
Rule 83    LELIF -> elsif EXP then LISTACONTENIDO
Rule 84    ELSEF -> else LISTACONTENIDO
Rule 85    CASE -> case EXP LISTAWHEN ELSEF end case
Rule 86    CASE -> case EXP LISTAWHEN end case
Rule 87    CASE -> case LISTAWHEN ELSEF end case
Rule 88    CASE -> case LISTAWHEN end case
Rule 89    LISTACONTENIDO -> LISTACONTENIDO CONTENIDO
Rule 90    LISTACONTENIDO -> CONTENIDO
Rule 91    CONTENIDO -> ASIGNACION ptcoma
Rule 92    CONTENIDO -> CONDICIONIF ptcoma
Rule 93    CONTENIDO -> RAISE ptcoma
Rule 94    CONTENIDO -> BEGINEND ptcoma
Rule 95    CONTENIDO -> CALLPROCEDURE ptcoma
Rule 96    CONTENIDO -> declare LDEC
Rule 97    CONTENIDO -> RETURN ptcoma
Rule 98    CONTENIDO -> INSERT ptcoma
Rule 99    CONTENIDO -> SELECT ptcoma
Rule 100   CONTENIDO -> UPDATE ptcoma
Rule 101   CONTENIDO -> DELETE ptcoma
Rule 102   CONTENIDO -> CASE ptcoma
Rule 103   RAISE -> raise LEVEL FORMAT
Rule 104   RAISE -> raise LEVEL EXP
Rule 105   RAISE -> raise LEVEL
Rule 106   RAISE -> raise
Rule 107   RAISE -> raise LEVEL cadena coma id
Rule 108   LEVEL -> info
Rule 109   LEVEL -> debug
Rule 110   LEVEL -> notice
Rule 111   LEVEL -> warning
Rule 112   LEVEL -> exception
Rule 113   FORMAT -> format para EXP coma LEXP parc
Rule 114   LISTAWHEN -> LISTAWHEN WHEN
Rule 115   LISTAWHEN -> WHEN
Rule 116   WHEN -> when EXP then LISTACONTENIDO
Rule 117   ELSE -> else LEXP
Rule 118   INSERT -> insert into id values para LEXP parc
Rule 119   INSERT -> insert into id para LEXP parc values para LEXP parc
Rule 120   DROP -> drop all para parc
Rule 121   DROP -> drop table id
Rule 122   DROP -> drop index id
Rule 123   DROP -> drop databases if exist id
Rule 124   DROP -> drop databases id
Rule 125   ALTER -> alter databases id rename to id
Rule 126   ALTER -> alter databases id owner to id
Rule 127   ALTER -> alter table id LOP
Rule 128   ALTER -> alter index id alter EXP
Rule 129   ALTER -> alter index if exist id alter EXP
Rule 130   ALTER -> alter index id alter column EXP
Rule 131   ALTER -> alter index if exist id alter column EXP
Rule 132   LOP -> LOP coma OP
Rule 133   LOP -> OP
Rule 134   OP -> add column id TIPO
Rule 135   OP -> add check para CONDCHECK parc
Rule 136   OP -> add constraint id check para CONDCHECK parc
Rule 137   OP -> add constraint id unique para LEXP parc
Rule 138   OP -> add unique para LEXP parc
Rule 139   OP -> add foreign key para LEXP parc references id para LEXP parc
Rule 140   OP -> add constraint id foreign key para LEXP parc references id para LEXP parc
Rule 141   OP -> alter column id set not null
Rule 142   OP -> alter column id set null
Rule 143   OP -> drop constraint id
Rule 144   OP -> drop column LEXP
Rule 145   OP -> drop check id
Rule 146   OP -> rename column id to id
Rule 147   OP -> alter column id type TIPO
Rule 148   SHOWDB -> show dbs
Rule 149   SHOW -> show tables para id parc
Rule 150   SHOW -> show collection para parc
Rule 151   CREATEDB -> create RD if not exist id
Rule 152   CREATEDB -> create RD if not exist id OPCCDB
Rule 153   CREATEDB -> create RD id
Rule 154   CREATEDB -> create RD id OPCCDB
Rule 155   OPCCDB -> PROPIETARIO
Rule 156   OPCCDB -> MODO
Rule 157   OPCCDB -> PROPIETARIO MODO
Rule 158   RD -> or replace databases
Rule 159   RD -> databases
Rule 160   PROPIETARIO -> owner igual id
Rule 161   PROPIETARIO -> owner igual cadena
Rule 162   PROPIETARIO -> owner igual cadenaString
Rule 163   PROPIETARIO -> owner id
Rule 164   PROPIETARIO -> owner cadena
Rule 165   PROPIETARIO -> owner cadenaString
Rule 166   MODO -> mode igual int
Rule 167   MODO -> mode int
Rule 168   CREATETABLE -> create table id para LDEF parc ptcoma
Rule 169   CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma
Rule 170   LDEF -> LDEF coma COLDEF
Rule 171   LDEF -> COLDEF
Rule 172   COLDEF -> OPCONST
Rule 173   COLDEF -> constraint id OPCONST
Rule 174   COLDEF -> id TIPO
Rule 175   COLDEF -> id TIPO LOPCOLUMN
Rule 176   LOPCOLUMN -> LOPCOLUMN OPCOLUMN
Rule 177   LOPCOLUMN -> OPCOLUMN
Rule 178   OPCOLUMN -> constraint id unique
Rule 179   OPCOLUMN -> unique
Rule 180   OPCOLUMN -> constraint id check para CONDCHECK parc
Rule 181   OPCOLUMN -> check para CONDCHECK parc
Rule 182   OPCOLUMN -> default EXP
Rule 183   OPCOLUMN -> not null
Rule 184   OPCOLUMN -> null
Rule 185   OPCOLUMN -> primary key
Rule 186   OPCOLUMN -> references id
Rule 187   OPCONST -> primary key para LEXP parc
Rule 188   OPCONST -> foreign key para LEXP parc references id para LEXP parc
Rule 189   OPCONST -> unique para LEXP parc
Rule 190   OPCONST -> check para CONDCHECK parc
Rule 191   CONDCHECK -> EXP mayor EXP
Rule 192   CONDCHECK -> EXP menor EXP
Rule 193   CONDCHECK -> EXP mayor_igual EXP
Rule 194   CONDCHECK -> EXP menor_igual EXP
Rule 195   CONDCHECK -> EXP igual EXP
Rule 196   CONDCHECK -> EXP diferente1 EXP
Rule 197   CONDCHECK -> EXP diferente2 EXP
Rule 198   HERENCIA -> inherits para id parc
Rule 199   CREATETYPE -> create type id as enum para LEXP parc
Rule 200   SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
Rule 201   SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
Rule 202   SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
Rule 203   LIMIT -> limit int
Rule 204   LIMIT -> limit all
Rule 205   LIMIT -> offset int
Rule 206   LIMIT -> limit int offset int
Rule 207   LIMIT -> offset int limit int
Rule 208   LIMIT -> limit all offset int
Rule 209   LIMIT -> offset int limit all
Rule 210   LIMIT -> <empty>
Rule 211   WHERE -> where EXP
Rule 212   WHERE -> where EXIST
Rule 213   WHERE -> <empty>
Rule 214   COMBINING -> union EXP
Rule 215   COMBINING -> union all EXP
Rule 216   COMBINING -> intersect EXP
Rule 217   COMBINING -> except EXP
Rule 218   COMBINING -> <empty>
Rule 219   GROUP -> group by LEXP
Rule 220   GROUP -> <empty>
Rule 221   HAVING -> having EXP
Rule 222   HAVING -> <empty>
Rule 223   ORDER -> order by LEXP ORD
Rule 224   ORDER -> order by LEXP
Rule 225   ORDER -> <empty>
Rule 226   ORD -> asc
Rule 227   ORD -> desc
Rule 228   UPDATE -> update id set LCAMPOS WHERE
Rule 229   LCAMPOS -> LCAMPOS coma id igual EXP
Rule 230   LCAMPOS -> id igual EXP
Rule 231   DELETE -> delete r_from id WHERE
Rule 232   EXIST -> exist para SELECT parc
Rule 233   EXIST -> not exist para SELECT parc
Rule 234   LEXP -> LEXP coma EXP
Rule 235   LEXP -> EXP
Rule 236   TIPO -> interval cadena
Rule 237   TIPO -> decimal para int coma int parc
Rule 238   TIPO -> decimal para int parc
Rule 239   TIPO -> decimal
Rule 240   TIPO -> numeric para int coma int parc
Rule 241   TIPO -> numeric para int parc
Rule 242   TIPO -> numeric
Rule 243   TIPO -> varchar para int parc
Rule 244   TIPO -> timestamp para int parc
Rule 245   TIPO -> character para int parc
Rule 246   TIPO -> interval para int parc
Rule 247   TIPO -> char para int parc
Rule 248   TIPO -> time para int parc
Rule 249   TIPO -> character varying para int parc
Rule 250   TIPO -> id modulo rowtype
Rule 251   TIPO -> idPunto modulo type
Rule 252   TIPO -> timestamp para int parc without time zone
Rule 253   TIPO -> timestamp para int parc with time zone
Rule 254   TIPO -> time para int parc without time zone
Rule 255   TIPO -> time para int parc with time zone
Rule 256   TIPO -> interval para int parc cadena
Rule 257   TIPO -> smallint
Rule 258   TIPO -> integer
Rule 259   TIPO -> r_int
Rule 260   TIPO -> bigint
Rule 261   TIPO -> real
Rule 262   TIPO -> double precision
Rule 263   TIPO -> money
Rule 264   TIPO -> text
Rule 265   TIPO -> timestamp
Rule 266   TIPO -> date
Rule 267   TIPO -> time
Rule 268   TIPO -> interval
Rule 269   TIPO -> boolean
Rule 270   TIPO -> record
Rule 271   TIPO -> varchar
Rule 272   TIPO -> timestamp without time zone
Rule 273   TIPO -> timestamp with time zone
Rule 274   TIPO -> time without time zone
Rule 275   TIPO -> time with time zone
Rule 276   TIPO -> id
Rule 277   FIELDS -> year
Rule 278   FIELDS -> month
Rule 279   FIELDS -> day
Rule 280   FIELDS -> hour
Rule 281   FIELDS -> minute
Rule 282   FIELDS -> second
Rule 283   EXP -> EXP mas EXP
Rule 284   EXP -> EXP menos EXP
Rule 285   EXP -> EXP multiplicacion EXP
Rule 286   EXP -> EXP division EXP
Rule 287   EXP -> EXP modulo EXP
Rule 288   EXP -> EXP elevado EXP
Rule 289   EXP -> EXP and EXP
Rule 290   EXP -> EXP or EXP
Rule 291   EXP -> EXP mayor EXP
Rule 292   EXP -> EXP menor EXP
Rule 293   EXP -> EXP mayor_igual EXP
Rule 294   EXP -> EXP menor_igual EXP
Rule 295   EXP -> EXP igual EXP
Rule 296   EXP -> EXP diferente1 EXP
Rule 297   EXP -> EXP diferente2 EXP
Rule 298   EXP -> EXP between EXP
Rule 299   EXP -> EXP is not null
Rule 300   EXP -> EXP is null
Rule 301   EXP -> EXP isnull
Rule 302   EXP -> EXP notnull
Rule 303   EXP -> EXP is true
Rule 304   EXP -> EXP is not true
Rule 305   EXP -> EXP is false
Rule 306   EXP -> EXP is not false
Rule 307   EXP -> EXP is unknown
Rule 308   EXP -> EXP is not unknown
Rule 309   EXP -> EXP as cadenaString
Rule 310   EXP -> EXP cadenaString
Rule 311   EXP -> EXP as cadena
Rule 312   EXP -> EXP cadena
Rule 313   EXP -> EXP as id
Rule 314   EXP -> EXP id
Rule 315   EXP -> mas EXP
Rule 316   EXP -> menos EXP
Rule 317   EXP -> not EXP
Rule 318   EXP -> EXP in para EXP parc
Rule 319   EXP -> EXP not in para EXP parc
Rule 320   EXP -> EXP not between EXP
Rule 321   EXP -> EXP between symetric EXP
Rule 322   EXP -> EXP not between symetric EXP
Rule 323   EXP -> EXP is distinct r_from EXP
Rule 324   EXP -> EXP is not distinct r_from EXP
Rule 325   EXP -> EXP like cadena
Rule 326   EXP -> EXP not like cadena
Rule 327   EXP -> SELECT
Rule 328   EXP -> para EXP parc
Rule 329   EXP -> id para LEXP parc
Rule 330   EXP -> id para parc
Rule 331   EXP -> any para LEXP parc
Rule 332   EXP -> all para LEXP parc
Rule 333   EXP -> some para LEXP parc
Rule 334   EXP -> extract para FIELDS r_from timestamp cadena parc
Rule 335   EXP -> int
Rule 336   EXP -> decimales
Rule 337   EXP -> cadena
Rule 338   EXP -> cadenaString
Rule 339   EXP -> true
Rule 340   EXP -> false
Rule 341   EXP -> id
Rule 342   EXP -> multiplicacion
Rule 343   EXP -> null
Rule 344   EXP -> current_time
Rule 345   EXP -> current_date
Rule 346   EXP -> timestamp cadena
Rule 347   EXP -> interval cadena
Rule 348   EXP -> cadena as TIPO
Rule 349   EXP -> default
Rule 350   EXP -> idPunto

Terminals, with rules where they appear

add                  : 134 135 136 137 138 139 140
all                  : 120 204 208 209 215 332
alter                : 125 126 127 128 128 129 129 130 130 131 131 141 142 147
and                  : 289
any                  : 331
as                   : 43 199 309 311 313 348
asc                  : 58 62 65 226
begin                : 51
between              : 298 320 321 322
bigint               : 260
boolean              : 269
by                   : 219 223 224
cadena               : 107 161 164 236 256 311 312 325 326 334 337 346 347 348
cadenaString         : 162 165 309 310 338
call                 : 
case                 : 85 85 86 86 87 87 88 88
char                 : 247
character            : 245 249
check                : 135 136 145 180 181 190
collection           : 150
column               : 130 131 134 141 142 144 146 147
coma                 : 45 46 107 113 132 170 229 234 237 240
constant             : 70 71
constraint           : 136 137 140 143 173 178 180
create               : 27 28 29 30 37 38 39 40 52 53 54 55 56 57 151 152 153 154 168 169 199
current_date         : 345
current_time         : 344
databases            : 123 124 125 126 158 159
date                 : 266
day                  : 279
dbs                  : 148
debug                : 109
decimal              : 237 238 239
decimales            : 336
declare              : 96
default              : 72 182 349
delete               : 231
desc                 : 59 63 64 227
diferente1           : 196 296
diferente2           : 197 297
distinct             : 200 323 324
division             : 286
do                   : 44
dolarn               : 43 43 44 44
dospuntos            : 73 76
double               : 262
drop                 : 31 32 33 120 121 122 123 124 143 144 145
elevado              : 288
else                 : 84 117
elsif                : 82 83
end                  : 51 78 79 80 81 85 86 87 88
enum                 : 199
error                : 
except               : 217
exception            : 112
execute              : 35 36
exist                : 32 123 129 131 151 152 232 233
extract              : 334
false                : 305 306 340
first                : 60 62 64
foreign              : 139 140 188
format               : 113
function             : 27 28 29 30 31 32
group                : 219
hash                 : 54
having               : 221
hour                 : 280
id                   : 16 27 28 29 30 31 32 33 35 36 37 38 39 40 45 46 47 48 52 52 53 53 54 54 55 55 55 56 56 56 56 57 57 57 57 68 69 70 71 76 77 107 118 119 121 122 123 124 125 125 126 126 127 128 129 130 131 134 136 137 139 140 140 141 142 143 145 146 146 147 149 151 152 153 154 160 163 168 169 173 174 175 178 180 186 188 198 199 228 229 230 231 250 276 313 314 329 330 341
idPunto              : 251 350
if                   : 32 78 78 79 79 80 80 81 81 123 129 131 151 152
igual                : 73 74 76 77 160 161 162 166 195 229 230 295
in                   : 318 319
index                : 52 53 54 55 56 57 122 128 129 130 131
info                 : 108
inherits             : 198
inout                : 45 47
insert               : 118 119
int                  : 166 167 203 205 206 206 207 207 208 209 237 237 238 240 240 241 243 244 245 246 247 248 249 252 253 254 255 256 335
integer              : 258
intersect            : 216
interval             : 236 246 256 268 347
into                 : 118 119
is                   : 299 300 303 304 305 306 307 308 323 324
isnull               : 301
key                  : 139 140 185 187 188
language             : 49 50
last                 : 61 63 65
like                 : 325 326
limit                : 203 204 206 207 208 209
mas                  : 283 315
mayor                : 191 291
mayor_igual          : 193 293
menor                : 192 292
menor_igual          : 194 294
menos                : 284 316
minute               : 281
mode                 : 166 167
modulo               : 250 251 287
money                : 263
month                : 278
multiplicacion       : 285 342
not                  : 68 70 141 151 152 183 233 299 304 306 308 317 319 320 322 324 326
notice               : 110
notnull              : 302
null                 : 68 70 141 142 183 184 299 300 343
nulls                : 60 61 62 63 64 65
numeric              : 240 241 242
offset               : 205 206 207 208 209
on                   : 52 53 54 55 56 57
or                   : 158 290
order                : 223 224
owner                : 126 160 161 162 163 164 165
para                 : 27 28 29 30 35 36 37 38 39 40 52 53 54 55 56 57 113 118 119 119 120 135 136 137 138 139 139 140 140 149 150 168 169 180 181 187 188 188 189 190 198 199 232 233 237 238 240 241 243 244 245 246 247 248 249 252 253 254 255 256 318 319 328 329 330 331 332 333 334
parc                 : 27 28 29 30 35 36 37 38 39 40 52 53 54 55 56 57 113 118 119 119 120 135 136 137 138 139 139 140 140 149 150 168 169 180 181 187 188 188 189 190 198 199 232 233 237 238 240 241 243 244 245 246 247 248 249 252 253 254 255 256 318 319 328 329 330 331 332 333 334
plpgsql              : 49 50
precision            : 262
primary              : 185 187
procedure            : 33 37 38 39 40
ptcoma               : 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 23 24 25 50 68 69 70 71 91 92 93 94 95 97 98 99 100 101 102 168 169
r_from               : 200 201 231 323 324 334
r_int                : 259
raise                : 103 104 105 106 107
real                 : 261
record               : 270
references           : 139 140 186 188
rename               : 125 146
replace              : 158
return               : 26
returns              : 34
rowtype              : 250
second               : 282
select               : 200 201 202
set                  : 141 142 228
show                 : 148 149 150
smallint             : 257
some                 : 333
symetric             : 321 322
table                : 121 127 168 169
tables               : 149
text                 : 264
then                 : 78 79 80 81 82 83 116
time                 : 248 252 253 254 254 255 255 267 272 273 274 274 275 275
timestamp            : 244 252 253 265 272 273 334 346
to                   : 125 126 146
true                 : 303 304 339
type                 : 147 199 251
union                : 214 215
unique               : 53 137 138 178 179 189
unknown              : 307 308
update               : 228
use                  : 16
using                : 54
values               : 118 119
varchar              : 243 271
varying              : 249
warning              : 111
when                 : 116
where                : 211 212
with                 : 253 255 273 275
without              : 252 254 272 274
year                 : 277
zone                 : 252 253 254 255 272 273 274 275

Nonterminals, with rules where they appear

ALTER                : 8
ASIG                 : 68 69 70 71
ASIGNACION           : 19 91
BEGINEND             : 94
CALLPROCEDURE        : 23 95
CASE                 : 12 102
COLDEF               : 170 171
COMBINING            : 200 201 202
CONDCHECK            : 135 136 180 181 190
CONDICIONIF          : 20 92
CONTENIDO            : 89 90
CONTENIDOP           : 41 42
CREATEDB             : 13
CREATEINDEX          : 17 18
CREATETABLE          : 5
CREATETYPE           : 11
DECLARACIONES        : 66 67
DELETE               : 7 101
DROP                 : 9
DROPFUNC             : 24
DROPPROCEDURE        : 25
ELSE                 : 
ELSEF                : 78 81 85 87
EXIST                : 212
EXP                  : 26 72 73 74 76 77 78 79 80 81 82 83 85 86 104 113 116 128 129 130 131 182 191 191 192 192 193 193 194 194 195 195 196 196 197 197 211 214 215 216 217 221 229 230 234 235 283 283 284 284 285 285 286 286 287 287 288 288 289 289 290 290 291 291 292 292 293 293 294 294 295 295 296 296 297 297 298 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 318 319 319 320 320 321 321 322 322 323 323 324 324 325 326 328
FIELDS               : 334
FORMAT               : 103
FUNCIONES            : 22
GROUP                : 200 201 202
HAVING               : 200 201 202
HERENCIA             : 169
INSERT               : 10 98
LCAMPOS              : 228 229
LCONTENIDOP          : 27 28 29 30 37 38 39 40 41
LDEC                 : 66 96
LDEF                 : 168 169 170
LELIF                : 79 81 82
LENGUAJE             : 27 28 29 30 37 38 39 40
LEVEL                : 103 104 105 107
LEXP                 : 35 52 53 54 113 117 118 119 119 137 138 139 139 140 140 144 187 188 188 189 199 200 200 201 201 202 219 223 224 234 329 331 332 333
LIMIT                : 200 201 202
LISTACONTENIDO       : 43 44 51 78 79 80 81 82 83 84 89 116
LISTAWHEN            : 85 86 87 88 114
LOP                  : 127 132
LOPCOLUMN            : 175 176
LPARAM               : 27 29 37 39 45 46
MODO                 : 156 157
OP                   : 132 133
OPCCDB               : 152 154
OPCOLUMN             : 176 177
OPCONST              : 172 173
ORD                  : 223
ORDEN                : 55 56
ORDER                : 200 201 202
PROCEDIMIENTOS       : 21
PROPIETARIO          : 155 157
RAISE                : 93
RD                   : 151 152 153 154
RETURN               : 97
RETURNP              : 27 28 29 30
SELECT               : 4 99 232 233 327
SHOW                 : 15
SHOWDB               : 14
TIPO                 : 34 45 46 47 48 68 69 70 71 134 147 174 175 348
UPDATE               : 6 100
WHEN                 : 114 115
WHERE                : 18 200 201 202 228 231
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . SELECT ptcoma
    (5) instruccion -> . CREATETABLE
    (6) instruccion -> . UPDATE ptcoma
    (7) instruccion -> . DELETE ptcoma
    (8) instruccion -> . ALTER ptcoma
    (9) instruccion -> . DROP ptcoma
    (10) instruccion -> . INSERT ptcoma
    (11) instruccion -> . CREATETYPE ptcoma
    (12) instruccion -> . CASE ptcoma
    (13) instruccion -> . CREATEDB ptcoma
    (14) instruccion -> . SHOWDB ptcoma
    (15) instruccion -> . SHOW ptcoma
    (16) instruccion -> . use id ptcoma
    (17) instruccion -> . CREATEINDEX ptcoma
    (18) instruccion -> . CREATEINDEX WHERE ptcoma
    (19) instruccion -> . ASIGNACION ptcoma
    (20) instruccion -> . CONDICIONIF ptcoma
    (21) instruccion -> . PROCEDIMIENTOS
    (22) instruccion -> . FUNCIONES
    (23) instruccion -> . CALLPROCEDURE ptcoma
    (24) instruccion -> . DROPFUNC ptcoma
    (25) instruccion -> . DROPPROCEDURE ptcoma
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (168) CREATETABLE -> . create table id para LDEF parc ptcoma
    (169) CREATETABLE -> . create table id para LDEF parc HERENCIA ptcoma
    (228) UPDATE -> . update id set LCAMPOS WHERE
    (231) DELETE -> . delete r_from id WHERE
    (125) ALTER -> . alter databases id rename to id
    (126) ALTER -> . alter databases id owner to id
    (127) ALTER -> . alter table id LOP
    (128) ALTER -> . alter index id alter EXP
    (129) ALTER -> . alter index if exist id alter EXP
    (130) ALTER -> . alter index id alter column EXP
    (131) ALTER -> . alter index if exist id alter column EXP
    (120) DROP -> . drop all para parc
    (121) DROP -> . drop table id
    (122) DROP -> . drop index id
    (123) DROP -> . drop databases if exist id
    (124) DROP -> . drop databases id
    (118) INSERT -> . insert into id values para LEXP parc
    (119) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (199) CREATETYPE -> . create type id as enum para LEXP parc
    (85) CASE -> . case EXP LISTAWHEN ELSEF end case
    (86) CASE -> . case EXP LISTAWHEN end case
    (87) CASE -> . case LISTAWHEN ELSEF end case
    (88) CASE -> . case LISTAWHEN end case
    (151) CREATEDB -> . create RD if not exist id
    (152) CREATEDB -> . create RD if not exist id OPCCDB
    (153) CREATEDB -> . create RD id
    (154) CREATEDB -> . create RD id OPCCDB
    (148) SHOWDB -> . show dbs
    (149) SHOW -> . show tables para id parc
    (150) SHOW -> . show collection para parc
    (52) CREATEINDEX -> . create index id on id para LEXP parc
    (53) CREATEINDEX -> . create unique index id on id para LEXP parc
    (54) CREATEINDEX -> . create index id on id using hash para LEXP parc
    (55) CREATEINDEX -> . create index id on id para id ORDEN parc
    (56) CREATEINDEX -> . create index id on id para id id ORDEN parc
    (57) CREATEINDEX -> . create index id on id para id id parc
    (76) ASIGNACION -> . id dospuntos igual EXP
    (77) ASIGNACION -> . id igual EXP
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (80) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (81) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (37) PROCEDIMIENTOS -> . create procedure id para LPARAM parc LENGUAJE LCONTENIDOP
    (38) PROCEDIMIENTOS -> . create procedure id para parc LENGUAJE LCONTENIDOP
    (39) PROCEDIMIENTOS -> . create procedure id para LPARAM parc LCONTENIDOP LENGUAJE
    (40) PROCEDIMIENTOS -> . create procedure id para parc LCONTENIDOP LENGUAJE
    (27) FUNCIONES -> . create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP
    (28) FUNCIONES -> . create function id para parc RETURNP LENGUAJE LCONTENIDOP
    (29) FUNCIONES -> . create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE
    (30) FUNCIONES -> . create function id para parc RETURNP LCONTENIDOP LENGUAJE
    (35) CALLPROCEDURE -> . execute id para LEXP parc
    (36) CALLPROCEDURE -> . execute id para parc
    (31) DROPFUNC -> . drop function id
    (32) DROPFUNC -> . drop function if exist id
    (33) DROPPROCEDURE -> . drop procedure id

    use             shift and go to state 16
    select          shift and go to state 26
    create          shift and go to state 27
    update          shift and go to state 28
    delete          shift and go to state 29
    alter           shift and go to state 30
    drop            shift and go to state 32
    insert          shift and go to state 33
    case            shift and go to state 34
    show            shift and go to state 35
    id              shift and go to state 17
    if              shift and go to state 31
    execute         shift and go to state 36

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    SELECT                         shift and go to state 4
    CREATETABLE                    shift and go to state 5
    UPDATE                         shift and go to state 6
    DELETE                         shift and go to state 7
    ALTER                          shift and go to state 8
    DROP                           shift and go to state 9
    INSERT                         shift and go to state 10
    CREATETYPE                     shift and go to state 11
    CASE                           shift and go to state 12
    CREATEDB                       shift and go to state 13
    SHOWDB                         shift and go to state 14
    SHOW                           shift and go to state 15
    CREATEINDEX                    shift and go to state 18
    ASIGNACION                     shift and go to state 19
    CONDICIONIF                    shift and go to state 20
    PROCEDIMIENTOS                 shift and go to state 21
    FUNCIONES                      shift and go to state 22
    CALLPROCEDURE                  shift and go to state 23
    DROPFUNC                       shift and go to state 24
    DROPPROCEDURE                  shift and go to state 25

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . SELECT ptcoma
    (5) instruccion -> . CREATETABLE
    (6) instruccion -> . UPDATE ptcoma
    (7) instruccion -> . DELETE ptcoma
    (8) instruccion -> . ALTER ptcoma
    (9) instruccion -> . DROP ptcoma
    (10) instruccion -> . INSERT ptcoma
    (11) instruccion -> . CREATETYPE ptcoma
    (12) instruccion -> . CASE ptcoma
    (13) instruccion -> . CREATEDB ptcoma
    (14) instruccion -> . SHOWDB ptcoma
    (15) instruccion -> . SHOW ptcoma
    (16) instruccion -> . use id ptcoma
    (17) instruccion -> . CREATEINDEX ptcoma
    (18) instruccion -> . CREATEINDEX WHERE ptcoma
    (19) instruccion -> . ASIGNACION ptcoma
    (20) instruccion -> . CONDICIONIF ptcoma
    (21) instruccion -> . PROCEDIMIENTOS
    (22) instruccion -> . FUNCIONES
    (23) instruccion -> . CALLPROCEDURE ptcoma
    (24) instruccion -> . DROPFUNC ptcoma
    (25) instruccion -> . DROPPROCEDURE ptcoma
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (168) CREATETABLE -> . create table id para LDEF parc ptcoma
    (169) CREATETABLE -> . create table id para LDEF parc HERENCIA ptcoma
    (228) UPDATE -> . update id set LCAMPOS WHERE
    (231) DELETE -> . delete r_from id WHERE
    (125) ALTER -> . alter databases id rename to id
    (126) ALTER -> . alter databases id owner to id
    (127) ALTER -> . alter table id LOP
    (128) ALTER -> . alter index id alter EXP
    (129) ALTER -> . alter index if exist id alter EXP
    (130) ALTER -> . alter index id alter column EXP
    (131) ALTER -> . alter index if exist id alter column EXP
    (120) DROP -> . drop all para parc
    (121) DROP -> . drop table id
    (122) DROP -> . drop index id
    (123) DROP -> . drop databases if exist id
    (124) DROP -> . drop databases id
    (118) INSERT -> . insert into id values para LEXP parc
    (119) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (199) CREATETYPE -> . create type id as enum para LEXP parc
    (85) CASE -> . case EXP LISTAWHEN ELSEF end case
    (86) CASE -> . case EXP LISTAWHEN end case
    (87) CASE -> . case LISTAWHEN ELSEF end case
    (88) CASE -> . case LISTAWHEN end case
    (151) CREATEDB -> . create RD if not exist id
    (152) CREATEDB -> . create RD if not exist id OPCCDB
    (153) CREATEDB -> . create RD id
    (154) CREATEDB -> . create RD id OPCCDB
    (148) SHOWDB -> . show dbs
    (149) SHOW -> . show tables para id parc
    (150) SHOW -> . show collection para parc
    (52) CREATEINDEX -> . create index id on id para LEXP parc
    (53) CREATEINDEX -> . create unique index id on id para LEXP parc
    (54) CREATEINDEX -> . create index id on id using hash para LEXP parc
    (55) CREATEINDEX -> . create index id on id para id ORDEN parc
    (56) CREATEINDEX -> . create index id on id para id id ORDEN parc
    (57) CREATEINDEX -> . create index id on id para id id parc
    (76) ASIGNACION -> . id dospuntos igual EXP
    (77) ASIGNACION -> . id igual EXP
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (80) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (81) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (37) PROCEDIMIENTOS -> . create procedure id para LPARAM parc LENGUAJE LCONTENIDOP
    (38) PROCEDIMIENTOS -> . create procedure id para parc LENGUAJE LCONTENIDOP
    (39) PROCEDIMIENTOS -> . create procedure id para LPARAM parc LCONTENIDOP LENGUAJE
    (40) PROCEDIMIENTOS -> . create procedure id para parc LCONTENIDOP LENGUAJE
    (27) FUNCIONES -> . create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP
    (28) FUNCIONES -> . create function id para parc RETURNP LENGUAJE LCONTENIDOP
    (29) FUNCIONES -> . create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE
    (30) FUNCIONES -> . create function id para parc RETURNP LCONTENIDOP LENGUAJE
    (35) CALLPROCEDURE -> . execute id para LEXP parc
    (36) CALLPROCEDURE -> . execute id para parc
    (31) DROPFUNC -> . drop function id
    (32) DROPFUNC -> . drop function if exist id
    (33) DROPPROCEDURE -> . drop procedure id

    $end            reduce using rule 1 (init -> instrucciones .)
    use             shift and go to state 16
    select          shift and go to state 26
    create          shift and go to state 27
    update          shift and go to state 28
    delete          shift and go to state 29
    alter           shift and go to state 30
    drop            shift and go to state 32
    insert          shift and go to state 33
    case            shift and go to state 34
    show            shift and go to state 35
    id              shift and go to state 17
    if              shift and go to state 31
    execute         shift and go to state 36

    instruccion                    shift and go to state 37
    SELECT                         shift and go to state 4
    CREATETABLE                    shift and go to state 5
    UPDATE                         shift and go to state 6
    DELETE                         shift and go to state 7
    ALTER                          shift and go to state 8
    DROP                           shift and go to state 9
    INSERT                         shift and go to state 10
    CREATETYPE                     shift and go to state 11
    CASE                           shift and go to state 12
    CREATEDB                       shift and go to state 13
    SHOWDB                         shift and go to state 14
    SHOW                           shift and go to state 15
    CREATEINDEX                    shift and go to state 18
    ASIGNACION                     shift and go to state 19
    CONDICIONIF                    shift and go to state 20
    PROCEDIMIENTOS                 shift and go to state 21
    FUNCIONES                      shift and go to state 22
    CALLPROCEDURE                  shift and go to state 23
    DROPFUNC                       shift and go to state 24
    DROPPROCEDURE                  shift and go to state 25

state 3

    (3) instrucciones -> instruccion .

    use             reduce using rule 3 (instrucciones -> instruccion .)
    select          reduce using rule 3 (instrucciones -> instruccion .)
    create          reduce using rule 3 (instrucciones -> instruccion .)
    update          reduce using rule 3 (instrucciones -> instruccion .)
    delete          reduce using rule 3 (instrucciones -> instruccion .)
    alter           reduce using rule 3 (instrucciones -> instruccion .)
    drop            reduce using rule 3 (instrucciones -> instruccion .)
    insert          reduce using rule 3 (instrucciones -> instruccion .)
    case            reduce using rule 3 (instrucciones -> instruccion .)
    show            reduce using rule 3 (instrucciones -> instruccion .)
    id              reduce using rule 3 (instrucciones -> instruccion .)
    if              reduce using rule 3 (instrucciones -> instruccion .)
    execute         reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> SELECT . ptcoma

    ptcoma          shift and go to state 38


state 5

    (5) instruccion -> CREATETABLE .

    use             reduce using rule 5 (instruccion -> CREATETABLE .)
    select          reduce using rule 5 (instruccion -> CREATETABLE .)
    create          reduce using rule 5 (instruccion -> CREATETABLE .)
    update          reduce using rule 5 (instruccion -> CREATETABLE .)
    delete          reduce using rule 5 (instruccion -> CREATETABLE .)
    alter           reduce using rule 5 (instruccion -> CREATETABLE .)
    drop            reduce using rule 5 (instruccion -> CREATETABLE .)
    insert          reduce using rule 5 (instruccion -> CREATETABLE .)
    case            reduce using rule 5 (instruccion -> CREATETABLE .)
    show            reduce using rule 5 (instruccion -> CREATETABLE .)
    id              reduce using rule 5 (instruccion -> CREATETABLE .)
    if              reduce using rule 5 (instruccion -> CREATETABLE .)
    execute         reduce using rule 5 (instruccion -> CREATETABLE .)
    $end            reduce using rule 5 (instruccion -> CREATETABLE .)


state 6

    (6) instruccion -> UPDATE . ptcoma

    ptcoma          shift and go to state 39


state 7

    (7) instruccion -> DELETE . ptcoma

    ptcoma          shift and go to state 40


state 8

    (8) instruccion -> ALTER . ptcoma

    ptcoma          shift and go to state 41


state 9

    (9) instruccion -> DROP . ptcoma

    ptcoma          shift and go to state 42


state 10

    (10) instruccion -> INSERT . ptcoma

    ptcoma          shift and go to state 43


state 11

    (11) instruccion -> CREATETYPE . ptcoma

    ptcoma          shift and go to state 44


state 12

    (12) instruccion -> CASE . ptcoma

    ptcoma          shift and go to state 45


state 13

    (13) instruccion -> CREATEDB . ptcoma

    ptcoma          shift and go to state 46


state 14

    (14) instruccion -> SHOWDB . ptcoma

    ptcoma          shift and go to state 47


state 15

    (15) instruccion -> SHOW . ptcoma

    ptcoma          shift and go to state 48


state 16

    (16) instruccion -> use . id ptcoma

    id              shift and go to state 49


state 17

    (76) ASIGNACION -> id . dospuntos igual EXP
    (77) ASIGNACION -> id . igual EXP

    dospuntos       shift and go to state 50
    igual           shift and go to state 51


state 18

    (17) instruccion -> CREATEINDEX . ptcoma
    (18) instruccion -> CREATEINDEX . WHERE ptcoma
    (211) WHERE -> . where EXP
    (212) WHERE -> . where EXIST
    (213) WHERE -> .

  ! shift/reduce conflict for ptcoma resolved as shift
    ptcoma          shift and go to state 52
    where           shift and go to state 54

  ! ptcoma          [ reduce using rule 213 (WHERE -> .) ]

    WHERE                          shift and go to state 53

state 19

    (19) instruccion -> ASIGNACION . ptcoma

    ptcoma          shift and go to state 55


state 20

    (20) instruccion -> CONDICIONIF . ptcoma

    ptcoma          shift and go to state 56


state 21

    (21) instruccion -> PROCEDIMIENTOS .

    use             reduce using rule 21 (instruccion -> PROCEDIMIENTOS .)
    select          reduce using rule 21 (instruccion -> PROCEDIMIENTOS .)
    create          reduce using rule 21 (instruccion -> PROCEDIMIENTOS .)
    update          reduce using rule 21 (instruccion -> PROCEDIMIENTOS .)
    delete          reduce using rule 21 (instruccion -> PROCEDIMIENTOS .)
    alter           reduce using rule 21 (instruccion -> PROCEDIMIENTOS .)
    drop            reduce using rule 21 (instruccion -> PROCEDIMIENTOS .)
    insert          reduce using rule 21 (instruccion -> PROCEDIMIENTOS .)
    case            reduce using rule 21 (instruccion -> PROCEDIMIENTOS .)
    show            reduce using rule 21 (instruccion -> PROCEDIMIENTOS .)
    id              reduce using rule 21 (instruccion -> PROCEDIMIENTOS .)
    if              reduce using rule 21 (instruccion -> PROCEDIMIENTOS .)
    execute         reduce using rule 21 (instruccion -> PROCEDIMIENTOS .)
    $end            reduce using rule 21 (instruccion -> PROCEDIMIENTOS .)


state 22

    (22) instruccion -> FUNCIONES .

    use             reduce using rule 22 (instruccion -> FUNCIONES .)
    select          reduce using rule 22 (instruccion -> FUNCIONES .)
    create          reduce using rule 22 (instruccion -> FUNCIONES .)
    update          reduce using rule 22 (instruccion -> FUNCIONES .)
    delete          reduce using rule 22 (instruccion -> FUNCIONES .)
    alter           reduce using rule 22 (instruccion -> FUNCIONES .)
    drop            reduce using rule 22 (instruccion -> FUNCIONES .)
    insert          reduce using rule 22 (instruccion -> FUNCIONES .)
    case            reduce using rule 22 (instruccion -> FUNCIONES .)
    show            reduce using rule 22 (instruccion -> FUNCIONES .)
    id              reduce using rule 22 (instruccion -> FUNCIONES .)
    if              reduce using rule 22 (instruccion -> FUNCIONES .)
    execute         reduce using rule 22 (instruccion -> FUNCIONES .)
    $end            reduce using rule 22 (instruccion -> FUNCIONES .)


state 23

    (23) instruccion -> CALLPROCEDURE . ptcoma

    ptcoma          shift and go to state 57


state 24

    (24) instruccion -> DROPFUNC . ptcoma

    ptcoma          shift and go to state 58


state 25

    (25) instruccion -> DROPPROCEDURE . ptcoma

    ptcoma          shift and go to state 59


state 26

    (200) SELECT -> select . distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> select . LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> select . LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (234) LEXP -> . LEXP coma EXP
    (235) LEXP -> . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    distinct        shift and go to state 60
    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    LEXP                           shift and go to state 61
    EXP                            shift and go to state 62
    SELECT                         shift and go to state 74

state 27

    (168) CREATETABLE -> create . table id para LDEF parc ptcoma
    (169) CREATETABLE -> create . table id para LDEF parc HERENCIA ptcoma
    (199) CREATETYPE -> create . type id as enum para LEXP parc
    (151) CREATEDB -> create . RD if not exist id
    (152) CREATEDB -> create . RD if not exist id OPCCDB
    (153) CREATEDB -> create . RD id
    (154) CREATEDB -> create . RD id OPCCDB
    (52) CREATEINDEX -> create . index id on id para LEXP parc
    (53) CREATEINDEX -> create . unique index id on id para LEXP parc
    (54) CREATEINDEX -> create . index id on id using hash para LEXP parc
    (55) CREATEINDEX -> create . index id on id para id ORDEN parc
    (56) CREATEINDEX -> create . index id on id para id id ORDEN parc
    (57) CREATEINDEX -> create . index id on id para id id parc
    (37) PROCEDIMIENTOS -> create . procedure id para LPARAM parc LENGUAJE LCONTENIDOP
    (38) PROCEDIMIENTOS -> create . procedure id para parc LENGUAJE LCONTENIDOP
    (39) PROCEDIMIENTOS -> create . procedure id para LPARAM parc LCONTENIDOP LENGUAJE
    (40) PROCEDIMIENTOS -> create . procedure id para parc LCONTENIDOP LENGUAJE
    (27) FUNCIONES -> create . function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP
    (28) FUNCIONES -> create . function id para parc RETURNP LENGUAJE LCONTENIDOP
    (29) FUNCIONES -> create . function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE
    (30) FUNCIONES -> create . function id para parc RETURNP LCONTENIDOP LENGUAJE
    (158) RD -> . or replace databases
    (159) RD -> . databases

    table           shift and go to state 87
    type            shift and go to state 88
    index           shift and go to state 90
    unique          shift and go to state 91
    procedure       shift and go to state 92
    function        shift and go to state 93
    or              shift and go to state 94
    databases       shift and go to state 95

    RD                             shift and go to state 89

state 28

    (228) UPDATE -> update . id set LCAMPOS WHERE

    id              shift and go to state 96


state 29

    (231) DELETE -> delete . r_from id WHERE

    r_from          shift and go to state 97


state 30

    (125) ALTER -> alter . databases id rename to id
    (126) ALTER -> alter . databases id owner to id
    (127) ALTER -> alter . table id LOP
    (128) ALTER -> alter . index id alter EXP
    (129) ALTER -> alter . index if exist id alter EXP
    (130) ALTER -> alter . index id alter column EXP
    (131) ALTER -> alter . index if exist id alter column EXP

    databases       shift and go to state 98
    table           shift and go to state 99
    index           shift and go to state 100


state 31

    (78) CONDICIONIF -> if . EXP then LISTACONTENIDO ELSEF end if
    (79) CONDICIONIF -> if . EXP then LISTACONTENIDO LELIF end if
    (80) CONDICIONIF -> if . EXP then LISTACONTENIDO end if
    (81) CONDICIONIF -> if . EXP then LISTACONTENIDO LELIF ELSEF end if
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 101
    SELECT                         shift and go to state 74

state 32

    (120) DROP -> drop . all para parc
    (121) DROP -> drop . table id
    (122) DROP -> drop . index id
    (123) DROP -> drop . databases if exist id
    (124) DROP -> drop . databases id
    (31) DROPFUNC -> drop . function id
    (32) DROPFUNC -> drop . function if exist id
    (33) DROPPROCEDURE -> drop . procedure id

    all             shift and go to state 102
    table           shift and go to state 103
    index           shift and go to state 104
    databases       shift and go to state 105
    function        shift and go to state 106
    procedure       shift and go to state 107


state 33

    (118) INSERT -> insert . into id values para LEXP parc
    (119) INSERT -> insert . into id para LEXP parc values para LEXP parc

    into            shift and go to state 108


state 34

    (85) CASE -> case . EXP LISTAWHEN ELSEF end case
    (86) CASE -> case . EXP LISTAWHEN end case
    (87) CASE -> case . LISTAWHEN ELSEF end case
    (88) CASE -> case . LISTAWHEN end case
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (114) LISTAWHEN -> . LISTAWHEN WHEN
    (115) LISTAWHEN -> . WHEN
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (116) WHEN -> . when EXP then LISTACONTENIDO

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26
    when            shift and go to state 112

    EXP                            shift and go to state 109
    LISTAWHEN                      shift and go to state 110
    SELECT                         shift and go to state 74
    WHEN                           shift and go to state 111

state 35

    (148) SHOWDB -> show . dbs
    (149) SHOW -> show . tables para id parc
    (150) SHOW -> show . collection para parc

    dbs             shift and go to state 113
    tables          shift and go to state 114
    collection      shift and go to state 115


state 36

    (35) CALLPROCEDURE -> execute . id para LEXP parc
    (36) CALLPROCEDURE -> execute . id para parc

    id              shift and go to state 116


state 37

    (2) instrucciones -> instrucciones instruccion .

    use             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    select          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    create          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    update          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    delete          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    alter           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    drop            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    insert          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    case            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    show            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    id              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    if              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    execute         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 38

    (4) instruccion -> SELECT ptcoma .

    use             reduce using rule 4 (instruccion -> SELECT ptcoma .)
    select          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    create          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    update          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    delete          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    alter           reduce using rule 4 (instruccion -> SELECT ptcoma .)
    drop            reduce using rule 4 (instruccion -> SELECT ptcoma .)
    insert          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    case            reduce using rule 4 (instruccion -> SELECT ptcoma .)
    show            reduce using rule 4 (instruccion -> SELECT ptcoma .)
    id              reduce using rule 4 (instruccion -> SELECT ptcoma .)
    if              reduce using rule 4 (instruccion -> SELECT ptcoma .)
    execute         reduce using rule 4 (instruccion -> SELECT ptcoma .)
    $end            reduce using rule 4 (instruccion -> SELECT ptcoma .)


state 39

    (6) instruccion -> UPDATE ptcoma .

    use             reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    select          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    create          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    update          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    delete          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    alter           reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    drop            reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    insert          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    case            reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    show            reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    id              reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    if              reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    execute         reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    $end            reduce using rule 6 (instruccion -> UPDATE ptcoma .)


state 40

    (7) instruccion -> DELETE ptcoma .

    use             reduce using rule 7 (instruccion -> DELETE ptcoma .)
    select          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    create          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    update          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    delete          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    alter           reduce using rule 7 (instruccion -> DELETE ptcoma .)
    drop            reduce using rule 7 (instruccion -> DELETE ptcoma .)
    insert          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    case            reduce using rule 7 (instruccion -> DELETE ptcoma .)
    show            reduce using rule 7 (instruccion -> DELETE ptcoma .)
    id              reduce using rule 7 (instruccion -> DELETE ptcoma .)
    if              reduce using rule 7 (instruccion -> DELETE ptcoma .)
    execute         reduce using rule 7 (instruccion -> DELETE ptcoma .)
    $end            reduce using rule 7 (instruccion -> DELETE ptcoma .)


state 41

    (8) instruccion -> ALTER ptcoma .

    use             reduce using rule 8 (instruccion -> ALTER ptcoma .)
    select          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    create          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    update          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    delete          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    alter           reduce using rule 8 (instruccion -> ALTER ptcoma .)
    drop            reduce using rule 8 (instruccion -> ALTER ptcoma .)
    insert          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    case            reduce using rule 8 (instruccion -> ALTER ptcoma .)
    show            reduce using rule 8 (instruccion -> ALTER ptcoma .)
    id              reduce using rule 8 (instruccion -> ALTER ptcoma .)
    if              reduce using rule 8 (instruccion -> ALTER ptcoma .)
    execute         reduce using rule 8 (instruccion -> ALTER ptcoma .)
    $end            reduce using rule 8 (instruccion -> ALTER ptcoma .)


state 42

    (9) instruccion -> DROP ptcoma .

    use             reduce using rule 9 (instruccion -> DROP ptcoma .)
    select          reduce using rule 9 (instruccion -> DROP ptcoma .)
    create          reduce using rule 9 (instruccion -> DROP ptcoma .)
    update          reduce using rule 9 (instruccion -> DROP ptcoma .)
    delete          reduce using rule 9 (instruccion -> DROP ptcoma .)
    alter           reduce using rule 9 (instruccion -> DROP ptcoma .)
    drop            reduce using rule 9 (instruccion -> DROP ptcoma .)
    insert          reduce using rule 9 (instruccion -> DROP ptcoma .)
    case            reduce using rule 9 (instruccion -> DROP ptcoma .)
    show            reduce using rule 9 (instruccion -> DROP ptcoma .)
    id              reduce using rule 9 (instruccion -> DROP ptcoma .)
    if              reduce using rule 9 (instruccion -> DROP ptcoma .)
    execute         reduce using rule 9 (instruccion -> DROP ptcoma .)
    $end            reduce using rule 9 (instruccion -> DROP ptcoma .)


state 43

    (10) instruccion -> INSERT ptcoma .

    use             reduce using rule 10 (instruccion -> INSERT ptcoma .)
    select          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    create          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    update          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    delete          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    alter           reduce using rule 10 (instruccion -> INSERT ptcoma .)
    drop            reduce using rule 10 (instruccion -> INSERT ptcoma .)
    insert          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    case            reduce using rule 10 (instruccion -> INSERT ptcoma .)
    show            reduce using rule 10 (instruccion -> INSERT ptcoma .)
    id              reduce using rule 10 (instruccion -> INSERT ptcoma .)
    if              reduce using rule 10 (instruccion -> INSERT ptcoma .)
    execute         reduce using rule 10 (instruccion -> INSERT ptcoma .)
    $end            reduce using rule 10 (instruccion -> INSERT ptcoma .)


state 44

    (11) instruccion -> CREATETYPE ptcoma .

    use             reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    select          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    create          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    update          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    delete          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    alter           reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    drop            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    insert          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    case            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    show            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    id              reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    if              reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    execute         reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    $end            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)


state 45

    (12) instruccion -> CASE ptcoma .

    use             reduce using rule 12 (instruccion -> CASE ptcoma .)
    select          reduce using rule 12 (instruccion -> CASE ptcoma .)
    create          reduce using rule 12 (instruccion -> CASE ptcoma .)
    update          reduce using rule 12 (instruccion -> CASE ptcoma .)
    delete          reduce using rule 12 (instruccion -> CASE ptcoma .)
    alter           reduce using rule 12 (instruccion -> CASE ptcoma .)
    drop            reduce using rule 12 (instruccion -> CASE ptcoma .)
    insert          reduce using rule 12 (instruccion -> CASE ptcoma .)
    case            reduce using rule 12 (instruccion -> CASE ptcoma .)
    show            reduce using rule 12 (instruccion -> CASE ptcoma .)
    id              reduce using rule 12 (instruccion -> CASE ptcoma .)
    if              reduce using rule 12 (instruccion -> CASE ptcoma .)
    execute         reduce using rule 12 (instruccion -> CASE ptcoma .)
    $end            reduce using rule 12 (instruccion -> CASE ptcoma .)


state 46

    (13) instruccion -> CREATEDB ptcoma .

    use             reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    select          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    create          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    update          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    delete          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    alter           reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    drop            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    insert          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    case            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    show            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    id              reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    if              reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    execute         reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    $end            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)


state 47

    (14) instruccion -> SHOWDB ptcoma .

    use             reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    select          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    create          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    update          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    delete          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    alter           reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    drop            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    insert          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    case            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    show            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    id              reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    if              reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    execute         reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    $end            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)


state 48

    (15) instruccion -> SHOW ptcoma .

    use             reduce using rule 15 (instruccion -> SHOW ptcoma .)
    select          reduce using rule 15 (instruccion -> SHOW ptcoma .)
    create          reduce using rule 15 (instruccion -> SHOW ptcoma .)
    update          reduce using rule 15 (instruccion -> SHOW ptcoma .)
    delete          reduce using rule 15 (instruccion -> SHOW ptcoma .)
    alter           reduce using rule 15 (instruccion -> SHOW ptcoma .)
    drop            reduce using rule 15 (instruccion -> SHOW ptcoma .)
    insert          reduce using rule 15 (instruccion -> SHOW ptcoma .)
    case            reduce using rule 15 (instruccion -> SHOW ptcoma .)
    show            reduce using rule 15 (instruccion -> SHOW ptcoma .)
    id              reduce using rule 15 (instruccion -> SHOW ptcoma .)
    if              reduce using rule 15 (instruccion -> SHOW ptcoma .)
    execute         reduce using rule 15 (instruccion -> SHOW ptcoma .)
    $end            reduce using rule 15 (instruccion -> SHOW ptcoma .)


state 49

    (16) instruccion -> use id . ptcoma

    ptcoma          shift and go to state 117


state 50

    (76) ASIGNACION -> id dospuntos . igual EXP

    igual           shift and go to state 118


state 51

    (77) ASIGNACION -> id igual . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 119
    SELECT                         shift and go to state 74

state 52

    (17) instruccion -> CREATEINDEX ptcoma .

    use             reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    select          reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    create          reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    update          reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    delete          reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    alter           reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    drop            reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    insert          reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    case            reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    show            reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    id              reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    if              reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    execute         reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    $end            reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)


state 53

    (18) instruccion -> CREATEINDEX WHERE . ptcoma

    ptcoma          shift and go to state 120


state 54

    (211) WHERE -> where . EXP
    (212) WHERE -> where . EXIST
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (232) EXIST -> . exist para SELECT parc
    (233) EXIST -> . not exist para SELECT parc
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 123
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    exist           shift and go to state 124
    select          shift and go to state 26

    EXP                            shift and go to state 121
    EXIST                          shift and go to state 122
    SELECT                         shift and go to state 74

state 55

    (19) instruccion -> ASIGNACION ptcoma .

    use             reduce using rule 19 (instruccion -> ASIGNACION ptcoma .)
    select          reduce using rule 19 (instruccion -> ASIGNACION ptcoma .)
    create          reduce using rule 19 (instruccion -> ASIGNACION ptcoma .)
    update          reduce using rule 19 (instruccion -> ASIGNACION ptcoma .)
    delete          reduce using rule 19 (instruccion -> ASIGNACION ptcoma .)
    alter           reduce using rule 19 (instruccion -> ASIGNACION ptcoma .)
    drop            reduce using rule 19 (instruccion -> ASIGNACION ptcoma .)
    insert          reduce using rule 19 (instruccion -> ASIGNACION ptcoma .)
    case            reduce using rule 19 (instruccion -> ASIGNACION ptcoma .)
    show            reduce using rule 19 (instruccion -> ASIGNACION ptcoma .)
    id              reduce using rule 19 (instruccion -> ASIGNACION ptcoma .)
    if              reduce using rule 19 (instruccion -> ASIGNACION ptcoma .)
    execute         reduce using rule 19 (instruccion -> ASIGNACION ptcoma .)
    $end            reduce using rule 19 (instruccion -> ASIGNACION ptcoma .)


state 56

    (20) instruccion -> CONDICIONIF ptcoma .

    use             reduce using rule 20 (instruccion -> CONDICIONIF ptcoma .)
    select          reduce using rule 20 (instruccion -> CONDICIONIF ptcoma .)
    create          reduce using rule 20 (instruccion -> CONDICIONIF ptcoma .)
    update          reduce using rule 20 (instruccion -> CONDICIONIF ptcoma .)
    delete          reduce using rule 20 (instruccion -> CONDICIONIF ptcoma .)
    alter           reduce using rule 20 (instruccion -> CONDICIONIF ptcoma .)
    drop            reduce using rule 20 (instruccion -> CONDICIONIF ptcoma .)
    insert          reduce using rule 20 (instruccion -> CONDICIONIF ptcoma .)
    case            reduce using rule 20 (instruccion -> CONDICIONIF ptcoma .)
    show            reduce using rule 20 (instruccion -> CONDICIONIF ptcoma .)
    id              reduce using rule 20 (instruccion -> CONDICIONIF ptcoma .)
    if              reduce using rule 20 (instruccion -> CONDICIONIF ptcoma .)
    execute         reduce using rule 20 (instruccion -> CONDICIONIF ptcoma .)
    $end            reduce using rule 20 (instruccion -> CONDICIONIF ptcoma .)


state 57

    (23) instruccion -> CALLPROCEDURE ptcoma .

    use             reduce using rule 23 (instruccion -> CALLPROCEDURE ptcoma .)
    select          reduce using rule 23 (instruccion -> CALLPROCEDURE ptcoma .)
    create          reduce using rule 23 (instruccion -> CALLPROCEDURE ptcoma .)
    update          reduce using rule 23 (instruccion -> CALLPROCEDURE ptcoma .)
    delete          reduce using rule 23 (instruccion -> CALLPROCEDURE ptcoma .)
    alter           reduce using rule 23 (instruccion -> CALLPROCEDURE ptcoma .)
    drop            reduce using rule 23 (instruccion -> CALLPROCEDURE ptcoma .)
    insert          reduce using rule 23 (instruccion -> CALLPROCEDURE ptcoma .)
    case            reduce using rule 23 (instruccion -> CALLPROCEDURE ptcoma .)
    show            reduce using rule 23 (instruccion -> CALLPROCEDURE ptcoma .)
    id              reduce using rule 23 (instruccion -> CALLPROCEDURE ptcoma .)
    if              reduce using rule 23 (instruccion -> CALLPROCEDURE ptcoma .)
    execute         reduce using rule 23 (instruccion -> CALLPROCEDURE ptcoma .)
    $end            reduce using rule 23 (instruccion -> CALLPROCEDURE ptcoma .)


state 58

    (24) instruccion -> DROPFUNC ptcoma .

    use             reduce using rule 24 (instruccion -> DROPFUNC ptcoma .)
    select          reduce using rule 24 (instruccion -> DROPFUNC ptcoma .)
    create          reduce using rule 24 (instruccion -> DROPFUNC ptcoma .)
    update          reduce using rule 24 (instruccion -> DROPFUNC ptcoma .)
    delete          reduce using rule 24 (instruccion -> DROPFUNC ptcoma .)
    alter           reduce using rule 24 (instruccion -> DROPFUNC ptcoma .)
    drop            reduce using rule 24 (instruccion -> DROPFUNC ptcoma .)
    insert          reduce using rule 24 (instruccion -> DROPFUNC ptcoma .)
    case            reduce using rule 24 (instruccion -> DROPFUNC ptcoma .)
    show            reduce using rule 24 (instruccion -> DROPFUNC ptcoma .)
    id              reduce using rule 24 (instruccion -> DROPFUNC ptcoma .)
    if              reduce using rule 24 (instruccion -> DROPFUNC ptcoma .)
    execute         reduce using rule 24 (instruccion -> DROPFUNC ptcoma .)
    $end            reduce using rule 24 (instruccion -> DROPFUNC ptcoma .)


state 59

    (25) instruccion -> DROPPROCEDURE ptcoma .

    use             reduce using rule 25 (instruccion -> DROPPROCEDURE ptcoma .)
    select          reduce using rule 25 (instruccion -> DROPPROCEDURE ptcoma .)
    create          reduce using rule 25 (instruccion -> DROPPROCEDURE ptcoma .)
    update          reduce using rule 25 (instruccion -> DROPPROCEDURE ptcoma .)
    delete          reduce using rule 25 (instruccion -> DROPPROCEDURE ptcoma .)
    alter           reduce using rule 25 (instruccion -> DROPPROCEDURE ptcoma .)
    drop            reduce using rule 25 (instruccion -> DROPPROCEDURE ptcoma .)
    insert          reduce using rule 25 (instruccion -> DROPPROCEDURE ptcoma .)
    case            reduce using rule 25 (instruccion -> DROPPROCEDURE ptcoma .)
    show            reduce using rule 25 (instruccion -> DROPPROCEDURE ptcoma .)
    id              reduce using rule 25 (instruccion -> DROPPROCEDURE ptcoma .)
    if              reduce using rule 25 (instruccion -> DROPPROCEDURE ptcoma .)
    execute         reduce using rule 25 (instruccion -> DROPPROCEDURE ptcoma .)
    $end            reduce using rule 25 (instruccion -> DROPPROCEDURE ptcoma .)


state 60

    (200) SELECT -> select distinct . LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (234) LEXP -> . LEXP coma EXP
    (235) LEXP -> . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    LEXP                           shift and go to state 125
    EXP                            shift and go to state 62
    SELECT                         shift and go to state 74

state 61

    (201) SELECT -> select LEXP . r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> select LEXP . WHERE GROUP HAVING COMBINING ORDER LIMIT
    (234) LEXP -> LEXP . coma EXP
    (211) WHERE -> . where EXP
    (212) WHERE -> . where EXIST
    (213) WHERE -> .

  ! shift/reduce conflict for r_from resolved as shift
  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for where resolved as shift
    r_from          shift and go to state 126
    coma            shift and go to state 128
    where           shift and go to state 54
    group           reduce using rule 213 (WHERE -> .)
    having          reduce using rule 213 (WHERE -> .)
    union           reduce using rule 213 (WHERE -> .)
    intersect       reduce using rule 213 (WHERE -> .)
    except          reduce using rule 213 (WHERE -> .)
    order           reduce using rule 213 (WHERE -> .)
    limit           reduce using rule 213 (WHERE -> .)
    offset          reduce using rule 213 (WHERE -> .)
    ptcoma          reduce using rule 213 (WHERE -> .)
    mas             reduce using rule 213 (WHERE -> .)
    menos           reduce using rule 213 (WHERE -> .)
    multiplicacion  reduce using rule 213 (WHERE -> .)
    division        reduce using rule 213 (WHERE -> .)
    modulo          reduce using rule 213 (WHERE -> .)
    elevado         reduce using rule 213 (WHERE -> .)
    and             reduce using rule 213 (WHERE -> .)
    or              reduce using rule 213 (WHERE -> .)
    mayor           reduce using rule 213 (WHERE -> .)
    menor           reduce using rule 213 (WHERE -> .)
    mayor_igual     reduce using rule 213 (WHERE -> .)
    menor_igual     reduce using rule 213 (WHERE -> .)
    igual           reduce using rule 213 (WHERE -> .)
    diferente1      reduce using rule 213 (WHERE -> .)
    diferente2      reduce using rule 213 (WHERE -> .)
    between         reduce using rule 213 (WHERE -> .)
    is              reduce using rule 213 (WHERE -> .)
    isnull          reduce using rule 213 (WHERE -> .)
    notnull         reduce using rule 213 (WHERE -> .)
    as              reduce using rule 213 (WHERE -> .)
    cadenaString    reduce using rule 213 (WHERE -> .)
    cadena          reduce using rule 213 (WHERE -> .)
    id              reduce using rule 213 (WHERE -> .)
    in              reduce using rule 213 (WHERE -> .)
    not             reduce using rule 213 (WHERE -> .)
    like            reduce using rule 213 (WHERE -> .)
    then            reduce using rule 213 (WHERE -> .)
    when            reduce using rule 213 (WHERE -> .)
    parc            reduce using rule 213 (WHERE -> .)
    constraint      reduce using rule 213 (WHERE -> .)
    unique          reduce using rule 213 (WHERE -> .)
    check           reduce using rule 213 (WHERE -> .)
    default         reduce using rule 213 (WHERE -> .)
    null            reduce using rule 213 (WHERE -> .)
    primary         reduce using rule 213 (WHERE -> .)
    references      reduce using rule 213 (WHERE -> .)
    asc             reduce using rule 213 (WHERE -> .)
    desc            reduce using rule 213 (WHERE -> .)

  ! r_from          [ reduce using rule 213 (WHERE -> .) ]
  ! coma            [ reduce using rule 213 (WHERE -> .) ]
  ! where           [ reduce using rule 213 (WHERE -> .) ]

    WHERE                          shift and go to state 127

state 62

    (235) LEXP -> EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    r_from          reduce using rule 235 (LEXP -> EXP .)
    coma            reduce using rule 235 (LEXP -> EXP .)
    where           reduce using rule 235 (LEXP -> EXP .)
    group           reduce using rule 235 (LEXP -> EXP .)
    having          reduce using rule 235 (LEXP -> EXP .)
    union           reduce using rule 235 (LEXP -> EXP .)
    intersect       reduce using rule 235 (LEXP -> EXP .)
    except          reduce using rule 235 (LEXP -> EXP .)
    order           reduce using rule 235 (LEXP -> EXP .)
    limit           reduce using rule 235 (LEXP -> EXP .)
    offset          reduce using rule 235 (LEXP -> EXP .)
    ptcoma          reduce using rule 235 (LEXP -> EXP .)
    then            reduce using rule 235 (LEXP -> EXP .)
    when            reduce using rule 235 (LEXP -> EXP .)
    parc            reduce using rule 235 (LEXP -> EXP .)
    constraint      reduce using rule 235 (LEXP -> EXP .)
    unique          reduce using rule 235 (LEXP -> EXP .)
    check           reduce using rule 235 (LEXP -> EXP .)
    default         reduce using rule 235 (LEXP -> EXP .)
    null            reduce using rule 235 (LEXP -> EXP .)
    primary         reduce using rule 235 (LEXP -> EXP .)
    references      reduce using rule 235 (LEXP -> EXP .)
    asc             reduce using rule 235 (LEXP -> EXP .)
    desc            reduce using rule 235 (LEXP -> EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    and             shift and go to state 135
    or              shift and go to state 136
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143
    between         shift and go to state 144
    is              shift and go to state 145
    isnull          shift and go to state 147
    notnull         shift and go to state 148
    as              shift and go to state 149
    cadenaString    shift and go to state 150
    cadena          shift and go to state 151
    id              shift and go to state 152
    in              shift and go to state 153
    not             shift and go to state 146
    like            shift and go to state 154

  ! mas             [ reduce using rule 235 (LEXP -> EXP .) ]
  ! menos           [ reduce using rule 235 (LEXP -> EXP .) ]
  ! multiplicacion  [ reduce using rule 235 (LEXP -> EXP .) ]
  ! division        [ reduce using rule 235 (LEXP -> EXP .) ]
  ! modulo          [ reduce using rule 235 (LEXP -> EXP .) ]
  ! elevado         [ reduce using rule 235 (LEXP -> EXP .) ]
  ! and             [ reduce using rule 235 (LEXP -> EXP .) ]
  ! or              [ reduce using rule 235 (LEXP -> EXP .) ]
  ! mayor           [ reduce using rule 235 (LEXP -> EXP .) ]
  ! menor           [ reduce using rule 235 (LEXP -> EXP .) ]
  ! mayor_igual     [ reduce using rule 235 (LEXP -> EXP .) ]
  ! menor_igual     [ reduce using rule 235 (LEXP -> EXP .) ]
  ! igual           [ reduce using rule 235 (LEXP -> EXP .) ]
  ! diferente1      [ reduce using rule 235 (LEXP -> EXP .) ]
  ! diferente2      [ reduce using rule 235 (LEXP -> EXP .) ]
  ! between         [ reduce using rule 235 (LEXP -> EXP .) ]
  ! is              [ reduce using rule 235 (LEXP -> EXP .) ]
  ! isnull          [ reduce using rule 235 (LEXP -> EXP .) ]
  ! notnull         [ reduce using rule 235 (LEXP -> EXP .) ]
  ! as              [ reduce using rule 235 (LEXP -> EXP .) ]
  ! cadenaString    [ reduce using rule 235 (LEXP -> EXP .) ]
  ! cadena          [ reduce using rule 235 (LEXP -> EXP .) ]
  ! id              [ reduce using rule 235 (LEXP -> EXP .) ]
  ! in              [ reduce using rule 235 (LEXP -> EXP .) ]
  ! not             [ reduce using rule 235 (LEXP -> EXP .) ]
  ! like            [ reduce using rule 235 (LEXP -> EXP .) ]


state 63

    (315) EXP -> mas . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 155
    SELECT                         shift and go to state 74

state 64

    (316) EXP -> menos . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 156
    SELECT                         shift and go to state 74

state 65

    (342) EXP -> multiplicacion .

    r_from          reduce using rule 342 (EXP -> multiplicacion .)
    coma            reduce using rule 342 (EXP -> multiplicacion .)
    where           reduce using rule 342 (EXP -> multiplicacion .)
    group           reduce using rule 342 (EXP -> multiplicacion .)
    having          reduce using rule 342 (EXP -> multiplicacion .)
    union           reduce using rule 342 (EXP -> multiplicacion .)
    intersect       reduce using rule 342 (EXP -> multiplicacion .)
    except          reduce using rule 342 (EXP -> multiplicacion .)
    order           reduce using rule 342 (EXP -> multiplicacion .)
    limit           reduce using rule 342 (EXP -> multiplicacion .)
    offset          reduce using rule 342 (EXP -> multiplicacion .)
    ptcoma          reduce using rule 342 (EXP -> multiplicacion .)
    mas             reduce using rule 342 (EXP -> multiplicacion .)
    menos           reduce using rule 342 (EXP -> multiplicacion .)
    multiplicacion  reduce using rule 342 (EXP -> multiplicacion .)
    division        reduce using rule 342 (EXP -> multiplicacion .)
    modulo          reduce using rule 342 (EXP -> multiplicacion .)
    elevado         reduce using rule 342 (EXP -> multiplicacion .)
    and             reduce using rule 342 (EXP -> multiplicacion .)
    or              reduce using rule 342 (EXP -> multiplicacion .)
    mayor           reduce using rule 342 (EXP -> multiplicacion .)
    menor           reduce using rule 342 (EXP -> multiplicacion .)
    mayor_igual     reduce using rule 342 (EXP -> multiplicacion .)
    menor_igual     reduce using rule 342 (EXP -> multiplicacion .)
    igual           reduce using rule 342 (EXP -> multiplicacion .)
    diferente1      reduce using rule 342 (EXP -> multiplicacion .)
    diferente2      reduce using rule 342 (EXP -> multiplicacion .)
    between         reduce using rule 342 (EXP -> multiplicacion .)
    is              reduce using rule 342 (EXP -> multiplicacion .)
    isnull          reduce using rule 342 (EXP -> multiplicacion .)
    notnull         reduce using rule 342 (EXP -> multiplicacion .)
    as              reduce using rule 342 (EXP -> multiplicacion .)
    cadenaString    reduce using rule 342 (EXP -> multiplicacion .)
    cadena          reduce using rule 342 (EXP -> multiplicacion .)
    id              reduce using rule 342 (EXP -> multiplicacion .)
    in              reduce using rule 342 (EXP -> multiplicacion .)
    not             reduce using rule 342 (EXP -> multiplicacion .)
    like            reduce using rule 342 (EXP -> multiplicacion .)
    then            reduce using rule 342 (EXP -> multiplicacion .)
    when            reduce using rule 342 (EXP -> multiplicacion .)
    parc            reduce using rule 342 (EXP -> multiplicacion .)
    constraint      reduce using rule 342 (EXP -> multiplicacion .)
    unique          reduce using rule 342 (EXP -> multiplicacion .)
    check           reduce using rule 342 (EXP -> multiplicacion .)
    default         reduce using rule 342 (EXP -> multiplicacion .)
    null            reduce using rule 342 (EXP -> multiplicacion .)
    primary         reduce using rule 342 (EXP -> multiplicacion .)
    references      reduce using rule 342 (EXP -> multiplicacion .)
    asc             reduce using rule 342 (EXP -> multiplicacion .)
    desc            reduce using rule 342 (EXP -> multiplicacion .)


state 66

    (317) EXP -> not . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 157
    SELECT                         shift and go to state 74

state 67

    (343) EXP -> null .

    r_from          reduce using rule 343 (EXP -> null .)
    coma            reduce using rule 343 (EXP -> null .)
    where           reduce using rule 343 (EXP -> null .)
    group           reduce using rule 343 (EXP -> null .)
    having          reduce using rule 343 (EXP -> null .)
    union           reduce using rule 343 (EXP -> null .)
    intersect       reduce using rule 343 (EXP -> null .)
    except          reduce using rule 343 (EXP -> null .)
    order           reduce using rule 343 (EXP -> null .)
    limit           reduce using rule 343 (EXP -> null .)
    offset          reduce using rule 343 (EXP -> null .)
    ptcoma          reduce using rule 343 (EXP -> null .)
    mas             reduce using rule 343 (EXP -> null .)
    menos           reduce using rule 343 (EXP -> null .)
    multiplicacion  reduce using rule 343 (EXP -> null .)
    division        reduce using rule 343 (EXP -> null .)
    modulo          reduce using rule 343 (EXP -> null .)
    elevado         reduce using rule 343 (EXP -> null .)
    and             reduce using rule 343 (EXP -> null .)
    or              reduce using rule 343 (EXP -> null .)
    mayor           reduce using rule 343 (EXP -> null .)
    menor           reduce using rule 343 (EXP -> null .)
    mayor_igual     reduce using rule 343 (EXP -> null .)
    menor_igual     reduce using rule 343 (EXP -> null .)
    igual           reduce using rule 343 (EXP -> null .)
    diferente1      reduce using rule 343 (EXP -> null .)
    diferente2      reduce using rule 343 (EXP -> null .)
    between         reduce using rule 343 (EXP -> null .)
    is              reduce using rule 343 (EXP -> null .)
    isnull          reduce using rule 343 (EXP -> null .)
    notnull         reduce using rule 343 (EXP -> null .)
    as              reduce using rule 343 (EXP -> null .)
    cadenaString    reduce using rule 343 (EXP -> null .)
    cadena          reduce using rule 343 (EXP -> null .)
    id              reduce using rule 343 (EXP -> null .)
    in              reduce using rule 343 (EXP -> null .)
    not             reduce using rule 343 (EXP -> null .)
    like            reduce using rule 343 (EXP -> null .)
    then            reduce using rule 343 (EXP -> null .)
    when            reduce using rule 343 (EXP -> null .)
    parc            reduce using rule 343 (EXP -> null .)
    constraint      reduce using rule 343 (EXP -> null .)
    unique          reduce using rule 343 (EXP -> null .)
    check           reduce using rule 343 (EXP -> null .)
    default         reduce using rule 343 (EXP -> null .)
    null            reduce using rule 343 (EXP -> null .)
    primary         reduce using rule 343 (EXP -> null .)
    references      reduce using rule 343 (EXP -> null .)
    asc             reduce using rule 343 (EXP -> null .)
    desc            reduce using rule 343 (EXP -> null .)


state 68

    (339) EXP -> true .

    r_from          reduce using rule 339 (EXP -> true .)
    coma            reduce using rule 339 (EXP -> true .)
    where           reduce using rule 339 (EXP -> true .)
    group           reduce using rule 339 (EXP -> true .)
    having          reduce using rule 339 (EXP -> true .)
    union           reduce using rule 339 (EXP -> true .)
    intersect       reduce using rule 339 (EXP -> true .)
    except          reduce using rule 339 (EXP -> true .)
    order           reduce using rule 339 (EXP -> true .)
    limit           reduce using rule 339 (EXP -> true .)
    offset          reduce using rule 339 (EXP -> true .)
    ptcoma          reduce using rule 339 (EXP -> true .)
    mas             reduce using rule 339 (EXP -> true .)
    menos           reduce using rule 339 (EXP -> true .)
    multiplicacion  reduce using rule 339 (EXP -> true .)
    division        reduce using rule 339 (EXP -> true .)
    modulo          reduce using rule 339 (EXP -> true .)
    elevado         reduce using rule 339 (EXP -> true .)
    and             reduce using rule 339 (EXP -> true .)
    or              reduce using rule 339 (EXP -> true .)
    mayor           reduce using rule 339 (EXP -> true .)
    menor           reduce using rule 339 (EXP -> true .)
    mayor_igual     reduce using rule 339 (EXP -> true .)
    menor_igual     reduce using rule 339 (EXP -> true .)
    igual           reduce using rule 339 (EXP -> true .)
    diferente1      reduce using rule 339 (EXP -> true .)
    diferente2      reduce using rule 339 (EXP -> true .)
    between         reduce using rule 339 (EXP -> true .)
    is              reduce using rule 339 (EXP -> true .)
    isnull          reduce using rule 339 (EXP -> true .)
    notnull         reduce using rule 339 (EXP -> true .)
    as              reduce using rule 339 (EXP -> true .)
    cadenaString    reduce using rule 339 (EXP -> true .)
    cadena          reduce using rule 339 (EXP -> true .)
    id              reduce using rule 339 (EXP -> true .)
    in              reduce using rule 339 (EXP -> true .)
    not             reduce using rule 339 (EXP -> true .)
    like            reduce using rule 339 (EXP -> true .)
    then            reduce using rule 339 (EXP -> true .)
    when            reduce using rule 339 (EXP -> true .)
    parc            reduce using rule 339 (EXP -> true .)
    constraint      reduce using rule 339 (EXP -> true .)
    unique          reduce using rule 339 (EXP -> true .)
    check           reduce using rule 339 (EXP -> true .)
    default         reduce using rule 339 (EXP -> true .)
    null            reduce using rule 339 (EXP -> true .)
    primary         reduce using rule 339 (EXP -> true .)
    references      reduce using rule 339 (EXP -> true .)
    asc             reduce using rule 339 (EXP -> true .)
    desc            reduce using rule 339 (EXP -> true .)


state 69

    (340) EXP -> false .

    r_from          reduce using rule 340 (EXP -> false .)
    coma            reduce using rule 340 (EXP -> false .)
    where           reduce using rule 340 (EXP -> false .)
    group           reduce using rule 340 (EXP -> false .)
    having          reduce using rule 340 (EXP -> false .)
    union           reduce using rule 340 (EXP -> false .)
    intersect       reduce using rule 340 (EXP -> false .)
    except          reduce using rule 340 (EXP -> false .)
    order           reduce using rule 340 (EXP -> false .)
    limit           reduce using rule 340 (EXP -> false .)
    offset          reduce using rule 340 (EXP -> false .)
    ptcoma          reduce using rule 340 (EXP -> false .)
    mas             reduce using rule 340 (EXP -> false .)
    menos           reduce using rule 340 (EXP -> false .)
    multiplicacion  reduce using rule 340 (EXP -> false .)
    division        reduce using rule 340 (EXP -> false .)
    modulo          reduce using rule 340 (EXP -> false .)
    elevado         reduce using rule 340 (EXP -> false .)
    and             reduce using rule 340 (EXP -> false .)
    or              reduce using rule 340 (EXP -> false .)
    mayor           reduce using rule 340 (EXP -> false .)
    menor           reduce using rule 340 (EXP -> false .)
    mayor_igual     reduce using rule 340 (EXP -> false .)
    menor_igual     reduce using rule 340 (EXP -> false .)
    igual           reduce using rule 340 (EXP -> false .)
    diferente1      reduce using rule 340 (EXP -> false .)
    diferente2      reduce using rule 340 (EXP -> false .)
    between         reduce using rule 340 (EXP -> false .)
    is              reduce using rule 340 (EXP -> false .)
    isnull          reduce using rule 340 (EXP -> false .)
    notnull         reduce using rule 340 (EXP -> false .)
    as              reduce using rule 340 (EXP -> false .)
    cadenaString    reduce using rule 340 (EXP -> false .)
    cadena          reduce using rule 340 (EXP -> false .)
    id              reduce using rule 340 (EXP -> false .)
    in              reduce using rule 340 (EXP -> false .)
    not             reduce using rule 340 (EXP -> false .)
    like            reduce using rule 340 (EXP -> false .)
    then            reduce using rule 340 (EXP -> false .)
    when            reduce using rule 340 (EXP -> false .)
    parc            reduce using rule 340 (EXP -> false .)
    constraint      reduce using rule 340 (EXP -> false .)
    unique          reduce using rule 340 (EXP -> false .)
    check           reduce using rule 340 (EXP -> false .)
    default         reduce using rule 340 (EXP -> false .)
    null            reduce using rule 340 (EXP -> false .)
    primary         reduce using rule 340 (EXP -> false .)
    references      reduce using rule 340 (EXP -> false .)
    asc             reduce using rule 340 (EXP -> false .)
    desc            reduce using rule 340 (EXP -> false .)


state 70

    (338) EXP -> cadenaString .

    r_from          reduce using rule 338 (EXP -> cadenaString .)
    coma            reduce using rule 338 (EXP -> cadenaString .)
    where           reduce using rule 338 (EXP -> cadenaString .)
    group           reduce using rule 338 (EXP -> cadenaString .)
    having          reduce using rule 338 (EXP -> cadenaString .)
    union           reduce using rule 338 (EXP -> cadenaString .)
    intersect       reduce using rule 338 (EXP -> cadenaString .)
    except          reduce using rule 338 (EXP -> cadenaString .)
    order           reduce using rule 338 (EXP -> cadenaString .)
    limit           reduce using rule 338 (EXP -> cadenaString .)
    offset          reduce using rule 338 (EXP -> cadenaString .)
    ptcoma          reduce using rule 338 (EXP -> cadenaString .)
    mas             reduce using rule 338 (EXP -> cadenaString .)
    menos           reduce using rule 338 (EXP -> cadenaString .)
    multiplicacion  reduce using rule 338 (EXP -> cadenaString .)
    division        reduce using rule 338 (EXP -> cadenaString .)
    modulo          reduce using rule 338 (EXP -> cadenaString .)
    elevado         reduce using rule 338 (EXP -> cadenaString .)
    and             reduce using rule 338 (EXP -> cadenaString .)
    or              reduce using rule 338 (EXP -> cadenaString .)
    mayor           reduce using rule 338 (EXP -> cadenaString .)
    menor           reduce using rule 338 (EXP -> cadenaString .)
    mayor_igual     reduce using rule 338 (EXP -> cadenaString .)
    menor_igual     reduce using rule 338 (EXP -> cadenaString .)
    igual           reduce using rule 338 (EXP -> cadenaString .)
    diferente1      reduce using rule 338 (EXP -> cadenaString .)
    diferente2      reduce using rule 338 (EXP -> cadenaString .)
    between         reduce using rule 338 (EXP -> cadenaString .)
    is              reduce using rule 338 (EXP -> cadenaString .)
    isnull          reduce using rule 338 (EXP -> cadenaString .)
    notnull         reduce using rule 338 (EXP -> cadenaString .)
    as              reduce using rule 338 (EXP -> cadenaString .)
    cadenaString    reduce using rule 338 (EXP -> cadenaString .)
    cadena          reduce using rule 338 (EXP -> cadenaString .)
    id              reduce using rule 338 (EXP -> cadenaString .)
    in              reduce using rule 338 (EXP -> cadenaString .)
    not             reduce using rule 338 (EXP -> cadenaString .)
    like            reduce using rule 338 (EXP -> cadenaString .)
    then            reduce using rule 338 (EXP -> cadenaString .)
    when            reduce using rule 338 (EXP -> cadenaString .)
    parc            reduce using rule 338 (EXP -> cadenaString .)
    constraint      reduce using rule 338 (EXP -> cadenaString .)
    unique          reduce using rule 338 (EXP -> cadenaString .)
    check           reduce using rule 338 (EXP -> cadenaString .)
    default         reduce using rule 338 (EXP -> cadenaString .)
    null            reduce using rule 338 (EXP -> cadenaString .)
    primary         reduce using rule 338 (EXP -> cadenaString .)
    references      reduce using rule 338 (EXP -> cadenaString .)
    asc             reduce using rule 338 (EXP -> cadenaString .)
    desc            reduce using rule 338 (EXP -> cadenaString .)


state 71

    (337) EXP -> cadena .
    (348) EXP -> cadena . as TIPO

  ! shift/reduce conflict for as resolved as shift
    r_from          reduce using rule 337 (EXP -> cadena .)
    coma            reduce using rule 337 (EXP -> cadena .)
    where           reduce using rule 337 (EXP -> cadena .)
    group           reduce using rule 337 (EXP -> cadena .)
    having          reduce using rule 337 (EXP -> cadena .)
    union           reduce using rule 337 (EXP -> cadena .)
    intersect       reduce using rule 337 (EXP -> cadena .)
    except          reduce using rule 337 (EXP -> cadena .)
    order           reduce using rule 337 (EXP -> cadena .)
    limit           reduce using rule 337 (EXP -> cadena .)
    offset          reduce using rule 337 (EXP -> cadena .)
    ptcoma          reduce using rule 337 (EXP -> cadena .)
    mas             reduce using rule 337 (EXP -> cadena .)
    menos           reduce using rule 337 (EXP -> cadena .)
    multiplicacion  reduce using rule 337 (EXP -> cadena .)
    division        reduce using rule 337 (EXP -> cadena .)
    modulo          reduce using rule 337 (EXP -> cadena .)
    elevado         reduce using rule 337 (EXP -> cadena .)
    and             reduce using rule 337 (EXP -> cadena .)
    or              reduce using rule 337 (EXP -> cadena .)
    mayor           reduce using rule 337 (EXP -> cadena .)
    menor           reduce using rule 337 (EXP -> cadena .)
    mayor_igual     reduce using rule 337 (EXP -> cadena .)
    menor_igual     reduce using rule 337 (EXP -> cadena .)
    igual           reduce using rule 337 (EXP -> cadena .)
    diferente1      reduce using rule 337 (EXP -> cadena .)
    diferente2      reduce using rule 337 (EXP -> cadena .)
    between         reduce using rule 337 (EXP -> cadena .)
    is              reduce using rule 337 (EXP -> cadena .)
    isnull          reduce using rule 337 (EXP -> cadena .)
    notnull         reduce using rule 337 (EXP -> cadena .)
    cadenaString    reduce using rule 337 (EXP -> cadena .)
    cadena          reduce using rule 337 (EXP -> cadena .)
    id              reduce using rule 337 (EXP -> cadena .)
    in              reduce using rule 337 (EXP -> cadena .)
    not             reduce using rule 337 (EXP -> cadena .)
    like            reduce using rule 337 (EXP -> cadena .)
    then            reduce using rule 337 (EXP -> cadena .)
    when            reduce using rule 337 (EXP -> cadena .)
    parc            reduce using rule 337 (EXP -> cadena .)
    constraint      reduce using rule 337 (EXP -> cadena .)
    unique          reduce using rule 337 (EXP -> cadena .)
    check           reduce using rule 337 (EXP -> cadena .)
    default         reduce using rule 337 (EXP -> cadena .)
    null            reduce using rule 337 (EXP -> cadena .)
    primary         reduce using rule 337 (EXP -> cadena .)
    references      reduce using rule 337 (EXP -> cadena .)
    asc             reduce using rule 337 (EXP -> cadena .)
    desc            reduce using rule 337 (EXP -> cadena .)
    as              shift and go to state 158

  ! as              [ reduce using rule 337 (EXP -> cadena .) ]


state 72

    (329) EXP -> id . para LEXP parc
    (330) EXP -> id . para parc
    (341) EXP -> id .

    para            shift and go to state 159
    r_from          reduce using rule 341 (EXP -> id .)
    coma            reduce using rule 341 (EXP -> id .)
    where           reduce using rule 341 (EXP -> id .)
    group           reduce using rule 341 (EXP -> id .)
    having          reduce using rule 341 (EXP -> id .)
    union           reduce using rule 341 (EXP -> id .)
    intersect       reduce using rule 341 (EXP -> id .)
    except          reduce using rule 341 (EXP -> id .)
    order           reduce using rule 341 (EXP -> id .)
    limit           reduce using rule 341 (EXP -> id .)
    offset          reduce using rule 341 (EXP -> id .)
    ptcoma          reduce using rule 341 (EXP -> id .)
    mas             reduce using rule 341 (EXP -> id .)
    menos           reduce using rule 341 (EXP -> id .)
    multiplicacion  reduce using rule 341 (EXP -> id .)
    division        reduce using rule 341 (EXP -> id .)
    modulo          reduce using rule 341 (EXP -> id .)
    elevado         reduce using rule 341 (EXP -> id .)
    and             reduce using rule 341 (EXP -> id .)
    or              reduce using rule 341 (EXP -> id .)
    mayor           reduce using rule 341 (EXP -> id .)
    menor           reduce using rule 341 (EXP -> id .)
    mayor_igual     reduce using rule 341 (EXP -> id .)
    menor_igual     reduce using rule 341 (EXP -> id .)
    igual           reduce using rule 341 (EXP -> id .)
    diferente1      reduce using rule 341 (EXP -> id .)
    diferente2      reduce using rule 341 (EXP -> id .)
    between         reduce using rule 341 (EXP -> id .)
    is              reduce using rule 341 (EXP -> id .)
    isnull          reduce using rule 341 (EXP -> id .)
    notnull         reduce using rule 341 (EXP -> id .)
    as              reduce using rule 341 (EXP -> id .)
    cadenaString    reduce using rule 341 (EXP -> id .)
    cadena          reduce using rule 341 (EXP -> id .)
    id              reduce using rule 341 (EXP -> id .)
    in              reduce using rule 341 (EXP -> id .)
    not             reduce using rule 341 (EXP -> id .)
    like            reduce using rule 341 (EXP -> id .)
    then            reduce using rule 341 (EXP -> id .)
    when            reduce using rule 341 (EXP -> id .)
    parc            reduce using rule 341 (EXP -> id .)
    constraint      reduce using rule 341 (EXP -> id .)
    unique          reduce using rule 341 (EXP -> id .)
    check           reduce using rule 341 (EXP -> id .)
    default         reduce using rule 341 (EXP -> id .)
    null            reduce using rule 341 (EXP -> id .)
    primary         reduce using rule 341 (EXP -> id .)
    references      reduce using rule 341 (EXP -> id .)
    asc             reduce using rule 341 (EXP -> id .)
    desc            reduce using rule 341 (EXP -> id .)


state 73

    (328) EXP -> para . EXP parc
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 160
    SELECT                         shift and go to state 74

state 74

    (327) EXP -> SELECT .

    r_from          reduce using rule 327 (EXP -> SELECT .)
    coma            reduce using rule 327 (EXP -> SELECT .)
    where           reduce using rule 327 (EXP -> SELECT .)
    group           reduce using rule 327 (EXP -> SELECT .)
    having          reduce using rule 327 (EXP -> SELECT .)
    union           reduce using rule 327 (EXP -> SELECT .)
    intersect       reduce using rule 327 (EXP -> SELECT .)
    except          reduce using rule 327 (EXP -> SELECT .)
    order           reduce using rule 327 (EXP -> SELECT .)
    limit           reduce using rule 327 (EXP -> SELECT .)
    offset          reduce using rule 327 (EXP -> SELECT .)
    ptcoma          reduce using rule 327 (EXP -> SELECT .)
    mas             reduce using rule 327 (EXP -> SELECT .)
    menos           reduce using rule 327 (EXP -> SELECT .)
    multiplicacion  reduce using rule 327 (EXP -> SELECT .)
    division        reduce using rule 327 (EXP -> SELECT .)
    modulo          reduce using rule 327 (EXP -> SELECT .)
    elevado         reduce using rule 327 (EXP -> SELECT .)
    and             reduce using rule 327 (EXP -> SELECT .)
    or              reduce using rule 327 (EXP -> SELECT .)
    mayor           reduce using rule 327 (EXP -> SELECT .)
    menor           reduce using rule 327 (EXP -> SELECT .)
    mayor_igual     reduce using rule 327 (EXP -> SELECT .)
    menor_igual     reduce using rule 327 (EXP -> SELECT .)
    igual           reduce using rule 327 (EXP -> SELECT .)
    diferente1      reduce using rule 327 (EXP -> SELECT .)
    diferente2      reduce using rule 327 (EXP -> SELECT .)
    between         reduce using rule 327 (EXP -> SELECT .)
    is              reduce using rule 327 (EXP -> SELECT .)
    isnull          reduce using rule 327 (EXP -> SELECT .)
    notnull         reduce using rule 327 (EXP -> SELECT .)
    as              reduce using rule 327 (EXP -> SELECT .)
    cadenaString    reduce using rule 327 (EXP -> SELECT .)
    cadena          reduce using rule 327 (EXP -> SELECT .)
    id              reduce using rule 327 (EXP -> SELECT .)
    in              reduce using rule 327 (EXP -> SELECT .)
    not             reduce using rule 327 (EXP -> SELECT .)
    like            reduce using rule 327 (EXP -> SELECT .)
    then            reduce using rule 327 (EXP -> SELECT .)
    when            reduce using rule 327 (EXP -> SELECT .)
    parc            reduce using rule 327 (EXP -> SELECT .)
    constraint      reduce using rule 327 (EXP -> SELECT .)
    unique          reduce using rule 327 (EXP -> SELECT .)
    check           reduce using rule 327 (EXP -> SELECT .)
    default         reduce using rule 327 (EXP -> SELECT .)
    null            reduce using rule 327 (EXP -> SELECT .)
    primary         reduce using rule 327 (EXP -> SELECT .)
    references      reduce using rule 327 (EXP -> SELECT .)
    asc             reduce using rule 327 (EXP -> SELECT .)
    desc            reduce using rule 327 (EXP -> SELECT .)


state 75

    (331) EXP -> any . para LEXP parc

    para            shift and go to state 161


state 76

    (332) EXP -> all . para LEXP parc

    para            shift and go to state 162


state 77

    (333) EXP -> some . para LEXP parc

    para            shift and go to state 163


state 78

    (334) EXP -> extract . para FIELDS r_from timestamp cadena parc

    para            shift and go to state 164


state 79

    (346) EXP -> timestamp . cadena

    cadena          shift and go to state 165


state 80

    (335) EXP -> int .

    r_from          reduce using rule 335 (EXP -> int .)
    coma            reduce using rule 335 (EXP -> int .)
    where           reduce using rule 335 (EXP -> int .)
    group           reduce using rule 335 (EXP -> int .)
    having          reduce using rule 335 (EXP -> int .)
    union           reduce using rule 335 (EXP -> int .)
    intersect       reduce using rule 335 (EXP -> int .)
    except          reduce using rule 335 (EXP -> int .)
    order           reduce using rule 335 (EXP -> int .)
    limit           reduce using rule 335 (EXP -> int .)
    offset          reduce using rule 335 (EXP -> int .)
    ptcoma          reduce using rule 335 (EXP -> int .)
    mas             reduce using rule 335 (EXP -> int .)
    menos           reduce using rule 335 (EXP -> int .)
    multiplicacion  reduce using rule 335 (EXP -> int .)
    division        reduce using rule 335 (EXP -> int .)
    modulo          reduce using rule 335 (EXP -> int .)
    elevado         reduce using rule 335 (EXP -> int .)
    and             reduce using rule 335 (EXP -> int .)
    or              reduce using rule 335 (EXP -> int .)
    mayor           reduce using rule 335 (EXP -> int .)
    menor           reduce using rule 335 (EXP -> int .)
    mayor_igual     reduce using rule 335 (EXP -> int .)
    menor_igual     reduce using rule 335 (EXP -> int .)
    igual           reduce using rule 335 (EXP -> int .)
    diferente1      reduce using rule 335 (EXP -> int .)
    diferente2      reduce using rule 335 (EXP -> int .)
    between         reduce using rule 335 (EXP -> int .)
    is              reduce using rule 335 (EXP -> int .)
    isnull          reduce using rule 335 (EXP -> int .)
    notnull         reduce using rule 335 (EXP -> int .)
    as              reduce using rule 335 (EXP -> int .)
    cadenaString    reduce using rule 335 (EXP -> int .)
    cadena          reduce using rule 335 (EXP -> int .)
    id              reduce using rule 335 (EXP -> int .)
    in              reduce using rule 335 (EXP -> int .)
    not             reduce using rule 335 (EXP -> int .)
    like            reduce using rule 335 (EXP -> int .)
    then            reduce using rule 335 (EXP -> int .)
    when            reduce using rule 335 (EXP -> int .)
    parc            reduce using rule 335 (EXP -> int .)
    constraint      reduce using rule 335 (EXP -> int .)
    unique          reduce using rule 335 (EXP -> int .)
    check           reduce using rule 335 (EXP -> int .)
    default         reduce using rule 335 (EXP -> int .)
    null            reduce using rule 335 (EXP -> int .)
    primary         reduce using rule 335 (EXP -> int .)
    references      reduce using rule 335 (EXP -> int .)
    asc             reduce using rule 335 (EXP -> int .)
    desc            reduce using rule 335 (EXP -> int .)


state 81

    (336) EXP -> decimales .

    r_from          reduce using rule 336 (EXP -> decimales .)
    coma            reduce using rule 336 (EXP -> decimales .)
    where           reduce using rule 336 (EXP -> decimales .)
    group           reduce using rule 336 (EXP -> decimales .)
    having          reduce using rule 336 (EXP -> decimales .)
    union           reduce using rule 336 (EXP -> decimales .)
    intersect       reduce using rule 336 (EXP -> decimales .)
    except          reduce using rule 336 (EXP -> decimales .)
    order           reduce using rule 336 (EXP -> decimales .)
    limit           reduce using rule 336 (EXP -> decimales .)
    offset          reduce using rule 336 (EXP -> decimales .)
    ptcoma          reduce using rule 336 (EXP -> decimales .)
    mas             reduce using rule 336 (EXP -> decimales .)
    menos           reduce using rule 336 (EXP -> decimales .)
    multiplicacion  reduce using rule 336 (EXP -> decimales .)
    division        reduce using rule 336 (EXP -> decimales .)
    modulo          reduce using rule 336 (EXP -> decimales .)
    elevado         reduce using rule 336 (EXP -> decimales .)
    and             reduce using rule 336 (EXP -> decimales .)
    or              reduce using rule 336 (EXP -> decimales .)
    mayor           reduce using rule 336 (EXP -> decimales .)
    menor           reduce using rule 336 (EXP -> decimales .)
    mayor_igual     reduce using rule 336 (EXP -> decimales .)
    menor_igual     reduce using rule 336 (EXP -> decimales .)
    igual           reduce using rule 336 (EXP -> decimales .)
    diferente1      reduce using rule 336 (EXP -> decimales .)
    diferente2      reduce using rule 336 (EXP -> decimales .)
    between         reduce using rule 336 (EXP -> decimales .)
    is              reduce using rule 336 (EXP -> decimales .)
    isnull          reduce using rule 336 (EXP -> decimales .)
    notnull         reduce using rule 336 (EXP -> decimales .)
    as              reduce using rule 336 (EXP -> decimales .)
    cadenaString    reduce using rule 336 (EXP -> decimales .)
    cadena          reduce using rule 336 (EXP -> decimales .)
    id              reduce using rule 336 (EXP -> decimales .)
    in              reduce using rule 336 (EXP -> decimales .)
    not             reduce using rule 336 (EXP -> decimales .)
    like            reduce using rule 336 (EXP -> decimales .)
    then            reduce using rule 336 (EXP -> decimales .)
    when            reduce using rule 336 (EXP -> decimales .)
    parc            reduce using rule 336 (EXP -> decimales .)
    constraint      reduce using rule 336 (EXP -> decimales .)
    unique          reduce using rule 336 (EXP -> decimales .)
    check           reduce using rule 336 (EXP -> decimales .)
    default         reduce using rule 336 (EXP -> decimales .)
    null            reduce using rule 336 (EXP -> decimales .)
    primary         reduce using rule 336 (EXP -> decimales .)
    references      reduce using rule 336 (EXP -> decimales .)
    asc             reduce using rule 336 (EXP -> decimales .)
    desc            reduce using rule 336 (EXP -> decimales .)


state 82

    (344) EXP -> current_time .

    r_from          reduce using rule 344 (EXP -> current_time .)
    coma            reduce using rule 344 (EXP -> current_time .)
    where           reduce using rule 344 (EXP -> current_time .)
    group           reduce using rule 344 (EXP -> current_time .)
    having          reduce using rule 344 (EXP -> current_time .)
    union           reduce using rule 344 (EXP -> current_time .)
    intersect       reduce using rule 344 (EXP -> current_time .)
    except          reduce using rule 344 (EXP -> current_time .)
    order           reduce using rule 344 (EXP -> current_time .)
    limit           reduce using rule 344 (EXP -> current_time .)
    offset          reduce using rule 344 (EXP -> current_time .)
    ptcoma          reduce using rule 344 (EXP -> current_time .)
    mas             reduce using rule 344 (EXP -> current_time .)
    menos           reduce using rule 344 (EXP -> current_time .)
    multiplicacion  reduce using rule 344 (EXP -> current_time .)
    division        reduce using rule 344 (EXP -> current_time .)
    modulo          reduce using rule 344 (EXP -> current_time .)
    elevado         reduce using rule 344 (EXP -> current_time .)
    and             reduce using rule 344 (EXP -> current_time .)
    or              reduce using rule 344 (EXP -> current_time .)
    mayor           reduce using rule 344 (EXP -> current_time .)
    menor           reduce using rule 344 (EXP -> current_time .)
    mayor_igual     reduce using rule 344 (EXP -> current_time .)
    menor_igual     reduce using rule 344 (EXP -> current_time .)
    igual           reduce using rule 344 (EXP -> current_time .)
    diferente1      reduce using rule 344 (EXP -> current_time .)
    diferente2      reduce using rule 344 (EXP -> current_time .)
    between         reduce using rule 344 (EXP -> current_time .)
    is              reduce using rule 344 (EXP -> current_time .)
    isnull          reduce using rule 344 (EXP -> current_time .)
    notnull         reduce using rule 344 (EXP -> current_time .)
    as              reduce using rule 344 (EXP -> current_time .)
    cadenaString    reduce using rule 344 (EXP -> current_time .)
    cadena          reduce using rule 344 (EXP -> current_time .)
    id              reduce using rule 344 (EXP -> current_time .)
    in              reduce using rule 344 (EXP -> current_time .)
    not             reduce using rule 344 (EXP -> current_time .)
    like            reduce using rule 344 (EXP -> current_time .)
    then            reduce using rule 344 (EXP -> current_time .)
    when            reduce using rule 344 (EXP -> current_time .)
    parc            reduce using rule 344 (EXP -> current_time .)
    constraint      reduce using rule 344 (EXP -> current_time .)
    unique          reduce using rule 344 (EXP -> current_time .)
    check           reduce using rule 344 (EXP -> current_time .)
    default         reduce using rule 344 (EXP -> current_time .)
    null            reduce using rule 344 (EXP -> current_time .)
    primary         reduce using rule 344 (EXP -> current_time .)
    references      reduce using rule 344 (EXP -> current_time .)
    asc             reduce using rule 344 (EXP -> current_time .)
    desc            reduce using rule 344 (EXP -> current_time .)


state 83

    (345) EXP -> current_date .

    r_from          reduce using rule 345 (EXP -> current_date .)
    coma            reduce using rule 345 (EXP -> current_date .)
    where           reduce using rule 345 (EXP -> current_date .)
    group           reduce using rule 345 (EXP -> current_date .)
    having          reduce using rule 345 (EXP -> current_date .)
    union           reduce using rule 345 (EXP -> current_date .)
    intersect       reduce using rule 345 (EXP -> current_date .)
    except          reduce using rule 345 (EXP -> current_date .)
    order           reduce using rule 345 (EXP -> current_date .)
    limit           reduce using rule 345 (EXP -> current_date .)
    offset          reduce using rule 345 (EXP -> current_date .)
    ptcoma          reduce using rule 345 (EXP -> current_date .)
    mas             reduce using rule 345 (EXP -> current_date .)
    menos           reduce using rule 345 (EXP -> current_date .)
    multiplicacion  reduce using rule 345 (EXP -> current_date .)
    division        reduce using rule 345 (EXP -> current_date .)
    modulo          reduce using rule 345 (EXP -> current_date .)
    elevado         reduce using rule 345 (EXP -> current_date .)
    and             reduce using rule 345 (EXP -> current_date .)
    or              reduce using rule 345 (EXP -> current_date .)
    mayor           reduce using rule 345 (EXP -> current_date .)
    menor           reduce using rule 345 (EXP -> current_date .)
    mayor_igual     reduce using rule 345 (EXP -> current_date .)
    menor_igual     reduce using rule 345 (EXP -> current_date .)
    igual           reduce using rule 345 (EXP -> current_date .)
    diferente1      reduce using rule 345 (EXP -> current_date .)
    diferente2      reduce using rule 345 (EXP -> current_date .)
    between         reduce using rule 345 (EXP -> current_date .)
    is              reduce using rule 345 (EXP -> current_date .)
    isnull          reduce using rule 345 (EXP -> current_date .)
    notnull         reduce using rule 345 (EXP -> current_date .)
    as              reduce using rule 345 (EXP -> current_date .)
    cadenaString    reduce using rule 345 (EXP -> current_date .)
    cadena          reduce using rule 345 (EXP -> current_date .)
    id              reduce using rule 345 (EXP -> current_date .)
    in              reduce using rule 345 (EXP -> current_date .)
    not             reduce using rule 345 (EXP -> current_date .)
    like            reduce using rule 345 (EXP -> current_date .)
    then            reduce using rule 345 (EXP -> current_date .)
    when            reduce using rule 345 (EXP -> current_date .)
    parc            reduce using rule 345 (EXP -> current_date .)
    constraint      reduce using rule 345 (EXP -> current_date .)
    unique          reduce using rule 345 (EXP -> current_date .)
    check           reduce using rule 345 (EXP -> current_date .)
    default         reduce using rule 345 (EXP -> current_date .)
    null            reduce using rule 345 (EXP -> current_date .)
    primary         reduce using rule 345 (EXP -> current_date .)
    references      reduce using rule 345 (EXP -> current_date .)
    asc             reduce using rule 345 (EXP -> current_date .)
    desc            reduce using rule 345 (EXP -> current_date .)


state 84

    (347) EXP -> interval . cadena

    cadena          shift and go to state 166


state 85

    (349) EXP -> default .

    r_from          reduce using rule 349 (EXP -> default .)
    coma            reduce using rule 349 (EXP -> default .)
    where           reduce using rule 349 (EXP -> default .)
    group           reduce using rule 349 (EXP -> default .)
    having          reduce using rule 349 (EXP -> default .)
    union           reduce using rule 349 (EXP -> default .)
    intersect       reduce using rule 349 (EXP -> default .)
    except          reduce using rule 349 (EXP -> default .)
    order           reduce using rule 349 (EXP -> default .)
    limit           reduce using rule 349 (EXP -> default .)
    offset          reduce using rule 349 (EXP -> default .)
    ptcoma          reduce using rule 349 (EXP -> default .)
    mas             reduce using rule 349 (EXP -> default .)
    menos           reduce using rule 349 (EXP -> default .)
    multiplicacion  reduce using rule 349 (EXP -> default .)
    division        reduce using rule 349 (EXP -> default .)
    modulo          reduce using rule 349 (EXP -> default .)
    elevado         reduce using rule 349 (EXP -> default .)
    and             reduce using rule 349 (EXP -> default .)
    or              reduce using rule 349 (EXP -> default .)
    mayor           reduce using rule 349 (EXP -> default .)
    menor           reduce using rule 349 (EXP -> default .)
    mayor_igual     reduce using rule 349 (EXP -> default .)
    menor_igual     reduce using rule 349 (EXP -> default .)
    igual           reduce using rule 349 (EXP -> default .)
    diferente1      reduce using rule 349 (EXP -> default .)
    diferente2      reduce using rule 349 (EXP -> default .)
    between         reduce using rule 349 (EXP -> default .)
    is              reduce using rule 349 (EXP -> default .)
    isnull          reduce using rule 349 (EXP -> default .)
    notnull         reduce using rule 349 (EXP -> default .)
    as              reduce using rule 349 (EXP -> default .)
    cadenaString    reduce using rule 349 (EXP -> default .)
    cadena          reduce using rule 349 (EXP -> default .)
    id              reduce using rule 349 (EXP -> default .)
    in              reduce using rule 349 (EXP -> default .)
    not             reduce using rule 349 (EXP -> default .)
    like            reduce using rule 349 (EXP -> default .)
    then            reduce using rule 349 (EXP -> default .)
    when            reduce using rule 349 (EXP -> default .)
    parc            reduce using rule 349 (EXP -> default .)
    constraint      reduce using rule 349 (EXP -> default .)
    unique          reduce using rule 349 (EXP -> default .)
    check           reduce using rule 349 (EXP -> default .)
    default         reduce using rule 349 (EXP -> default .)
    null            reduce using rule 349 (EXP -> default .)
    primary         reduce using rule 349 (EXP -> default .)
    references      reduce using rule 349 (EXP -> default .)
    asc             reduce using rule 349 (EXP -> default .)
    desc            reduce using rule 349 (EXP -> default .)


state 86

    (350) EXP -> idPunto .

    r_from          reduce using rule 350 (EXP -> idPunto .)
    coma            reduce using rule 350 (EXP -> idPunto .)
    where           reduce using rule 350 (EXP -> idPunto .)
    group           reduce using rule 350 (EXP -> idPunto .)
    having          reduce using rule 350 (EXP -> idPunto .)
    union           reduce using rule 350 (EXP -> idPunto .)
    intersect       reduce using rule 350 (EXP -> idPunto .)
    except          reduce using rule 350 (EXP -> idPunto .)
    order           reduce using rule 350 (EXP -> idPunto .)
    limit           reduce using rule 350 (EXP -> idPunto .)
    offset          reduce using rule 350 (EXP -> idPunto .)
    ptcoma          reduce using rule 350 (EXP -> idPunto .)
    mas             reduce using rule 350 (EXP -> idPunto .)
    menos           reduce using rule 350 (EXP -> idPunto .)
    multiplicacion  reduce using rule 350 (EXP -> idPunto .)
    division        reduce using rule 350 (EXP -> idPunto .)
    modulo          reduce using rule 350 (EXP -> idPunto .)
    elevado         reduce using rule 350 (EXP -> idPunto .)
    and             reduce using rule 350 (EXP -> idPunto .)
    or              reduce using rule 350 (EXP -> idPunto .)
    mayor           reduce using rule 350 (EXP -> idPunto .)
    menor           reduce using rule 350 (EXP -> idPunto .)
    mayor_igual     reduce using rule 350 (EXP -> idPunto .)
    menor_igual     reduce using rule 350 (EXP -> idPunto .)
    igual           reduce using rule 350 (EXP -> idPunto .)
    diferente1      reduce using rule 350 (EXP -> idPunto .)
    diferente2      reduce using rule 350 (EXP -> idPunto .)
    between         reduce using rule 350 (EXP -> idPunto .)
    is              reduce using rule 350 (EXP -> idPunto .)
    isnull          reduce using rule 350 (EXP -> idPunto .)
    notnull         reduce using rule 350 (EXP -> idPunto .)
    as              reduce using rule 350 (EXP -> idPunto .)
    cadenaString    reduce using rule 350 (EXP -> idPunto .)
    cadena          reduce using rule 350 (EXP -> idPunto .)
    id              reduce using rule 350 (EXP -> idPunto .)
    in              reduce using rule 350 (EXP -> idPunto .)
    not             reduce using rule 350 (EXP -> idPunto .)
    like            reduce using rule 350 (EXP -> idPunto .)
    then            reduce using rule 350 (EXP -> idPunto .)
    when            reduce using rule 350 (EXP -> idPunto .)
    parc            reduce using rule 350 (EXP -> idPunto .)
    constraint      reduce using rule 350 (EXP -> idPunto .)
    unique          reduce using rule 350 (EXP -> idPunto .)
    check           reduce using rule 350 (EXP -> idPunto .)
    default         reduce using rule 350 (EXP -> idPunto .)
    null            reduce using rule 350 (EXP -> idPunto .)
    primary         reduce using rule 350 (EXP -> idPunto .)
    references      reduce using rule 350 (EXP -> idPunto .)
    asc             reduce using rule 350 (EXP -> idPunto .)
    desc            reduce using rule 350 (EXP -> idPunto .)


state 87

    (168) CREATETABLE -> create table . id para LDEF parc ptcoma
    (169) CREATETABLE -> create table . id para LDEF parc HERENCIA ptcoma

    id              shift and go to state 167


state 88

    (199) CREATETYPE -> create type . id as enum para LEXP parc

    id              shift and go to state 168


state 89

    (151) CREATEDB -> create RD . if not exist id
    (152) CREATEDB -> create RD . if not exist id OPCCDB
    (153) CREATEDB -> create RD . id
    (154) CREATEDB -> create RD . id OPCCDB

    if              shift and go to state 169
    id              shift and go to state 170


state 90

    (52) CREATEINDEX -> create index . id on id para LEXP parc
    (54) CREATEINDEX -> create index . id on id using hash para LEXP parc
    (55) CREATEINDEX -> create index . id on id para id ORDEN parc
    (56) CREATEINDEX -> create index . id on id para id id ORDEN parc
    (57) CREATEINDEX -> create index . id on id para id id parc

    id              shift and go to state 171


state 91

    (53) CREATEINDEX -> create unique . index id on id para LEXP parc

    index           shift and go to state 172


state 92

    (37) PROCEDIMIENTOS -> create procedure . id para LPARAM parc LENGUAJE LCONTENIDOP
    (38) PROCEDIMIENTOS -> create procedure . id para parc LENGUAJE LCONTENIDOP
    (39) PROCEDIMIENTOS -> create procedure . id para LPARAM parc LCONTENIDOP LENGUAJE
    (40) PROCEDIMIENTOS -> create procedure . id para parc LCONTENIDOP LENGUAJE

    id              shift and go to state 173


state 93

    (27) FUNCIONES -> create function . id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP
    (28) FUNCIONES -> create function . id para parc RETURNP LENGUAJE LCONTENIDOP
    (29) FUNCIONES -> create function . id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE
    (30) FUNCIONES -> create function . id para parc RETURNP LCONTENIDOP LENGUAJE

    id              shift and go to state 174


state 94

    (158) RD -> or . replace databases

    replace         shift and go to state 175


state 95

    (159) RD -> databases .

    if              reduce using rule 159 (RD -> databases .)
    id              reduce using rule 159 (RD -> databases .)


state 96

    (228) UPDATE -> update id . set LCAMPOS WHERE

    set             shift and go to state 176


state 97

    (231) DELETE -> delete r_from . id WHERE

    id              shift and go to state 177


state 98

    (125) ALTER -> alter databases . id rename to id
    (126) ALTER -> alter databases . id owner to id

    id              shift and go to state 178


state 99

    (127) ALTER -> alter table . id LOP

    id              shift and go to state 179


state 100

    (128) ALTER -> alter index . id alter EXP
    (129) ALTER -> alter index . if exist id alter EXP
    (130) ALTER -> alter index . id alter column EXP
    (131) ALTER -> alter index . if exist id alter column EXP

    id              shift and go to state 180
    if              shift and go to state 181


state 101

    (78) CONDICIONIF -> if EXP . then LISTACONTENIDO ELSEF end if
    (79) CONDICIONIF -> if EXP . then LISTACONTENIDO LELIF end if
    (80) CONDICIONIF -> if EXP . then LISTACONTENIDO end if
    (81) CONDICIONIF -> if EXP . then LISTACONTENIDO LELIF ELSEF end if
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    then            shift and go to state 182
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    and             shift and go to state 135
    or              shift and go to state 136
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143
    between         shift and go to state 144
    is              shift and go to state 145
    isnull          shift and go to state 147
    notnull         shift and go to state 148
    as              shift and go to state 149
    cadenaString    shift and go to state 150
    cadena          shift and go to state 151
    id              shift and go to state 152
    in              shift and go to state 153
    not             shift and go to state 146
    like            shift and go to state 154


state 102

    (120) DROP -> drop all . para parc

    para            shift and go to state 183


state 103

    (121) DROP -> drop table . id

    id              shift and go to state 184


state 104

    (122) DROP -> drop index . id

    id              shift and go to state 185


state 105

    (123) DROP -> drop databases . if exist id
    (124) DROP -> drop databases . id

    if              shift and go to state 186
    id              shift and go to state 187


state 106

    (31) DROPFUNC -> drop function . id
    (32) DROPFUNC -> drop function . if exist id

    id              shift and go to state 188
    if              shift and go to state 189


state 107

    (33) DROPPROCEDURE -> drop procedure . id

    id              shift and go to state 190


state 108

    (118) INSERT -> insert into . id values para LEXP parc
    (119) INSERT -> insert into . id para LEXP parc values para LEXP parc

    id              shift and go to state 191


state 109

    (85) CASE -> case EXP . LISTAWHEN ELSEF end case
    (86) CASE -> case EXP . LISTAWHEN end case
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena
    (114) LISTAWHEN -> . LISTAWHEN WHEN
    (115) LISTAWHEN -> . WHEN
    (116) WHEN -> . when EXP then LISTACONTENIDO

    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    and             shift and go to state 135
    or              shift and go to state 136
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143
    between         shift and go to state 144
    is              shift and go to state 145
    isnull          shift and go to state 147
    notnull         shift and go to state 148
    as              shift and go to state 149
    cadenaString    shift and go to state 150
    cadena          shift and go to state 151
    id              shift and go to state 152
    in              shift and go to state 153
    not             shift and go to state 146
    like            shift and go to state 154
    when            shift and go to state 112

    LISTAWHEN                      shift and go to state 192
    WHEN                           shift and go to state 111

state 110

    (87) CASE -> case LISTAWHEN . ELSEF end case
    (88) CASE -> case LISTAWHEN . end case
    (114) LISTAWHEN -> LISTAWHEN . WHEN
    (84) ELSEF -> . else LISTACONTENIDO
    (116) WHEN -> . when EXP then LISTACONTENIDO

    end             shift and go to state 194
    else            shift and go to state 196
    when            shift and go to state 112

    ELSEF                          shift and go to state 193
    WHEN                           shift and go to state 195

state 111

    (115) LISTAWHEN -> WHEN .

    end             reduce using rule 115 (LISTAWHEN -> WHEN .)
    else            reduce using rule 115 (LISTAWHEN -> WHEN .)
    when            reduce using rule 115 (LISTAWHEN -> WHEN .)


state 112

    (116) WHEN -> when . EXP then LISTACONTENIDO
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 197
    SELECT                         shift and go to state 74

state 113

    (148) SHOWDB -> show dbs .

    ptcoma          reduce using rule 148 (SHOWDB -> show dbs .)


state 114

    (149) SHOW -> show tables . para id parc

    para            shift and go to state 198


state 115

    (150) SHOW -> show collection . para parc

    para            shift and go to state 199


state 116

    (35) CALLPROCEDURE -> execute id . para LEXP parc
    (36) CALLPROCEDURE -> execute id . para parc

    para            shift and go to state 200


state 117

    (16) instruccion -> use id ptcoma .

    use             reduce using rule 16 (instruccion -> use id ptcoma .)
    select          reduce using rule 16 (instruccion -> use id ptcoma .)
    create          reduce using rule 16 (instruccion -> use id ptcoma .)
    update          reduce using rule 16 (instruccion -> use id ptcoma .)
    delete          reduce using rule 16 (instruccion -> use id ptcoma .)
    alter           reduce using rule 16 (instruccion -> use id ptcoma .)
    drop            reduce using rule 16 (instruccion -> use id ptcoma .)
    insert          reduce using rule 16 (instruccion -> use id ptcoma .)
    case            reduce using rule 16 (instruccion -> use id ptcoma .)
    show            reduce using rule 16 (instruccion -> use id ptcoma .)
    id              reduce using rule 16 (instruccion -> use id ptcoma .)
    if              reduce using rule 16 (instruccion -> use id ptcoma .)
    execute         reduce using rule 16 (instruccion -> use id ptcoma .)
    $end            reduce using rule 16 (instruccion -> use id ptcoma .)


state 118

    (76) ASIGNACION -> id dospuntos igual . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 201
    SELECT                         shift and go to state 74

state 119

    (77) ASIGNACION -> id igual EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    ptcoma          reduce using rule 77 (ASIGNACION -> id igual EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    and             shift and go to state 135
    or              shift and go to state 136
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143
    between         shift and go to state 144
    is              shift and go to state 145
    isnull          shift and go to state 147
    notnull         shift and go to state 148
    as              shift and go to state 149
    cadenaString    shift and go to state 150
    cadena          shift and go to state 151
    id              shift and go to state 152
    in              shift and go to state 153
    not             shift and go to state 146
    like            shift and go to state 154


state 120

    (18) instruccion -> CREATEINDEX WHERE ptcoma .

    use             reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    select          reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    create          reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    update          reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    delete          reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    alter           reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    drop            reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    insert          reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    case            reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    show            reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    id              reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    if              reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    execute         reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    $end            reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)


state 121

    (211) WHERE -> where EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    ptcoma          reduce using rule 211 (WHERE -> where EXP .)
    r_from          reduce using rule 211 (WHERE -> where EXP .)
    coma            reduce using rule 211 (WHERE -> where EXP .)
    where           reduce using rule 211 (WHERE -> where EXP .)
    group           reduce using rule 211 (WHERE -> where EXP .)
    having          reduce using rule 211 (WHERE -> where EXP .)
    union           reduce using rule 211 (WHERE -> where EXP .)
    intersect       reduce using rule 211 (WHERE -> where EXP .)
    except          reduce using rule 211 (WHERE -> where EXP .)
    order           reduce using rule 211 (WHERE -> where EXP .)
    limit           reduce using rule 211 (WHERE -> where EXP .)
    offset          reduce using rule 211 (WHERE -> where EXP .)
    then            reduce using rule 211 (WHERE -> where EXP .)
    when            reduce using rule 211 (WHERE -> where EXP .)
    parc            reduce using rule 211 (WHERE -> where EXP .)
    constraint      reduce using rule 211 (WHERE -> where EXP .)
    unique          reduce using rule 211 (WHERE -> where EXP .)
    check           reduce using rule 211 (WHERE -> where EXP .)
    default         reduce using rule 211 (WHERE -> where EXP .)
    null            reduce using rule 211 (WHERE -> where EXP .)
    primary         reduce using rule 211 (WHERE -> where EXP .)
    references      reduce using rule 211 (WHERE -> where EXP .)
    asc             reduce using rule 211 (WHERE -> where EXP .)
    desc            reduce using rule 211 (WHERE -> where EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    and             shift and go to state 135
    or              shift and go to state 136
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143
    between         shift and go to state 144
    is              shift and go to state 145
    isnull          shift and go to state 147
    notnull         shift and go to state 148
    as              shift and go to state 149
    cadenaString    shift and go to state 150
    cadena          shift and go to state 151
    id              shift and go to state 152
    in              shift and go to state 153
    not             shift and go to state 146
    like            shift and go to state 154

  ! mas             [ reduce using rule 211 (WHERE -> where EXP .) ]
  ! menos           [ reduce using rule 211 (WHERE -> where EXP .) ]
  ! multiplicacion  [ reduce using rule 211 (WHERE -> where EXP .) ]
  ! division        [ reduce using rule 211 (WHERE -> where EXP .) ]
  ! modulo          [ reduce using rule 211 (WHERE -> where EXP .) ]
  ! elevado         [ reduce using rule 211 (WHERE -> where EXP .) ]
  ! and             [ reduce using rule 211 (WHERE -> where EXP .) ]
  ! or              [ reduce using rule 211 (WHERE -> where EXP .) ]
  ! mayor           [ reduce using rule 211 (WHERE -> where EXP .) ]
  ! menor           [ reduce using rule 211 (WHERE -> where EXP .) ]
  ! mayor_igual     [ reduce using rule 211 (WHERE -> where EXP .) ]
  ! menor_igual     [ reduce using rule 211 (WHERE -> where EXP .) ]
  ! igual           [ reduce using rule 211 (WHERE -> where EXP .) ]
  ! diferente1      [ reduce using rule 211 (WHERE -> where EXP .) ]
  ! diferente2      [ reduce using rule 211 (WHERE -> where EXP .) ]
  ! between         [ reduce using rule 211 (WHERE -> where EXP .) ]
  ! is              [ reduce using rule 211 (WHERE -> where EXP .) ]
  ! isnull          [ reduce using rule 211 (WHERE -> where EXP .) ]
  ! notnull         [ reduce using rule 211 (WHERE -> where EXP .) ]
  ! as              [ reduce using rule 211 (WHERE -> where EXP .) ]
  ! cadenaString    [ reduce using rule 211 (WHERE -> where EXP .) ]
  ! cadena          [ reduce using rule 211 (WHERE -> where EXP .) ]
  ! id              [ reduce using rule 211 (WHERE -> where EXP .) ]
  ! in              [ reduce using rule 211 (WHERE -> where EXP .) ]
  ! not             [ reduce using rule 211 (WHERE -> where EXP .) ]
  ! like            [ reduce using rule 211 (WHERE -> where EXP .) ]


state 122

    (212) WHERE -> where EXIST .

    ptcoma          reduce using rule 212 (WHERE -> where EXIST .)
    r_from          reduce using rule 212 (WHERE -> where EXIST .)
    coma            reduce using rule 212 (WHERE -> where EXIST .)
    where           reduce using rule 212 (WHERE -> where EXIST .)
    group           reduce using rule 212 (WHERE -> where EXIST .)
    having          reduce using rule 212 (WHERE -> where EXIST .)
    union           reduce using rule 212 (WHERE -> where EXIST .)
    intersect       reduce using rule 212 (WHERE -> where EXIST .)
    except          reduce using rule 212 (WHERE -> where EXIST .)
    order           reduce using rule 212 (WHERE -> where EXIST .)
    limit           reduce using rule 212 (WHERE -> where EXIST .)
    offset          reduce using rule 212 (WHERE -> where EXIST .)
    mas             reduce using rule 212 (WHERE -> where EXIST .)
    menos           reduce using rule 212 (WHERE -> where EXIST .)
    multiplicacion  reduce using rule 212 (WHERE -> where EXIST .)
    division        reduce using rule 212 (WHERE -> where EXIST .)
    modulo          reduce using rule 212 (WHERE -> where EXIST .)
    elevado         reduce using rule 212 (WHERE -> where EXIST .)
    and             reduce using rule 212 (WHERE -> where EXIST .)
    or              reduce using rule 212 (WHERE -> where EXIST .)
    mayor           reduce using rule 212 (WHERE -> where EXIST .)
    menor           reduce using rule 212 (WHERE -> where EXIST .)
    mayor_igual     reduce using rule 212 (WHERE -> where EXIST .)
    menor_igual     reduce using rule 212 (WHERE -> where EXIST .)
    igual           reduce using rule 212 (WHERE -> where EXIST .)
    diferente1      reduce using rule 212 (WHERE -> where EXIST .)
    diferente2      reduce using rule 212 (WHERE -> where EXIST .)
    between         reduce using rule 212 (WHERE -> where EXIST .)
    is              reduce using rule 212 (WHERE -> where EXIST .)
    isnull          reduce using rule 212 (WHERE -> where EXIST .)
    notnull         reduce using rule 212 (WHERE -> where EXIST .)
    as              reduce using rule 212 (WHERE -> where EXIST .)
    cadenaString    reduce using rule 212 (WHERE -> where EXIST .)
    cadena          reduce using rule 212 (WHERE -> where EXIST .)
    id              reduce using rule 212 (WHERE -> where EXIST .)
    in              reduce using rule 212 (WHERE -> where EXIST .)
    not             reduce using rule 212 (WHERE -> where EXIST .)
    like            reduce using rule 212 (WHERE -> where EXIST .)
    then            reduce using rule 212 (WHERE -> where EXIST .)
    when            reduce using rule 212 (WHERE -> where EXIST .)
    parc            reduce using rule 212 (WHERE -> where EXIST .)
    constraint      reduce using rule 212 (WHERE -> where EXIST .)
    unique          reduce using rule 212 (WHERE -> where EXIST .)
    check           reduce using rule 212 (WHERE -> where EXIST .)
    default         reduce using rule 212 (WHERE -> where EXIST .)
    null            reduce using rule 212 (WHERE -> where EXIST .)
    primary         reduce using rule 212 (WHERE -> where EXIST .)
    references      reduce using rule 212 (WHERE -> where EXIST .)
    asc             reduce using rule 212 (WHERE -> where EXIST .)
    desc            reduce using rule 212 (WHERE -> where EXIST .)


state 123

    (317) EXP -> not . EXP
    (233) EXIST -> not . exist para SELECT parc
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    exist           shift and go to state 202
    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 157
    SELECT                         shift and go to state 74

state 124

    (232) EXIST -> exist . para SELECT parc

    para            shift and go to state 203


state 125

    (200) SELECT -> select distinct LEXP . r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (234) LEXP -> LEXP . coma EXP

    r_from          shift and go to state 204
    coma            shift and go to state 128


state 126

    (201) SELECT -> select LEXP r_from . LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (234) LEXP -> . LEXP coma EXP
    (235) LEXP -> . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    LEXP                           shift and go to state 205
    EXP                            shift and go to state 62
    SELECT                         shift and go to state 74

state 127

    (202) SELECT -> select LEXP WHERE . GROUP HAVING COMBINING ORDER LIMIT
    (219) GROUP -> . group by LEXP
    (220) GROUP -> .

  ! shift/reduce conflict for group resolved as shift
    group           shift and go to state 207
    r_from          reduce using rule 220 (GROUP -> .)
    coma            reduce using rule 220 (GROUP -> .)
    where           reduce using rule 220 (GROUP -> .)
    having          reduce using rule 220 (GROUP -> .)
    union           reduce using rule 220 (GROUP -> .)
    intersect       reduce using rule 220 (GROUP -> .)
    except          reduce using rule 220 (GROUP -> .)
    order           reduce using rule 220 (GROUP -> .)
    limit           reduce using rule 220 (GROUP -> .)
    offset          reduce using rule 220 (GROUP -> .)
    ptcoma          reduce using rule 220 (GROUP -> .)
    mas             reduce using rule 220 (GROUP -> .)
    menos           reduce using rule 220 (GROUP -> .)
    multiplicacion  reduce using rule 220 (GROUP -> .)
    division        reduce using rule 220 (GROUP -> .)
    modulo          reduce using rule 220 (GROUP -> .)
    elevado         reduce using rule 220 (GROUP -> .)
    and             reduce using rule 220 (GROUP -> .)
    or              reduce using rule 220 (GROUP -> .)
    mayor           reduce using rule 220 (GROUP -> .)
    menor           reduce using rule 220 (GROUP -> .)
    mayor_igual     reduce using rule 220 (GROUP -> .)
    menor_igual     reduce using rule 220 (GROUP -> .)
    igual           reduce using rule 220 (GROUP -> .)
    diferente1      reduce using rule 220 (GROUP -> .)
    diferente2      reduce using rule 220 (GROUP -> .)
    between         reduce using rule 220 (GROUP -> .)
    is              reduce using rule 220 (GROUP -> .)
    isnull          reduce using rule 220 (GROUP -> .)
    notnull         reduce using rule 220 (GROUP -> .)
    as              reduce using rule 220 (GROUP -> .)
    cadenaString    reduce using rule 220 (GROUP -> .)
    cadena          reduce using rule 220 (GROUP -> .)
    id              reduce using rule 220 (GROUP -> .)
    in              reduce using rule 220 (GROUP -> .)
    not             reduce using rule 220 (GROUP -> .)
    like            reduce using rule 220 (GROUP -> .)
    then            reduce using rule 220 (GROUP -> .)
    when            reduce using rule 220 (GROUP -> .)
    parc            reduce using rule 220 (GROUP -> .)
    constraint      reduce using rule 220 (GROUP -> .)
    unique          reduce using rule 220 (GROUP -> .)
    check           reduce using rule 220 (GROUP -> .)
    default         reduce using rule 220 (GROUP -> .)
    null            reduce using rule 220 (GROUP -> .)
    primary         reduce using rule 220 (GROUP -> .)
    references      reduce using rule 220 (GROUP -> .)
    asc             reduce using rule 220 (GROUP -> .)
    desc            reduce using rule 220 (GROUP -> .)

  ! group           [ reduce using rule 220 (GROUP -> .) ]

    GROUP                          shift and go to state 206

state 128

    (234) LEXP -> LEXP coma . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 208
    SELECT                         shift and go to state 74

state 129

    (283) EXP -> EXP mas . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 209
    SELECT                         shift and go to state 74

state 130

    (284) EXP -> EXP menos . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 210
    SELECT                         shift and go to state 74

state 131

    (285) EXP -> EXP multiplicacion . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 211
    SELECT                         shift and go to state 74

state 132

    (286) EXP -> EXP division . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 212
    SELECT                         shift and go to state 74

state 133

    (287) EXP -> EXP modulo . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 213
    SELECT                         shift and go to state 74

state 134

    (288) EXP -> EXP elevado . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 214
    SELECT                         shift and go to state 74

state 135

    (289) EXP -> EXP and . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 215
    SELECT                         shift and go to state 74

state 136

    (290) EXP -> EXP or . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 216
    SELECT                         shift and go to state 74

state 137

    (291) EXP -> EXP mayor . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 217
    SELECT                         shift and go to state 74

state 138

    (292) EXP -> EXP menor . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 218
    SELECT                         shift and go to state 74

state 139

    (293) EXP -> EXP mayor_igual . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 219
    SELECT                         shift and go to state 74

state 140

    (294) EXP -> EXP menor_igual . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 220
    SELECT                         shift and go to state 74

state 141

    (295) EXP -> EXP igual . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 221
    SELECT                         shift and go to state 74

state 142

    (296) EXP -> EXP diferente1 . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 222
    SELECT                         shift and go to state 74

state 143

    (297) EXP -> EXP diferente2 . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 223
    SELECT                         shift and go to state 74

state 144

    (298) EXP -> EXP between . EXP
    (321) EXP -> EXP between . symetric EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    symetric        shift and go to state 225
    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 224
    SELECT                         shift and go to state 74

state 145

    (299) EXP -> EXP is . not null
    (300) EXP -> EXP is . null
    (303) EXP -> EXP is . true
    (304) EXP -> EXP is . not true
    (305) EXP -> EXP is . false
    (306) EXP -> EXP is . not false
    (307) EXP -> EXP is . unknown
    (308) EXP -> EXP is . not unknown
    (323) EXP -> EXP is . distinct r_from EXP
    (324) EXP -> EXP is . not distinct r_from EXP

    not             shift and go to state 226
    null            shift and go to state 227
    true            shift and go to state 228
    false           shift and go to state 229
    unknown         shift and go to state 230
    distinct        shift and go to state 231


state 146

    (319) EXP -> EXP not . in para EXP parc
    (320) EXP -> EXP not . between EXP
    (322) EXP -> EXP not . between symetric EXP
    (326) EXP -> EXP not . like cadena

    in              shift and go to state 232
    between         shift and go to state 233
    like            shift and go to state 234


state 147

    (301) EXP -> EXP isnull .

    r_from          reduce using rule 301 (EXP -> EXP isnull .)
    coma            reduce using rule 301 (EXP -> EXP isnull .)
    where           reduce using rule 301 (EXP -> EXP isnull .)
    group           reduce using rule 301 (EXP -> EXP isnull .)
    having          reduce using rule 301 (EXP -> EXP isnull .)
    union           reduce using rule 301 (EXP -> EXP isnull .)
    intersect       reduce using rule 301 (EXP -> EXP isnull .)
    except          reduce using rule 301 (EXP -> EXP isnull .)
    order           reduce using rule 301 (EXP -> EXP isnull .)
    limit           reduce using rule 301 (EXP -> EXP isnull .)
    offset          reduce using rule 301 (EXP -> EXP isnull .)
    ptcoma          reduce using rule 301 (EXP -> EXP isnull .)
    mas             reduce using rule 301 (EXP -> EXP isnull .)
    menos           reduce using rule 301 (EXP -> EXP isnull .)
    multiplicacion  reduce using rule 301 (EXP -> EXP isnull .)
    division        reduce using rule 301 (EXP -> EXP isnull .)
    modulo          reduce using rule 301 (EXP -> EXP isnull .)
    elevado         reduce using rule 301 (EXP -> EXP isnull .)
    and             reduce using rule 301 (EXP -> EXP isnull .)
    or              reduce using rule 301 (EXP -> EXP isnull .)
    mayor           reduce using rule 301 (EXP -> EXP isnull .)
    menor           reduce using rule 301 (EXP -> EXP isnull .)
    mayor_igual     reduce using rule 301 (EXP -> EXP isnull .)
    menor_igual     reduce using rule 301 (EXP -> EXP isnull .)
    igual           reduce using rule 301 (EXP -> EXP isnull .)
    diferente1      reduce using rule 301 (EXP -> EXP isnull .)
    diferente2      reduce using rule 301 (EXP -> EXP isnull .)
    between         reduce using rule 301 (EXP -> EXP isnull .)
    is              reduce using rule 301 (EXP -> EXP isnull .)
    isnull          reduce using rule 301 (EXP -> EXP isnull .)
    notnull         reduce using rule 301 (EXP -> EXP isnull .)
    as              reduce using rule 301 (EXP -> EXP isnull .)
    cadenaString    reduce using rule 301 (EXP -> EXP isnull .)
    cadena          reduce using rule 301 (EXP -> EXP isnull .)
    id              reduce using rule 301 (EXP -> EXP isnull .)
    in              reduce using rule 301 (EXP -> EXP isnull .)
    not             reduce using rule 301 (EXP -> EXP isnull .)
    like            reduce using rule 301 (EXP -> EXP isnull .)
    then            reduce using rule 301 (EXP -> EXP isnull .)
    when            reduce using rule 301 (EXP -> EXP isnull .)
    parc            reduce using rule 301 (EXP -> EXP isnull .)
    constraint      reduce using rule 301 (EXP -> EXP isnull .)
    unique          reduce using rule 301 (EXP -> EXP isnull .)
    check           reduce using rule 301 (EXP -> EXP isnull .)
    default         reduce using rule 301 (EXP -> EXP isnull .)
    null            reduce using rule 301 (EXP -> EXP isnull .)
    primary         reduce using rule 301 (EXP -> EXP isnull .)
    references      reduce using rule 301 (EXP -> EXP isnull .)
    asc             reduce using rule 301 (EXP -> EXP isnull .)
    desc            reduce using rule 301 (EXP -> EXP isnull .)


state 148

    (302) EXP -> EXP notnull .

    r_from          reduce using rule 302 (EXP -> EXP notnull .)
    coma            reduce using rule 302 (EXP -> EXP notnull .)
    where           reduce using rule 302 (EXP -> EXP notnull .)
    group           reduce using rule 302 (EXP -> EXP notnull .)
    having          reduce using rule 302 (EXP -> EXP notnull .)
    union           reduce using rule 302 (EXP -> EXP notnull .)
    intersect       reduce using rule 302 (EXP -> EXP notnull .)
    except          reduce using rule 302 (EXP -> EXP notnull .)
    order           reduce using rule 302 (EXP -> EXP notnull .)
    limit           reduce using rule 302 (EXP -> EXP notnull .)
    offset          reduce using rule 302 (EXP -> EXP notnull .)
    ptcoma          reduce using rule 302 (EXP -> EXP notnull .)
    mas             reduce using rule 302 (EXP -> EXP notnull .)
    menos           reduce using rule 302 (EXP -> EXP notnull .)
    multiplicacion  reduce using rule 302 (EXP -> EXP notnull .)
    division        reduce using rule 302 (EXP -> EXP notnull .)
    modulo          reduce using rule 302 (EXP -> EXP notnull .)
    elevado         reduce using rule 302 (EXP -> EXP notnull .)
    and             reduce using rule 302 (EXP -> EXP notnull .)
    or              reduce using rule 302 (EXP -> EXP notnull .)
    mayor           reduce using rule 302 (EXP -> EXP notnull .)
    menor           reduce using rule 302 (EXP -> EXP notnull .)
    mayor_igual     reduce using rule 302 (EXP -> EXP notnull .)
    menor_igual     reduce using rule 302 (EXP -> EXP notnull .)
    igual           reduce using rule 302 (EXP -> EXP notnull .)
    diferente1      reduce using rule 302 (EXP -> EXP notnull .)
    diferente2      reduce using rule 302 (EXP -> EXP notnull .)
    between         reduce using rule 302 (EXP -> EXP notnull .)
    is              reduce using rule 302 (EXP -> EXP notnull .)
    isnull          reduce using rule 302 (EXP -> EXP notnull .)
    notnull         reduce using rule 302 (EXP -> EXP notnull .)
    as              reduce using rule 302 (EXP -> EXP notnull .)
    cadenaString    reduce using rule 302 (EXP -> EXP notnull .)
    cadena          reduce using rule 302 (EXP -> EXP notnull .)
    id              reduce using rule 302 (EXP -> EXP notnull .)
    in              reduce using rule 302 (EXP -> EXP notnull .)
    not             reduce using rule 302 (EXP -> EXP notnull .)
    like            reduce using rule 302 (EXP -> EXP notnull .)
    then            reduce using rule 302 (EXP -> EXP notnull .)
    when            reduce using rule 302 (EXP -> EXP notnull .)
    parc            reduce using rule 302 (EXP -> EXP notnull .)
    constraint      reduce using rule 302 (EXP -> EXP notnull .)
    unique          reduce using rule 302 (EXP -> EXP notnull .)
    check           reduce using rule 302 (EXP -> EXP notnull .)
    default         reduce using rule 302 (EXP -> EXP notnull .)
    null            reduce using rule 302 (EXP -> EXP notnull .)
    primary         reduce using rule 302 (EXP -> EXP notnull .)
    references      reduce using rule 302 (EXP -> EXP notnull .)
    asc             reduce using rule 302 (EXP -> EXP notnull .)
    desc            reduce using rule 302 (EXP -> EXP notnull .)


state 149

    (309) EXP -> EXP as . cadenaString
    (311) EXP -> EXP as . cadena
    (313) EXP -> EXP as . id

    cadenaString    shift and go to state 235
    cadena          shift and go to state 236
    id              shift and go to state 237


state 150

    (310) EXP -> EXP cadenaString .

    r_from          reduce using rule 310 (EXP -> EXP cadenaString .)
    coma            reduce using rule 310 (EXP -> EXP cadenaString .)
    where           reduce using rule 310 (EXP -> EXP cadenaString .)
    group           reduce using rule 310 (EXP -> EXP cadenaString .)
    having          reduce using rule 310 (EXP -> EXP cadenaString .)
    union           reduce using rule 310 (EXP -> EXP cadenaString .)
    intersect       reduce using rule 310 (EXP -> EXP cadenaString .)
    except          reduce using rule 310 (EXP -> EXP cadenaString .)
    order           reduce using rule 310 (EXP -> EXP cadenaString .)
    limit           reduce using rule 310 (EXP -> EXP cadenaString .)
    offset          reduce using rule 310 (EXP -> EXP cadenaString .)
    ptcoma          reduce using rule 310 (EXP -> EXP cadenaString .)
    mas             reduce using rule 310 (EXP -> EXP cadenaString .)
    menos           reduce using rule 310 (EXP -> EXP cadenaString .)
    multiplicacion  reduce using rule 310 (EXP -> EXP cadenaString .)
    division        reduce using rule 310 (EXP -> EXP cadenaString .)
    modulo          reduce using rule 310 (EXP -> EXP cadenaString .)
    elevado         reduce using rule 310 (EXP -> EXP cadenaString .)
    and             reduce using rule 310 (EXP -> EXP cadenaString .)
    or              reduce using rule 310 (EXP -> EXP cadenaString .)
    mayor           reduce using rule 310 (EXP -> EXP cadenaString .)
    menor           reduce using rule 310 (EXP -> EXP cadenaString .)
    mayor_igual     reduce using rule 310 (EXP -> EXP cadenaString .)
    menor_igual     reduce using rule 310 (EXP -> EXP cadenaString .)
    igual           reduce using rule 310 (EXP -> EXP cadenaString .)
    diferente1      reduce using rule 310 (EXP -> EXP cadenaString .)
    diferente2      reduce using rule 310 (EXP -> EXP cadenaString .)
    between         reduce using rule 310 (EXP -> EXP cadenaString .)
    is              reduce using rule 310 (EXP -> EXP cadenaString .)
    isnull          reduce using rule 310 (EXP -> EXP cadenaString .)
    notnull         reduce using rule 310 (EXP -> EXP cadenaString .)
    as              reduce using rule 310 (EXP -> EXP cadenaString .)
    cadenaString    reduce using rule 310 (EXP -> EXP cadenaString .)
    cadena          reduce using rule 310 (EXP -> EXP cadenaString .)
    id              reduce using rule 310 (EXP -> EXP cadenaString .)
    in              reduce using rule 310 (EXP -> EXP cadenaString .)
    not             reduce using rule 310 (EXP -> EXP cadenaString .)
    like            reduce using rule 310 (EXP -> EXP cadenaString .)
    then            reduce using rule 310 (EXP -> EXP cadenaString .)
    when            reduce using rule 310 (EXP -> EXP cadenaString .)
    parc            reduce using rule 310 (EXP -> EXP cadenaString .)
    constraint      reduce using rule 310 (EXP -> EXP cadenaString .)
    unique          reduce using rule 310 (EXP -> EXP cadenaString .)
    check           reduce using rule 310 (EXP -> EXP cadenaString .)
    default         reduce using rule 310 (EXP -> EXP cadenaString .)
    null            reduce using rule 310 (EXP -> EXP cadenaString .)
    primary         reduce using rule 310 (EXP -> EXP cadenaString .)
    references      reduce using rule 310 (EXP -> EXP cadenaString .)
    asc             reduce using rule 310 (EXP -> EXP cadenaString .)
    desc            reduce using rule 310 (EXP -> EXP cadenaString .)


state 151

    (312) EXP -> EXP cadena .

    r_from          reduce using rule 312 (EXP -> EXP cadena .)
    coma            reduce using rule 312 (EXP -> EXP cadena .)
    where           reduce using rule 312 (EXP -> EXP cadena .)
    group           reduce using rule 312 (EXP -> EXP cadena .)
    having          reduce using rule 312 (EXP -> EXP cadena .)
    union           reduce using rule 312 (EXP -> EXP cadena .)
    intersect       reduce using rule 312 (EXP -> EXP cadena .)
    except          reduce using rule 312 (EXP -> EXP cadena .)
    order           reduce using rule 312 (EXP -> EXP cadena .)
    limit           reduce using rule 312 (EXP -> EXP cadena .)
    offset          reduce using rule 312 (EXP -> EXP cadena .)
    ptcoma          reduce using rule 312 (EXP -> EXP cadena .)
    mas             reduce using rule 312 (EXP -> EXP cadena .)
    menos           reduce using rule 312 (EXP -> EXP cadena .)
    multiplicacion  reduce using rule 312 (EXP -> EXP cadena .)
    division        reduce using rule 312 (EXP -> EXP cadena .)
    modulo          reduce using rule 312 (EXP -> EXP cadena .)
    elevado         reduce using rule 312 (EXP -> EXP cadena .)
    and             reduce using rule 312 (EXP -> EXP cadena .)
    or              reduce using rule 312 (EXP -> EXP cadena .)
    mayor           reduce using rule 312 (EXP -> EXP cadena .)
    menor           reduce using rule 312 (EXP -> EXP cadena .)
    mayor_igual     reduce using rule 312 (EXP -> EXP cadena .)
    menor_igual     reduce using rule 312 (EXP -> EXP cadena .)
    igual           reduce using rule 312 (EXP -> EXP cadena .)
    diferente1      reduce using rule 312 (EXP -> EXP cadena .)
    diferente2      reduce using rule 312 (EXP -> EXP cadena .)
    between         reduce using rule 312 (EXP -> EXP cadena .)
    is              reduce using rule 312 (EXP -> EXP cadena .)
    isnull          reduce using rule 312 (EXP -> EXP cadena .)
    notnull         reduce using rule 312 (EXP -> EXP cadena .)
    as              reduce using rule 312 (EXP -> EXP cadena .)
    cadenaString    reduce using rule 312 (EXP -> EXP cadena .)
    cadena          reduce using rule 312 (EXP -> EXP cadena .)
    id              reduce using rule 312 (EXP -> EXP cadena .)
    in              reduce using rule 312 (EXP -> EXP cadena .)
    not             reduce using rule 312 (EXP -> EXP cadena .)
    like            reduce using rule 312 (EXP -> EXP cadena .)
    then            reduce using rule 312 (EXP -> EXP cadena .)
    when            reduce using rule 312 (EXP -> EXP cadena .)
    parc            reduce using rule 312 (EXP -> EXP cadena .)
    constraint      reduce using rule 312 (EXP -> EXP cadena .)
    unique          reduce using rule 312 (EXP -> EXP cadena .)
    check           reduce using rule 312 (EXP -> EXP cadena .)
    default         reduce using rule 312 (EXP -> EXP cadena .)
    null            reduce using rule 312 (EXP -> EXP cadena .)
    primary         reduce using rule 312 (EXP -> EXP cadena .)
    references      reduce using rule 312 (EXP -> EXP cadena .)
    asc             reduce using rule 312 (EXP -> EXP cadena .)
    desc            reduce using rule 312 (EXP -> EXP cadena .)


state 152

    (314) EXP -> EXP id .

    r_from          reduce using rule 314 (EXP -> EXP id .)
    coma            reduce using rule 314 (EXP -> EXP id .)
    where           reduce using rule 314 (EXP -> EXP id .)
    group           reduce using rule 314 (EXP -> EXP id .)
    having          reduce using rule 314 (EXP -> EXP id .)
    union           reduce using rule 314 (EXP -> EXP id .)
    intersect       reduce using rule 314 (EXP -> EXP id .)
    except          reduce using rule 314 (EXP -> EXP id .)
    order           reduce using rule 314 (EXP -> EXP id .)
    limit           reduce using rule 314 (EXP -> EXP id .)
    offset          reduce using rule 314 (EXP -> EXP id .)
    ptcoma          reduce using rule 314 (EXP -> EXP id .)
    mas             reduce using rule 314 (EXP -> EXP id .)
    menos           reduce using rule 314 (EXP -> EXP id .)
    multiplicacion  reduce using rule 314 (EXP -> EXP id .)
    division        reduce using rule 314 (EXP -> EXP id .)
    modulo          reduce using rule 314 (EXP -> EXP id .)
    elevado         reduce using rule 314 (EXP -> EXP id .)
    and             reduce using rule 314 (EXP -> EXP id .)
    or              reduce using rule 314 (EXP -> EXP id .)
    mayor           reduce using rule 314 (EXP -> EXP id .)
    menor           reduce using rule 314 (EXP -> EXP id .)
    mayor_igual     reduce using rule 314 (EXP -> EXP id .)
    menor_igual     reduce using rule 314 (EXP -> EXP id .)
    igual           reduce using rule 314 (EXP -> EXP id .)
    diferente1      reduce using rule 314 (EXP -> EXP id .)
    diferente2      reduce using rule 314 (EXP -> EXP id .)
    between         reduce using rule 314 (EXP -> EXP id .)
    is              reduce using rule 314 (EXP -> EXP id .)
    isnull          reduce using rule 314 (EXP -> EXP id .)
    notnull         reduce using rule 314 (EXP -> EXP id .)
    as              reduce using rule 314 (EXP -> EXP id .)
    cadenaString    reduce using rule 314 (EXP -> EXP id .)
    cadena          reduce using rule 314 (EXP -> EXP id .)
    id              reduce using rule 314 (EXP -> EXP id .)
    in              reduce using rule 314 (EXP -> EXP id .)
    not             reduce using rule 314 (EXP -> EXP id .)
    like            reduce using rule 314 (EXP -> EXP id .)
    then            reduce using rule 314 (EXP -> EXP id .)
    when            reduce using rule 314 (EXP -> EXP id .)
    parc            reduce using rule 314 (EXP -> EXP id .)
    constraint      reduce using rule 314 (EXP -> EXP id .)
    unique          reduce using rule 314 (EXP -> EXP id .)
    check           reduce using rule 314 (EXP -> EXP id .)
    default         reduce using rule 314 (EXP -> EXP id .)
    null            reduce using rule 314 (EXP -> EXP id .)
    primary         reduce using rule 314 (EXP -> EXP id .)
    references      reduce using rule 314 (EXP -> EXP id .)
    asc             reduce using rule 314 (EXP -> EXP id .)
    desc            reduce using rule 314 (EXP -> EXP id .)


state 153

    (318) EXP -> EXP in . para EXP parc

    para            shift and go to state 238


state 154

    (325) EXP -> EXP like . cadena

    cadena          shift and go to state 239


state 155

    (315) EXP -> mas EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    r_from          reduce using rule 315 (EXP -> mas EXP .)
    coma            reduce using rule 315 (EXP -> mas EXP .)
    where           reduce using rule 315 (EXP -> mas EXP .)
    group           reduce using rule 315 (EXP -> mas EXP .)
    having          reduce using rule 315 (EXP -> mas EXP .)
    union           reduce using rule 315 (EXP -> mas EXP .)
    intersect       reduce using rule 315 (EXP -> mas EXP .)
    except          reduce using rule 315 (EXP -> mas EXP .)
    order           reduce using rule 315 (EXP -> mas EXP .)
    limit           reduce using rule 315 (EXP -> mas EXP .)
    offset          reduce using rule 315 (EXP -> mas EXP .)
    ptcoma          reduce using rule 315 (EXP -> mas EXP .)
    mas             reduce using rule 315 (EXP -> mas EXP .)
    menos           reduce using rule 315 (EXP -> mas EXP .)
    multiplicacion  reduce using rule 315 (EXP -> mas EXP .)
    division        reduce using rule 315 (EXP -> mas EXP .)
    modulo          reduce using rule 315 (EXP -> mas EXP .)
    elevado         reduce using rule 315 (EXP -> mas EXP .)
    and             reduce using rule 315 (EXP -> mas EXP .)
    or              reduce using rule 315 (EXP -> mas EXP .)
    mayor           reduce using rule 315 (EXP -> mas EXP .)
    menor           reduce using rule 315 (EXP -> mas EXP .)
    mayor_igual     reduce using rule 315 (EXP -> mas EXP .)
    menor_igual     reduce using rule 315 (EXP -> mas EXP .)
    igual           reduce using rule 315 (EXP -> mas EXP .)
    diferente1      reduce using rule 315 (EXP -> mas EXP .)
    diferente2      reduce using rule 315 (EXP -> mas EXP .)
    between         reduce using rule 315 (EXP -> mas EXP .)
    is              reduce using rule 315 (EXP -> mas EXP .)
    isnull          reduce using rule 315 (EXP -> mas EXP .)
    notnull         reduce using rule 315 (EXP -> mas EXP .)
    as              reduce using rule 315 (EXP -> mas EXP .)
    cadenaString    reduce using rule 315 (EXP -> mas EXP .)
    cadena          reduce using rule 315 (EXP -> mas EXP .)
    id              reduce using rule 315 (EXP -> mas EXP .)
    in              reduce using rule 315 (EXP -> mas EXP .)
    not             reduce using rule 315 (EXP -> mas EXP .)
    like            reduce using rule 315 (EXP -> mas EXP .)
    then            reduce using rule 315 (EXP -> mas EXP .)
    when            reduce using rule 315 (EXP -> mas EXP .)
    parc            reduce using rule 315 (EXP -> mas EXP .)
    constraint      reduce using rule 315 (EXP -> mas EXP .)
    unique          reduce using rule 315 (EXP -> mas EXP .)
    check           reduce using rule 315 (EXP -> mas EXP .)
    default         reduce using rule 315 (EXP -> mas EXP .)
    null            reduce using rule 315 (EXP -> mas EXP .)
    primary         reduce using rule 315 (EXP -> mas EXP .)
    references      reduce using rule 315 (EXP -> mas EXP .)
    asc             reduce using rule 315 (EXP -> mas EXP .)
    desc            reduce using rule 315 (EXP -> mas EXP .)

  ! mas             [ shift and go to state 129 ]
  ! menos           [ shift and go to state 130 ]
  ! multiplicacion  [ shift and go to state 131 ]
  ! division        [ shift and go to state 132 ]
  ! modulo          [ shift and go to state 133 ]
  ! elevado         [ shift and go to state 134 ]
  ! and             [ shift and go to state 135 ]
  ! or              [ shift and go to state 136 ]
  ! mayor           [ shift and go to state 137 ]
  ! menor           [ shift and go to state 138 ]
  ! mayor_igual     [ shift and go to state 139 ]
  ! menor_igual     [ shift and go to state 140 ]
  ! igual           [ shift and go to state 141 ]
  ! diferente1      [ shift and go to state 142 ]
  ! diferente2      [ shift and go to state 143 ]
  ! between         [ shift and go to state 144 ]
  ! is              [ shift and go to state 145 ]
  ! isnull          [ shift and go to state 147 ]
  ! notnull         [ shift and go to state 148 ]
  ! as              [ shift and go to state 149 ]
  ! cadenaString    [ shift and go to state 150 ]
  ! cadena          [ shift and go to state 151 ]
  ! id              [ shift and go to state 152 ]
  ! in              [ shift and go to state 153 ]
  ! not             [ shift and go to state 146 ]
  ! like            [ shift and go to state 154 ]


state 156

    (316) EXP -> menos EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    r_from          reduce using rule 316 (EXP -> menos EXP .)
    coma            reduce using rule 316 (EXP -> menos EXP .)
    where           reduce using rule 316 (EXP -> menos EXP .)
    group           reduce using rule 316 (EXP -> menos EXP .)
    having          reduce using rule 316 (EXP -> menos EXP .)
    union           reduce using rule 316 (EXP -> menos EXP .)
    intersect       reduce using rule 316 (EXP -> menos EXP .)
    except          reduce using rule 316 (EXP -> menos EXP .)
    order           reduce using rule 316 (EXP -> menos EXP .)
    limit           reduce using rule 316 (EXP -> menos EXP .)
    offset          reduce using rule 316 (EXP -> menos EXP .)
    ptcoma          reduce using rule 316 (EXP -> menos EXP .)
    mas             reduce using rule 316 (EXP -> menos EXP .)
    menos           reduce using rule 316 (EXP -> menos EXP .)
    multiplicacion  reduce using rule 316 (EXP -> menos EXP .)
    division        reduce using rule 316 (EXP -> menos EXP .)
    modulo          reduce using rule 316 (EXP -> menos EXP .)
    elevado         reduce using rule 316 (EXP -> menos EXP .)
    and             reduce using rule 316 (EXP -> menos EXP .)
    or              reduce using rule 316 (EXP -> menos EXP .)
    mayor           reduce using rule 316 (EXP -> menos EXP .)
    menor           reduce using rule 316 (EXP -> menos EXP .)
    mayor_igual     reduce using rule 316 (EXP -> menos EXP .)
    menor_igual     reduce using rule 316 (EXP -> menos EXP .)
    igual           reduce using rule 316 (EXP -> menos EXP .)
    diferente1      reduce using rule 316 (EXP -> menos EXP .)
    diferente2      reduce using rule 316 (EXP -> menos EXP .)
    between         reduce using rule 316 (EXP -> menos EXP .)
    is              reduce using rule 316 (EXP -> menos EXP .)
    isnull          reduce using rule 316 (EXP -> menos EXP .)
    notnull         reduce using rule 316 (EXP -> menos EXP .)
    as              reduce using rule 316 (EXP -> menos EXP .)
    cadenaString    reduce using rule 316 (EXP -> menos EXP .)
    cadena          reduce using rule 316 (EXP -> menos EXP .)
    id              reduce using rule 316 (EXP -> menos EXP .)
    in              reduce using rule 316 (EXP -> menos EXP .)
    not             reduce using rule 316 (EXP -> menos EXP .)
    like            reduce using rule 316 (EXP -> menos EXP .)
    then            reduce using rule 316 (EXP -> menos EXP .)
    when            reduce using rule 316 (EXP -> menos EXP .)
    parc            reduce using rule 316 (EXP -> menos EXP .)
    constraint      reduce using rule 316 (EXP -> menos EXP .)
    unique          reduce using rule 316 (EXP -> menos EXP .)
    check           reduce using rule 316 (EXP -> menos EXP .)
    default         reduce using rule 316 (EXP -> menos EXP .)
    null            reduce using rule 316 (EXP -> menos EXP .)
    primary         reduce using rule 316 (EXP -> menos EXP .)
    references      reduce using rule 316 (EXP -> menos EXP .)
    asc             reduce using rule 316 (EXP -> menos EXP .)
    desc            reduce using rule 316 (EXP -> menos EXP .)

  ! mas             [ shift and go to state 129 ]
  ! menos           [ shift and go to state 130 ]
  ! multiplicacion  [ shift and go to state 131 ]
  ! division        [ shift and go to state 132 ]
  ! modulo          [ shift and go to state 133 ]
  ! elevado         [ shift and go to state 134 ]
  ! and             [ shift and go to state 135 ]
  ! or              [ shift and go to state 136 ]
  ! mayor           [ shift and go to state 137 ]
  ! menor           [ shift and go to state 138 ]
  ! mayor_igual     [ shift and go to state 139 ]
  ! menor_igual     [ shift and go to state 140 ]
  ! igual           [ shift and go to state 141 ]
  ! diferente1      [ shift and go to state 142 ]
  ! diferente2      [ shift and go to state 143 ]
  ! between         [ shift and go to state 144 ]
  ! is              [ shift and go to state 145 ]
  ! isnull          [ shift and go to state 147 ]
  ! notnull         [ shift and go to state 148 ]
  ! as              [ shift and go to state 149 ]
  ! cadenaString    [ shift and go to state 150 ]
  ! cadena          [ shift and go to state 151 ]
  ! id              [ shift and go to state 152 ]
  ! in              [ shift and go to state 153 ]
  ! not             [ shift and go to state 146 ]
  ! like            [ shift and go to state 154 ]


state 157

    (317) EXP -> not EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    r_from          reduce using rule 317 (EXP -> not EXP .)
    coma            reduce using rule 317 (EXP -> not EXP .)
    where           reduce using rule 317 (EXP -> not EXP .)
    group           reduce using rule 317 (EXP -> not EXP .)
    having          reduce using rule 317 (EXP -> not EXP .)
    union           reduce using rule 317 (EXP -> not EXP .)
    intersect       reduce using rule 317 (EXP -> not EXP .)
    except          reduce using rule 317 (EXP -> not EXP .)
    order           reduce using rule 317 (EXP -> not EXP .)
    limit           reduce using rule 317 (EXP -> not EXP .)
    offset          reduce using rule 317 (EXP -> not EXP .)
    ptcoma          reduce using rule 317 (EXP -> not EXP .)
    and             reduce using rule 317 (EXP -> not EXP .)
    or              reduce using rule 317 (EXP -> not EXP .)
    between         reduce using rule 317 (EXP -> not EXP .)
    is              reduce using rule 317 (EXP -> not EXP .)
    isnull          reduce using rule 317 (EXP -> not EXP .)
    notnull         reduce using rule 317 (EXP -> not EXP .)
    as              reduce using rule 317 (EXP -> not EXP .)
    cadenaString    reduce using rule 317 (EXP -> not EXP .)
    cadena          reduce using rule 317 (EXP -> not EXP .)
    id              reduce using rule 317 (EXP -> not EXP .)
    in              reduce using rule 317 (EXP -> not EXP .)
    like            reduce using rule 317 (EXP -> not EXP .)
    then            reduce using rule 317 (EXP -> not EXP .)
    when            reduce using rule 317 (EXP -> not EXP .)
    parc            reduce using rule 317 (EXP -> not EXP .)
    constraint      reduce using rule 317 (EXP -> not EXP .)
    unique          reduce using rule 317 (EXP -> not EXP .)
    check           reduce using rule 317 (EXP -> not EXP .)
    default         reduce using rule 317 (EXP -> not EXP .)
    null            reduce using rule 317 (EXP -> not EXP .)
    primary         reduce using rule 317 (EXP -> not EXP .)
    references      reduce using rule 317 (EXP -> not EXP .)
    asc             reduce using rule 317 (EXP -> not EXP .)
    desc            reduce using rule 317 (EXP -> not EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143
    not             shift and go to state 146

  ! mas             [ reduce using rule 317 (EXP -> not EXP .) ]
  ! menos           [ reduce using rule 317 (EXP -> not EXP .) ]
  ! multiplicacion  [ reduce using rule 317 (EXP -> not EXP .) ]
  ! division        [ reduce using rule 317 (EXP -> not EXP .) ]
  ! modulo          [ reduce using rule 317 (EXP -> not EXP .) ]
  ! elevado         [ reduce using rule 317 (EXP -> not EXP .) ]
  ! mayor           [ reduce using rule 317 (EXP -> not EXP .) ]
  ! menor           [ reduce using rule 317 (EXP -> not EXP .) ]
  ! mayor_igual     [ reduce using rule 317 (EXP -> not EXP .) ]
  ! menor_igual     [ reduce using rule 317 (EXP -> not EXP .) ]
  ! igual           [ reduce using rule 317 (EXP -> not EXP .) ]
  ! diferente1      [ reduce using rule 317 (EXP -> not EXP .) ]
  ! diferente2      [ reduce using rule 317 (EXP -> not EXP .) ]
  ! not             [ reduce using rule 317 (EXP -> not EXP .) ]
  ! and             [ shift and go to state 135 ]
  ! or              [ shift and go to state 136 ]
  ! between         [ shift and go to state 144 ]
  ! is              [ shift and go to state 145 ]
  ! isnull          [ shift and go to state 147 ]
  ! notnull         [ shift and go to state 148 ]
  ! as              [ shift and go to state 149 ]
  ! cadenaString    [ shift and go to state 150 ]
  ! cadena          [ shift and go to state 151 ]
  ! id              [ shift and go to state 152 ]
  ! in              [ shift and go to state 153 ]
  ! like            [ shift and go to state 154 ]


state 158

    (348) EXP -> cadena as . TIPO
    (236) TIPO -> . interval cadena
    (237) TIPO -> . decimal para int coma int parc
    (238) TIPO -> . decimal para int parc
    (239) TIPO -> . decimal
    (240) TIPO -> . numeric para int coma int parc
    (241) TIPO -> . numeric para int parc
    (242) TIPO -> . numeric
    (243) TIPO -> . varchar para int parc
    (244) TIPO -> . timestamp para int parc
    (245) TIPO -> . character para int parc
    (246) TIPO -> . interval para int parc
    (247) TIPO -> . char para int parc
    (248) TIPO -> . time para int parc
    (249) TIPO -> . character varying para int parc
    (250) TIPO -> . id modulo rowtype
    (251) TIPO -> . idPunto modulo type
    (252) TIPO -> . timestamp para int parc without time zone
    (253) TIPO -> . timestamp para int parc with time zone
    (254) TIPO -> . time para int parc without time zone
    (255) TIPO -> . time para int parc with time zone
    (256) TIPO -> . interval para int parc cadena
    (257) TIPO -> . smallint
    (258) TIPO -> . integer
    (259) TIPO -> . r_int
    (260) TIPO -> . bigint
    (261) TIPO -> . real
    (262) TIPO -> . double precision
    (263) TIPO -> . money
    (264) TIPO -> . text
    (265) TIPO -> . timestamp
    (266) TIPO -> . date
    (267) TIPO -> . time
    (268) TIPO -> . interval
    (269) TIPO -> . boolean
    (270) TIPO -> . record
    (271) TIPO -> . varchar
    (272) TIPO -> . timestamp without time zone
    (273) TIPO -> . timestamp with time zone
    (274) TIPO -> . time without time zone
    (275) TIPO -> . time with time zone
    (276) TIPO -> . id

    interval        shift and go to state 241
    decimal         shift and go to state 242
    numeric         shift and go to state 243
    varchar         shift and go to state 244
    timestamp       shift and go to state 245
    character       shift and go to state 246
    char            shift and go to state 247
    time            shift and go to state 248
    id              shift and go to state 249
    idPunto         shift and go to state 250
    smallint        shift and go to state 251
    integer         shift and go to state 252
    r_int           shift and go to state 253
    bigint          shift and go to state 254
    real            shift and go to state 255
    double          shift and go to state 256
    money           shift and go to state 257
    text            shift and go to state 258
    date            shift and go to state 259
    boolean         shift and go to state 260
    record          shift and go to state 261

    TIPO                           shift and go to state 240

state 159

    (329) EXP -> id para . LEXP parc
    (330) EXP -> id para . parc
    (234) LEXP -> . LEXP coma EXP
    (235) LEXP -> . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    parc            shift and go to state 263
    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    LEXP                           shift and go to state 262
    EXP                            shift and go to state 62
    SELECT                         shift and go to state 74

state 160

    (328) EXP -> para EXP . parc
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    parc            shift and go to state 264
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    and             shift and go to state 135
    or              shift and go to state 136
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143
    between         shift and go to state 144
    is              shift and go to state 145
    isnull          shift and go to state 147
    notnull         shift and go to state 148
    as              shift and go to state 149
    cadenaString    shift and go to state 150
    cadena          shift and go to state 151
    id              shift and go to state 152
    in              shift and go to state 153
    not             shift and go to state 146
    like            shift and go to state 154


state 161

    (331) EXP -> any para . LEXP parc
    (234) LEXP -> . LEXP coma EXP
    (235) LEXP -> . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    LEXP                           shift and go to state 265
    EXP                            shift and go to state 62
    SELECT                         shift and go to state 74

state 162

    (332) EXP -> all para . LEXP parc
    (234) LEXP -> . LEXP coma EXP
    (235) LEXP -> . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    LEXP                           shift and go to state 266
    EXP                            shift and go to state 62
    SELECT                         shift and go to state 74

state 163

    (333) EXP -> some para . LEXP parc
    (234) LEXP -> . LEXP coma EXP
    (235) LEXP -> . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    LEXP                           shift and go to state 267
    EXP                            shift and go to state 62
    SELECT                         shift and go to state 74

state 164

    (334) EXP -> extract para . FIELDS r_from timestamp cadena parc
    (277) FIELDS -> . year
    (278) FIELDS -> . month
    (279) FIELDS -> . day
    (280) FIELDS -> . hour
    (281) FIELDS -> . minute
    (282) FIELDS -> . second

    year            shift and go to state 269
    month           shift and go to state 270
    day             shift and go to state 271
    hour            shift and go to state 272
    minute          shift and go to state 273
    second          shift and go to state 274

    FIELDS                         shift and go to state 268

state 165

    (346) EXP -> timestamp cadena .

    r_from          reduce using rule 346 (EXP -> timestamp cadena .)
    coma            reduce using rule 346 (EXP -> timestamp cadena .)
    where           reduce using rule 346 (EXP -> timestamp cadena .)
    group           reduce using rule 346 (EXP -> timestamp cadena .)
    having          reduce using rule 346 (EXP -> timestamp cadena .)
    union           reduce using rule 346 (EXP -> timestamp cadena .)
    intersect       reduce using rule 346 (EXP -> timestamp cadena .)
    except          reduce using rule 346 (EXP -> timestamp cadena .)
    order           reduce using rule 346 (EXP -> timestamp cadena .)
    limit           reduce using rule 346 (EXP -> timestamp cadena .)
    offset          reduce using rule 346 (EXP -> timestamp cadena .)
    ptcoma          reduce using rule 346 (EXP -> timestamp cadena .)
    mas             reduce using rule 346 (EXP -> timestamp cadena .)
    menos           reduce using rule 346 (EXP -> timestamp cadena .)
    multiplicacion  reduce using rule 346 (EXP -> timestamp cadena .)
    division        reduce using rule 346 (EXP -> timestamp cadena .)
    modulo          reduce using rule 346 (EXP -> timestamp cadena .)
    elevado         reduce using rule 346 (EXP -> timestamp cadena .)
    and             reduce using rule 346 (EXP -> timestamp cadena .)
    or              reduce using rule 346 (EXP -> timestamp cadena .)
    mayor           reduce using rule 346 (EXP -> timestamp cadena .)
    menor           reduce using rule 346 (EXP -> timestamp cadena .)
    mayor_igual     reduce using rule 346 (EXP -> timestamp cadena .)
    menor_igual     reduce using rule 346 (EXP -> timestamp cadena .)
    igual           reduce using rule 346 (EXP -> timestamp cadena .)
    diferente1      reduce using rule 346 (EXP -> timestamp cadena .)
    diferente2      reduce using rule 346 (EXP -> timestamp cadena .)
    between         reduce using rule 346 (EXP -> timestamp cadena .)
    is              reduce using rule 346 (EXP -> timestamp cadena .)
    isnull          reduce using rule 346 (EXP -> timestamp cadena .)
    notnull         reduce using rule 346 (EXP -> timestamp cadena .)
    as              reduce using rule 346 (EXP -> timestamp cadena .)
    cadenaString    reduce using rule 346 (EXP -> timestamp cadena .)
    cadena          reduce using rule 346 (EXP -> timestamp cadena .)
    id              reduce using rule 346 (EXP -> timestamp cadena .)
    in              reduce using rule 346 (EXP -> timestamp cadena .)
    not             reduce using rule 346 (EXP -> timestamp cadena .)
    like            reduce using rule 346 (EXP -> timestamp cadena .)
    then            reduce using rule 346 (EXP -> timestamp cadena .)
    when            reduce using rule 346 (EXP -> timestamp cadena .)
    parc            reduce using rule 346 (EXP -> timestamp cadena .)
    constraint      reduce using rule 346 (EXP -> timestamp cadena .)
    unique          reduce using rule 346 (EXP -> timestamp cadena .)
    check           reduce using rule 346 (EXP -> timestamp cadena .)
    default         reduce using rule 346 (EXP -> timestamp cadena .)
    null            reduce using rule 346 (EXP -> timestamp cadena .)
    primary         reduce using rule 346 (EXP -> timestamp cadena .)
    references      reduce using rule 346 (EXP -> timestamp cadena .)
    asc             reduce using rule 346 (EXP -> timestamp cadena .)
    desc            reduce using rule 346 (EXP -> timestamp cadena .)


state 166

    (347) EXP -> interval cadena .

    r_from          reduce using rule 347 (EXP -> interval cadena .)
    coma            reduce using rule 347 (EXP -> interval cadena .)
    where           reduce using rule 347 (EXP -> interval cadena .)
    group           reduce using rule 347 (EXP -> interval cadena .)
    having          reduce using rule 347 (EXP -> interval cadena .)
    union           reduce using rule 347 (EXP -> interval cadena .)
    intersect       reduce using rule 347 (EXP -> interval cadena .)
    except          reduce using rule 347 (EXP -> interval cadena .)
    order           reduce using rule 347 (EXP -> interval cadena .)
    limit           reduce using rule 347 (EXP -> interval cadena .)
    offset          reduce using rule 347 (EXP -> interval cadena .)
    ptcoma          reduce using rule 347 (EXP -> interval cadena .)
    mas             reduce using rule 347 (EXP -> interval cadena .)
    menos           reduce using rule 347 (EXP -> interval cadena .)
    multiplicacion  reduce using rule 347 (EXP -> interval cadena .)
    division        reduce using rule 347 (EXP -> interval cadena .)
    modulo          reduce using rule 347 (EXP -> interval cadena .)
    elevado         reduce using rule 347 (EXP -> interval cadena .)
    and             reduce using rule 347 (EXP -> interval cadena .)
    or              reduce using rule 347 (EXP -> interval cadena .)
    mayor           reduce using rule 347 (EXP -> interval cadena .)
    menor           reduce using rule 347 (EXP -> interval cadena .)
    mayor_igual     reduce using rule 347 (EXP -> interval cadena .)
    menor_igual     reduce using rule 347 (EXP -> interval cadena .)
    igual           reduce using rule 347 (EXP -> interval cadena .)
    diferente1      reduce using rule 347 (EXP -> interval cadena .)
    diferente2      reduce using rule 347 (EXP -> interval cadena .)
    between         reduce using rule 347 (EXP -> interval cadena .)
    is              reduce using rule 347 (EXP -> interval cadena .)
    isnull          reduce using rule 347 (EXP -> interval cadena .)
    notnull         reduce using rule 347 (EXP -> interval cadena .)
    as              reduce using rule 347 (EXP -> interval cadena .)
    cadenaString    reduce using rule 347 (EXP -> interval cadena .)
    cadena          reduce using rule 347 (EXP -> interval cadena .)
    id              reduce using rule 347 (EXP -> interval cadena .)
    in              reduce using rule 347 (EXP -> interval cadena .)
    not             reduce using rule 347 (EXP -> interval cadena .)
    like            reduce using rule 347 (EXP -> interval cadena .)
    then            reduce using rule 347 (EXP -> interval cadena .)
    when            reduce using rule 347 (EXP -> interval cadena .)
    parc            reduce using rule 347 (EXP -> interval cadena .)
    constraint      reduce using rule 347 (EXP -> interval cadena .)
    unique          reduce using rule 347 (EXP -> interval cadena .)
    check           reduce using rule 347 (EXP -> interval cadena .)
    default         reduce using rule 347 (EXP -> interval cadena .)
    null            reduce using rule 347 (EXP -> interval cadena .)
    primary         reduce using rule 347 (EXP -> interval cadena .)
    references      reduce using rule 347 (EXP -> interval cadena .)
    asc             reduce using rule 347 (EXP -> interval cadena .)
    desc            reduce using rule 347 (EXP -> interval cadena .)


state 167

    (168) CREATETABLE -> create table id . para LDEF parc ptcoma
    (169) CREATETABLE -> create table id . para LDEF parc HERENCIA ptcoma

    para            shift and go to state 275


state 168

    (199) CREATETYPE -> create type id . as enum para LEXP parc

    as              shift and go to state 276


state 169

    (151) CREATEDB -> create RD if . not exist id
    (152) CREATEDB -> create RD if . not exist id OPCCDB

    not             shift and go to state 277


state 170

    (153) CREATEDB -> create RD id .
    (154) CREATEDB -> create RD id . OPCCDB
    (155) OPCCDB -> . PROPIETARIO
    (156) OPCCDB -> . MODO
    (157) OPCCDB -> . PROPIETARIO MODO
    (160) PROPIETARIO -> . owner igual id
    (161) PROPIETARIO -> . owner igual cadena
    (162) PROPIETARIO -> . owner igual cadenaString
    (163) PROPIETARIO -> . owner id
    (164) PROPIETARIO -> . owner cadena
    (165) PROPIETARIO -> . owner cadenaString
    (166) MODO -> . mode igual int
    (167) MODO -> . mode int

    ptcoma          reduce using rule 153 (CREATEDB -> create RD id .)
    owner           shift and go to state 281
    mode            shift and go to state 282

    OPCCDB                         shift and go to state 278
    PROPIETARIO                    shift and go to state 279
    MODO                           shift and go to state 280

state 171

    (52) CREATEINDEX -> create index id . on id para LEXP parc
    (54) CREATEINDEX -> create index id . on id using hash para LEXP parc
    (55) CREATEINDEX -> create index id . on id para id ORDEN parc
    (56) CREATEINDEX -> create index id . on id para id id ORDEN parc
    (57) CREATEINDEX -> create index id . on id para id id parc

    on              shift and go to state 283


state 172

    (53) CREATEINDEX -> create unique index . id on id para LEXP parc

    id              shift and go to state 284


state 173

    (37) PROCEDIMIENTOS -> create procedure id . para LPARAM parc LENGUAJE LCONTENIDOP
    (38) PROCEDIMIENTOS -> create procedure id . para parc LENGUAJE LCONTENIDOP
    (39) PROCEDIMIENTOS -> create procedure id . para LPARAM parc LCONTENIDOP LENGUAJE
    (40) PROCEDIMIENTOS -> create procedure id . para parc LCONTENIDOP LENGUAJE

    para            shift and go to state 285


state 174

    (27) FUNCIONES -> create function id . para LPARAM parc RETURNP LENGUAJE LCONTENIDOP
    (28) FUNCIONES -> create function id . para parc RETURNP LENGUAJE LCONTENIDOP
    (29) FUNCIONES -> create function id . para LPARAM parc RETURNP LCONTENIDOP LENGUAJE
    (30) FUNCIONES -> create function id . para parc RETURNP LCONTENIDOP LENGUAJE

    para            shift and go to state 286


state 175

    (158) RD -> or replace . databases

    databases       shift and go to state 287


state 176

    (228) UPDATE -> update id set . LCAMPOS WHERE
    (229) LCAMPOS -> . LCAMPOS coma id igual EXP
    (230) LCAMPOS -> . id igual EXP

    id              shift and go to state 288

    LCAMPOS                        shift and go to state 289

state 177

    (231) DELETE -> delete r_from id . WHERE
    (211) WHERE -> . where EXP
    (212) WHERE -> . where EXIST
    (213) WHERE -> .

    where           shift and go to state 54
    ptcoma          reduce using rule 213 (WHERE -> .)

    WHERE                          shift and go to state 290

state 178

    (125) ALTER -> alter databases id . rename to id
    (126) ALTER -> alter databases id . owner to id

    rename          shift and go to state 291
    owner           shift and go to state 292


state 179

    (127) ALTER -> alter table id . LOP
    (132) LOP -> . LOP coma OP
    (133) LOP -> . OP
    (134) OP -> . add column id TIPO
    (135) OP -> . add check para CONDCHECK parc
    (136) OP -> . add constraint id check para CONDCHECK parc
    (137) OP -> . add constraint id unique para LEXP parc
    (138) OP -> . add unique para LEXP parc
    (139) OP -> . add foreign key para LEXP parc references id para LEXP parc
    (140) OP -> . add constraint id foreign key para LEXP parc references id para LEXP parc
    (141) OP -> . alter column id set not null
    (142) OP -> . alter column id set null
    (143) OP -> . drop constraint id
    (144) OP -> . drop column LEXP
    (145) OP -> . drop check id
    (146) OP -> . rename column id to id
    (147) OP -> . alter column id type TIPO

    add             shift and go to state 296
    alter           shift and go to state 293
    drop            shift and go to state 297
    rename          shift and go to state 298

    LOP                            shift and go to state 294
    OP                             shift and go to state 295

state 180

    (128) ALTER -> alter index id . alter EXP
    (130) ALTER -> alter index id . alter column EXP

    alter           shift and go to state 299


state 181

    (129) ALTER -> alter index if . exist id alter EXP
    (131) ALTER -> alter index if . exist id alter column EXP

    exist           shift and go to state 300


state 182

    (78) CONDICIONIF -> if EXP then . LISTACONTENIDO ELSEF end if
    (79) CONDICIONIF -> if EXP then . LISTACONTENIDO LELIF end if
    (80) CONDICIONIF -> if EXP then . LISTACONTENIDO end if
    (81) CONDICIONIF -> if EXP then . LISTACONTENIDO LELIF ELSEF end if
    (89) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (90) LISTACONTENIDO -> . CONTENIDO
    (91) CONTENIDO -> . ASIGNACION ptcoma
    (92) CONTENIDO -> . CONDICIONIF ptcoma
    (93) CONTENIDO -> . RAISE ptcoma
    (94) CONTENIDO -> . BEGINEND ptcoma
    (95) CONTENIDO -> . CALLPROCEDURE ptcoma
    (96) CONTENIDO -> . declare LDEC
    (97) CONTENIDO -> . RETURN ptcoma
    (98) CONTENIDO -> . INSERT ptcoma
    (99) CONTENIDO -> . SELECT ptcoma
    (100) CONTENIDO -> . UPDATE ptcoma
    (101) CONTENIDO -> . DELETE ptcoma
    (102) CONTENIDO -> . CASE ptcoma
    (76) ASIGNACION -> . id dospuntos igual EXP
    (77) ASIGNACION -> . id igual EXP
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (80) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (81) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (103) RAISE -> . raise LEVEL FORMAT
    (104) RAISE -> . raise LEVEL EXP
    (105) RAISE -> . raise LEVEL
    (106) RAISE -> . raise
    (107) RAISE -> . raise LEVEL cadena coma id
    (51) BEGINEND -> . begin LISTACONTENIDO end
    (35) CALLPROCEDURE -> . execute id para LEXP parc
    (36) CALLPROCEDURE -> . execute id para parc
    (26) RETURN -> . return EXP
    (118) INSERT -> . insert into id values para LEXP parc
    (119) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (228) UPDATE -> . update id set LCAMPOS WHERE
    (231) DELETE -> . delete r_from id WHERE
    (85) CASE -> . case EXP LISTAWHEN ELSEF end case
    (86) CASE -> . case EXP LISTAWHEN end case
    (87) CASE -> . case LISTAWHEN ELSEF end case
    (88) CASE -> . case LISTAWHEN end case

    declare         shift and go to state 308
    id              shift and go to state 17
    if              shift and go to state 31
    raise           shift and go to state 315
    begin           shift and go to state 316
    execute         shift and go to state 36
    return          shift and go to state 317
    insert          shift and go to state 33
    select          shift and go to state 26
    update          shift and go to state 28
    delete          shift and go to state 29
    case            shift and go to state 34

    LISTACONTENIDO                 shift and go to state 301
    CONTENIDO                      shift and go to state 302
    ASIGNACION                     shift and go to state 303
    CONDICIONIF                    shift and go to state 304
    RAISE                          shift and go to state 305
    BEGINEND                       shift and go to state 306
    CALLPROCEDURE                  shift and go to state 307
    RETURN                         shift and go to state 309
    INSERT                         shift and go to state 310
    SELECT                         shift and go to state 311
    UPDATE                         shift and go to state 312
    DELETE                         shift and go to state 313
    CASE                           shift and go to state 314

state 183

    (120) DROP -> drop all para . parc

    parc            shift and go to state 318


state 184

    (121) DROP -> drop table id .

    ptcoma          reduce using rule 121 (DROP -> drop table id .)


state 185

    (122) DROP -> drop index id .

    ptcoma          reduce using rule 122 (DROP -> drop index id .)


state 186

    (123) DROP -> drop databases if . exist id

    exist           shift and go to state 319


state 187

    (124) DROP -> drop databases id .

    ptcoma          reduce using rule 124 (DROP -> drop databases id .)


state 188

    (31) DROPFUNC -> drop function id .

    ptcoma          reduce using rule 31 (DROPFUNC -> drop function id .)


state 189

    (32) DROPFUNC -> drop function if . exist id

    exist           shift and go to state 320


state 190

    (33) DROPPROCEDURE -> drop procedure id .

    ptcoma          reduce using rule 33 (DROPPROCEDURE -> drop procedure id .)


state 191

    (118) INSERT -> insert into id . values para LEXP parc
    (119) INSERT -> insert into id . para LEXP parc values para LEXP parc

    values          shift and go to state 321
    para            shift and go to state 322


state 192

    (85) CASE -> case EXP LISTAWHEN . ELSEF end case
    (86) CASE -> case EXP LISTAWHEN . end case
    (114) LISTAWHEN -> LISTAWHEN . WHEN
    (84) ELSEF -> . else LISTACONTENIDO
    (116) WHEN -> . when EXP then LISTACONTENIDO

    end             shift and go to state 324
    else            shift and go to state 196
    when            shift and go to state 112

    ELSEF                          shift and go to state 323
    WHEN                           shift and go to state 195

state 193

    (87) CASE -> case LISTAWHEN ELSEF . end case

    end             shift and go to state 325


state 194

    (88) CASE -> case LISTAWHEN end . case

    case            shift and go to state 326


state 195

    (114) LISTAWHEN -> LISTAWHEN WHEN .

    end             reduce using rule 114 (LISTAWHEN -> LISTAWHEN WHEN .)
    else            reduce using rule 114 (LISTAWHEN -> LISTAWHEN WHEN .)
    when            reduce using rule 114 (LISTAWHEN -> LISTAWHEN WHEN .)


state 196

    (84) ELSEF -> else . LISTACONTENIDO
    (89) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (90) LISTACONTENIDO -> . CONTENIDO
    (91) CONTENIDO -> . ASIGNACION ptcoma
    (92) CONTENIDO -> . CONDICIONIF ptcoma
    (93) CONTENIDO -> . RAISE ptcoma
    (94) CONTENIDO -> . BEGINEND ptcoma
    (95) CONTENIDO -> . CALLPROCEDURE ptcoma
    (96) CONTENIDO -> . declare LDEC
    (97) CONTENIDO -> . RETURN ptcoma
    (98) CONTENIDO -> . INSERT ptcoma
    (99) CONTENIDO -> . SELECT ptcoma
    (100) CONTENIDO -> . UPDATE ptcoma
    (101) CONTENIDO -> . DELETE ptcoma
    (102) CONTENIDO -> . CASE ptcoma
    (76) ASIGNACION -> . id dospuntos igual EXP
    (77) ASIGNACION -> . id igual EXP
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (80) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (81) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (103) RAISE -> . raise LEVEL FORMAT
    (104) RAISE -> . raise LEVEL EXP
    (105) RAISE -> . raise LEVEL
    (106) RAISE -> . raise
    (107) RAISE -> . raise LEVEL cadena coma id
    (51) BEGINEND -> . begin LISTACONTENIDO end
    (35) CALLPROCEDURE -> . execute id para LEXP parc
    (36) CALLPROCEDURE -> . execute id para parc
    (26) RETURN -> . return EXP
    (118) INSERT -> . insert into id values para LEXP parc
    (119) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (228) UPDATE -> . update id set LCAMPOS WHERE
    (231) DELETE -> . delete r_from id WHERE
    (85) CASE -> . case EXP LISTAWHEN ELSEF end case
    (86) CASE -> . case EXP LISTAWHEN end case
    (87) CASE -> . case LISTAWHEN ELSEF end case
    (88) CASE -> . case LISTAWHEN end case

    declare         shift and go to state 308
    id              shift and go to state 17
    if              shift and go to state 31
    raise           shift and go to state 315
    begin           shift and go to state 316
    execute         shift and go to state 36
    return          shift and go to state 317
    insert          shift and go to state 33
    select          shift and go to state 26
    update          shift and go to state 28
    delete          shift and go to state 29
    case            shift and go to state 34

    LISTACONTENIDO                 shift and go to state 327
    CONTENIDO                      shift and go to state 302
    ASIGNACION                     shift and go to state 303
    CONDICIONIF                    shift and go to state 304
    RAISE                          shift and go to state 305
    BEGINEND                       shift and go to state 306
    CALLPROCEDURE                  shift and go to state 307
    RETURN                         shift and go to state 309
    INSERT                         shift and go to state 310
    SELECT                         shift and go to state 311
    UPDATE                         shift and go to state 312
    DELETE                         shift and go to state 313
    CASE                           shift and go to state 314

state 197

    (116) WHEN -> when EXP . then LISTACONTENIDO
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    then            shift and go to state 328
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    and             shift and go to state 135
    or              shift and go to state 136
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143
    between         shift and go to state 144
    is              shift and go to state 145
    isnull          shift and go to state 147
    notnull         shift and go to state 148
    as              shift and go to state 149
    cadenaString    shift and go to state 150
    cadena          shift and go to state 151
    id              shift and go to state 152
    in              shift and go to state 153
    not             shift and go to state 146
    like            shift and go to state 154


state 198

    (149) SHOW -> show tables para . id parc

    id              shift and go to state 329


state 199

    (150) SHOW -> show collection para . parc

    parc            shift and go to state 330


state 200

    (35) CALLPROCEDURE -> execute id para . LEXP parc
    (36) CALLPROCEDURE -> execute id para . parc
    (234) LEXP -> . LEXP coma EXP
    (235) LEXP -> . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    parc            shift and go to state 332
    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    LEXP                           shift and go to state 331
    EXP                            shift and go to state 62
    SELECT                         shift and go to state 74

state 201

    (76) ASIGNACION -> id dospuntos igual EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    ptcoma          reduce using rule 76 (ASIGNACION -> id dospuntos igual EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    and             shift and go to state 135
    or              shift and go to state 136
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143
    between         shift and go to state 144
    is              shift and go to state 145
    isnull          shift and go to state 147
    notnull         shift and go to state 148
    as              shift and go to state 149
    cadenaString    shift and go to state 150
    cadena          shift and go to state 151
    id              shift and go to state 152
    in              shift and go to state 153
    not             shift and go to state 146
    like            shift and go to state 154


state 202

    (233) EXIST -> not exist . para SELECT parc

    para            shift and go to state 333


state 203

    (232) EXIST -> exist para . SELECT parc
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    select          shift and go to state 26

    SELECT                         shift and go to state 334

state 204

    (200) SELECT -> select distinct LEXP r_from . LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (234) LEXP -> . LEXP coma EXP
    (235) LEXP -> . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    LEXP                           shift and go to state 335
    EXP                            shift and go to state 62
    SELECT                         shift and go to state 74

state 205

    (201) SELECT -> select LEXP r_from LEXP . WHERE GROUP HAVING COMBINING ORDER LIMIT
    (234) LEXP -> LEXP . coma EXP
    (211) WHERE -> . where EXP
    (212) WHERE -> . where EXIST
    (213) WHERE -> .

  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for where resolved as shift
    coma            shift and go to state 128
    where           shift and go to state 54
    r_from          reduce using rule 213 (WHERE -> .)
    group           reduce using rule 213 (WHERE -> .)
    having          reduce using rule 213 (WHERE -> .)
    union           reduce using rule 213 (WHERE -> .)
    intersect       reduce using rule 213 (WHERE -> .)
    except          reduce using rule 213 (WHERE -> .)
    order           reduce using rule 213 (WHERE -> .)
    limit           reduce using rule 213 (WHERE -> .)
    offset          reduce using rule 213 (WHERE -> .)
    ptcoma          reduce using rule 213 (WHERE -> .)
    mas             reduce using rule 213 (WHERE -> .)
    menos           reduce using rule 213 (WHERE -> .)
    multiplicacion  reduce using rule 213 (WHERE -> .)
    division        reduce using rule 213 (WHERE -> .)
    modulo          reduce using rule 213 (WHERE -> .)
    elevado         reduce using rule 213 (WHERE -> .)
    and             reduce using rule 213 (WHERE -> .)
    or              reduce using rule 213 (WHERE -> .)
    mayor           reduce using rule 213 (WHERE -> .)
    menor           reduce using rule 213 (WHERE -> .)
    mayor_igual     reduce using rule 213 (WHERE -> .)
    menor_igual     reduce using rule 213 (WHERE -> .)
    igual           reduce using rule 213 (WHERE -> .)
    diferente1      reduce using rule 213 (WHERE -> .)
    diferente2      reduce using rule 213 (WHERE -> .)
    between         reduce using rule 213 (WHERE -> .)
    is              reduce using rule 213 (WHERE -> .)
    isnull          reduce using rule 213 (WHERE -> .)
    notnull         reduce using rule 213 (WHERE -> .)
    as              reduce using rule 213 (WHERE -> .)
    cadenaString    reduce using rule 213 (WHERE -> .)
    cadena          reduce using rule 213 (WHERE -> .)
    id              reduce using rule 213 (WHERE -> .)
    in              reduce using rule 213 (WHERE -> .)
    not             reduce using rule 213 (WHERE -> .)
    like            reduce using rule 213 (WHERE -> .)
    then            reduce using rule 213 (WHERE -> .)
    when            reduce using rule 213 (WHERE -> .)
    parc            reduce using rule 213 (WHERE -> .)
    constraint      reduce using rule 213 (WHERE -> .)
    unique          reduce using rule 213 (WHERE -> .)
    check           reduce using rule 213 (WHERE -> .)
    default         reduce using rule 213 (WHERE -> .)
    null            reduce using rule 213 (WHERE -> .)
    primary         reduce using rule 213 (WHERE -> .)
    references      reduce using rule 213 (WHERE -> .)
    asc             reduce using rule 213 (WHERE -> .)
    desc            reduce using rule 213 (WHERE -> .)

  ! coma            [ reduce using rule 213 (WHERE -> .) ]
  ! where           [ reduce using rule 213 (WHERE -> .) ]

    WHERE                          shift and go to state 336

state 206

    (202) SELECT -> select LEXP WHERE GROUP . HAVING COMBINING ORDER LIMIT
    (221) HAVING -> . having EXP
    (222) HAVING -> .

  ! shift/reduce conflict for having resolved as shift
    having          shift and go to state 338
    r_from          reduce using rule 222 (HAVING -> .)
    coma            reduce using rule 222 (HAVING -> .)
    where           reduce using rule 222 (HAVING -> .)
    group           reduce using rule 222 (HAVING -> .)
    union           reduce using rule 222 (HAVING -> .)
    intersect       reduce using rule 222 (HAVING -> .)
    except          reduce using rule 222 (HAVING -> .)
    order           reduce using rule 222 (HAVING -> .)
    limit           reduce using rule 222 (HAVING -> .)
    offset          reduce using rule 222 (HAVING -> .)
    ptcoma          reduce using rule 222 (HAVING -> .)
    mas             reduce using rule 222 (HAVING -> .)
    menos           reduce using rule 222 (HAVING -> .)
    multiplicacion  reduce using rule 222 (HAVING -> .)
    division        reduce using rule 222 (HAVING -> .)
    modulo          reduce using rule 222 (HAVING -> .)
    elevado         reduce using rule 222 (HAVING -> .)
    and             reduce using rule 222 (HAVING -> .)
    or              reduce using rule 222 (HAVING -> .)
    mayor           reduce using rule 222 (HAVING -> .)
    menor           reduce using rule 222 (HAVING -> .)
    mayor_igual     reduce using rule 222 (HAVING -> .)
    menor_igual     reduce using rule 222 (HAVING -> .)
    igual           reduce using rule 222 (HAVING -> .)
    diferente1      reduce using rule 222 (HAVING -> .)
    diferente2      reduce using rule 222 (HAVING -> .)
    between         reduce using rule 222 (HAVING -> .)
    is              reduce using rule 222 (HAVING -> .)
    isnull          reduce using rule 222 (HAVING -> .)
    notnull         reduce using rule 222 (HAVING -> .)
    as              reduce using rule 222 (HAVING -> .)
    cadenaString    reduce using rule 222 (HAVING -> .)
    cadena          reduce using rule 222 (HAVING -> .)
    id              reduce using rule 222 (HAVING -> .)
    in              reduce using rule 222 (HAVING -> .)
    not             reduce using rule 222 (HAVING -> .)
    like            reduce using rule 222 (HAVING -> .)
    then            reduce using rule 222 (HAVING -> .)
    when            reduce using rule 222 (HAVING -> .)
    parc            reduce using rule 222 (HAVING -> .)
    constraint      reduce using rule 222 (HAVING -> .)
    unique          reduce using rule 222 (HAVING -> .)
    check           reduce using rule 222 (HAVING -> .)
    default         reduce using rule 222 (HAVING -> .)
    null            reduce using rule 222 (HAVING -> .)
    primary         reduce using rule 222 (HAVING -> .)
    references      reduce using rule 222 (HAVING -> .)
    asc             reduce using rule 222 (HAVING -> .)
    desc            reduce using rule 222 (HAVING -> .)

  ! having          [ reduce using rule 222 (HAVING -> .) ]

    HAVING                         shift and go to state 337

state 207

    (219) GROUP -> group . by LEXP

    by              shift and go to state 339


state 208

    (234) LEXP -> LEXP coma EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    r_from          reduce using rule 234 (LEXP -> LEXP coma EXP .)
    coma            reduce using rule 234 (LEXP -> LEXP coma EXP .)
    where           reduce using rule 234 (LEXP -> LEXP coma EXP .)
    group           reduce using rule 234 (LEXP -> LEXP coma EXP .)
    having          reduce using rule 234 (LEXP -> LEXP coma EXP .)
    union           reduce using rule 234 (LEXP -> LEXP coma EXP .)
    intersect       reduce using rule 234 (LEXP -> LEXP coma EXP .)
    except          reduce using rule 234 (LEXP -> LEXP coma EXP .)
    order           reduce using rule 234 (LEXP -> LEXP coma EXP .)
    limit           reduce using rule 234 (LEXP -> LEXP coma EXP .)
    offset          reduce using rule 234 (LEXP -> LEXP coma EXP .)
    ptcoma          reduce using rule 234 (LEXP -> LEXP coma EXP .)
    then            reduce using rule 234 (LEXP -> LEXP coma EXP .)
    when            reduce using rule 234 (LEXP -> LEXP coma EXP .)
    parc            reduce using rule 234 (LEXP -> LEXP coma EXP .)
    constraint      reduce using rule 234 (LEXP -> LEXP coma EXP .)
    unique          reduce using rule 234 (LEXP -> LEXP coma EXP .)
    check           reduce using rule 234 (LEXP -> LEXP coma EXP .)
    default         reduce using rule 234 (LEXP -> LEXP coma EXP .)
    null            reduce using rule 234 (LEXP -> LEXP coma EXP .)
    primary         reduce using rule 234 (LEXP -> LEXP coma EXP .)
    references      reduce using rule 234 (LEXP -> LEXP coma EXP .)
    asc             reduce using rule 234 (LEXP -> LEXP coma EXP .)
    desc            reduce using rule 234 (LEXP -> LEXP coma EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    and             shift and go to state 135
    or              shift and go to state 136
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143
    between         shift and go to state 144
    is              shift and go to state 145
    isnull          shift and go to state 147
    notnull         shift and go to state 148
    as              shift and go to state 149
    cadenaString    shift and go to state 150
    cadena          shift and go to state 151
    id              shift and go to state 152
    in              shift and go to state 153
    not             shift and go to state 146
    like            shift and go to state 154

  ! mas             [ reduce using rule 234 (LEXP -> LEXP coma EXP .) ]
  ! menos           [ reduce using rule 234 (LEXP -> LEXP coma EXP .) ]
  ! multiplicacion  [ reduce using rule 234 (LEXP -> LEXP coma EXP .) ]
  ! division        [ reduce using rule 234 (LEXP -> LEXP coma EXP .) ]
  ! modulo          [ reduce using rule 234 (LEXP -> LEXP coma EXP .) ]
  ! elevado         [ reduce using rule 234 (LEXP -> LEXP coma EXP .) ]
  ! and             [ reduce using rule 234 (LEXP -> LEXP coma EXP .) ]
  ! or              [ reduce using rule 234 (LEXP -> LEXP coma EXP .) ]
  ! mayor           [ reduce using rule 234 (LEXP -> LEXP coma EXP .) ]
  ! menor           [ reduce using rule 234 (LEXP -> LEXP coma EXP .) ]
  ! mayor_igual     [ reduce using rule 234 (LEXP -> LEXP coma EXP .) ]
  ! menor_igual     [ reduce using rule 234 (LEXP -> LEXP coma EXP .) ]
  ! igual           [ reduce using rule 234 (LEXP -> LEXP coma EXP .) ]
  ! diferente1      [ reduce using rule 234 (LEXP -> LEXP coma EXP .) ]
  ! diferente2      [ reduce using rule 234 (LEXP -> LEXP coma EXP .) ]
  ! between         [ reduce using rule 234 (LEXP -> LEXP coma EXP .) ]
  ! is              [ reduce using rule 234 (LEXP -> LEXP coma EXP .) ]
  ! isnull          [ reduce using rule 234 (LEXP -> LEXP coma EXP .) ]
  ! notnull         [ reduce using rule 234 (LEXP -> LEXP coma EXP .) ]
  ! as              [ reduce using rule 234 (LEXP -> LEXP coma EXP .) ]
  ! cadenaString    [ reduce using rule 234 (LEXP -> LEXP coma EXP .) ]
  ! cadena          [ reduce using rule 234 (LEXP -> LEXP coma EXP .) ]
  ! id              [ reduce using rule 234 (LEXP -> LEXP coma EXP .) ]
  ! in              [ reduce using rule 234 (LEXP -> LEXP coma EXP .) ]
  ! not             [ reduce using rule 234 (LEXP -> LEXP coma EXP .) ]
  ! like            [ reduce using rule 234 (LEXP -> LEXP coma EXP .) ]


state 209

    (283) EXP -> EXP mas EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    r_from          reduce using rule 283 (EXP -> EXP mas EXP .)
    coma            reduce using rule 283 (EXP -> EXP mas EXP .)
    where           reduce using rule 283 (EXP -> EXP mas EXP .)
    group           reduce using rule 283 (EXP -> EXP mas EXP .)
    having          reduce using rule 283 (EXP -> EXP mas EXP .)
    union           reduce using rule 283 (EXP -> EXP mas EXP .)
    intersect       reduce using rule 283 (EXP -> EXP mas EXP .)
    except          reduce using rule 283 (EXP -> EXP mas EXP .)
    order           reduce using rule 283 (EXP -> EXP mas EXP .)
    limit           reduce using rule 283 (EXP -> EXP mas EXP .)
    offset          reduce using rule 283 (EXP -> EXP mas EXP .)
    ptcoma          reduce using rule 283 (EXP -> EXP mas EXP .)
    mas             reduce using rule 283 (EXP -> EXP mas EXP .)
    menos           reduce using rule 283 (EXP -> EXP mas EXP .)
    and             reduce using rule 283 (EXP -> EXP mas EXP .)
    or              reduce using rule 283 (EXP -> EXP mas EXP .)
    mayor           reduce using rule 283 (EXP -> EXP mas EXP .)
    menor           reduce using rule 283 (EXP -> EXP mas EXP .)
    mayor_igual     reduce using rule 283 (EXP -> EXP mas EXP .)
    menor_igual     reduce using rule 283 (EXP -> EXP mas EXP .)
    igual           reduce using rule 283 (EXP -> EXP mas EXP .)
    diferente1      reduce using rule 283 (EXP -> EXP mas EXP .)
    diferente2      reduce using rule 283 (EXP -> EXP mas EXP .)
    between         reduce using rule 283 (EXP -> EXP mas EXP .)
    is              reduce using rule 283 (EXP -> EXP mas EXP .)
    isnull          reduce using rule 283 (EXP -> EXP mas EXP .)
    notnull         reduce using rule 283 (EXP -> EXP mas EXP .)
    as              reduce using rule 283 (EXP -> EXP mas EXP .)
    cadenaString    reduce using rule 283 (EXP -> EXP mas EXP .)
    cadena          reduce using rule 283 (EXP -> EXP mas EXP .)
    id              reduce using rule 283 (EXP -> EXP mas EXP .)
    in              reduce using rule 283 (EXP -> EXP mas EXP .)
    not             reduce using rule 283 (EXP -> EXP mas EXP .)
    like            reduce using rule 283 (EXP -> EXP mas EXP .)
    then            reduce using rule 283 (EXP -> EXP mas EXP .)
    when            reduce using rule 283 (EXP -> EXP mas EXP .)
    parc            reduce using rule 283 (EXP -> EXP mas EXP .)
    constraint      reduce using rule 283 (EXP -> EXP mas EXP .)
    unique          reduce using rule 283 (EXP -> EXP mas EXP .)
    check           reduce using rule 283 (EXP -> EXP mas EXP .)
    default         reduce using rule 283 (EXP -> EXP mas EXP .)
    null            reduce using rule 283 (EXP -> EXP mas EXP .)
    primary         reduce using rule 283 (EXP -> EXP mas EXP .)
    references      reduce using rule 283 (EXP -> EXP mas EXP .)
    asc             reduce using rule 283 (EXP -> EXP mas EXP .)
    desc            reduce using rule 283 (EXP -> EXP mas EXP .)
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134

  ! multiplicacion  [ reduce using rule 283 (EXP -> EXP mas EXP .) ]
  ! division        [ reduce using rule 283 (EXP -> EXP mas EXP .) ]
  ! modulo          [ reduce using rule 283 (EXP -> EXP mas EXP .) ]
  ! elevado         [ reduce using rule 283 (EXP -> EXP mas EXP .) ]
  ! mas             [ shift and go to state 129 ]
  ! menos           [ shift and go to state 130 ]
  ! and             [ shift and go to state 135 ]
  ! or              [ shift and go to state 136 ]
  ! mayor           [ shift and go to state 137 ]
  ! menor           [ shift and go to state 138 ]
  ! mayor_igual     [ shift and go to state 139 ]
  ! menor_igual     [ shift and go to state 140 ]
  ! igual           [ shift and go to state 141 ]
  ! diferente1      [ shift and go to state 142 ]
  ! diferente2      [ shift and go to state 143 ]
  ! between         [ shift and go to state 144 ]
  ! is              [ shift and go to state 145 ]
  ! isnull          [ shift and go to state 147 ]
  ! notnull         [ shift and go to state 148 ]
  ! as              [ shift and go to state 149 ]
  ! cadenaString    [ shift and go to state 150 ]
  ! cadena          [ shift and go to state 151 ]
  ! id              [ shift and go to state 152 ]
  ! in              [ shift and go to state 153 ]
  ! not             [ shift and go to state 146 ]
  ! like            [ shift and go to state 154 ]


state 210

    (284) EXP -> EXP menos EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    r_from          reduce using rule 284 (EXP -> EXP menos EXP .)
    coma            reduce using rule 284 (EXP -> EXP menos EXP .)
    where           reduce using rule 284 (EXP -> EXP menos EXP .)
    group           reduce using rule 284 (EXP -> EXP menos EXP .)
    having          reduce using rule 284 (EXP -> EXP menos EXP .)
    union           reduce using rule 284 (EXP -> EXP menos EXP .)
    intersect       reduce using rule 284 (EXP -> EXP menos EXP .)
    except          reduce using rule 284 (EXP -> EXP menos EXP .)
    order           reduce using rule 284 (EXP -> EXP menos EXP .)
    limit           reduce using rule 284 (EXP -> EXP menos EXP .)
    offset          reduce using rule 284 (EXP -> EXP menos EXP .)
    ptcoma          reduce using rule 284 (EXP -> EXP menos EXP .)
    mas             reduce using rule 284 (EXP -> EXP menos EXP .)
    menos           reduce using rule 284 (EXP -> EXP menos EXP .)
    and             reduce using rule 284 (EXP -> EXP menos EXP .)
    or              reduce using rule 284 (EXP -> EXP menos EXP .)
    mayor           reduce using rule 284 (EXP -> EXP menos EXP .)
    menor           reduce using rule 284 (EXP -> EXP menos EXP .)
    mayor_igual     reduce using rule 284 (EXP -> EXP menos EXP .)
    menor_igual     reduce using rule 284 (EXP -> EXP menos EXP .)
    igual           reduce using rule 284 (EXP -> EXP menos EXP .)
    diferente1      reduce using rule 284 (EXP -> EXP menos EXP .)
    diferente2      reduce using rule 284 (EXP -> EXP menos EXP .)
    between         reduce using rule 284 (EXP -> EXP menos EXP .)
    is              reduce using rule 284 (EXP -> EXP menos EXP .)
    isnull          reduce using rule 284 (EXP -> EXP menos EXP .)
    notnull         reduce using rule 284 (EXP -> EXP menos EXP .)
    as              reduce using rule 284 (EXP -> EXP menos EXP .)
    cadenaString    reduce using rule 284 (EXP -> EXP menos EXP .)
    cadena          reduce using rule 284 (EXP -> EXP menos EXP .)
    id              reduce using rule 284 (EXP -> EXP menos EXP .)
    in              reduce using rule 284 (EXP -> EXP menos EXP .)
    not             reduce using rule 284 (EXP -> EXP menos EXP .)
    like            reduce using rule 284 (EXP -> EXP menos EXP .)
    then            reduce using rule 284 (EXP -> EXP menos EXP .)
    when            reduce using rule 284 (EXP -> EXP menos EXP .)
    parc            reduce using rule 284 (EXP -> EXP menos EXP .)
    constraint      reduce using rule 284 (EXP -> EXP menos EXP .)
    unique          reduce using rule 284 (EXP -> EXP menos EXP .)
    check           reduce using rule 284 (EXP -> EXP menos EXP .)
    default         reduce using rule 284 (EXP -> EXP menos EXP .)
    null            reduce using rule 284 (EXP -> EXP menos EXP .)
    primary         reduce using rule 284 (EXP -> EXP menos EXP .)
    references      reduce using rule 284 (EXP -> EXP menos EXP .)
    asc             reduce using rule 284 (EXP -> EXP menos EXP .)
    desc            reduce using rule 284 (EXP -> EXP menos EXP .)
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134

  ! multiplicacion  [ reduce using rule 284 (EXP -> EXP menos EXP .) ]
  ! division        [ reduce using rule 284 (EXP -> EXP menos EXP .) ]
  ! modulo          [ reduce using rule 284 (EXP -> EXP menos EXP .) ]
  ! elevado         [ reduce using rule 284 (EXP -> EXP menos EXP .) ]
  ! mas             [ shift and go to state 129 ]
  ! menos           [ shift and go to state 130 ]
  ! and             [ shift and go to state 135 ]
  ! or              [ shift and go to state 136 ]
  ! mayor           [ shift and go to state 137 ]
  ! menor           [ shift and go to state 138 ]
  ! mayor_igual     [ shift and go to state 139 ]
  ! menor_igual     [ shift and go to state 140 ]
  ! igual           [ shift and go to state 141 ]
  ! diferente1      [ shift and go to state 142 ]
  ! diferente2      [ shift and go to state 143 ]
  ! between         [ shift and go to state 144 ]
  ! is              [ shift and go to state 145 ]
  ! isnull          [ shift and go to state 147 ]
  ! notnull         [ shift and go to state 148 ]
  ! as              [ shift and go to state 149 ]
  ! cadenaString    [ shift and go to state 150 ]
  ! cadena          [ shift and go to state 151 ]
  ! id              [ shift and go to state 152 ]
  ! in              [ shift and go to state 153 ]
  ! not             [ shift and go to state 146 ]
  ! like            [ shift and go to state 154 ]


state 211

    (285) EXP -> EXP multiplicacion EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    r_from          reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    coma            reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    where           reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    group           reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    having          reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    union           reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    intersect       reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    except          reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    order           reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    limit           reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    offset          reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    ptcoma          reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    mas             reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    menos           reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    multiplicacion  reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    division        reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    modulo          reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    and             reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    or              reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    mayor           reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    menor           reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    mayor_igual     reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    menor_igual     reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    igual           reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    diferente1      reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    diferente2      reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    between         reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    is              reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    isnull          reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    notnull         reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    as              reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    cadenaString    reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    cadena          reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    id              reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    in              reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    not             reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    like            reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    then            reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    when            reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    parc            reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    constraint      reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    unique          reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    check           reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    default         reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    null            reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    primary         reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    references      reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    asc             reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    desc            reduce using rule 285 (EXP -> EXP multiplicacion EXP .)
    elevado         shift and go to state 134

  ! elevado         [ reduce using rule 285 (EXP -> EXP multiplicacion EXP .) ]
  ! mas             [ shift and go to state 129 ]
  ! menos           [ shift and go to state 130 ]
  ! multiplicacion  [ shift and go to state 131 ]
  ! division        [ shift and go to state 132 ]
  ! modulo          [ shift and go to state 133 ]
  ! and             [ shift and go to state 135 ]
  ! or              [ shift and go to state 136 ]
  ! mayor           [ shift and go to state 137 ]
  ! menor           [ shift and go to state 138 ]
  ! mayor_igual     [ shift and go to state 139 ]
  ! menor_igual     [ shift and go to state 140 ]
  ! igual           [ shift and go to state 141 ]
  ! diferente1      [ shift and go to state 142 ]
  ! diferente2      [ shift and go to state 143 ]
  ! between         [ shift and go to state 144 ]
  ! is              [ shift and go to state 145 ]
  ! isnull          [ shift and go to state 147 ]
  ! notnull         [ shift and go to state 148 ]
  ! as              [ shift and go to state 149 ]
  ! cadenaString    [ shift and go to state 150 ]
  ! cadena          [ shift and go to state 151 ]
  ! id              [ shift and go to state 152 ]
  ! in              [ shift and go to state 153 ]
  ! not             [ shift and go to state 146 ]
  ! like            [ shift and go to state 154 ]


state 212

    (286) EXP -> EXP division EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    r_from          reduce using rule 286 (EXP -> EXP division EXP .)
    coma            reduce using rule 286 (EXP -> EXP division EXP .)
    where           reduce using rule 286 (EXP -> EXP division EXP .)
    group           reduce using rule 286 (EXP -> EXP division EXP .)
    having          reduce using rule 286 (EXP -> EXP division EXP .)
    union           reduce using rule 286 (EXP -> EXP division EXP .)
    intersect       reduce using rule 286 (EXP -> EXP division EXP .)
    except          reduce using rule 286 (EXP -> EXP division EXP .)
    order           reduce using rule 286 (EXP -> EXP division EXP .)
    limit           reduce using rule 286 (EXP -> EXP division EXP .)
    offset          reduce using rule 286 (EXP -> EXP division EXP .)
    ptcoma          reduce using rule 286 (EXP -> EXP division EXP .)
    mas             reduce using rule 286 (EXP -> EXP division EXP .)
    menos           reduce using rule 286 (EXP -> EXP division EXP .)
    multiplicacion  reduce using rule 286 (EXP -> EXP division EXP .)
    division        reduce using rule 286 (EXP -> EXP division EXP .)
    modulo          reduce using rule 286 (EXP -> EXP division EXP .)
    and             reduce using rule 286 (EXP -> EXP division EXP .)
    or              reduce using rule 286 (EXP -> EXP division EXP .)
    mayor           reduce using rule 286 (EXP -> EXP division EXP .)
    menor           reduce using rule 286 (EXP -> EXP division EXP .)
    mayor_igual     reduce using rule 286 (EXP -> EXP division EXP .)
    menor_igual     reduce using rule 286 (EXP -> EXP division EXP .)
    igual           reduce using rule 286 (EXP -> EXP division EXP .)
    diferente1      reduce using rule 286 (EXP -> EXP division EXP .)
    diferente2      reduce using rule 286 (EXP -> EXP division EXP .)
    between         reduce using rule 286 (EXP -> EXP division EXP .)
    is              reduce using rule 286 (EXP -> EXP division EXP .)
    isnull          reduce using rule 286 (EXP -> EXP division EXP .)
    notnull         reduce using rule 286 (EXP -> EXP division EXP .)
    as              reduce using rule 286 (EXP -> EXP division EXP .)
    cadenaString    reduce using rule 286 (EXP -> EXP division EXP .)
    cadena          reduce using rule 286 (EXP -> EXP division EXP .)
    id              reduce using rule 286 (EXP -> EXP division EXP .)
    in              reduce using rule 286 (EXP -> EXP division EXP .)
    not             reduce using rule 286 (EXP -> EXP division EXP .)
    like            reduce using rule 286 (EXP -> EXP division EXP .)
    then            reduce using rule 286 (EXP -> EXP division EXP .)
    when            reduce using rule 286 (EXP -> EXP division EXP .)
    parc            reduce using rule 286 (EXP -> EXP division EXP .)
    constraint      reduce using rule 286 (EXP -> EXP division EXP .)
    unique          reduce using rule 286 (EXP -> EXP division EXP .)
    check           reduce using rule 286 (EXP -> EXP division EXP .)
    default         reduce using rule 286 (EXP -> EXP division EXP .)
    null            reduce using rule 286 (EXP -> EXP division EXP .)
    primary         reduce using rule 286 (EXP -> EXP division EXP .)
    references      reduce using rule 286 (EXP -> EXP division EXP .)
    asc             reduce using rule 286 (EXP -> EXP division EXP .)
    desc            reduce using rule 286 (EXP -> EXP division EXP .)
    elevado         shift and go to state 134

  ! elevado         [ reduce using rule 286 (EXP -> EXP division EXP .) ]
  ! mas             [ shift and go to state 129 ]
  ! menos           [ shift and go to state 130 ]
  ! multiplicacion  [ shift and go to state 131 ]
  ! division        [ shift and go to state 132 ]
  ! modulo          [ shift and go to state 133 ]
  ! and             [ shift and go to state 135 ]
  ! or              [ shift and go to state 136 ]
  ! mayor           [ shift and go to state 137 ]
  ! menor           [ shift and go to state 138 ]
  ! mayor_igual     [ shift and go to state 139 ]
  ! menor_igual     [ shift and go to state 140 ]
  ! igual           [ shift and go to state 141 ]
  ! diferente1      [ shift and go to state 142 ]
  ! diferente2      [ shift and go to state 143 ]
  ! between         [ shift and go to state 144 ]
  ! is              [ shift and go to state 145 ]
  ! isnull          [ shift and go to state 147 ]
  ! notnull         [ shift and go to state 148 ]
  ! as              [ shift and go to state 149 ]
  ! cadenaString    [ shift and go to state 150 ]
  ! cadena          [ shift and go to state 151 ]
  ! id              [ shift and go to state 152 ]
  ! in              [ shift and go to state 153 ]
  ! not             [ shift and go to state 146 ]
  ! like            [ shift and go to state 154 ]


state 213

    (287) EXP -> EXP modulo EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    r_from          reduce using rule 287 (EXP -> EXP modulo EXP .)
    coma            reduce using rule 287 (EXP -> EXP modulo EXP .)
    where           reduce using rule 287 (EXP -> EXP modulo EXP .)
    group           reduce using rule 287 (EXP -> EXP modulo EXP .)
    having          reduce using rule 287 (EXP -> EXP modulo EXP .)
    union           reduce using rule 287 (EXP -> EXP modulo EXP .)
    intersect       reduce using rule 287 (EXP -> EXP modulo EXP .)
    except          reduce using rule 287 (EXP -> EXP modulo EXP .)
    order           reduce using rule 287 (EXP -> EXP modulo EXP .)
    limit           reduce using rule 287 (EXP -> EXP modulo EXP .)
    offset          reduce using rule 287 (EXP -> EXP modulo EXP .)
    ptcoma          reduce using rule 287 (EXP -> EXP modulo EXP .)
    mas             reduce using rule 287 (EXP -> EXP modulo EXP .)
    menos           reduce using rule 287 (EXP -> EXP modulo EXP .)
    multiplicacion  reduce using rule 287 (EXP -> EXP modulo EXP .)
    division        reduce using rule 287 (EXP -> EXP modulo EXP .)
    modulo          reduce using rule 287 (EXP -> EXP modulo EXP .)
    and             reduce using rule 287 (EXP -> EXP modulo EXP .)
    or              reduce using rule 287 (EXP -> EXP modulo EXP .)
    mayor           reduce using rule 287 (EXP -> EXP modulo EXP .)
    menor           reduce using rule 287 (EXP -> EXP modulo EXP .)
    mayor_igual     reduce using rule 287 (EXP -> EXP modulo EXP .)
    menor_igual     reduce using rule 287 (EXP -> EXP modulo EXP .)
    igual           reduce using rule 287 (EXP -> EXP modulo EXP .)
    diferente1      reduce using rule 287 (EXP -> EXP modulo EXP .)
    diferente2      reduce using rule 287 (EXP -> EXP modulo EXP .)
    between         reduce using rule 287 (EXP -> EXP modulo EXP .)
    is              reduce using rule 287 (EXP -> EXP modulo EXP .)
    isnull          reduce using rule 287 (EXP -> EXP modulo EXP .)
    notnull         reduce using rule 287 (EXP -> EXP modulo EXP .)
    as              reduce using rule 287 (EXP -> EXP modulo EXP .)
    cadenaString    reduce using rule 287 (EXP -> EXP modulo EXP .)
    cadena          reduce using rule 287 (EXP -> EXP modulo EXP .)
    id              reduce using rule 287 (EXP -> EXP modulo EXP .)
    in              reduce using rule 287 (EXP -> EXP modulo EXP .)
    not             reduce using rule 287 (EXP -> EXP modulo EXP .)
    like            reduce using rule 287 (EXP -> EXP modulo EXP .)
    then            reduce using rule 287 (EXP -> EXP modulo EXP .)
    when            reduce using rule 287 (EXP -> EXP modulo EXP .)
    parc            reduce using rule 287 (EXP -> EXP modulo EXP .)
    constraint      reduce using rule 287 (EXP -> EXP modulo EXP .)
    unique          reduce using rule 287 (EXP -> EXP modulo EXP .)
    check           reduce using rule 287 (EXP -> EXP modulo EXP .)
    default         reduce using rule 287 (EXP -> EXP modulo EXP .)
    null            reduce using rule 287 (EXP -> EXP modulo EXP .)
    primary         reduce using rule 287 (EXP -> EXP modulo EXP .)
    references      reduce using rule 287 (EXP -> EXP modulo EXP .)
    asc             reduce using rule 287 (EXP -> EXP modulo EXP .)
    desc            reduce using rule 287 (EXP -> EXP modulo EXP .)
    elevado         shift and go to state 134

  ! elevado         [ reduce using rule 287 (EXP -> EXP modulo EXP .) ]
  ! mas             [ shift and go to state 129 ]
  ! menos           [ shift and go to state 130 ]
  ! multiplicacion  [ shift and go to state 131 ]
  ! division        [ shift and go to state 132 ]
  ! modulo          [ shift and go to state 133 ]
  ! and             [ shift and go to state 135 ]
  ! or              [ shift and go to state 136 ]
  ! mayor           [ shift and go to state 137 ]
  ! menor           [ shift and go to state 138 ]
  ! mayor_igual     [ shift and go to state 139 ]
  ! menor_igual     [ shift and go to state 140 ]
  ! igual           [ shift and go to state 141 ]
  ! diferente1      [ shift and go to state 142 ]
  ! diferente2      [ shift and go to state 143 ]
  ! between         [ shift and go to state 144 ]
  ! is              [ shift and go to state 145 ]
  ! isnull          [ shift and go to state 147 ]
  ! notnull         [ shift and go to state 148 ]
  ! as              [ shift and go to state 149 ]
  ! cadenaString    [ shift and go to state 150 ]
  ! cadena          [ shift and go to state 151 ]
  ! id              [ shift and go to state 152 ]
  ! in              [ shift and go to state 153 ]
  ! not             [ shift and go to state 146 ]
  ! like            [ shift and go to state 154 ]


state 214

    (288) EXP -> EXP elevado EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    r_from          reduce using rule 288 (EXP -> EXP elevado EXP .)
    coma            reduce using rule 288 (EXP -> EXP elevado EXP .)
    where           reduce using rule 288 (EXP -> EXP elevado EXP .)
    group           reduce using rule 288 (EXP -> EXP elevado EXP .)
    having          reduce using rule 288 (EXP -> EXP elevado EXP .)
    union           reduce using rule 288 (EXP -> EXP elevado EXP .)
    intersect       reduce using rule 288 (EXP -> EXP elevado EXP .)
    except          reduce using rule 288 (EXP -> EXP elevado EXP .)
    order           reduce using rule 288 (EXP -> EXP elevado EXP .)
    limit           reduce using rule 288 (EXP -> EXP elevado EXP .)
    offset          reduce using rule 288 (EXP -> EXP elevado EXP .)
    ptcoma          reduce using rule 288 (EXP -> EXP elevado EXP .)
    mas             reduce using rule 288 (EXP -> EXP elevado EXP .)
    menos           reduce using rule 288 (EXP -> EXP elevado EXP .)
    multiplicacion  reduce using rule 288 (EXP -> EXP elevado EXP .)
    division        reduce using rule 288 (EXP -> EXP elevado EXP .)
    modulo          reduce using rule 288 (EXP -> EXP elevado EXP .)
    elevado         reduce using rule 288 (EXP -> EXP elevado EXP .)
    and             reduce using rule 288 (EXP -> EXP elevado EXP .)
    or              reduce using rule 288 (EXP -> EXP elevado EXP .)
    mayor           reduce using rule 288 (EXP -> EXP elevado EXP .)
    menor           reduce using rule 288 (EXP -> EXP elevado EXP .)
    mayor_igual     reduce using rule 288 (EXP -> EXP elevado EXP .)
    menor_igual     reduce using rule 288 (EXP -> EXP elevado EXP .)
    igual           reduce using rule 288 (EXP -> EXP elevado EXP .)
    diferente1      reduce using rule 288 (EXP -> EXP elevado EXP .)
    diferente2      reduce using rule 288 (EXP -> EXP elevado EXP .)
    between         reduce using rule 288 (EXP -> EXP elevado EXP .)
    is              reduce using rule 288 (EXP -> EXP elevado EXP .)
    isnull          reduce using rule 288 (EXP -> EXP elevado EXP .)
    notnull         reduce using rule 288 (EXP -> EXP elevado EXP .)
    as              reduce using rule 288 (EXP -> EXP elevado EXP .)
    cadenaString    reduce using rule 288 (EXP -> EXP elevado EXP .)
    cadena          reduce using rule 288 (EXP -> EXP elevado EXP .)
    id              reduce using rule 288 (EXP -> EXP elevado EXP .)
    in              reduce using rule 288 (EXP -> EXP elevado EXP .)
    not             reduce using rule 288 (EXP -> EXP elevado EXP .)
    like            reduce using rule 288 (EXP -> EXP elevado EXP .)
    then            reduce using rule 288 (EXP -> EXP elevado EXP .)
    when            reduce using rule 288 (EXP -> EXP elevado EXP .)
    parc            reduce using rule 288 (EXP -> EXP elevado EXP .)
    constraint      reduce using rule 288 (EXP -> EXP elevado EXP .)
    unique          reduce using rule 288 (EXP -> EXP elevado EXP .)
    check           reduce using rule 288 (EXP -> EXP elevado EXP .)
    default         reduce using rule 288 (EXP -> EXP elevado EXP .)
    null            reduce using rule 288 (EXP -> EXP elevado EXP .)
    primary         reduce using rule 288 (EXP -> EXP elevado EXP .)
    references      reduce using rule 288 (EXP -> EXP elevado EXP .)
    asc             reduce using rule 288 (EXP -> EXP elevado EXP .)
    desc            reduce using rule 288 (EXP -> EXP elevado EXP .)

  ! mas             [ shift and go to state 129 ]
  ! menos           [ shift and go to state 130 ]
  ! multiplicacion  [ shift and go to state 131 ]
  ! division        [ shift and go to state 132 ]
  ! modulo          [ shift and go to state 133 ]
  ! elevado         [ shift and go to state 134 ]
  ! and             [ shift and go to state 135 ]
  ! or              [ shift and go to state 136 ]
  ! mayor           [ shift and go to state 137 ]
  ! menor           [ shift and go to state 138 ]
  ! mayor_igual     [ shift and go to state 139 ]
  ! menor_igual     [ shift and go to state 140 ]
  ! igual           [ shift and go to state 141 ]
  ! diferente1      [ shift and go to state 142 ]
  ! diferente2      [ shift and go to state 143 ]
  ! between         [ shift and go to state 144 ]
  ! is              [ shift and go to state 145 ]
  ! isnull          [ shift and go to state 147 ]
  ! notnull         [ shift and go to state 148 ]
  ! as              [ shift and go to state 149 ]
  ! cadenaString    [ shift and go to state 150 ]
  ! cadena          [ shift and go to state 151 ]
  ! id              [ shift and go to state 152 ]
  ! in              [ shift and go to state 153 ]
  ! not             [ shift and go to state 146 ]
  ! like            [ shift and go to state 154 ]


state 215

    (289) EXP -> EXP and EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    r_from          reduce using rule 289 (EXP -> EXP and EXP .)
    coma            reduce using rule 289 (EXP -> EXP and EXP .)
    where           reduce using rule 289 (EXP -> EXP and EXP .)
    group           reduce using rule 289 (EXP -> EXP and EXP .)
    having          reduce using rule 289 (EXP -> EXP and EXP .)
    union           reduce using rule 289 (EXP -> EXP and EXP .)
    intersect       reduce using rule 289 (EXP -> EXP and EXP .)
    except          reduce using rule 289 (EXP -> EXP and EXP .)
    order           reduce using rule 289 (EXP -> EXP and EXP .)
    limit           reduce using rule 289 (EXP -> EXP and EXP .)
    offset          reduce using rule 289 (EXP -> EXP and EXP .)
    ptcoma          reduce using rule 289 (EXP -> EXP and EXP .)
    and             reduce using rule 289 (EXP -> EXP and EXP .)
    or              reduce using rule 289 (EXP -> EXP and EXP .)
    between         reduce using rule 289 (EXP -> EXP and EXP .)
    is              reduce using rule 289 (EXP -> EXP and EXP .)
    isnull          reduce using rule 289 (EXP -> EXP and EXP .)
    notnull         reduce using rule 289 (EXP -> EXP and EXP .)
    as              reduce using rule 289 (EXP -> EXP and EXP .)
    cadenaString    reduce using rule 289 (EXP -> EXP and EXP .)
    cadena          reduce using rule 289 (EXP -> EXP and EXP .)
    id              reduce using rule 289 (EXP -> EXP and EXP .)
    in              reduce using rule 289 (EXP -> EXP and EXP .)
    like            reduce using rule 289 (EXP -> EXP and EXP .)
    then            reduce using rule 289 (EXP -> EXP and EXP .)
    when            reduce using rule 289 (EXP -> EXP and EXP .)
    parc            reduce using rule 289 (EXP -> EXP and EXP .)
    constraint      reduce using rule 289 (EXP -> EXP and EXP .)
    unique          reduce using rule 289 (EXP -> EXP and EXP .)
    check           reduce using rule 289 (EXP -> EXP and EXP .)
    default         reduce using rule 289 (EXP -> EXP and EXP .)
    null            reduce using rule 289 (EXP -> EXP and EXP .)
    primary         reduce using rule 289 (EXP -> EXP and EXP .)
    references      reduce using rule 289 (EXP -> EXP and EXP .)
    asc             reduce using rule 289 (EXP -> EXP and EXP .)
    desc            reduce using rule 289 (EXP -> EXP and EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143
    not             shift and go to state 146

  ! mas             [ reduce using rule 289 (EXP -> EXP and EXP .) ]
  ! menos           [ reduce using rule 289 (EXP -> EXP and EXP .) ]
  ! multiplicacion  [ reduce using rule 289 (EXP -> EXP and EXP .) ]
  ! division        [ reduce using rule 289 (EXP -> EXP and EXP .) ]
  ! modulo          [ reduce using rule 289 (EXP -> EXP and EXP .) ]
  ! elevado         [ reduce using rule 289 (EXP -> EXP and EXP .) ]
  ! mayor           [ reduce using rule 289 (EXP -> EXP and EXP .) ]
  ! menor           [ reduce using rule 289 (EXP -> EXP and EXP .) ]
  ! mayor_igual     [ reduce using rule 289 (EXP -> EXP and EXP .) ]
  ! menor_igual     [ reduce using rule 289 (EXP -> EXP and EXP .) ]
  ! igual           [ reduce using rule 289 (EXP -> EXP and EXP .) ]
  ! diferente1      [ reduce using rule 289 (EXP -> EXP and EXP .) ]
  ! diferente2      [ reduce using rule 289 (EXP -> EXP and EXP .) ]
  ! not             [ reduce using rule 289 (EXP -> EXP and EXP .) ]
  ! and             [ shift and go to state 135 ]
  ! or              [ shift and go to state 136 ]
  ! between         [ shift and go to state 144 ]
  ! is              [ shift and go to state 145 ]
  ! isnull          [ shift and go to state 147 ]
  ! notnull         [ shift and go to state 148 ]
  ! as              [ shift and go to state 149 ]
  ! cadenaString    [ shift and go to state 150 ]
  ! cadena          [ shift and go to state 151 ]
  ! id              [ shift and go to state 152 ]
  ! in              [ shift and go to state 153 ]
  ! like            [ shift and go to state 154 ]


state 216

    (290) EXP -> EXP or EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    r_from          reduce using rule 290 (EXP -> EXP or EXP .)
    coma            reduce using rule 290 (EXP -> EXP or EXP .)
    where           reduce using rule 290 (EXP -> EXP or EXP .)
    group           reduce using rule 290 (EXP -> EXP or EXP .)
    having          reduce using rule 290 (EXP -> EXP or EXP .)
    union           reduce using rule 290 (EXP -> EXP or EXP .)
    intersect       reduce using rule 290 (EXP -> EXP or EXP .)
    except          reduce using rule 290 (EXP -> EXP or EXP .)
    order           reduce using rule 290 (EXP -> EXP or EXP .)
    limit           reduce using rule 290 (EXP -> EXP or EXP .)
    offset          reduce using rule 290 (EXP -> EXP or EXP .)
    ptcoma          reduce using rule 290 (EXP -> EXP or EXP .)
    or              reduce using rule 290 (EXP -> EXP or EXP .)
    between         reduce using rule 290 (EXP -> EXP or EXP .)
    is              reduce using rule 290 (EXP -> EXP or EXP .)
    isnull          reduce using rule 290 (EXP -> EXP or EXP .)
    notnull         reduce using rule 290 (EXP -> EXP or EXP .)
    as              reduce using rule 290 (EXP -> EXP or EXP .)
    cadenaString    reduce using rule 290 (EXP -> EXP or EXP .)
    cadena          reduce using rule 290 (EXP -> EXP or EXP .)
    id              reduce using rule 290 (EXP -> EXP or EXP .)
    in              reduce using rule 290 (EXP -> EXP or EXP .)
    like            reduce using rule 290 (EXP -> EXP or EXP .)
    then            reduce using rule 290 (EXP -> EXP or EXP .)
    when            reduce using rule 290 (EXP -> EXP or EXP .)
    parc            reduce using rule 290 (EXP -> EXP or EXP .)
    constraint      reduce using rule 290 (EXP -> EXP or EXP .)
    unique          reduce using rule 290 (EXP -> EXP or EXP .)
    check           reduce using rule 290 (EXP -> EXP or EXP .)
    default         reduce using rule 290 (EXP -> EXP or EXP .)
    null            reduce using rule 290 (EXP -> EXP or EXP .)
    primary         reduce using rule 290 (EXP -> EXP or EXP .)
    references      reduce using rule 290 (EXP -> EXP or EXP .)
    asc             reduce using rule 290 (EXP -> EXP or EXP .)
    desc            reduce using rule 290 (EXP -> EXP or EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    and             shift and go to state 135
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143
    not             shift and go to state 146

  ! mas             [ reduce using rule 290 (EXP -> EXP or EXP .) ]
  ! menos           [ reduce using rule 290 (EXP -> EXP or EXP .) ]
  ! multiplicacion  [ reduce using rule 290 (EXP -> EXP or EXP .) ]
  ! division        [ reduce using rule 290 (EXP -> EXP or EXP .) ]
  ! modulo          [ reduce using rule 290 (EXP -> EXP or EXP .) ]
  ! elevado         [ reduce using rule 290 (EXP -> EXP or EXP .) ]
  ! and             [ reduce using rule 290 (EXP -> EXP or EXP .) ]
  ! mayor           [ reduce using rule 290 (EXP -> EXP or EXP .) ]
  ! menor           [ reduce using rule 290 (EXP -> EXP or EXP .) ]
  ! mayor_igual     [ reduce using rule 290 (EXP -> EXP or EXP .) ]
  ! menor_igual     [ reduce using rule 290 (EXP -> EXP or EXP .) ]
  ! igual           [ reduce using rule 290 (EXP -> EXP or EXP .) ]
  ! diferente1      [ reduce using rule 290 (EXP -> EXP or EXP .) ]
  ! diferente2      [ reduce using rule 290 (EXP -> EXP or EXP .) ]
  ! not             [ reduce using rule 290 (EXP -> EXP or EXP .) ]
  ! or              [ shift and go to state 136 ]
  ! between         [ shift and go to state 144 ]
  ! is              [ shift and go to state 145 ]
  ! isnull          [ shift and go to state 147 ]
  ! notnull         [ shift and go to state 148 ]
  ! as              [ shift and go to state 149 ]
  ! cadenaString    [ shift and go to state 150 ]
  ! cadena          [ shift and go to state 151 ]
  ! id              [ shift and go to state 152 ]
  ! in              [ shift and go to state 153 ]
  ! like            [ shift and go to state 154 ]


state 217

    (291) EXP -> EXP mayor EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    r_from          reduce using rule 291 (EXP -> EXP mayor EXP .)
    coma            reduce using rule 291 (EXP -> EXP mayor EXP .)
    where           reduce using rule 291 (EXP -> EXP mayor EXP .)
    group           reduce using rule 291 (EXP -> EXP mayor EXP .)
    having          reduce using rule 291 (EXP -> EXP mayor EXP .)
    union           reduce using rule 291 (EXP -> EXP mayor EXP .)
    intersect       reduce using rule 291 (EXP -> EXP mayor EXP .)
    except          reduce using rule 291 (EXP -> EXP mayor EXP .)
    order           reduce using rule 291 (EXP -> EXP mayor EXP .)
    limit           reduce using rule 291 (EXP -> EXP mayor EXP .)
    offset          reduce using rule 291 (EXP -> EXP mayor EXP .)
    ptcoma          reduce using rule 291 (EXP -> EXP mayor EXP .)
    and             reduce using rule 291 (EXP -> EXP mayor EXP .)
    or              reduce using rule 291 (EXP -> EXP mayor EXP .)
    mayor           reduce using rule 291 (EXP -> EXP mayor EXP .)
    menor           reduce using rule 291 (EXP -> EXP mayor EXP .)
    mayor_igual     reduce using rule 291 (EXP -> EXP mayor EXP .)
    menor_igual     reduce using rule 291 (EXP -> EXP mayor EXP .)
    igual           reduce using rule 291 (EXP -> EXP mayor EXP .)
    diferente1      reduce using rule 291 (EXP -> EXP mayor EXP .)
    diferente2      reduce using rule 291 (EXP -> EXP mayor EXP .)
    between         reduce using rule 291 (EXP -> EXP mayor EXP .)
    is              reduce using rule 291 (EXP -> EXP mayor EXP .)
    isnull          reduce using rule 291 (EXP -> EXP mayor EXP .)
    notnull         reduce using rule 291 (EXP -> EXP mayor EXP .)
    as              reduce using rule 291 (EXP -> EXP mayor EXP .)
    cadenaString    reduce using rule 291 (EXP -> EXP mayor EXP .)
    cadena          reduce using rule 291 (EXP -> EXP mayor EXP .)
    id              reduce using rule 291 (EXP -> EXP mayor EXP .)
    in              reduce using rule 291 (EXP -> EXP mayor EXP .)
    not             reduce using rule 291 (EXP -> EXP mayor EXP .)
    like            reduce using rule 291 (EXP -> EXP mayor EXP .)
    then            reduce using rule 291 (EXP -> EXP mayor EXP .)
    when            reduce using rule 291 (EXP -> EXP mayor EXP .)
    parc            reduce using rule 291 (EXP -> EXP mayor EXP .)
    constraint      reduce using rule 291 (EXP -> EXP mayor EXP .)
    unique          reduce using rule 291 (EXP -> EXP mayor EXP .)
    check           reduce using rule 291 (EXP -> EXP mayor EXP .)
    default         reduce using rule 291 (EXP -> EXP mayor EXP .)
    null            reduce using rule 291 (EXP -> EXP mayor EXP .)
    primary         reduce using rule 291 (EXP -> EXP mayor EXP .)
    references      reduce using rule 291 (EXP -> EXP mayor EXP .)
    asc             reduce using rule 291 (EXP -> EXP mayor EXP .)
    desc            reduce using rule 291 (EXP -> EXP mayor EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134

  ! mas             [ reduce using rule 291 (EXP -> EXP mayor EXP .) ]
  ! menos           [ reduce using rule 291 (EXP -> EXP mayor EXP .) ]
  ! multiplicacion  [ reduce using rule 291 (EXP -> EXP mayor EXP .) ]
  ! division        [ reduce using rule 291 (EXP -> EXP mayor EXP .) ]
  ! modulo          [ reduce using rule 291 (EXP -> EXP mayor EXP .) ]
  ! elevado         [ reduce using rule 291 (EXP -> EXP mayor EXP .) ]
  ! and             [ shift and go to state 135 ]
  ! or              [ shift and go to state 136 ]
  ! mayor           [ shift and go to state 137 ]
  ! menor           [ shift and go to state 138 ]
  ! mayor_igual     [ shift and go to state 139 ]
  ! menor_igual     [ shift and go to state 140 ]
  ! igual           [ shift and go to state 141 ]
  ! diferente1      [ shift and go to state 142 ]
  ! diferente2      [ shift and go to state 143 ]
  ! between         [ shift and go to state 144 ]
  ! is              [ shift and go to state 145 ]
  ! isnull          [ shift and go to state 147 ]
  ! notnull         [ shift and go to state 148 ]
  ! as              [ shift and go to state 149 ]
  ! cadenaString    [ shift and go to state 150 ]
  ! cadena          [ shift and go to state 151 ]
  ! id              [ shift and go to state 152 ]
  ! in              [ shift and go to state 153 ]
  ! not             [ shift and go to state 146 ]
  ! like            [ shift and go to state 154 ]


state 218

    (292) EXP -> EXP menor EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    r_from          reduce using rule 292 (EXP -> EXP menor EXP .)
    coma            reduce using rule 292 (EXP -> EXP menor EXP .)
    where           reduce using rule 292 (EXP -> EXP menor EXP .)
    group           reduce using rule 292 (EXP -> EXP menor EXP .)
    having          reduce using rule 292 (EXP -> EXP menor EXP .)
    union           reduce using rule 292 (EXP -> EXP menor EXP .)
    intersect       reduce using rule 292 (EXP -> EXP menor EXP .)
    except          reduce using rule 292 (EXP -> EXP menor EXP .)
    order           reduce using rule 292 (EXP -> EXP menor EXP .)
    limit           reduce using rule 292 (EXP -> EXP menor EXP .)
    offset          reduce using rule 292 (EXP -> EXP menor EXP .)
    ptcoma          reduce using rule 292 (EXP -> EXP menor EXP .)
    and             reduce using rule 292 (EXP -> EXP menor EXP .)
    or              reduce using rule 292 (EXP -> EXP menor EXP .)
    mayor           reduce using rule 292 (EXP -> EXP menor EXP .)
    menor           reduce using rule 292 (EXP -> EXP menor EXP .)
    mayor_igual     reduce using rule 292 (EXP -> EXP menor EXP .)
    menor_igual     reduce using rule 292 (EXP -> EXP menor EXP .)
    igual           reduce using rule 292 (EXP -> EXP menor EXP .)
    diferente1      reduce using rule 292 (EXP -> EXP menor EXP .)
    diferente2      reduce using rule 292 (EXP -> EXP menor EXP .)
    between         reduce using rule 292 (EXP -> EXP menor EXP .)
    is              reduce using rule 292 (EXP -> EXP menor EXP .)
    isnull          reduce using rule 292 (EXP -> EXP menor EXP .)
    notnull         reduce using rule 292 (EXP -> EXP menor EXP .)
    as              reduce using rule 292 (EXP -> EXP menor EXP .)
    cadenaString    reduce using rule 292 (EXP -> EXP menor EXP .)
    cadena          reduce using rule 292 (EXP -> EXP menor EXP .)
    id              reduce using rule 292 (EXP -> EXP menor EXP .)
    in              reduce using rule 292 (EXP -> EXP menor EXP .)
    not             reduce using rule 292 (EXP -> EXP menor EXP .)
    like            reduce using rule 292 (EXP -> EXP menor EXP .)
    then            reduce using rule 292 (EXP -> EXP menor EXP .)
    when            reduce using rule 292 (EXP -> EXP menor EXP .)
    parc            reduce using rule 292 (EXP -> EXP menor EXP .)
    constraint      reduce using rule 292 (EXP -> EXP menor EXP .)
    unique          reduce using rule 292 (EXP -> EXP menor EXP .)
    check           reduce using rule 292 (EXP -> EXP menor EXP .)
    default         reduce using rule 292 (EXP -> EXP menor EXP .)
    null            reduce using rule 292 (EXP -> EXP menor EXP .)
    primary         reduce using rule 292 (EXP -> EXP menor EXP .)
    references      reduce using rule 292 (EXP -> EXP menor EXP .)
    asc             reduce using rule 292 (EXP -> EXP menor EXP .)
    desc            reduce using rule 292 (EXP -> EXP menor EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134

  ! mas             [ reduce using rule 292 (EXP -> EXP menor EXP .) ]
  ! menos           [ reduce using rule 292 (EXP -> EXP menor EXP .) ]
  ! multiplicacion  [ reduce using rule 292 (EXP -> EXP menor EXP .) ]
  ! division        [ reduce using rule 292 (EXP -> EXP menor EXP .) ]
  ! modulo          [ reduce using rule 292 (EXP -> EXP menor EXP .) ]
  ! elevado         [ reduce using rule 292 (EXP -> EXP menor EXP .) ]
  ! and             [ shift and go to state 135 ]
  ! or              [ shift and go to state 136 ]
  ! mayor           [ shift and go to state 137 ]
  ! menor           [ shift and go to state 138 ]
  ! mayor_igual     [ shift and go to state 139 ]
  ! menor_igual     [ shift and go to state 140 ]
  ! igual           [ shift and go to state 141 ]
  ! diferente1      [ shift and go to state 142 ]
  ! diferente2      [ shift and go to state 143 ]
  ! between         [ shift and go to state 144 ]
  ! is              [ shift and go to state 145 ]
  ! isnull          [ shift and go to state 147 ]
  ! notnull         [ shift and go to state 148 ]
  ! as              [ shift and go to state 149 ]
  ! cadenaString    [ shift and go to state 150 ]
  ! cadena          [ shift and go to state 151 ]
  ! id              [ shift and go to state 152 ]
  ! in              [ shift and go to state 153 ]
  ! not             [ shift and go to state 146 ]
  ! like            [ shift and go to state 154 ]


state 219

    (293) EXP -> EXP mayor_igual EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    r_from          reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    coma            reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    where           reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    group           reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    having          reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    union           reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    intersect       reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    except          reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    order           reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    limit           reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    offset          reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    ptcoma          reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    and             reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    or              reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    mayor           reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    menor           reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    mayor_igual     reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    menor_igual     reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    igual           reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    diferente1      reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    diferente2      reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    between         reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    is              reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    isnull          reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    notnull         reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    as              reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    cadenaString    reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    cadena          reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    id              reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    in              reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    not             reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    like            reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    then            reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    when            reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    parc            reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    constraint      reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    unique          reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    check           reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    default         reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    null            reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    primary         reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    references      reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    asc             reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    desc            reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134

  ! mas             [ reduce using rule 293 (EXP -> EXP mayor_igual EXP .) ]
  ! menos           [ reduce using rule 293 (EXP -> EXP mayor_igual EXP .) ]
  ! multiplicacion  [ reduce using rule 293 (EXP -> EXP mayor_igual EXP .) ]
  ! division        [ reduce using rule 293 (EXP -> EXP mayor_igual EXP .) ]
  ! modulo          [ reduce using rule 293 (EXP -> EXP mayor_igual EXP .) ]
  ! elevado         [ reduce using rule 293 (EXP -> EXP mayor_igual EXP .) ]
  ! and             [ shift and go to state 135 ]
  ! or              [ shift and go to state 136 ]
  ! mayor           [ shift and go to state 137 ]
  ! menor           [ shift and go to state 138 ]
  ! mayor_igual     [ shift and go to state 139 ]
  ! menor_igual     [ shift and go to state 140 ]
  ! igual           [ shift and go to state 141 ]
  ! diferente1      [ shift and go to state 142 ]
  ! diferente2      [ shift and go to state 143 ]
  ! between         [ shift and go to state 144 ]
  ! is              [ shift and go to state 145 ]
  ! isnull          [ shift and go to state 147 ]
  ! notnull         [ shift and go to state 148 ]
  ! as              [ shift and go to state 149 ]
  ! cadenaString    [ shift and go to state 150 ]
  ! cadena          [ shift and go to state 151 ]
  ! id              [ shift and go to state 152 ]
  ! in              [ shift and go to state 153 ]
  ! not             [ shift and go to state 146 ]
  ! like            [ shift and go to state 154 ]


state 220

    (294) EXP -> EXP menor_igual EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    r_from          reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    coma            reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    where           reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    group           reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    having          reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    union           reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    intersect       reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    except          reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    order           reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    limit           reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    offset          reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    ptcoma          reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    and             reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    or              reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    mayor           reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    menor           reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    mayor_igual     reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    menor_igual     reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    igual           reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    diferente1      reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    diferente2      reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    between         reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    is              reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    isnull          reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    notnull         reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    as              reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    cadenaString    reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    cadena          reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    id              reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    in              reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    not             reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    like            reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    then            reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    when            reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    parc            reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    constraint      reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    unique          reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    check           reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    default         reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    null            reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    primary         reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    references      reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    asc             reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    desc            reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134

  ! mas             [ reduce using rule 294 (EXP -> EXP menor_igual EXP .) ]
  ! menos           [ reduce using rule 294 (EXP -> EXP menor_igual EXP .) ]
  ! multiplicacion  [ reduce using rule 294 (EXP -> EXP menor_igual EXP .) ]
  ! division        [ reduce using rule 294 (EXP -> EXP menor_igual EXP .) ]
  ! modulo          [ reduce using rule 294 (EXP -> EXP menor_igual EXP .) ]
  ! elevado         [ reduce using rule 294 (EXP -> EXP menor_igual EXP .) ]
  ! and             [ shift and go to state 135 ]
  ! or              [ shift and go to state 136 ]
  ! mayor           [ shift and go to state 137 ]
  ! menor           [ shift and go to state 138 ]
  ! mayor_igual     [ shift and go to state 139 ]
  ! menor_igual     [ shift and go to state 140 ]
  ! igual           [ shift and go to state 141 ]
  ! diferente1      [ shift and go to state 142 ]
  ! diferente2      [ shift and go to state 143 ]
  ! between         [ shift and go to state 144 ]
  ! is              [ shift and go to state 145 ]
  ! isnull          [ shift and go to state 147 ]
  ! notnull         [ shift and go to state 148 ]
  ! as              [ shift and go to state 149 ]
  ! cadenaString    [ shift and go to state 150 ]
  ! cadena          [ shift and go to state 151 ]
  ! id              [ shift and go to state 152 ]
  ! in              [ shift and go to state 153 ]
  ! not             [ shift and go to state 146 ]
  ! like            [ shift and go to state 154 ]


state 221

    (295) EXP -> EXP igual EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    r_from          reduce using rule 295 (EXP -> EXP igual EXP .)
    coma            reduce using rule 295 (EXP -> EXP igual EXP .)
    where           reduce using rule 295 (EXP -> EXP igual EXP .)
    group           reduce using rule 295 (EXP -> EXP igual EXP .)
    having          reduce using rule 295 (EXP -> EXP igual EXP .)
    union           reduce using rule 295 (EXP -> EXP igual EXP .)
    intersect       reduce using rule 295 (EXP -> EXP igual EXP .)
    except          reduce using rule 295 (EXP -> EXP igual EXP .)
    order           reduce using rule 295 (EXP -> EXP igual EXP .)
    limit           reduce using rule 295 (EXP -> EXP igual EXP .)
    offset          reduce using rule 295 (EXP -> EXP igual EXP .)
    ptcoma          reduce using rule 295 (EXP -> EXP igual EXP .)
    and             reduce using rule 295 (EXP -> EXP igual EXP .)
    or              reduce using rule 295 (EXP -> EXP igual EXP .)
    mayor           reduce using rule 295 (EXP -> EXP igual EXP .)
    menor           reduce using rule 295 (EXP -> EXP igual EXP .)
    mayor_igual     reduce using rule 295 (EXP -> EXP igual EXP .)
    menor_igual     reduce using rule 295 (EXP -> EXP igual EXP .)
    igual           reduce using rule 295 (EXP -> EXP igual EXP .)
    diferente1      reduce using rule 295 (EXP -> EXP igual EXP .)
    diferente2      reduce using rule 295 (EXP -> EXP igual EXP .)
    between         reduce using rule 295 (EXP -> EXP igual EXP .)
    is              reduce using rule 295 (EXP -> EXP igual EXP .)
    isnull          reduce using rule 295 (EXP -> EXP igual EXP .)
    notnull         reduce using rule 295 (EXP -> EXP igual EXP .)
    as              reduce using rule 295 (EXP -> EXP igual EXP .)
    cadenaString    reduce using rule 295 (EXP -> EXP igual EXP .)
    cadena          reduce using rule 295 (EXP -> EXP igual EXP .)
    id              reduce using rule 295 (EXP -> EXP igual EXP .)
    in              reduce using rule 295 (EXP -> EXP igual EXP .)
    not             reduce using rule 295 (EXP -> EXP igual EXP .)
    like            reduce using rule 295 (EXP -> EXP igual EXP .)
    then            reduce using rule 295 (EXP -> EXP igual EXP .)
    when            reduce using rule 295 (EXP -> EXP igual EXP .)
    parc            reduce using rule 295 (EXP -> EXP igual EXP .)
    constraint      reduce using rule 295 (EXP -> EXP igual EXP .)
    unique          reduce using rule 295 (EXP -> EXP igual EXP .)
    check           reduce using rule 295 (EXP -> EXP igual EXP .)
    default         reduce using rule 295 (EXP -> EXP igual EXP .)
    null            reduce using rule 295 (EXP -> EXP igual EXP .)
    primary         reduce using rule 295 (EXP -> EXP igual EXP .)
    references      reduce using rule 295 (EXP -> EXP igual EXP .)
    asc             reduce using rule 295 (EXP -> EXP igual EXP .)
    desc            reduce using rule 295 (EXP -> EXP igual EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134

  ! mas             [ reduce using rule 295 (EXP -> EXP igual EXP .) ]
  ! menos           [ reduce using rule 295 (EXP -> EXP igual EXP .) ]
  ! multiplicacion  [ reduce using rule 295 (EXP -> EXP igual EXP .) ]
  ! division        [ reduce using rule 295 (EXP -> EXP igual EXP .) ]
  ! modulo          [ reduce using rule 295 (EXP -> EXP igual EXP .) ]
  ! elevado         [ reduce using rule 295 (EXP -> EXP igual EXP .) ]
  ! and             [ shift and go to state 135 ]
  ! or              [ shift and go to state 136 ]
  ! mayor           [ shift and go to state 137 ]
  ! menor           [ shift and go to state 138 ]
  ! mayor_igual     [ shift and go to state 139 ]
  ! menor_igual     [ shift and go to state 140 ]
  ! igual           [ shift and go to state 141 ]
  ! diferente1      [ shift and go to state 142 ]
  ! diferente2      [ shift and go to state 143 ]
  ! between         [ shift and go to state 144 ]
  ! is              [ shift and go to state 145 ]
  ! isnull          [ shift and go to state 147 ]
  ! notnull         [ shift and go to state 148 ]
  ! as              [ shift and go to state 149 ]
  ! cadenaString    [ shift and go to state 150 ]
  ! cadena          [ shift and go to state 151 ]
  ! id              [ shift and go to state 152 ]
  ! in              [ shift and go to state 153 ]
  ! not             [ shift and go to state 146 ]
  ! like            [ shift and go to state 154 ]


state 222

    (296) EXP -> EXP diferente1 EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    r_from          reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    coma            reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    where           reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    group           reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    having          reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    union           reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    intersect       reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    except          reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    order           reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    limit           reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    offset          reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    ptcoma          reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    and             reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    or              reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    mayor           reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    menor           reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    mayor_igual     reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    menor_igual     reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    igual           reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    diferente1      reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    diferente2      reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    between         reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    is              reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    isnull          reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    notnull         reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    as              reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    cadenaString    reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    cadena          reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    id              reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    in              reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    not             reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    like            reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    then            reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    when            reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    parc            reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    constraint      reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    unique          reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    check           reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    default         reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    null            reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    primary         reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    references      reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    asc             reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    desc            reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134

  ! mas             [ reduce using rule 296 (EXP -> EXP diferente1 EXP .) ]
  ! menos           [ reduce using rule 296 (EXP -> EXP diferente1 EXP .) ]
  ! multiplicacion  [ reduce using rule 296 (EXP -> EXP diferente1 EXP .) ]
  ! division        [ reduce using rule 296 (EXP -> EXP diferente1 EXP .) ]
  ! modulo          [ reduce using rule 296 (EXP -> EXP diferente1 EXP .) ]
  ! elevado         [ reduce using rule 296 (EXP -> EXP diferente1 EXP .) ]
  ! and             [ shift and go to state 135 ]
  ! or              [ shift and go to state 136 ]
  ! mayor           [ shift and go to state 137 ]
  ! menor           [ shift and go to state 138 ]
  ! mayor_igual     [ shift and go to state 139 ]
  ! menor_igual     [ shift and go to state 140 ]
  ! igual           [ shift and go to state 141 ]
  ! diferente1      [ shift and go to state 142 ]
  ! diferente2      [ shift and go to state 143 ]
  ! between         [ shift and go to state 144 ]
  ! is              [ shift and go to state 145 ]
  ! isnull          [ shift and go to state 147 ]
  ! notnull         [ shift and go to state 148 ]
  ! as              [ shift and go to state 149 ]
  ! cadenaString    [ shift and go to state 150 ]
  ! cadena          [ shift and go to state 151 ]
  ! id              [ shift and go to state 152 ]
  ! in              [ shift and go to state 153 ]
  ! not             [ shift and go to state 146 ]
  ! like            [ shift and go to state 154 ]


state 223

    (297) EXP -> EXP diferente2 EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    r_from          reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    coma            reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    where           reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    group           reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    having          reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    union           reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    intersect       reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    except          reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    order           reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    limit           reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    offset          reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    ptcoma          reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    and             reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    or              reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    mayor           reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    menor           reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    mayor_igual     reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    menor_igual     reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    igual           reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    diferente1      reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    diferente2      reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    between         reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    is              reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    isnull          reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    notnull         reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    as              reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    cadenaString    reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    cadena          reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    id              reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    in              reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    not             reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    like            reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    then            reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    when            reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    parc            reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    constraint      reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    unique          reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    check           reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    default         reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    null            reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    primary         reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    references      reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    asc             reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    desc            reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134

  ! mas             [ reduce using rule 297 (EXP -> EXP diferente2 EXP .) ]
  ! menos           [ reduce using rule 297 (EXP -> EXP diferente2 EXP .) ]
  ! multiplicacion  [ reduce using rule 297 (EXP -> EXP diferente2 EXP .) ]
  ! division        [ reduce using rule 297 (EXP -> EXP diferente2 EXP .) ]
  ! modulo          [ reduce using rule 297 (EXP -> EXP diferente2 EXP .) ]
  ! elevado         [ reduce using rule 297 (EXP -> EXP diferente2 EXP .) ]
  ! and             [ shift and go to state 135 ]
  ! or              [ shift and go to state 136 ]
  ! mayor           [ shift and go to state 137 ]
  ! menor           [ shift and go to state 138 ]
  ! mayor_igual     [ shift and go to state 139 ]
  ! menor_igual     [ shift and go to state 140 ]
  ! igual           [ shift and go to state 141 ]
  ! diferente1      [ shift and go to state 142 ]
  ! diferente2      [ shift and go to state 143 ]
  ! between         [ shift and go to state 144 ]
  ! is              [ shift and go to state 145 ]
  ! isnull          [ shift and go to state 147 ]
  ! notnull         [ shift and go to state 148 ]
  ! as              [ shift and go to state 149 ]
  ! cadenaString    [ shift and go to state 150 ]
  ! cadena          [ shift and go to state 151 ]
  ! id              [ shift and go to state 152 ]
  ! in              [ shift and go to state 153 ]
  ! not             [ shift and go to state 146 ]
  ! like            [ shift and go to state 154 ]


state 224

    (298) EXP -> EXP between EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    r_from          reduce using rule 298 (EXP -> EXP between EXP .)
    coma            reduce using rule 298 (EXP -> EXP between EXP .)
    where           reduce using rule 298 (EXP -> EXP between EXP .)
    group           reduce using rule 298 (EXP -> EXP between EXP .)
    having          reduce using rule 298 (EXP -> EXP between EXP .)
    union           reduce using rule 298 (EXP -> EXP between EXP .)
    intersect       reduce using rule 298 (EXP -> EXP between EXP .)
    except          reduce using rule 298 (EXP -> EXP between EXP .)
    order           reduce using rule 298 (EXP -> EXP between EXP .)
    limit           reduce using rule 298 (EXP -> EXP between EXP .)
    offset          reduce using rule 298 (EXP -> EXP between EXP .)
    ptcoma          reduce using rule 298 (EXP -> EXP between EXP .)
    and             reduce using rule 298 (EXP -> EXP between EXP .)
    or              reduce using rule 298 (EXP -> EXP between EXP .)
    between         reduce using rule 298 (EXP -> EXP between EXP .)
    is              reduce using rule 298 (EXP -> EXP between EXP .)
    isnull          reduce using rule 298 (EXP -> EXP between EXP .)
    notnull         reduce using rule 298 (EXP -> EXP between EXP .)
    as              reduce using rule 298 (EXP -> EXP between EXP .)
    cadenaString    reduce using rule 298 (EXP -> EXP between EXP .)
    cadena          reduce using rule 298 (EXP -> EXP between EXP .)
    id              reduce using rule 298 (EXP -> EXP between EXP .)
    in              reduce using rule 298 (EXP -> EXP between EXP .)
    not             reduce using rule 298 (EXP -> EXP between EXP .)
    like            reduce using rule 298 (EXP -> EXP between EXP .)
    then            reduce using rule 298 (EXP -> EXP between EXP .)
    when            reduce using rule 298 (EXP -> EXP between EXP .)
    parc            reduce using rule 298 (EXP -> EXP between EXP .)
    constraint      reduce using rule 298 (EXP -> EXP between EXP .)
    unique          reduce using rule 298 (EXP -> EXP between EXP .)
    check           reduce using rule 298 (EXP -> EXP between EXP .)
    default         reduce using rule 298 (EXP -> EXP between EXP .)
    null            reduce using rule 298 (EXP -> EXP between EXP .)
    primary         reduce using rule 298 (EXP -> EXP between EXP .)
    references      reduce using rule 298 (EXP -> EXP between EXP .)
    asc             reduce using rule 298 (EXP -> EXP between EXP .)
    desc            reduce using rule 298 (EXP -> EXP between EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143

  ! mas             [ reduce using rule 298 (EXP -> EXP between EXP .) ]
  ! menos           [ reduce using rule 298 (EXP -> EXP between EXP .) ]
  ! multiplicacion  [ reduce using rule 298 (EXP -> EXP between EXP .) ]
  ! division        [ reduce using rule 298 (EXP -> EXP between EXP .) ]
  ! modulo          [ reduce using rule 298 (EXP -> EXP between EXP .) ]
  ! elevado         [ reduce using rule 298 (EXP -> EXP between EXP .) ]
  ! mayor           [ reduce using rule 298 (EXP -> EXP between EXP .) ]
  ! menor           [ reduce using rule 298 (EXP -> EXP between EXP .) ]
  ! mayor_igual     [ reduce using rule 298 (EXP -> EXP between EXP .) ]
  ! menor_igual     [ reduce using rule 298 (EXP -> EXP between EXP .) ]
  ! igual           [ reduce using rule 298 (EXP -> EXP between EXP .) ]
  ! diferente1      [ reduce using rule 298 (EXP -> EXP between EXP .) ]
  ! diferente2      [ reduce using rule 298 (EXP -> EXP between EXP .) ]
  ! and             [ shift and go to state 135 ]
  ! or              [ shift and go to state 136 ]
  ! between         [ shift and go to state 144 ]
  ! is              [ shift and go to state 145 ]
  ! isnull          [ shift and go to state 147 ]
  ! notnull         [ shift and go to state 148 ]
  ! as              [ shift and go to state 149 ]
  ! cadenaString    [ shift and go to state 150 ]
  ! cadena          [ shift and go to state 151 ]
  ! id              [ shift and go to state 152 ]
  ! in              [ shift and go to state 153 ]
  ! not             [ shift and go to state 146 ]
  ! like            [ shift and go to state 154 ]


state 225

    (321) EXP -> EXP between symetric . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 340
    SELECT                         shift and go to state 74

state 226

    (299) EXP -> EXP is not . null
    (304) EXP -> EXP is not . true
    (306) EXP -> EXP is not . false
    (308) EXP -> EXP is not . unknown
    (324) EXP -> EXP is not . distinct r_from EXP

    null            shift and go to state 341
    true            shift and go to state 342
    false           shift and go to state 343
    unknown         shift and go to state 344
    distinct        shift and go to state 345


state 227

    (300) EXP -> EXP is null .

    r_from          reduce using rule 300 (EXP -> EXP is null .)
    coma            reduce using rule 300 (EXP -> EXP is null .)
    where           reduce using rule 300 (EXP -> EXP is null .)
    group           reduce using rule 300 (EXP -> EXP is null .)
    having          reduce using rule 300 (EXP -> EXP is null .)
    union           reduce using rule 300 (EXP -> EXP is null .)
    intersect       reduce using rule 300 (EXP -> EXP is null .)
    except          reduce using rule 300 (EXP -> EXP is null .)
    order           reduce using rule 300 (EXP -> EXP is null .)
    limit           reduce using rule 300 (EXP -> EXP is null .)
    offset          reduce using rule 300 (EXP -> EXP is null .)
    ptcoma          reduce using rule 300 (EXP -> EXP is null .)
    mas             reduce using rule 300 (EXP -> EXP is null .)
    menos           reduce using rule 300 (EXP -> EXP is null .)
    multiplicacion  reduce using rule 300 (EXP -> EXP is null .)
    division        reduce using rule 300 (EXP -> EXP is null .)
    modulo          reduce using rule 300 (EXP -> EXP is null .)
    elevado         reduce using rule 300 (EXP -> EXP is null .)
    and             reduce using rule 300 (EXP -> EXP is null .)
    or              reduce using rule 300 (EXP -> EXP is null .)
    mayor           reduce using rule 300 (EXP -> EXP is null .)
    menor           reduce using rule 300 (EXP -> EXP is null .)
    mayor_igual     reduce using rule 300 (EXP -> EXP is null .)
    menor_igual     reduce using rule 300 (EXP -> EXP is null .)
    igual           reduce using rule 300 (EXP -> EXP is null .)
    diferente1      reduce using rule 300 (EXP -> EXP is null .)
    diferente2      reduce using rule 300 (EXP -> EXP is null .)
    between         reduce using rule 300 (EXP -> EXP is null .)
    is              reduce using rule 300 (EXP -> EXP is null .)
    isnull          reduce using rule 300 (EXP -> EXP is null .)
    notnull         reduce using rule 300 (EXP -> EXP is null .)
    as              reduce using rule 300 (EXP -> EXP is null .)
    cadenaString    reduce using rule 300 (EXP -> EXP is null .)
    cadena          reduce using rule 300 (EXP -> EXP is null .)
    id              reduce using rule 300 (EXP -> EXP is null .)
    in              reduce using rule 300 (EXP -> EXP is null .)
    not             reduce using rule 300 (EXP -> EXP is null .)
    like            reduce using rule 300 (EXP -> EXP is null .)
    then            reduce using rule 300 (EXP -> EXP is null .)
    when            reduce using rule 300 (EXP -> EXP is null .)
    parc            reduce using rule 300 (EXP -> EXP is null .)
    constraint      reduce using rule 300 (EXP -> EXP is null .)
    unique          reduce using rule 300 (EXP -> EXP is null .)
    check           reduce using rule 300 (EXP -> EXP is null .)
    default         reduce using rule 300 (EXP -> EXP is null .)
    null            reduce using rule 300 (EXP -> EXP is null .)
    primary         reduce using rule 300 (EXP -> EXP is null .)
    references      reduce using rule 300 (EXP -> EXP is null .)
    asc             reduce using rule 300 (EXP -> EXP is null .)
    desc            reduce using rule 300 (EXP -> EXP is null .)


state 228

    (303) EXP -> EXP is true .

    r_from          reduce using rule 303 (EXP -> EXP is true .)
    coma            reduce using rule 303 (EXP -> EXP is true .)
    where           reduce using rule 303 (EXP -> EXP is true .)
    group           reduce using rule 303 (EXP -> EXP is true .)
    having          reduce using rule 303 (EXP -> EXP is true .)
    union           reduce using rule 303 (EXP -> EXP is true .)
    intersect       reduce using rule 303 (EXP -> EXP is true .)
    except          reduce using rule 303 (EXP -> EXP is true .)
    order           reduce using rule 303 (EXP -> EXP is true .)
    limit           reduce using rule 303 (EXP -> EXP is true .)
    offset          reduce using rule 303 (EXP -> EXP is true .)
    ptcoma          reduce using rule 303 (EXP -> EXP is true .)
    mas             reduce using rule 303 (EXP -> EXP is true .)
    menos           reduce using rule 303 (EXP -> EXP is true .)
    multiplicacion  reduce using rule 303 (EXP -> EXP is true .)
    division        reduce using rule 303 (EXP -> EXP is true .)
    modulo          reduce using rule 303 (EXP -> EXP is true .)
    elevado         reduce using rule 303 (EXP -> EXP is true .)
    and             reduce using rule 303 (EXP -> EXP is true .)
    or              reduce using rule 303 (EXP -> EXP is true .)
    mayor           reduce using rule 303 (EXP -> EXP is true .)
    menor           reduce using rule 303 (EXP -> EXP is true .)
    mayor_igual     reduce using rule 303 (EXP -> EXP is true .)
    menor_igual     reduce using rule 303 (EXP -> EXP is true .)
    igual           reduce using rule 303 (EXP -> EXP is true .)
    diferente1      reduce using rule 303 (EXP -> EXP is true .)
    diferente2      reduce using rule 303 (EXP -> EXP is true .)
    between         reduce using rule 303 (EXP -> EXP is true .)
    is              reduce using rule 303 (EXP -> EXP is true .)
    isnull          reduce using rule 303 (EXP -> EXP is true .)
    notnull         reduce using rule 303 (EXP -> EXP is true .)
    as              reduce using rule 303 (EXP -> EXP is true .)
    cadenaString    reduce using rule 303 (EXP -> EXP is true .)
    cadena          reduce using rule 303 (EXP -> EXP is true .)
    id              reduce using rule 303 (EXP -> EXP is true .)
    in              reduce using rule 303 (EXP -> EXP is true .)
    not             reduce using rule 303 (EXP -> EXP is true .)
    like            reduce using rule 303 (EXP -> EXP is true .)
    then            reduce using rule 303 (EXP -> EXP is true .)
    when            reduce using rule 303 (EXP -> EXP is true .)
    parc            reduce using rule 303 (EXP -> EXP is true .)
    constraint      reduce using rule 303 (EXP -> EXP is true .)
    unique          reduce using rule 303 (EXP -> EXP is true .)
    check           reduce using rule 303 (EXP -> EXP is true .)
    default         reduce using rule 303 (EXP -> EXP is true .)
    null            reduce using rule 303 (EXP -> EXP is true .)
    primary         reduce using rule 303 (EXP -> EXP is true .)
    references      reduce using rule 303 (EXP -> EXP is true .)
    asc             reduce using rule 303 (EXP -> EXP is true .)
    desc            reduce using rule 303 (EXP -> EXP is true .)


state 229

    (305) EXP -> EXP is false .

    r_from          reduce using rule 305 (EXP -> EXP is false .)
    coma            reduce using rule 305 (EXP -> EXP is false .)
    where           reduce using rule 305 (EXP -> EXP is false .)
    group           reduce using rule 305 (EXP -> EXP is false .)
    having          reduce using rule 305 (EXP -> EXP is false .)
    union           reduce using rule 305 (EXP -> EXP is false .)
    intersect       reduce using rule 305 (EXP -> EXP is false .)
    except          reduce using rule 305 (EXP -> EXP is false .)
    order           reduce using rule 305 (EXP -> EXP is false .)
    limit           reduce using rule 305 (EXP -> EXP is false .)
    offset          reduce using rule 305 (EXP -> EXP is false .)
    ptcoma          reduce using rule 305 (EXP -> EXP is false .)
    mas             reduce using rule 305 (EXP -> EXP is false .)
    menos           reduce using rule 305 (EXP -> EXP is false .)
    multiplicacion  reduce using rule 305 (EXP -> EXP is false .)
    division        reduce using rule 305 (EXP -> EXP is false .)
    modulo          reduce using rule 305 (EXP -> EXP is false .)
    elevado         reduce using rule 305 (EXP -> EXP is false .)
    and             reduce using rule 305 (EXP -> EXP is false .)
    or              reduce using rule 305 (EXP -> EXP is false .)
    mayor           reduce using rule 305 (EXP -> EXP is false .)
    menor           reduce using rule 305 (EXP -> EXP is false .)
    mayor_igual     reduce using rule 305 (EXP -> EXP is false .)
    menor_igual     reduce using rule 305 (EXP -> EXP is false .)
    igual           reduce using rule 305 (EXP -> EXP is false .)
    diferente1      reduce using rule 305 (EXP -> EXP is false .)
    diferente2      reduce using rule 305 (EXP -> EXP is false .)
    between         reduce using rule 305 (EXP -> EXP is false .)
    is              reduce using rule 305 (EXP -> EXP is false .)
    isnull          reduce using rule 305 (EXP -> EXP is false .)
    notnull         reduce using rule 305 (EXP -> EXP is false .)
    as              reduce using rule 305 (EXP -> EXP is false .)
    cadenaString    reduce using rule 305 (EXP -> EXP is false .)
    cadena          reduce using rule 305 (EXP -> EXP is false .)
    id              reduce using rule 305 (EXP -> EXP is false .)
    in              reduce using rule 305 (EXP -> EXP is false .)
    not             reduce using rule 305 (EXP -> EXP is false .)
    like            reduce using rule 305 (EXP -> EXP is false .)
    then            reduce using rule 305 (EXP -> EXP is false .)
    when            reduce using rule 305 (EXP -> EXP is false .)
    parc            reduce using rule 305 (EXP -> EXP is false .)
    constraint      reduce using rule 305 (EXP -> EXP is false .)
    unique          reduce using rule 305 (EXP -> EXP is false .)
    check           reduce using rule 305 (EXP -> EXP is false .)
    default         reduce using rule 305 (EXP -> EXP is false .)
    null            reduce using rule 305 (EXP -> EXP is false .)
    primary         reduce using rule 305 (EXP -> EXP is false .)
    references      reduce using rule 305 (EXP -> EXP is false .)
    asc             reduce using rule 305 (EXP -> EXP is false .)
    desc            reduce using rule 305 (EXP -> EXP is false .)


state 230

    (307) EXP -> EXP is unknown .

    r_from          reduce using rule 307 (EXP -> EXP is unknown .)
    coma            reduce using rule 307 (EXP -> EXP is unknown .)
    where           reduce using rule 307 (EXP -> EXP is unknown .)
    group           reduce using rule 307 (EXP -> EXP is unknown .)
    having          reduce using rule 307 (EXP -> EXP is unknown .)
    union           reduce using rule 307 (EXP -> EXP is unknown .)
    intersect       reduce using rule 307 (EXP -> EXP is unknown .)
    except          reduce using rule 307 (EXP -> EXP is unknown .)
    order           reduce using rule 307 (EXP -> EXP is unknown .)
    limit           reduce using rule 307 (EXP -> EXP is unknown .)
    offset          reduce using rule 307 (EXP -> EXP is unknown .)
    ptcoma          reduce using rule 307 (EXP -> EXP is unknown .)
    mas             reduce using rule 307 (EXP -> EXP is unknown .)
    menos           reduce using rule 307 (EXP -> EXP is unknown .)
    multiplicacion  reduce using rule 307 (EXP -> EXP is unknown .)
    division        reduce using rule 307 (EXP -> EXP is unknown .)
    modulo          reduce using rule 307 (EXP -> EXP is unknown .)
    elevado         reduce using rule 307 (EXP -> EXP is unknown .)
    and             reduce using rule 307 (EXP -> EXP is unknown .)
    or              reduce using rule 307 (EXP -> EXP is unknown .)
    mayor           reduce using rule 307 (EXP -> EXP is unknown .)
    menor           reduce using rule 307 (EXP -> EXP is unknown .)
    mayor_igual     reduce using rule 307 (EXP -> EXP is unknown .)
    menor_igual     reduce using rule 307 (EXP -> EXP is unknown .)
    igual           reduce using rule 307 (EXP -> EXP is unknown .)
    diferente1      reduce using rule 307 (EXP -> EXP is unknown .)
    diferente2      reduce using rule 307 (EXP -> EXP is unknown .)
    between         reduce using rule 307 (EXP -> EXP is unknown .)
    is              reduce using rule 307 (EXP -> EXP is unknown .)
    isnull          reduce using rule 307 (EXP -> EXP is unknown .)
    notnull         reduce using rule 307 (EXP -> EXP is unknown .)
    as              reduce using rule 307 (EXP -> EXP is unknown .)
    cadenaString    reduce using rule 307 (EXP -> EXP is unknown .)
    cadena          reduce using rule 307 (EXP -> EXP is unknown .)
    id              reduce using rule 307 (EXP -> EXP is unknown .)
    in              reduce using rule 307 (EXP -> EXP is unknown .)
    not             reduce using rule 307 (EXP -> EXP is unknown .)
    like            reduce using rule 307 (EXP -> EXP is unknown .)
    then            reduce using rule 307 (EXP -> EXP is unknown .)
    when            reduce using rule 307 (EXP -> EXP is unknown .)
    parc            reduce using rule 307 (EXP -> EXP is unknown .)
    constraint      reduce using rule 307 (EXP -> EXP is unknown .)
    unique          reduce using rule 307 (EXP -> EXP is unknown .)
    check           reduce using rule 307 (EXP -> EXP is unknown .)
    default         reduce using rule 307 (EXP -> EXP is unknown .)
    null            reduce using rule 307 (EXP -> EXP is unknown .)
    primary         reduce using rule 307 (EXP -> EXP is unknown .)
    references      reduce using rule 307 (EXP -> EXP is unknown .)
    asc             reduce using rule 307 (EXP -> EXP is unknown .)
    desc            reduce using rule 307 (EXP -> EXP is unknown .)


state 231

    (323) EXP -> EXP is distinct . r_from EXP

    r_from          shift and go to state 346


state 232

    (319) EXP -> EXP not in . para EXP parc

    para            shift and go to state 347


state 233

    (320) EXP -> EXP not between . EXP
    (322) EXP -> EXP not between . symetric EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    symetric        shift and go to state 349
    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 348
    SELECT                         shift and go to state 74

state 234

    (326) EXP -> EXP not like . cadena

    cadena          shift and go to state 350


state 235

    (309) EXP -> EXP as cadenaString .

    r_from          reduce using rule 309 (EXP -> EXP as cadenaString .)
    coma            reduce using rule 309 (EXP -> EXP as cadenaString .)
    where           reduce using rule 309 (EXP -> EXP as cadenaString .)
    group           reduce using rule 309 (EXP -> EXP as cadenaString .)
    having          reduce using rule 309 (EXP -> EXP as cadenaString .)
    union           reduce using rule 309 (EXP -> EXP as cadenaString .)
    intersect       reduce using rule 309 (EXP -> EXP as cadenaString .)
    except          reduce using rule 309 (EXP -> EXP as cadenaString .)
    order           reduce using rule 309 (EXP -> EXP as cadenaString .)
    limit           reduce using rule 309 (EXP -> EXP as cadenaString .)
    offset          reduce using rule 309 (EXP -> EXP as cadenaString .)
    ptcoma          reduce using rule 309 (EXP -> EXP as cadenaString .)
    mas             reduce using rule 309 (EXP -> EXP as cadenaString .)
    menos           reduce using rule 309 (EXP -> EXP as cadenaString .)
    multiplicacion  reduce using rule 309 (EXP -> EXP as cadenaString .)
    division        reduce using rule 309 (EXP -> EXP as cadenaString .)
    modulo          reduce using rule 309 (EXP -> EXP as cadenaString .)
    elevado         reduce using rule 309 (EXP -> EXP as cadenaString .)
    and             reduce using rule 309 (EXP -> EXP as cadenaString .)
    or              reduce using rule 309 (EXP -> EXP as cadenaString .)
    mayor           reduce using rule 309 (EXP -> EXP as cadenaString .)
    menor           reduce using rule 309 (EXP -> EXP as cadenaString .)
    mayor_igual     reduce using rule 309 (EXP -> EXP as cadenaString .)
    menor_igual     reduce using rule 309 (EXP -> EXP as cadenaString .)
    igual           reduce using rule 309 (EXP -> EXP as cadenaString .)
    diferente1      reduce using rule 309 (EXP -> EXP as cadenaString .)
    diferente2      reduce using rule 309 (EXP -> EXP as cadenaString .)
    between         reduce using rule 309 (EXP -> EXP as cadenaString .)
    is              reduce using rule 309 (EXP -> EXP as cadenaString .)
    isnull          reduce using rule 309 (EXP -> EXP as cadenaString .)
    notnull         reduce using rule 309 (EXP -> EXP as cadenaString .)
    as              reduce using rule 309 (EXP -> EXP as cadenaString .)
    cadenaString    reduce using rule 309 (EXP -> EXP as cadenaString .)
    cadena          reduce using rule 309 (EXP -> EXP as cadenaString .)
    id              reduce using rule 309 (EXP -> EXP as cadenaString .)
    in              reduce using rule 309 (EXP -> EXP as cadenaString .)
    not             reduce using rule 309 (EXP -> EXP as cadenaString .)
    like            reduce using rule 309 (EXP -> EXP as cadenaString .)
    then            reduce using rule 309 (EXP -> EXP as cadenaString .)
    when            reduce using rule 309 (EXP -> EXP as cadenaString .)
    parc            reduce using rule 309 (EXP -> EXP as cadenaString .)
    constraint      reduce using rule 309 (EXP -> EXP as cadenaString .)
    unique          reduce using rule 309 (EXP -> EXP as cadenaString .)
    check           reduce using rule 309 (EXP -> EXP as cadenaString .)
    default         reduce using rule 309 (EXP -> EXP as cadenaString .)
    null            reduce using rule 309 (EXP -> EXP as cadenaString .)
    primary         reduce using rule 309 (EXP -> EXP as cadenaString .)
    references      reduce using rule 309 (EXP -> EXP as cadenaString .)
    asc             reduce using rule 309 (EXP -> EXP as cadenaString .)
    desc            reduce using rule 309 (EXP -> EXP as cadenaString .)


state 236

    (311) EXP -> EXP as cadena .

    r_from          reduce using rule 311 (EXP -> EXP as cadena .)
    coma            reduce using rule 311 (EXP -> EXP as cadena .)
    where           reduce using rule 311 (EXP -> EXP as cadena .)
    group           reduce using rule 311 (EXP -> EXP as cadena .)
    having          reduce using rule 311 (EXP -> EXP as cadena .)
    union           reduce using rule 311 (EXP -> EXP as cadena .)
    intersect       reduce using rule 311 (EXP -> EXP as cadena .)
    except          reduce using rule 311 (EXP -> EXP as cadena .)
    order           reduce using rule 311 (EXP -> EXP as cadena .)
    limit           reduce using rule 311 (EXP -> EXP as cadena .)
    offset          reduce using rule 311 (EXP -> EXP as cadena .)
    ptcoma          reduce using rule 311 (EXP -> EXP as cadena .)
    mas             reduce using rule 311 (EXP -> EXP as cadena .)
    menos           reduce using rule 311 (EXP -> EXP as cadena .)
    multiplicacion  reduce using rule 311 (EXP -> EXP as cadena .)
    division        reduce using rule 311 (EXP -> EXP as cadena .)
    modulo          reduce using rule 311 (EXP -> EXP as cadena .)
    elevado         reduce using rule 311 (EXP -> EXP as cadena .)
    and             reduce using rule 311 (EXP -> EXP as cadena .)
    or              reduce using rule 311 (EXP -> EXP as cadena .)
    mayor           reduce using rule 311 (EXP -> EXP as cadena .)
    menor           reduce using rule 311 (EXP -> EXP as cadena .)
    mayor_igual     reduce using rule 311 (EXP -> EXP as cadena .)
    menor_igual     reduce using rule 311 (EXP -> EXP as cadena .)
    igual           reduce using rule 311 (EXP -> EXP as cadena .)
    diferente1      reduce using rule 311 (EXP -> EXP as cadena .)
    diferente2      reduce using rule 311 (EXP -> EXP as cadena .)
    between         reduce using rule 311 (EXP -> EXP as cadena .)
    is              reduce using rule 311 (EXP -> EXP as cadena .)
    isnull          reduce using rule 311 (EXP -> EXP as cadena .)
    notnull         reduce using rule 311 (EXP -> EXP as cadena .)
    as              reduce using rule 311 (EXP -> EXP as cadena .)
    cadenaString    reduce using rule 311 (EXP -> EXP as cadena .)
    cadena          reduce using rule 311 (EXP -> EXP as cadena .)
    id              reduce using rule 311 (EXP -> EXP as cadena .)
    in              reduce using rule 311 (EXP -> EXP as cadena .)
    not             reduce using rule 311 (EXP -> EXP as cadena .)
    like            reduce using rule 311 (EXP -> EXP as cadena .)
    then            reduce using rule 311 (EXP -> EXP as cadena .)
    when            reduce using rule 311 (EXP -> EXP as cadena .)
    parc            reduce using rule 311 (EXP -> EXP as cadena .)
    constraint      reduce using rule 311 (EXP -> EXP as cadena .)
    unique          reduce using rule 311 (EXP -> EXP as cadena .)
    check           reduce using rule 311 (EXP -> EXP as cadena .)
    default         reduce using rule 311 (EXP -> EXP as cadena .)
    null            reduce using rule 311 (EXP -> EXP as cadena .)
    primary         reduce using rule 311 (EXP -> EXP as cadena .)
    references      reduce using rule 311 (EXP -> EXP as cadena .)
    asc             reduce using rule 311 (EXP -> EXP as cadena .)
    desc            reduce using rule 311 (EXP -> EXP as cadena .)


state 237

    (313) EXP -> EXP as id .

    r_from          reduce using rule 313 (EXP -> EXP as id .)
    coma            reduce using rule 313 (EXP -> EXP as id .)
    where           reduce using rule 313 (EXP -> EXP as id .)
    group           reduce using rule 313 (EXP -> EXP as id .)
    having          reduce using rule 313 (EXP -> EXP as id .)
    union           reduce using rule 313 (EXP -> EXP as id .)
    intersect       reduce using rule 313 (EXP -> EXP as id .)
    except          reduce using rule 313 (EXP -> EXP as id .)
    order           reduce using rule 313 (EXP -> EXP as id .)
    limit           reduce using rule 313 (EXP -> EXP as id .)
    offset          reduce using rule 313 (EXP -> EXP as id .)
    ptcoma          reduce using rule 313 (EXP -> EXP as id .)
    mas             reduce using rule 313 (EXP -> EXP as id .)
    menos           reduce using rule 313 (EXP -> EXP as id .)
    multiplicacion  reduce using rule 313 (EXP -> EXP as id .)
    division        reduce using rule 313 (EXP -> EXP as id .)
    modulo          reduce using rule 313 (EXP -> EXP as id .)
    elevado         reduce using rule 313 (EXP -> EXP as id .)
    and             reduce using rule 313 (EXP -> EXP as id .)
    or              reduce using rule 313 (EXP -> EXP as id .)
    mayor           reduce using rule 313 (EXP -> EXP as id .)
    menor           reduce using rule 313 (EXP -> EXP as id .)
    mayor_igual     reduce using rule 313 (EXP -> EXP as id .)
    menor_igual     reduce using rule 313 (EXP -> EXP as id .)
    igual           reduce using rule 313 (EXP -> EXP as id .)
    diferente1      reduce using rule 313 (EXP -> EXP as id .)
    diferente2      reduce using rule 313 (EXP -> EXP as id .)
    between         reduce using rule 313 (EXP -> EXP as id .)
    is              reduce using rule 313 (EXP -> EXP as id .)
    isnull          reduce using rule 313 (EXP -> EXP as id .)
    notnull         reduce using rule 313 (EXP -> EXP as id .)
    as              reduce using rule 313 (EXP -> EXP as id .)
    cadenaString    reduce using rule 313 (EXP -> EXP as id .)
    cadena          reduce using rule 313 (EXP -> EXP as id .)
    id              reduce using rule 313 (EXP -> EXP as id .)
    in              reduce using rule 313 (EXP -> EXP as id .)
    not             reduce using rule 313 (EXP -> EXP as id .)
    like            reduce using rule 313 (EXP -> EXP as id .)
    then            reduce using rule 313 (EXP -> EXP as id .)
    when            reduce using rule 313 (EXP -> EXP as id .)
    parc            reduce using rule 313 (EXP -> EXP as id .)
    constraint      reduce using rule 313 (EXP -> EXP as id .)
    unique          reduce using rule 313 (EXP -> EXP as id .)
    check           reduce using rule 313 (EXP -> EXP as id .)
    default         reduce using rule 313 (EXP -> EXP as id .)
    null            reduce using rule 313 (EXP -> EXP as id .)
    primary         reduce using rule 313 (EXP -> EXP as id .)
    references      reduce using rule 313 (EXP -> EXP as id .)
    asc             reduce using rule 313 (EXP -> EXP as id .)
    desc            reduce using rule 313 (EXP -> EXP as id .)


state 238

    (318) EXP -> EXP in para . EXP parc
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 351
    SELECT                         shift and go to state 74

state 239

    (325) EXP -> EXP like cadena .

    r_from          reduce using rule 325 (EXP -> EXP like cadena .)
    coma            reduce using rule 325 (EXP -> EXP like cadena .)
    where           reduce using rule 325 (EXP -> EXP like cadena .)
    group           reduce using rule 325 (EXP -> EXP like cadena .)
    having          reduce using rule 325 (EXP -> EXP like cadena .)
    union           reduce using rule 325 (EXP -> EXP like cadena .)
    intersect       reduce using rule 325 (EXP -> EXP like cadena .)
    except          reduce using rule 325 (EXP -> EXP like cadena .)
    order           reduce using rule 325 (EXP -> EXP like cadena .)
    limit           reduce using rule 325 (EXP -> EXP like cadena .)
    offset          reduce using rule 325 (EXP -> EXP like cadena .)
    ptcoma          reduce using rule 325 (EXP -> EXP like cadena .)
    mas             reduce using rule 325 (EXP -> EXP like cadena .)
    menos           reduce using rule 325 (EXP -> EXP like cadena .)
    multiplicacion  reduce using rule 325 (EXP -> EXP like cadena .)
    division        reduce using rule 325 (EXP -> EXP like cadena .)
    modulo          reduce using rule 325 (EXP -> EXP like cadena .)
    elevado         reduce using rule 325 (EXP -> EXP like cadena .)
    and             reduce using rule 325 (EXP -> EXP like cadena .)
    or              reduce using rule 325 (EXP -> EXP like cadena .)
    mayor           reduce using rule 325 (EXP -> EXP like cadena .)
    menor           reduce using rule 325 (EXP -> EXP like cadena .)
    mayor_igual     reduce using rule 325 (EXP -> EXP like cadena .)
    menor_igual     reduce using rule 325 (EXP -> EXP like cadena .)
    igual           reduce using rule 325 (EXP -> EXP like cadena .)
    diferente1      reduce using rule 325 (EXP -> EXP like cadena .)
    diferente2      reduce using rule 325 (EXP -> EXP like cadena .)
    between         reduce using rule 325 (EXP -> EXP like cadena .)
    is              reduce using rule 325 (EXP -> EXP like cadena .)
    isnull          reduce using rule 325 (EXP -> EXP like cadena .)
    notnull         reduce using rule 325 (EXP -> EXP like cadena .)
    as              reduce using rule 325 (EXP -> EXP like cadena .)
    cadenaString    reduce using rule 325 (EXP -> EXP like cadena .)
    cadena          reduce using rule 325 (EXP -> EXP like cadena .)
    id              reduce using rule 325 (EXP -> EXP like cadena .)
    in              reduce using rule 325 (EXP -> EXP like cadena .)
    not             reduce using rule 325 (EXP -> EXP like cadena .)
    like            reduce using rule 325 (EXP -> EXP like cadena .)
    then            reduce using rule 325 (EXP -> EXP like cadena .)
    when            reduce using rule 325 (EXP -> EXP like cadena .)
    parc            reduce using rule 325 (EXP -> EXP like cadena .)
    constraint      reduce using rule 325 (EXP -> EXP like cadena .)
    unique          reduce using rule 325 (EXP -> EXP like cadena .)
    check           reduce using rule 325 (EXP -> EXP like cadena .)
    default         reduce using rule 325 (EXP -> EXP like cadena .)
    null            reduce using rule 325 (EXP -> EXP like cadena .)
    primary         reduce using rule 325 (EXP -> EXP like cadena .)
    references      reduce using rule 325 (EXP -> EXP like cadena .)
    asc             reduce using rule 325 (EXP -> EXP like cadena .)
    desc            reduce using rule 325 (EXP -> EXP like cadena .)


state 240

    (348) EXP -> cadena as TIPO .

    r_from          reduce using rule 348 (EXP -> cadena as TIPO .)
    coma            reduce using rule 348 (EXP -> cadena as TIPO .)
    where           reduce using rule 348 (EXP -> cadena as TIPO .)
    group           reduce using rule 348 (EXP -> cadena as TIPO .)
    having          reduce using rule 348 (EXP -> cadena as TIPO .)
    union           reduce using rule 348 (EXP -> cadena as TIPO .)
    intersect       reduce using rule 348 (EXP -> cadena as TIPO .)
    except          reduce using rule 348 (EXP -> cadena as TIPO .)
    order           reduce using rule 348 (EXP -> cadena as TIPO .)
    limit           reduce using rule 348 (EXP -> cadena as TIPO .)
    offset          reduce using rule 348 (EXP -> cadena as TIPO .)
    ptcoma          reduce using rule 348 (EXP -> cadena as TIPO .)
    mas             reduce using rule 348 (EXP -> cadena as TIPO .)
    menos           reduce using rule 348 (EXP -> cadena as TIPO .)
    multiplicacion  reduce using rule 348 (EXP -> cadena as TIPO .)
    division        reduce using rule 348 (EXP -> cadena as TIPO .)
    modulo          reduce using rule 348 (EXP -> cadena as TIPO .)
    elevado         reduce using rule 348 (EXP -> cadena as TIPO .)
    and             reduce using rule 348 (EXP -> cadena as TIPO .)
    or              reduce using rule 348 (EXP -> cadena as TIPO .)
    mayor           reduce using rule 348 (EXP -> cadena as TIPO .)
    menor           reduce using rule 348 (EXP -> cadena as TIPO .)
    mayor_igual     reduce using rule 348 (EXP -> cadena as TIPO .)
    menor_igual     reduce using rule 348 (EXP -> cadena as TIPO .)
    igual           reduce using rule 348 (EXP -> cadena as TIPO .)
    diferente1      reduce using rule 348 (EXP -> cadena as TIPO .)
    diferente2      reduce using rule 348 (EXP -> cadena as TIPO .)
    between         reduce using rule 348 (EXP -> cadena as TIPO .)
    is              reduce using rule 348 (EXP -> cadena as TIPO .)
    isnull          reduce using rule 348 (EXP -> cadena as TIPO .)
    notnull         reduce using rule 348 (EXP -> cadena as TIPO .)
    as              reduce using rule 348 (EXP -> cadena as TIPO .)
    cadenaString    reduce using rule 348 (EXP -> cadena as TIPO .)
    cadena          reduce using rule 348 (EXP -> cadena as TIPO .)
    id              reduce using rule 348 (EXP -> cadena as TIPO .)
    in              reduce using rule 348 (EXP -> cadena as TIPO .)
    not             reduce using rule 348 (EXP -> cadena as TIPO .)
    like            reduce using rule 348 (EXP -> cadena as TIPO .)
    then            reduce using rule 348 (EXP -> cadena as TIPO .)
    when            reduce using rule 348 (EXP -> cadena as TIPO .)
    parc            reduce using rule 348 (EXP -> cadena as TIPO .)
    constraint      reduce using rule 348 (EXP -> cadena as TIPO .)
    unique          reduce using rule 348 (EXP -> cadena as TIPO .)
    check           reduce using rule 348 (EXP -> cadena as TIPO .)
    default         reduce using rule 348 (EXP -> cadena as TIPO .)
    null            reduce using rule 348 (EXP -> cadena as TIPO .)
    primary         reduce using rule 348 (EXP -> cadena as TIPO .)
    references      reduce using rule 348 (EXP -> cadena as TIPO .)
    asc             reduce using rule 348 (EXP -> cadena as TIPO .)
    desc            reduce using rule 348 (EXP -> cadena as TIPO .)


state 241

    (236) TIPO -> interval . cadena
    (246) TIPO -> interval . para int parc
    (256) TIPO -> interval . para int parc cadena
    (268) TIPO -> interval .

  ! shift/reduce conflict for cadena resolved as shift
    cadena          shift and go to state 352
    para            shift and go to state 353
    r_from          reduce using rule 268 (TIPO -> interval .)
    coma            reduce using rule 268 (TIPO -> interval .)
    where           reduce using rule 268 (TIPO -> interval .)
    group           reduce using rule 268 (TIPO -> interval .)
    having          reduce using rule 268 (TIPO -> interval .)
    union           reduce using rule 268 (TIPO -> interval .)
    intersect       reduce using rule 268 (TIPO -> interval .)
    except          reduce using rule 268 (TIPO -> interval .)
    order           reduce using rule 268 (TIPO -> interval .)
    limit           reduce using rule 268 (TIPO -> interval .)
    offset          reduce using rule 268 (TIPO -> interval .)
    ptcoma          reduce using rule 268 (TIPO -> interval .)
    mas             reduce using rule 268 (TIPO -> interval .)
    menos           reduce using rule 268 (TIPO -> interval .)
    multiplicacion  reduce using rule 268 (TIPO -> interval .)
    division        reduce using rule 268 (TIPO -> interval .)
    modulo          reduce using rule 268 (TIPO -> interval .)
    elevado         reduce using rule 268 (TIPO -> interval .)
    and             reduce using rule 268 (TIPO -> interval .)
    or              reduce using rule 268 (TIPO -> interval .)
    mayor           reduce using rule 268 (TIPO -> interval .)
    menor           reduce using rule 268 (TIPO -> interval .)
    mayor_igual     reduce using rule 268 (TIPO -> interval .)
    menor_igual     reduce using rule 268 (TIPO -> interval .)
    igual           reduce using rule 268 (TIPO -> interval .)
    diferente1      reduce using rule 268 (TIPO -> interval .)
    diferente2      reduce using rule 268 (TIPO -> interval .)
    between         reduce using rule 268 (TIPO -> interval .)
    is              reduce using rule 268 (TIPO -> interval .)
    isnull          reduce using rule 268 (TIPO -> interval .)
    notnull         reduce using rule 268 (TIPO -> interval .)
    as              reduce using rule 268 (TIPO -> interval .)
    cadenaString    reduce using rule 268 (TIPO -> interval .)
    id              reduce using rule 268 (TIPO -> interval .)
    in              reduce using rule 268 (TIPO -> interval .)
    not             reduce using rule 268 (TIPO -> interval .)
    like            reduce using rule 268 (TIPO -> interval .)
    then            reduce using rule 268 (TIPO -> interval .)
    when            reduce using rule 268 (TIPO -> interval .)
    parc            reduce using rule 268 (TIPO -> interval .)
    constraint      reduce using rule 268 (TIPO -> interval .)
    unique          reduce using rule 268 (TIPO -> interval .)
    check           reduce using rule 268 (TIPO -> interval .)
    default         reduce using rule 268 (TIPO -> interval .)
    null            reduce using rule 268 (TIPO -> interval .)
    primary         reduce using rule 268 (TIPO -> interval .)
    references      reduce using rule 268 (TIPO -> interval .)
    asc             reduce using rule 268 (TIPO -> interval .)
    desc            reduce using rule 268 (TIPO -> interval .)
    dospuntos       reduce using rule 268 (TIPO -> interval .)
    language        reduce using rule 268 (TIPO -> interval .)
    do              reduce using rule 268 (TIPO -> interval .)

  ! cadena          [ reduce using rule 268 (TIPO -> interval .) ]


state 242

    (237) TIPO -> decimal . para int coma int parc
    (238) TIPO -> decimal . para int parc
    (239) TIPO -> decimal .

    para            shift and go to state 354
    r_from          reduce using rule 239 (TIPO -> decimal .)
    coma            reduce using rule 239 (TIPO -> decimal .)
    where           reduce using rule 239 (TIPO -> decimal .)
    group           reduce using rule 239 (TIPO -> decimal .)
    having          reduce using rule 239 (TIPO -> decimal .)
    union           reduce using rule 239 (TIPO -> decimal .)
    intersect       reduce using rule 239 (TIPO -> decimal .)
    except          reduce using rule 239 (TIPO -> decimal .)
    order           reduce using rule 239 (TIPO -> decimal .)
    limit           reduce using rule 239 (TIPO -> decimal .)
    offset          reduce using rule 239 (TIPO -> decimal .)
    ptcoma          reduce using rule 239 (TIPO -> decimal .)
    mas             reduce using rule 239 (TIPO -> decimal .)
    menos           reduce using rule 239 (TIPO -> decimal .)
    multiplicacion  reduce using rule 239 (TIPO -> decimal .)
    division        reduce using rule 239 (TIPO -> decimal .)
    modulo          reduce using rule 239 (TIPO -> decimal .)
    elevado         reduce using rule 239 (TIPO -> decimal .)
    and             reduce using rule 239 (TIPO -> decimal .)
    or              reduce using rule 239 (TIPO -> decimal .)
    mayor           reduce using rule 239 (TIPO -> decimal .)
    menor           reduce using rule 239 (TIPO -> decimal .)
    mayor_igual     reduce using rule 239 (TIPO -> decimal .)
    menor_igual     reduce using rule 239 (TIPO -> decimal .)
    igual           reduce using rule 239 (TIPO -> decimal .)
    diferente1      reduce using rule 239 (TIPO -> decimal .)
    diferente2      reduce using rule 239 (TIPO -> decimal .)
    between         reduce using rule 239 (TIPO -> decimal .)
    is              reduce using rule 239 (TIPO -> decimal .)
    isnull          reduce using rule 239 (TIPO -> decimal .)
    notnull         reduce using rule 239 (TIPO -> decimal .)
    as              reduce using rule 239 (TIPO -> decimal .)
    cadenaString    reduce using rule 239 (TIPO -> decimal .)
    cadena          reduce using rule 239 (TIPO -> decimal .)
    id              reduce using rule 239 (TIPO -> decimal .)
    in              reduce using rule 239 (TIPO -> decimal .)
    not             reduce using rule 239 (TIPO -> decimal .)
    like            reduce using rule 239 (TIPO -> decimal .)
    then            reduce using rule 239 (TIPO -> decimal .)
    when            reduce using rule 239 (TIPO -> decimal .)
    parc            reduce using rule 239 (TIPO -> decimal .)
    constraint      reduce using rule 239 (TIPO -> decimal .)
    unique          reduce using rule 239 (TIPO -> decimal .)
    check           reduce using rule 239 (TIPO -> decimal .)
    default         reduce using rule 239 (TIPO -> decimal .)
    null            reduce using rule 239 (TIPO -> decimal .)
    primary         reduce using rule 239 (TIPO -> decimal .)
    references      reduce using rule 239 (TIPO -> decimal .)
    asc             reduce using rule 239 (TIPO -> decimal .)
    desc            reduce using rule 239 (TIPO -> decimal .)
    dospuntos       reduce using rule 239 (TIPO -> decimal .)
    language        reduce using rule 239 (TIPO -> decimal .)
    do              reduce using rule 239 (TIPO -> decimal .)


state 243

    (240) TIPO -> numeric . para int coma int parc
    (241) TIPO -> numeric . para int parc
    (242) TIPO -> numeric .

    para            shift and go to state 355
    r_from          reduce using rule 242 (TIPO -> numeric .)
    coma            reduce using rule 242 (TIPO -> numeric .)
    where           reduce using rule 242 (TIPO -> numeric .)
    group           reduce using rule 242 (TIPO -> numeric .)
    having          reduce using rule 242 (TIPO -> numeric .)
    union           reduce using rule 242 (TIPO -> numeric .)
    intersect       reduce using rule 242 (TIPO -> numeric .)
    except          reduce using rule 242 (TIPO -> numeric .)
    order           reduce using rule 242 (TIPO -> numeric .)
    limit           reduce using rule 242 (TIPO -> numeric .)
    offset          reduce using rule 242 (TIPO -> numeric .)
    ptcoma          reduce using rule 242 (TIPO -> numeric .)
    mas             reduce using rule 242 (TIPO -> numeric .)
    menos           reduce using rule 242 (TIPO -> numeric .)
    multiplicacion  reduce using rule 242 (TIPO -> numeric .)
    division        reduce using rule 242 (TIPO -> numeric .)
    modulo          reduce using rule 242 (TIPO -> numeric .)
    elevado         reduce using rule 242 (TIPO -> numeric .)
    and             reduce using rule 242 (TIPO -> numeric .)
    or              reduce using rule 242 (TIPO -> numeric .)
    mayor           reduce using rule 242 (TIPO -> numeric .)
    menor           reduce using rule 242 (TIPO -> numeric .)
    mayor_igual     reduce using rule 242 (TIPO -> numeric .)
    menor_igual     reduce using rule 242 (TIPO -> numeric .)
    igual           reduce using rule 242 (TIPO -> numeric .)
    diferente1      reduce using rule 242 (TIPO -> numeric .)
    diferente2      reduce using rule 242 (TIPO -> numeric .)
    between         reduce using rule 242 (TIPO -> numeric .)
    is              reduce using rule 242 (TIPO -> numeric .)
    isnull          reduce using rule 242 (TIPO -> numeric .)
    notnull         reduce using rule 242 (TIPO -> numeric .)
    as              reduce using rule 242 (TIPO -> numeric .)
    cadenaString    reduce using rule 242 (TIPO -> numeric .)
    cadena          reduce using rule 242 (TIPO -> numeric .)
    id              reduce using rule 242 (TIPO -> numeric .)
    in              reduce using rule 242 (TIPO -> numeric .)
    not             reduce using rule 242 (TIPO -> numeric .)
    like            reduce using rule 242 (TIPO -> numeric .)
    then            reduce using rule 242 (TIPO -> numeric .)
    when            reduce using rule 242 (TIPO -> numeric .)
    parc            reduce using rule 242 (TIPO -> numeric .)
    constraint      reduce using rule 242 (TIPO -> numeric .)
    unique          reduce using rule 242 (TIPO -> numeric .)
    check           reduce using rule 242 (TIPO -> numeric .)
    default         reduce using rule 242 (TIPO -> numeric .)
    null            reduce using rule 242 (TIPO -> numeric .)
    primary         reduce using rule 242 (TIPO -> numeric .)
    references      reduce using rule 242 (TIPO -> numeric .)
    asc             reduce using rule 242 (TIPO -> numeric .)
    desc            reduce using rule 242 (TIPO -> numeric .)
    dospuntos       reduce using rule 242 (TIPO -> numeric .)
    language        reduce using rule 242 (TIPO -> numeric .)
    do              reduce using rule 242 (TIPO -> numeric .)


state 244

    (243) TIPO -> varchar . para int parc
    (271) TIPO -> varchar .

    para            shift and go to state 356
    r_from          reduce using rule 271 (TIPO -> varchar .)
    coma            reduce using rule 271 (TIPO -> varchar .)
    where           reduce using rule 271 (TIPO -> varchar .)
    group           reduce using rule 271 (TIPO -> varchar .)
    having          reduce using rule 271 (TIPO -> varchar .)
    union           reduce using rule 271 (TIPO -> varchar .)
    intersect       reduce using rule 271 (TIPO -> varchar .)
    except          reduce using rule 271 (TIPO -> varchar .)
    order           reduce using rule 271 (TIPO -> varchar .)
    limit           reduce using rule 271 (TIPO -> varchar .)
    offset          reduce using rule 271 (TIPO -> varchar .)
    ptcoma          reduce using rule 271 (TIPO -> varchar .)
    mas             reduce using rule 271 (TIPO -> varchar .)
    menos           reduce using rule 271 (TIPO -> varchar .)
    multiplicacion  reduce using rule 271 (TIPO -> varchar .)
    division        reduce using rule 271 (TIPO -> varchar .)
    modulo          reduce using rule 271 (TIPO -> varchar .)
    elevado         reduce using rule 271 (TIPO -> varchar .)
    and             reduce using rule 271 (TIPO -> varchar .)
    or              reduce using rule 271 (TIPO -> varchar .)
    mayor           reduce using rule 271 (TIPO -> varchar .)
    menor           reduce using rule 271 (TIPO -> varchar .)
    mayor_igual     reduce using rule 271 (TIPO -> varchar .)
    menor_igual     reduce using rule 271 (TIPO -> varchar .)
    igual           reduce using rule 271 (TIPO -> varchar .)
    diferente1      reduce using rule 271 (TIPO -> varchar .)
    diferente2      reduce using rule 271 (TIPO -> varchar .)
    between         reduce using rule 271 (TIPO -> varchar .)
    is              reduce using rule 271 (TIPO -> varchar .)
    isnull          reduce using rule 271 (TIPO -> varchar .)
    notnull         reduce using rule 271 (TIPO -> varchar .)
    as              reduce using rule 271 (TIPO -> varchar .)
    cadenaString    reduce using rule 271 (TIPO -> varchar .)
    cadena          reduce using rule 271 (TIPO -> varchar .)
    id              reduce using rule 271 (TIPO -> varchar .)
    in              reduce using rule 271 (TIPO -> varchar .)
    not             reduce using rule 271 (TIPO -> varchar .)
    like            reduce using rule 271 (TIPO -> varchar .)
    then            reduce using rule 271 (TIPO -> varchar .)
    when            reduce using rule 271 (TIPO -> varchar .)
    parc            reduce using rule 271 (TIPO -> varchar .)
    constraint      reduce using rule 271 (TIPO -> varchar .)
    unique          reduce using rule 271 (TIPO -> varchar .)
    check           reduce using rule 271 (TIPO -> varchar .)
    default         reduce using rule 271 (TIPO -> varchar .)
    null            reduce using rule 271 (TIPO -> varchar .)
    primary         reduce using rule 271 (TIPO -> varchar .)
    references      reduce using rule 271 (TIPO -> varchar .)
    asc             reduce using rule 271 (TIPO -> varchar .)
    desc            reduce using rule 271 (TIPO -> varchar .)
    dospuntos       reduce using rule 271 (TIPO -> varchar .)
    language        reduce using rule 271 (TIPO -> varchar .)
    do              reduce using rule 271 (TIPO -> varchar .)


state 245

    (244) TIPO -> timestamp . para int parc
    (252) TIPO -> timestamp . para int parc without time zone
    (253) TIPO -> timestamp . para int parc with time zone
    (265) TIPO -> timestamp .
    (272) TIPO -> timestamp . without time zone
    (273) TIPO -> timestamp . with time zone

    para            shift and go to state 357
    r_from          reduce using rule 265 (TIPO -> timestamp .)
    coma            reduce using rule 265 (TIPO -> timestamp .)
    where           reduce using rule 265 (TIPO -> timestamp .)
    group           reduce using rule 265 (TIPO -> timestamp .)
    having          reduce using rule 265 (TIPO -> timestamp .)
    union           reduce using rule 265 (TIPO -> timestamp .)
    intersect       reduce using rule 265 (TIPO -> timestamp .)
    except          reduce using rule 265 (TIPO -> timestamp .)
    order           reduce using rule 265 (TIPO -> timestamp .)
    limit           reduce using rule 265 (TIPO -> timestamp .)
    offset          reduce using rule 265 (TIPO -> timestamp .)
    ptcoma          reduce using rule 265 (TIPO -> timestamp .)
    mas             reduce using rule 265 (TIPO -> timestamp .)
    menos           reduce using rule 265 (TIPO -> timestamp .)
    multiplicacion  reduce using rule 265 (TIPO -> timestamp .)
    division        reduce using rule 265 (TIPO -> timestamp .)
    modulo          reduce using rule 265 (TIPO -> timestamp .)
    elevado         reduce using rule 265 (TIPO -> timestamp .)
    and             reduce using rule 265 (TIPO -> timestamp .)
    or              reduce using rule 265 (TIPO -> timestamp .)
    mayor           reduce using rule 265 (TIPO -> timestamp .)
    menor           reduce using rule 265 (TIPO -> timestamp .)
    mayor_igual     reduce using rule 265 (TIPO -> timestamp .)
    menor_igual     reduce using rule 265 (TIPO -> timestamp .)
    igual           reduce using rule 265 (TIPO -> timestamp .)
    diferente1      reduce using rule 265 (TIPO -> timestamp .)
    diferente2      reduce using rule 265 (TIPO -> timestamp .)
    between         reduce using rule 265 (TIPO -> timestamp .)
    is              reduce using rule 265 (TIPO -> timestamp .)
    isnull          reduce using rule 265 (TIPO -> timestamp .)
    notnull         reduce using rule 265 (TIPO -> timestamp .)
    as              reduce using rule 265 (TIPO -> timestamp .)
    cadenaString    reduce using rule 265 (TIPO -> timestamp .)
    cadena          reduce using rule 265 (TIPO -> timestamp .)
    id              reduce using rule 265 (TIPO -> timestamp .)
    in              reduce using rule 265 (TIPO -> timestamp .)
    not             reduce using rule 265 (TIPO -> timestamp .)
    like            reduce using rule 265 (TIPO -> timestamp .)
    then            reduce using rule 265 (TIPO -> timestamp .)
    when            reduce using rule 265 (TIPO -> timestamp .)
    parc            reduce using rule 265 (TIPO -> timestamp .)
    constraint      reduce using rule 265 (TIPO -> timestamp .)
    unique          reduce using rule 265 (TIPO -> timestamp .)
    check           reduce using rule 265 (TIPO -> timestamp .)
    default         reduce using rule 265 (TIPO -> timestamp .)
    null            reduce using rule 265 (TIPO -> timestamp .)
    primary         reduce using rule 265 (TIPO -> timestamp .)
    references      reduce using rule 265 (TIPO -> timestamp .)
    asc             reduce using rule 265 (TIPO -> timestamp .)
    desc            reduce using rule 265 (TIPO -> timestamp .)
    dospuntos       reduce using rule 265 (TIPO -> timestamp .)
    language        reduce using rule 265 (TIPO -> timestamp .)
    do              reduce using rule 265 (TIPO -> timestamp .)
    without         shift and go to state 358
    with            shift and go to state 359


state 246

    (245) TIPO -> character . para int parc
    (249) TIPO -> character . varying para int parc

    para            shift and go to state 360
    varying         shift and go to state 361


state 247

    (247) TIPO -> char . para int parc

    para            shift and go to state 362


state 248

    (248) TIPO -> time . para int parc
    (254) TIPO -> time . para int parc without time zone
    (255) TIPO -> time . para int parc with time zone
    (267) TIPO -> time .
    (274) TIPO -> time . without time zone
    (275) TIPO -> time . with time zone

    para            shift and go to state 363
    r_from          reduce using rule 267 (TIPO -> time .)
    coma            reduce using rule 267 (TIPO -> time .)
    where           reduce using rule 267 (TIPO -> time .)
    group           reduce using rule 267 (TIPO -> time .)
    having          reduce using rule 267 (TIPO -> time .)
    union           reduce using rule 267 (TIPO -> time .)
    intersect       reduce using rule 267 (TIPO -> time .)
    except          reduce using rule 267 (TIPO -> time .)
    order           reduce using rule 267 (TIPO -> time .)
    limit           reduce using rule 267 (TIPO -> time .)
    offset          reduce using rule 267 (TIPO -> time .)
    ptcoma          reduce using rule 267 (TIPO -> time .)
    mas             reduce using rule 267 (TIPO -> time .)
    menos           reduce using rule 267 (TIPO -> time .)
    multiplicacion  reduce using rule 267 (TIPO -> time .)
    division        reduce using rule 267 (TIPO -> time .)
    modulo          reduce using rule 267 (TIPO -> time .)
    elevado         reduce using rule 267 (TIPO -> time .)
    and             reduce using rule 267 (TIPO -> time .)
    or              reduce using rule 267 (TIPO -> time .)
    mayor           reduce using rule 267 (TIPO -> time .)
    menor           reduce using rule 267 (TIPO -> time .)
    mayor_igual     reduce using rule 267 (TIPO -> time .)
    menor_igual     reduce using rule 267 (TIPO -> time .)
    igual           reduce using rule 267 (TIPO -> time .)
    diferente1      reduce using rule 267 (TIPO -> time .)
    diferente2      reduce using rule 267 (TIPO -> time .)
    between         reduce using rule 267 (TIPO -> time .)
    is              reduce using rule 267 (TIPO -> time .)
    isnull          reduce using rule 267 (TIPO -> time .)
    notnull         reduce using rule 267 (TIPO -> time .)
    as              reduce using rule 267 (TIPO -> time .)
    cadenaString    reduce using rule 267 (TIPO -> time .)
    cadena          reduce using rule 267 (TIPO -> time .)
    id              reduce using rule 267 (TIPO -> time .)
    in              reduce using rule 267 (TIPO -> time .)
    not             reduce using rule 267 (TIPO -> time .)
    like            reduce using rule 267 (TIPO -> time .)
    then            reduce using rule 267 (TIPO -> time .)
    when            reduce using rule 267 (TIPO -> time .)
    parc            reduce using rule 267 (TIPO -> time .)
    constraint      reduce using rule 267 (TIPO -> time .)
    unique          reduce using rule 267 (TIPO -> time .)
    check           reduce using rule 267 (TIPO -> time .)
    default         reduce using rule 267 (TIPO -> time .)
    null            reduce using rule 267 (TIPO -> time .)
    primary         reduce using rule 267 (TIPO -> time .)
    references      reduce using rule 267 (TIPO -> time .)
    asc             reduce using rule 267 (TIPO -> time .)
    desc            reduce using rule 267 (TIPO -> time .)
    dospuntos       reduce using rule 267 (TIPO -> time .)
    language        reduce using rule 267 (TIPO -> time .)
    do              reduce using rule 267 (TIPO -> time .)
    without         shift and go to state 364
    with            shift and go to state 365


state 249

    (250) TIPO -> id . modulo rowtype
    (276) TIPO -> id .

  ! shift/reduce conflict for modulo resolved as shift
    modulo          shift and go to state 366
    r_from          reduce using rule 276 (TIPO -> id .)
    coma            reduce using rule 276 (TIPO -> id .)
    where           reduce using rule 276 (TIPO -> id .)
    group           reduce using rule 276 (TIPO -> id .)
    having          reduce using rule 276 (TIPO -> id .)
    union           reduce using rule 276 (TIPO -> id .)
    intersect       reduce using rule 276 (TIPO -> id .)
    except          reduce using rule 276 (TIPO -> id .)
    order           reduce using rule 276 (TIPO -> id .)
    limit           reduce using rule 276 (TIPO -> id .)
    offset          reduce using rule 276 (TIPO -> id .)
    ptcoma          reduce using rule 276 (TIPO -> id .)
    mas             reduce using rule 276 (TIPO -> id .)
    menos           reduce using rule 276 (TIPO -> id .)
    multiplicacion  reduce using rule 276 (TIPO -> id .)
    division        reduce using rule 276 (TIPO -> id .)
    elevado         reduce using rule 276 (TIPO -> id .)
    and             reduce using rule 276 (TIPO -> id .)
    or              reduce using rule 276 (TIPO -> id .)
    mayor           reduce using rule 276 (TIPO -> id .)
    menor           reduce using rule 276 (TIPO -> id .)
    mayor_igual     reduce using rule 276 (TIPO -> id .)
    menor_igual     reduce using rule 276 (TIPO -> id .)
    igual           reduce using rule 276 (TIPO -> id .)
    diferente1      reduce using rule 276 (TIPO -> id .)
    diferente2      reduce using rule 276 (TIPO -> id .)
    between         reduce using rule 276 (TIPO -> id .)
    is              reduce using rule 276 (TIPO -> id .)
    isnull          reduce using rule 276 (TIPO -> id .)
    notnull         reduce using rule 276 (TIPO -> id .)
    as              reduce using rule 276 (TIPO -> id .)
    cadenaString    reduce using rule 276 (TIPO -> id .)
    cadena          reduce using rule 276 (TIPO -> id .)
    id              reduce using rule 276 (TIPO -> id .)
    in              reduce using rule 276 (TIPO -> id .)
    not             reduce using rule 276 (TIPO -> id .)
    like            reduce using rule 276 (TIPO -> id .)
    then            reduce using rule 276 (TIPO -> id .)
    when            reduce using rule 276 (TIPO -> id .)
    parc            reduce using rule 276 (TIPO -> id .)
    constraint      reduce using rule 276 (TIPO -> id .)
    unique          reduce using rule 276 (TIPO -> id .)
    check           reduce using rule 276 (TIPO -> id .)
    default         reduce using rule 276 (TIPO -> id .)
    null            reduce using rule 276 (TIPO -> id .)
    primary         reduce using rule 276 (TIPO -> id .)
    references      reduce using rule 276 (TIPO -> id .)
    asc             reduce using rule 276 (TIPO -> id .)
    desc            reduce using rule 276 (TIPO -> id .)
    dospuntos       reduce using rule 276 (TIPO -> id .)
    language        reduce using rule 276 (TIPO -> id .)
    do              reduce using rule 276 (TIPO -> id .)

  ! modulo          [ reduce using rule 276 (TIPO -> id .) ]


state 250

    (251) TIPO -> idPunto . modulo type

    modulo          shift and go to state 367


state 251

    (257) TIPO -> smallint .

    r_from          reduce using rule 257 (TIPO -> smallint .)
    coma            reduce using rule 257 (TIPO -> smallint .)
    where           reduce using rule 257 (TIPO -> smallint .)
    group           reduce using rule 257 (TIPO -> smallint .)
    having          reduce using rule 257 (TIPO -> smallint .)
    union           reduce using rule 257 (TIPO -> smallint .)
    intersect       reduce using rule 257 (TIPO -> smallint .)
    except          reduce using rule 257 (TIPO -> smallint .)
    order           reduce using rule 257 (TIPO -> smallint .)
    limit           reduce using rule 257 (TIPO -> smallint .)
    offset          reduce using rule 257 (TIPO -> smallint .)
    ptcoma          reduce using rule 257 (TIPO -> smallint .)
    mas             reduce using rule 257 (TIPO -> smallint .)
    menos           reduce using rule 257 (TIPO -> smallint .)
    multiplicacion  reduce using rule 257 (TIPO -> smallint .)
    division        reduce using rule 257 (TIPO -> smallint .)
    modulo          reduce using rule 257 (TIPO -> smallint .)
    elevado         reduce using rule 257 (TIPO -> smallint .)
    and             reduce using rule 257 (TIPO -> smallint .)
    or              reduce using rule 257 (TIPO -> smallint .)
    mayor           reduce using rule 257 (TIPO -> smallint .)
    menor           reduce using rule 257 (TIPO -> smallint .)
    mayor_igual     reduce using rule 257 (TIPO -> smallint .)
    menor_igual     reduce using rule 257 (TIPO -> smallint .)
    igual           reduce using rule 257 (TIPO -> smallint .)
    diferente1      reduce using rule 257 (TIPO -> smallint .)
    diferente2      reduce using rule 257 (TIPO -> smallint .)
    between         reduce using rule 257 (TIPO -> smallint .)
    is              reduce using rule 257 (TIPO -> smallint .)
    isnull          reduce using rule 257 (TIPO -> smallint .)
    notnull         reduce using rule 257 (TIPO -> smallint .)
    as              reduce using rule 257 (TIPO -> smallint .)
    cadenaString    reduce using rule 257 (TIPO -> smallint .)
    cadena          reduce using rule 257 (TIPO -> smallint .)
    id              reduce using rule 257 (TIPO -> smallint .)
    in              reduce using rule 257 (TIPO -> smallint .)
    not             reduce using rule 257 (TIPO -> smallint .)
    like            reduce using rule 257 (TIPO -> smallint .)
    then            reduce using rule 257 (TIPO -> smallint .)
    when            reduce using rule 257 (TIPO -> smallint .)
    parc            reduce using rule 257 (TIPO -> smallint .)
    constraint      reduce using rule 257 (TIPO -> smallint .)
    unique          reduce using rule 257 (TIPO -> smallint .)
    check           reduce using rule 257 (TIPO -> smallint .)
    default         reduce using rule 257 (TIPO -> smallint .)
    null            reduce using rule 257 (TIPO -> smallint .)
    primary         reduce using rule 257 (TIPO -> smallint .)
    references      reduce using rule 257 (TIPO -> smallint .)
    asc             reduce using rule 257 (TIPO -> smallint .)
    desc            reduce using rule 257 (TIPO -> smallint .)
    dospuntos       reduce using rule 257 (TIPO -> smallint .)
    language        reduce using rule 257 (TIPO -> smallint .)
    do              reduce using rule 257 (TIPO -> smallint .)


state 252

    (258) TIPO -> integer .

    r_from          reduce using rule 258 (TIPO -> integer .)
    coma            reduce using rule 258 (TIPO -> integer .)
    where           reduce using rule 258 (TIPO -> integer .)
    group           reduce using rule 258 (TIPO -> integer .)
    having          reduce using rule 258 (TIPO -> integer .)
    union           reduce using rule 258 (TIPO -> integer .)
    intersect       reduce using rule 258 (TIPO -> integer .)
    except          reduce using rule 258 (TIPO -> integer .)
    order           reduce using rule 258 (TIPO -> integer .)
    limit           reduce using rule 258 (TIPO -> integer .)
    offset          reduce using rule 258 (TIPO -> integer .)
    ptcoma          reduce using rule 258 (TIPO -> integer .)
    mas             reduce using rule 258 (TIPO -> integer .)
    menos           reduce using rule 258 (TIPO -> integer .)
    multiplicacion  reduce using rule 258 (TIPO -> integer .)
    division        reduce using rule 258 (TIPO -> integer .)
    modulo          reduce using rule 258 (TIPO -> integer .)
    elevado         reduce using rule 258 (TIPO -> integer .)
    and             reduce using rule 258 (TIPO -> integer .)
    or              reduce using rule 258 (TIPO -> integer .)
    mayor           reduce using rule 258 (TIPO -> integer .)
    menor           reduce using rule 258 (TIPO -> integer .)
    mayor_igual     reduce using rule 258 (TIPO -> integer .)
    menor_igual     reduce using rule 258 (TIPO -> integer .)
    igual           reduce using rule 258 (TIPO -> integer .)
    diferente1      reduce using rule 258 (TIPO -> integer .)
    diferente2      reduce using rule 258 (TIPO -> integer .)
    between         reduce using rule 258 (TIPO -> integer .)
    is              reduce using rule 258 (TIPO -> integer .)
    isnull          reduce using rule 258 (TIPO -> integer .)
    notnull         reduce using rule 258 (TIPO -> integer .)
    as              reduce using rule 258 (TIPO -> integer .)
    cadenaString    reduce using rule 258 (TIPO -> integer .)
    cadena          reduce using rule 258 (TIPO -> integer .)
    id              reduce using rule 258 (TIPO -> integer .)
    in              reduce using rule 258 (TIPO -> integer .)
    not             reduce using rule 258 (TIPO -> integer .)
    like            reduce using rule 258 (TIPO -> integer .)
    then            reduce using rule 258 (TIPO -> integer .)
    when            reduce using rule 258 (TIPO -> integer .)
    parc            reduce using rule 258 (TIPO -> integer .)
    constraint      reduce using rule 258 (TIPO -> integer .)
    unique          reduce using rule 258 (TIPO -> integer .)
    check           reduce using rule 258 (TIPO -> integer .)
    default         reduce using rule 258 (TIPO -> integer .)
    null            reduce using rule 258 (TIPO -> integer .)
    primary         reduce using rule 258 (TIPO -> integer .)
    references      reduce using rule 258 (TIPO -> integer .)
    asc             reduce using rule 258 (TIPO -> integer .)
    desc            reduce using rule 258 (TIPO -> integer .)
    dospuntos       reduce using rule 258 (TIPO -> integer .)
    language        reduce using rule 258 (TIPO -> integer .)
    do              reduce using rule 258 (TIPO -> integer .)


state 253

    (259) TIPO -> r_int .

    r_from          reduce using rule 259 (TIPO -> r_int .)
    coma            reduce using rule 259 (TIPO -> r_int .)
    where           reduce using rule 259 (TIPO -> r_int .)
    group           reduce using rule 259 (TIPO -> r_int .)
    having          reduce using rule 259 (TIPO -> r_int .)
    union           reduce using rule 259 (TIPO -> r_int .)
    intersect       reduce using rule 259 (TIPO -> r_int .)
    except          reduce using rule 259 (TIPO -> r_int .)
    order           reduce using rule 259 (TIPO -> r_int .)
    limit           reduce using rule 259 (TIPO -> r_int .)
    offset          reduce using rule 259 (TIPO -> r_int .)
    ptcoma          reduce using rule 259 (TIPO -> r_int .)
    mas             reduce using rule 259 (TIPO -> r_int .)
    menos           reduce using rule 259 (TIPO -> r_int .)
    multiplicacion  reduce using rule 259 (TIPO -> r_int .)
    division        reduce using rule 259 (TIPO -> r_int .)
    modulo          reduce using rule 259 (TIPO -> r_int .)
    elevado         reduce using rule 259 (TIPO -> r_int .)
    and             reduce using rule 259 (TIPO -> r_int .)
    or              reduce using rule 259 (TIPO -> r_int .)
    mayor           reduce using rule 259 (TIPO -> r_int .)
    menor           reduce using rule 259 (TIPO -> r_int .)
    mayor_igual     reduce using rule 259 (TIPO -> r_int .)
    menor_igual     reduce using rule 259 (TIPO -> r_int .)
    igual           reduce using rule 259 (TIPO -> r_int .)
    diferente1      reduce using rule 259 (TIPO -> r_int .)
    diferente2      reduce using rule 259 (TIPO -> r_int .)
    between         reduce using rule 259 (TIPO -> r_int .)
    is              reduce using rule 259 (TIPO -> r_int .)
    isnull          reduce using rule 259 (TIPO -> r_int .)
    notnull         reduce using rule 259 (TIPO -> r_int .)
    as              reduce using rule 259 (TIPO -> r_int .)
    cadenaString    reduce using rule 259 (TIPO -> r_int .)
    cadena          reduce using rule 259 (TIPO -> r_int .)
    id              reduce using rule 259 (TIPO -> r_int .)
    in              reduce using rule 259 (TIPO -> r_int .)
    not             reduce using rule 259 (TIPO -> r_int .)
    like            reduce using rule 259 (TIPO -> r_int .)
    then            reduce using rule 259 (TIPO -> r_int .)
    when            reduce using rule 259 (TIPO -> r_int .)
    parc            reduce using rule 259 (TIPO -> r_int .)
    constraint      reduce using rule 259 (TIPO -> r_int .)
    unique          reduce using rule 259 (TIPO -> r_int .)
    check           reduce using rule 259 (TIPO -> r_int .)
    default         reduce using rule 259 (TIPO -> r_int .)
    null            reduce using rule 259 (TIPO -> r_int .)
    primary         reduce using rule 259 (TIPO -> r_int .)
    references      reduce using rule 259 (TIPO -> r_int .)
    asc             reduce using rule 259 (TIPO -> r_int .)
    desc            reduce using rule 259 (TIPO -> r_int .)
    dospuntos       reduce using rule 259 (TIPO -> r_int .)
    language        reduce using rule 259 (TIPO -> r_int .)
    do              reduce using rule 259 (TIPO -> r_int .)


state 254

    (260) TIPO -> bigint .

    r_from          reduce using rule 260 (TIPO -> bigint .)
    coma            reduce using rule 260 (TIPO -> bigint .)
    where           reduce using rule 260 (TIPO -> bigint .)
    group           reduce using rule 260 (TIPO -> bigint .)
    having          reduce using rule 260 (TIPO -> bigint .)
    union           reduce using rule 260 (TIPO -> bigint .)
    intersect       reduce using rule 260 (TIPO -> bigint .)
    except          reduce using rule 260 (TIPO -> bigint .)
    order           reduce using rule 260 (TIPO -> bigint .)
    limit           reduce using rule 260 (TIPO -> bigint .)
    offset          reduce using rule 260 (TIPO -> bigint .)
    ptcoma          reduce using rule 260 (TIPO -> bigint .)
    mas             reduce using rule 260 (TIPO -> bigint .)
    menos           reduce using rule 260 (TIPO -> bigint .)
    multiplicacion  reduce using rule 260 (TIPO -> bigint .)
    division        reduce using rule 260 (TIPO -> bigint .)
    modulo          reduce using rule 260 (TIPO -> bigint .)
    elevado         reduce using rule 260 (TIPO -> bigint .)
    and             reduce using rule 260 (TIPO -> bigint .)
    or              reduce using rule 260 (TIPO -> bigint .)
    mayor           reduce using rule 260 (TIPO -> bigint .)
    menor           reduce using rule 260 (TIPO -> bigint .)
    mayor_igual     reduce using rule 260 (TIPO -> bigint .)
    menor_igual     reduce using rule 260 (TIPO -> bigint .)
    igual           reduce using rule 260 (TIPO -> bigint .)
    diferente1      reduce using rule 260 (TIPO -> bigint .)
    diferente2      reduce using rule 260 (TIPO -> bigint .)
    between         reduce using rule 260 (TIPO -> bigint .)
    is              reduce using rule 260 (TIPO -> bigint .)
    isnull          reduce using rule 260 (TIPO -> bigint .)
    notnull         reduce using rule 260 (TIPO -> bigint .)
    as              reduce using rule 260 (TIPO -> bigint .)
    cadenaString    reduce using rule 260 (TIPO -> bigint .)
    cadena          reduce using rule 260 (TIPO -> bigint .)
    id              reduce using rule 260 (TIPO -> bigint .)
    in              reduce using rule 260 (TIPO -> bigint .)
    not             reduce using rule 260 (TIPO -> bigint .)
    like            reduce using rule 260 (TIPO -> bigint .)
    then            reduce using rule 260 (TIPO -> bigint .)
    when            reduce using rule 260 (TIPO -> bigint .)
    parc            reduce using rule 260 (TIPO -> bigint .)
    constraint      reduce using rule 260 (TIPO -> bigint .)
    unique          reduce using rule 260 (TIPO -> bigint .)
    check           reduce using rule 260 (TIPO -> bigint .)
    default         reduce using rule 260 (TIPO -> bigint .)
    null            reduce using rule 260 (TIPO -> bigint .)
    primary         reduce using rule 260 (TIPO -> bigint .)
    references      reduce using rule 260 (TIPO -> bigint .)
    asc             reduce using rule 260 (TIPO -> bigint .)
    desc            reduce using rule 260 (TIPO -> bigint .)
    dospuntos       reduce using rule 260 (TIPO -> bigint .)
    language        reduce using rule 260 (TIPO -> bigint .)
    do              reduce using rule 260 (TIPO -> bigint .)


state 255

    (261) TIPO -> real .

    r_from          reduce using rule 261 (TIPO -> real .)
    coma            reduce using rule 261 (TIPO -> real .)
    where           reduce using rule 261 (TIPO -> real .)
    group           reduce using rule 261 (TIPO -> real .)
    having          reduce using rule 261 (TIPO -> real .)
    union           reduce using rule 261 (TIPO -> real .)
    intersect       reduce using rule 261 (TIPO -> real .)
    except          reduce using rule 261 (TIPO -> real .)
    order           reduce using rule 261 (TIPO -> real .)
    limit           reduce using rule 261 (TIPO -> real .)
    offset          reduce using rule 261 (TIPO -> real .)
    ptcoma          reduce using rule 261 (TIPO -> real .)
    mas             reduce using rule 261 (TIPO -> real .)
    menos           reduce using rule 261 (TIPO -> real .)
    multiplicacion  reduce using rule 261 (TIPO -> real .)
    division        reduce using rule 261 (TIPO -> real .)
    modulo          reduce using rule 261 (TIPO -> real .)
    elevado         reduce using rule 261 (TIPO -> real .)
    and             reduce using rule 261 (TIPO -> real .)
    or              reduce using rule 261 (TIPO -> real .)
    mayor           reduce using rule 261 (TIPO -> real .)
    menor           reduce using rule 261 (TIPO -> real .)
    mayor_igual     reduce using rule 261 (TIPO -> real .)
    menor_igual     reduce using rule 261 (TIPO -> real .)
    igual           reduce using rule 261 (TIPO -> real .)
    diferente1      reduce using rule 261 (TIPO -> real .)
    diferente2      reduce using rule 261 (TIPO -> real .)
    between         reduce using rule 261 (TIPO -> real .)
    is              reduce using rule 261 (TIPO -> real .)
    isnull          reduce using rule 261 (TIPO -> real .)
    notnull         reduce using rule 261 (TIPO -> real .)
    as              reduce using rule 261 (TIPO -> real .)
    cadenaString    reduce using rule 261 (TIPO -> real .)
    cadena          reduce using rule 261 (TIPO -> real .)
    id              reduce using rule 261 (TIPO -> real .)
    in              reduce using rule 261 (TIPO -> real .)
    not             reduce using rule 261 (TIPO -> real .)
    like            reduce using rule 261 (TIPO -> real .)
    then            reduce using rule 261 (TIPO -> real .)
    when            reduce using rule 261 (TIPO -> real .)
    parc            reduce using rule 261 (TIPO -> real .)
    constraint      reduce using rule 261 (TIPO -> real .)
    unique          reduce using rule 261 (TIPO -> real .)
    check           reduce using rule 261 (TIPO -> real .)
    default         reduce using rule 261 (TIPO -> real .)
    null            reduce using rule 261 (TIPO -> real .)
    primary         reduce using rule 261 (TIPO -> real .)
    references      reduce using rule 261 (TIPO -> real .)
    asc             reduce using rule 261 (TIPO -> real .)
    desc            reduce using rule 261 (TIPO -> real .)
    dospuntos       reduce using rule 261 (TIPO -> real .)
    language        reduce using rule 261 (TIPO -> real .)
    do              reduce using rule 261 (TIPO -> real .)


state 256

    (262) TIPO -> double . precision

    precision       shift and go to state 368


state 257

    (263) TIPO -> money .

    r_from          reduce using rule 263 (TIPO -> money .)
    coma            reduce using rule 263 (TIPO -> money .)
    where           reduce using rule 263 (TIPO -> money .)
    group           reduce using rule 263 (TIPO -> money .)
    having          reduce using rule 263 (TIPO -> money .)
    union           reduce using rule 263 (TIPO -> money .)
    intersect       reduce using rule 263 (TIPO -> money .)
    except          reduce using rule 263 (TIPO -> money .)
    order           reduce using rule 263 (TIPO -> money .)
    limit           reduce using rule 263 (TIPO -> money .)
    offset          reduce using rule 263 (TIPO -> money .)
    ptcoma          reduce using rule 263 (TIPO -> money .)
    mas             reduce using rule 263 (TIPO -> money .)
    menos           reduce using rule 263 (TIPO -> money .)
    multiplicacion  reduce using rule 263 (TIPO -> money .)
    division        reduce using rule 263 (TIPO -> money .)
    modulo          reduce using rule 263 (TIPO -> money .)
    elevado         reduce using rule 263 (TIPO -> money .)
    and             reduce using rule 263 (TIPO -> money .)
    or              reduce using rule 263 (TIPO -> money .)
    mayor           reduce using rule 263 (TIPO -> money .)
    menor           reduce using rule 263 (TIPO -> money .)
    mayor_igual     reduce using rule 263 (TIPO -> money .)
    menor_igual     reduce using rule 263 (TIPO -> money .)
    igual           reduce using rule 263 (TIPO -> money .)
    diferente1      reduce using rule 263 (TIPO -> money .)
    diferente2      reduce using rule 263 (TIPO -> money .)
    between         reduce using rule 263 (TIPO -> money .)
    is              reduce using rule 263 (TIPO -> money .)
    isnull          reduce using rule 263 (TIPO -> money .)
    notnull         reduce using rule 263 (TIPO -> money .)
    as              reduce using rule 263 (TIPO -> money .)
    cadenaString    reduce using rule 263 (TIPO -> money .)
    cadena          reduce using rule 263 (TIPO -> money .)
    id              reduce using rule 263 (TIPO -> money .)
    in              reduce using rule 263 (TIPO -> money .)
    not             reduce using rule 263 (TIPO -> money .)
    like            reduce using rule 263 (TIPO -> money .)
    then            reduce using rule 263 (TIPO -> money .)
    when            reduce using rule 263 (TIPO -> money .)
    parc            reduce using rule 263 (TIPO -> money .)
    constraint      reduce using rule 263 (TIPO -> money .)
    unique          reduce using rule 263 (TIPO -> money .)
    check           reduce using rule 263 (TIPO -> money .)
    default         reduce using rule 263 (TIPO -> money .)
    null            reduce using rule 263 (TIPO -> money .)
    primary         reduce using rule 263 (TIPO -> money .)
    references      reduce using rule 263 (TIPO -> money .)
    asc             reduce using rule 263 (TIPO -> money .)
    desc            reduce using rule 263 (TIPO -> money .)
    dospuntos       reduce using rule 263 (TIPO -> money .)
    language        reduce using rule 263 (TIPO -> money .)
    do              reduce using rule 263 (TIPO -> money .)


state 258

    (264) TIPO -> text .

    r_from          reduce using rule 264 (TIPO -> text .)
    coma            reduce using rule 264 (TIPO -> text .)
    where           reduce using rule 264 (TIPO -> text .)
    group           reduce using rule 264 (TIPO -> text .)
    having          reduce using rule 264 (TIPO -> text .)
    union           reduce using rule 264 (TIPO -> text .)
    intersect       reduce using rule 264 (TIPO -> text .)
    except          reduce using rule 264 (TIPO -> text .)
    order           reduce using rule 264 (TIPO -> text .)
    limit           reduce using rule 264 (TIPO -> text .)
    offset          reduce using rule 264 (TIPO -> text .)
    ptcoma          reduce using rule 264 (TIPO -> text .)
    mas             reduce using rule 264 (TIPO -> text .)
    menos           reduce using rule 264 (TIPO -> text .)
    multiplicacion  reduce using rule 264 (TIPO -> text .)
    division        reduce using rule 264 (TIPO -> text .)
    modulo          reduce using rule 264 (TIPO -> text .)
    elevado         reduce using rule 264 (TIPO -> text .)
    and             reduce using rule 264 (TIPO -> text .)
    or              reduce using rule 264 (TIPO -> text .)
    mayor           reduce using rule 264 (TIPO -> text .)
    menor           reduce using rule 264 (TIPO -> text .)
    mayor_igual     reduce using rule 264 (TIPO -> text .)
    menor_igual     reduce using rule 264 (TIPO -> text .)
    igual           reduce using rule 264 (TIPO -> text .)
    diferente1      reduce using rule 264 (TIPO -> text .)
    diferente2      reduce using rule 264 (TIPO -> text .)
    between         reduce using rule 264 (TIPO -> text .)
    is              reduce using rule 264 (TIPO -> text .)
    isnull          reduce using rule 264 (TIPO -> text .)
    notnull         reduce using rule 264 (TIPO -> text .)
    as              reduce using rule 264 (TIPO -> text .)
    cadenaString    reduce using rule 264 (TIPO -> text .)
    cadena          reduce using rule 264 (TIPO -> text .)
    id              reduce using rule 264 (TIPO -> text .)
    in              reduce using rule 264 (TIPO -> text .)
    not             reduce using rule 264 (TIPO -> text .)
    like            reduce using rule 264 (TIPO -> text .)
    then            reduce using rule 264 (TIPO -> text .)
    when            reduce using rule 264 (TIPO -> text .)
    parc            reduce using rule 264 (TIPO -> text .)
    constraint      reduce using rule 264 (TIPO -> text .)
    unique          reduce using rule 264 (TIPO -> text .)
    check           reduce using rule 264 (TIPO -> text .)
    default         reduce using rule 264 (TIPO -> text .)
    null            reduce using rule 264 (TIPO -> text .)
    primary         reduce using rule 264 (TIPO -> text .)
    references      reduce using rule 264 (TIPO -> text .)
    asc             reduce using rule 264 (TIPO -> text .)
    desc            reduce using rule 264 (TIPO -> text .)
    dospuntos       reduce using rule 264 (TIPO -> text .)
    language        reduce using rule 264 (TIPO -> text .)
    do              reduce using rule 264 (TIPO -> text .)


state 259

    (266) TIPO -> date .

    r_from          reduce using rule 266 (TIPO -> date .)
    coma            reduce using rule 266 (TIPO -> date .)
    where           reduce using rule 266 (TIPO -> date .)
    group           reduce using rule 266 (TIPO -> date .)
    having          reduce using rule 266 (TIPO -> date .)
    union           reduce using rule 266 (TIPO -> date .)
    intersect       reduce using rule 266 (TIPO -> date .)
    except          reduce using rule 266 (TIPO -> date .)
    order           reduce using rule 266 (TIPO -> date .)
    limit           reduce using rule 266 (TIPO -> date .)
    offset          reduce using rule 266 (TIPO -> date .)
    ptcoma          reduce using rule 266 (TIPO -> date .)
    mas             reduce using rule 266 (TIPO -> date .)
    menos           reduce using rule 266 (TIPO -> date .)
    multiplicacion  reduce using rule 266 (TIPO -> date .)
    division        reduce using rule 266 (TIPO -> date .)
    modulo          reduce using rule 266 (TIPO -> date .)
    elevado         reduce using rule 266 (TIPO -> date .)
    and             reduce using rule 266 (TIPO -> date .)
    or              reduce using rule 266 (TIPO -> date .)
    mayor           reduce using rule 266 (TIPO -> date .)
    menor           reduce using rule 266 (TIPO -> date .)
    mayor_igual     reduce using rule 266 (TIPO -> date .)
    menor_igual     reduce using rule 266 (TIPO -> date .)
    igual           reduce using rule 266 (TIPO -> date .)
    diferente1      reduce using rule 266 (TIPO -> date .)
    diferente2      reduce using rule 266 (TIPO -> date .)
    between         reduce using rule 266 (TIPO -> date .)
    is              reduce using rule 266 (TIPO -> date .)
    isnull          reduce using rule 266 (TIPO -> date .)
    notnull         reduce using rule 266 (TIPO -> date .)
    as              reduce using rule 266 (TIPO -> date .)
    cadenaString    reduce using rule 266 (TIPO -> date .)
    cadena          reduce using rule 266 (TIPO -> date .)
    id              reduce using rule 266 (TIPO -> date .)
    in              reduce using rule 266 (TIPO -> date .)
    not             reduce using rule 266 (TIPO -> date .)
    like            reduce using rule 266 (TIPO -> date .)
    then            reduce using rule 266 (TIPO -> date .)
    when            reduce using rule 266 (TIPO -> date .)
    parc            reduce using rule 266 (TIPO -> date .)
    constraint      reduce using rule 266 (TIPO -> date .)
    unique          reduce using rule 266 (TIPO -> date .)
    check           reduce using rule 266 (TIPO -> date .)
    default         reduce using rule 266 (TIPO -> date .)
    null            reduce using rule 266 (TIPO -> date .)
    primary         reduce using rule 266 (TIPO -> date .)
    references      reduce using rule 266 (TIPO -> date .)
    asc             reduce using rule 266 (TIPO -> date .)
    desc            reduce using rule 266 (TIPO -> date .)
    dospuntos       reduce using rule 266 (TIPO -> date .)
    language        reduce using rule 266 (TIPO -> date .)
    do              reduce using rule 266 (TIPO -> date .)


state 260

    (269) TIPO -> boolean .

    r_from          reduce using rule 269 (TIPO -> boolean .)
    coma            reduce using rule 269 (TIPO -> boolean .)
    where           reduce using rule 269 (TIPO -> boolean .)
    group           reduce using rule 269 (TIPO -> boolean .)
    having          reduce using rule 269 (TIPO -> boolean .)
    union           reduce using rule 269 (TIPO -> boolean .)
    intersect       reduce using rule 269 (TIPO -> boolean .)
    except          reduce using rule 269 (TIPO -> boolean .)
    order           reduce using rule 269 (TIPO -> boolean .)
    limit           reduce using rule 269 (TIPO -> boolean .)
    offset          reduce using rule 269 (TIPO -> boolean .)
    ptcoma          reduce using rule 269 (TIPO -> boolean .)
    mas             reduce using rule 269 (TIPO -> boolean .)
    menos           reduce using rule 269 (TIPO -> boolean .)
    multiplicacion  reduce using rule 269 (TIPO -> boolean .)
    division        reduce using rule 269 (TIPO -> boolean .)
    modulo          reduce using rule 269 (TIPO -> boolean .)
    elevado         reduce using rule 269 (TIPO -> boolean .)
    and             reduce using rule 269 (TIPO -> boolean .)
    or              reduce using rule 269 (TIPO -> boolean .)
    mayor           reduce using rule 269 (TIPO -> boolean .)
    menor           reduce using rule 269 (TIPO -> boolean .)
    mayor_igual     reduce using rule 269 (TIPO -> boolean .)
    menor_igual     reduce using rule 269 (TIPO -> boolean .)
    igual           reduce using rule 269 (TIPO -> boolean .)
    diferente1      reduce using rule 269 (TIPO -> boolean .)
    diferente2      reduce using rule 269 (TIPO -> boolean .)
    between         reduce using rule 269 (TIPO -> boolean .)
    is              reduce using rule 269 (TIPO -> boolean .)
    isnull          reduce using rule 269 (TIPO -> boolean .)
    notnull         reduce using rule 269 (TIPO -> boolean .)
    as              reduce using rule 269 (TIPO -> boolean .)
    cadenaString    reduce using rule 269 (TIPO -> boolean .)
    cadena          reduce using rule 269 (TIPO -> boolean .)
    id              reduce using rule 269 (TIPO -> boolean .)
    in              reduce using rule 269 (TIPO -> boolean .)
    not             reduce using rule 269 (TIPO -> boolean .)
    like            reduce using rule 269 (TIPO -> boolean .)
    then            reduce using rule 269 (TIPO -> boolean .)
    when            reduce using rule 269 (TIPO -> boolean .)
    parc            reduce using rule 269 (TIPO -> boolean .)
    constraint      reduce using rule 269 (TIPO -> boolean .)
    unique          reduce using rule 269 (TIPO -> boolean .)
    check           reduce using rule 269 (TIPO -> boolean .)
    default         reduce using rule 269 (TIPO -> boolean .)
    null            reduce using rule 269 (TIPO -> boolean .)
    primary         reduce using rule 269 (TIPO -> boolean .)
    references      reduce using rule 269 (TIPO -> boolean .)
    asc             reduce using rule 269 (TIPO -> boolean .)
    desc            reduce using rule 269 (TIPO -> boolean .)
    dospuntos       reduce using rule 269 (TIPO -> boolean .)
    language        reduce using rule 269 (TIPO -> boolean .)
    do              reduce using rule 269 (TIPO -> boolean .)


state 261

    (270) TIPO -> record .

    r_from          reduce using rule 270 (TIPO -> record .)
    coma            reduce using rule 270 (TIPO -> record .)
    where           reduce using rule 270 (TIPO -> record .)
    group           reduce using rule 270 (TIPO -> record .)
    having          reduce using rule 270 (TIPO -> record .)
    union           reduce using rule 270 (TIPO -> record .)
    intersect       reduce using rule 270 (TIPO -> record .)
    except          reduce using rule 270 (TIPO -> record .)
    order           reduce using rule 270 (TIPO -> record .)
    limit           reduce using rule 270 (TIPO -> record .)
    offset          reduce using rule 270 (TIPO -> record .)
    ptcoma          reduce using rule 270 (TIPO -> record .)
    mas             reduce using rule 270 (TIPO -> record .)
    menos           reduce using rule 270 (TIPO -> record .)
    multiplicacion  reduce using rule 270 (TIPO -> record .)
    division        reduce using rule 270 (TIPO -> record .)
    modulo          reduce using rule 270 (TIPO -> record .)
    elevado         reduce using rule 270 (TIPO -> record .)
    and             reduce using rule 270 (TIPO -> record .)
    or              reduce using rule 270 (TIPO -> record .)
    mayor           reduce using rule 270 (TIPO -> record .)
    menor           reduce using rule 270 (TIPO -> record .)
    mayor_igual     reduce using rule 270 (TIPO -> record .)
    menor_igual     reduce using rule 270 (TIPO -> record .)
    igual           reduce using rule 270 (TIPO -> record .)
    diferente1      reduce using rule 270 (TIPO -> record .)
    diferente2      reduce using rule 270 (TIPO -> record .)
    between         reduce using rule 270 (TIPO -> record .)
    is              reduce using rule 270 (TIPO -> record .)
    isnull          reduce using rule 270 (TIPO -> record .)
    notnull         reduce using rule 270 (TIPO -> record .)
    as              reduce using rule 270 (TIPO -> record .)
    cadenaString    reduce using rule 270 (TIPO -> record .)
    cadena          reduce using rule 270 (TIPO -> record .)
    id              reduce using rule 270 (TIPO -> record .)
    in              reduce using rule 270 (TIPO -> record .)
    not             reduce using rule 270 (TIPO -> record .)
    like            reduce using rule 270 (TIPO -> record .)
    then            reduce using rule 270 (TIPO -> record .)
    when            reduce using rule 270 (TIPO -> record .)
    parc            reduce using rule 270 (TIPO -> record .)
    constraint      reduce using rule 270 (TIPO -> record .)
    unique          reduce using rule 270 (TIPO -> record .)
    check           reduce using rule 270 (TIPO -> record .)
    default         reduce using rule 270 (TIPO -> record .)
    null            reduce using rule 270 (TIPO -> record .)
    primary         reduce using rule 270 (TIPO -> record .)
    references      reduce using rule 270 (TIPO -> record .)
    asc             reduce using rule 270 (TIPO -> record .)
    desc            reduce using rule 270 (TIPO -> record .)
    dospuntos       reduce using rule 270 (TIPO -> record .)
    language        reduce using rule 270 (TIPO -> record .)
    do              reduce using rule 270 (TIPO -> record .)


state 262

    (329) EXP -> id para LEXP . parc
    (234) LEXP -> LEXP . coma EXP

    parc            shift and go to state 369
    coma            shift and go to state 128


state 263

    (330) EXP -> id para parc .

    r_from          reduce using rule 330 (EXP -> id para parc .)
    coma            reduce using rule 330 (EXP -> id para parc .)
    where           reduce using rule 330 (EXP -> id para parc .)
    group           reduce using rule 330 (EXP -> id para parc .)
    having          reduce using rule 330 (EXP -> id para parc .)
    union           reduce using rule 330 (EXP -> id para parc .)
    intersect       reduce using rule 330 (EXP -> id para parc .)
    except          reduce using rule 330 (EXP -> id para parc .)
    order           reduce using rule 330 (EXP -> id para parc .)
    limit           reduce using rule 330 (EXP -> id para parc .)
    offset          reduce using rule 330 (EXP -> id para parc .)
    ptcoma          reduce using rule 330 (EXP -> id para parc .)
    mas             reduce using rule 330 (EXP -> id para parc .)
    menos           reduce using rule 330 (EXP -> id para parc .)
    multiplicacion  reduce using rule 330 (EXP -> id para parc .)
    division        reduce using rule 330 (EXP -> id para parc .)
    modulo          reduce using rule 330 (EXP -> id para parc .)
    elevado         reduce using rule 330 (EXP -> id para parc .)
    and             reduce using rule 330 (EXP -> id para parc .)
    or              reduce using rule 330 (EXP -> id para parc .)
    mayor           reduce using rule 330 (EXP -> id para parc .)
    menor           reduce using rule 330 (EXP -> id para parc .)
    mayor_igual     reduce using rule 330 (EXP -> id para parc .)
    menor_igual     reduce using rule 330 (EXP -> id para parc .)
    igual           reduce using rule 330 (EXP -> id para parc .)
    diferente1      reduce using rule 330 (EXP -> id para parc .)
    diferente2      reduce using rule 330 (EXP -> id para parc .)
    between         reduce using rule 330 (EXP -> id para parc .)
    is              reduce using rule 330 (EXP -> id para parc .)
    isnull          reduce using rule 330 (EXP -> id para parc .)
    notnull         reduce using rule 330 (EXP -> id para parc .)
    as              reduce using rule 330 (EXP -> id para parc .)
    cadenaString    reduce using rule 330 (EXP -> id para parc .)
    cadena          reduce using rule 330 (EXP -> id para parc .)
    id              reduce using rule 330 (EXP -> id para parc .)
    in              reduce using rule 330 (EXP -> id para parc .)
    not             reduce using rule 330 (EXP -> id para parc .)
    like            reduce using rule 330 (EXP -> id para parc .)
    then            reduce using rule 330 (EXP -> id para parc .)
    when            reduce using rule 330 (EXP -> id para parc .)
    parc            reduce using rule 330 (EXP -> id para parc .)
    constraint      reduce using rule 330 (EXP -> id para parc .)
    unique          reduce using rule 330 (EXP -> id para parc .)
    check           reduce using rule 330 (EXP -> id para parc .)
    default         reduce using rule 330 (EXP -> id para parc .)
    null            reduce using rule 330 (EXP -> id para parc .)
    primary         reduce using rule 330 (EXP -> id para parc .)
    references      reduce using rule 330 (EXP -> id para parc .)
    asc             reduce using rule 330 (EXP -> id para parc .)
    desc            reduce using rule 330 (EXP -> id para parc .)


state 264

    (328) EXP -> para EXP parc .

    r_from          reduce using rule 328 (EXP -> para EXP parc .)
    coma            reduce using rule 328 (EXP -> para EXP parc .)
    where           reduce using rule 328 (EXP -> para EXP parc .)
    group           reduce using rule 328 (EXP -> para EXP parc .)
    having          reduce using rule 328 (EXP -> para EXP parc .)
    union           reduce using rule 328 (EXP -> para EXP parc .)
    intersect       reduce using rule 328 (EXP -> para EXP parc .)
    except          reduce using rule 328 (EXP -> para EXP parc .)
    order           reduce using rule 328 (EXP -> para EXP parc .)
    limit           reduce using rule 328 (EXP -> para EXP parc .)
    offset          reduce using rule 328 (EXP -> para EXP parc .)
    ptcoma          reduce using rule 328 (EXP -> para EXP parc .)
    mas             reduce using rule 328 (EXP -> para EXP parc .)
    menos           reduce using rule 328 (EXP -> para EXP parc .)
    multiplicacion  reduce using rule 328 (EXP -> para EXP parc .)
    division        reduce using rule 328 (EXP -> para EXP parc .)
    modulo          reduce using rule 328 (EXP -> para EXP parc .)
    elevado         reduce using rule 328 (EXP -> para EXP parc .)
    and             reduce using rule 328 (EXP -> para EXP parc .)
    or              reduce using rule 328 (EXP -> para EXP parc .)
    mayor           reduce using rule 328 (EXP -> para EXP parc .)
    menor           reduce using rule 328 (EXP -> para EXP parc .)
    mayor_igual     reduce using rule 328 (EXP -> para EXP parc .)
    menor_igual     reduce using rule 328 (EXP -> para EXP parc .)
    igual           reduce using rule 328 (EXP -> para EXP parc .)
    diferente1      reduce using rule 328 (EXP -> para EXP parc .)
    diferente2      reduce using rule 328 (EXP -> para EXP parc .)
    between         reduce using rule 328 (EXP -> para EXP parc .)
    is              reduce using rule 328 (EXP -> para EXP parc .)
    isnull          reduce using rule 328 (EXP -> para EXP parc .)
    notnull         reduce using rule 328 (EXP -> para EXP parc .)
    as              reduce using rule 328 (EXP -> para EXP parc .)
    cadenaString    reduce using rule 328 (EXP -> para EXP parc .)
    cadena          reduce using rule 328 (EXP -> para EXP parc .)
    id              reduce using rule 328 (EXP -> para EXP parc .)
    in              reduce using rule 328 (EXP -> para EXP parc .)
    not             reduce using rule 328 (EXP -> para EXP parc .)
    like            reduce using rule 328 (EXP -> para EXP parc .)
    then            reduce using rule 328 (EXP -> para EXP parc .)
    when            reduce using rule 328 (EXP -> para EXP parc .)
    parc            reduce using rule 328 (EXP -> para EXP parc .)
    constraint      reduce using rule 328 (EXP -> para EXP parc .)
    unique          reduce using rule 328 (EXP -> para EXP parc .)
    check           reduce using rule 328 (EXP -> para EXP parc .)
    default         reduce using rule 328 (EXP -> para EXP parc .)
    null            reduce using rule 328 (EXP -> para EXP parc .)
    primary         reduce using rule 328 (EXP -> para EXP parc .)
    references      reduce using rule 328 (EXP -> para EXP parc .)
    asc             reduce using rule 328 (EXP -> para EXP parc .)
    desc            reduce using rule 328 (EXP -> para EXP parc .)


state 265

    (331) EXP -> any para LEXP . parc
    (234) LEXP -> LEXP . coma EXP

    parc            shift and go to state 370
    coma            shift and go to state 128


state 266

    (332) EXP -> all para LEXP . parc
    (234) LEXP -> LEXP . coma EXP

    parc            shift and go to state 371
    coma            shift and go to state 128


state 267

    (333) EXP -> some para LEXP . parc
    (234) LEXP -> LEXP . coma EXP

    parc            shift and go to state 372
    coma            shift and go to state 128


state 268

    (334) EXP -> extract para FIELDS . r_from timestamp cadena parc

    r_from          shift and go to state 373


state 269

    (277) FIELDS -> year .

    r_from          reduce using rule 277 (FIELDS -> year .)


state 270

    (278) FIELDS -> month .

    r_from          reduce using rule 278 (FIELDS -> month .)


state 271

    (279) FIELDS -> day .

    r_from          reduce using rule 279 (FIELDS -> day .)


state 272

    (280) FIELDS -> hour .

    r_from          reduce using rule 280 (FIELDS -> hour .)


state 273

    (281) FIELDS -> minute .

    r_from          reduce using rule 281 (FIELDS -> minute .)


state 274

    (282) FIELDS -> second .

    r_from          reduce using rule 282 (FIELDS -> second .)


state 275

    (168) CREATETABLE -> create table id para . LDEF parc ptcoma
    (169) CREATETABLE -> create table id para . LDEF parc HERENCIA ptcoma
    (170) LDEF -> . LDEF coma COLDEF
    (171) LDEF -> . COLDEF
    (172) COLDEF -> . OPCONST
    (173) COLDEF -> . constraint id OPCONST
    (174) COLDEF -> . id TIPO
    (175) COLDEF -> . id TIPO LOPCOLUMN
    (187) OPCONST -> . primary key para LEXP parc
    (188) OPCONST -> . foreign key para LEXP parc references id para LEXP parc
    (189) OPCONST -> . unique para LEXP parc
    (190) OPCONST -> . check para CONDCHECK parc

    constraint      shift and go to state 378
    id              shift and go to state 374
    primary         shift and go to state 379
    foreign         shift and go to state 380
    unique          shift and go to state 381
    check           shift and go to state 382

    LDEF                           shift and go to state 375
    COLDEF                         shift and go to state 376
    OPCONST                        shift and go to state 377

state 276

    (199) CREATETYPE -> create type id as . enum para LEXP parc

    enum            shift and go to state 383


state 277

    (151) CREATEDB -> create RD if not . exist id
    (152) CREATEDB -> create RD if not . exist id OPCCDB

    exist           shift and go to state 384


state 278

    (154) CREATEDB -> create RD id OPCCDB .

    ptcoma          reduce using rule 154 (CREATEDB -> create RD id OPCCDB .)


state 279

    (155) OPCCDB -> PROPIETARIO .
    (157) OPCCDB -> PROPIETARIO . MODO
    (166) MODO -> . mode igual int
    (167) MODO -> . mode int

    ptcoma          reduce using rule 155 (OPCCDB -> PROPIETARIO .)
    mode            shift and go to state 282

    MODO                           shift and go to state 385

state 280

    (156) OPCCDB -> MODO .

    ptcoma          reduce using rule 156 (OPCCDB -> MODO .)


state 281

    (160) PROPIETARIO -> owner . igual id
    (161) PROPIETARIO -> owner . igual cadena
    (162) PROPIETARIO -> owner . igual cadenaString
    (163) PROPIETARIO -> owner . id
    (164) PROPIETARIO -> owner . cadena
    (165) PROPIETARIO -> owner . cadenaString

    igual           shift and go to state 386
    id              shift and go to state 387
    cadena          shift and go to state 388
    cadenaString    shift and go to state 389


state 282

    (166) MODO -> mode . igual int
    (167) MODO -> mode . int

    igual           shift and go to state 390
    int             shift and go to state 391


state 283

    (52) CREATEINDEX -> create index id on . id para LEXP parc
    (54) CREATEINDEX -> create index id on . id using hash para LEXP parc
    (55) CREATEINDEX -> create index id on . id para id ORDEN parc
    (56) CREATEINDEX -> create index id on . id para id id ORDEN parc
    (57) CREATEINDEX -> create index id on . id para id id parc

    id              shift and go to state 392


state 284

    (53) CREATEINDEX -> create unique index id . on id para LEXP parc

    on              shift and go to state 393


state 285

    (37) PROCEDIMIENTOS -> create procedure id para . LPARAM parc LENGUAJE LCONTENIDOP
    (38) PROCEDIMIENTOS -> create procedure id para . parc LENGUAJE LCONTENIDOP
    (39) PROCEDIMIENTOS -> create procedure id para . LPARAM parc LCONTENIDOP LENGUAJE
    (40) PROCEDIMIENTOS -> create procedure id para . parc LCONTENIDOP LENGUAJE
    (45) LPARAM -> . LPARAM coma inout id TIPO
    (46) LPARAM -> . LPARAM coma id TIPO
    (47) LPARAM -> . inout id TIPO
    (48) LPARAM -> . id TIPO

    parc            shift and go to state 396
    inout           shift and go to state 397
    id              shift and go to state 394

    LPARAM                         shift and go to state 395

state 286

    (27) FUNCIONES -> create function id para . LPARAM parc RETURNP LENGUAJE LCONTENIDOP
    (28) FUNCIONES -> create function id para . parc RETURNP LENGUAJE LCONTENIDOP
    (29) FUNCIONES -> create function id para . LPARAM parc RETURNP LCONTENIDOP LENGUAJE
    (30) FUNCIONES -> create function id para . parc RETURNP LCONTENIDOP LENGUAJE
    (45) LPARAM -> . LPARAM coma inout id TIPO
    (46) LPARAM -> . LPARAM coma id TIPO
    (47) LPARAM -> . inout id TIPO
    (48) LPARAM -> . id TIPO

    parc            shift and go to state 399
    inout           shift and go to state 397
    id              shift and go to state 394

    LPARAM                         shift and go to state 398

state 287

    (158) RD -> or replace databases .

    if              reduce using rule 158 (RD -> or replace databases .)
    id              reduce using rule 158 (RD -> or replace databases .)


state 288

    (230) LCAMPOS -> id . igual EXP

    igual           shift and go to state 400


state 289

    (228) UPDATE -> update id set LCAMPOS . WHERE
    (229) LCAMPOS -> LCAMPOS . coma id igual EXP
    (211) WHERE -> . where EXP
    (212) WHERE -> . where EXIST
    (213) WHERE -> .

    coma            shift and go to state 402
    where           shift and go to state 54
    ptcoma          reduce using rule 213 (WHERE -> .)

    WHERE                          shift and go to state 401

state 290

    (231) DELETE -> delete r_from id WHERE .

    ptcoma          reduce using rule 231 (DELETE -> delete r_from id WHERE .)


state 291

    (125) ALTER -> alter databases id rename . to id

    to              shift and go to state 403


state 292

    (126) ALTER -> alter databases id owner . to id

    to              shift and go to state 404


state 293

    (141) OP -> alter . column id set not null
    (142) OP -> alter . column id set null
    (147) OP -> alter . column id type TIPO

    column          shift and go to state 405


state 294

    (127) ALTER -> alter table id LOP .
    (132) LOP -> LOP . coma OP

    ptcoma          reduce using rule 127 (ALTER -> alter table id LOP .)
    coma            shift and go to state 406


state 295

    (133) LOP -> OP .

    coma            reduce using rule 133 (LOP -> OP .)
    ptcoma          reduce using rule 133 (LOP -> OP .)


state 296

    (134) OP -> add . column id TIPO
    (135) OP -> add . check para CONDCHECK parc
    (136) OP -> add . constraint id check para CONDCHECK parc
    (137) OP -> add . constraint id unique para LEXP parc
    (138) OP -> add . unique para LEXP parc
    (139) OP -> add . foreign key para LEXP parc references id para LEXP parc
    (140) OP -> add . constraint id foreign key para LEXP parc references id para LEXP parc

    column          shift and go to state 407
    check           shift and go to state 408
    constraint      shift and go to state 409
    unique          shift and go to state 410
    foreign         shift and go to state 411


state 297

    (143) OP -> drop . constraint id
    (144) OP -> drop . column LEXP
    (145) OP -> drop . check id

    constraint      shift and go to state 412
    column          shift and go to state 413
    check           shift and go to state 414


state 298

    (146) OP -> rename . column id to id

    column          shift and go to state 415


state 299

    (128) ALTER -> alter index id alter . EXP
    (130) ALTER -> alter index id alter . column EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    column          shift and go to state 417
    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 416
    SELECT                         shift and go to state 74

state 300

    (129) ALTER -> alter index if exist . id alter EXP
    (131) ALTER -> alter index if exist . id alter column EXP

    id              shift and go to state 418


state 301

    (78) CONDICIONIF -> if EXP then LISTACONTENIDO . ELSEF end if
    (79) CONDICIONIF -> if EXP then LISTACONTENIDO . LELIF end if
    (80) CONDICIONIF -> if EXP then LISTACONTENIDO . end if
    (81) CONDICIONIF -> if EXP then LISTACONTENIDO . LELIF ELSEF end if
    (89) LISTACONTENIDO -> LISTACONTENIDO . CONTENIDO
    (84) ELSEF -> . else LISTACONTENIDO
    (82) LELIF -> . LELIF elsif EXP then LISTACONTENIDO
    (83) LELIF -> . elsif EXP then LISTACONTENIDO
    (91) CONTENIDO -> . ASIGNACION ptcoma
    (92) CONTENIDO -> . CONDICIONIF ptcoma
    (93) CONTENIDO -> . RAISE ptcoma
    (94) CONTENIDO -> . BEGINEND ptcoma
    (95) CONTENIDO -> . CALLPROCEDURE ptcoma
    (96) CONTENIDO -> . declare LDEC
    (97) CONTENIDO -> . RETURN ptcoma
    (98) CONTENIDO -> . INSERT ptcoma
    (99) CONTENIDO -> . SELECT ptcoma
    (100) CONTENIDO -> . UPDATE ptcoma
    (101) CONTENIDO -> . DELETE ptcoma
    (102) CONTENIDO -> . CASE ptcoma
    (76) ASIGNACION -> . id dospuntos igual EXP
    (77) ASIGNACION -> . id igual EXP
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (80) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (81) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (103) RAISE -> . raise LEVEL FORMAT
    (104) RAISE -> . raise LEVEL EXP
    (105) RAISE -> . raise LEVEL
    (106) RAISE -> . raise
    (107) RAISE -> . raise LEVEL cadena coma id
    (51) BEGINEND -> . begin LISTACONTENIDO end
    (35) CALLPROCEDURE -> . execute id para LEXP parc
    (36) CALLPROCEDURE -> . execute id para parc
    (26) RETURN -> . return EXP
    (118) INSERT -> . insert into id values para LEXP parc
    (119) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (228) UPDATE -> . update id set LCAMPOS WHERE
    (231) DELETE -> . delete r_from id WHERE
    (85) CASE -> . case EXP LISTAWHEN ELSEF end case
    (86) CASE -> . case EXP LISTAWHEN end case
    (87) CASE -> . case LISTAWHEN ELSEF end case
    (88) CASE -> . case LISTAWHEN end case

    end             shift and go to state 420
    else            shift and go to state 196
    elsif           shift and go to state 423
    declare         shift and go to state 308
    id              shift and go to state 17
    if              shift and go to state 31
    raise           shift and go to state 315
    begin           shift and go to state 316
    execute         shift and go to state 36
    return          shift and go to state 317
    insert          shift and go to state 33
    select          shift and go to state 26
    update          shift and go to state 28
    delete          shift and go to state 29
    case            shift and go to state 34

    ELSEF                          shift and go to state 419
    LELIF                          shift and go to state 421
    CONTENIDO                      shift and go to state 422
    ASIGNACION                     shift and go to state 303
    CONDICIONIF                    shift and go to state 304
    RAISE                          shift and go to state 305
    BEGINEND                       shift and go to state 306
    CALLPROCEDURE                  shift and go to state 307
    RETURN                         shift and go to state 309
    INSERT                         shift and go to state 310
    SELECT                         shift and go to state 311
    UPDATE                         shift and go to state 312
    DELETE                         shift and go to state 313
    CASE                           shift and go to state 314

state 302

    (90) LISTACONTENIDO -> CONTENIDO .

    end             reduce using rule 90 (LISTACONTENIDO -> CONTENIDO .)
    else            reduce using rule 90 (LISTACONTENIDO -> CONTENIDO .)
    elsif           reduce using rule 90 (LISTACONTENIDO -> CONTENIDO .)
    declare         reduce using rule 90 (LISTACONTENIDO -> CONTENIDO .)
    id              reduce using rule 90 (LISTACONTENIDO -> CONTENIDO .)
    if              reduce using rule 90 (LISTACONTENIDO -> CONTENIDO .)
    raise           reduce using rule 90 (LISTACONTENIDO -> CONTENIDO .)
    begin           reduce using rule 90 (LISTACONTENIDO -> CONTENIDO .)
    execute         reduce using rule 90 (LISTACONTENIDO -> CONTENIDO .)
    return          reduce using rule 90 (LISTACONTENIDO -> CONTENIDO .)
    insert          reduce using rule 90 (LISTACONTENIDO -> CONTENIDO .)
    select          reduce using rule 90 (LISTACONTENIDO -> CONTENIDO .)
    update          reduce using rule 90 (LISTACONTENIDO -> CONTENIDO .)
    delete          reduce using rule 90 (LISTACONTENIDO -> CONTENIDO .)
    case            reduce using rule 90 (LISTACONTENIDO -> CONTENIDO .)
    when            reduce using rule 90 (LISTACONTENIDO -> CONTENIDO .)
    dolarn          reduce using rule 90 (LISTACONTENIDO -> CONTENIDO .)


state 303

    (91) CONTENIDO -> ASIGNACION . ptcoma

    ptcoma          shift and go to state 424


state 304

    (92) CONTENIDO -> CONDICIONIF . ptcoma

    ptcoma          shift and go to state 425


state 305

    (93) CONTENIDO -> RAISE . ptcoma

    ptcoma          shift and go to state 426


state 306

    (94) CONTENIDO -> BEGINEND . ptcoma

    ptcoma          shift and go to state 427


state 307

    (95) CONTENIDO -> CALLPROCEDURE . ptcoma

    ptcoma          shift and go to state 428


state 308

    (96) CONTENIDO -> declare . LDEC
    (66) LDEC -> . LDEC DECLARACIONES
    (67) LDEC -> . DECLARACIONES
    (68) DECLARACIONES -> . id TIPO not null ASIG ptcoma
    (69) DECLARACIONES -> . id TIPO ASIG ptcoma
    (70) DECLARACIONES -> . id constant TIPO not null ASIG ptcoma
    (71) DECLARACIONES -> . id constant TIPO ASIG ptcoma

    id              shift and go to state 431

    LDEC                           shift and go to state 429
    DECLARACIONES                  shift and go to state 430

state 309

    (97) CONTENIDO -> RETURN . ptcoma

    ptcoma          shift and go to state 432


state 310

    (98) CONTENIDO -> INSERT . ptcoma

    ptcoma          shift and go to state 433


state 311

    (99) CONTENIDO -> SELECT . ptcoma

    ptcoma          shift and go to state 434


state 312

    (100) CONTENIDO -> UPDATE . ptcoma

    ptcoma          shift and go to state 435


state 313

    (101) CONTENIDO -> DELETE . ptcoma

    ptcoma          shift and go to state 436


state 314

    (102) CONTENIDO -> CASE . ptcoma

    ptcoma          shift and go to state 437


state 315

    (103) RAISE -> raise . LEVEL FORMAT
    (104) RAISE -> raise . LEVEL EXP
    (105) RAISE -> raise . LEVEL
    (106) RAISE -> raise .
    (107) RAISE -> raise . LEVEL cadena coma id
    (108) LEVEL -> . info
    (109) LEVEL -> . debug
    (110) LEVEL -> . notice
    (111) LEVEL -> . warning
    (112) LEVEL -> . exception

    ptcoma          reduce using rule 106 (RAISE -> raise .)
    info            shift and go to state 439
    debug           shift and go to state 440
    notice          shift and go to state 441
    warning         shift and go to state 442
    exception       shift and go to state 443

    LEVEL                          shift and go to state 438

state 316

    (51) BEGINEND -> begin . LISTACONTENIDO end
    (89) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (90) LISTACONTENIDO -> . CONTENIDO
    (91) CONTENIDO -> . ASIGNACION ptcoma
    (92) CONTENIDO -> . CONDICIONIF ptcoma
    (93) CONTENIDO -> . RAISE ptcoma
    (94) CONTENIDO -> . BEGINEND ptcoma
    (95) CONTENIDO -> . CALLPROCEDURE ptcoma
    (96) CONTENIDO -> . declare LDEC
    (97) CONTENIDO -> . RETURN ptcoma
    (98) CONTENIDO -> . INSERT ptcoma
    (99) CONTENIDO -> . SELECT ptcoma
    (100) CONTENIDO -> . UPDATE ptcoma
    (101) CONTENIDO -> . DELETE ptcoma
    (102) CONTENIDO -> . CASE ptcoma
    (76) ASIGNACION -> . id dospuntos igual EXP
    (77) ASIGNACION -> . id igual EXP
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (80) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (81) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (103) RAISE -> . raise LEVEL FORMAT
    (104) RAISE -> . raise LEVEL EXP
    (105) RAISE -> . raise LEVEL
    (106) RAISE -> . raise
    (107) RAISE -> . raise LEVEL cadena coma id
    (51) BEGINEND -> . begin LISTACONTENIDO end
    (35) CALLPROCEDURE -> . execute id para LEXP parc
    (36) CALLPROCEDURE -> . execute id para parc
    (26) RETURN -> . return EXP
    (118) INSERT -> . insert into id values para LEXP parc
    (119) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (228) UPDATE -> . update id set LCAMPOS WHERE
    (231) DELETE -> . delete r_from id WHERE
    (85) CASE -> . case EXP LISTAWHEN ELSEF end case
    (86) CASE -> . case EXP LISTAWHEN end case
    (87) CASE -> . case LISTAWHEN ELSEF end case
    (88) CASE -> . case LISTAWHEN end case

    declare         shift and go to state 308
    id              shift and go to state 17
    if              shift and go to state 31
    raise           shift and go to state 315
    begin           shift and go to state 316
    execute         shift and go to state 36
    return          shift and go to state 317
    insert          shift and go to state 33
    select          shift and go to state 26
    update          shift and go to state 28
    delete          shift and go to state 29
    case            shift and go to state 34

    LISTACONTENIDO                 shift and go to state 444
    CONTENIDO                      shift and go to state 302
    ASIGNACION                     shift and go to state 303
    CONDICIONIF                    shift and go to state 304
    RAISE                          shift and go to state 305
    BEGINEND                       shift and go to state 306
    CALLPROCEDURE                  shift and go to state 307
    RETURN                         shift and go to state 309
    INSERT                         shift and go to state 310
    SELECT                         shift and go to state 311
    UPDATE                         shift and go to state 312
    DELETE                         shift and go to state 313
    CASE                           shift and go to state 314

state 317

    (26) RETURN -> return . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 445
    SELECT                         shift and go to state 74

state 318

    (120) DROP -> drop all para parc .

    ptcoma          reduce using rule 120 (DROP -> drop all para parc .)


state 319

    (123) DROP -> drop databases if exist . id

    id              shift and go to state 446


state 320

    (32) DROPFUNC -> drop function if exist . id

    id              shift and go to state 447


state 321

    (118) INSERT -> insert into id values . para LEXP parc

    para            shift and go to state 448


state 322

    (119) INSERT -> insert into id para . LEXP parc values para LEXP parc
    (234) LEXP -> . LEXP coma EXP
    (235) LEXP -> . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    LEXP                           shift and go to state 449
    EXP                            shift and go to state 62
    SELECT                         shift and go to state 74

state 323

    (85) CASE -> case EXP LISTAWHEN ELSEF . end case

    end             shift and go to state 450


state 324

    (86) CASE -> case EXP LISTAWHEN end . case

    case            shift and go to state 451


state 325

    (87) CASE -> case LISTAWHEN ELSEF end . case

    case            shift and go to state 452


state 326

    (88) CASE -> case LISTAWHEN end case .

    ptcoma          reduce using rule 88 (CASE -> case LISTAWHEN end case .)


state 327

    (84) ELSEF -> else LISTACONTENIDO .
    (89) LISTACONTENIDO -> LISTACONTENIDO . CONTENIDO
    (91) CONTENIDO -> . ASIGNACION ptcoma
    (92) CONTENIDO -> . CONDICIONIF ptcoma
    (93) CONTENIDO -> . RAISE ptcoma
    (94) CONTENIDO -> . BEGINEND ptcoma
    (95) CONTENIDO -> . CALLPROCEDURE ptcoma
    (96) CONTENIDO -> . declare LDEC
    (97) CONTENIDO -> . RETURN ptcoma
    (98) CONTENIDO -> . INSERT ptcoma
    (99) CONTENIDO -> . SELECT ptcoma
    (100) CONTENIDO -> . UPDATE ptcoma
    (101) CONTENIDO -> . DELETE ptcoma
    (102) CONTENIDO -> . CASE ptcoma
    (76) ASIGNACION -> . id dospuntos igual EXP
    (77) ASIGNACION -> . id igual EXP
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (80) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (81) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (103) RAISE -> . raise LEVEL FORMAT
    (104) RAISE -> . raise LEVEL EXP
    (105) RAISE -> . raise LEVEL
    (106) RAISE -> . raise
    (107) RAISE -> . raise LEVEL cadena coma id
    (51) BEGINEND -> . begin LISTACONTENIDO end
    (35) CALLPROCEDURE -> . execute id para LEXP parc
    (36) CALLPROCEDURE -> . execute id para parc
    (26) RETURN -> . return EXP
    (118) INSERT -> . insert into id values para LEXP parc
    (119) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (228) UPDATE -> . update id set LCAMPOS WHERE
    (231) DELETE -> . delete r_from id WHERE
    (85) CASE -> . case EXP LISTAWHEN ELSEF end case
    (86) CASE -> . case EXP LISTAWHEN end case
    (87) CASE -> . case LISTAWHEN ELSEF end case
    (88) CASE -> . case LISTAWHEN end case

    end             reduce using rule 84 (ELSEF -> else LISTACONTENIDO .)
    declare         shift and go to state 308
    id              shift and go to state 17
    if              shift and go to state 31
    raise           shift and go to state 315
    begin           shift and go to state 316
    execute         shift and go to state 36
    return          shift and go to state 317
    insert          shift and go to state 33
    select          shift and go to state 26
    update          shift and go to state 28
    delete          shift and go to state 29
    case            shift and go to state 34

    CONTENIDO                      shift and go to state 422
    ASIGNACION                     shift and go to state 303
    CONDICIONIF                    shift and go to state 304
    RAISE                          shift and go to state 305
    BEGINEND                       shift and go to state 306
    CALLPROCEDURE                  shift and go to state 307
    RETURN                         shift and go to state 309
    INSERT                         shift and go to state 310
    SELECT                         shift and go to state 311
    UPDATE                         shift and go to state 312
    DELETE                         shift and go to state 313
    CASE                           shift and go to state 314

state 328

    (116) WHEN -> when EXP then . LISTACONTENIDO
    (89) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (90) LISTACONTENIDO -> . CONTENIDO
    (91) CONTENIDO -> . ASIGNACION ptcoma
    (92) CONTENIDO -> . CONDICIONIF ptcoma
    (93) CONTENIDO -> . RAISE ptcoma
    (94) CONTENIDO -> . BEGINEND ptcoma
    (95) CONTENIDO -> . CALLPROCEDURE ptcoma
    (96) CONTENIDO -> . declare LDEC
    (97) CONTENIDO -> . RETURN ptcoma
    (98) CONTENIDO -> . INSERT ptcoma
    (99) CONTENIDO -> . SELECT ptcoma
    (100) CONTENIDO -> . UPDATE ptcoma
    (101) CONTENIDO -> . DELETE ptcoma
    (102) CONTENIDO -> . CASE ptcoma
    (76) ASIGNACION -> . id dospuntos igual EXP
    (77) ASIGNACION -> . id igual EXP
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (80) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (81) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (103) RAISE -> . raise LEVEL FORMAT
    (104) RAISE -> . raise LEVEL EXP
    (105) RAISE -> . raise LEVEL
    (106) RAISE -> . raise
    (107) RAISE -> . raise LEVEL cadena coma id
    (51) BEGINEND -> . begin LISTACONTENIDO end
    (35) CALLPROCEDURE -> . execute id para LEXP parc
    (36) CALLPROCEDURE -> . execute id para parc
    (26) RETURN -> . return EXP
    (118) INSERT -> . insert into id values para LEXP parc
    (119) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (228) UPDATE -> . update id set LCAMPOS WHERE
    (231) DELETE -> . delete r_from id WHERE
    (85) CASE -> . case EXP LISTAWHEN ELSEF end case
    (86) CASE -> . case EXP LISTAWHEN end case
    (87) CASE -> . case LISTAWHEN ELSEF end case
    (88) CASE -> . case LISTAWHEN end case

    declare         shift and go to state 308
    id              shift and go to state 17
    if              shift and go to state 31
    raise           shift and go to state 315
    begin           shift and go to state 316
    execute         shift and go to state 36
    return          shift and go to state 317
    insert          shift and go to state 33
    select          shift and go to state 26
    update          shift and go to state 28
    delete          shift and go to state 29
    case            shift and go to state 34

    LISTACONTENIDO                 shift and go to state 453
    CONTENIDO                      shift and go to state 302
    ASIGNACION                     shift and go to state 303
    CONDICIONIF                    shift and go to state 304
    RAISE                          shift and go to state 305
    BEGINEND                       shift and go to state 306
    CALLPROCEDURE                  shift and go to state 307
    RETURN                         shift and go to state 309
    INSERT                         shift and go to state 310
    SELECT                         shift and go to state 311
    UPDATE                         shift and go to state 312
    DELETE                         shift and go to state 313
    CASE                           shift and go to state 314

state 329

    (149) SHOW -> show tables para id . parc

    parc            shift and go to state 454


state 330

    (150) SHOW -> show collection para parc .

    ptcoma          reduce using rule 150 (SHOW -> show collection para parc .)


state 331

    (35) CALLPROCEDURE -> execute id para LEXP . parc
    (234) LEXP -> LEXP . coma EXP

    parc            shift and go to state 455
    coma            shift and go to state 128


state 332

    (36) CALLPROCEDURE -> execute id para parc .

    ptcoma          reduce using rule 36 (CALLPROCEDURE -> execute id para parc .)


state 333

    (233) EXIST -> not exist para . SELECT parc
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    select          shift and go to state 26

    SELECT                         shift and go to state 456

state 334

    (232) EXIST -> exist para SELECT . parc

    parc            shift and go to state 457


state 335

    (200) SELECT -> select distinct LEXP r_from LEXP . WHERE GROUP HAVING COMBINING ORDER LIMIT
    (234) LEXP -> LEXP . coma EXP
    (211) WHERE -> . where EXP
    (212) WHERE -> . where EXIST
    (213) WHERE -> .

  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for where resolved as shift
    coma            shift and go to state 128
    where           shift and go to state 54
    r_from          reduce using rule 213 (WHERE -> .)
    group           reduce using rule 213 (WHERE -> .)
    having          reduce using rule 213 (WHERE -> .)
    union           reduce using rule 213 (WHERE -> .)
    intersect       reduce using rule 213 (WHERE -> .)
    except          reduce using rule 213 (WHERE -> .)
    order           reduce using rule 213 (WHERE -> .)
    limit           reduce using rule 213 (WHERE -> .)
    offset          reduce using rule 213 (WHERE -> .)
    ptcoma          reduce using rule 213 (WHERE -> .)
    mas             reduce using rule 213 (WHERE -> .)
    menos           reduce using rule 213 (WHERE -> .)
    multiplicacion  reduce using rule 213 (WHERE -> .)
    division        reduce using rule 213 (WHERE -> .)
    modulo          reduce using rule 213 (WHERE -> .)
    elevado         reduce using rule 213 (WHERE -> .)
    and             reduce using rule 213 (WHERE -> .)
    or              reduce using rule 213 (WHERE -> .)
    mayor           reduce using rule 213 (WHERE -> .)
    menor           reduce using rule 213 (WHERE -> .)
    mayor_igual     reduce using rule 213 (WHERE -> .)
    menor_igual     reduce using rule 213 (WHERE -> .)
    igual           reduce using rule 213 (WHERE -> .)
    diferente1      reduce using rule 213 (WHERE -> .)
    diferente2      reduce using rule 213 (WHERE -> .)
    between         reduce using rule 213 (WHERE -> .)
    is              reduce using rule 213 (WHERE -> .)
    isnull          reduce using rule 213 (WHERE -> .)
    notnull         reduce using rule 213 (WHERE -> .)
    as              reduce using rule 213 (WHERE -> .)
    cadenaString    reduce using rule 213 (WHERE -> .)
    cadena          reduce using rule 213 (WHERE -> .)
    id              reduce using rule 213 (WHERE -> .)
    in              reduce using rule 213 (WHERE -> .)
    not             reduce using rule 213 (WHERE -> .)
    like            reduce using rule 213 (WHERE -> .)
    then            reduce using rule 213 (WHERE -> .)
    when            reduce using rule 213 (WHERE -> .)
    parc            reduce using rule 213 (WHERE -> .)
    constraint      reduce using rule 213 (WHERE -> .)
    unique          reduce using rule 213 (WHERE -> .)
    check           reduce using rule 213 (WHERE -> .)
    default         reduce using rule 213 (WHERE -> .)
    null            reduce using rule 213 (WHERE -> .)
    primary         reduce using rule 213 (WHERE -> .)
    references      reduce using rule 213 (WHERE -> .)
    asc             reduce using rule 213 (WHERE -> .)
    desc            reduce using rule 213 (WHERE -> .)

  ! coma            [ reduce using rule 213 (WHERE -> .) ]
  ! where           [ reduce using rule 213 (WHERE -> .) ]

    WHERE                          shift and go to state 458

state 336

    (201) SELECT -> select LEXP r_from LEXP WHERE . GROUP HAVING COMBINING ORDER LIMIT
    (219) GROUP -> . group by LEXP
    (220) GROUP -> .

  ! shift/reduce conflict for group resolved as shift
    group           shift and go to state 207
    r_from          reduce using rule 220 (GROUP -> .)
    coma            reduce using rule 220 (GROUP -> .)
    where           reduce using rule 220 (GROUP -> .)
    having          reduce using rule 220 (GROUP -> .)
    union           reduce using rule 220 (GROUP -> .)
    intersect       reduce using rule 220 (GROUP -> .)
    except          reduce using rule 220 (GROUP -> .)
    order           reduce using rule 220 (GROUP -> .)
    limit           reduce using rule 220 (GROUP -> .)
    offset          reduce using rule 220 (GROUP -> .)
    ptcoma          reduce using rule 220 (GROUP -> .)
    mas             reduce using rule 220 (GROUP -> .)
    menos           reduce using rule 220 (GROUP -> .)
    multiplicacion  reduce using rule 220 (GROUP -> .)
    division        reduce using rule 220 (GROUP -> .)
    modulo          reduce using rule 220 (GROUP -> .)
    elevado         reduce using rule 220 (GROUP -> .)
    and             reduce using rule 220 (GROUP -> .)
    or              reduce using rule 220 (GROUP -> .)
    mayor           reduce using rule 220 (GROUP -> .)
    menor           reduce using rule 220 (GROUP -> .)
    mayor_igual     reduce using rule 220 (GROUP -> .)
    menor_igual     reduce using rule 220 (GROUP -> .)
    igual           reduce using rule 220 (GROUP -> .)
    diferente1      reduce using rule 220 (GROUP -> .)
    diferente2      reduce using rule 220 (GROUP -> .)
    between         reduce using rule 220 (GROUP -> .)
    is              reduce using rule 220 (GROUP -> .)
    isnull          reduce using rule 220 (GROUP -> .)
    notnull         reduce using rule 220 (GROUP -> .)
    as              reduce using rule 220 (GROUP -> .)
    cadenaString    reduce using rule 220 (GROUP -> .)
    cadena          reduce using rule 220 (GROUP -> .)
    id              reduce using rule 220 (GROUP -> .)
    in              reduce using rule 220 (GROUP -> .)
    not             reduce using rule 220 (GROUP -> .)
    like            reduce using rule 220 (GROUP -> .)
    then            reduce using rule 220 (GROUP -> .)
    when            reduce using rule 220 (GROUP -> .)
    parc            reduce using rule 220 (GROUP -> .)
    constraint      reduce using rule 220 (GROUP -> .)
    unique          reduce using rule 220 (GROUP -> .)
    check           reduce using rule 220 (GROUP -> .)
    default         reduce using rule 220 (GROUP -> .)
    null            reduce using rule 220 (GROUP -> .)
    primary         reduce using rule 220 (GROUP -> .)
    references      reduce using rule 220 (GROUP -> .)
    asc             reduce using rule 220 (GROUP -> .)
    desc            reduce using rule 220 (GROUP -> .)

  ! group           [ reduce using rule 220 (GROUP -> .) ]

    GROUP                          shift and go to state 459

state 337

    (202) SELECT -> select LEXP WHERE GROUP HAVING . COMBINING ORDER LIMIT
    (214) COMBINING -> . union EXP
    (215) COMBINING -> . union all EXP
    (216) COMBINING -> . intersect EXP
    (217) COMBINING -> . except EXP
    (218) COMBINING -> .

  ! shift/reduce conflict for union resolved as shift
  ! shift/reduce conflict for intersect resolved as shift
  ! shift/reduce conflict for except resolved as shift
    union           shift and go to state 461
    intersect       shift and go to state 462
    except          shift and go to state 463
    r_from          reduce using rule 218 (COMBINING -> .)
    coma            reduce using rule 218 (COMBINING -> .)
    where           reduce using rule 218 (COMBINING -> .)
    group           reduce using rule 218 (COMBINING -> .)
    having          reduce using rule 218 (COMBINING -> .)
    order           reduce using rule 218 (COMBINING -> .)
    limit           reduce using rule 218 (COMBINING -> .)
    offset          reduce using rule 218 (COMBINING -> .)
    ptcoma          reduce using rule 218 (COMBINING -> .)
    mas             reduce using rule 218 (COMBINING -> .)
    menos           reduce using rule 218 (COMBINING -> .)
    multiplicacion  reduce using rule 218 (COMBINING -> .)
    division        reduce using rule 218 (COMBINING -> .)
    modulo          reduce using rule 218 (COMBINING -> .)
    elevado         reduce using rule 218 (COMBINING -> .)
    and             reduce using rule 218 (COMBINING -> .)
    or              reduce using rule 218 (COMBINING -> .)
    mayor           reduce using rule 218 (COMBINING -> .)
    menor           reduce using rule 218 (COMBINING -> .)
    mayor_igual     reduce using rule 218 (COMBINING -> .)
    menor_igual     reduce using rule 218 (COMBINING -> .)
    igual           reduce using rule 218 (COMBINING -> .)
    diferente1      reduce using rule 218 (COMBINING -> .)
    diferente2      reduce using rule 218 (COMBINING -> .)
    between         reduce using rule 218 (COMBINING -> .)
    is              reduce using rule 218 (COMBINING -> .)
    isnull          reduce using rule 218 (COMBINING -> .)
    notnull         reduce using rule 218 (COMBINING -> .)
    as              reduce using rule 218 (COMBINING -> .)
    cadenaString    reduce using rule 218 (COMBINING -> .)
    cadena          reduce using rule 218 (COMBINING -> .)
    id              reduce using rule 218 (COMBINING -> .)
    in              reduce using rule 218 (COMBINING -> .)
    not             reduce using rule 218 (COMBINING -> .)
    like            reduce using rule 218 (COMBINING -> .)
    then            reduce using rule 218 (COMBINING -> .)
    when            reduce using rule 218 (COMBINING -> .)
    parc            reduce using rule 218 (COMBINING -> .)
    constraint      reduce using rule 218 (COMBINING -> .)
    unique          reduce using rule 218 (COMBINING -> .)
    check           reduce using rule 218 (COMBINING -> .)
    default         reduce using rule 218 (COMBINING -> .)
    null            reduce using rule 218 (COMBINING -> .)
    primary         reduce using rule 218 (COMBINING -> .)
    references      reduce using rule 218 (COMBINING -> .)
    asc             reduce using rule 218 (COMBINING -> .)
    desc            reduce using rule 218 (COMBINING -> .)

  ! union           [ reduce using rule 218 (COMBINING -> .) ]
  ! intersect       [ reduce using rule 218 (COMBINING -> .) ]
  ! except          [ reduce using rule 218 (COMBINING -> .) ]

    COMBINING                      shift and go to state 460

state 338

    (221) HAVING -> having . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 464
    SELECT                         shift and go to state 74

state 339

    (219) GROUP -> group by . LEXP
    (234) LEXP -> . LEXP coma EXP
    (235) LEXP -> . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    LEXP                           shift and go to state 465
    EXP                            shift and go to state 62
    SELECT                         shift and go to state 74

state 340

    (321) EXP -> EXP between symetric EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    r_from          reduce using rule 321 (EXP -> EXP between symetric EXP .)
    coma            reduce using rule 321 (EXP -> EXP between symetric EXP .)
    where           reduce using rule 321 (EXP -> EXP between symetric EXP .)
    group           reduce using rule 321 (EXP -> EXP between symetric EXP .)
    having          reduce using rule 321 (EXP -> EXP between symetric EXP .)
    union           reduce using rule 321 (EXP -> EXP between symetric EXP .)
    intersect       reduce using rule 321 (EXP -> EXP between symetric EXP .)
    except          reduce using rule 321 (EXP -> EXP between symetric EXP .)
    order           reduce using rule 321 (EXP -> EXP between symetric EXP .)
    limit           reduce using rule 321 (EXP -> EXP between symetric EXP .)
    offset          reduce using rule 321 (EXP -> EXP between symetric EXP .)
    ptcoma          reduce using rule 321 (EXP -> EXP between symetric EXP .)
    and             reduce using rule 321 (EXP -> EXP between symetric EXP .)
    or              reduce using rule 321 (EXP -> EXP between symetric EXP .)
    between         reduce using rule 321 (EXP -> EXP between symetric EXP .)
    is              reduce using rule 321 (EXP -> EXP between symetric EXP .)
    isnull          reduce using rule 321 (EXP -> EXP between symetric EXP .)
    notnull         reduce using rule 321 (EXP -> EXP between symetric EXP .)
    as              reduce using rule 321 (EXP -> EXP between symetric EXP .)
    cadenaString    reduce using rule 321 (EXP -> EXP between symetric EXP .)
    cadena          reduce using rule 321 (EXP -> EXP between symetric EXP .)
    id              reduce using rule 321 (EXP -> EXP between symetric EXP .)
    in              reduce using rule 321 (EXP -> EXP between symetric EXP .)
    not             reduce using rule 321 (EXP -> EXP between symetric EXP .)
    like            reduce using rule 321 (EXP -> EXP between symetric EXP .)
    then            reduce using rule 321 (EXP -> EXP between symetric EXP .)
    when            reduce using rule 321 (EXP -> EXP between symetric EXP .)
    parc            reduce using rule 321 (EXP -> EXP between symetric EXP .)
    constraint      reduce using rule 321 (EXP -> EXP between symetric EXP .)
    unique          reduce using rule 321 (EXP -> EXP between symetric EXP .)
    check           reduce using rule 321 (EXP -> EXP between symetric EXP .)
    default         reduce using rule 321 (EXP -> EXP between symetric EXP .)
    null            reduce using rule 321 (EXP -> EXP between symetric EXP .)
    primary         reduce using rule 321 (EXP -> EXP between symetric EXP .)
    references      reduce using rule 321 (EXP -> EXP between symetric EXP .)
    asc             reduce using rule 321 (EXP -> EXP between symetric EXP .)
    desc            reduce using rule 321 (EXP -> EXP between symetric EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143

  ! mas             [ reduce using rule 321 (EXP -> EXP between symetric EXP .) ]
  ! menos           [ reduce using rule 321 (EXP -> EXP between symetric EXP .) ]
  ! multiplicacion  [ reduce using rule 321 (EXP -> EXP between symetric EXP .) ]
  ! division        [ reduce using rule 321 (EXP -> EXP between symetric EXP .) ]
  ! modulo          [ reduce using rule 321 (EXP -> EXP between symetric EXP .) ]
  ! elevado         [ reduce using rule 321 (EXP -> EXP between symetric EXP .) ]
  ! mayor           [ reduce using rule 321 (EXP -> EXP between symetric EXP .) ]
  ! menor           [ reduce using rule 321 (EXP -> EXP between symetric EXP .) ]
  ! mayor_igual     [ reduce using rule 321 (EXP -> EXP between symetric EXP .) ]
  ! menor_igual     [ reduce using rule 321 (EXP -> EXP between symetric EXP .) ]
  ! igual           [ reduce using rule 321 (EXP -> EXP between symetric EXP .) ]
  ! diferente1      [ reduce using rule 321 (EXP -> EXP between symetric EXP .) ]
  ! diferente2      [ reduce using rule 321 (EXP -> EXP between symetric EXP .) ]
  ! and             [ shift and go to state 135 ]
  ! or              [ shift and go to state 136 ]
  ! between         [ shift and go to state 144 ]
  ! is              [ shift and go to state 145 ]
  ! isnull          [ shift and go to state 147 ]
  ! notnull         [ shift and go to state 148 ]
  ! as              [ shift and go to state 149 ]
  ! cadenaString    [ shift and go to state 150 ]
  ! cadena          [ shift and go to state 151 ]
  ! id              [ shift and go to state 152 ]
  ! in              [ shift and go to state 153 ]
  ! not             [ shift and go to state 146 ]
  ! like            [ shift and go to state 154 ]


state 341

    (299) EXP -> EXP is not null .

    r_from          reduce using rule 299 (EXP -> EXP is not null .)
    coma            reduce using rule 299 (EXP -> EXP is not null .)
    where           reduce using rule 299 (EXP -> EXP is not null .)
    group           reduce using rule 299 (EXP -> EXP is not null .)
    having          reduce using rule 299 (EXP -> EXP is not null .)
    union           reduce using rule 299 (EXP -> EXP is not null .)
    intersect       reduce using rule 299 (EXP -> EXP is not null .)
    except          reduce using rule 299 (EXP -> EXP is not null .)
    order           reduce using rule 299 (EXP -> EXP is not null .)
    limit           reduce using rule 299 (EXP -> EXP is not null .)
    offset          reduce using rule 299 (EXP -> EXP is not null .)
    ptcoma          reduce using rule 299 (EXP -> EXP is not null .)
    mas             reduce using rule 299 (EXP -> EXP is not null .)
    menos           reduce using rule 299 (EXP -> EXP is not null .)
    multiplicacion  reduce using rule 299 (EXP -> EXP is not null .)
    division        reduce using rule 299 (EXP -> EXP is not null .)
    modulo          reduce using rule 299 (EXP -> EXP is not null .)
    elevado         reduce using rule 299 (EXP -> EXP is not null .)
    and             reduce using rule 299 (EXP -> EXP is not null .)
    or              reduce using rule 299 (EXP -> EXP is not null .)
    mayor           reduce using rule 299 (EXP -> EXP is not null .)
    menor           reduce using rule 299 (EXP -> EXP is not null .)
    mayor_igual     reduce using rule 299 (EXP -> EXP is not null .)
    menor_igual     reduce using rule 299 (EXP -> EXP is not null .)
    igual           reduce using rule 299 (EXP -> EXP is not null .)
    diferente1      reduce using rule 299 (EXP -> EXP is not null .)
    diferente2      reduce using rule 299 (EXP -> EXP is not null .)
    between         reduce using rule 299 (EXP -> EXP is not null .)
    is              reduce using rule 299 (EXP -> EXP is not null .)
    isnull          reduce using rule 299 (EXP -> EXP is not null .)
    notnull         reduce using rule 299 (EXP -> EXP is not null .)
    as              reduce using rule 299 (EXP -> EXP is not null .)
    cadenaString    reduce using rule 299 (EXP -> EXP is not null .)
    cadena          reduce using rule 299 (EXP -> EXP is not null .)
    id              reduce using rule 299 (EXP -> EXP is not null .)
    in              reduce using rule 299 (EXP -> EXP is not null .)
    not             reduce using rule 299 (EXP -> EXP is not null .)
    like            reduce using rule 299 (EXP -> EXP is not null .)
    then            reduce using rule 299 (EXP -> EXP is not null .)
    when            reduce using rule 299 (EXP -> EXP is not null .)
    parc            reduce using rule 299 (EXP -> EXP is not null .)
    constraint      reduce using rule 299 (EXP -> EXP is not null .)
    unique          reduce using rule 299 (EXP -> EXP is not null .)
    check           reduce using rule 299 (EXP -> EXP is not null .)
    default         reduce using rule 299 (EXP -> EXP is not null .)
    null            reduce using rule 299 (EXP -> EXP is not null .)
    primary         reduce using rule 299 (EXP -> EXP is not null .)
    references      reduce using rule 299 (EXP -> EXP is not null .)
    asc             reduce using rule 299 (EXP -> EXP is not null .)
    desc            reduce using rule 299 (EXP -> EXP is not null .)


state 342

    (304) EXP -> EXP is not true .

    r_from          reduce using rule 304 (EXP -> EXP is not true .)
    coma            reduce using rule 304 (EXP -> EXP is not true .)
    where           reduce using rule 304 (EXP -> EXP is not true .)
    group           reduce using rule 304 (EXP -> EXP is not true .)
    having          reduce using rule 304 (EXP -> EXP is not true .)
    union           reduce using rule 304 (EXP -> EXP is not true .)
    intersect       reduce using rule 304 (EXP -> EXP is not true .)
    except          reduce using rule 304 (EXP -> EXP is not true .)
    order           reduce using rule 304 (EXP -> EXP is not true .)
    limit           reduce using rule 304 (EXP -> EXP is not true .)
    offset          reduce using rule 304 (EXP -> EXP is not true .)
    ptcoma          reduce using rule 304 (EXP -> EXP is not true .)
    mas             reduce using rule 304 (EXP -> EXP is not true .)
    menos           reduce using rule 304 (EXP -> EXP is not true .)
    multiplicacion  reduce using rule 304 (EXP -> EXP is not true .)
    division        reduce using rule 304 (EXP -> EXP is not true .)
    modulo          reduce using rule 304 (EXP -> EXP is not true .)
    elevado         reduce using rule 304 (EXP -> EXP is not true .)
    and             reduce using rule 304 (EXP -> EXP is not true .)
    or              reduce using rule 304 (EXP -> EXP is not true .)
    mayor           reduce using rule 304 (EXP -> EXP is not true .)
    menor           reduce using rule 304 (EXP -> EXP is not true .)
    mayor_igual     reduce using rule 304 (EXP -> EXP is not true .)
    menor_igual     reduce using rule 304 (EXP -> EXP is not true .)
    igual           reduce using rule 304 (EXP -> EXP is not true .)
    diferente1      reduce using rule 304 (EXP -> EXP is not true .)
    diferente2      reduce using rule 304 (EXP -> EXP is not true .)
    between         reduce using rule 304 (EXP -> EXP is not true .)
    is              reduce using rule 304 (EXP -> EXP is not true .)
    isnull          reduce using rule 304 (EXP -> EXP is not true .)
    notnull         reduce using rule 304 (EXP -> EXP is not true .)
    as              reduce using rule 304 (EXP -> EXP is not true .)
    cadenaString    reduce using rule 304 (EXP -> EXP is not true .)
    cadena          reduce using rule 304 (EXP -> EXP is not true .)
    id              reduce using rule 304 (EXP -> EXP is not true .)
    in              reduce using rule 304 (EXP -> EXP is not true .)
    not             reduce using rule 304 (EXP -> EXP is not true .)
    like            reduce using rule 304 (EXP -> EXP is not true .)
    then            reduce using rule 304 (EXP -> EXP is not true .)
    when            reduce using rule 304 (EXP -> EXP is not true .)
    parc            reduce using rule 304 (EXP -> EXP is not true .)
    constraint      reduce using rule 304 (EXP -> EXP is not true .)
    unique          reduce using rule 304 (EXP -> EXP is not true .)
    check           reduce using rule 304 (EXP -> EXP is not true .)
    default         reduce using rule 304 (EXP -> EXP is not true .)
    null            reduce using rule 304 (EXP -> EXP is not true .)
    primary         reduce using rule 304 (EXP -> EXP is not true .)
    references      reduce using rule 304 (EXP -> EXP is not true .)
    asc             reduce using rule 304 (EXP -> EXP is not true .)
    desc            reduce using rule 304 (EXP -> EXP is not true .)


state 343

    (306) EXP -> EXP is not false .

    r_from          reduce using rule 306 (EXP -> EXP is not false .)
    coma            reduce using rule 306 (EXP -> EXP is not false .)
    where           reduce using rule 306 (EXP -> EXP is not false .)
    group           reduce using rule 306 (EXP -> EXP is not false .)
    having          reduce using rule 306 (EXP -> EXP is not false .)
    union           reduce using rule 306 (EXP -> EXP is not false .)
    intersect       reduce using rule 306 (EXP -> EXP is not false .)
    except          reduce using rule 306 (EXP -> EXP is not false .)
    order           reduce using rule 306 (EXP -> EXP is not false .)
    limit           reduce using rule 306 (EXP -> EXP is not false .)
    offset          reduce using rule 306 (EXP -> EXP is not false .)
    ptcoma          reduce using rule 306 (EXP -> EXP is not false .)
    mas             reduce using rule 306 (EXP -> EXP is not false .)
    menos           reduce using rule 306 (EXP -> EXP is not false .)
    multiplicacion  reduce using rule 306 (EXP -> EXP is not false .)
    division        reduce using rule 306 (EXP -> EXP is not false .)
    modulo          reduce using rule 306 (EXP -> EXP is not false .)
    elevado         reduce using rule 306 (EXP -> EXP is not false .)
    and             reduce using rule 306 (EXP -> EXP is not false .)
    or              reduce using rule 306 (EXP -> EXP is not false .)
    mayor           reduce using rule 306 (EXP -> EXP is not false .)
    menor           reduce using rule 306 (EXP -> EXP is not false .)
    mayor_igual     reduce using rule 306 (EXP -> EXP is not false .)
    menor_igual     reduce using rule 306 (EXP -> EXP is not false .)
    igual           reduce using rule 306 (EXP -> EXP is not false .)
    diferente1      reduce using rule 306 (EXP -> EXP is not false .)
    diferente2      reduce using rule 306 (EXP -> EXP is not false .)
    between         reduce using rule 306 (EXP -> EXP is not false .)
    is              reduce using rule 306 (EXP -> EXP is not false .)
    isnull          reduce using rule 306 (EXP -> EXP is not false .)
    notnull         reduce using rule 306 (EXP -> EXP is not false .)
    as              reduce using rule 306 (EXP -> EXP is not false .)
    cadenaString    reduce using rule 306 (EXP -> EXP is not false .)
    cadena          reduce using rule 306 (EXP -> EXP is not false .)
    id              reduce using rule 306 (EXP -> EXP is not false .)
    in              reduce using rule 306 (EXP -> EXP is not false .)
    not             reduce using rule 306 (EXP -> EXP is not false .)
    like            reduce using rule 306 (EXP -> EXP is not false .)
    then            reduce using rule 306 (EXP -> EXP is not false .)
    when            reduce using rule 306 (EXP -> EXP is not false .)
    parc            reduce using rule 306 (EXP -> EXP is not false .)
    constraint      reduce using rule 306 (EXP -> EXP is not false .)
    unique          reduce using rule 306 (EXP -> EXP is not false .)
    check           reduce using rule 306 (EXP -> EXP is not false .)
    default         reduce using rule 306 (EXP -> EXP is not false .)
    null            reduce using rule 306 (EXP -> EXP is not false .)
    primary         reduce using rule 306 (EXP -> EXP is not false .)
    references      reduce using rule 306 (EXP -> EXP is not false .)
    asc             reduce using rule 306 (EXP -> EXP is not false .)
    desc            reduce using rule 306 (EXP -> EXP is not false .)


state 344

    (308) EXP -> EXP is not unknown .

    r_from          reduce using rule 308 (EXP -> EXP is not unknown .)
    coma            reduce using rule 308 (EXP -> EXP is not unknown .)
    where           reduce using rule 308 (EXP -> EXP is not unknown .)
    group           reduce using rule 308 (EXP -> EXP is not unknown .)
    having          reduce using rule 308 (EXP -> EXP is not unknown .)
    union           reduce using rule 308 (EXP -> EXP is not unknown .)
    intersect       reduce using rule 308 (EXP -> EXP is not unknown .)
    except          reduce using rule 308 (EXP -> EXP is not unknown .)
    order           reduce using rule 308 (EXP -> EXP is not unknown .)
    limit           reduce using rule 308 (EXP -> EXP is not unknown .)
    offset          reduce using rule 308 (EXP -> EXP is not unknown .)
    ptcoma          reduce using rule 308 (EXP -> EXP is not unknown .)
    mas             reduce using rule 308 (EXP -> EXP is not unknown .)
    menos           reduce using rule 308 (EXP -> EXP is not unknown .)
    multiplicacion  reduce using rule 308 (EXP -> EXP is not unknown .)
    division        reduce using rule 308 (EXP -> EXP is not unknown .)
    modulo          reduce using rule 308 (EXP -> EXP is not unknown .)
    elevado         reduce using rule 308 (EXP -> EXP is not unknown .)
    and             reduce using rule 308 (EXP -> EXP is not unknown .)
    or              reduce using rule 308 (EXP -> EXP is not unknown .)
    mayor           reduce using rule 308 (EXP -> EXP is not unknown .)
    menor           reduce using rule 308 (EXP -> EXP is not unknown .)
    mayor_igual     reduce using rule 308 (EXP -> EXP is not unknown .)
    menor_igual     reduce using rule 308 (EXP -> EXP is not unknown .)
    igual           reduce using rule 308 (EXP -> EXP is not unknown .)
    diferente1      reduce using rule 308 (EXP -> EXP is not unknown .)
    diferente2      reduce using rule 308 (EXP -> EXP is not unknown .)
    between         reduce using rule 308 (EXP -> EXP is not unknown .)
    is              reduce using rule 308 (EXP -> EXP is not unknown .)
    isnull          reduce using rule 308 (EXP -> EXP is not unknown .)
    notnull         reduce using rule 308 (EXP -> EXP is not unknown .)
    as              reduce using rule 308 (EXP -> EXP is not unknown .)
    cadenaString    reduce using rule 308 (EXP -> EXP is not unknown .)
    cadena          reduce using rule 308 (EXP -> EXP is not unknown .)
    id              reduce using rule 308 (EXP -> EXP is not unknown .)
    in              reduce using rule 308 (EXP -> EXP is not unknown .)
    not             reduce using rule 308 (EXP -> EXP is not unknown .)
    like            reduce using rule 308 (EXP -> EXP is not unknown .)
    then            reduce using rule 308 (EXP -> EXP is not unknown .)
    when            reduce using rule 308 (EXP -> EXP is not unknown .)
    parc            reduce using rule 308 (EXP -> EXP is not unknown .)
    constraint      reduce using rule 308 (EXP -> EXP is not unknown .)
    unique          reduce using rule 308 (EXP -> EXP is not unknown .)
    check           reduce using rule 308 (EXP -> EXP is not unknown .)
    default         reduce using rule 308 (EXP -> EXP is not unknown .)
    null            reduce using rule 308 (EXP -> EXP is not unknown .)
    primary         reduce using rule 308 (EXP -> EXP is not unknown .)
    references      reduce using rule 308 (EXP -> EXP is not unknown .)
    asc             reduce using rule 308 (EXP -> EXP is not unknown .)
    desc            reduce using rule 308 (EXP -> EXP is not unknown .)


state 345

    (324) EXP -> EXP is not distinct . r_from EXP

    r_from          shift and go to state 466


state 346

    (323) EXP -> EXP is distinct r_from . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 467
    SELECT                         shift and go to state 74

state 347

    (319) EXP -> EXP not in para . EXP parc
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 468
    SELECT                         shift and go to state 74

state 348

    (320) EXP -> EXP not between EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    r_from          reduce using rule 320 (EXP -> EXP not between EXP .)
    coma            reduce using rule 320 (EXP -> EXP not between EXP .)
    where           reduce using rule 320 (EXP -> EXP not between EXP .)
    group           reduce using rule 320 (EXP -> EXP not between EXP .)
    having          reduce using rule 320 (EXP -> EXP not between EXP .)
    union           reduce using rule 320 (EXP -> EXP not between EXP .)
    intersect       reduce using rule 320 (EXP -> EXP not between EXP .)
    except          reduce using rule 320 (EXP -> EXP not between EXP .)
    order           reduce using rule 320 (EXP -> EXP not between EXP .)
    limit           reduce using rule 320 (EXP -> EXP not between EXP .)
    offset          reduce using rule 320 (EXP -> EXP not between EXP .)
    ptcoma          reduce using rule 320 (EXP -> EXP not between EXP .)
    and             reduce using rule 320 (EXP -> EXP not between EXP .)
    or              reduce using rule 320 (EXP -> EXP not between EXP .)
    between         reduce using rule 320 (EXP -> EXP not between EXP .)
    is              reduce using rule 320 (EXP -> EXP not between EXP .)
    isnull          reduce using rule 320 (EXP -> EXP not between EXP .)
    notnull         reduce using rule 320 (EXP -> EXP not between EXP .)
    as              reduce using rule 320 (EXP -> EXP not between EXP .)
    cadenaString    reduce using rule 320 (EXP -> EXP not between EXP .)
    cadena          reduce using rule 320 (EXP -> EXP not between EXP .)
    id              reduce using rule 320 (EXP -> EXP not between EXP .)
    in              reduce using rule 320 (EXP -> EXP not between EXP .)
    not             reduce using rule 320 (EXP -> EXP not between EXP .)
    like            reduce using rule 320 (EXP -> EXP not between EXP .)
    then            reduce using rule 320 (EXP -> EXP not between EXP .)
    when            reduce using rule 320 (EXP -> EXP not between EXP .)
    parc            reduce using rule 320 (EXP -> EXP not between EXP .)
    constraint      reduce using rule 320 (EXP -> EXP not between EXP .)
    unique          reduce using rule 320 (EXP -> EXP not between EXP .)
    check           reduce using rule 320 (EXP -> EXP not between EXP .)
    default         reduce using rule 320 (EXP -> EXP not between EXP .)
    null            reduce using rule 320 (EXP -> EXP not between EXP .)
    primary         reduce using rule 320 (EXP -> EXP not between EXP .)
    references      reduce using rule 320 (EXP -> EXP not between EXP .)
    asc             reduce using rule 320 (EXP -> EXP not between EXP .)
    desc            reduce using rule 320 (EXP -> EXP not between EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143

  ! mas             [ reduce using rule 320 (EXP -> EXP not between EXP .) ]
  ! menos           [ reduce using rule 320 (EXP -> EXP not between EXP .) ]
  ! multiplicacion  [ reduce using rule 320 (EXP -> EXP not between EXP .) ]
  ! division        [ reduce using rule 320 (EXP -> EXP not between EXP .) ]
  ! modulo          [ reduce using rule 320 (EXP -> EXP not between EXP .) ]
  ! elevado         [ reduce using rule 320 (EXP -> EXP not between EXP .) ]
  ! mayor           [ reduce using rule 320 (EXP -> EXP not between EXP .) ]
  ! menor           [ reduce using rule 320 (EXP -> EXP not between EXP .) ]
  ! mayor_igual     [ reduce using rule 320 (EXP -> EXP not between EXP .) ]
  ! menor_igual     [ reduce using rule 320 (EXP -> EXP not between EXP .) ]
  ! igual           [ reduce using rule 320 (EXP -> EXP not between EXP .) ]
  ! diferente1      [ reduce using rule 320 (EXP -> EXP not between EXP .) ]
  ! diferente2      [ reduce using rule 320 (EXP -> EXP not between EXP .) ]
  ! and             [ shift and go to state 135 ]
  ! or              [ shift and go to state 136 ]
  ! between         [ shift and go to state 144 ]
  ! is              [ shift and go to state 145 ]
  ! isnull          [ shift and go to state 147 ]
  ! notnull         [ shift and go to state 148 ]
  ! as              [ shift and go to state 149 ]
  ! cadenaString    [ shift and go to state 150 ]
  ! cadena          [ shift and go to state 151 ]
  ! id              [ shift and go to state 152 ]
  ! in              [ shift and go to state 153 ]
  ! not             [ shift and go to state 146 ]
  ! like            [ shift and go to state 154 ]


state 349

    (322) EXP -> EXP not between symetric . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 469
    SELECT                         shift and go to state 74

state 350

    (326) EXP -> EXP not like cadena .

    r_from          reduce using rule 326 (EXP -> EXP not like cadena .)
    coma            reduce using rule 326 (EXP -> EXP not like cadena .)
    where           reduce using rule 326 (EXP -> EXP not like cadena .)
    group           reduce using rule 326 (EXP -> EXP not like cadena .)
    having          reduce using rule 326 (EXP -> EXP not like cadena .)
    union           reduce using rule 326 (EXP -> EXP not like cadena .)
    intersect       reduce using rule 326 (EXP -> EXP not like cadena .)
    except          reduce using rule 326 (EXP -> EXP not like cadena .)
    order           reduce using rule 326 (EXP -> EXP not like cadena .)
    limit           reduce using rule 326 (EXP -> EXP not like cadena .)
    offset          reduce using rule 326 (EXP -> EXP not like cadena .)
    ptcoma          reduce using rule 326 (EXP -> EXP not like cadena .)
    mas             reduce using rule 326 (EXP -> EXP not like cadena .)
    menos           reduce using rule 326 (EXP -> EXP not like cadena .)
    multiplicacion  reduce using rule 326 (EXP -> EXP not like cadena .)
    division        reduce using rule 326 (EXP -> EXP not like cadena .)
    modulo          reduce using rule 326 (EXP -> EXP not like cadena .)
    elevado         reduce using rule 326 (EXP -> EXP not like cadena .)
    and             reduce using rule 326 (EXP -> EXP not like cadena .)
    or              reduce using rule 326 (EXP -> EXP not like cadena .)
    mayor           reduce using rule 326 (EXP -> EXP not like cadena .)
    menor           reduce using rule 326 (EXP -> EXP not like cadena .)
    mayor_igual     reduce using rule 326 (EXP -> EXP not like cadena .)
    menor_igual     reduce using rule 326 (EXP -> EXP not like cadena .)
    igual           reduce using rule 326 (EXP -> EXP not like cadena .)
    diferente1      reduce using rule 326 (EXP -> EXP not like cadena .)
    diferente2      reduce using rule 326 (EXP -> EXP not like cadena .)
    between         reduce using rule 326 (EXP -> EXP not like cadena .)
    is              reduce using rule 326 (EXP -> EXP not like cadena .)
    isnull          reduce using rule 326 (EXP -> EXP not like cadena .)
    notnull         reduce using rule 326 (EXP -> EXP not like cadena .)
    as              reduce using rule 326 (EXP -> EXP not like cadena .)
    cadenaString    reduce using rule 326 (EXP -> EXP not like cadena .)
    cadena          reduce using rule 326 (EXP -> EXP not like cadena .)
    id              reduce using rule 326 (EXP -> EXP not like cadena .)
    in              reduce using rule 326 (EXP -> EXP not like cadena .)
    not             reduce using rule 326 (EXP -> EXP not like cadena .)
    like            reduce using rule 326 (EXP -> EXP not like cadena .)
    then            reduce using rule 326 (EXP -> EXP not like cadena .)
    when            reduce using rule 326 (EXP -> EXP not like cadena .)
    parc            reduce using rule 326 (EXP -> EXP not like cadena .)
    constraint      reduce using rule 326 (EXP -> EXP not like cadena .)
    unique          reduce using rule 326 (EXP -> EXP not like cadena .)
    check           reduce using rule 326 (EXP -> EXP not like cadena .)
    default         reduce using rule 326 (EXP -> EXP not like cadena .)
    null            reduce using rule 326 (EXP -> EXP not like cadena .)
    primary         reduce using rule 326 (EXP -> EXP not like cadena .)
    references      reduce using rule 326 (EXP -> EXP not like cadena .)
    asc             reduce using rule 326 (EXP -> EXP not like cadena .)
    desc            reduce using rule 326 (EXP -> EXP not like cadena .)


state 351

    (318) EXP -> EXP in para EXP . parc
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    parc            shift and go to state 470
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    and             shift and go to state 135
    or              shift and go to state 136
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143
    between         shift and go to state 144
    is              shift and go to state 145
    isnull          shift and go to state 147
    notnull         shift and go to state 148
    as              shift and go to state 149
    cadenaString    shift and go to state 150
    cadena          shift and go to state 151
    id              shift and go to state 152
    in              shift and go to state 153
    not             shift and go to state 146
    like            shift and go to state 154


state 352

    (236) TIPO -> interval cadena .

    r_from          reduce using rule 236 (TIPO -> interval cadena .)
    coma            reduce using rule 236 (TIPO -> interval cadena .)
    where           reduce using rule 236 (TIPO -> interval cadena .)
    group           reduce using rule 236 (TIPO -> interval cadena .)
    having          reduce using rule 236 (TIPO -> interval cadena .)
    union           reduce using rule 236 (TIPO -> interval cadena .)
    intersect       reduce using rule 236 (TIPO -> interval cadena .)
    except          reduce using rule 236 (TIPO -> interval cadena .)
    order           reduce using rule 236 (TIPO -> interval cadena .)
    limit           reduce using rule 236 (TIPO -> interval cadena .)
    offset          reduce using rule 236 (TIPO -> interval cadena .)
    ptcoma          reduce using rule 236 (TIPO -> interval cadena .)
    mas             reduce using rule 236 (TIPO -> interval cadena .)
    menos           reduce using rule 236 (TIPO -> interval cadena .)
    multiplicacion  reduce using rule 236 (TIPO -> interval cadena .)
    division        reduce using rule 236 (TIPO -> interval cadena .)
    modulo          reduce using rule 236 (TIPO -> interval cadena .)
    elevado         reduce using rule 236 (TIPO -> interval cadena .)
    and             reduce using rule 236 (TIPO -> interval cadena .)
    or              reduce using rule 236 (TIPO -> interval cadena .)
    mayor           reduce using rule 236 (TIPO -> interval cadena .)
    menor           reduce using rule 236 (TIPO -> interval cadena .)
    mayor_igual     reduce using rule 236 (TIPO -> interval cadena .)
    menor_igual     reduce using rule 236 (TIPO -> interval cadena .)
    igual           reduce using rule 236 (TIPO -> interval cadena .)
    diferente1      reduce using rule 236 (TIPO -> interval cadena .)
    diferente2      reduce using rule 236 (TIPO -> interval cadena .)
    between         reduce using rule 236 (TIPO -> interval cadena .)
    is              reduce using rule 236 (TIPO -> interval cadena .)
    isnull          reduce using rule 236 (TIPO -> interval cadena .)
    notnull         reduce using rule 236 (TIPO -> interval cadena .)
    as              reduce using rule 236 (TIPO -> interval cadena .)
    cadenaString    reduce using rule 236 (TIPO -> interval cadena .)
    cadena          reduce using rule 236 (TIPO -> interval cadena .)
    id              reduce using rule 236 (TIPO -> interval cadena .)
    in              reduce using rule 236 (TIPO -> interval cadena .)
    not             reduce using rule 236 (TIPO -> interval cadena .)
    like            reduce using rule 236 (TIPO -> interval cadena .)
    then            reduce using rule 236 (TIPO -> interval cadena .)
    when            reduce using rule 236 (TIPO -> interval cadena .)
    parc            reduce using rule 236 (TIPO -> interval cadena .)
    constraint      reduce using rule 236 (TIPO -> interval cadena .)
    unique          reduce using rule 236 (TIPO -> interval cadena .)
    check           reduce using rule 236 (TIPO -> interval cadena .)
    default         reduce using rule 236 (TIPO -> interval cadena .)
    null            reduce using rule 236 (TIPO -> interval cadena .)
    primary         reduce using rule 236 (TIPO -> interval cadena .)
    references      reduce using rule 236 (TIPO -> interval cadena .)
    asc             reduce using rule 236 (TIPO -> interval cadena .)
    desc            reduce using rule 236 (TIPO -> interval cadena .)
    dospuntos       reduce using rule 236 (TIPO -> interval cadena .)
    language        reduce using rule 236 (TIPO -> interval cadena .)
    do              reduce using rule 236 (TIPO -> interval cadena .)


state 353

    (246) TIPO -> interval para . int parc
    (256) TIPO -> interval para . int parc cadena

    int             shift and go to state 471


state 354

    (237) TIPO -> decimal para . int coma int parc
    (238) TIPO -> decimal para . int parc

    int             shift and go to state 472


state 355

    (240) TIPO -> numeric para . int coma int parc
    (241) TIPO -> numeric para . int parc

    int             shift and go to state 473


state 356

    (243) TIPO -> varchar para . int parc

    int             shift and go to state 474


state 357

    (244) TIPO -> timestamp para . int parc
    (252) TIPO -> timestamp para . int parc without time zone
    (253) TIPO -> timestamp para . int parc with time zone

    int             shift and go to state 475


state 358

    (272) TIPO -> timestamp without . time zone

    time            shift and go to state 476


state 359

    (273) TIPO -> timestamp with . time zone

    time            shift and go to state 477


state 360

    (245) TIPO -> character para . int parc

    int             shift and go to state 478


state 361

    (249) TIPO -> character varying . para int parc

    para            shift and go to state 479


state 362

    (247) TIPO -> char para . int parc

    int             shift and go to state 480


state 363

    (248) TIPO -> time para . int parc
    (254) TIPO -> time para . int parc without time zone
    (255) TIPO -> time para . int parc with time zone

    int             shift and go to state 481


state 364

    (274) TIPO -> time without . time zone

    time            shift and go to state 482


state 365

    (275) TIPO -> time with . time zone

    time            shift and go to state 483


state 366

    (250) TIPO -> id modulo . rowtype

    rowtype         shift and go to state 484


state 367

    (251) TIPO -> idPunto modulo . type

    type            shift and go to state 485


state 368

    (262) TIPO -> double precision .

    r_from          reduce using rule 262 (TIPO -> double precision .)
    coma            reduce using rule 262 (TIPO -> double precision .)
    where           reduce using rule 262 (TIPO -> double precision .)
    group           reduce using rule 262 (TIPO -> double precision .)
    having          reduce using rule 262 (TIPO -> double precision .)
    union           reduce using rule 262 (TIPO -> double precision .)
    intersect       reduce using rule 262 (TIPO -> double precision .)
    except          reduce using rule 262 (TIPO -> double precision .)
    order           reduce using rule 262 (TIPO -> double precision .)
    limit           reduce using rule 262 (TIPO -> double precision .)
    offset          reduce using rule 262 (TIPO -> double precision .)
    ptcoma          reduce using rule 262 (TIPO -> double precision .)
    mas             reduce using rule 262 (TIPO -> double precision .)
    menos           reduce using rule 262 (TIPO -> double precision .)
    multiplicacion  reduce using rule 262 (TIPO -> double precision .)
    division        reduce using rule 262 (TIPO -> double precision .)
    modulo          reduce using rule 262 (TIPO -> double precision .)
    elevado         reduce using rule 262 (TIPO -> double precision .)
    and             reduce using rule 262 (TIPO -> double precision .)
    or              reduce using rule 262 (TIPO -> double precision .)
    mayor           reduce using rule 262 (TIPO -> double precision .)
    menor           reduce using rule 262 (TIPO -> double precision .)
    mayor_igual     reduce using rule 262 (TIPO -> double precision .)
    menor_igual     reduce using rule 262 (TIPO -> double precision .)
    igual           reduce using rule 262 (TIPO -> double precision .)
    diferente1      reduce using rule 262 (TIPO -> double precision .)
    diferente2      reduce using rule 262 (TIPO -> double precision .)
    between         reduce using rule 262 (TIPO -> double precision .)
    is              reduce using rule 262 (TIPO -> double precision .)
    isnull          reduce using rule 262 (TIPO -> double precision .)
    notnull         reduce using rule 262 (TIPO -> double precision .)
    as              reduce using rule 262 (TIPO -> double precision .)
    cadenaString    reduce using rule 262 (TIPO -> double precision .)
    cadena          reduce using rule 262 (TIPO -> double precision .)
    id              reduce using rule 262 (TIPO -> double precision .)
    in              reduce using rule 262 (TIPO -> double precision .)
    not             reduce using rule 262 (TIPO -> double precision .)
    like            reduce using rule 262 (TIPO -> double precision .)
    then            reduce using rule 262 (TIPO -> double precision .)
    when            reduce using rule 262 (TIPO -> double precision .)
    parc            reduce using rule 262 (TIPO -> double precision .)
    constraint      reduce using rule 262 (TIPO -> double precision .)
    unique          reduce using rule 262 (TIPO -> double precision .)
    check           reduce using rule 262 (TIPO -> double precision .)
    default         reduce using rule 262 (TIPO -> double precision .)
    null            reduce using rule 262 (TIPO -> double precision .)
    primary         reduce using rule 262 (TIPO -> double precision .)
    references      reduce using rule 262 (TIPO -> double precision .)
    asc             reduce using rule 262 (TIPO -> double precision .)
    desc            reduce using rule 262 (TIPO -> double precision .)
    dospuntos       reduce using rule 262 (TIPO -> double precision .)
    language        reduce using rule 262 (TIPO -> double precision .)
    do              reduce using rule 262 (TIPO -> double precision .)


state 369

    (329) EXP -> id para LEXP parc .

    r_from          reduce using rule 329 (EXP -> id para LEXP parc .)
    coma            reduce using rule 329 (EXP -> id para LEXP parc .)
    where           reduce using rule 329 (EXP -> id para LEXP parc .)
    group           reduce using rule 329 (EXP -> id para LEXP parc .)
    having          reduce using rule 329 (EXP -> id para LEXP parc .)
    union           reduce using rule 329 (EXP -> id para LEXP parc .)
    intersect       reduce using rule 329 (EXP -> id para LEXP parc .)
    except          reduce using rule 329 (EXP -> id para LEXP parc .)
    order           reduce using rule 329 (EXP -> id para LEXP parc .)
    limit           reduce using rule 329 (EXP -> id para LEXP parc .)
    offset          reduce using rule 329 (EXP -> id para LEXP parc .)
    ptcoma          reduce using rule 329 (EXP -> id para LEXP parc .)
    mas             reduce using rule 329 (EXP -> id para LEXP parc .)
    menos           reduce using rule 329 (EXP -> id para LEXP parc .)
    multiplicacion  reduce using rule 329 (EXP -> id para LEXP parc .)
    division        reduce using rule 329 (EXP -> id para LEXP parc .)
    modulo          reduce using rule 329 (EXP -> id para LEXP parc .)
    elevado         reduce using rule 329 (EXP -> id para LEXP parc .)
    and             reduce using rule 329 (EXP -> id para LEXP parc .)
    or              reduce using rule 329 (EXP -> id para LEXP parc .)
    mayor           reduce using rule 329 (EXP -> id para LEXP parc .)
    menor           reduce using rule 329 (EXP -> id para LEXP parc .)
    mayor_igual     reduce using rule 329 (EXP -> id para LEXP parc .)
    menor_igual     reduce using rule 329 (EXP -> id para LEXP parc .)
    igual           reduce using rule 329 (EXP -> id para LEXP parc .)
    diferente1      reduce using rule 329 (EXP -> id para LEXP parc .)
    diferente2      reduce using rule 329 (EXP -> id para LEXP parc .)
    between         reduce using rule 329 (EXP -> id para LEXP parc .)
    is              reduce using rule 329 (EXP -> id para LEXP parc .)
    isnull          reduce using rule 329 (EXP -> id para LEXP parc .)
    notnull         reduce using rule 329 (EXP -> id para LEXP parc .)
    as              reduce using rule 329 (EXP -> id para LEXP parc .)
    cadenaString    reduce using rule 329 (EXP -> id para LEXP parc .)
    cadena          reduce using rule 329 (EXP -> id para LEXP parc .)
    id              reduce using rule 329 (EXP -> id para LEXP parc .)
    in              reduce using rule 329 (EXP -> id para LEXP parc .)
    not             reduce using rule 329 (EXP -> id para LEXP parc .)
    like            reduce using rule 329 (EXP -> id para LEXP parc .)
    then            reduce using rule 329 (EXP -> id para LEXP parc .)
    when            reduce using rule 329 (EXP -> id para LEXP parc .)
    parc            reduce using rule 329 (EXP -> id para LEXP parc .)
    constraint      reduce using rule 329 (EXP -> id para LEXP parc .)
    unique          reduce using rule 329 (EXP -> id para LEXP parc .)
    check           reduce using rule 329 (EXP -> id para LEXP parc .)
    default         reduce using rule 329 (EXP -> id para LEXP parc .)
    null            reduce using rule 329 (EXP -> id para LEXP parc .)
    primary         reduce using rule 329 (EXP -> id para LEXP parc .)
    references      reduce using rule 329 (EXP -> id para LEXP parc .)
    asc             reduce using rule 329 (EXP -> id para LEXP parc .)
    desc            reduce using rule 329 (EXP -> id para LEXP parc .)


state 370

    (331) EXP -> any para LEXP parc .

    r_from          reduce using rule 331 (EXP -> any para LEXP parc .)
    coma            reduce using rule 331 (EXP -> any para LEXP parc .)
    where           reduce using rule 331 (EXP -> any para LEXP parc .)
    group           reduce using rule 331 (EXP -> any para LEXP parc .)
    having          reduce using rule 331 (EXP -> any para LEXP parc .)
    union           reduce using rule 331 (EXP -> any para LEXP parc .)
    intersect       reduce using rule 331 (EXP -> any para LEXP parc .)
    except          reduce using rule 331 (EXP -> any para LEXP parc .)
    order           reduce using rule 331 (EXP -> any para LEXP parc .)
    limit           reduce using rule 331 (EXP -> any para LEXP parc .)
    offset          reduce using rule 331 (EXP -> any para LEXP parc .)
    ptcoma          reduce using rule 331 (EXP -> any para LEXP parc .)
    mas             reduce using rule 331 (EXP -> any para LEXP parc .)
    menos           reduce using rule 331 (EXP -> any para LEXP parc .)
    multiplicacion  reduce using rule 331 (EXP -> any para LEXP parc .)
    division        reduce using rule 331 (EXP -> any para LEXP parc .)
    modulo          reduce using rule 331 (EXP -> any para LEXP parc .)
    elevado         reduce using rule 331 (EXP -> any para LEXP parc .)
    and             reduce using rule 331 (EXP -> any para LEXP parc .)
    or              reduce using rule 331 (EXP -> any para LEXP parc .)
    mayor           reduce using rule 331 (EXP -> any para LEXP parc .)
    menor           reduce using rule 331 (EXP -> any para LEXP parc .)
    mayor_igual     reduce using rule 331 (EXP -> any para LEXP parc .)
    menor_igual     reduce using rule 331 (EXP -> any para LEXP parc .)
    igual           reduce using rule 331 (EXP -> any para LEXP parc .)
    diferente1      reduce using rule 331 (EXP -> any para LEXP parc .)
    diferente2      reduce using rule 331 (EXP -> any para LEXP parc .)
    between         reduce using rule 331 (EXP -> any para LEXP parc .)
    is              reduce using rule 331 (EXP -> any para LEXP parc .)
    isnull          reduce using rule 331 (EXP -> any para LEXP parc .)
    notnull         reduce using rule 331 (EXP -> any para LEXP parc .)
    as              reduce using rule 331 (EXP -> any para LEXP parc .)
    cadenaString    reduce using rule 331 (EXP -> any para LEXP parc .)
    cadena          reduce using rule 331 (EXP -> any para LEXP parc .)
    id              reduce using rule 331 (EXP -> any para LEXP parc .)
    in              reduce using rule 331 (EXP -> any para LEXP parc .)
    not             reduce using rule 331 (EXP -> any para LEXP parc .)
    like            reduce using rule 331 (EXP -> any para LEXP parc .)
    then            reduce using rule 331 (EXP -> any para LEXP parc .)
    when            reduce using rule 331 (EXP -> any para LEXP parc .)
    parc            reduce using rule 331 (EXP -> any para LEXP parc .)
    constraint      reduce using rule 331 (EXP -> any para LEXP parc .)
    unique          reduce using rule 331 (EXP -> any para LEXP parc .)
    check           reduce using rule 331 (EXP -> any para LEXP parc .)
    default         reduce using rule 331 (EXP -> any para LEXP parc .)
    null            reduce using rule 331 (EXP -> any para LEXP parc .)
    primary         reduce using rule 331 (EXP -> any para LEXP parc .)
    references      reduce using rule 331 (EXP -> any para LEXP parc .)
    asc             reduce using rule 331 (EXP -> any para LEXP parc .)
    desc            reduce using rule 331 (EXP -> any para LEXP parc .)


state 371

    (332) EXP -> all para LEXP parc .

    r_from          reduce using rule 332 (EXP -> all para LEXP parc .)
    coma            reduce using rule 332 (EXP -> all para LEXP parc .)
    where           reduce using rule 332 (EXP -> all para LEXP parc .)
    group           reduce using rule 332 (EXP -> all para LEXP parc .)
    having          reduce using rule 332 (EXP -> all para LEXP parc .)
    union           reduce using rule 332 (EXP -> all para LEXP parc .)
    intersect       reduce using rule 332 (EXP -> all para LEXP parc .)
    except          reduce using rule 332 (EXP -> all para LEXP parc .)
    order           reduce using rule 332 (EXP -> all para LEXP parc .)
    limit           reduce using rule 332 (EXP -> all para LEXP parc .)
    offset          reduce using rule 332 (EXP -> all para LEXP parc .)
    ptcoma          reduce using rule 332 (EXP -> all para LEXP parc .)
    mas             reduce using rule 332 (EXP -> all para LEXP parc .)
    menos           reduce using rule 332 (EXP -> all para LEXP parc .)
    multiplicacion  reduce using rule 332 (EXP -> all para LEXP parc .)
    division        reduce using rule 332 (EXP -> all para LEXP parc .)
    modulo          reduce using rule 332 (EXP -> all para LEXP parc .)
    elevado         reduce using rule 332 (EXP -> all para LEXP parc .)
    and             reduce using rule 332 (EXP -> all para LEXP parc .)
    or              reduce using rule 332 (EXP -> all para LEXP parc .)
    mayor           reduce using rule 332 (EXP -> all para LEXP parc .)
    menor           reduce using rule 332 (EXP -> all para LEXP parc .)
    mayor_igual     reduce using rule 332 (EXP -> all para LEXP parc .)
    menor_igual     reduce using rule 332 (EXP -> all para LEXP parc .)
    igual           reduce using rule 332 (EXP -> all para LEXP parc .)
    diferente1      reduce using rule 332 (EXP -> all para LEXP parc .)
    diferente2      reduce using rule 332 (EXP -> all para LEXP parc .)
    between         reduce using rule 332 (EXP -> all para LEXP parc .)
    is              reduce using rule 332 (EXP -> all para LEXP parc .)
    isnull          reduce using rule 332 (EXP -> all para LEXP parc .)
    notnull         reduce using rule 332 (EXP -> all para LEXP parc .)
    as              reduce using rule 332 (EXP -> all para LEXP parc .)
    cadenaString    reduce using rule 332 (EXP -> all para LEXP parc .)
    cadena          reduce using rule 332 (EXP -> all para LEXP parc .)
    id              reduce using rule 332 (EXP -> all para LEXP parc .)
    in              reduce using rule 332 (EXP -> all para LEXP parc .)
    not             reduce using rule 332 (EXP -> all para LEXP parc .)
    like            reduce using rule 332 (EXP -> all para LEXP parc .)
    then            reduce using rule 332 (EXP -> all para LEXP parc .)
    when            reduce using rule 332 (EXP -> all para LEXP parc .)
    parc            reduce using rule 332 (EXP -> all para LEXP parc .)
    constraint      reduce using rule 332 (EXP -> all para LEXP parc .)
    unique          reduce using rule 332 (EXP -> all para LEXP parc .)
    check           reduce using rule 332 (EXP -> all para LEXP parc .)
    default         reduce using rule 332 (EXP -> all para LEXP parc .)
    null            reduce using rule 332 (EXP -> all para LEXP parc .)
    primary         reduce using rule 332 (EXP -> all para LEXP parc .)
    references      reduce using rule 332 (EXP -> all para LEXP parc .)
    asc             reduce using rule 332 (EXP -> all para LEXP parc .)
    desc            reduce using rule 332 (EXP -> all para LEXP parc .)


state 372

    (333) EXP -> some para LEXP parc .

    r_from          reduce using rule 333 (EXP -> some para LEXP parc .)
    coma            reduce using rule 333 (EXP -> some para LEXP parc .)
    where           reduce using rule 333 (EXP -> some para LEXP parc .)
    group           reduce using rule 333 (EXP -> some para LEXP parc .)
    having          reduce using rule 333 (EXP -> some para LEXP parc .)
    union           reduce using rule 333 (EXP -> some para LEXP parc .)
    intersect       reduce using rule 333 (EXP -> some para LEXP parc .)
    except          reduce using rule 333 (EXP -> some para LEXP parc .)
    order           reduce using rule 333 (EXP -> some para LEXP parc .)
    limit           reduce using rule 333 (EXP -> some para LEXP parc .)
    offset          reduce using rule 333 (EXP -> some para LEXP parc .)
    ptcoma          reduce using rule 333 (EXP -> some para LEXP parc .)
    mas             reduce using rule 333 (EXP -> some para LEXP parc .)
    menos           reduce using rule 333 (EXP -> some para LEXP parc .)
    multiplicacion  reduce using rule 333 (EXP -> some para LEXP parc .)
    division        reduce using rule 333 (EXP -> some para LEXP parc .)
    modulo          reduce using rule 333 (EXP -> some para LEXP parc .)
    elevado         reduce using rule 333 (EXP -> some para LEXP parc .)
    and             reduce using rule 333 (EXP -> some para LEXP parc .)
    or              reduce using rule 333 (EXP -> some para LEXP parc .)
    mayor           reduce using rule 333 (EXP -> some para LEXP parc .)
    menor           reduce using rule 333 (EXP -> some para LEXP parc .)
    mayor_igual     reduce using rule 333 (EXP -> some para LEXP parc .)
    menor_igual     reduce using rule 333 (EXP -> some para LEXP parc .)
    igual           reduce using rule 333 (EXP -> some para LEXP parc .)
    diferente1      reduce using rule 333 (EXP -> some para LEXP parc .)
    diferente2      reduce using rule 333 (EXP -> some para LEXP parc .)
    between         reduce using rule 333 (EXP -> some para LEXP parc .)
    is              reduce using rule 333 (EXP -> some para LEXP parc .)
    isnull          reduce using rule 333 (EXP -> some para LEXP parc .)
    notnull         reduce using rule 333 (EXP -> some para LEXP parc .)
    as              reduce using rule 333 (EXP -> some para LEXP parc .)
    cadenaString    reduce using rule 333 (EXP -> some para LEXP parc .)
    cadena          reduce using rule 333 (EXP -> some para LEXP parc .)
    id              reduce using rule 333 (EXP -> some para LEXP parc .)
    in              reduce using rule 333 (EXP -> some para LEXP parc .)
    not             reduce using rule 333 (EXP -> some para LEXP parc .)
    like            reduce using rule 333 (EXP -> some para LEXP parc .)
    then            reduce using rule 333 (EXP -> some para LEXP parc .)
    when            reduce using rule 333 (EXP -> some para LEXP parc .)
    parc            reduce using rule 333 (EXP -> some para LEXP parc .)
    constraint      reduce using rule 333 (EXP -> some para LEXP parc .)
    unique          reduce using rule 333 (EXP -> some para LEXP parc .)
    check           reduce using rule 333 (EXP -> some para LEXP parc .)
    default         reduce using rule 333 (EXP -> some para LEXP parc .)
    null            reduce using rule 333 (EXP -> some para LEXP parc .)
    primary         reduce using rule 333 (EXP -> some para LEXP parc .)
    references      reduce using rule 333 (EXP -> some para LEXP parc .)
    asc             reduce using rule 333 (EXP -> some para LEXP parc .)
    desc            reduce using rule 333 (EXP -> some para LEXP parc .)


state 373

    (334) EXP -> extract para FIELDS r_from . timestamp cadena parc

    timestamp       shift and go to state 486


state 374

    (174) COLDEF -> id . TIPO
    (175) COLDEF -> id . TIPO LOPCOLUMN
    (236) TIPO -> . interval cadena
    (237) TIPO -> . decimal para int coma int parc
    (238) TIPO -> . decimal para int parc
    (239) TIPO -> . decimal
    (240) TIPO -> . numeric para int coma int parc
    (241) TIPO -> . numeric para int parc
    (242) TIPO -> . numeric
    (243) TIPO -> . varchar para int parc
    (244) TIPO -> . timestamp para int parc
    (245) TIPO -> . character para int parc
    (246) TIPO -> . interval para int parc
    (247) TIPO -> . char para int parc
    (248) TIPO -> . time para int parc
    (249) TIPO -> . character varying para int parc
    (250) TIPO -> . id modulo rowtype
    (251) TIPO -> . idPunto modulo type
    (252) TIPO -> . timestamp para int parc without time zone
    (253) TIPO -> . timestamp para int parc with time zone
    (254) TIPO -> . time para int parc without time zone
    (255) TIPO -> . time para int parc with time zone
    (256) TIPO -> . interval para int parc cadena
    (257) TIPO -> . smallint
    (258) TIPO -> . integer
    (259) TIPO -> . r_int
    (260) TIPO -> . bigint
    (261) TIPO -> . real
    (262) TIPO -> . double precision
    (263) TIPO -> . money
    (264) TIPO -> . text
    (265) TIPO -> . timestamp
    (266) TIPO -> . date
    (267) TIPO -> . time
    (268) TIPO -> . interval
    (269) TIPO -> . boolean
    (270) TIPO -> . record
    (271) TIPO -> . varchar
    (272) TIPO -> . timestamp without time zone
    (273) TIPO -> . timestamp with time zone
    (274) TIPO -> . time without time zone
    (275) TIPO -> . time with time zone
    (276) TIPO -> . id

    interval        shift and go to state 241
    decimal         shift and go to state 242
    numeric         shift and go to state 243
    varchar         shift and go to state 244
    timestamp       shift and go to state 245
    character       shift and go to state 246
    char            shift and go to state 247
    time            shift and go to state 248
    id              shift and go to state 249
    idPunto         shift and go to state 250
    smallint        shift and go to state 251
    integer         shift and go to state 252
    r_int           shift and go to state 253
    bigint          shift and go to state 254
    real            shift and go to state 255
    double          shift and go to state 256
    money           shift and go to state 257
    text            shift and go to state 258
    date            shift and go to state 259
    boolean         shift and go to state 260
    record          shift and go to state 261

    TIPO                           shift and go to state 487

state 375

    (168) CREATETABLE -> create table id para LDEF . parc ptcoma
    (169) CREATETABLE -> create table id para LDEF . parc HERENCIA ptcoma
    (170) LDEF -> LDEF . coma COLDEF

    parc            shift and go to state 488
    coma            shift and go to state 489


state 376

    (171) LDEF -> COLDEF .

    parc            reduce using rule 171 (LDEF -> COLDEF .)
    coma            reduce using rule 171 (LDEF -> COLDEF .)


state 377

    (172) COLDEF -> OPCONST .

    parc            reduce using rule 172 (COLDEF -> OPCONST .)
    coma            reduce using rule 172 (COLDEF -> OPCONST .)


state 378

    (173) COLDEF -> constraint . id OPCONST

    id              shift and go to state 490


state 379

    (187) OPCONST -> primary . key para LEXP parc

    key             shift and go to state 491


state 380

    (188) OPCONST -> foreign . key para LEXP parc references id para LEXP parc

    key             shift and go to state 492


state 381

    (189) OPCONST -> unique . para LEXP parc

    para            shift and go to state 493


state 382

    (190) OPCONST -> check . para CONDCHECK parc

    para            shift and go to state 494


state 383

    (199) CREATETYPE -> create type id as enum . para LEXP parc

    para            shift and go to state 495


state 384

    (151) CREATEDB -> create RD if not exist . id
    (152) CREATEDB -> create RD if not exist . id OPCCDB

    id              shift and go to state 496


state 385

    (157) OPCCDB -> PROPIETARIO MODO .

    ptcoma          reduce using rule 157 (OPCCDB -> PROPIETARIO MODO .)


state 386

    (160) PROPIETARIO -> owner igual . id
    (161) PROPIETARIO -> owner igual . cadena
    (162) PROPIETARIO -> owner igual . cadenaString

    id              shift and go to state 497
    cadena          shift and go to state 498
    cadenaString    shift and go to state 499


state 387

    (163) PROPIETARIO -> owner id .

    mode            reduce using rule 163 (PROPIETARIO -> owner id .)
    ptcoma          reduce using rule 163 (PROPIETARIO -> owner id .)


state 388

    (164) PROPIETARIO -> owner cadena .

    mode            reduce using rule 164 (PROPIETARIO -> owner cadena .)
    ptcoma          reduce using rule 164 (PROPIETARIO -> owner cadena .)


state 389

    (165) PROPIETARIO -> owner cadenaString .

    mode            reduce using rule 165 (PROPIETARIO -> owner cadenaString .)
    ptcoma          reduce using rule 165 (PROPIETARIO -> owner cadenaString .)


state 390

    (166) MODO -> mode igual . int

    int             shift and go to state 500


state 391

    (167) MODO -> mode int .

    ptcoma          reduce using rule 167 (MODO -> mode int .)


state 392

    (52) CREATEINDEX -> create index id on id . para LEXP parc
    (54) CREATEINDEX -> create index id on id . using hash para LEXP parc
    (55) CREATEINDEX -> create index id on id . para id ORDEN parc
    (56) CREATEINDEX -> create index id on id . para id id ORDEN parc
    (57) CREATEINDEX -> create index id on id . para id id parc

    para            shift and go to state 501
    using           shift and go to state 502


state 393

    (53) CREATEINDEX -> create unique index id on . id para LEXP parc

    id              shift and go to state 503


state 394

    (48) LPARAM -> id . TIPO
    (236) TIPO -> . interval cadena
    (237) TIPO -> . decimal para int coma int parc
    (238) TIPO -> . decimal para int parc
    (239) TIPO -> . decimal
    (240) TIPO -> . numeric para int coma int parc
    (241) TIPO -> . numeric para int parc
    (242) TIPO -> . numeric
    (243) TIPO -> . varchar para int parc
    (244) TIPO -> . timestamp para int parc
    (245) TIPO -> . character para int parc
    (246) TIPO -> . interval para int parc
    (247) TIPO -> . char para int parc
    (248) TIPO -> . time para int parc
    (249) TIPO -> . character varying para int parc
    (250) TIPO -> . id modulo rowtype
    (251) TIPO -> . idPunto modulo type
    (252) TIPO -> . timestamp para int parc without time zone
    (253) TIPO -> . timestamp para int parc with time zone
    (254) TIPO -> . time para int parc without time zone
    (255) TIPO -> . time para int parc with time zone
    (256) TIPO -> . interval para int parc cadena
    (257) TIPO -> . smallint
    (258) TIPO -> . integer
    (259) TIPO -> . r_int
    (260) TIPO -> . bigint
    (261) TIPO -> . real
    (262) TIPO -> . double precision
    (263) TIPO -> . money
    (264) TIPO -> . text
    (265) TIPO -> . timestamp
    (266) TIPO -> . date
    (267) TIPO -> . time
    (268) TIPO -> . interval
    (269) TIPO -> . boolean
    (270) TIPO -> . record
    (271) TIPO -> . varchar
    (272) TIPO -> . timestamp without time zone
    (273) TIPO -> . timestamp with time zone
    (274) TIPO -> . time without time zone
    (275) TIPO -> . time with time zone
    (276) TIPO -> . id

    interval        shift and go to state 241
    decimal         shift and go to state 242
    numeric         shift and go to state 243
    varchar         shift and go to state 244
    timestamp       shift and go to state 245
    character       shift and go to state 246
    char            shift and go to state 247
    time            shift and go to state 248
    id              shift and go to state 249
    idPunto         shift and go to state 250
    smallint        shift and go to state 251
    integer         shift and go to state 252
    r_int           shift and go to state 253
    bigint          shift and go to state 254
    real            shift and go to state 255
    double          shift and go to state 256
    money           shift and go to state 257
    text            shift and go to state 258
    date            shift and go to state 259
    boolean         shift and go to state 260
    record          shift and go to state 261

    TIPO                           shift and go to state 504

state 395

    (37) PROCEDIMIENTOS -> create procedure id para LPARAM . parc LENGUAJE LCONTENIDOP
    (39) PROCEDIMIENTOS -> create procedure id para LPARAM . parc LCONTENIDOP LENGUAJE
    (45) LPARAM -> LPARAM . coma inout id TIPO
    (46) LPARAM -> LPARAM . coma id TIPO

    parc            shift and go to state 505
    coma            shift and go to state 506


state 396

    (38) PROCEDIMIENTOS -> create procedure id para parc . LENGUAJE LCONTENIDOP
    (40) PROCEDIMIENTOS -> create procedure id para parc . LCONTENIDOP LENGUAJE
    (49) LENGUAJE -> . language plpgsql
    (50) LENGUAJE -> . language plpgsql ptcoma
    (41) LCONTENIDOP -> . LCONTENIDOP CONTENIDOP
    (42) LCONTENIDOP -> . CONTENIDOP
    (43) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (44) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn

    language        shift and go to state 509
    as              shift and go to state 511
    do              shift and go to state 512

    LENGUAJE                       shift and go to state 507
    LCONTENIDOP                    shift and go to state 508
    CONTENIDOP                     shift and go to state 510

state 397

    (47) LPARAM -> inout . id TIPO

    id              shift and go to state 513


state 398

    (27) FUNCIONES -> create function id para LPARAM . parc RETURNP LENGUAJE LCONTENIDOP
    (29) FUNCIONES -> create function id para LPARAM . parc RETURNP LCONTENIDOP LENGUAJE
    (45) LPARAM -> LPARAM . coma inout id TIPO
    (46) LPARAM -> LPARAM . coma id TIPO

    parc            shift and go to state 514
    coma            shift and go to state 506


state 399

    (28) FUNCIONES -> create function id para parc . RETURNP LENGUAJE LCONTENIDOP
    (30) FUNCIONES -> create function id para parc . RETURNP LCONTENIDOP LENGUAJE
    (34) RETURNP -> . returns TIPO

    returns         shift and go to state 516

    RETURNP                        shift and go to state 515

state 400

    (230) LCAMPOS -> id igual . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 517
    SELECT                         shift and go to state 74

state 401

    (228) UPDATE -> update id set LCAMPOS WHERE .

    ptcoma          reduce using rule 228 (UPDATE -> update id set LCAMPOS WHERE .)


state 402

    (229) LCAMPOS -> LCAMPOS coma . id igual EXP

    id              shift and go to state 518


state 403

    (125) ALTER -> alter databases id rename to . id

    id              shift and go to state 519


state 404

    (126) ALTER -> alter databases id owner to . id

    id              shift and go to state 520


state 405

    (141) OP -> alter column . id set not null
    (142) OP -> alter column . id set null
    (147) OP -> alter column . id type TIPO

    id              shift and go to state 521


state 406

    (132) LOP -> LOP coma . OP
    (134) OP -> . add column id TIPO
    (135) OP -> . add check para CONDCHECK parc
    (136) OP -> . add constraint id check para CONDCHECK parc
    (137) OP -> . add constraint id unique para LEXP parc
    (138) OP -> . add unique para LEXP parc
    (139) OP -> . add foreign key para LEXP parc references id para LEXP parc
    (140) OP -> . add constraint id foreign key para LEXP parc references id para LEXP parc
    (141) OP -> . alter column id set not null
    (142) OP -> . alter column id set null
    (143) OP -> . drop constraint id
    (144) OP -> . drop column LEXP
    (145) OP -> . drop check id
    (146) OP -> . rename column id to id
    (147) OP -> . alter column id type TIPO

    add             shift and go to state 296
    alter           shift and go to state 293
    drop            shift and go to state 297
    rename          shift and go to state 298

    OP                             shift and go to state 522

state 407

    (134) OP -> add column . id TIPO

    id              shift and go to state 523


state 408

    (135) OP -> add check . para CONDCHECK parc

    para            shift and go to state 524


state 409

    (136) OP -> add constraint . id check para CONDCHECK parc
    (137) OP -> add constraint . id unique para LEXP parc
    (140) OP -> add constraint . id foreign key para LEXP parc references id para LEXP parc

    id              shift and go to state 525


state 410

    (138) OP -> add unique . para LEXP parc

    para            shift and go to state 526


state 411

    (139) OP -> add foreign . key para LEXP parc references id para LEXP parc

    key             shift and go to state 527


state 412

    (143) OP -> drop constraint . id

    id              shift and go to state 528


state 413

    (144) OP -> drop column . LEXP
    (234) LEXP -> . LEXP coma EXP
    (235) LEXP -> . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    LEXP                           shift and go to state 529
    EXP                            shift and go to state 62
    SELECT                         shift and go to state 74

state 414

    (145) OP -> drop check . id

    id              shift and go to state 530


state 415

    (146) OP -> rename column . id to id

    id              shift and go to state 531


state 416

    (128) ALTER -> alter index id alter EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    ptcoma          reduce using rule 128 (ALTER -> alter index id alter EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    and             shift and go to state 135
    or              shift and go to state 136
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143
    between         shift and go to state 144
    is              shift and go to state 145
    isnull          shift and go to state 147
    notnull         shift and go to state 148
    as              shift and go to state 149
    cadenaString    shift and go to state 150
    cadena          shift and go to state 151
    id              shift and go to state 152
    in              shift and go to state 153
    not             shift and go to state 146
    like            shift and go to state 154


state 417

    (130) ALTER -> alter index id alter column . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 532
    SELECT                         shift and go to state 74

state 418

    (129) ALTER -> alter index if exist id . alter EXP
    (131) ALTER -> alter index if exist id . alter column EXP

    alter           shift and go to state 533


state 419

    (78) CONDICIONIF -> if EXP then LISTACONTENIDO ELSEF . end if

    end             shift and go to state 534


state 420

    (80) CONDICIONIF -> if EXP then LISTACONTENIDO end . if

    if              shift and go to state 535


state 421

    (79) CONDICIONIF -> if EXP then LISTACONTENIDO LELIF . end if
    (81) CONDICIONIF -> if EXP then LISTACONTENIDO LELIF . ELSEF end if
    (82) LELIF -> LELIF . elsif EXP then LISTACONTENIDO
    (84) ELSEF -> . else LISTACONTENIDO

    end             shift and go to state 536
    elsif           shift and go to state 538
    else            shift and go to state 196

    ELSEF                          shift and go to state 537

state 422

    (89) LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .

    end             reduce using rule 89 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    else            reduce using rule 89 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    elsif           reduce using rule 89 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    declare         reduce using rule 89 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    id              reduce using rule 89 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    if              reduce using rule 89 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    raise           reduce using rule 89 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    begin           reduce using rule 89 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    execute         reduce using rule 89 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    return          reduce using rule 89 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    insert          reduce using rule 89 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    select          reduce using rule 89 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    update          reduce using rule 89 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    delete          reduce using rule 89 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    case            reduce using rule 89 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    when            reduce using rule 89 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    dolarn          reduce using rule 89 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)


state 423

    (83) LELIF -> elsif . EXP then LISTACONTENIDO
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 539
    SELECT                         shift and go to state 74

state 424

    (91) CONTENIDO -> ASIGNACION ptcoma .

    end             reduce using rule 91 (CONTENIDO -> ASIGNACION ptcoma .)
    else            reduce using rule 91 (CONTENIDO -> ASIGNACION ptcoma .)
    elsif           reduce using rule 91 (CONTENIDO -> ASIGNACION ptcoma .)
    declare         reduce using rule 91 (CONTENIDO -> ASIGNACION ptcoma .)
    id              reduce using rule 91 (CONTENIDO -> ASIGNACION ptcoma .)
    if              reduce using rule 91 (CONTENIDO -> ASIGNACION ptcoma .)
    raise           reduce using rule 91 (CONTENIDO -> ASIGNACION ptcoma .)
    begin           reduce using rule 91 (CONTENIDO -> ASIGNACION ptcoma .)
    execute         reduce using rule 91 (CONTENIDO -> ASIGNACION ptcoma .)
    return          reduce using rule 91 (CONTENIDO -> ASIGNACION ptcoma .)
    insert          reduce using rule 91 (CONTENIDO -> ASIGNACION ptcoma .)
    select          reduce using rule 91 (CONTENIDO -> ASIGNACION ptcoma .)
    update          reduce using rule 91 (CONTENIDO -> ASIGNACION ptcoma .)
    delete          reduce using rule 91 (CONTENIDO -> ASIGNACION ptcoma .)
    case            reduce using rule 91 (CONTENIDO -> ASIGNACION ptcoma .)
    when            reduce using rule 91 (CONTENIDO -> ASIGNACION ptcoma .)
    dolarn          reduce using rule 91 (CONTENIDO -> ASIGNACION ptcoma .)


state 425

    (92) CONTENIDO -> CONDICIONIF ptcoma .

    end             reduce using rule 92 (CONTENIDO -> CONDICIONIF ptcoma .)
    else            reduce using rule 92 (CONTENIDO -> CONDICIONIF ptcoma .)
    elsif           reduce using rule 92 (CONTENIDO -> CONDICIONIF ptcoma .)
    declare         reduce using rule 92 (CONTENIDO -> CONDICIONIF ptcoma .)
    id              reduce using rule 92 (CONTENIDO -> CONDICIONIF ptcoma .)
    if              reduce using rule 92 (CONTENIDO -> CONDICIONIF ptcoma .)
    raise           reduce using rule 92 (CONTENIDO -> CONDICIONIF ptcoma .)
    begin           reduce using rule 92 (CONTENIDO -> CONDICIONIF ptcoma .)
    execute         reduce using rule 92 (CONTENIDO -> CONDICIONIF ptcoma .)
    return          reduce using rule 92 (CONTENIDO -> CONDICIONIF ptcoma .)
    insert          reduce using rule 92 (CONTENIDO -> CONDICIONIF ptcoma .)
    select          reduce using rule 92 (CONTENIDO -> CONDICIONIF ptcoma .)
    update          reduce using rule 92 (CONTENIDO -> CONDICIONIF ptcoma .)
    delete          reduce using rule 92 (CONTENIDO -> CONDICIONIF ptcoma .)
    case            reduce using rule 92 (CONTENIDO -> CONDICIONIF ptcoma .)
    when            reduce using rule 92 (CONTENIDO -> CONDICIONIF ptcoma .)
    dolarn          reduce using rule 92 (CONTENIDO -> CONDICIONIF ptcoma .)


state 426

    (93) CONTENIDO -> RAISE ptcoma .

    end             reduce using rule 93 (CONTENIDO -> RAISE ptcoma .)
    else            reduce using rule 93 (CONTENIDO -> RAISE ptcoma .)
    elsif           reduce using rule 93 (CONTENIDO -> RAISE ptcoma .)
    declare         reduce using rule 93 (CONTENIDO -> RAISE ptcoma .)
    id              reduce using rule 93 (CONTENIDO -> RAISE ptcoma .)
    if              reduce using rule 93 (CONTENIDO -> RAISE ptcoma .)
    raise           reduce using rule 93 (CONTENIDO -> RAISE ptcoma .)
    begin           reduce using rule 93 (CONTENIDO -> RAISE ptcoma .)
    execute         reduce using rule 93 (CONTENIDO -> RAISE ptcoma .)
    return          reduce using rule 93 (CONTENIDO -> RAISE ptcoma .)
    insert          reduce using rule 93 (CONTENIDO -> RAISE ptcoma .)
    select          reduce using rule 93 (CONTENIDO -> RAISE ptcoma .)
    update          reduce using rule 93 (CONTENIDO -> RAISE ptcoma .)
    delete          reduce using rule 93 (CONTENIDO -> RAISE ptcoma .)
    case            reduce using rule 93 (CONTENIDO -> RAISE ptcoma .)
    when            reduce using rule 93 (CONTENIDO -> RAISE ptcoma .)
    dolarn          reduce using rule 93 (CONTENIDO -> RAISE ptcoma .)


state 427

    (94) CONTENIDO -> BEGINEND ptcoma .

    end             reduce using rule 94 (CONTENIDO -> BEGINEND ptcoma .)
    else            reduce using rule 94 (CONTENIDO -> BEGINEND ptcoma .)
    elsif           reduce using rule 94 (CONTENIDO -> BEGINEND ptcoma .)
    declare         reduce using rule 94 (CONTENIDO -> BEGINEND ptcoma .)
    id              reduce using rule 94 (CONTENIDO -> BEGINEND ptcoma .)
    if              reduce using rule 94 (CONTENIDO -> BEGINEND ptcoma .)
    raise           reduce using rule 94 (CONTENIDO -> BEGINEND ptcoma .)
    begin           reduce using rule 94 (CONTENIDO -> BEGINEND ptcoma .)
    execute         reduce using rule 94 (CONTENIDO -> BEGINEND ptcoma .)
    return          reduce using rule 94 (CONTENIDO -> BEGINEND ptcoma .)
    insert          reduce using rule 94 (CONTENIDO -> BEGINEND ptcoma .)
    select          reduce using rule 94 (CONTENIDO -> BEGINEND ptcoma .)
    update          reduce using rule 94 (CONTENIDO -> BEGINEND ptcoma .)
    delete          reduce using rule 94 (CONTENIDO -> BEGINEND ptcoma .)
    case            reduce using rule 94 (CONTENIDO -> BEGINEND ptcoma .)
    when            reduce using rule 94 (CONTENIDO -> BEGINEND ptcoma .)
    dolarn          reduce using rule 94 (CONTENIDO -> BEGINEND ptcoma .)


state 428

    (95) CONTENIDO -> CALLPROCEDURE ptcoma .

    end             reduce using rule 95 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    else            reduce using rule 95 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    elsif           reduce using rule 95 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    declare         reduce using rule 95 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    id              reduce using rule 95 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    if              reduce using rule 95 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    raise           reduce using rule 95 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    begin           reduce using rule 95 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    execute         reduce using rule 95 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    return          reduce using rule 95 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    insert          reduce using rule 95 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    select          reduce using rule 95 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    update          reduce using rule 95 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    delete          reduce using rule 95 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    case            reduce using rule 95 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    when            reduce using rule 95 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    dolarn          reduce using rule 95 (CONTENIDO -> CALLPROCEDURE ptcoma .)


state 429

    (96) CONTENIDO -> declare LDEC .
    (66) LDEC -> LDEC . DECLARACIONES
    (68) DECLARACIONES -> . id TIPO not null ASIG ptcoma
    (69) DECLARACIONES -> . id TIPO ASIG ptcoma
    (70) DECLARACIONES -> . id constant TIPO not null ASIG ptcoma
    (71) DECLARACIONES -> . id constant TIPO ASIG ptcoma

  ! shift/reduce conflict for id resolved as shift
    end             reduce using rule 96 (CONTENIDO -> declare LDEC .)
    else            reduce using rule 96 (CONTENIDO -> declare LDEC .)
    elsif           reduce using rule 96 (CONTENIDO -> declare LDEC .)
    declare         reduce using rule 96 (CONTENIDO -> declare LDEC .)
    if              reduce using rule 96 (CONTENIDO -> declare LDEC .)
    raise           reduce using rule 96 (CONTENIDO -> declare LDEC .)
    begin           reduce using rule 96 (CONTENIDO -> declare LDEC .)
    execute         reduce using rule 96 (CONTENIDO -> declare LDEC .)
    return          reduce using rule 96 (CONTENIDO -> declare LDEC .)
    insert          reduce using rule 96 (CONTENIDO -> declare LDEC .)
    select          reduce using rule 96 (CONTENIDO -> declare LDEC .)
    update          reduce using rule 96 (CONTENIDO -> declare LDEC .)
    delete          reduce using rule 96 (CONTENIDO -> declare LDEC .)
    case            reduce using rule 96 (CONTENIDO -> declare LDEC .)
    when            reduce using rule 96 (CONTENIDO -> declare LDEC .)
    dolarn          reduce using rule 96 (CONTENIDO -> declare LDEC .)
    id              shift and go to state 431

  ! id              [ reduce using rule 96 (CONTENIDO -> declare LDEC .) ]

    DECLARACIONES                  shift and go to state 540

state 430

    (67) LDEC -> DECLARACIONES .

    id              reduce using rule 67 (LDEC -> DECLARACIONES .)
    end             reduce using rule 67 (LDEC -> DECLARACIONES .)
    else            reduce using rule 67 (LDEC -> DECLARACIONES .)
    elsif           reduce using rule 67 (LDEC -> DECLARACIONES .)
    declare         reduce using rule 67 (LDEC -> DECLARACIONES .)
    if              reduce using rule 67 (LDEC -> DECLARACIONES .)
    raise           reduce using rule 67 (LDEC -> DECLARACIONES .)
    begin           reduce using rule 67 (LDEC -> DECLARACIONES .)
    execute         reduce using rule 67 (LDEC -> DECLARACIONES .)
    return          reduce using rule 67 (LDEC -> DECLARACIONES .)
    insert          reduce using rule 67 (LDEC -> DECLARACIONES .)
    select          reduce using rule 67 (LDEC -> DECLARACIONES .)
    update          reduce using rule 67 (LDEC -> DECLARACIONES .)
    delete          reduce using rule 67 (LDEC -> DECLARACIONES .)
    case            reduce using rule 67 (LDEC -> DECLARACIONES .)
    when            reduce using rule 67 (LDEC -> DECLARACIONES .)
    dolarn          reduce using rule 67 (LDEC -> DECLARACIONES .)


state 431

    (68) DECLARACIONES -> id . TIPO not null ASIG ptcoma
    (69) DECLARACIONES -> id . TIPO ASIG ptcoma
    (70) DECLARACIONES -> id . constant TIPO not null ASIG ptcoma
    (71) DECLARACIONES -> id . constant TIPO ASIG ptcoma
    (236) TIPO -> . interval cadena
    (237) TIPO -> . decimal para int coma int parc
    (238) TIPO -> . decimal para int parc
    (239) TIPO -> . decimal
    (240) TIPO -> . numeric para int coma int parc
    (241) TIPO -> . numeric para int parc
    (242) TIPO -> . numeric
    (243) TIPO -> . varchar para int parc
    (244) TIPO -> . timestamp para int parc
    (245) TIPO -> . character para int parc
    (246) TIPO -> . interval para int parc
    (247) TIPO -> . char para int parc
    (248) TIPO -> . time para int parc
    (249) TIPO -> . character varying para int parc
    (250) TIPO -> . id modulo rowtype
    (251) TIPO -> . idPunto modulo type
    (252) TIPO -> . timestamp para int parc without time zone
    (253) TIPO -> . timestamp para int parc with time zone
    (254) TIPO -> . time para int parc without time zone
    (255) TIPO -> . time para int parc with time zone
    (256) TIPO -> . interval para int parc cadena
    (257) TIPO -> . smallint
    (258) TIPO -> . integer
    (259) TIPO -> . r_int
    (260) TIPO -> . bigint
    (261) TIPO -> . real
    (262) TIPO -> . double precision
    (263) TIPO -> . money
    (264) TIPO -> . text
    (265) TIPO -> . timestamp
    (266) TIPO -> . date
    (267) TIPO -> . time
    (268) TIPO -> . interval
    (269) TIPO -> . boolean
    (270) TIPO -> . record
    (271) TIPO -> . varchar
    (272) TIPO -> . timestamp without time zone
    (273) TIPO -> . timestamp with time zone
    (274) TIPO -> . time without time zone
    (275) TIPO -> . time with time zone
    (276) TIPO -> . id

    constant        shift and go to state 542
    interval        shift and go to state 241
    decimal         shift and go to state 242
    numeric         shift and go to state 243
    varchar         shift and go to state 244
    timestamp       shift and go to state 245
    character       shift and go to state 246
    char            shift and go to state 247
    time            shift and go to state 248
    id              shift and go to state 249
    idPunto         shift and go to state 250
    smallint        shift and go to state 251
    integer         shift and go to state 252
    r_int           shift and go to state 253
    bigint          shift and go to state 254
    real            shift and go to state 255
    double          shift and go to state 256
    money           shift and go to state 257
    text            shift and go to state 258
    date            shift and go to state 259
    boolean         shift and go to state 260
    record          shift and go to state 261

    TIPO                           shift and go to state 541

state 432

    (97) CONTENIDO -> RETURN ptcoma .

    end             reduce using rule 97 (CONTENIDO -> RETURN ptcoma .)
    else            reduce using rule 97 (CONTENIDO -> RETURN ptcoma .)
    elsif           reduce using rule 97 (CONTENIDO -> RETURN ptcoma .)
    declare         reduce using rule 97 (CONTENIDO -> RETURN ptcoma .)
    id              reduce using rule 97 (CONTENIDO -> RETURN ptcoma .)
    if              reduce using rule 97 (CONTENIDO -> RETURN ptcoma .)
    raise           reduce using rule 97 (CONTENIDO -> RETURN ptcoma .)
    begin           reduce using rule 97 (CONTENIDO -> RETURN ptcoma .)
    execute         reduce using rule 97 (CONTENIDO -> RETURN ptcoma .)
    return          reduce using rule 97 (CONTENIDO -> RETURN ptcoma .)
    insert          reduce using rule 97 (CONTENIDO -> RETURN ptcoma .)
    select          reduce using rule 97 (CONTENIDO -> RETURN ptcoma .)
    update          reduce using rule 97 (CONTENIDO -> RETURN ptcoma .)
    delete          reduce using rule 97 (CONTENIDO -> RETURN ptcoma .)
    case            reduce using rule 97 (CONTENIDO -> RETURN ptcoma .)
    when            reduce using rule 97 (CONTENIDO -> RETURN ptcoma .)
    dolarn          reduce using rule 97 (CONTENIDO -> RETURN ptcoma .)


state 433

    (98) CONTENIDO -> INSERT ptcoma .

    end             reduce using rule 98 (CONTENIDO -> INSERT ptcoma .)
    else            reduce using rule 98 (CONTENIDO -> INSERT ptcoma .)
    elsif           reduce using rule 98 (CONTENIDO -> INSERT ptcoma .)
    declare         reduce using rule 98 (CONTENIDO -> INSERT ptcoma .)
    id              reduce using rule 98 (CONTENIDO -> INSERT ptcoma .)
    if              reduce using rule 98 (CONTENIDO -> INSERT ptcoma .)
    raise           reduce using rule 98 (CONTENIDO -> INSERT ptcoma .)
    begin           reduce using rule 98 (CONTENIDO -> INSERT ptcoma .)
    execute         reduce using rule 98 (CONTENIDO -> INSERT ptcoma .)
    return          reduce using rule 98 (CONTENIDO -> INSERT ptcoma .)
    insert          reduce using rule 98 (CONTENIDO -> INSERT ptcoma .)
    select          reduce using rule 98 (CONTENIDO -> INSERT ptcoma .)
    update          reduce using rule 98 (CONTENIDO -> INSERT ptcoma .)
    delete          reduce using rule 98 (CONTENIDO -> INSERT ptcoma .)
    case            reduce using rule 98 (CONTENIDO -> INSERT ptcoma .)
    when            reduce using rule 98 (CONTENIDO -> INSERT ptcoma .)
    dolarn          reduce using rule 98 (CONTENIDO -> INSERT ptcoma .)


state 434

    (99) CONTENIDO -> SELECT ptcoma .

    end             reduce using rule 99 (CONTENIDO -> SELECT ptcoma .)
    else            reduce using rule 99 (CONTENIDO -> SELECT ptcoma .)
    elsif           reduce using rule 99 (CONTENIDO -> SELECT ptcoma .)
    declare         reduce using rule 99 (CONTENIDO -> SELECT ptcoma .)
    id              reduce using rule 99 (CONTENIDO -> SELECT ptcoma .)
    if              reduce using rule 99 (CONTENIDO -> SELECT ptcoma .)
    raise           reduce using rule 99 (CONTENIDO -> SELECT ptcoma .)
    begin           reduce using rule 99 (CONTENIDO -> SELECT ptcoma .)
    execute         reduce using rule 99 (CONTENIDO -> SELECT ptcoma .)
    return          reduce using rule 99 (CONTENIDO -> SELECT ptcoma .)
    insert          reduce using rule 99 (CONTENIDO -> SELECT ptcoma .)
    select          reduce using rule 99 (CONTENIDO -> SELECT ptcoma .)
    update          reduce using rule 99 (CONTENIDO -> SELECT ptcoma .)
    delete          reduce using rule 99 (CONTENIDO -> SELECT ptcoma .)
    case            reduce using rule 99 (CONTENIDO -> SELECT ptcoma .)
    when            reduce using rule 99 (CONTENIDO -> SELECT ptcoma .)
    dolarn          reduce using rule 99 (CONTENIDO -> SELECT ptcoma .)


state 435

    (100) CONTENIDO -> UPDATE ptcoma .

    end             reduce using rule 100 (CONTENIDO -> UPDATE ptcoma .)
    else            reduce using rule 100 (CONTENIDO -> UPDATE ptcoma .)
    elsif           reduce using rule 100 (CONTENIDO -> UPDATE ptcoma .)
    declare         reduce using rule 100 (CONTENIDO -> UPDATE ptcoma .)
    id              reduce using rule 100 (CONTENIDO -> UPDATE ptcoma .)
    if              reduce using rule 100 (CONTENIDO -> UPDATE ptcoma .)
    raise           reduce using rule 100 (CONTENIDO -> UPDATE ptcoma .)
    begin           reduce using rule 100 (CONTENIDO -> UPDATE ptcoma .)
    execute         reduce using rule 100 (CONTENIDO -> UPDATE ptcoma .)
    return          reduce using rule 100 (CONTENIDO -> UPDATE ptcoma .)
    insert          reduce using rule 100 (CONTENIDO -> UPDATE ptcoma .)
    select          reduce using rule 100 (CONTENIDO -> UPDATE ptcoma .)
    update          reduce using rule 100 (CONTENIDO -> UPDATE ptcoma .)
    delete          reduce using rule 100 (CONTENIDO -> UPDATE ptcoma .)
    case            reduce using rule 100 (CONTENIDO -> UPDATE ptcoma .)
    when            reduce using rule 100 (CONTENIDO -> UPDATE ptcoma .)
    dolarn          reduce using rule 100 (CONTENIDO -> UPDATE ptcoma .)


state 436

    (101) CONTENIDO -> DELETE ptcoma .

    end             reduce using rule 101 (CONTENIDO -> DELETE ptcoma .)
    else            reduce using rule 101 (CONTENIDO -> DELETE ptcoma .)
    elsif           reduce using rule 101 (CONTENIDO -> DELETE ptcoma .)
    declare         reduce using rule 101 (CONTENIDO -> DELETE ptcoma .)
    id              reduce using rule 101 (CONTENIDO -> DELETE ptcoma .)
    if              reduce using rule 101 (CONTENIDO -> DELETE ptcoma .)
    raise           reduce using rule 101 (CONTENIDO -> DELETE ptcoma .)
    begin           reduce using rule 101 (CONTENIDO -> DELETE ptcoma .)
    execute         reduce using rule 101 (CONTENIDO -> DELETE ptcoma .)
    return          reduce using rule 101 (CONTENIDO -> DELETE ptcoma .)
    insert          reduce using rule 101 (CONTENIDO -> DELETE ptcoma .)
    select          reduce using rule 101 (CONTENIDO -> DELETE ptcoma .)
    update          reduce using rule 101 (CONTENIDO -> DELETE ptcoma .)
    delete          reduce using rule 101 (CONTENIDO -> DELETE ptcoma .)
    case            reduce using rule 101 (CONTENIDO -> DELETE ptcoma .)
    when            reduce using rule 101 (CONTENIDO -> DELETE ptcoma .)
    dolarn          reduce using rule 101 (CONTENIDO -> DELETE ptcoma .)


state 437

    (102) CONTENIDO -> CASE ptcoma .

    end             reduce using rule 102 (CONTENIDO -> CASE ptcoma .)
    else            reduce using rule 102 (CONTENIDO -> CASE ptcoma .)
    elsif           reduce using rule 102 (CONTENIDO -> CASE ptcoma .)
    declare         reduce using rule 102 (CONTENIDO -> CASE ptcoma .)
    id              reduce using rule 102 (CONTENIDO -> CASE ptcoma .)
    if              reduce using rule 102 (CONTENIDO -> CASE ptcoma .)
    raise           reduce using rule 102 (CONTENIDO -> CASE ptcoma .)
    begin           reduce using rule 102 (CONTENIDO -> CASE ptcoma .)
    execute         reduce using rule 102 (CONTENIDO -> CASE ptcoma .)
    return          reduce using rule 102 (CONTENIDO -> CASE ptcoma .)
    insert          reduce using rule 102 (CONTENIDO -> CASE ptcoma .)
    select          reduce using rule 102 (CONTENIDO -> CASE ptcoma .)
    update          reduce using rule 102 (CONTENIDO -> CASE ptcoma .)
    delete          reduce using rule 102 (CONTENIDO -> CASE ptcoma .)
    case            reduce using rule 102 (CONTENIDO -> CASE ptcoma .)
    when            reduce using rule 102 (CONTENIDO -> CASE ptcoma .)
    dolarn          reduce using rule 102 (CONTENIDO -> CASE ptcoma .)


state 438

    (103) RAISE -> raise LEVEL . FORMAT
    (104) RAISE -> raise LEVEL . EXP
    (105) RAISE -> raise LEVEL .
    (107) RAISE -> raise LEVEL . cadena coma id
    (113) FORMAT -> . format para EXP coma LEXP parc
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    ptcoma          reduce using rule 105 (RAISE -> raise LEVEL .)
    cadena          shift and go to state 545
    format          shift and go to state 546
    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    FORMAT                         shift and go to state 543
    EXP                            shift and go to state 544
    SELECT                         shift and go to state 74

state 439

    (108) LEVEL -> info .

    cadena          reduce using rule 108 (LEVEL -> info .)
    format          reduce using rule 108 (LEVEL -> info .)
    mas             reduce using rule 108 (LEVEL -> info .)
    menos           reduce using rule 108 (LEVEL -> info .)
    not             reduce using rule 108 (LEVEL -> info .)
    para            reduce using rule 108 (LEVEL -> info .)
    id              reduce using rule 108 (LEVEL -> info .)
    any             reduce using rule 108 (LEVEL -> info .)
    all             reduce using rule 108 (LEVEL -> info .)
    some            reduce using rule 108 (LEVEL -> info .)
    extract         reduce using rule 108 (LEVEL -> info .)
    int             reduce using rule 108 (LEVEL -> info .)
    decimales       reduce using rule 108 (LEVEL -> info .)
    cadenaString    reduce using rule 108 (LEVEL -> info .)
    true            reduce using rule 108 (LEVEL -> info .)
    false           reduce using rule 108 (LEVEL -> info .)
    multiplicacion  reduce using rule 108 (LEVEL -> info .)
    null            reduce using rule 108 (LEVEL -> info .)
    current_time    reduce using rule 108 (LEVEL -> info .)
    current_date    reduce using rule 108 (LEVEL -> info .)
    timestamp       reduce using rule 108 (LEVEL -> info .)
    interval        reduce using rule 108 (LEVEL -> info .)
    default         reduce using rule 108 (LEVEL -> info .)
    idPunto         reduce using rule 108 (LEVEL -> info .)
    select          reduce using rule 108 (LEVEL -> info .)
    ptcoma          reduce using rule 108 (LEVEL -> info .)


state 440

    (109) LEVEL -> debug .

    cadena          reduce using rule 109 (LEVEL -> debug .)
    format          reduce using rule 109 (LEVEL -> debug .)
    mas             reduce using rule 109 (LEVEL -> debug .)
    menos           reduce using rule 109 (LEVEL -> debug .)
    not             reduce using rule 109 (LEVEL -> debug .)
    para            reduce using rule 109 (LEVEL -> debug .)
    id              reduce using rule 109 (LEVEL -> debug .)
    any             reduce using rule 109 (LEVEL -> debug .)
    all             reduce using rule 109 (LEVEL -> debug .)
    some            reduce using rule 109 (LEVEL -> debug .)
    extract         reduce using rule 109 (LEVEL -> debug .)
    int             reduce using rule 109 (LEVEL -> debug .)
    decimales       reduce using rule 109 (LEVEL -> debug .)
    cadenaString    reduce using rule 109 (LEVEL -> debug .)
    true            reduce using rule 109 (LEVEL -> debug .)
    false           reduce using rule 109 (LEVEL -> debug .)
    multiplicacion  reduce using rule 109 (LEVEL -> debug .)
    null            reduce using rule 109 (LEVEL -> debug .)
    current_time    reduce using rule 109 (LEVEL -> debug .)
    current_date    reduce using rule 109 (LEVEL -> debug .)
    timestamp       reduce using rule 109 (LEVEL -> debug .)
    interval        reduce using rule 109 (LEVEL -> debug .)
    default         reduce using rule 109 (LEVEL -> debug .)
    idPunto         reduce using rule 109 (LEVEL -> debug .)
    select          reduce using rule 109 (LEVEL -> debug .)
    ptcoma          reduce using rule 109 (LEVEL -> debug .)


state 441

    (110) LEVEL -> notice .

    cadena          reduce using rule 110 (LEVEL -> notice .)
    format          reduce using rule 110 (LEVEL -> notice .)
    mas             reduce using rule 110 (LEVEL -> notice .)
    menos           reduce using rule 110 (LEVEL -> notice .)
    not             reduce using rule 110 (LEVEL -> notice .)
    para            reduce using rule 110 (LEVEL -> notice .)
    id              reduce using rule 110 (LEVEL -> notice .)
    any             reduce using rule 110 (LEVEL -> notice .)
    all             reduce using rule 110 (LEVEL -> notice .)
    some            reduce using rule 110 (LEVEL -> notice .)
    extract         reduce using rule 110 (LEVEL -> notice .)
    int             reduce using rule 110 (LEVEL -> notice .)
    decimales       reduce using rule 110 (LEVEL -> notice .)
    cadenaString    reduce using rule 110 (LEVEL -> notice .)
    true            reduce using rule 110 (LEVEL -> notice .)
    false           reduce using rule 110 (LEVEL -> notice .)
    multiplicacion  reduce using rule 110 (LEVEL -> notice .)
    null            reduce using rule 110 (LEVEL -> notice .)
    current_time    reduce using rule 110 (LEVEL -> notice .)
    current_date    reduce using rule 110 (LEVEL -> notice .)
    timestamp       reduce using rule 110 (LEVEL -> notice .)
    interval        reduce using rule 110 (LEVEL -> notice .)
    default         reduce using rule 110 (LEVEL -> notice .)
    idPunto         reduce using rule 110 (LEVEL -> notice .)
    select          reduce using rule 110 (LEVEL -> notice .)
    ptcoma          reduce using rule 110 (LEVEL -> notice .)


state 442

    (111) LEVEL -> warning .

    cadena          reduce using rule 111 (LEVEL -> warning .)
    format          reduce using rule 111 (LEVEL -> warning .)
    mas             reduce using rule 111 (LEVEL -> warning .)
    menos           reduce using rule 111 (LEVEL -> warning .)
    not             reduce using rule 111 (LEVEL -> warning .)
    para            reduce using rule 111 (LEVEL -> warning .)
    id              reduce using rule 111 (LEVEL -> warning .)
    any             reduce using rule 111 (LEVEL -> warning .)
    all             reduce using rule 111 (LEVEL -> warning .)
    some            reduce using rule 111 (LEVEL -> warning .)
    extract         reduce using rule 111 (LEVEL -> warning .)
    int             reduce using rule 111 (LEVEL -> warning .)
    decimales       reduce using rule 111 (LEVEL -> warning .)
    cadenaString    reduce using rule 111 (LEVEL -> warning .)
    true            reduce using rule 111 (LEVEL -> warning .)
    false           reduce using rule 111 (LEVEL -> warning .)
    multiplicacion  reduce using rule 111 (LEVEL -> warning .)
    null            reduce using rule 111 (LEVEL -> warning .)
    current_time    reduce using rule 111 (LEVEL -> warning .)
    current_date    reduce using rule 111 (LEVEL -> warning .)
    timestamp       reduce using rule 111 (LEVEL -> warning .)
    interval        reduce using rule 111 (LEVEL -> warning .)
    default         reduce using rule 111 (LEVEL -> warning .)
    idPunto         reduce using rule 111 (LEVEL -> warning .)
    select          reduce using rule 111 (LEVEL -> warning .)
    ptcoma          reduce using rule 111 (LEVEL -> warning .)


state 443

    (112) LEVEL -> exception .

    cadena          reduce using rule 112 (LEVEL -> exception .)
    format          reduce using rule 112 (LEVEL -> exception .)
    mas             reduce using rule 112 (LEVEL -> exception .)
    menos           reduce using rule 112 (LEVEL -> exception .)
    not             reduce using rule 112 (LEVEL -> exception .)
    para            reduce using rule 112 (LEVEL -> exception .)
    id              reduce using rule 112 (LEVEL -> exception .)
    any             reduce using rule 112 (LEVEL -> exception .)
    all             reduce using rule 112 (LEVEL -> exception .)
    some            reduce using rule 112 (LEVEL -> exception .)
    extract         reduce using rule 112 (LEVEL -> exception .)
    int             reduce using rule 112 (LEVEL -> exception .)
    decimales       reduce using rule 112 (LEVEL -> exception .)
    cadenaString    reduce using rule 112 (LEVEL -> exception .)
    true            reduce using rule 112 (LEVEL -> exception .)
    false           reduce using rule 112 (LEVEL -> exception .)
    multiplicacion  reduce using rule 112 (LEVEL -> exception .)
    null            reduce using rule 112 (LEVEL -> exception .)
    current_time    reduce using rule 112 (LEVEL -> exception .)
    current_date    reduce using rule 112 (LEVEL -> exception .)
    timestamp       reduce using rule 112 (LEVEL -> exception .)
    interval        reduce using rule 112 (LEVEL -> exception .)
    default         reduce using rule 112 (LEVEL -> exception .)
    idPunto         reduce using rule 112 (LEVEL -> exception .)
    select          reduce using rule 112 (LEVEL -> exception .)
    ptcoma          reduce using rule 112 (LEVEL -> exception .)


state 444

    (51) BEGINEND -> begin LISTACONTENIDO . end
    (89) LISTACONTENIDO -> LISTACONTENIDO . CONTENIDO
    (91) CONTENIDO -> . ASIGNACION ptcoma
    (92) CONTENIDO -> . CONDICIONIF ptcoma
    (93) CONTENIDO -> . RAISE ptcoma
    (94) CONTENIDO -> . BEGINEND ptcoma
    (95) CONTENIDO -> . CALLPROCEDURE ptcoma
    (96) CONTENIDO -> . declare LDEC
    (97) CONTENIDO -> . RETURN ptcoma
    (98) CONTENIDO -> . INSERT ptcoma
    (99) CONTENIDO -> . SELECT ptcoma
    (100) CONTENIDO -> . UPDATE ptcoma
    (101) CONTENIDO -> . DELETE ptcoma
    (102) CONTENIDO -> . CASE ptcoma
    (76) ASIGNACION -> . id dospuntos igual EXP
    (77) ASIGNACION -> . id igual EXP
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (80) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (81) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (103) RAISE -> . raise LEVEL FORMAT
    (104) RAISE -> . raise LEVEL EXP
    (105) RAISE -> . raise LEVEL
    (106) RAISE -> . raise
    (107) RAISE -> . raise LEVEL cadena coma id
    (51) BEGINEND -> . begin LISTACONTENIDO end
    (35) CALLPROCEDURE -> . execute id para LEXP parc
    (36) CALLPROCEDURE -> . execute id para parc
    (26) RETURN -> . return EXP
    (118) INSERT -> . insert into id values para LEXP parc
    (119) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (228) UPDATE -> . update id set LCAMPOS WHERE
    (231) DELETE -> . delete r_from id WHERE
    (85) CASE -> . case EXP LISTAWHEN ELSEF end case
    (86) CASE -> . case EXP LISTAWHEN end case
    (87) CASE -> . case LISTAWHEN ELSEF end case
    (88) CASE -> . case LISTAWHEN end case

    end             shift and go to state 547
    declare         shift and go to state 308
    id              shift and go to state 17
    if              shift and go to state 31
    raise           shift and go to state 315
    begin           shift and go to state 316
    execute         shift and go to state 36
    return          shift and go to state 317
    insert          shift and go to state 33
    select          shift and go to state 26
    update          shift and go to state 28
    delete          shift and go to state 29
    case            shift and go to state 34

    CONTENIDO                      shift and go to state 422
    ASIGNACION                     shift and go to state 303
    CONDICIONIF                    shift and go to state 304
    RAISE                          shift and go to state 305
    BEGINEND                       shift and go to state 306
    CALLPROCEDURE                  shift and go to state 307
    RETURN                         shift and go to state 309
    INSERT                         shift and go to state 310
    SELECT                         shift and go to state 311
    UPDATE                         shift and go to state 312
    DELETE                         shift and go to state 313
    CASE                           shift and go to state 314

state 445

    (26) RETURN -> return EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    ptcoma          reduce using rule 26 (RETURN -> return EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    and             shift and go to state 135
    or              shift and go to state 136
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143
    between         shift and go to state 144
    is              shift and go to state 145
    isnull          shift and go to state 147
    notnull         shift and go to state 148
    as              shift and go to state 149
    cadenaString    shift and go to state 150
    cadena          shift and go to state 151
    id              shift and go to state 152
    in              shift and go to state 153
    not             shift and go to state 146
    like            shift and go to state 154


state 446

    (123) DROP -> drop databases if exist id .

    ptcoma          reduce using rule 123 (DROP -> drop databases if exist id .)


state 447

    (32) DROPFUNC -> drop function if exist id .

    ptcoma          reduce using rule 32 (DROPFUNC -> drop function if exist id .)


state 448

    (118) INSERT -> insert into id values para . LEXP parc
    (234) LEXP -> . LEXP coma EXP
    (235) LEXP -> . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    LEXP                           shift and go to state 548
    EXP                            shift and go to state 62
    SELECT                         shift and go to state 74

state 449

    (119) INSERT -> insert into id para LEXP . parc values para LEXP parc
    (234) LEXP -> LEXP . coma EXP

    parc            shift and go to state 549
    coma            shift and go to state 128


state 450

    (85) CASE -> case EXP LISTAWHEN ELSEF end . case

    case            shift and go to state 550


state 451

    (86) CASE -> case EXP LISTAWHEN end case .

    ptcoma          reduce using rule 86 (CASE -> case EXP LISTAWHEN end case .)


state 452

    (87) CASE -> case LISTAWHEN ELSEF end case .

    ptcoma          reduce using rule 87 (CASE -> case LISTAWHEN ELSEF end case .)


state 453

    (116) WHEN -> when EXP then LISTACONTENIDO .
    (89) LISTACONTENIDO -> LISTACONTENIDO . CONTENIDO
    (91) CONTENIDO -> . ASIGNACION ptcoma
    (92) CONTENIDO -> . CONDICIONIF ptcoma
    (93) CONTENIDO -> . RAISE ptcoma
    (94) CONTENIDO -> . BEGINEND ptcoma
    (95) CONTENIDO -> . CALLPROCEDURE ptcoma
    (96) CONTENIDO -> . declare LDEC
    (97) CONTENIDO -> . RETURN ptcoma
    (98) CONTENIDO -> . INSERT ptcoma
    (99) CONTENIDO -> . SELECT ptcoma
    (100) CONTENIDO -> . UPDATE ptcoma
    (101) CONTENIDO -> . DELETE ptcoma
    (102) CONTENIDO -> . CASE ptcoma
    (76) ASIGNACION -> . id dospuntos igual EXP
    (77) ASIGNACION -> . id igual EXP
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (80) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (81) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (103) RAISE -> . raise LEVEL FORMAT
    (104) RAISE -> . raise LEVEL EXP
    (105) RAISE -> . raise LEVEL
    (106) RAISE -> . raise
    (107) RAISE -> . raise LEVEL cadena coma id
    (51) BEGINEND -> . begin LISTACONTENIDO end
    (35) CALLPROCEDURE -> . execute id para LEXP parc
    (36) CALLPROCEDURE -> . execute id para parc
    (26) RETURN -> . return EXP
    (118) INSERT -> . insert into id values para LEXP parc
    (119) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (228) UPDATE -> . update id set LCAMPOS WHERE
    (231) DELETE -> . delete r_from id WHERE
    (85) CASE -> . case EXP LISTAWHEN ELSEF end case
    (86) CASE -> . case EXP LISTAWHEN end case
    (87) CASE -> . case LISTAWHEN ELSEF end case
    (88) CASE -> . case LISTAWHEN end case

    end             reduce using rule 116 (WHEN -> when EXP then LISTACONTENIDO .)
    else            reduce using rule 116 (WHEN -> when EXP then LISTACONTENIDO .)
    when            reduce using rule 116 (WHEN -> when EXP then LISTACONTENIDO .)
    declare         shift and go to state 308
    id              shift and go to state 17
    if              shift and go to state 31
    raise           shift and go to state 315
    begin           shift and go to state 316
    execute         shift and go to state 36
    return          shift and go to state 317
    insert          shift and go to state 33
    select          shift and go to state 26
    update          shift and go to state 28
    delete          shift and go to state 29
    case            shift and go to state 34

    CONTENIDO                      shift and go to state 422
    ASIGNACION                     shift and go to state 303
    CONDICIONIF                    shift and go to state 304
    RAISE                          shift and go to state 305
    BEGINEND                       shift and go to state 306
    CALLPROCEDURE                  shift and go to state 307
    RETURN                         shift and go to state 309
    INSERT                         shift and go to state 310
    SELECT                         shift and go to state 311
    UPDATE                         shift and go to state 312
    DELETE                         shift and go to state 313
    CASE                           shift and go to state 314

state 454

    (149) SHOW -> show tables para id parc .

    ptcoma          reduce using rule 149 (SHOW -> show tables para id parc .)


state 455

    (35) CALLPROCEDURE -> execute id para LEXP parc .

    ptcoma          reduce using rule 35 (CALLPROCEDURE -> execute id para LEXP parc .)


state 456

    (233) EXIST -> not exist para SELECT . parc

    parc            shift and go to state 551


state 457

    (232) EXIST -> exist para SELECT parc .

    ptcoma          reduce using rule 232 (EXIST -> exist para SELECT parc .)
    r_from          reduce using rule 232 (EXIST -> exist para SELECT parc .)
    coma            reduce using rule 232 (EXIST -> exist para SELECT parc .)
    where           reduce using rule 232 (EXIST -> exist para SELECT parc .)
    group           reduce using rule 232 (EXIST -> exist para SELECT parc .)
    having          reduce using rule 232 (EXIST -> exist para SELECT parc .)
    union           reduce using rule 232 (EXIST -> exist para SELECT parc .)
    intersect       reduce using rule 232 (EXIST -> exist para SELECT parc .)
    except          reduce using rule 232 (EXIST -> exist para SELECT parc .)
    order           reduce using rule 232 (EXIST -> exist para SELECT parc .)
    limit           reduce using rule 232 (EXIST -> exist para SELECT parc .)
    offset          reduce using rule 232 (EXIST -> exist para SELECT parc .)
    mas             reduce using rule 232 (EXIST -> exist para SELECT parc .)
    menos           reduce using rule 232 (EXIST -> exist para SELECT parc .)
    multiplicacion  reduce using rule 232 (EXIST -> exist para SELECT parc .)
    division        reduce using rule 232 (EXIST -> exist para SELECT parc .)
    modulo          reduce using rule 232 (EXIST -> exist para SELECT parc .)
    elevado         reduce using rule 232 (EXIST -> exist para SELECT parc .)
    and             reduce using rule 232 (EXIST -> exist para SELECT parc .)
    or              reduce using rule 232 (EXIST -> exist para SELECT parc .)
    mayor           reduce using rule 232 (EXIST -> exist para SELECT parc .)
    menor           reduce using rule 232 (EXIST -> exist para SELECT parc .)
    mayor_igual     reduce using rule 232 (EXIST -> exist para SELECT parc .)
    menor_igual     reduce using rule 232 (EXIST -> exist para SELECT parc .)
    igual           reduce using rule 232 (EXIST -> exist para SELECT parc .)
    diferente1      reduce using rule 232 (EXIST -> exist para SELECT parc .)
    diferente2      reduce using rule 232 (EXIST -> exist para SELECT parc .)
    between         reduce using rule 232 (EXIST -> exist para SELECT parc .)
    is              reduce using rule 232 (EXIST -> exist para SELECT parc .)
    isnull          reduce using rule 232 (EXIST -> exist para SELECT parc .)
    notnull         reduce using rule 232 (EXIST -> exist para SELECT parc .)
    as              reduce using rule 232 (EXIST -> exist para SELECT parc .)
    cadenaString    reduce using rule 232 (EXIST -> exist para SELECT parc .)
    cadena          reduce using rule 232 (EXIST -> exist para SELECT parc .)
    id              reduce using rule 232 (EXIST -> exist para SELECT parc .)
    in              reduce using rule 232 (EXIST -> exist para SELECT parc .)
    not             reduce using rule 232 (EXIST -> exist para SELECT parc .)
    like            reduce using rule 232 (EXIST -> exist para SELECT parc .)
    then            reduce using rule 232 (EXIST -> exist para SELECT parc .)
    when            reduce using rule 232 (EXIST -> exist para SELECT parc .)
    parc            reduce using rule 232 (EXIST -> exist para SELECT parc .)
    constraint      reduce using rule 232 (EXIST -> exist para SELECT parc .)
    unique          reduce using rule 232 (EXIST -> exist para SELECT parc .)
    check           reduce using rule 232 (EXIST -> exist para SELECT parc .)
    default         reduce using rule 232 (EXIST -> exist para SELECT parc .)
    null            reduce using rule 232 (EXIST -> exist para SELECT parc .)
    primary         reduce using rule 232 (EXIST -> exist para SELECT parc .)
    references      reduce using rule 232 (EXIST -> exist para SELECT parc .)
    asc             reduce using rule 232 (EXIST -> exist para SELECT parc .)
    desc            reduce using rule 232 (EXIST -> exist para SELECT parc .)


state 458

    (200) SELECT -> select distinct LEXP r_from LEXP WHERE . GROUP HAVING COMBINING ORDER LIMIT
    (219) GROUP -> . group by LEXP
    (220) GROUP -> .

  ! shift/reduce conflict for group resolved as shift
    group           shift and go to state 207
    r_from          reduce using rule 220 (GROUP -> .)
    coma            reduce using rule 220 (GROUP -> .)
    where           reduce using rule 220 (GROUP -> .)
    having          reduce using rule 220 (GROUP -> .)
    union           reduce using rule 220 (GROUP -> .)
    intersect       reduce using rule 220 (GROUP -> .)
    except          reduce using rule 220 (GROUP -> .)
    order           reduce using rule 220 (GROUP -> .)
    limit           reduce using rule 220 (GROUP -> .)
    offset          reduce using rule 220 (GROUP -> .)
    ptcoma          reduce using rule 220 (GROUP -> .)
    mas             reduce using rule 220 (GROUP -> .)
    menos           reduce using rule 220 (GROUP -> .)
    multiplicacion  reduce using rule 220 (GROUP -> .)
    division        reduce using rule 220 (GROUP -> .)
    modulo          reduce using rule 220 (GROUP -> .)
    elevado         reduce using rule 220 (GROUP -> .)
    and             reduce using rule 220 (GROUP -> .)
    or              reduce using rule 220 (GROUP -> .)
    mayor           reduce using rule 220 (GROUP -> .)
    menor           reduce using rule 220 (GROUP -> .)
    mayor_igual     reduce using rule 220 (GROUP -> .)
    menor_igual     reduce using rule 220 (GROUP -> .)
    igual           reduce using rule 220 (GROUP -> .)
    diferente1      reduce using rule 220 (GROUP -> .)
    diferente2      reduce using rule 220 (GROUP -> .)
    between         reduce using rule 220 (GROUP -> .)
    is              reduce using rule 220 (GROUP -> .)
    isnull          reduce using rule 220 (GROUP -> .)
    notnull         reduce using rule 220 (GROUP -> .)
    as              reduce using rule 220 (GROUP -> .)
    cadenaString    reduce using rule 220 (GROUP -> .)
    cadena          reduce using rule 220 (GROUP -> .)
    id              reduce using rule 220 (GROUP -> .)
    in              reduce using rule 220 (GROUP -> .)
    not             reduce using rule 220 (GROUP -> .)
    like            reduce using rule 220 (GROUP -> .)
    then            reduce using rule 220 (GROUP -> .)
    when            reduce using rule 220 (GROUP -> .)
    parc            reduce using rule 220 (GROUP -> .)
    constraint      reduce using rule 220 (GROUP -> .)
    unique          reduce using rule 220 (GROUP -> .)
    check           reduce using rule 220 (GROUP -> .)
    default         reduce using rule 220 (GROUP -> .)
    null            reduce using rule 220 (GROUP -> .)
    primary         reduce using rule 220 (GROUP -> .)
    references      reduce using rule 220 (GROUP -> .)
    asc             reduce using rule 220 (GROUP -> .)
    desc            reduce using rule 220 (GROUP -> .)

  ! group           [ reduce using rule 220 (GROUP -> .) ]

    GROUP                          shift and go to state 552

state 459

    (201) SELECT -> select LEXP r_from LEXP WHERE GROUP . HAVING COMBINING ORDER LIMIT
    (221) HAVING -> . having EXP
    (222) HAVING -> .

  ! shift/reduce conflict for having resolved as shift
    having          shift and go to state 338
    r_from          reduce using rule 222 (HAVING -> .)
    coma            reduce using rule 222 (HAVING -> .)
    where           reduce using rule 222 (HAVING -> .)
    group           reduce using rule 222 (HAVING -> .)
    union           reduce using rule 222 (HAVING -> .)
    intersect       reduce using rule 222 (HAVING -> .)
    except          reduce using rule 222 (HAVING -> .)
    order           reduce using rule 222 (HAVING -> .)
    limit           reduce using rule 222 (HAVING -> .)
    offset          reduce using rule 222 (HAVING -> .)
    ptcoma          reduce using rule 222 (HAVING -> .)
    mas             reduce using rule 222 (HAVING -> .)
    menos           reduce using rule 222 (HAVING -> .)
    multiplicacion  reduce using rule 222 (HAVING -> .)
    division        reduce using rule 222 (HAVING -> .)
    modulo          reduce using rule 222 (HAVING -> .)
    elevado         reduce using rule 222 (HAVING -> .)
    and             reduce using rule 222 (HAVING -> .)
    or              reduce using rule 222 (HAVING -> .)
    mayor           reduce using rule 222 (HAVING -> .)
    menor           reduce using rule 222 (HAVING -> .)
    mayor_igual     reduce using rule 222 (HAVING -> .)
    menor_igual     reduce using rule 222 (HAVING -> .)
    igual           reduce using rule 222 (HAVING -> .)
    diferente1      reduce using rule 222 (HAVING -> .)
    diferente2      reduce using rule 222 (HAVING -> .)
    between         reduce using rule 222 (HAVING -> .)
    is              reduce using rule 222 (HAVING -> .)
    isnull          reduce using rule 222 (HAVING -> .)
    notnull         reduce using rule 222 (HAVING -> .)
    as              reduce using rule 222 (HAVING -> .)
    cadenaString    reduce using rule 222 (HAVING -> .)
    cadena          reduce using rule 222 (HAVING -> .)
    id              reduce using rule 222 (HAVING -> .)
    in              reduce using rule 222 (HAVING -> .)
    not             reduce using rule 222 (HAVING -> .)
    like            reduce using rule 222 (HAVING -> .)
    then            reduce using rule 222 (HAVING -> .)
    when            reduce using rule 222 (HAVING -> .)
    parc            reduce using rule 222 (HAVING -> .)
    constraint      reduce using rule 222 (HAVING -> .)
    unique          reduce using rule 222 (HAVING -> .)
    check           reduce using rule 222 (HAVING -> .)
    default         reduce using rule 222 (HAVING -> .)
    null            reduce using rule 222 (HAVING -> .)
    primary         reduce using rule 222 (HAVING -> .)
    references      reduce using rule 222 (HAVING -> .)
    asc             reduce using rule 222 (HAVING -> .)
    desc            reduce using rule 222 (HAVING -> .)

  ! having          [ reduce using rule 222 (HAVING -> .) ]

    HAVING                         shift and go to state 553

state 460

    (202) SELECT -> select LEXP WHERE GROUP HAVING COMBINING . ORDER LIMIT
    (223) ORDER -> . order by LEXP ORD
    (224) ORDER -> . order by LEXP
    (225) ORDER -> .

  ! shift/reduce conflict for order resolved as shift
    order           shift and go to state 555
    r_from          reduce using rule 225 (ORDER -> .)
    coma            reduce using rule 225 (ORDER -> .)
    where           reduce using rule 225 (ORDER -> .)
    group           reduce using rule 225 (ORDER -> .)
    having          reduce using rule 225 (ORDER -> .)
    union           reduce using rule 225 (ORDER -> .)
    intersect       reduce using rule 225 (ORDER -> .)
    except          reduce using rule 225 (ORDER -> .)
    limit           reduce using rule 225 (ORDER -> .)
    offset          reduce using rule 225 (ORDER -> .)
    ptcoma          reduce using rule 225 (ORDER -> .)
    mas             reduce using rule 225 (ORDER -> .)
    menos           reduce using rule 225 (ORDER -> .)
    multiplicacion  reduce using rule 225 (ORDER -> .)
    division        reduce using rule 225 (ORDER -> .)
    modulo          reduce using rule 225 (ORDER -> .)
    elevado         reduce using rule 225 (ORDER -> .)
    and             reduce using rule 225 (ORDER -> .)
    or              reduce using rule 225 (ORDER -> .)
    mayor           reduce using rule 225 (ORDER -> .)
    menor           reduce using rule 225 (ORDER -> .)
    mayor_igual     reduce using rule 225 (ORDER -> .)
    menor_igual     reduce using rule 225 (ORDER -> .)
    igual           reduce using rule 225 (ORDER -> .)
    diferente1      reduce using rule 225 (ORDER -> .)
    diferente2      reduce using rule 225 (ORDER -> .)
    between         reduce using rule 225 (ORDER -> .)
    is              reduce using rule 225 (ORDER -> .)
    isnull          reduce using rule 225 (ORDER -> .)
    notnull         reduce using rule 225 (ORDER -> .)
    as              reduce using rule 225 (ORDER -> .)
    cadenaString    reduce using rule 225 (ORDER -> .)
    cadena          reduce using rule 225 (ORDER -> .)
    id              reduce using rule 225 (ORDER -> .)
    in              reduce using rule 225 (ORDER -> .)
    not             reduce using rule 225 (ORDER -> .)
    like            reduce using rule 225 (ORDER -> .)
    then            reduce using rule 225 (ORDER -> .)
    when            reduce using rule 225 (ORDER -> .)
    parc            reduce using rule 225 (ORDER -> .)
    constraint      reduce using rule 225 (ORDER -> .)
    unique          reduce using rule 225 (ORDER -> .)
    check           reduce using rule 225 (ORDER -> .)
    default         reduce using rule 225 (ORDER -> .)
    null            reduce using rule 225 (ORDER -> .)
    primary         reduce using rule 225 (ORDER -> .)
    references      reduce using rule 225 (ORDER -> .)
    asc             reduce using rule 225 (ORDER -> .)
    desc            reduce using rule 225 (ORDER -> .)

  ! order           [ reduce using rule 225 (ORDER -> .) ]

    ORDER                          shift and go to state 554

state 461

    (214) COMBINING -> union . EXP
    (215) COMBINING -> union . all EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    all             shift and go to state 557
    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 556
    SELECT                         shift and go to state 74

state 462

    (216) COMBINING -> intersect . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 558
    SELECT                         shift and go to state 74

state 463

    (217) COMBINING -> except . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 559
    SELECT                         shift and go to state 74

state 464

    (221) HAVING -> having EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    r_from          reduce using rule 221 (HAVING -> having EXP .)
    coma            reduce using rule 221 (HAVING -> having EXP .)
    where           reduce using rule 221 (HAVING -> having EXP .)
    group           reduce using rule 221 (HAVING -> having EXP .)
    having          reduce using rule 221 (HAVING -> having EXP .)
    union           reduce using rule 221 (HAVING -> having EXP .)
    intersect       reduce using rule 221 (HAVING -> having EXP .)
    except          reduce using rule 221 (HAVING -> having EXP .)
    order           reduce using rule 221 (HAVING -> having EXP .)
    limit           reduce using rule 221 (HAVING -> having EXP .)
    offset          reduce using rule 221 (HAVING -> having EXP .)
    ptcoma          reduce using rule 221 (HAVING -> having EXP .)
    then            reduce using rule 221 (HAVING -> having EXP .)
    when            reduce using rule 221 (HAVING -> having EXP .)
    parc            reduce using rule 221 (HAVING -> having EXP .)
    constraint      reduce using rule 221 (HAVING -> having EXP .)
    unique          reduce using rule 221 (HAVING -> having EXP .)
    check           reduce using rule 221 (HAVING -> having EXP .)
    default         reduce using rule 221 (HAVING -> having EXP .)
    null            reduce using rule 221 (HAVING -> having EXP .)
    primary         reduce using rule 221 (HAVING -> having EXP .)
    references      reduce using rule 221 (HAVING -> having EXP .)
    asc             reduce using rule 221 (HAVING -> having EXP .)
    desc            reduce using rule 221 (HAVING -> having EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    and             shift and go to state 135
    or              shift and go to state 136
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143
    between         shift and go to state 144
    is              shift and go to state 145
    isnull          shift and go to state 147
    notnull         shift and go to state 148
    as              shift and go to state 149
    cadenaString    shift and go to state 150
    cadena          shift and go to state 151
    id              shift and go to state 152
    in              shift and go to state 153
    not             shift and go to state 146
    like            shift and go to state 154

  ! mas             [ reduce using rule 221 (HAVING -> having EXP .) ]
  ! menos           [ reduce using rule 221 (HAVING -> having EXP .) ]
  ! multiplicacion  [ reduce using rule 221 (HAVING -> having EXP .) ]
  ! division        [ reduce using rule 221 (HAVING -> having EXP .) ]
  ! modulo          [ reduce using rule 221 (HAVING -> having EXP .) ]
  ! elevado         [ reduce using rule 221 (HAVING -> having EXP .) ]
  ! and             [ reduce using rule 221 (HAVING -> having EXP .) ]
  ! or              [ reduce using rule 221 (HAVING -> having EXP .) ]
  ! mayor           [ reduce using rule 221 (HAVING -> having EXP .) ]
  ! menor           [ reduce using rule 221 (HAVING -> having EXP .) ]
  ! mayor_igual     [ reduce using rule 221 (HAVING -> having EXP .) ]
  ! menor_igual     [ reduce using rule 221 (HAVING -> having EXP .) ]
  ! igual           [ reduce using rule 221 (HAVING -> having EXP .) ]
  ! diferente1      [ reduce using rule 221 (HAVING -> having EXP .) ]
  ! diferente2      [ reduce using rule 221 (HAVING -> having EXP .) ]
  ! between         [ reduce using rule 221 (HAVING -> having EXP .) ]
  ! is              [ reduce using rule 221 (HAVING -> having EXP .) ]
  ! isnull          [ reduce using rule 221 (HAVING -> having EXP .) ]
  ! notnull         [ reduce using rule 221 (HAVING -> having EXP .) ]
  ! as              [ reduce using rule 221 (HAVING -> having EXP .) ]
  ! cadenaString    [ reduce using rule 221 (HAVING -> having EXP .) ]
  ! cadena          [ reduce using rule 221 (HAVING -> having EXP .) ]
  ! id              [ reduce using rule 221 (HAVING -> having EXP .) ]
  ! in              [ reduce using rule 221 (HAVING -> having EXP .) ]
  ! not             [ reduce using rule 221 (HAVING -> having EXP .) ]
  ! like            [ reduce using rule 221 (HAVING -> having EXP .) ]


state 465

    (219) GROUP -> group by LEXP .
    (234) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 219 (GROUP -> group by LEXP .)
    where           reduce using rule 219 (GROUP -> group by LEXP .)
    group           reduce using rule 219 (GROUP -> group by LEXP .)
    having          reduce using rule 219 (GROUP -> group by LEXP .)
    union           reduce using rule 219 (GROUP -> group by LEXP .)
    intersect       reduce using rule 219 (GROUP -> group by LEXP .)
    except          reduce using rule 219 (GROUP -> group by LEXP .)
    order           reduce using rule 219 (GROUP -> group by LEXP .)
    limit           reduce using rule 219 (GROUP -> group by LEXP .)
    offset          reduce using rule 219 (GROUP -> group by LEXP .)
    ptcoma          reduce using rule 219 (GROUP -> group by LEXP .)
    mas             reduce using rule 219 (GROUP -> group by LEXP .)
    menos           reduce using rule 219 (GROUP -> group by LEXP .)
    multiplicacion  reduce using rule 219 (GROUP -> group by LEXP .)
    division        reduce using rule 219 (GROUP -> group by LEXP .)
    modulo          reduce using rule 219 (GROUP -> group by LEXP .)
    elevado         reduce using rule 219 (GROUP -> group by LEXP .)
    and             reduce using rule 219 (GROUP -> group by LEXP .)
    or              reduce using rule 219 (GROUP -> group by LEXP .)
    mayor           reduce using rule 219 (GROUP -> group by LEXP .)
    menor           reduce using rule 219 (GROUP -> group by LEXP .)
    mayor_igual     reduce using rule 219 (GROUP -> group by LEXP .)
    menor_igual     reduce using rule 219 (GROUP -> group by LEXP .)
    igual           reduce using rule 219 (GROUP -> group by LEXP .)
    diferente1      reduce using rule 219 (GROUP -> group by LEXP .)
    diferente2      reduce using rule 219 (GROUP -> group by LEXP .)
    between         reduce using rule 219 (GROUP -> group by LEXP .)
    is              reduce using rule 219 (GROUP -> group by LEXP .)
    isnull          reduce using rule 219 (GROUP -> group by LEXP .)
    notnull         reduce using rule 219 (GROUP -> group by LEXP .)
    as              reduce using rule 219 (GROUP -> group by LEXP .)
    cadenaString    reduce using rule 219 (GROUP -> group by LEXP .)
    cadena          reduce using rule 219 (GROUP -> group by LEXP .)
    id              reduce using rule 219 (GROUP -> group by LEXP .)
    in              reduce using rule 219 (GROUP -> group by LEXP .)
    not             reduce using rule 219 (GROUP -> group by LEXP .)
    like            reduce using rule 219 (GROUP -> group by LEXP .)
    then            reduce using rule 219 (GROUP -> group by LEXP .)
    when            reduce using rule 219 (GROUP -> group by LEXP .)
    parc            reduce using rule 219 (GROUP -> group by LEXP .)
    constraint      reduce using rule 219 (GROUP -> group by LEXP .)
    unique          reduce using rule 219 (GROUP -> group by LEXP .)
    check           reduce using rule 219 (GROUP -> group by LEXP .)
    default         reduce using rule 219 (GROUP -> group by LEXP .)
    null            reduce using rule 219 (GROUP -> group by LEXP .)
    primary         reduce using rule 219 (GROUP -> group by LEXP .)
    references      reduce using rule 219 (GROUP -> group by LEXP .)
    asc             reduce using rule 219 (GROUP -> group by LEXP .)
    desc            reduce using rule 219 (GROUP -> group by LEXP .)
    coma            shift and go to state 128

  ! coma            [ reduce using rule 219 (GROUP -> group by LEXP .) ]


state 466

    (324) EXP -> EXP is not distinct r_from . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 560
    SELECT                         shift and go to state 74

state 467

    (323) EXP -> EXP is distinct r_from EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    r_from          reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    coma            reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    where           reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    group           reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    having          reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    union           reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    intersect       reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    except          reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    order           reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    limit           reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    offset          reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    ptcoma          reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    and             reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    or              reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    between         reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    is              reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    isnull          reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    notnull         reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    as              reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    cadenaString    reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    cadena          reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    id              reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    in              reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    not             reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    like            reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    then            reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    when            reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    parc            reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    constraint      reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    unique          reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    check           reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    default         reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    null            reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    primary         reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    references      reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    asc             reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    desc            reduce using rule 323 (EXP -> EXP is distinct r_from EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143

  ! mas             [ reduce using rule 323 (EXP -> EXP is distinct r_from EXP .) ]
  ! menos           [ reduce using rule 323 (EXP -> EXP is distinct r_from EXP .) ]
  ! multiplicacion  [ reduce using rule 323 (EXP -> EXP is distinct r_from EXP .) ]
  ! division        [ reduce using rule 323 (EXP -> EXP is distinct r_from EXP .) ]
  ! modulo          [ reduce using rule 323 (EXP -> EXP is distinct r_from EXP .) ]
  ! elevado         [ reduce using rule 323 (EXP -> EXP is distinct r_from EXP .) ]
  ! mayor           [ reduce using rule 323 (EXP -> EXP is distinct r_from EXP .) ]
  ! menor           [ reduce using rule 323 (EXP -> EXP is distinct r_from EXP .) ]
  ! mayor_igual     [ reduce using rule 323 (EXP -> EXP is distinct r_from EXP .) ]
  ! menor_igual     [ reduce using rule 323 (EXP -> EXP is distinct r_from EXP .) ]
  ! igual           [ reduce using rule 323 (EXP -> EXP is distinct r_from EXP .) ]
  ! diferente1      [ reduce using rule 323 (EXP -> EXP is distinct r_from EXP .) ]
  ! diferente2      [ reduce using rule 323 (EXP -> EXP is distinct r_from EXP .) ]
  ! and             [ shift and go to state 135 ]
  ! or              [ shift and go to state 136 ]
  ! between         [ shift and go to state 144 ]
  ! is              [ shift and go to state 145 ]
  ! isnull          [ shift and go to state 147 ]
  ! notnull         [ shift and go to state 148 ]
  ! as              [ shift and go to state 149 ]
  ! cadenaString    [ shift and go to state 150 ]
  ! cadena          [ shift and go to state 151 ]
  ! id              [ shift and go to state 152 ]
  ! in              [ shift and go to state 153 ]
  ! not             [ shift and go to state 146 ]
  ! like            [ shift and go to state 154 ]


state 468

    (319) EXP -> EXP not in para EXP . parc
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    parc            shift and go to state 561
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    and             shift and go to state 135
    or              shift and go to state 136
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143
    between         shift and go to state 144
    is              shift and go to state 145
    isnull          shift and go to state 147
    notnull         shift and go to state 148
    as              shift and go to state 149
    cadenaString    shift and go to state 150
    cadena          shift and go to state 151
    id              shift and go to state 152
    in              shift and go to state 153
    not             shift and go to state 146
    like            shift and go to state 154


state 469

    (322) EXP -> EXP not between symetric EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    r_from          reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    coma            reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    where           reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    group           reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    having          reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    union           reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    intersect       reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    except          reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    order           reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    limit           reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    offset          reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    ptcoma          reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    and             reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    or              reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    between         reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    is              reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    isnull          reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    notnull         reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    as              reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    cadenaString    reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    cadena          reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    id              reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    in              reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    not             reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    like            reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    then            reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    when            reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    parc            reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    constraint      reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    unique          reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    check           reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    default         reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    null            reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    primary         reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    references      reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    asc             reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    desc            reduce using rule 322 (EXP -> EXP not between symetric EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143

  ! mas             [ reduce using rule 322 (EXP -> EXP not between symetric EXP .) ]
  ! menos           [ reduce using rule 322 (EXP -> EXP not between symetric EXP .) ]
  ! multiplicacion  [ reduce using rule 322 (EXP -> EXP not between symetric EXP .) ]
  ! division        [ reduce using rule 322 (EXP -> EXP not between symetric EXP .) ]
  ! modulo          [ reduce using rule 322 (EXP -> EXP not between symetric EXP .) ]
  ! elevado         [ reduce using rule 322 (EXP -> EXP not between symetric EXP .) ]
  ! mayor           [ reduce using rule 322 (EXP -> EXP not between symetric EXP .) ]
  ! menor           [ reduce using rule 322 (EXP -> EXP not between symetric EXP .) ]
  ! mayor_igual     [ reduce using rule 322 (EXP -> EXP not between symetric EXP .) ]
  ! menor_igual     [ reduce using rule 322 (EXP -> EXP not between symetric EXP .) ]
  ! igual           [ reduce using rule 322 (EXP -> EXP not between symetric EXP .) ]
  ! diferente1      [ reduce using rule 322 (EXP -> EXP not between symetric EXP .) ]
  ! diferente2      [ reduce using rule 322 (EXP -> EXP not between symetric EXP .) ]
  ! and             [ shift and go to state 135 ]
  ! or              [ shift and go to state 136 ]
  ! between         [ shift and go to state 144 ]
  ! is              [ shift and go to state 145 ]
  ! isnull          [ shift and go to state 147 ]
  ! notnull         [ shift and go to state 148 ]
  ! as              [ shift and go to state 149 ]
  ! cadenaString    [ shift and go to state 150 ]
  ! cadena          [ shift and go to state 151 ]
  ! id              [ shift and go to state 152 ]
  ! in              [ shift and go to state 153 ]
  ! not             [ shift and go to state 146 ]
  ! like            [ shift and go to state 154 ]


state 470

    (318) EXP -> EXP in para EXP parc .

    r_from          reduce using rule 318 (EXP -> EXP in para EXP parc .)
    coma            reduce using rule 318 (EXP -> EXP in para EXP parc .)
    where           reduce using rule 318 (EXP -> EXP in para EXP parc .)
    group           reduce using rule 318 (EXP -> EXP in para EXP parc .)
    having          reduce using rule 318 (EXP -> EXP in para EXP parc .)
    union           reduce using rule 318 (EXP -> EXP in para EXP parc .)
    intersect       reduce using rule 318 (EXP -> EXP in para EXP parc .)
    except          reduce using rule 318 (EXP -> EXP in para EXP parc .)
    order           reduce using rule 318 (EXP -> EXP in para EXP parc .)
    limit           reduce using rule 318 (EXP -> EXP in para EXP parc .)
    offset          reduce using rule 318 (EXP -> EXP in para EXP parc .)
    ptcoma          reduce using rule 318 (EXP -> EXP in para EXP parc .)
    mas             reduce using rule 318 (EXP -> EXP in para EXP parc .)
    menos           reduce using rule 318 (EXP -> EXP in para EXP parc .)
    multiplicacion  reduce using rule 318 (EXP -> EXP in para EXP parc .)
    division        reduce using rule 318 (EXP -> EXP in para EXP parc .)
    modulo          reduce using rule 318 (EXP -> EXP in para EXP parc .)
    elevado         reduce using rule 318 (EXP -> EXP in para EXP parc .)
    and             reduce using rule 318 (EXP -> EXP in para EXP parc .)
    or              reduce using rule 318 (EXP -> EXP in para EXP parc .)
    mayor           reduce using rule 318 (EXP -> EXP in para EXP parc .)
    menor           reduce using rule 318 (EXP -> EXP in para EXP parc .)
    mayor_igual     reduce using rule 318 (EXP -> EXP in para EXP parc .)
    menor_igual     reduce using rule 318 (EXP -> EXP in para EXP parc .)
    igual           reduce using rule 318 (EXP -> EXP in para EXP parc .)
    diferente1      reduce using rule 318 (EXP -> EXP in para EXP parc .)
    diferente2      reduce using rule 318 (EXP -> EXP in para EXP parc .)
    between         reduce using rule 318 (EXP -> EXP in para EXP parc .)
    is              reduce using rule 318 (EXP -> EXP in para EXP parc .)
    isnull          reduce using rule 318 (EXP -> EXP in para EXP parc .)
    notnull         reduce using rule 318 (EXP -> EXP in para EXP parc .)
    as              reduce using rule 318 (EXP -> EXP in para EXP parc .)
    cadenaString    reduce using rule 318 (EXP -> EXP in para EXP parc .)
    cadena          reduce using rule 318 (EXP -> EXP in para EXP parc .)
    id              reduce using rule 318 (EXP -> EXP in para EXP parc .)
    in              reduce using rule 318 (EXP -> EXP in para EXP parc .)
    not             reduce using rule 318 (EXP -> EXP in para EXP parc .)
    like            reduce using rule 318 (EXP -> EXP in para EXP parc .)
    then            reduce using rule 318 (EXP -> EXP in para EXP parc .)
    when            reduce using rule 318 (EXP -> EXP in para EXP parc .)
    parc            reduce using rule 318 (EXP -> EXP in para EXP parc .)
    constraint      reduce using rule 318 (EXP -> EXP in para EXP parc .)
    unique          reduce using rule 318 (EXP -> EXP in para EXP parc .)
    check           reduce using rule 318 (EXP -> EXP in para EXP parc .)
    default         reduce using rule 318 (EXP -> EXP in para EXP parc .)
    null            reduce using rule 318 (EXP -> EXP in para EXP parc .)
    primary         reduce using rule 318 (EXP -> EXP in para EXP parc .)
    references      reduce using rule 318 (EXP -> EXP in para EXP parc .)
    asc             reduce using rule 318 (EXP -> EXP in para EXP parc .)
    desc            reduce using rule 318 (EXP -> EXP in para EXP parc .)


state 471

    (246) TIPO -> interval para int . parc
    (256) TIPO -> interval para int . parc cadena

    parc            shift and go to state 562


state 472

    (237) TIPO -> decimal para int . coma int parc
    (238) TIPO -> decimal para int . parc

    coma            shift and go to state 563
    parc            shift and go to state 564


state 473

    (240) TIPO -> numeric para int . coma int parc
    (241) TIPO -> numeric para int . parc

    coma            shift and go to state 565
    parc            shift and go to state 566


state 474

    (243) TIPO -> varchar para int . parc

    parc            shift and go to state 567


state 475

    (244) TIPO -> timestamp para int . parc
    (252) TIPO -> timestamp para int . parc without time zone
    (253) TIPO -> timestamp para int . parc with time zone

    parc            shift and go to state 568


state 476

    (272) TIPO -> timestamp without time . zone

    zone            shift and go to state 569


state 477

    (273) TIPO -> timestamp with time . zone

    zone            shift and go to state 570


state 478

    (245) TIPO -> character para int . parc

    parc            shift and go to state 571


state 479

    (249) TIPO -> character varying para . int parc

    int             shift and go to state 572


state 480

    (247) TIPO -> char para int . parc

    parc            shift and go to state 573


state 481

    (248) TIPO -> time para int . parc
    (254) TIPO -> time para int . parc without time zone
    (255) TIPO -> time para int . parc with time zone

    parc            shift and go to state 574


state 482

    (274) TIPO -> time without time . zone

    zone            shift and go to state 575


state 483

    (275) TIPO -> time with time . zone

    zone            shift and go to state 576


state 484

    (250) TIPO -> id modulo rowtype .

    r_from          reduce using rule 250 (TIPO -> id modulo rowtype .)
    coma            reduce using rule 250 (TIPO -> id modulo rowtype .)
    where           reduce using rule 250 (TIPO -> id modulo rowtype .)
    group           reduce using rule 250 (TIPO -> id modulo rowtype .)
    having          reduce using rule 250 (TIPO -> id modulo rowtype .)
    union           reduce using rule 250 (TIPO -> id modulo rowtype .)
    intersect       reduce using rule 250 (TIPO -> id modulo rowtype .)
    except          reduce using rule 250 (TIPO -> id modulo rowtype .)
    order           reduce using rule 250 (TIPO -> id modulo rowtype .)
    limit           reduce using rule 250 (TIPO -> id modulo rowtype .)
    offset          reduce using rule 250 (TIPO -> id modulo rowtype .)
    ptcoma          reduce using rule 250 (TIPO -> id modulo rowtype .)
    mas             reduce using rule 250 (TIPO -> id modulo rowtype .)
    menos           reduce using rule 250 (TIPO -> id modulo rowtype .)
    multiplicacion  reduce using rule 250 (TIPO -> id modulo rowtype .)
    division        reduce using rule 250 (TIPO -> id modulo rowtype .)
    modulo          reduce using rule 250 (TIPO -> id modulo rowtype .)
    elevado         reduce using rule 250 (TIPO -> id modulo rowtype .)
    and             reduce using rule 250 (TIPO -> id modulo rowtype .)
    or              reduce using rule 250 (TIPO -> id modulo rowtype .)
    mayor           reduce using rule 250 (TIPO -> id modulo rowtype .)
    menor           reduce using rule 250 (TIPO -> id modulo rowtype .)
    mayor_igual     reduce using rule 250 (TIPO -> id modulo rowtype .)
    menor_igual     reduce using rule 250 (TIPO -> id modulo rowtype .)
    igual           reduce using rule 250 (TIPO -> id modulo rowtype .)
    diferente1      reduce using rule 250 (TIPO -> id modulo rowtype .)
    diferente2      reduce using rule 250 (TIPO -> id modulo rowtype .)
    between         reduce using rule 250 (TIPO -> id modulo rowtype .)
    is              reduce using rule 250 (TIPO -> id modulo rowtype .)
    isnull          reduce using rule 250 (TIPO -> id modulo rowtype .)
    notnull         reduce using rule 250 (TIPO -> id modulo rowtype .)
    as              reduce using rule 250 (TIPO -> id modulo rowtype .)
    cadenaString    reduce using rule 250 (TIPO -> id modulo rowtype .)
    cadena          reduce using rule 250 (TIPO -> id modulo rowtype .)
    id              reduce using rule 250 (TIPO -> id modulo rowtype .)
    in              reduce using rule 250 (TIPO -> id modulo rowtype .)
    not             reduce using rule 250 (TIPO -> id modulo rowtype .)
    like            reduce using rule 250 (TIPO -> id modulo rowtype .)
    then            reduce using rule 250 (TIPO -> id modulo rowtype .)
    when            reduce using rule 250 (TIPO -> id modulo rowtype .)
    parc            reduce using rule 250 (TIPO -> id modulo rowtype .)
    constraint      reduce using rule 250 (TIPO -> id modulo rowtype .)
    unique          reduce using rule 250 (TIPO -> id modulo rowtype .)
    check           reduce using rule 250 (TIPO -> id modulo rowtype .)
    default         reduce using rule 250 (TIPO -> id modulo rowtype .)
    null            reduce using rule 250 (TIPO -> id modulo rowtype .)
    primary         reduce using rule 250 (TIPO -> id modulo rowtype .)
    references      reduce using rule 250 (TIPO -> id modulo rowtype .)
    asc             reduce using rule 250 (TIPO -> id modulo rowtype .)
    desc            reduce using rule 250 (TIPO -> id modulo rowtype .)
    dospuntos       reduce using rule 250 (TIPO -> id modulo rowtype .)
    language        reduce using rule 250 (TIPO -> id modulo rowtype .)
    do              reduce using rule 250 (TIPO -> id modulo rowtype .)


state 485

    (251) TIPO -> idPunto modulo type .

    r_from          reduce using rule 251 (TIPO -> idPunto modulo type .)
    coma            reduce using rule 251 (TIPO -> idPunto modulo type .)
    where           reduce using rule 251 (TIPO -> idPunto modulo type .)
    group           reduce using rule 251 (TIPO -> idPunto modulo type .)
    having          reduce using rule 251 (TIPO -> idPunto modulo type .)
    union           reduce using rule 251 (TIPO -> idPunto modulo type .)
    intersect       reduce using rule 251 (TIPO -> idPunto modulo type .)
    except          reduce using rule 251 (TIPO -> idPunto modulo type .)
    order           reduce using rule 251 (TIPO -> idPunto modulo type .)
    limit           reduce using rule 251 (TIPO -> idPunto modulo type .)
    offset          reduce using rule 251 (TIPO -> idPunto modulo type .)
    ptcoma          reduce using rule 251 (TIPO -> idPunto modulo type .)
    mas             reduce using rule 251 (TIPO -> idPunto modulo type .)
    menos           reduce using rule 251 (TIPO -> idPunto modulo type .)
    multiplicacion  reduce using rule 251 (TIPO -> idPunto modulo type .)
    division        reduce using rule 251 (TIPO -> idPunto modulo type .)
    modulo          reduce using rule 251 (TIPO -> idPunto modulo type .)
    elevado         reduce using rule 251 (TIPO -> idPunto modulo type .)
    and             reduce using rule 251 (TIPO -> idPunto modulo type .)
    or              reduce using rule 251 (TIPO -> idPunto modulo type .)
    mayor           reduce using rule 251 (TIPO -> idPunto modulo type .)
    menor           reduce using rule 251 (TIPO -> idPunto modulo type .)
    mayor_igual     reduce using rule 251 (TIPO -> idPunto modulo type .)
    menor_igual     reduce using rule 251 (TIPO -> idPunto modulo type .)
    igual           reduce using rule 251 (TIPO -> idPunto modulo type .)
    diferente1      reduce using rule 251 (TIPO -> idPunto modulo type .)
    diferente2      reduce using rule 251 (TIPO -> idPunto modulo type .)
    between         reduce using rule 251 (TIPO -> idPunto modulo type .)
    is              reduce using rule 251 (TIPO -> idPunto modulo type .)
    isnull          reduce using rule 251 (TIPO -> idPunto modulo type .)
    notnull         reduce using rule 251 (TIPO -> idPunto modulo type .)
    as              reduce using rule 251 (TIPO -> idPunto modulo type .)
    cadenaString    reduce using rule 251 (TIPO -> idPunto modulo type .)
    cadena          reduce using rule 251 (TIPO -> idPunto modulo type .)
    id              reduce using rule 251 (TIPO -> idPunto modulo type .)
    in              reduce using rule 251 (TIPO -> idPunto modulo type .)
    not             reduce using rule 251 (TIPO -> idPunto modulo type .)
    like            reduce using rule 251 (TIPO -> idPunto modulo type .)
    then            reduce using rule 251 (TIPO -> idPunto modulo type .)
    when            reduce using rule 251 (TIPO -> idPunto modulo type .)
    parc            reduce using rule 251 (TIPO -> idPunto modulo type .)
    constraint      reduce using rule 251 (TIPO -> idPunto modulo type .)
    unique          reduce using rule 251 (TIPO -> idPunto modulo type .)
    check           reduce using rule 251 (TIPO -> idPunto modulo type .)
    default         reduce using rule 251 (TIPO -> idPunto modulo type .)
    null            reduce using rule 251 (TIPO -> idPunto modulo type .)
    primary         reduce using rule 251 (TIPO -> idPunto modulo type .)
    references      reduce using rule 251 (TIPO -> idPunto modulo type .)
    asc             reduce using rule 251 (TIPO -> idPunto modulo type .)
    desc            reduce using rule 251 (TIPO -> idPunto modulo type .)
    dospuntos       reduce using rule 251 (TIPO -> idPunto modulo type .)
    language        reduce using rule 251 (TIPO -> idPunto modulo type .)
    do              reduce using rule 251 (TIPO -> idPunto modulo type .)


state 486

    (334) EXP -> extract para FIELDS r_from timestamp . cadena parc

    cadena          shift and go to state 577


state 487

    (174) COLDEF -> id TIPO .
    (175) COLDEF -> id TIPO . LOPCOLUMN
    (176) LOPCOLUMN -> . LOPCOLUMN OPCOLUMN
    (177) LOPCOLUMN -> . OPCOLUMN
    (178) OPCOLUMN -> . constraint id unique
    (179) OPCOLUMN -> . unique
    (180) OPCOLUMN -> . constraint id check para CONDCHECK parc
    (181) OPCOLUMN -> . check para CONDCHECK parc
    (182) OPCOLUMN -> . default EXP
    (183) OPCOLUMN -> . not null
    (184) OPCOLUMN -> . null
    (185) OPCOLUMN -> . primary key
    (186) OPCOLUMN -> . references id

    parc            reduce using rule 174 (COLDEF -> id TIPO .)
    coma            reduce using rule 174 (COLDEF -> id TIPO .)
    constraint      shift and go to state 580
    unique          shift and go to state 581
    check           shift and go to state 582
    default         shift and go to state 583
    not             shift and go to state 584
    null            shift and go to state 585
    primary         shift and go to state 586
    references      shift and go to state 587

    LOPCOLUMN                      shift and go to state 578
    OPCOLUMN                       shift and go to state 579

state 488

    (168) CREATETABLE -> create table id para LDEF parc . ptcoma
    (169) CREATETABLE -> create table id para LDEF parc . HERENCIA ptcoma
    (198) HERENCIA -> . inherits para id parc

    ptcoma          shift and go to state 588
    inherits        shift and go to state 590

    HERENCIA                       shift and go to state 589

state 489

    (170) LDEF -> LDEF coma . COLDEF
    (172) COLDEF -> . OPCONST
    (173) COLDEF -> . constraint id OPCONST
    (174) COLDEF -> . id TIPO
    (175) COLDEF -> . id TIPO LOPCOLUMN
    (187) OPCONST -> . primary key para LEXP parc
    (188) OPCONST -> . foreign key para LEXP parc references id para LEXP parc
    (189) OPCONST -> . unique para LEXP parc
    (190) OPCONST -> . check para CONDCHECK parc

    constraint      shift and go to state 378
    id              shift and go to state 374
    primary         shift and go to state 379
    foreign         shift and go to state 380
    unique          shift and go to state 381
    check           shift and go to state 382

    COLDEF                         shift and go to state 591
    OPCONST                        shift and go to state 377

state 490

    (173) COLDEF -> constraint id . OPCONST
    (187) OPCONST -> . primary key para LEXP parc
    (188) OPCONST -> . foreign key para LEXP parc references id para LEXP parc
    (189) OPCONST -> . unique para LEXP parc
    (190) OPCONST -> . check para CONDCHECK parc

    primary         shift and go to state 379
    foreign         shift and go to state 380
    unique          shift and go to state 381
    check           shift and go to state 382

    OPCONST                        shift and go to state 592

state 491

    (187) OPCONST -> primary key . para LEXP parc

    para            shift and go to state 593


state 492

    (188) OPCONST -> foreign key . para LEXP parc references id para LEXP parc

    para            shift and go to state 594


state 493

    (189) OPCONST -> unique para . LEXP parc
    (234) LEXP -> . LEXP coma EXP
    (235) LEXP -> . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    LEXP                           shift and go to state 595
    EXP                            shift and go to state 62
    SELECT                         shift and go to state 74

state 494

    (190) OPCONST -> check para . CONDCHECK parc
    (191) CONDCHECK -> . EXP mayor EXP
    (192) CONDCHECK -> . EXP menor EXP
    (193) CONDCHECK -> . EXP mayor_igual EXP
    (194) CONDCHECK -> . EXP menor_igual EXP
    (195) CONDCHECK -> . EXP igual EXP
    (196) CONDCHECK -> . EXP diferente1 EXP
    (197) CONDCHECK -> . EXP diferente2 EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    CONDCHECK                      shift and go to state 596
    EXP                            shift and go to state 597
    SELECT                         shift and go to state 74

state 495

    (199) CREATETYPE -> create type id as enum para . LEXP parc
    (234) LEXP -> . LEXP coma EXP
    (235) LEXP -> . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    LEXP                           shift and go to state 598
    EXP                            shift and go to state 62
    SELECT                         shift and go to state 74

state 496

    (151) CREATEDB -> create RD if not exist id .
    (152) CREATEDB -> create RD if not exist id . OPCCDB
    (155) OPCCDB -> . PROPIETARIO
    (156) OPCCDB -> . MODO
    (157) OPCCDB -> . PROPIETARIO MODO
    (160) PROPIETARIO -> . owner igual id
    (161) PROPIETARIO -> . owner igual cadena
    (162) PROPIETARIO -> . owner igual cadenaString
    (163) PROPIETARIO -> . owner id
    (164) PROPIETARIO -> . owner cadena
    (165) PROPIETARIO -> . owner cadenaString
    (166) MODO -> . mode igual int
    (167) MODO -> . mode int

    ptcoma          reduce using rule 151 (CREATEDB -> create RD if not exist id .)
    owner           shift and go to state 281
    mode            shift and go to state 282

    OPCCDB                         shift and go to state 599
    PROPIETARIO                    shift and go to state 279
    MODO                           shift and go to state 280

state 497

    (160) PROPIETARIO -> owner igual id .

    mode            reduce using rule 160 (PROPIETARIO -> owner igual id .)
    ptcoma          reduce using rule 160 (PROPIETARIO -> owner igual id .)


state 498

    (161) PROPIETARIO -> owner igual cadena .

    mode            reduce using rule 161 (PROPIETARIO -> owner igual cadena .)
    ptcoma          reduce using rule 161 (PROPIETARIO -> owner igual cadena .)


state 499

    (162) PROPIETARIO -> owner igual cadenaString .

    mode            reduce using rule 162 (PROPIETARIO -> owner igual cadenaString .)
    ptcoma          reduce using rule 162 (PROPIETARIO -> owner igual cadenaString .)


state 500

    (166) MODO -> mode igual int .

    ptcoma          reduce using rule 166 (MODO -> mode igual int .)


state 501

    (52) CREATEINDEX -> create index id on id para . LEXP parc
    (55) CREATEINDEX -> create index id on id para . id ORDEN parc
    (56) CREATEINDEX -> create index id on id para . id id ORDEN parc
    (57) CREATEINDEX -> create index id on id para . id id parc
    (234) LEXP -> . LEXP coma EXP
    (235) LEXP -> . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    id              shift and go to state 600
    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    LEXP                           shift and go to state 601
    EXP                            shift and go to state 62
    SELECT                         shift and go to state 74

state 502

    (54) CREATEINDEX -> create index id on id using . hash para LEXP parc

    hash            shift and go to state 602


state 503

    (53) CREATEINDEX -> create unique index id on id . para LEXP parc

    para            shift and go to state 603


state 504

    (48) LPARAM -> id TIPO .

    parc            reduce using rule 48 (LPARAM -> id TIPO .)
    coma            reduce using rule 48 (LPARAM -> id TIPO .)


state 505

    (37) PROCEDIMIENTOS -> create procedure id para LPARAM parc . LENGUAJE LCONTENIDOP
    (39) PROCEDIMIENTOS -> create procedure id para LPARAM parc . LCONTENIDOP LENGUAJE
    (49) LENGUAJE -> . language plpgsql
    (50) LENGUAJE -> . language plpgsql ptcoma
    (41) LCONTENIDOP -> . LCONTENIDOP CONTENIDOP
    (42) LCONTENIDOP -> . CONTENIDOP
    (43) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (44) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn

    language        shift and go to state 509
    as              shift and go to state 511
    do              shift and go to state 512

    LENGUAJE                       shift and go to state 604
    LCONTENIDOP                    shift and go to state 605
    CONTENIDOP                     shift and go to state 510

state 506

    (45) LPARAM -> LPARAM coma . inout id TIPO
    (46) LPARAM -> LPARAM coma . id TIPO

    inout           shift and go to state 606
    id              shift and go to state 607


state 507

    (38) PROCEDIMIENTOS -> create procedure id para parc LENGUAJE . LCONTENIDOP
    (41) LCONTENIDOP -> . LCONTENIDOP CONTENIDOP
    (42) LCONTENIDOP -> . CONTENIDOP
    (43) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (44) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn

    as              shift and go to state 511
    do              shift and go to state 512

    LCONTENIDOP                    shift and go to state 608
    CONTENIDOP                     shift and go to state 510

state 508

    (40) PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP . LENGUAJE
    (41) LCONTENIDOP -> LCONTENIDOP . CONTENIDOP
    (49) LENGUAJE -> . language plpgsql
    (50) LENGUAJE -> . language plpgsql ptcoma
    (43) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (44) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn

    language        shift and go to state 509
    as              shift and go to state 511
    do              shift and go to state 512

    LENGUAJE                       shift and go to state 609
    CONTENIDOP                     shift and go to state 610

state 509

    (49) LENGUAJE -> language . plpgsql
    (50) LENGUAJE -> language . plpgsql ptcoma

    plpgsql         shift and go to state 611


state 510

    (42) LCONTENIDOP -> CONTENIDOP .

    language        reduce using rule 42 (LCONTENIDOP -> CONTENIDOP .)
    as              reduce using rule 42 (LCONTENIDOP -> CONTENIDOP .)
    do              reduce using rule 42 (LCONTENIDOP -> CONTENIDOP .)
    use             reduce using rule 42 (LCONTENIDOP -> CONTENIDOP .)
    select          reduce using rule 42 (LCONTENIDOP -> CONTENIDOP .)
    create          reduce using rule 42 (LCONTENIDOP -> CONTENIDOP .)
    update          reduce using rule 42 (LCONTENIDOP -> CONTENIDOP .)
    delete          reduce using rule 42 (LCONTENIDOP -> CONTENIDOP .)
    alter           reduce using rule 42 (LCONTENIDOP -> CONTENIDOP .)
    drop            reduce using rule 42 (LCONTENIDOP -> CONTENIDOP .)
    insert          reduce using rule 42 (LCONTENIDOP -> CONTENIDOP .)
    case            reduce using rule 42 (LCONTENIDOP -> CONTENIDOP .)
    show            reduce using rule 42 (LCONTENIDOP -> CONTENIDOP .)
    id              reduce using rule 42 (LCONTENIDOP -> CONTENIDOP .)
    if              reduce using rule 42 (LCONTENIDOP -> CONTENIDOP .)
    execute         reduce using rule 42 (LCONTENIDOP -> CONTENIDOP .)
    $end            reduce using rule 42 (LCONTENIDOP -> CONTENIDOP .)


state 511

    (43) CONTENIDOP -> as . dolarn LISTACONTENIDO dolarn

    dolarn          shift and go to state 612


state 512

    (44) CONTENIDOP -> do . dolarn LISTACONTENIDO dolarn

    dolarn          shift and go to state 613


state 513

    (47) LPARAM -> inout id . TIPO
    (236) TIPO -> . interval cadena
    (237) TIPO -> . decimal para int coma int parc
    (238) TIPO -> . decimal para int parc
    (239) TIPO -> . decimal
    (240) TIPO -> . numeric para int coma int parc
    (241) TIPO -> . numeric para int parc
    (242) TIPO -> . numeric
    (243) TIPO -> . varchar para int parc
    (244) TIPO -> . timestamp para int parc
    (245) TIPO -> . character para int parc
    (246) TIPO -> . interval para int parc
    (247) TIPO -> . char para int parc
    (248) TIPO -> . time para int parc
    (249) TIPO -> . character varying para int parc
    (250) TIPO -> . id modulo rowtype
    (251) TIPO -> . idPunto modulo type
    (252) TIPO -> . timestamp para int parc without time zone
    (253) TIPO -> . timestamp para int parc with time zone
    (254) TIPO -> . time para int parc without time zone
    (255) TIPO -> . time para int parc with time zone
    (256) TIPO -> . interval para int parc cadena
    (257) TIPO -> . smallint
    (258) TIPO -> . integer
    (259) TIPO -> . r_int
    (260) TIPO -> . bigint
    (261) TIPO -> . real
    (262) TIPO -> . double precision
    (263) TIPO -> . money
    (264) TIPO -> . text
    (265) TIPO -> . timestamp
    (266) TIPO -> . date
    (267) TIPO -> . time
    (268) TIPO -> . interval
    (269) TIPO -> . boolean
    (270) TIPO -> . record
    (271) TIPO -> . varchar
    (272) TIPO -> . timestamp without time zone
    (273) TIPO -> . timestamp with time zone
    (274) TIPO -> . time without time zone
    (275) TIPO -> . time with time zone
    (276) TIPO -> . id

    interval        shift and go to state 241
    decimal         shift and go to state 242
    numeric         shift and go to state 243
    varchar         shift and go to state 244
    timestamp       shift and go to state 245
    character       shift and go to state 246
    char            shift and go to state 247
    time            shift and go to state 248
    id              shift and go to state 249
    idPunto         shift and go to state 250
    smallint        shift and go to state 251
    integer         shift and go to state 252
    r_int           shift and go to state 253
    bigint          shift and go to state 254
    real            shift and go to state 255
    double          shift and go to state 256
    money           shift and go to state 257
    text            shift and go to state 258
    date            shift and go to state 259
    boolean         shift and go to state 260
    record          shift and go to state 261

    TIPO                           shift and go to state 614

state 514

    (27) FUNCIONES -> create function id para LPARAM parc . RETURNP LENGUAJE LCONTENIDOP
    (29) FUNCIONES -> create function id para LPARAM parc . RETURNP LCONTENIDOP LENGUAJE
    (34) RETURNP -> . returns TIPO

    returns         shift and go to state 516

    RETURNP                        shift and go to state 615

state 515

    (28) FUNCIONES -> create function id para parc RETURNP . LENGUAJE LCONTENIDOP
    (30) FUNCIONES -> create function id para parc RETURNP . LCONTENIDOP LENGUAJE
    (49) LENGUAJE -> . language plpgsql
    (50) LENGUAJE -> . language plpgsql ptcoma
    (41) LCONTENIDOP -> . LCONTENIDOP CONTENIDOP
    (42) LCONTENIDOP -> . CONTENIDOP
    (43) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (44) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn

    language        shift and go to state 509
    as              shift and go to state 511
    do              shift and go to state 512

    LENGUAJE                       shift and go to state 616
    LCONTENIDOP                    shift and go to state 617
    CONTENIDOP                     shift and go to state 510

state 516

    (34) RETURNP -> returns . TIPO
    (236) TIPO -> . interval cadena
    (237) TIPO -> . decimal para int coma int parc
    (238) TIPO -> . decimal para int parc
    (239) TIPO -> . decimal
    (240) TIPO -> . numeric para int coma int parc
    (241) TIPO -> . numeric para int parc
    (242) TIPO -> . numeric
    (243) TIPO -> . varchar para int parc
    (244) TIPO -> . timestamp para int parc
    (245) TIPO -> . character para int parc
    (246) TIPO -> . interval para int parc
    (247) TIPO -> . char para int parc
    (248) TIPO -> . time para int parc
    (249) TIPO -> . character varying para int parc
    (250) TIPO -> . id modulo rowtype
    (251) TIPO -> . idPunto modulo type
    (252) TIPO -> . timestamp para int parc without time zone
    (253) TIPO -> . timestamp para int parc with time zone
    (254) TIPO -> . time para int parc without time zone
    (255) TIPO -> . time para int parc with time zone
    (256) TIPO -> . interval para int parc cadena
    (257) TIPO -> . smallint
    (258) TIPO -> . integer
    (259) TIPO -> . r_int
    (260) TIPO -> . bigint
    (261) TIPO -> . real
    (262) TIPO -> . double precision
    (263) TIPO -> . money
    (264) TIPO -> . text
    (265) TIPO -> . timestamp
    (266) TIPO -> . date
    (267) TIPO -> . time
    (268) TIPO -> . interval
    (269) TIPO -> . boolean
    (270) TIPO -> . record
    (271) TIPO -> . varchar
    (272) TIPO -> . timestamp without time zone
    (273) TIPO -> . timestamp with time zone
    (274) TIPO -> . time without time zone
    (275) TIPO -> . time with time zone
    (276) TIPO -> . id

    interval        shift and go to state 241
    decimal         shift and go to state 242
    numeric         shift and go to state 243
    varchar         shift and go to state 244
    timestamp       shift and go to state 245
    character       shift and go to state 246
    char            shift and go to state 247
    time            shift and go to state 248
    id              shift and go to state 249
    idPunto         shift and go to state 250
    smallint        shift and go to state 251
    integer         shift and go to state 252
    r_int           shift and go to state 253
    bigint          shift and go to state 254
    real            shift and go to state 255
    double          shift and go to state 256
    money           shift and go to state 257
    text            shift and go to state 258
    date            shift and go to state 259
    boolean         shift and go to state 260
    record          shift and go to state 261

    TIPO                           shift and go to state 618

state 517

    (230) LCAMPOS -> id igual EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    coma            reduce using rule 230 (LCAMPOS -> id igual EXP .)
    where           reduce using rule 230 (LCAMPOS -> id igual EXP .)
    ptcoma          reduce using rule 230 (LCAMPOS -> id igual EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    and             shift and go to state 135
    or              shift and go to state 136
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143
    between         shift and go to state 144
    is              shift and go to state 145
    isnull          shift and go to state 147
    notnull         shift and go to state 148
    as              shift and go to state 149
    cadenaString    shift and go to state 150
    cadena          shift and go to state 151
    id              shift and go to state 152
    in              shift and go to state 153
    not             shift and go to state 146
    like            shift and go to state 154


state 518

    (229) LCAMPOS -> LCAMPOS coma id . igual EXP

    igual           shift and go to state 619


state 519

    (125) ALTER -> alter databases id rename to id .

    ptcoma          reduce using rule 125 (ALTER -> alter databases id rename to id .)


state 520

    (126) ALTER -> alter databases id owner to id .

    ptcoma          reduce using rule 126 (ALTER -> alter databases id owner to id .)


state 521

    (141) OP -> alter column id . set not null
    (142) OP -> alter column id . set null
    (147) OP -> alter column id . type TIPO

    set             shift and go to state 620
    type            shift and go to state 621


state 522

    (132) LOP -> LOP coma OP .

    coma            reduce using rule 132 (LOP -> LOP coma OP .)
    ptcoma          reduce using rule 132 (LOP -> LOP coma OP .)


state 523

    (134) OP -> add column id . TIPO
    (236) TIPO -> . interval cadena
    (237) TIPO -> . decimal para int coma int parc
    (238) TIPO -> . decimal para int parc
    (239) TIPO -> . decimal
    (240) TIPO -> . numeric para int coma int parc
    (241) TIPO -> . numeric para int parc
    (242) TIPO -> . numeric
    (243) TIPO -> . varchar para int parc
    (244) TIPO -> . timestamp para int parc
    (245) TIPO -> . character para int parc
    (246) TIPO -> . interval para int parc
    (247) TIPO -> . char para int parc
    (248) TIPO -> . time para int parc
    (249) TIPO -> . character varying para int parc
    (250) TIPO -> . id modulo rowtype
    (251) TIPO -> . idPunto modulo type
    (252) TIPO -> . timestamp para int parc without time zone
    (253) TIPO -> . timestamp para int parc with time zone
    (254) TIPO -> . time para int parc without time zone
    (255) TIPO -> . time para int parc with time zone
    (256) TIPO -> . interval para int parc cadena
    (257) TIPO -> . smallint
    (258) TIPO -> . integer
    (259) TIPO -> . r_int
    (260) TIPO -> . bigint
    (261) TIPO -> . real
    (262) TIPO -> . double precision
    (263) TIPO -> . money
    (264) TIPO -> . text
    (265) TIPO -> . timestamp
    (266) TIPO -> . date
    (267) TIPO -> . time
    (268) TIPO -> . interval
    (269) TIPO -> . boolean
    (270) TIPO -> . record
    (271) TIPO -> . varchar
    (272) TIPO -> . timestamp without time zone
    (273) TIPO -> . timestamp with time zone
    (274) TIPO -> . time without time zone
    (275) TIPO -> . time with time zone
    (276) TIPO -> . id

    interval        shift and go to state 241
    decimal         shift and go to state 242
    numeric         shift and go to state 243
    varchar         shift and go to state 244
    timestamp       shift and go to state 245
    character       shift and go to state 246
    char            shift and go to state 247
    time            shift and go to state 248
    id              shift and go to state 249
    idPunto         shift and go to state 250
    smallint        shift and go to state 251
    integer         shift and go to state 252
    r_int           shift and go to state 253
    bigint          shift and go to state 254
    real            shift and go to state 255
    double          shift and go to state 256
    money           shift and go to state 257
    text            shift and go to state 258
    date            shift and go to state 259
    boolean         shift and go to state 260
    record          shift and go to state 261

    TIPO                           shift and go to state 622

state 524

    (135) OP -> add check para . CONDCHECK parc
    (191) CONDCHECK -> . EXP mayor EXP
    (192) CONDCHECK -> . EXP menor EXP
    (193) CONDCHECK -> . EXP mayor_igual EXP
    (194) CONDCHECK -> . EXP menor_igual EXP
    (195) CONDCHECK -> . EXP igual EXP
    (196) CONDCHECK -> . EXP diferente1 EXP
    (197) CONDCHECK -> . EXP diferente2 EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    CONDCHECK                      shift and go to state 623
    EXP                            shift and go to state 597
    SELECT                         shift and go to state 74

state 525

    (136) OP -> add constraint id . check para CONDCHECK parc
    (137) OP -> add constraint id . unique para LEXP parc
    (140) OP -> add constraint id . foreign key para LEXP parc references id para LEXP parc

    check           shift and go to state 624
    unique          shift and go to state 625
    foreign         shift and go to state 626


state 526

    (138) OP -> add unique para . LEXP parc
    (234) LEXP -> . LEXP coma EXP
    (235) LEXP -> . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    LEXP                           shift and go to state 627
    EXP                            shift and go to state 62
    SELECT                         shift and go to state 74

state 527

    (139) OP -> add foreign key . para LEXP parc references id para LEXP parc

    para            shift and go to state 628


state 528

    (143) OP -> drop constraint id .

    coma            reduce using rule 143 (OP -> drop constraint id .)
    ptcoma          reduce using rule 143 (OP -> drop constraint id .)


state 529

    (144) OP -> drop column LEXP .
    (234) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    ptcoma          reduce using rule 144 (OP -> drop column LEXP .)
    coma            shift and go to state 128

  ! coma            [ reduce using rule 144 (OP -> drop column LEXP .) ]


state 530

    (145) OP -> drop check id .

    coma            reduce using rule 145 (OP -> drop check id .)
    ptcoma          reduce using rule 145 (OP -> drop check id .)


state 531

    (146) OP -> rename column id . to id

    to              shift and go to state 629


state 532

    (130) ALTER -> alter index id alter column EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    ptcoma          reduce using rule 130 (ALTER -> alter index id alter column EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    and             shift and go to state 135
    or              shift and go to state 136
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143
    between         shift and go to state 144
    is              shift and go to state 145
    isnull          shift and go to state 147
    notnull         shift and go to state 148
    as              shift and go to state 149
    cadenaString    shift and go to state 150
    cadena          shift and go to state 151
    id              shift and go to state 152
    in              shift and go to state 153
    not             shift and go to state 146
    like            shift and go to state 154


state 533

    (129) ALTER -> alter index if exist id alter . EXP
    (131) ALTER -> alter index if exist id alter . column EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    column          shift and go to state 631
    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 630
    SELECT                         shift and go to state 74

state 534

    (78) CONDICIONIF -> if EXP then LISTACONTENIDO ELSEF end . if

    if              shift and go to state 632


state 535

    (80) CONDICIONIF -> if EXP then LISTACONTENIDO end if .

    ptcoma          reduce using rule 80 (CONDICIONIF -> if EXP then LISTACONTENIDO end if .)


state 536

    (79) CONDICIONIF -> if EXP then LISTACONTENIDO LELIF end . if

    if              shift and go to state 633


state 537

    (81) CONDICIONIF -> if EXP then LISTACONTENIDO LELIF ELSEF . end if

    end             shift and go to state 634


state 538

    (82) LELIF -> LELIF elsif . EXP then LISTACONTENIDO
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 635
    SELECT                         shift and go to state 74

state 539

    (83) LELIF -> elsif EXP . then LISTACONTENIDO
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    then            shift and go to state 636
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    and             shift and go to state 135
    or              shift and go to state 136
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143
    between         shift and go to state 144
    is              shift and go to state 145
    isnull          shift and go to state 147
    notnull         shift and go to state 148
    as              shift and go to state 149
    cadenaString    shift and go to state 150
    cadena          shift and go to state 151
    id              shift and go to state 152
    in              shift and go to state 153
    not             shift and go to state 146
    like            shift and go to state 154


state 540

    (66) LDEC -> LDEC DECLARACIONES .

    id              reduce using rule 66 (LDEC -> LDEC DECLARACIONES .)
    end             reduce using rule 66 (LDEC -> LDEC DECLARACIONES .)
    else            reduce using rule 66 (LDEC -> LDEC DECLARACIONES .)
    elsif           reduce using rule 66 (LDEC -> LDEC DECLARACIONES .)
    declare         reduce using rule 66 (LDEC -> LDEC DECLARACIONES .)
    if              reduce using rule 66 (LDEC -> LDEC DECLARACIONES .)
    raise           reduce using rule 66 (LDEC -> LDEC DECLARACIONES .)
    begin           reduce using rule 66 (LDEC -> LDEC DECLARACIONES .)
    execute         reduce using rule 66 (LDEC -> LDEC DECLARACIONES .)
    return          reduce using rule 66 (LDEC -> LDEC DECLARACIONES .)
    insert          reduce using rule 66 (LDEC -> LDEC DECLARACIONES .)
    select          reduce using rule 66 (LDEC -> LDEC DECLARACIONES .)
    update          reduce using rule 66 (LDEC -> LDEC DECLARACIONES .)
    delete          reduce using rule 66 (LDEC -> LDEC DECLARACIONES .)
    case            reduce using rule 66 (LDEC -> LDEC DECLARACIONES .)
    when            reduce using rule 66 (LDEC -> LDEC DECLARACIONES .)
    dolarn          reduce using rule 66 (LDEC -> LDEC DECLARACIONES .)


state 541

    (68) DECLARACIONES -> id TIPO . not null ASIG ptcoma
    (69) DECLARACIONES -> id TIPO . ASIG ptcoma
    (72) ASIG -> . default EXP
    (73) ASIG -> . dospuntos igual EXP
    (74) ASIG -> . igual EXP
    (75) ASIG -> .

    not             shift and go to state 637
    default         shift and go to state 639
    dospuntos       shift and go to state 640
    igual           shift and go to state 641
    ptcoma          reduce using rule 75 (ASIG -> .)

    ASIG                           shift and go to state 638

state 542

    (70) DECLARACIONES -> id constant . TIPO not null ASIG ptcoma
    (71) DECLARACIONES -> id constant . TIPO ASIG ptcoma
    (236) TIPO -> . interval cadena
    (237) TIPO -> . decimal para int coma int parc
    (238) TIPO -> . decimal para int parc
    (239) TIPO -> . decimal
    (240) TIPO -> . numeric para int coma int parc
    (241) TIPO -> . numeric para int parc
    (242) TIPO -> . numeric
    (243) TIPO -> . varchar para int parc
    (244) TIPO -> . timestamp para int parc
    (245) TIPO -> . character para int parc
    (246) TIPO -> . interval para int parc
    (247) TIPO -> . char para int parc
    (248) TIPO -> . time para int parc
    (249) TIPO -> . character varying para int parc
    (250) TIPO -> . id modulo rowtype
    (251) TIPO -> . idPunto modulo type
    (252) TIPO -> . timestamp para int parc without time zone
    (253) TIPO -> . timestamp para int parc with time zone
    (254) TIPO -> . time para int parc without time zone
    (255) TIPO -> . time para int parc with time zone
    (256) TIPO -> . interval para int parc cadena
    (257) TIPO -> . smallint
    (258) TIPO -> . integer
    (259) TIPO -> . r_int
    (260) TIPO -> . bigint
    (261) TIPO -> . real
    (262) TIPO -> . double precision
    (263) TIPO -> . money
    (264) TIPO -> . text
    (265) TIPO -> . timestamp
    (266) TIPO -> . date
    (267) TIPO -> . time
    (268) TIPO -> . interval
    (269) TIPO -> . boolean
    (270) TIPO -> . record
    (271) TIPO -> . varchar
    (272) TIPO -> . timestamp without time zone
    (273) TIPO -> . timestamp with time zone
    (274) TIPO -> . time without time zone
    (275) TIPO -> . time with time zone
    (276) TIPO -> . id

    interval        shift and go to state 241
    decimal         shift and go to state 242
    numeric         shift and go to state 243
    varchar         shift and go to state 244
    timestamp       shift and go to state 245
    character       shift and go to state 246
    char            shift and go to state 247
    time            shift and go to state 248
    id              shift and go to state 249
    idPunto         shift and go to state 250
    smallint        shift and go to state 251
    integer         shift and go to state 252
    r_int           shift and go to state 253
    bigint          shift and go to state 254
    real            shift and go to state 255
    double          shift and go to state 256
    money           shift and go to state 257
    text            shift and go to state 258
    date            shift and go to state 259
    boolean         shift and go to state 260
    record          shift and go to state 261

    TIPO                           shift and go to state 642

state 543

    (103) RAISE -> raise LEVEL FORMAT .

    ptcoma          reduce using rule 103 (RAISE -> raise LEVEL FORMAT .)


state 544

    (104) RAISE -> raise LEVEL EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    ptcoma          reduce using rule 104 (RAISE -> raise LEVEL EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    and             shift and go to state 135
    or              shift and go to state 136
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143
    between         shift and go to state 144
    is              shift and go to state 145
    isnull          shift and go to state 147
    notnull         shift and go to state 148
    as              shift and go to state 149
    cadenaString    shift and go to state 150
    cadena          shift and go to state 151
    id              shift and go to state 152
    in              shift and go to state 153
    not             shift and go to state 146
    like            shift and go to state 154


state 545

    (107) RAISE -> raise LEVEL cadena . coma id
    (337) EXP -> cadena .
    (348) EXP -> cadena . as TIPO

  ! shift/reduce conflict for as resolved as shift
    coma            shift and go to state 643
    mas             reduce using rule 337 (EXP -> cadena .)
    menos           reduce using rule 337 (EXP -> cadena .)
    multiplicacion  reduce using rule 337 (EXP -> cadena .)
    division        reduce using rule 337 (EXP -> cadena .)
    modulo          reduce using rule 337 (EXP -> cadena .)
    elevado         reduce using rule 337 (EXP -> cadena .)
    and             reduce using rule 337 (EXP -> cadena .)
    or              reduce using rule 337 (EXP -> cadena .)
    mayor           reduce using rule 337 (EXP -> cadena .)
    menor           reduce using rule 337 (EXP -> cadena .)
    mayor_igual     reduce using rule 337 (EXP -> cadena .)
    menor_igual     reduce using rule 337 (EXP -> cadena .)
    igual           reduce using rule 337 (EXP -> cadena .)
    diferente1      reduce using rule 337 (EXP -> cadena .)
    diferente2      reduce using rule 337 (EXP -> cadena .)
    between         reduce using rule 337 (EXP -> cadena .)
    is              reduce using rule 337 (EXP -> cadena .)
    isnull          reduce using rule 337 (EXP -> cadena .)
    notnull         reduce using rule 337 (EXP -> cadena .)
    cadenaString    reduce using rule 337 (EXP -> cadena .)
    cadena          reduce using rule 337 (EXP -> cadena .)
    id              reduce using rule 337 (EXP -> cadena .)
    in              reduce using rule 337 (EXP -> cadena .)
    not             reduce using rule 337 (EXP -> cadena .)
    like            reduce using rule 337 (EXP -> cadena .)
    ptcoma          reduce using rule 337 (EXP -> cadena .)
    as              shift and go to state 158

  ! as              [ reduce using rule 337 (EXP -> cadena .) ]


state 546

    (113) FORMAT -> format . para EXP coma LEXP parc

    para            shift and go to state 644


state 547

    (51) BEGINEND -> begin LISTACONTENIDO end .

    ptcoma          reduce using rule 51 (BEGINEND -> begin LISTACONTENIDO end .)


state 548

    (118) INSERT -> insert into id values para LEXP . parc
    (234) LEXP -> LEXP . coma EXP

    parc            shift and go to state 645
    coma            shift and go to state 128


state 549

    (119) INSERT -> insert into id para LEXP parc . values para LEXP parc

    values          shift and go to state 646


state 550

    (85) CASE -> case EXP LISTAWHEN ELSEF end case .

    ptcoma          reduce using rule 85 (CASE -> case EXP LISTAWHEN ELSEF end case .)


state 551

    (233) EXIST -> not exist para SELECT parc .

    ptcoma          reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    r_from          reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    coma            reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    where           reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    group           reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    having          reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    union           reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    intersect       reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    except          reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    order           reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    limit           reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    offset          reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    mas             reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    menos           reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    multiplicacion  reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    division        reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    modulo          reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    elevado         reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    and             reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    or              reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    mayor           reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    menor           reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    mayor_igual     reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    menor_igual     reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    igual           reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    diferente1      reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    diferente2      reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    between         reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    is              reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    isnull          reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    notnull         reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    as              reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    cadenaString    reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    cadena          reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    id              reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    in              reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    not             reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    like            reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    then            reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    when            reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    parc            reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    constraint      reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    unique          reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    check           reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    default         reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    null            reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    primary         reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    references      reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    asc             reduce using rule 233 (EXIST -> not exist para SELECT parc .)
    desc            reduce using rule 233 (EXIST -> not exist para SELECT parc .)


state 552

    (200) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP . HAVING COMBINING ORDER LIMIT
    (221) HAVING -> . having EXP
    (222) HAVING -> .

  ! shift/reduce conflict for having resolved as shift
    having          shift and go to state 338
    r_from          reduce using rule 222 (HAVING -> .)
    coma            reduce using rule 222 (HAVING -> .)
    where           reduce using rule 222 (HAVING -> .)
    group           reduce using rule 222 (HAVING -> .)
    union           reduce using rule 222 (HAVING -> .)
    intersect       reduce using rule 222 (HAVING -> .)
    except          reduce using rule 222 (HAVING -> .)
    order           reduce using rule 222 (HAVING -> .)
    limit           reduce using rule 222 (HAVING -> .)
    offset          reduce using rule 222 (HAVING -> .)
    ptcoma          reduce using rule 222 (HAVING -> .)
    mas             reduce using rule 222 (HAVING -> .)
    menos           reduce using rule 222 (HAVING -> .)
    multiplicacion  reduce using rule 222 (HAVING -> .)
    division        reduce using rule 222 (HAVING -> .)
    modulo          reduce using rule 222 (HAVING -> .)
    elevado         reduce using rule 222 (HAVING -> .)
    and             reduce using rule 222 (HAVING -> .)
    or              reduce using rule 222 (HAVING -> .)
    mayor           reduce using rule 222 (HAVING -> .)
    menor           reduce using rule 222 (HAVING -> .)
    mayor_igual     reduce using rule 222 (HAVING -> .)
    menor_igual     reduce using rule 222 (HAVING -> .)
    igual           reduce using rule 222 (HAVING -> .)
    diferente1      reduce using rule 222 (HAVING -> .)
    diferente2      reduce using rule 222 (HAVING -> .)
    between         reduce using rule 222 (HAVING -> .)
    is              reduce using rule 222 (HAVING -> .)
    isnull          reduce using rule 222 (HAVING -> .)
    notnull         reduce using rule 222 (HAVING -> .)
    as              reduce using rule 222 (HAVING -> .)
    cadenaString    reduce using rule 222 (HAVING -> .)
    cadena          reduce using rule 222 (HAVING -> .)
    id              reduce using rule 222 (HAVING -> .)
    in              reduce using rule 222 (HAVING -> .)
    not             reduce using rule 222 (HAVING -> .)
    like            reduce using rule 222 (HAVING -> .)
    then            reduce using rule 222 (HAVING -> .)
    when            reduce using rule 222 (HAVING -> .)
    parc            reduce using rule 222 (HAVING -> .)
    constraint      reduce using rule 222 (HAVING -> .)
    unique          reduce using rule 222 (HAVING -> .)
    check           reduce using rule 222 (HAVING -> .)
    default         reduce using rule 222 (HAVING -> .)
    null            reduce using rule 222 (HAVING -> .)
    primary         reduce using rule 222 (HAVING -> .)
    references      reduce using rule 222 (HAVING -> .)
    asc             reduce using rule 222 (HAVING -> .)
    desc            reduce using rule 222 (HAVING -> .)

  ! having          [ reduce using rule 222 (HAVING -> .) ]

    HAVING                         shift and go to state 647

state 553

    (201) SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING . COMBINING ORDER LIMIT
    (214) COMBINING -> . union EXP
    (215) COMBINING -> . union all EXP
    (216) COMBINING -> . intersect EXP
    (217) COMBINING -> . except EXP
    (218) COMBINING -> .

  ! shift/reduce conflict for union resolved as shift
  ! shift/reduce conflict for intersect resolved as shift
  ! shift/reduce conflict for except resolved as shift
    union           shift and go to state 461
    intersect       shift and go to state 462
    except          shift and go to state 463
    r_from          reduce using rule 218 (COMBINING -> .)
    coma            reduce using rule 218 (COMBINING -> .)
    where           reduce using rule 218 (COMBINING -> .)
    group           reduce using rule 218 (COMBINING -> .)
    having          reduce using rule 218 (COMBINING -> .)
    order           reduce using rule 218 (COMBINING -> .)
    limit           reduce using rule 218 (COMBINING -> .)
    offset          reduce using rule 218 (COMBINING -> .)
    ptcoma          reduce using rule 218 (COMBINING -> .)
    mas             reduce using rule 218 (COMBINING -> .)
    menos           reduce using rule 218 (COMBINING -> .)
    multiplicacion  reduce using rule 218 (COMBINING -> .)
    division        reduce using rule 218 (COMBINING -> .)
    modulo          reduce using rule 218 (COMBINING -> .)
    elevado         reduce using rule 218 (COMBINING -> .)
    and             reduce using rule 218 (COMBINING -> .)
    or              reduce using rule 218 (COMBINING -> .)
    mayor           reduce using rule 218 (COMBINING -> .)
    menor           reduce using rule 218 (COMBINING -> .)
    mayor_igual     reduce using rule 218 (COMBINING -> .)
    menor_igual     reduce using rule 218 (COMBINING -> .)
    igual           reduce using rule 218 (COMBINING -> .)
    diferente1      reduce using rule 218 (COMBINING -> .)
    diferente2      reduce using rule 218 (COMBINING -> .)
    between         reduce using rule 218 (COMBINING -> .)
    is              reduce using rule 218 (COMBINING -> .)
    isnull          reduce using rule 218 (COMBINING -> .)
    notnull         reduce using rule 218 (COMBINING -> .)
    as              reduce using rule 218 (COMBINING -> .)
    cadenaString    reduce using rule 218 (COMBINING -> .)
    cadena          reduce using rule 218 (COMBINING -> .)
    id              reduce using rule 218 (COMBINING -> .)
    in              reduce using rule 218 (COMBINING -> .)
    not             reduce using rule 218 (COMBINING -> .)
    like            reduce using rule 218 (COMBINING -> .)
    then            reduce using rule 218 (COMBINING -> .)
    when            reduce using rule 218 (COMBINING -> .)
    parc            reduce using rule 218 (COMBINING -> .)
    constraint      reduce using rule 218 (COMBINING -> .)
    unique          reduce using rule 218 (COMBINING -> .)
    check           reduce using rule 218 (COMBINING -> .)
    default         reduce using rule 218 (COMBINING -> .)
    null            reduce using rule 218 (COMBINING -> .)
    primary         reduce using rule 218 (COMBINING -> .)
    references      reduce using rule 218 (COMBINING -> .)
    asc             reduce using rule 218 (COMBINING -> .)
    desc            reduce using rule 218 (COMBINING -> .)

  ! union           [ reduce using rule 218 (COMBINING -> .) ]
  ! intersect       [ reduce using rule 218 (COMBINING -> .) ]
  ! except          [ reduce using rule 218 (COMBINING -> .) ]

    COMBINING                      shift and go to state 648

state 554

    (202) SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER . LIMIT
    (203) LIMIT -> . limit int
    (204) LIMIT -> . limit all
    (205) LIMIT -> . offset int
    (206) LIMIT -> . limit int offset int
    (207) LIMIT -> . offset int limit int
    (208) LIMIT -> . limit all offset int
    (209) LIMIT -> . offset int limit all
    (210) LIMIT -> .

  ! shift/reduce conflict for limit resolved as shift
  ! shift/reduce conflict for offset resolved as shift
    limit           shift and go to state 650
    offset          shift and go to state 651
    ptcoma          reduce using rule 210 (LIMIT -> .)
    r_from          reduce using rule 210 (LIMIT -> .)
    coma            reduce using rule 210 (LIMIT -> .)
    where           reduce using rule 210 (LIMIT -> .)
    group           reduce using rule 210 (LIMIT -> .)
    having          reduce using rule 210 (LIMIT -> .)
    union           reduce using rule 210 (LIMIT -> .)
    intersect       reduce using rule 210 (LIMIT -> .)
    except          reduce using rule 210 (LIMIT -> .)
    order           reduce using rule 210 (LIMIT -> .)
    mas             reduce using rule 210 (LIMIT -> .)
    menos           reduce using rule 210 (LIMIT -> .)
    multiplicacion  reduce using rule 210 (LIMIT -> .)
    division        reduce using rule 210 (LIMIT -> .)
    modulo          reduce using rule 210 (LIMIT -> .)
    elevado         reduce using rule 210 (LIMIT -> .)
    and             reduce using rule 210 (LIMIT -> .)
    or              reduce using rule 210 (LIMIT -> .)
    mayor           reduce using rule 210 (LIMIT -> .)
    menor           reduce using rule 210 (LIMIT -> .)
    mayor_igual     reduce using rule 210 (LIMIT -> .)
    menor_igual     reduce using rule 210 (LIMIT -> .)
    igual           reduce using rule 210 (LIMIT -> .)
    diferente1      reduce using rule 210 (LIMIT -> .)
    diferente2      reduce using rule 210 (LIMIT -> .)
    between         reduce using rule 210 (LIMIT -> .)
    is              reduce using rule 210 (LIMIT -> .)
    isnull          reduce using rule 210 (LIMIT -> .)
    notnull         reduce using rule 210 (LIMIT -> .)
    as              reduce using rule 210 (LIMIT -> .)
    cadenaString    reduce using rule 210 (LIMIT -> .)
    cadena          reduce using rule 210 (LIMIT -> .)
    id              reduce using rule 210 (LIMIT -> .)
    in              reduce using rule 210 (LIMIT -> .)
    not             reduce using rule 210 (LIMIT -> .)
    like            reduce using rule 210 (LIMIT -> .)
    then            reduce using rule 210 (LIMIT -> .)
    when            reduce using rule 210 (LIMIT -> .)
    parc            reduce using rule 210 (LIMIT -> .)
    constraint      reduce using rule 210 (LIMIT -> .)
    unique          reduce using rule 210 (LIMIT -> .)
    check           reduce using rule 210 (LIMIT -> .)
    default         reduce using rule 210 (LIMIT -> .)
    null            reduce using rule 210 (LIMIT -> .)
    primary         reduce using rule 210 (LIMIT -> .)
    references      reduce using rule 210 (LIMIT -> .)
    asc             reduce using rule 210 (LIMIT -> .)
    desc            reduce using rule 210 (LIMIT -> .)

  ! limit           [ reduce using rule 210 (LIMIT -> .) ]
  ! offset          [ reduce using rule 210 (LIMIT -> .) ]

    LIMIT                          shift and go to state 649

state 555

    (223) ORDER -> order . by LEXP ORD
    (224) ORDER -> order . by LEXP

    by              shift and go to state 652


state 556

    (214) COMBINING -> union EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    r_from          reduce using rule 214 (COMBINING -> union EXP .)
    coma            reduce using rule 214 (COMBINING -> union EXP .)
    where           reduce using rule 214 (COMBINING -> union EXP .)
    group           reduce using rule 214 (COMBINING -> union EXP .)
    having          reduce using rule 214 (COMBINING -> union EXP .)
    union           reduce using rule 214 (COMBINING -> union EXP .)
    intersect       reduce using rule 214 (COMBINING -> union EXP .)
    except          reduce using rule 214 (COMBINING -> union EXP .)
    order           reduce using rule 214 (COMBINING -> union EXP .)
    limit           reduce using rule 214 (COMBINING -> union EXP .)
    offset          reduce using rule 214 (COMBINING -> union EXP .)
    ptcoma          reduce using rule 214 (COMBINING -> union EXP .)
    then            reduce using rule 214 (COMBINING -> union EXP .)
    when            reduce using rule 214 (COMBINING -> union EXP .)
    parc            reduce using rule 214 (COMBINING -> union EXP .)
    constraint      reduce using rule 214 (COMBINING -> union EXP .)
    unique          reduce using rule 214 (COMBINING -> union EXP .)
    check           reduce using rule 214 (COMBINING -> union EXP .)
    default         reduce using rule 214 (COMBINING -> union EXP .)
    null            reduce using rule 214 (COMBINING -> union EXP .)
    primary         reduce using rule 214 (COMBINING -> union EXP .)
    references      reduce using rule 214 (COMBINING -> union EXP .)
    asc             reduce using rule 214 (COMBINING -> union EXP .)
    desc            reduce using rule 214 (COMBINING -> union EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    and             shift and go to state 135
    or              shift and go to state 136
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143
    between         shift and go to state 144
    is              shift and go to state 145
    isnull          shift and go to state 147
    notnull         shift and go to state 148
    as              shift and go to state 149
    cadenaString    shift and go to state 150
    cadena          shift and go to state 151
    id              shift and go to state 152
    in              shift and go to state 153
    not             shift and go to state 146
    like            shift and go to state 154

  ! mas             [ reduce using rule 214 (COMBINING -> union EXP .) ]
  ! menos           [ reduce using rule 214 (COMBINING -> union EXP .) ]
  ! multiplicacion  [ reduce using rule 214 (COMBINING -> union EXP .) ]
  ! division        [ reduce using rule 214 (COMBINING -> union EXP .) ]
  ! modulo          [ reduce using rule 214 (COMBINING -> union EXP .) ]
  ! elevado         [ reduce using rule 214 (COMBINING -> union EXP .) ]
  ! and             [ reduce using rule 214 (COMBINING -> union EXP .) ]
  ! or              [ reduce using rule 214 (COMBINING -> union EXP .) ]
  ! mayor           [ reduce using rule 214 (COMBINING -> union EXP .) ]
  ! menor           [ reduce using rule 214 (COMBINING -> union EXP .) ]
  ! mayor_igual     [ reduce using rule 214 (COMBINING -> union EXP .) ]
  ! menor_igual     [ reduce using rule 214 (COMBINING -> union EXP .) ]
  ! igual           [ reduce using rule 214 (COMBINING -> union EXP .) ]
  ! diferente1      [ reduce using rule 214 (COMBINING -> union EXP .) ]
  ! diferente2      [ reduce using rule 214 (COMBINING -> union EXP .) ]
  ! between         [ reduce using rule 214 (COMBINING -> union EXP .) ]
  ! is              [ reduce using rule 214 (COMBINING -> union EXP .) ]
  ! isnull          [ reduce using rule 214 (COMBINING -> union EXP .) ]
  ! notnull         [ reduce using rule 214 (COMBINING -> union EXP .) ]
  ! as              [ reduce using rule 214 (COMBINING -> union EXP .) ]
  ! cadenaString    [ reduce using rule 214 (COMBINING -> union EXP .) ]
  ! cadena          [ reduce using rule 214 (COMBINING -> union EXP .) ]
  ! id              [ reduce using rule 214 (COMBINING -> union EXP .) ]
  ! in              [ reduce using rule 214 (COMBINING -> union EXP .) ]
  ! not             [ reduce using rule 214 (COMBINING -> union EXP .) ]
  ! like            [ reduce using rule 214 (COMBINING -> union EXP .) ]


state 557

    (215) COMBINING -> union all . EXP
    (332) EXP -> all . para LEXP parc
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    para            shift and go to state 654
    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 653
    SELECT                         shift and go to state 74

state 558

    (216) COMBINING -> intersect EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    r_from          reduce using rule 216 (COMBINING -> intersect EXP .)
    coma            reduce using rule 216 (COMBINING -> intersect EXP .)
    where           reduce using rule 216 (COMBINING -> intersect EXP .)
    group           reduce using rule 216 (COMBINING -> intersect EXP .)
    having          reduce using rule 216 (COMBINING -> intersect EXP .)
    union           reduce using rule 216 (COMBINING -> intersect EXP .)
    intersect       reduce using rule 216 (COMBINING -> intersect EXP .)
    except          reduce using rule 216 (COMBINING -> intersect EXP .)
    order           reduce using rule 216 (COMBINING -> intersect EXP .)
    limit           reduce using rule 216 (COMBINING -> intersect EXP .)
    offset          reduce using rule 216 (COMBINING -> intersect EXP .)
    ptcoma          reduce using rule 216 (COMBINING -> intersect EXP .)
    then            reduce using rule 216 (COMBINING -> intersect EXP .)
    when            reduce using rule 216 (COMBINING -> intersect EXP .)
    parc            reduce using rule 216 (COMBINING -> intersect EXP .)
    constraint      reduce using rule 216 (COMBINING -> intersect EXP .)
    unique          reduce using rule 216 (COMBINING -> intersect EXP .)
    check           reduce using rule 216 (COMBINING -> intersect EXP .)
    default         reduce using rule 216 (COMBINING -> intersect EXP .)
    null            reduce using rule 216 (COMBINING -> intersect EXP .)
    primary         reduce using rule 216 (COMBINING -> intersect EXP .)
    references      reduce using rule 216 (COMBINING -> intersect EXP .)
    asc             reduce using rule 216 (COMBINING -> intersect EXP .)
    desc            reduce using rule 216 (COMBINING -> intersect EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    and             shift and go to state 135
    or              shift and go to state 136
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143
    between         shift and go to state 144
    is              shift and go to state 145
    isnull          shift and go to state 147
    notnull         shift and go to state 148
    as              shift and go to state 149
    cadenaString    shift and go to state 150
    cadena          shift and go to state 151
    id              shift and go to state 152
    in              shift and go to state 153
    not             shift and go to state 146
    like            shift and go to state 154

  ! mas             [ reduce using rule 216 (COMBINING -> intersect EXP .) ]
  ! menos           [ reduce using rule 216 (COMBINING -> intersect EXP .) ]
  ! multiplicacion  [ reduce using rule 216 (COMBINING -> intersect EXP .) ]
  ! division        [ reduce using rule 216 (COMBINING -> intersect EXP .) ]
  ! modulo          [ reduce using rule 216 (COMBINING -> intersect EXP .) ]
  ! elevado         [ reduce using rule 216 (COMBINING -> intersect EXP .) ]
  ! and             [ reduce using rule 216 (COMBINING -> intersect EXP .) ]
  ! or              [ reduce using rule 216 (COMBINING -> intersect EXP .) ]
  ! mayor           [ reduce using rule 216 (COMBINING -> intersect EXP .) ]
  ! menor           [ reduce using rule 216 (COMBINING -> intersect EXP .) ]
  ! mayor_igual     [ reduce using rule 216 (COMBINING -> intersect EXP .) ]
  ! menor_igual     [ reduce using rule 216 (COMBINING -> intersect EXP .) ]
  ! igual           [ reduce using rule 216 (COMBINING -> intersect EXP .) ]
  ! diferente1      [ reduce using rule 216 (COMBINING -> intersect EXP .) ]
  ! diferente2      [ reduce using rule 216 (COMBINING -> intersect EXP .) ]
  ! between         [ reduce using rule 216 (COMBINING -> intersect EXP .) ]
  ! is              [ reduce using rule 216 (COMBINING -> intersect EXP .) ]
  ! isnull          [ reduce using rule 216 (COMBINING -> intersect EXP .) ]
  ! notnull         [ reduce using rule 216 (COMBINING -> intersect EXP .) ]
  ! as              [ reduce using rule 216 (COMBINING -> intersect EXP .) ]
  ! cadenaString    [ reduce using rule 216 (COMBINING -> intersect EXP .) ]
  ! cadena          [ reduce using rule 216 (COMBINING -> intersect EXP .) ]
  ! id              [ reduce using rule 216 (COMBINING -> intersect EXP .) ]
  ! in              [ reduce using rule 216 (COMBINING -> intersect EXP .) ]
  ! not             [ reduce using rule 216 (COMBINING -> intersect EXP .) ]
  ! like            [ reduce using rule 216 (COMBINING -> intersect EXP .) ]


state 559

    (217) COMBINING -> except EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    r_from          reduce using rule 217 (COMBINING -> except EXP .)
    coma            reduce using rule 217 (COMBINING -> except EXP .)
    where           reduce using rule 217 (COMBINING -> except EXP .)
    group           reduce using rule 217 (COMBINING -> except EXP .)
    having          reduce using rule 217 (COMBINING -> except EXP .)
    union           reduce using rule 217 (COMBINING -> except EXP .)
    intersect       reduce using rule 217 (COMBINING -> except EXP .)
    except          reduce using rule 217 (COMBINING -> except EXP .)
    order           reduce using rule 217 (COMBINING -> except EXP .)
    limit           reduce using rule 217 (COMBINING -> except EXP .)
    offset          reduce using rule 217 (COMBINING -> except EXP .)
    ptcoma          reduce using rule 217 (COMBINING -> except EXP .)
    then            reduce using rule 217 (COMBINING -> except EXP .)
    when            reduce using rule 217 (COMBINING -> except EXP .)
    parc            reduce using rule 217 (COMBINING -> except EXP .)
    constraint      reduce using rule 217 (COMBINING -> except EXP .)
    unique          reduce using rule 217 (COMBINING -> except EXP .)
    check           reduce using rule 217 (COMBINING -> except EXP .)
    default         reduce using rule 217 (COMBINING -> except EXP .)
    null            reduce using rule 217 (COMBINING -> except EXP .)
    primary         reduce using rule 217 (COMBINING -> except EXP .)
    references      reduce using rule 217 (COMBINING -> except EXP .)
    asc             reduce using rule 217 (COMBINING -> except EXP .)
    desc            reduce using rule 217 (COMBINING -> except EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    and             shift and go to state 135
    or              shift and go to state 136
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143
    between         shift and go to state 144
    is              shift and go to state 145
    isnull          shift and go to state 147
    notnull         shift and go to state 148
    as              shift and go to state 149
    cadenaString    shift and go to state 150
    cadena          shift and go to state 151
    id              shift and go to state 152
    in              shift and go to state 153
    not             shift and go to state 146
    like            shift and go to state 154

  ! mas             [ reduce using rule 217 (COMBINING -> except EXP .) ]
  ! menos           [ reduce using rule 217 (COMBINING -> except EXP .) ]
  ! multiplicacion  [ reduce using rule 217 (COMBINING -> except EXP .) ]
  ! division        [ reduce using rule 217 (COMBINING -> except EXP .) ]
  ! modulo          [ reduce using rule 217 (COMBINING -> except EXP .) ]
  ! elevado         [ reduce using rule 217 (COMBINING -> except EXP .) ]
  ! and             [ reduce using rule 217 (COMBINING -> except EXP .) ]
  ! or              [ reduce using rule 217 (COMBINING -> except EXP .) ]
  ! mayor           [ reduce using rule 217 (COMBINING -> except EXP .) ]
  ! menor           [ reduce using rule 217 (COMBINING -> except EXP .) ]
  ! mayor_igual     [ reduce using rule 217 (COMBINING -> except EXP .) ]
  ! menor_igual     [ reduce using rule 217 (COMBINING -> except EXP .) ]
  ! igual           [ reduce using rule 217 (COMBINING -> except EXP .) ]
  ! diferente1      [ reduce using rule 217 (COMBINING -> except EXP .) ]
  ! diferente2      [ reduce using rule 217 (COMBINING -> except EXP .) ]
  ! between         [ reduce using rule 217 (COMBINING -> except EXP .) ]
  ! is              [ reduce using rule 217 (COMBINING -> except EXP .) ]
  ! isnull          [ reduce using rule 217 (COMBINING -> except EXP .) ]
  ! notnull         [ reduce using rule 217 (COMBINING -> except EXP .) ]
  ! as              [ reduce using rule 217 (COMBINING -> except EXP .) ]
  ! cadenaString    [ reduce using rule 217 (COMBINING -> except EXP .) ]
  ! cadena          [ reduce using rule 217 (COMBINING -> except EXP .) ]
  ! id              [ reduce using rule 217 (COMBINING -> except EXP .) ]
  ! in              [ reduce using rule 217 (COMBINING -> except EXP .) ]
  ! not             [ reduce using rule 217 (COMBINING -> except EXP .) ]
  ! like            [ reduce using rule 217 (COMBINING -> except EXP .) ]


state 560

    (324) EXP -> EXP is not distinct r_from EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    r_from          reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    coma            reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    where           reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    group           reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    having          reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    union           reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    intersect       reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    except          reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    order           reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    limit           reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    offset          reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    ptcoma          reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    and             reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    or              reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    between         reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    is              reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    isnull          reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    notnull         reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    as              reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    cadenaString    reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    cadena          reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    id              reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    in              reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    not             reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    like            reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    then            reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    when            reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    parc            reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    constraint      reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    unique          reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    check           reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    default         reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    null            reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    primary         reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    references      reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    asc             reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    desc            reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143

  ! mas             [ reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .) ]
  ! menos           [ reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .) ]
  ! multiplicacion  [ reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .) ]
  ! division        [ reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .) ]
  ! modulo          [ reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .) ]
  ! elevado         [ reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .) ]
  ! mayor           [ reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .) ]
  ! menor           [ reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .) ]
  ! mayor_igual     [ reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .) ]
  ! menor_igual     [ reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .) ]
  ! igual           [ reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .) ]
  ! diferente1      [ reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .) ]
  ! diferente2      [ reduce using rule 324 (EXP -> EXP is not distinct r_from EXP .) ]
  ! and             [ shift and go to state 135 ]
  ! or              [ shift and go to state 136 ]
  ! between         [ shift and go to state 144 ]
  ! is              [ shift and go to state 145 ]
  ! isnull          [ shift and go to state 147 ]
  ! notnull         [ shift and go to state 148 ]
  ! as              [ shift and go to state 149 ]
  ! cadenaString    [ shift and go to state 150 ]
  ! cadena          [ shift and go to state 151 ]
  ! id              [ shift and go to state 152 ]
  ! in              [ shift and go to state 153 ]
  ! not             [ shift and go to state 146 ]
  ! like            [ shift and go to state 154 ]


state 561

    (319) EXP -> EXP not in para EXP parc .

    r_from          reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    coma            reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    where           reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    group           reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    having          reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    union           reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    intersect       reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    except          reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    order           reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    limit           reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    offset          reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    ptcoma          reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    mas             reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    menos           reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    multiplicacion  reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    division        reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    modulo          reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    elevado         reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    and             reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    or              reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    mayor           reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    menor           reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    mayor_igual     reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    menor_igual     reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    igual           reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    diferente1      reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    diferente2      reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    between         reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    is              reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    isnull          reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    notnull         reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    as              reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    cadenaString    reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    cadena          reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    id              reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    in              reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    not             reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    like            reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    then            reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    when            reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    parc            reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    constraint      reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    unique          reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    check           reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    default         reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    null            reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    primary         reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    references      reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    asc             reduce using rule 319 (EXP -> EXP not in para EXP parc .)
    desc            reduce using rule 319 (EXP -> EXP not in para EXP parc .)


state 562

    (246) TIPO -> interval para int parc .
    (256) TIPO -> interval para int parc . cadena

  ! shift/reduce conflict for cadena resolved as shift
    r_from          reduce using rule 246 (TIPO -> interval para int parc .)
    coma            reduce using rule 246 (TIPO -> interval para int parc .)
    where           reduce using rule 246 (TIPO -> interval para int parc .)
    group           reduce using rule 246 (TIPO -> interval para int parc .)
    having          reduce using rule 246 (TIPO -> interval para int parc .)
    union           reduce using rule 246 (TIPO -> interval para int parc .)
    intersect       reduce using rule 246 (TIPO -> interval para int parc .)
    except          reduce using rule 246 (TIPO -> interval para int parc .)
    order           reduce using rule 246 (TIPO -> interval para int parc .)
    limit           reduce using rule 246 (TIPO -> interval para int parc .)
    offset          reduce using rule 246 (TIPO -> interval para int parc .)
    ptcoma          reduce using rule 246 (TIPO -> interval para int parc .)
    mas             reduce using rule 246 (TIPO -> interval para int parc .)
    menos           reduce using rule 246 (TIPO -> interval para int parc .)
    multiplicacion  reduce using rule 246 (TIPO -> interval para int parc .)
    division        reduce using rule 246 (TIPO -> interval para int parc .)
    modulo          reduce using rule 246 (TIPO -> interval para int parc .)
    elevado         reduce using rule 246 (TIPO -> interval para int parc .)
    and             reduce using rule 246 (TIPO -> interval para int parc .)
    or              reduce using rule 246 (TIPO -> interval para int parc .)
    mayor           reduce using rule 246 (TIPO -> interval para int parc .)
    menor           reduce using rule 246 (TIPO -> interval para int parc .)
    mayor_igual     reduce using rule 246 (TIPO -> interval para int parc .)
    menor_igual     reduce using rule 246 (TIPO -> interval para int parc .)
    igual           reduce using rule 246 (TIPO -> interval para int parc .)
    diferente1      reduce using rule 246 (TIPO -> interval para int parc .)
    diferente2      reduce using rule 246 (TIPO -> interval para int parc .)
    between         reduce using rule 246 (TIPO -> interval para int parc .)
    is              reduce using rule 246 (TIPO -> interval para int parc .)
    isnull          reduce using rule 246 (TIPO -> interval para int parc .)
    notnull         reduce using rule 246 (TIPO -> interval para int parc .)
    as              reduce using rule 246 (TIPO -> interval para int parc .)
    cadenaString    reduce using rule 246 (TIPO -> interval para int parc .)
    id              reduce using rule 246 (TIPO -> interval para int parc .)
    in              reduce using rule 246 (TIPO -> interval para int parc .)
    not             reduce using rule 246 (TIPO -> interval para int parc .)
    like            reduce using rule 246 (TIPO -> interval para int parc .)
    then            reduce using rule 246 (TIPO -> interval para int parc .)
    when            reduce using rule 246 (TIPO -> interval para int parc .)
    parc            reduce using rule 246 (TIPO -> interval para int parc .)
    constraint      reduce using rule 246 (TIPO -> interval para int parc .)
    unique          reduce using rule 246 (TIPO -> interval para int parc .)
    check           reduce using rule 246 (TIPO -> interval para int parc .)
    default         reduce using rule 246 (TIPO -> interval para int parc .)
    null            reduce using rule 246 (TIPO -> interval para int parc .)
    primary         reduce using rule 246 (TIPO -> interval para int parc .)
    references      reduce using rule 246 (TIPO -> interval para int parc .)
    asc             reduce using rule 246 (TIPO -> interval para int parc .)
    desc            reduce using rule 246 (TIPO -> interval para int parc .)
    dospuntos       reduce using rule 246 (TIPO -> interval para int parc .)
    language        reduce using rule 246 (TIPO -> interval para int parc .)
    do              reduce using rule 246 (TIPO -> interval para int parc .)
    cadena          shift and go to state 655

  ! cadena          [ reduce using rule 246 (TIPO -> interval para int parc .) ]


state 563

    (237) TIPO -> decimal para int coma . int parc

    int             shift and go to state 656


state 564

    (238) TIPO -> decimal para int parc .

    r_from          reduce using rule 238 (TIPO -> decimal para int parc .)
    coma            reduce using rule 238 (TIPO -> decimal para int parc .)
    where           reduce using rule 238 (TIPO -> decimal para int parc .)
    group           reduce using rule 238 (TIPO -> decimal para int parc .)
    having          reduce using rule 238 (TIPO -> decimal para int parc .)
    union           reduce using rule 238 (TIPO -> decimal para int parc .)
    intersect       reduce using rule 238 (TIPO -> decimal para int parc .)
    except          reduce using rule 238 (TIPO -> decimal para int parc .)
    order           reduce using rule 238 (TIPO -> decimal para int parc .)
    limit           reduce using rule 238 (TIPO -> decimal para int parc .)
    offset          reduce using rule 238 (TIPO -> decimal para int parc .)
    ptcoma          reduce using rule 238 (TIPO -> decimal para int parc .)
    mas             reduce using rule 238 (TIPO -> decimal para int parc .)
    menos           reduce using rule 238 (TIPO -> decimal para int parc .)
    multiplicacion  reduce using rule 238 (TIPO -> decimal para int parc .)
    division        reduce using rule 238 (TIPO -> decimal para int parc .)
    modulo          reduce using rule 238 (TIPO -> decimal para int parc .)
    elevado         reduce using rule 238 (TIPO -> decimal para int parc .)
    and             reduce using rule 238 (TIPO -> decimal para int parc .)
    or              reduce using rule 238 (TIPO -> decimal para int parc .)
    mayor           reduce using rule 238 (TIPO -> decimal para int parc .)
    menor           reduce using rule 238 (TIPO -> decimal para int parc .)
    mayor_igual     reduce using rule 238 (TIPO -> decimal para int parc .)
    menor_igual     reduce using rule 238 (TIPO -> decimal para int parc .)
    igual           reduce using rule 238 (TIPO -> decimal para int parc .)
    diferente1      reduce using rule 238 (TIPO -> decimal para int parc .)
    diferente2      reduce using rule 238 (TIPO -> decimal para int parc .)
    between         reduce using rule 238 (TIPO -> decimal para int parc .)
    is              reduce using rule 238 (TIPO -> decimal para int parc .)
    isnull          reduce using rule 238 (TIPO -> decimal para int parc .)
    notnull         reduce using rule 238 (TIPO -> decimal para int parc .)
    as              reduce using rule 238 (TIPO -> decimal para int parc .)
    cadenaString    reduce using rule 238 (TIPO -> decimal para int parc .)
    cadena          reduce using rule 238 (TIPO -> decimal para int parc .)
    id              reduce using rule 238 (TIPO -> decimal para int parc .)
    in              reduce using rule 238 (TIPO -> decimal para int parc .)
    not             reduce using rule 238 (TIPO -> decimal para int parc .)
    like            reduce using rule 238 (TIPO -> decimal para int parc .)
    then            reduce using rule 238 (TIPO -> decimal para int parc .)
    when            reduce using rule 238 (TIPO -> decimal para int parc .)
    parc            reduce using rule 238 (TIPO -> decimal para int parc .)
    constraint      reduce using rule 238 (TIPO -> decimal para int parc .)
    unique          reduce using rule 238 (TIPO -> decimal para int parc .)
    check           reduce using rule 238 (TIPO -> decimal para int parc .)
    default         reduce using rule 238 (TIPO -> decimal para int parc .)
    null            reduce using rule 238 (TIPO -> decimal para int parc .)
    primary         reduce using rule 238 (TIPO -> decimal para int parc .)
    references      reduce using rule 238 (TIPO -> decimal para int parc .)
    asc             reduce using rule 238 (TIPO -> decimal para int parc .)
    desc            reduce using rule 238 (TIPO -> decimal para int parc .)
    dospuntos       reduce using rule 238 (TIPO -> decimal para int parc .)
    language        reduce using rule 238 (TIPO -> decimal para int parc .)
    do              reduce using rule 238 (TIPO -> decimal para int parc .)


state 565

    (240) TIPO -> numeric para int coma . int parc

    int             shift and go to state 657


state 566

    (241) TIPO -> numeric para int parc .

    r_from          reduce using rule 241 (TIPO -> numeric para int parc .)
    coma            reduce using rule 241 (TIPO -> numeric para int parc .)
    where           reduce using rule 241 (TIPO -> numeric para int parc .)
    group           reduce using rule 241 (TIPO -> numeric para int parc .)
    having          reduce using rule 241 (TIPO -> numeric para int parc .)
    union           reduce using rule 241 (TIPO -> numeric para int parc .)
    intersect       reduce using rule 241 (TIPO -> numeric para int parc .)
    except          reduce using rule 241 (TIPO -> numeric para int parc .)
    order           reduce using rule 241 (TIPO -> numeric para int parc .)
    limit           reduce using rule 241 (TIPO -> numeric para int parc .)
    offset          reduce using rule 241 (TIPO -> numeric para int parc .)
    ptcoma          reduce using rule 241 (TIPO -> numeric para int parc .)
    mas             reduce using rule 241 (TIPO -> numeric para int parc .)
    menos           reduce using rule 241 (TIPO -> numeric para int parc .)
    multiplicacion  reduce using rule 241 (TIPO -> numeric para int parc .)
    division        reduce using rule 241 (TIPO -> numeric para int parc .)
    modulo          reduce using rule 241 (TIPO -> numeric para int parc .)
    elevado         reduce using rule 241 (TIPO -> numeric para int parc .)
    and             reduce using rule 241 (TIPO -> numeric para int parc .)
    or              reduce using rule 241 (TIPO -> numeric para int parc .)
    mayor           reduce using rule 241 (TIPO -> numeric para int parc .)
    menor           reduce using rule 241 (TIPO -> numeric para int parc .)
    mayor_igual     reduce using rule 241 (TIPO -> numeric para int parc .)
    menor_igual     reduce using rule 241 (TIPO -> numeric para int parc .)
    igual           reduce using rule 241 (TIPO -> numeric para int parc .)
    diferente1      reduce using rule 241 (TIPO -> numeric para int parc .)
    diferente2      reduce using rule 241 (TIPO -> numeric para int parc .)
    between         reduce using rule 241 (TIPO -> numeric para int parc .)
    is              reduce using rule 241 (TIPO -> numeric para int parc .)
    isnull          reduce using rule 241 (TIPO -> numeric para int parc .)
    notnull         reduce using rule 241 (TIPO -> numeric para int parc .)
    as              reduce using rule 241 (TIPO -> numeric para int parc .)
    cadenaString    reduce using rule 241 (TIPO -> numeric para int parc .)
    cadena          reduce using rule 241 (TIPO -> numeric para int parc .)
    id              reduce using rule 241 (TIPO -> numeric para int parc .)
    in              reduce using rule 241 (TIPO -> numeric para int parc .)
    not             reduce using rule 241 (TIPO -> numeric para int parc .)
    like            reduce using rule 241 (TIPO -> numeric para int parc .)
    then            reduce using rule 241 (TIPO -> numeric para int parc .)
    when            reduce using rule 241 (TIPO -> numeric para int parc .)
    parc            reduce using rule 241 (TIPO -> numeric para int parc .)
    constraint      reduce using rule 241 (TIPO -> numeric para int parc .)
    unique          reduce using rule 241 (TIPO -> numeric para int parc .)
    check           reduce using rule 241 (TIPO -> numeric para int parc .)
    default         reduce using rule 241 (TIPO -> numeric para int parc .)
    null            reduce using rule 241 (TIPO -> numeric para int parc .)
    primary         reduce using rule 241 (TIPO -> numeric para int parc .)
    references      reduce using rule 241 (TIPO -> numeric para int parc .)
    asc             reduce using rule 241 (TIPO -> numeric para int parc .)
    desc            reduce using rule 241 (TIPO -> numeric para int parc .)
    dospuntos       reduce using rule 241 (TIPO -> numeric para int parc .)
    language        reduce using rule 241 (TIPO -> numeric para int parc .)
    do              reduce using rule 241 (TIPO -> numeric para int parc .)


state 567

    (243) TIPO -> varchar para int parc .

    r_from          reduce using rule 243 (TIPO -> varchar para int parc .)
    coma            reduce using rule 243 (TIPO -> varchar para int parc .)
    where           reduce using rule 243 (TIPO -> varchar para int parc .)
    group           reduce using rule 243 (TIPO -> varchar para int parc .)
    having          reduce using rule 243 (TIPO -> varchar para int parc .)
    union           reduce using rule 243 (TIPO -> varchar para int parc .)
    intersect       reduce using rule 243 (TIPO -> varchar para int parc .)
    except          reduce using rule 243 (TIPO -> varchar para int parc .)
    order           reduce using rule 243 (TIPO -> varchar para int parc .)
    limit           reduce using rule 243 (TIPO -> varchar para int parc .)
    offset          reduce using rule 243 (TIPO -> varchar para int parc .)
    ptcoma          reduce using rule 243 (TIPO -> varchar para int parc .)
    mas             reduce using rule 243 (TIPO -> varchar para int parc .)
    menos           reduce using rule 243 (TIPO -> varchar para int parc .)
    multiplicacion  reduce using rule 243 (TIPO -> varchar para int parc .)
    division        reduce using rule 243 (TIPO -> varchar para int parc .)
    modulo          reduce using rule 243 (TIPO -> varchar para int parc .)
    elevado         reduce using rule 243 (TIPO -> varchar para int parc .)
    and             reduce using rule 243 (TIPO -> varchar para int parc .)
    or              reduce using rule 243 (TIPO -> varchar para int parc .)
    mayor           reduce using rule 243 (TIPO -> varchar para int parc .)
    menor           reduce using rule 243 (TIPO -> varchar para int parc .)
    mayor_igual     reduce using rule 243 (TIPO -> varchar para int parc .)
    menor_igual     reduce using rule 243 (TIPO -> varchar para int parc .)
    igual           reduce using rule 243 (TIPO -> varchar para int parc .)
    diferente1      reduce using rule 243 (TIPO -> varchar para int parc .)
    diferente2      reduce using rule 243 (TIPO -> varchar para int parc .)
    between         reduce using rule 243 (TIPO -> varchar para int parc .)
    is              reduce using rule 243 (TIPO -> varchar para int parc .)
    isnull          reduce using rule 243 (TIPO -> varchar para int parc .)
    notnull         reduce using rule 243 (TIPO -> varchar para int parc .)
    as              reduce using rule 243 (TIPO -> varchar para int parc .)
    cadenaString    reduce using rule 243 (TIPO -> varchar para int parc .)
    cadena          reduce using rule 243 (TIPO -> varchar para int parc .)
    id              reduce using rule 243 (TIPO -> varchar para int parc .)
    in              reduce using rule 243 (TIPO -> varchar para int parc .)
    not             reduce using rule 243 (TIPO -> varchar para int parc .)
    like            reduce using rule 243 (TIPO -> varchar para int parc .)
    then            reduce using rule 243 (TIPO -> varchar para int parc .)
    when            reduce using rule 243 (TIPO -> varchar para int parc .)
    parc            reduce using rule 243 (TIPO -> varchar para int parc .)
    constraint      reduce using rule 243 (TIPO -> varchar para int parc .)
    unique          reduce using rule 243 (TIPO -> varchar para int parc .)
    check           reduce using rule 243 (TIPO -> varchar para int parc .)
    default         reduce using rule 243 (TIPO -> varchar para int parc .)
    null            reduce using rule 243 (TIPO -> varchar para int parc .)
    primary         reduce using rule 243 (TIPO -> varchar para int parc .)
    references      reduce using rule 243 (TIPO -> varchar para int parc .)
    asc             reduce using rule 243 (TIPO -> varchar para int parc .)
    desc            reduce using rule 243 (TIPO -> varchar para int parc .)
    dospuntos       reduce using rule 243 (TIPO -> varchar para int parc .)
    language        reduce using rule 243 (TIPO -> varchar para int parc .)
    do              reduce using rule 243 (TIPO -> varchar para int parc .)


state 568

    (244) TIPO -> timestamp para int parc .
    (252) TIPO -> timestamp para int parc . without time zone
    (253) TIPO -> timestamp para int parc . with time zone

    r_from          reduce using rule 244 (TIPO -> timestamp para int parc .)
    coma            reduce using rule 244 (TIPO -> timestamp para int parc .)
    where           reduce using rule 244 (TIPO -> timestamp para int parc .)
    group           reduce using rule 244 (TIPO -> timestamp para int parc .)
    having          reduce using rule 244 (TIPO -> timestamp para int parc .)
    union           reduce using rule 244 (TIPO -> timestamp para int parc .)
    intersect       reduce using rule 244 (TIPO -> timestamp para int parc .)
    except          reduce using rule 244 (TIPO -> timestamp para int parc .)
    order           reduce using rule 244 (TIPO -> timestamp para int parc .)
    limit           reduce using rule 244 (TIPO -> timestamp para int parc .)
    offset          reduce using rule 244 (TIPO -> timestamp para int parc .)
    ptcoma          reduce using rule 244 (TIPO -> timestamp para int parc .)
    mas             reduce using rule 244 (TIPO -> timestamp para int parc .)
    menos           reduce using rule 244 (TIPO -> timestamp para int parc .)
    multiplicacion  reduce using rule 244 (TIPO -> timestamp para int parc .)
    division        reduce using rule 244 (TIPO -> timestamp para int parc .)
    modulo          reduce using rule 244 (TIPO -> timestamp para int parc .)
    elevado         reduce using rule 244 (TIPO -> timestamp para int parc .)
    and             reduce using rule 244 (TIPO -> timestamp para int parc .)
    or              reduce using rule 244 (TIPO -> timestamp para int parc .)
    mayor           reduce using rule 244 (TIPO -> timestamp para int parc .)
    menor           reduce using rule 244 (TIPO -> timestamp para int parc .)
    mayor_igual     reduce using rule 244 (TIPO -> timestamp para int parc .)
    menor_igual     reduce using rule 244 (TIPO -> timestamp para int parc .)
    igual           reduce using rule 244 (TIPO -> timestamp para int parc .)
    diferente1      reduce using rule 244 (TIPO -> timestamp para int parc .)
    diferente2      reduce using rule 244 (TIPO -> timestamp para int parc .)
    between         reduce using rule 244 (TIPO -> timestamp para int parc .)
    is              reduce using rule 244 (TIPO -> timestamp para int parc .)
    isnull          reduce using rule 244 (TIPO -> timestamp para int parc .)
    notnull         reduce using rule 244 (TIPO -> timestamp para int parc .)
    as              reduce using rule 244 (TIPO -> timestamp para int parc .)
    cadenaString    reduce using rule 244 (TIPO -> timestamp para int parc .)
    cadena          reduce using rule 244 (TIPO -> timestamp para int parc .)
    id              reduce using rule 244 (TIPO -> timestamp para int parc .)
    in              reduce using rule 244 (TIPO -> timestamp para int parc .)
    not             reduce using rule 244 (TIPO -> timestamp para int parc .)
    like            reduce using rule 244 (TIPO -> timestamp para int parc .)
    then            reduce using rule 244 (TIPO -> timestamp para int parc .)
    when            reduce using rule 244 (TIPO -> timestamp para int parc .)
    parc            reduce using rule 244 (TIPO -> timestamp para int parc .)
    constraint      reduce using rule 244 (TIPO -> timestamp para int parc .)
    unique          reduce using rule 244 (TIPO -> timestamp para int parc .)
    check           reduce using rule 244 (TIPO -> timestamp para int parc .)
    default         reduce using rule 244 (TIPO -> timestamp para int parc .)
    null            reduce using rule 244 (TIPO -> timestamp para int parc .)
    primary         reduce using rule 244 (TIPO -> timestamp para int parc .)
    references      reduce using rule 244 (TIPO -> timestamp para int parc .)
    asc             reduce using rule 244 (TIPO -> timestamp para int parc .)
    desc            reduce using rule 244 (TIPO -> timestamp para int parc .)
    dospuntos       reduce using rule 244 (TIPO -> timestamp para int parc .)
    language        reduce using rule 244 (TIPO -> timestamp para int parc .)
    do              reduce using rule 244 (TIPO -> timestamp para int parc .)
    without         shift and go to state 658
    with            shift and go to state 659


state 569

    (272) TIPO -> timestamp without time zone .

    r_from          reduce using rule 272 (TIPO -> timestamp without time zone .)
    coma            reduce using rule 272 (TIPO -> timestamp without time zone .)
    where           reduce using rule 272 (TIPO -> timestamp without time zone .)
    group           reduce using rule 272 (TIPO -> timestamp without time zone .)
    having          reduce using rule 272 (TIPO -> timestamp without time zone .)
    union           reduce using rule 272 (TIPO -> timestamp without time zone .)
    intersect       reduce using rule 272 (TIPO -> timestamp without time zone .)
    except          reduce using rule 272 (TIPO -> timestamp without time zone .)
    order           reduce using rule 272 (TIPO -> timestamp without time zone .)
    limit           reduce using rule 272 (TIPO -> timestamp without time zone .)
    offset          reduce using rule 272 (TIPO -> timestamp without time zone .)
    ptcoma          reduce using rule 272 (TIPO -> timestamp without time zone .)
    mas             reduce using rule 272 (TIPO -> timestamp without time zone .)
    menos           reduce using rule 272 (TIPO -> timestamp without time zone .)
    multiplicacion  reduce using rule 272 (TIPO -> timestamp without time zone .)
    division        reduce using rule 272 (TIPO -> timestamp without time zone .)
    modulo          reduce using rule 272 (TIPO -> timestamp without time zone .)
    elevado         reduce using rule 272 (TIPO -> timestamp without time zone .)
    and             reduce using rule 272 (TIPO -> timestamp without time zone .)
    or              reduce using rule 272 (TIPO -> timestamp without time zone .)
    mayor           reduce using rule 272 (TIPO -> timestamp without time zone .)
    menor           reduce using rule 272 (TIPO -> timestamp without time zone .)
    mayor_igual     reduce using rule 272 (TIPO -> timestamp without time zone .)
    menor_igual     reduce using rule 272 (TIPO -> timestamp without time zone .)
    igual           reduce using rule 272 (TIPO -> timestamp without time zone .)
    diferente1      reduce using rule 272 (TIPO -> timestamp without time zone .)
    diferente2      reduce using rule 272 (TIPO -> timestamp without time zone .)
    between         reduce using rule 272 (TIPO -> timestamp without time zone .)
    is              reduce using rule 272 (TIPO -> timestamp without time zone .)
    isnull          reduce using rule 272 (TIPO -> timestamp without time zone .)
    notnull         reduce using rule 272 (TIPO -> timestamp without time zone .)
    as              reduce using rule 272 (TIPO -> timestamp without time zone .)
    cadenaString    reduce using rule 272 (TIPO -> timestamp without time zone .)
    cadena          reduce using rule 272 (TIPO -> timestamp without time zone .)
    id              reduce using rule 272 (TIPO -> timestamp without time zone .)
    in              reduce using rule 272 (TIPO -> timestamp without time zone .)
    not             reduce using rule 272 (TIPO -> timestamp without time zone .)
    like            reduce using rule 272 (TIPO -> timestamp without time zone .)
    then            reduce using rule 272 (TIPO -> timestamp without time zone .)
    when            reduce using rule 272 (TIPO -> timestamp without time zone .)
    parc            reduce using rule 272 (TIPO -> timestamp without time zone .)
    constraint      reduce using rule 272 (TIPO -> timestamp without time zone .)
    unique          reduce using rule 272 (TIPO -> timestamp without time zone .)
    check           reduce using rule 272 (TIPO -> timestamp without time zone .)
    default         reduce using rule 272 (TIPO -> timestamp without time zone .)
    null            reduce using rule 272 (TIPO -> timestamp without time zone .)
    primary         reduce using rule 272 (TIPO -> timestamp without time zone .)
    references      reduce using rule 272 (TIPO -> timestamp without time zone .)
    asc             reduce using rule 272 (TIPO -> timestamp without time zone .)
    desc            reduce using rule 272 (TIPO -> timestamp without time zone .)
    dospuntos       reduce using rule 272 (TIPO -> timestamp without time zone .)
    language        reduce using rule 272 (TIPO -> timestamp without time zone .)
    do              reduce using rule 272 (TIPO -> timestamp without time zone .)


state 570

    (273) TIPO -> timestamp with time zone .

    r_from          reduce using rule 273 (TIPO -> timestamp with time zone .)
    coma            reduce using rule 273 (TIPO -> timestamp with time zone .)
    where           reduce using rule 273 (TIPO -> timestamp with time zone .)
    group           reduce using rule 273 (TIPO -> timestamp with time zone .)
    having          reduce using rule 273 (TIPO -> timestamp with time zone .)
    union           reduce using rule 273 (TIPO -> timestamp with time zone .)
    intersect       reduce using rule 273 (TIPO -> timestamp with time zone .)
    except          reduce using rule 273 (TIPO -> timestamp with time zone .)
    order           reduce using rule 273 (TIPO -> timestamp with time zone .)
    limit           reduce using rule 273 (TIPO -> timestamp with time zone .)
    offset          reduce using rule 273 (TIPO -> timestamp with time zone .)
    ptcoma          reduce using rule 273 (TIPO -> timestamp with time zone .)
    mas             reduce using rule 273 (TIPO -> timestamp with time zone .)
    menos           reduce using rule 273 (TIPO -> timestamp with time zone .)
    multiplicacion  reduce using rule 273 (TIPO -> timestamp with time zone .)
    division        reduce using rule 273 (TIPO -> timestamp with time zone .)
    modulo          reduce using rule 273 (TIPO -> timestamp with time zone .)
    elevado         reduce using rule 273 (TIPO -> timestamp with time zone .)
    and             reduce using rule 273 (TIPO -> timestamp with time zone .)
    or              reduce using rule 273 (TIPO -> timestamp with time zone .)
    mayor           reduce using rule 273 (TIPO -> timestamp with time zone .)
    menor           reduce using rule 273 (TIPO -> timestamp with time zone .)
    mayor_igual     reduce using rule 273 (TIPO -> timestamp with time zone .)
    menor_igual     reduce using rule 273 (TIPO -> timestamp with time zone .)
    igual           reduce using rule 273 (TIPO -> timestamp with time zone .)
    diferente1      reduce using rule 273 (TIPO -> timestamp with time zone .)
    diferente2      reduce using rule 273 (TIPO -> timestamp with time zone .)
    between         reduce using rule 273 (TIPO -> timestamp with time zone .)
    is              reduce using rule 273 (TIPO -> timestamp with time zone .)
    isnull          reduce using rule 273 (TIPO -> timestamp with time zone .)
    notnull         reduce using rule 273 (TIPO -> timestamp with time zone .)
    as              reduce using rule 273 (TIPO -> timestamp with time zone .)
    cadenaString    reduce using rule 273 (TIPO -> timestamp with time zone .)
    cadena          reduce using rule 273 (TIPO -> timestamp with time zone .)
    id              reduce using rule 273 (TIPO -> timestamp with time zone .)
    in              reduce using rule 273 (TIPO -> timestamp with time zone .)
    not             reduce using rule 273 (TIPO -> timestamp with time zone .)
    like            reduce using rule 273 (TIPO -> timestamp with time zone .)
    then            reduce using rule 273 (TIPO -> timestamp with time zone .)
    when            reduce using rule 273 (TIPO -> timestamp with time zone .)
    parc            reduce using rule 273 (TIPO -> timestamp with time zone .)
    constraint      reduce using rule 273 (TIPO -> timestamp with time zone .)
    unique          reduce using rule 273 (TIPO -> timestamp with time zone .)
    check           reduce using rule 273 (TIPO -> timestamp with time zone .)
    default         reduce using rule 273 (TIPO -> timestamp with time zone .)
    null            reduce using rule 273 (TIPO -> timestamp with time zone .)
    primary         reduce using rule 273 (TIPO -> timestamp with time zone .)
    references      reduce using rule 273 (TIPO -> timestamp with time zone .)
    asc             reduce using rule 273 (TIPO -> timestamp with time zone .)
    desc            reduce using rule 273 (TIPO -> timestamp with time zone .)
    dospuntos       reduce using rule 273 (TIPO -> timestamp with time zone .)
    language        reduce using rule 273 (TIPO -> timestamp with time zone .)
    do              reduce using rule 273 (TIPO -> timestamp with time zone .)


state 571

    (245) TIPO -> character para int parc .

    r_from          reduce using rule 245 (TIPO -> character para int parc .)
    coma            reduce using rule 245 (TIPO -> character para int parc .)
    where           reduce using rule 245 (TIPO -> character para int parc .)
    group           reduce using rule 245 (TIPO -> character para int parc .)
    having          reduce using rule 245 (TIPO -> character para int parc .)
    union           reduce using rule 245 (TIPO -> character para int parc .)
    intersect       reduce using rule 245 (TIPO -> character para int parc .)
    except          reduce using rule 245 (TIPO -> character para int parc .)
    order           reduce using rule 245 (TIPO -> character para int parc .)
    limit           reduce using rule 245 (TIPO -> character para int parc .)
    offset          reduce using rule 245 (TIPO -> character para int parc .)
    ptcoma          reduce using rule 245 (TIPO -> character para int parc .)
    mas             reduce using rule 245 (TIPO -> character para int parc .)
    menos           reduce using rule 245 (TIPO -> character para int parc .)
    multiplicacion  reduce using rule 245 (TIPO -> character para int parc .)
    division        reduce using rule 245 (TIPO -> character para int parc .)
    modulo          reduce using rule 245 (TIPO -> character para int parc .)
    elevado         reduce using rule 245 (TIPO -> character para int parc .)
    and             reduce using rule 245 (TIPO -> character para int parc .)
    or              reduce using rule 245 (TIPO -> character para int parc .)
    mayor           reduce using rule 245 (TIPO -> character para int parc .)
    menor           reduce using rule 245 (TIPO -> character para int parc .)
    mayor_igual     reduce using rule 245 (TIPO -> character para int parc .)
    menor_igual     reduce using rule 245 (TIPO -> character para int parc .)
    igual           reduce using rule 245 (TIPO -> character para int parc .)
    diferente1      reduce using rule 245 (TIPO -> character para int parc .)
    diferente2      reduce using rule 245 (TIPO -> character para int parc .)
    between         reduce using rule 245 (TIPO -> character para int parc .)
    is              reduce using rule 245 (TIPO -> character para int parc .)
    isnull          reduce using rule 245 (TIPO -> character para int parc .)
    notnull         reduce using rule 245 (TIPO -> character para int parc .)
    as              reduce using rule 245 (TIPO -> character para int parc .)
    cadenaString    reduce using rule 245 (TIPO -> character para int parc .)
    cadena          reduce using rule 245 (TIPO -> character para int parc .)
    id              reduce using rule 245 (TIPO -> character para int parc .)
    in              reduce using rule 245 (TIPO -> character para int parc .)
    not             reduce using rule 245 (TIPO -> character para int parc .)
    like            reduce using rule 245 (TIPO -> character para int parc .)
    then            reduce using rule 245 (TIPO -> character para int parc .)
    when            reduce using rule 245 (TIPO -> character para int parc .)
    parc            reduce using rule 245 (TIPO -> character para int parc .)
    constraint      reduce using rule 245 (TIPO -> character para int parc .)
    unique          reduce using rule 245 (TIPO -> character para int parc .)
    check           reduce using rule 245 (TIPO -> character para int parc .)
    default         reduce using rule 245 (TIPO -> character para int parc .)
    null            reduce using rule 245 (TIPO -> character para int parc .)
    primary         reduce using rule 245 (TIPO -> character para int parc .)
    references      reduce using rule 245 (TIPO -> character para int parc .)
    asc             reduce using rule 245 (TIPO -> character para int parc .)
    desc            reduce using rule 245 (TIPO -> character para int parc .)
    dospuntos       reduce using rule 245 (TIPO -> character para int parc .)
    language        reduce using rule 245 (TIPO -> character para int parc .)
    do              reduce using rule 245 (TIPO -> character para int parc .)


state 572

    (249) TIPO -> character varying para int . parc

    parc            shift and go to state 660


state 573

    (247) TIPO -> char para int parc .

    r_from          reduce using rule 247 (TIPO -> char para int parc .)
    coma            reduce using rule 247 (TIPO -> char para int parc .)
    where           reduce using rule 247 (TIPO -> char para int parc .)
    group           reduce using rule 247 (TIPO -> char para int parc .)
    having          reduce using rule 247 (TIPO -> char para int parc .)
    union           reduce using rule 247 (TIPO -> char para int parc .)
    intersect       reduce using rule 247 (TIPO -> char para int parc .)
    except          reduce using rule 247 (TIPO -> char para int parc .)
    order           reduce using rule 247 (TIPO -> char para int parc .)
    limit           reduce using rule 247 (TIPO -> char para int parc .)
    offset          reduce using rule 247 (TIPO -> char para int parc .)
    ptcoma          reduce using rule 247 (TIPO -> char para int parc .)
    mas             reduce using rule 247 (TIPO -> char para int parc .)
    menos           reduce using rule 247 (TIPO -> char para int parc .)
    multiplicacion  reduce using rule 247 (TIPO -> char para int parc .)
    division        reduce using rule 247 (TIPO -> char para int parc .)
    modulo          reduce using rule 247 (TIPO -> char para int parc .)
    elevado         reduce using rule 247 (TIPO -> char para int parc .)
    and             reduce using rule 247 (TIPO -> char para int parc .)
    or              reduce using rule 247 (TIPO -> char para int parc .)
    mayor           reduce using rule 247 (TIPO -> char para int parc .)
    menor           reduce using rule 247 (TIPO -> char para int parc .)
    mayor_igual     reduce using rule 247 (TIPO -> char para int parc .)
    menor_igual     reduce using rule 247 (TIPO -> char para int parc .)
    igual           reduce using rule 247 (TIPO -> char para int parc .)
    diferente1      reduce using rule 247 (TIPO -> char para int parc .)
    diferente2      reduce using rule 247 (TIPO -> char para int parc .)
    between         reduce using rule 247 (TIPO -> char para int parc .)
    is              reduce using rule 247 (TIPO -> char para int parc .)
    isnull          reduce using rule 247 (TIPO -> char para int parc .)
    notnull         reduce using rule 247 (TIPO -> char para int parc .)
    as              reduce using rule 247 (TIPO -> char para int parc .)
    cadenaString    reduce using rule 247 (TIPO -> char para int parc .)
    cadena          reduce using rule 247 (TIPO -> char para int parc .)
    id              reduce using rule 247 (TIPO -> char para int parc .)
    in              reduce using rule 247 (TIPO -> char para int parc .)
    not             reduce using rule 247 (TIPO -> char para int parc .)
    like            reduce using rule 247 (TIPO -> char para int parc .)
    then            reduce using rule 247 (TIPO -> char para int parc .)
    when            reduce using rule 247 (TIPO -> char para int parc .)
    parc            reduce using rule 247 (TIPO -> char para int parc .)
    constraint      reduce using rule 247 (TIPO -> char para int parc .)
    unique          reduce using rule 247 (TIPO -> char para int parc .)
    check           reduce using rule 247 (TIPO -> char para int parc .)
    default         reduce using rule 247 (TIPO -> char para int parc .)
    null            reduce using rule 247 (TIPO -> char para int parc .)
    primary         reduce using rule 247 (TIPO -> char para int parc .)
    references      reduce using rule 247 (TIPO -> char para int parc .)
    asc             reduce using rule 247 (TIPO -> char para int parc .)
    desc            reduce using rule 247 (TIPO -> char para int parc .)
    dospuntos       reduce using rule 247 (TIPO -> char para int parc .)
    language        reduce using rule 247 (TIPO -> char para int parc .)
    do              reduce using rule 247 (TIPO -> char para int parc .)


state 574

    (248) TIPO -> time para int parc .
    (254) TIPO -> time para int parc . without time zone
    (255) TIPO -> time para int parc . with time zone

    r_from          reduce using rule 248 (TIPO -> time para int parc .)
    coma            reduce using rule 248 (TIPO -> time para int parc .)
    where           reduce using rule 248 (TIPO -> time para int parc .)
    group           reduce using rule 248 (TIPO -> time para int parc .)
    having          reduce using rule 248 (TIPO -> time para int parc .)
    union           reduce using rule 248 (TIPO -> time para int parc .)
    intersect       reduce using rule 248 (TIPO -> time para int parc .)
    except          reduce using rule 248 (TIPO -> time para int parc .)
    order           reduce using rule 248 (TIPO -> time para int parc .)
    limit           reduce using rule 248 (TIPO -> time para int parc .)
    offset          reduce using rule 248 (TIPO -> time para int parc .)
    ptcoma          reduce using rule 248 (TIPO -> time para int parc .)
    mas             reduce using rule 248 (TIPO -> time para int parc .)
    menos           reduce using rule 248 (TIPO -> time para int parc .)
    multiplicacion  reduce using rule 248 (TIPO -> time para int parc .)
    division        reduce using rule 248 (TIPO -> time para int parc .)
    modulo          reduce using rule 248 (TIPO -> time para int parc .)
    elevado         reduce using rule 248 (TIPO -> time para int parc .)
    and             reduce using rule 248 (TIPO -> time para int parc .)
    or              reduce using rule 248 (TIPO -> time para int parc .)
    mayor           reduce using rule 248 (TIPO -> time para int parc .)
    menor           reduce using rule 248 (TIPO -> time para int parc .)
    mayor_igual     reduce using rule 248 (TIPO -> time para int parc .)
    menor_igual     reduce using rule 248 (TIPO -> time para int parc .)
    igual           reduce using rule 248 (TIPO -> time para int parc .)
    diferente1      reduce using rule 248 (TIPO -> time para int parc .)
    diferente2      reduce using rule 248 (TIPO -> time para int parc .)
    between         reduce using rule 248 (TIPO -> time para int parc .)
    is              reduce using rule 248 (TIPO -> time para int parc .)
    isnull          reduce using rule 248 (TIPO -> time para int parc .)
    notnull         reduce using rule 248 (TIPO -> time para int parc .)
    as              reduce using rule 248 (TIPO -> time para int parc .)
    cadenaString    reduce using rule 248 (TIPO -> time para int parc .)
    cadena          reduce using rule 248 (TIPO -> time para int parc .)
    id              reduce using rule 248 (TIPO -> time para int parc .)
    in              reduce using rule 248 (TIPO -> time para int parc .)
    not             reduce using rule 248 (TIPO -> time para int parc .)
    like            reduce using rule 248 (TIPO -> time para int parc .)
    then            reduce using rule 248 (TIPO -> time para int parc .)
    when            reduce using rule 248 (TIPO -> time para int parc .)
    parc            reduce using rule 248 (TIPO -> time para int parc .)
    constraint      reduce using rule 248 (TIPO -> time para int parc .)
    unique          reduce using rule 248 (TIPO -> time para int parc .)
    check           reduce using rule 248 (TIPO -> time para int parc .)
    default         reduce using rule 248 (TIPO -> time para int parc .)
    null            reduce using rule 248 (TIPO -> time para int parc .)
    primary         reduce using rule 248 (TIPO -> time para int parc .)
    references      reduce using rule 248 (TIPO -> time para int parc .)
    asc             reduce using rule 248 (TIPO -> time para int parc .)
    desc            reduce using rule 248 (TIPO -> time para int parc .)
    dospuntos       reduce using rule 248 (TIPO -> time para int parc .)
    language        reduce using rule 248 (TIPO -> time para int parc .)
    do              reduce using rule 248 (TIPO -> time para int parc .)
    without         shift and go to state 661
    with            shift and go to state 662


state 575

    (274) TIPO -> time without time zone .

    r_from          reduce using rule 274 (TIPO -> time without time zone .)
    coma            reduce using rule 274 (TIPO -> time without time zone .)
    where           reduce using rule 274 (TIPO -> time without time zone .)
    group           reduce using rule 274 (TIPO -> time without time zone .)
    having          reduce using rule 274 (TIPO -> time without time zone .)
    union           reduce using rule 274 (TIPO -> time without time zone .)
    intersect       reduce using rule 274 (TIPO -> time without time zone .)
    except          reduce using rule 274 (TIPO -> time without time zone .)
    order           reduce using rule 274 (TIPO -> time without time zone .)
    limit           reduce using rule 274 (TIPO -> time without time zone .)
    offset          reduce using rule 274 (TIPO -> time without time zone .)
    ptcoma          reduce using rule 274 (TIPO -> time without time zone .)
    mas             reduce using rule 274 (TIPO -> time without time zone .)
    menos           reduce using rule 274 (TIPO -> time without time zone .)
    multiplicacion  reduce using rule 274 (TIPO -> time without time zone .)
    division        reduce using rule 274 (TIPO -> time without time zone .)
    modulo          reduce using rule 274 (TIPO -> time without time zone .)
    elevado         reduce using rule 274 (TIPO -> time without time zone .)
    and             reduce using rule 274 (TIPO -> time without time zone .)
    or              reduce using rule 274 (TIPO -> time without time zone .)
    mayor           reduce using rule 274 (TIPO -> time without time zone .)
    menor           reduce using rule 274 (TIPO -> time without time zone .)
    mayor_igual     reduce using rule 274 (TIPO -> time without time zone .)
    menor_igual     reduce using rule 274 (TIPO -> time without time zone .)
    igual           reduce using rule 274 (TIPO -> time without time zone .)
    diferente1      reduce using rule 274 (TIPO -> time without time zone .)
    diferente2      reduce using rule 274 (TIPO -> time without time zone .)
    between         reduce using rule 274 (TIPO -> time without time zone .)
    is              reduce using rule 274 (TIPO -> time without time zone .)
    isnull          reduce using rule 274 (TIPO -> time without time zone .)
    notnull         reduce using rule 274 (TIPO -> time without time zone .)
    as              reduce using rule 274 (TIPO -> time without time zone .)
    cadenaString    reduce using rule 274 (TIPO -> time without time zone .)
    cadena          reduce using rule 274 (TIPO -> time without time zone .)
    id              reduce using rule 274 (TIPO -> time without time zone .)
    in              reduce using rule 274 (TIPO -> time without time zone .)
    not             reduce using rule 274 (TIPO -> time without time zone .)
    like            reduce using rule 274 (TIPO -> time without time zone .)
    then            reduce using rule 274 (TIPO -> time without time zone .)
    when            reduce using rule 274 (TIPO -> time without time zone .)
    parc            reduce using rule 274 (TIPO -> time without time zone .)
    constraint      reduce using rule 274 (TIPO -> time without time zone .)
    unique          reduce using rule 274 (TIPO -> time without time zone .)
    check           reduce using rule 274 (TIPO -> time without time zone .)
    default         reduce using rule 274 (TIPO -> time without time zone .)
    null            reduce using rule 274 (TIPO -> time without time zone .)
    primary         reduce using rule 274 (TIPO -> time without time zone .)
    references      reduce using rule 274 (TIPO -> time without time zone .)
    asc             reduce using rule 274 (TIPO -> time without time zone .)
    desc            reduce using rule 274 (TIPO -> time without time zone .)
    dospuntos       reduce using rule 274 (TIPO -> time without time zone .)
    language        reduce using rule 274 (TIPO -> time without time zone .)
    do              reduce using rule 274 (TIPO -> time without time zone .)


state 576

    (275) TIPO -> time with time zone .

    r_from          reduce using rule 275 (TIPO -> time with time zone .)
    coma            reduce using rule 275 (TIPO -> time with time zone .)
    where           reduce using rule 275 (TIPO -> time with time zone .)
    group           reduce using rule 275 (TIPO -> time with time zone .)
    having          reduce using rule 275 (TIPO -> time with time zone .)
    union           reduce using rule 275 (TIPO -> time with time zone .)
    intersect       reduce using rule 275 (TIPO -> time with time zone .)
    except          reduce using rule 275 (TIPO -> time with time zone .)
    order           reduce using rule 275 (TIPO -> time with time zone .)
    limit           reduce using rule 275 (TIPO -> time with time zone .)
    offset          reduce using rule 275 (TIPO -> time with time zone .)
    ptcoma          reduce using rule 275 (TIPO -> time with time zone .)
    mas             reduce using rule 275 (TIPO -> time with time zone .)
    menos           reduce using rule 275 (TIPO -> time with time zone .)
    multiplicacion  reduce using rule 275 (TIPO -> time with time zone .)
    division        reduce using rule 275 (TIPO -> time with time zone .)
    modulo          reduce using rule 275 (TIPO -> time with time zone .)
    elevado         reduce using rule 275 (TIPO -> time with time zone .)
    and             reduce using rule 275 (TIPO -> time with time zone .)
    or              reduce using rule 275 (TIPO -> time with time zone .)
    mayor           reduce using rule 275 (TIPO -> time with time zone .)
    menor           reduce using rule 275 (TIPO -> time with time zone .)
    mayor_igual     reduce using rule 275 (TIPO -> time with time zone .)
    menor_igual     reduce using rule 275 (TIPO -> time with time zone .)
    igual           reduce using rule 275 (TIPO -> time with time zone .)
    diferente1      reduce using rule 275 (TIPO -> time with time zone .)
    diferente2      reduce using rule 275 (TIPO -> time with time zone .)
    between         reduce using rule 275 (TIPO -> time with time zone .)
    is              reduce using rule 275 (TIPO -> time with time zone .)
    isnull          reduce using rule 275 (TIPO -> time with time zone .)
    notnull         reduce using rule 275 (TIPO -> time with time zone .)
    as              reduce using rule 275 (TIPO -> time with time zone .)
    cadenaString    reduce using rule 275 (TIPO -> time with time zone .)
    cadena          reduce using rule 275 (TIPO -> time with time zone .)
    id              reduce using rule 275 (TIPO -> time with time zone .)
    in              reduce using rule 275 (TIPO -> time with time zone .)
    not             reduce using rule 275 (TIPO -> time with time zone .)
    like            reduce using rule 275 (TIPO -> time with time zone .)
    then            reduce using rule 275 (TIPO -> time with time zone .)
    when            reduce using rule 275 (TIPO -> time with time zone .)
    parc            reduce using rule 275 (TIPO -> time with time zone .)
    constraint      reduce using rule 275 (TIPO -> time with time zone .)
    unique          reduce using rule 275 (TIPO -> time with time zone .)
    check           reduce using rule 275 (TIPO -> time with time zone .)
    default         reduce using rule 275 (TIPO -> time with time zone .)
    null            reduce using rule 275 (TIPO -> time with time zone .)
    primary         reduce using rule 275 (TIPO -> time with time zone .)
    references      reduce using rule 275 (TIPO -> time with time zone .)
    asc             reduce using rule 275 (TIPO -> time with time zone .)
    desc            reduce using rule 275 (TIPO -> time with time zone .)
    dospuntos       reduce using rule 275 (TIPO -> time with time zone .)
    language        reduce using rule 275 (TIPO -> time with time zone .)
    do              reduce using rule 275 (TIPO -> time with time zone .)


state 577

    (334) EXP -> extract para FIELDS r_from timestamp cadena . parc

    parc            shift and go to state 663


state 578

    (175) COLDEF -> id TIPO LOPCOLUMN .
    (176) LOPCOLUMN -> LOPCOLUMN . OPCOLUMN
    (178) OPCOLUMN -> . constraint id unique
    (179) OPCOLUMN -> . unique
    (180) OPCOLUMN -> . constraint id check para CONDCHECK parc
    (181) OPCOLUMN -> . check para CONDCHECK parc
    (182) OPCOLUMN -> . default EXP
    (183) OPCOLUMN -> . not null
    (184) OPCOLUMN -> . null
    (185) OPCOLUMN -> . primary key
    (186) OPCOLUMN -> . references id

    parc            reduce using rule 175 (COLDEF -> id TIPO LOPCOLUMN .)
    coma            reduce using rule 175 (COLDEF -> id TIPO LOPCOLUMN .)
    constraint      shift and go to state 580
    unique          shift and go to state 581
    check           shift and go to state 582
    default         shift and go to state 583
    not             shift and go to state 584
    null            shift and go to state 585
    primary         shift and go to state 586
    references      shift and go to state 587

    OPCOLUMN                       shift and go to state 664

state 579

    (177) LOPCOLUMN -> OPCOLUMN .

    constraint      reduce using rule 177 (LOPCOLUMN -> OPCOLUMN .)
    unique          reduce using rule 177 (LOPCOLUMN -> OPCOLUMN .)
    check           reduce using rule 177 (LOPCOLUMN -> OPCOLUMN .)
    default         reduce using rule 177 (LOPCOLUMN -> OPCOLUMN .)
    not             reduce using rule 177 (LOPCOLUMN -> OPCOLUMN .)
    null            reduce using rule 177 (LOPCOLUMN -> OPCOLUMN .)
    primary         reduce using rule 177 (LOPCOLUMN -> OPCOLUMN .)
    references      reduce using rule 177 (LOPCOLUMN -> OPCOLUMN .)
    parc            reduce using rule 177 (LOPCOLUMN -> OPCOLUMN .)
    coma            reduce using rule 177 (LOPCOLUMN -> OPCOLUMN .)


state 580

    (178) OPCOLUMN -> constraint . id unique
    (180) OPCOLUMN -> constraint . id check para CONDCHECK parc

    id              shift and go to state 665


state 581

    (179) OPCOLUMN -> unique .

    constraint      reduce using rule 179 (OPCOLUMN -> unique .)
    unique          reduce using rule 179 (OPCOLUMN -> unique .)
    check           reduce using rule 179 (OPCOLUMN -> unique .)
    default         reduce using rule 179 (OPCOLUMN -> unique .)
    not             reduce using rule 179 (OPCOLUMN -> unique .)
    null            reduce using rule 179 (OPCOLUMN -> unique .)
    primary         reduce using rule 179 (OPCOLUMN -> unique .)
    references      reduce using rule 179 (OPCOLUMN -> unique .)
    parc            reduce using rule 179 (OPCOLUMN -> unique .)
    coma            reduce using rule 179 (OPCOLUMN -> unique .)


state 582

    (181) OPCOLUMN -> check . para CONDCHECK parc

    para            shift and go to state 666


state 583

    (182) OPCOLUMN -> default . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 667
    SELECT                         shift and go to state 74

state 584

    (183) OPCOLUMN -> not . null

    null            shift and go to state 668


state 585

    (184) OPCOLUMN -> null .

    constraint      reduce using rule 184 (OPCOLUMN -> null .)
    unique          reduce using rule 184 (OPCOLUMN -> null .)
    check           reduce using rule 184 (OPCOLUMN -> null .)
    default         reduce using rule 184 (OPCOLUMN -> null .)
    not             reduce using rule 184 (OPCOLUMN -> null .)
    null            reduce using rule 184 (OPCOLUMN -> null .)
    primary         reduce using rule 184 (OPCOLUMN -> null .)
    references      reduce using rule 184 (OPCOLUMN -> null .)
    parc            reduce using rule 184 (OPCOLUMN -> null .)
    coma            reduce using rule 184 (OPCOLUMN -> null .)


state 586

    (185) OPCOLUMN -> primary . key

    key             shift and go to state 669


state 587

    (186) OPCOLUMN -> references . id

    id              shift and go to state 670


state 588

    (168) CREATETABLE -> create table id para LDEF parc ptcoma .

    use             reduce using rule 168 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    select          reduce using rule 168 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    create          reduce using rule 168 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    update          reduce using rule 168 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    delete          reduce using rule 168 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    alter           reduce using rule 168 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    drop            reduce using rule 168 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    insert          reduce using rule 168 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    case            reduce using rule 168 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    show            reduce using rule 168 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    id              reduce using rule 168 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    if              reduce using rule 168 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    execute         reduce using rule 168 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    $end            reduce using rule 168 (CREATETABLE -> create table id para LDEF parc ptcoma .)


state 589

    (169) CREATETABLE -> create table id para LDEF parc HERENCIA . ptcoma

    ptcoma          shift and go to state 671


state 590

    (198) HERENCIA -> inherits . para id parc

    para            shift and go to state 672


state 591

    (170) LDEF -> LDEF coma COLDEF .

    parc            reduce using rule 170 (LDEF -> LDEF coma COLDEF .)
    coma            reduce using rule 170 (LDEF -> LDEF coma COLDEF .)


state 592

    (173) COLDEF -> constraint id OPCONST .

    parc            reduce using rule 173 (COLDEF -> constraint id OPCONST .)
    coma            reduce using rule 173 (COLDEF -> constraint id OPCONST .)


state 593

    (187) OPCONST -> primary key para . LEXP parc
    (234) LEXP -> . LEXP coma EXP
    (235) LEXP -> . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    LEXP                           shift and go to state 673
    EXP                            shift and go to state 62
    SELECT                         shift and go to state 74

state 594

    (188) OPCONST -> foreign key para . LEXP parc references id para LEXP parc
    (234) LEXP -> . LEXP coma EXP
    (235) LEXP -> . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    LEXP                           shift and go to state 674
    EXP                            shift and go to state 62
    SELECT                         shift and go to state 74

state 595

    (189) OPCONST -> unique para LEXP . parc
    (234) LEXP -> LEXP . coma EXP

    parc            shift and go to state 675
    coma            shift and go to state 128


state 596

    (190) OPCONST -> check para CONDCHECK . parc

    parc            shift and go to state 676


state 597

    (191) CONDCHECK -> EXP . mayor EXP
    (192) CONDCHECK -> EXP . menor EXP
    (193) CONDCHECK -> EXP . mayor_igual EXP
    (194) CONDCHECK -> EXP . menor_igual EXP
    (195) CONDCHECK -> EXP . igual EXP
    (196) CONDCHECK -> EXP . diferente1 EXP
    (197) CONDCHECK -> EXP . diferente2 EXP
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    mayor           shift and go to state 677
    menor           shift and go to state 678
    mayor_igual     shift and go to state 679
    menor_igual     shift and go to state 680
    igual           shift and go to state 681
    diferente1      shift and go to state 682
    diferente2      shift and go to state 683
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    and             shift and go to state 135
    or              shift and go to state 136
    between         shift and go to state 144
    is              shift and go to state 145
    isnull          shift and go to state 147
    notnull         shift and go to state 148
    as              shift and go to state 149
    cadenaString    shift and go to state 150
    cadena          shift and go to state 151
    id              shift and go to state 152
    in              shift and go to state 153
    not             shift and go to state 146
    like            shift and go to state 154


state 598

    (199) CREATETYPE -> create type id as enum para LEXP . parc
    (234) LEXP -> LEXP . coma EXP

    parc            shift and go to state 684
    coma            shift and go to state 128


state 599

    (152) CREATEDB -> create RD if not exist id OPCCDB .

    ptcoma          reduce using rule 152 (CREATEDB -> create RD if not exist id OPCCDB .)


state 600

    (55) CREATEINDEX -> create index id on id para id . ORDEN parc
    (56) CREATEINDEX -> create index id on id para id . id ORDEN parc
    (57) CREATEINDEX -> create index id on id para id . id parc
    (329) EXP -> id . para LEXP parc
    (330) EXP -> id . para parc
    (341) EXP -> id .
    (58) ORDEN -> . asc
    (59) ORDEN -> . desc
    (60) ORDEN -> . nulls first
    (61) ORDEN -> . nulls last
    (62) ORDEN -> . asc nulls first
    (63) ORDEN -> . desc nulls last
    (64) ORDEN -> . desc nulls first
    (65) ORDEN -> . asc nulls last

  ! shift/reduce conflict for id resolved as shift
    id              shift and go to state 685
    para            shift and go to state 159
    mas             reduce using rule 341 (EXP -> id .)
    menos           reduce using rule 341 (EXP -> id .)
    multiplicacion  reduce using rule 341 (EXP -> id .)
    division        reduce using rule 341 (EXP -> id .)
    modulo          reduce using rule 341 (EXP -> id .)
    elevado         reduce using rule 341 (EXP -> id .)
    and             reduce using rule 341 (EXP -> id .)
    or              reduce using rule 341 (EXP -> id .)
    mayor           reduce using rule 341 (EXP -> id .)
    menor           reduce using rule 341 (EXP -> id .)
    mayor_igual     reduce using rule 341 (EXP -> id .)
    menor_igual     reduce using rule 341 (EXP -> id .)
    igual           reduce using rule 341 (EXP -> id .)
    diferente1      reduce using rule 341 (EXP -> id .)
    diferente2      reduce using rule 341 (EXP -> id .)
    between         reduce using rule 341 (EXP -> id .)
    is              reduce using rule 341 (EXP -> id .)
    isnull          reduce using rule 341 (EXP -> id .)
    notnull         reduce using rule 341 (EXP -> id .)
    as              reduce using rule 341 (EXP -> id .)
    cadenaString    reduce using rule 341 (EXP -> id .)
    cadena          reduce using rule 341 (EXP -> id .)
    in              reduce using rule 341 (EXP -> id .)
    not             reduce using rule 341 (EXP -> id .)
    like            reduce using rule 341 (EXP -> id .)
    parc            reduce using rule 341 (EXP -> id .)
    coma            reduce using rule 341 (EXP -> id .)
    asc             shift and go to state 687
    desc            shift and go to state 688
    nulls           shift and go to state 689

  ! id              [ reduce using rule 341 (EXP -> id .) ]

    ORDEN                          shift and go to state 686

state 601

    (52) CREATEINDEX -> create index id on id para LEXP . parc
    (234) LEXP -> LEXP . coma EXP

    parc            shift and go to state 690
    coma            shift and go to state 128


state 602

    (54) CREATEINDEX -> create index id on id using hash . para LEXP parc

    para            shift and go to state 691


state 603

    (53) CREATEINDEX -> create unique index id on id para . LEXP parc
    (234) LEXP -> . LEXP coma EXP
    (235) LEXP -> . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    LEXP                           shift and go to state 692
    EXP                            shift and go to state 62
    SELECT                         shift and go to state 74

state 604

    (37) PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE . LCONTENIDOP
    (41) LCONTENIDOP -> . LCONTENIDOP CONTENIDOP
    (42) LCONTENIDOP -> . CONTENIDOP
    (43) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (44) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn

    as              shift and go to state 511
    do              shift and go to state 512

    LCONTENIDOP                    shift and go to state 693
    CONTENIDOP                     shift and go to state 510

state 605

    (39) PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP . LENGUAJE
    (41) LCONTENIDOP -> LCONTENIDOP . CONTENIDOP
    (49) LENGUAJE -> . language plpgsql
    (50) LENGUAJE -> . language plpgsql ptcoma
    (43) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (44) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn

    language        shift and go to state 509
    as              shift and go to state 511
    do              shift and go to state 512

    LENGUAJE                       shift and go to state 694
    CONTENIDOP                     shift and go to state 610

state 606

    (45) LPARAM -> LPARAM coma inout . id TIPO

    id              shift and go to state 695


state 607

    (46) LPARAM -> LPARAM coma id . TIPO
    (236) TIPO -> . interval cadena
    (237) TIPO -> . decimal para int coma int parc
    (238) TIPO -> . decimal para int parc
    (239) TIPO -> . decimal
    (240) TIPO -> . numeric para int coma int parc
    (241) TIPO -> . numeric para int parc
    (242) TIPO -> . numeric
    (243) TIPO -> . varchar para int parc
    (244) TIPO -> . timestamp para int parc
    (245) TIPO -> . character para int parc
    (246) TIPO -> . interval para int parc
    (247) TIPO -> . char para int parc
    (248) TIPO -> . time para int parc
    (249) TIPO -> . character varying para int parc
    (250) TIPO -> . id modulo rowtype
    (251) TIPO -> . idPunto modulo type
    (252) TIPO -> . timestamp para int parc without time zone
    (253) TIPO -> . timestamp para int parc with time zone
    (254) TIPO -> . time para int parc without time zone
    (255) TIPO -> . time para int parc with time zone
    (256) TIPO -> . interval para int parc cadena
    (257) TIPO -> . smallint
    (258) TIPO -> . integer
    (259) TIPO -> . r_int
    (260) TIPO -> . bigint
    (261) TIPO -> . real
    (262) TIPO -> . double precision
    (263) TIPO -> . money
    (264) TIPO -> . text
    (265) TIPO -> . timestamp
    (266) TIPO -> . date
    (267) TIPO -> . time
    (268) TIPO -> . interval
    (269) TIPO -> . boolean
    (270) TIPO -> . record
    (271) TIPO -> . varchar
    (272) TIPO -> . timestamp without time zone
    (273) TIPO -> . timestamp with time zone
    (274) TIPO -> . time without time zone
    (275) TIPO -> . time with time zone
    (276) TIPO -> . id

    interval        shift and go to state 241
    decimal         shift and go to state 242
    numeric         shift and go to state 243
    varchar         shift and go to state 244
    timestamp       shift and go to state 245
    character       shift and go to state 246
    char            shift and go to state 247
    time            shift and go to state 248
    id              shift and go to state 249
    idPunto         shift and go to state 250
    smallint        shift and go to state 251
    integer         shift and go to state 252
    r_int           shift and go to state 253
    bigint          shift and go to state 254
    real            shift and go to state 255
    double          shift and go to state 256
    money           shift and go to state 257
    text            shift and go to state 258
    date            shift and go to state 259
    boolean         shift and go to state 260
    record          shift and go to state 261

    TIPO                           shift and go to state 696

state 608

    (38) PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .
    (41) LCONTENIDOP -> LCONTENIDOP . CONTENIDOP
    (43) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (44) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn

    use             reduce using rule 38 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .)
    select          reduce using rule 38 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .)
    create          reduce using rule 38 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .)
    update          reduce using rule 38 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .)
    delete          reduce using rule 38 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .)
    alter           reduce using rule 38 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .)
    drop            reduce using rule 38 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .)
    insert          reduce using rule 38 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .)
    case            reduce using rule 38 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .)
    show            reduce using rule 38 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .)
    id              reduce using rule 38 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .)
    if              reduce using rule 38 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .)
    execute         reduce using rule 38 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .)
    $end            reduce using rule 38 (PROCEDIMIENTOS -> create procedure id para parc LENGUAJE LCONTENIDOP .)
    as              shift and go to state 511
    do              shift and go to state 512

    CONTENIDOP                     shift and go to state 610

state 609

    (40) PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .

    use             reduce using rule 40 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    select          reduce using rule 40 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    create          reduce using rule 40 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    update          reduce using rule 40 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    delete          reduce using rule 40 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    alter           reduce using rule 40 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    drop            reduce using rule 40 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    insert          reduce using rule 40 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    case            reduce using rule 40 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    show            reduce using rule 40 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    id              reduce using rule 40 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    if              reduce using rule 40 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    execute         reduce using rule 40 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)
    $end            reduce using rule 40 (PROCEDIMIENTOS -> create procedure id para parc LCONTENIDOP LENGUAJE .)


state 610

    (41) LCONTENIDOP -> LCONTENIDOP CONTENIDOP .

    language        reduce using rule 41 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    as              reduce using rule 41 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    do              reduce using rule 41 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    use             reduce using rule 41 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    select          reduce using rule 41 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    create          reduce using rule 41 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    update          reduce using rule 41 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    delete          reduce using rule 41 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    alter           reduce using rule 41 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    drop            reduce using rule 41 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    insert          reduce using rule 41 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    case            reduce using rule 41 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    show            reduce using rule 41 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    id              reduce using rule 41 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    if              reduce using rule 41 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    execute         reduce using rule 41 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    $end            reduce using rule 41 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)


state 611

    (49) LENGUAJE -> language plpgsql .
    (50) LENGUAJE -> language plpgsql . ptcoma

    as              reduce using rule 49 (LENGUAJE -> language plpgsql .)
    do              reduce using rule 49 (LENGUAJE -> language plpgsql .)
    use             reduce using rule 49 (LENGUAJE -> language plpgsql .)
    select          reduce using rule 49 (LENGUAJE -> language plpgsql .)
    create          reduce using rule 49 (LENGUAJE -> language plpgsql .)
    update          reduce using rule 49 (LENGUAJE -> language plpgsql .)
    delete          reduce using rule 49 (LENGUAJE -> language plpgsql .)
    alter           reduce using rule 49 (LENGUAJE -> language plpgsql .)
    drop            reduce using rule 49 (LENGUAJE -> language plpgsql .)
    insert          reduce using rule 49 (LENGUAJE -> language plpgsql .)
    case            reduce using rule 49 (LENGUAJE -> language plpgsql .)
    show            reduce using rule 49 (LENGUAJE -> language plpgsql .)
    id              reduce using rule 49 (LENGUAJE -> language plpgsql .)
    if              reduce using rule 49 (LENGUAJE -> language plpgsql .)
    execute         reduce using rule 49 (LENGUAJE -> language plpgsql .)
    $end            reduce using rule 49 (LENGUAJE -> language plpgsql .)
    ptcoma          shift and go to state 697


state 612

    (43) CONTENIDOP -> as dolarn . LISTACONTENIDO dolarn
    (89) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (90) LISTACONTENIDO -> . CONTENIDO
    (91) CONTENIDO -> . ASIGNACION ptcoma
    (92) CONTENIDO -> . CONDICIONIF ptcoma
    (93) CONTENIDO -> . RAISE ptcoma
    (94) CONTENIDO -> . BEGINEND ptcoma
    (95) CONTENIDO -> . CALLPROCEDURE ptcoma
    (96) CONTENIDO -> . declare LDEC
    (97) CONTENIDO -> . RETURN ptcoma
    (98) CONTENIDO -> . INSERT ptcoma
    (99) CONTENIDO -> . SELECT ptcoma
    (100) CONTENIDO -> . UPDATE ptcoma
    (101) CONTENIDO -> . DELETE ptcoma
    (102) CONTENIDO -> . CASE ptcoma
    (76) ASIGNACION -> . id dospuntos igual EXP
    (77) ASIGNACION -> . id igual EXP
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (80) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (81) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (103) RAISE -> . raise LEVEL FORMAT
    (104) RAISE -> . raise LEVEL EXP
    (105) RAISE -> . raise LEVEL
    (106) RAISE -> . raise
    (107) RAISE -> . raise LEVEL cadena coma id
    (51) BEGINEND -> . begin LISTACONTENIDO end
    (35) CALLPROCEDURE -> . execute id para LEXP parc
    (36) CALLPROCEDURE -> . execute id para parc
    (26) RETURN -> . return EXP
    (118) INSERT -> . insert into id values para LEXP parc
    (119) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (228) UPDATE -> . update id set LCAMPOS WHERE
    (231) DELETE -> . delete r_from id WHERE
    (85) CASE -> . case EXP LISTAWHEN ELSEF end case
    (86) CASE -> . case EXP LISTAWHEN end case
    (87) CASE -> . case LISTAWHEN ELSEF end case
    (88) CASE -> . case LISTAWHEN end case

    declare         shift and go to state 308
    id              shift and go to state 17
    if              shift and go to state 31
    raise           shift and go to state 315
    begin           shift and go to state 316
    execute         shift and go to state 36
    return          shift and go to state 317
    insert          shift and go to state 33
    select          shift and go to state 26
    update          shift and go to state 28
    delete          shift and go to state 29
    case            shift and go to state 34

    LISTACONTENIDO                 shift and go to state 698
    CONTENIDO                      shift and go to state 302
    ASIGNACION                     shift and go to state 303
    CONDICIONIF                    shift and go to state 304
    RAISE                          shift and go to state 305
    BEGINEND                       shift and go to state 306
    CALLPROCEDURE                  shift and go to state 307
    RETURN                         shift and go to state 309
    INSERT                         shift and go to state 310
    SELECT                         shift and go to state 311
    UPDATE                         shift and go to state 312
    DELETE                         shift and go to state 313
    CASE                           shift and go to state 314

state 613

    (44) CONTENIDOP -> do dolarn . LISTACONTENIDO dolarn
    (89) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (90) LISTACONTENIDO -> . CONTENIDO
    (91) CONTENIDO -> . ASIGNACION ptcoma
    (92) CONTENIDO -> . CONDICIONIF ptcoma
    (93) CONTENIDO -> . RAISE ptcoma
    (94) CONTENIDO -> . BEGINEND ptcoma
    (95) CONTENIDO -> . CALLPROCEDURE ptcoma
    (96) CONTENIDO -> . declare LDEC
    (97) CONTENIDO -> . RETURN ptcoma
    (98) CONTENIDO -> . INSERT ptcoma
    (99) CONTENIDO -> . SELECT ptcoma
    (100) CONTENIDO -> . UPDATE ptcoma
    (101) CONTENIDO -> . DELETE ptcoma
    (102) CONTENIDO -> . CASE ptcoma
    (76) ASIGNACION -> . id dospuntos igual EXP
    (77) ASIGNACION -> . id igual EXP
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (80) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (81) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (103) RAISE -> . raise LEVEL FORMAT
    (104) RAISE -> . raise LEVEL EXP
    (105) RAISE -> . raise LEVEL
    (106) RAISE -> . raise
    (107) RAISE -> . raise LEVEL cadena coma id
    (51) BEGINEND -> . begin LISTACONTENIDO end
    (35) CALLPROCEDURE -> . execute id para LEXP parc
    (36) CALLPROCEDURE -> . execute id para parc
    (26) RETURN -> . return EXP
    (118) INSERT -> . insert into id values para LEXP parc
    (119) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (228) UPDATE -> . update id set LCAMPOS WHERE
    (231) DELETE -> . delete r_from id WHERE
    (85) CASE -> . case EXP LISTAWHEN ELSEF end case
    (86) CASE -> . case EXP LISTAWHEN end case
    (87) CASE -> . case LISTAWHEN ELSEF end case
    (88) CASE -> . case LISTAWHEN end case

    declare         shift and go to state 308
    id              shift and go to state 17
    if              shift and go to state 31
    raise           shift and go to state 315
    begin           shift and go to state 316
    execute         shift and go to state 36
    return          shift and go to state 317
    insert          shift and go to state 33
    select          shift and go to state 26
    update          shift and go to state 28
    delete          shift and go to state 29
    case            shift and go to state 34

    LISTACONTENIDO                 shift and go to state 699
    CONTENIDO                      shift and go to state 302
    ASIGNACION                     shift and go to state 303
    CONDICIONIF                    shift and go to state 304
    RAISE                          shift and go to state 305
    BEGINEND                       shift and go to state 306
    CALLPROCEDURE                  shift and go to state 307
    RETURN                         shift and go to state 309
    INSERT                         shift and go to state 310
    SELECT                         shift and go to state 311
    UPDATE                         shift and go to state 312
    DELETE                         shift and go to state 313
    CASE                           shift and go to state 314

state 614

    (47) LPARAM -> inout id TIPO .

    parc            reduce using rule 47 (LPARAM -> inout id TIPO .)
    coma            reduce using rule 47 (LPARAM -> inout id TIPO .)


state 615

    (27) FUNCIONES -> create function id para LPARAM parc RETURNP . LENGUAJE LCONTENIDOP
    (29) FUNCIONES -> create function id para LPARAM parc RETURNP . LCONTENIDOP LENGUAJE
    (49) LENGUAJE -> . language plpgsql
    (50) LENGUAJE -> . language plpgsql ptcoma
    (41) LCONTENIDOP -> . LCONTENIDOP CONTENIDOP
    (42) LCONTENIDOP -> . CONTENIDOP
    (43) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (44) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn

    language        shift and go to state 509
    as              shift and go to state 511
    do              shift and go to state 512

    LENGUAJE                       shift and go to state 700
    LCONTENIDOP                    shift and go to state 701
    CONTENIDOP                     shift and go to state 510

state 616

    (28) FUNCIONES -> create function id para parc RETURNP LENGUAJE . LCONTENIDOP
    (41) LCONTENIDOP -> . LCONTENIDOP CONTENIDOP
    (42) LCONTENIDOP -> . CONTENIDOP
    (43) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (44) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn

    as              shift and go to state 511
    do              shift and go to state 512

    LCONTENIDOP                    shift and go to state 702
    CONTENIDOP                     shift and go to state 510

state 617

    (30) FUNCIONES -> create function id para parc RETURNP LCONTENIDOP . LENGUAJE
    (41) LCONTENIDOP -> LCONTENIDOP . CONTENIDOP
    (49) LENGUAJE -> . language plpgsql
    (50) LENGUAJE -> . language plpgsql ptcoma
    (43) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (44) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn

    language        shift and go to state 509
    as              shift and go to state 511
    do              shift and go to state 512

    LENGUAJE                       shift and go to state 703
    CONTENIDOP                     shift and go to state 610

state 618

    (34) RETURNP -> returns TIPO .

    language        reduce using rule 34 (RETURNP -> returns TIPO .)
    as              reduce using rule 34 (RETURNP -> returns TIPO .)
    do              reduce using rule 34 (RETURNP -> returns TIPO .)


state 619

    (229) LCAMPOS -> LCAMPOS coma id igual . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 704
    SELECT                         shift and go to state 74

state 620

    (141) OP -> alter column id set . not null
    (142) OP -> alter column id set . null

    not             shift and go to state 705
    null            shift and go to state 706


state 621

    (147) OP -> alter column id type . TIPO
    (236) TIPO -> . interval cadena
    (237) TIPO -> . decimal para int coma int parc
    (238) TIPO -> . decimal para int parc
    (239) TIPO -> . decimal
    (240) TIPO -> . numeric para int coma int parc
    (241) TIPO -> . numeric para int parc
    (242) TIPO -> . numeric
    (243) TIPO -> . varchar para int parc
    (244) TIPO -> . timestamp para int parc
    (245) TIPO -> . character para int parc
    (246) TIPO -> . interval para int parc
    (247) TIPO -> . char para int parc
    (248) TIPO -> . time para int parc
    (249) TIPO -> . character varying para int parc
    (250) TIPO -> . id modulo rowtype
    (251) TIPO -> . idPunto modulo type
    (252) TIPO -> . timestamp para int parc without time zone
    (253) TIPO -> . timestamp para int parc with time zone
    (254) TIPO -> . time para int parc without time zone
    (255) TIPO -> . time para int parc with time zone
    (256) TIPO -> . interval para int parc cadena
    (257) TIPO -> . smallint
    (258) TIPO -> . integer
    (259) TIPO -> . r_int
    (260) TIPO -> . bigint
    (261) TIPO -> . real
    (262) TIPO -> . double precision
    (263) TIPO -> . money
    (264) TIPO -> . text
    (265) TIPO -> . timestamp
    (266) TIPO -> . date
    (267) TIPO -> . time
    (268) TIPO -> . interval
    (269) TIPO -> . boolean
    (270) TIPO -> . record
    (271) TIPO -> . varchar
    (272) TIPO -> . timestamp without time zone
    (273) TIPO -> . timestamp with time zone
    (274) TIPO -> . time without time zone
    (275) TIPO -> . time with time zone
    (276) TIPO -> . id

    interval        shift and go to state 241
    decimal         shift and go to state 242
    numeric         shift and go to state 243
    varchar         shift and go to state 244
    timestamp       shift and go to state 245
    character       shift and go to state 246
    char            shift and go to state 247
    time            shift and go to state 248
    id              shift and go to state 249
    idPunto         shift and go to state 250
    smallint        shift and go to state 251
    integer         shift and go to state 252
    r_int           shift and go to state 253
    bigint          shift and go to state 254
    real            shift and go to state 255
    double          shift and go to state 256
    money           shift and go to state 257
    text            shift and go to state 258
    date            shift and go to state 259
    boolean         shift and go to state 260
    record          shift and go to state 261

    TIPO                           shift and go to state 707

state 622

    (134) OP -> add column id TIPO .

    coma            reduce using rule 134 (OP -> add column id TIPO .)
    ptcoma          reduce using rule 134 (OP -> add column id TIPO .)


state 623

    (135) OP -> add check para CONDCHECK . parc

    parc            shift and go to state 708


state 624

    (136) OP -> add constraint id check . para CONDCHECK parc

    para            shift and go to state 709


state 625

    (137) OP -> add constraint id unique . para LEXP parc

    para            shift and go to state 710


state 626

    (140) OP -> add constraint id foreign . key para LEXP parc references id para LEXP parc

    key             shift and go to state 711


state 627

    (138) OP -> add unique para LEXP . parc
    (234) LEXP -> LEXP . coma EXP

    parc            shift and go to state 712
    coma            shift and go to state 128


state 628

    (139) OP -> add foreign key para . LEXP parc references id para LEXP parc
    (234) LEXP -> . LEXP coma EXP
    (235) LEXP -> . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    LEXP                           shift and go to state 713
    EXP                            shift and go to state 62
    SELECT                         shift and go to state 74

state 629

    (146) OP -> rename column id to . id

    id              shift and go to state 714


state 630

    (129) ALTER -> alter index if exist id alter EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    ptcoma          reduce using rule 129 (ALTER -> alter index if exist id alter EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    and             shift and go to state 135
    or              shift and go to state 136
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143
    between         shift and go to state 144
    is              shift and go to state 145
    isnull          shift and go to state 147
    notnull         shift and go to state 148
    as              shift and go to state 149
    cadenaString    shift and go to state 150
    cadena          shift and go to state 151
    id              shift and go to state 152
    in              shift and go to state 153
    not             shift and go to state 146
    like            shift and go to state 154


state 631

    (131) ALTER -> alter index if exist id alter column . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 715
    SELECT                         shift and go to state 74

state 632

    (78) CONDICIONIF -> if EXP then LISTACONTENIDO ELSEF end if .

    ptcoma          reduce using rule 78 (CONDICIONIF -> if EXP then LISTACONTENIDO ELSEF end if .)


state 633

    (79) CONDICIONIF -> if EXP then LISTACONTENIDO LELIF end if .

    ptcoma          reduce using rule 79 (CONDICIONIF -> if EXP then LISTACONTENIDO LELIF end if .)


state 634

    (81) CONDICIONIF -> if EXP then LISTACONTENIDO LELIF ELSEF end . if

    if              shift and go to state 716


state 635

    (82) LELIF -> LELIF elsif EXP . then LISTACONTENIDO
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    then            shift and go to state 717
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    and             shift and go to state 135
    or              shift and go to state 136
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143
    between         shift and go to state 144
    is              shift and go to state 145
    isnull          shift and go to state 147
    notnull         shift and go to state 148
    as              shift and go to state 149
    cadenaString    shift and go to state 150
    cadena          shift and go to state 151
    id              shift and go to state 152
    in              shift and go to state 153
    not             shift and go to state 146
    like            shift and go to state 154


state 636

    (83) LELIF -> elsif EXP then . LISTACONTENIDO
    (89) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (90) LISTACONTENIDO -> . CONTENIDO
    (91) CONTENIDO -> . ASIGNACION ptcoma
    (92) CONTENIDO -> . CONDICIONIF ptcoma
    (93) CONTENIDO -> . RAISE ptcoma
    (94) CONTENIDO -> . BEGINEND ptcoma
    (95) CONTENIDO -> . CALLPROCEDURE ptcoma
    (96) CONTENIDO -> . declare LDEC
    (97) CONTENIDO -> . RETURN ptcoma
    (98) CONTENIDO -> . INSERT ptcoma
    (99) CONTENIDO -> . SELECT ptcoma
    (100) CONTENIDO -> . UPDATE ptcoma
    (101) CONTENIDO -> . DELETE ptcoma
    (102) CONTENIDO -> . CASE ptcoma
    (76) ASIGNACION -> . id dospuntos igual EXP
    (77) ASIGNACION -> . id igual EXP
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (80) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (81) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (103) RAISE -> . raise LEVEL FORMAT
    (104) RAISE -> . raise LEVEL EXP
    (105) RAISE -> . raise LEVEL
    (106) RAISE -> . raise
    (107) RAISE -> . raise LEVEL cadena coma id
    (51) BEGINEND -> . begin LISTACONTENIDO end
    (35) CALLPROCEDURE -> . execute id para LEXP parc
    (36) CALLPROCEDURE -> . execute id para parc
    (26) RETURN -> . return EXP
    (118) INSERT -> . insert into id values para LEXP parc
    (119) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (228) UPDATE -> . update id set LCAMPOS WHERE
    (231) DELETE -> . delete r_from id WHERE
    (85) CASE -> . case EXP LISTAWHEN ELSEF end case
    (86) CASE -> . case EXP LISTAWHEN end case
    (87) CASE -> . case LISTAWHEN ELSEF end case
    (88) CASE -> . case LISTAWHEN end case

    declare         shift and go to state 308
    id              shift and go to state 17
    if              shift and go to state 31
    raise           shift and go to state 315
    begin           shift and go to state 316
    execute         shift and go to state 36
    return          shift and go to state 317
    insert          shift and go to state 33
    select          shift and go to state 26
    update          shift and go to state 28
    delete          shift and go to state 29
    case            shift and go to state 34

    LISTACONTENIDO                 shift and go to state 718
    CONTENIDO                      shift and go to state 302
    ASIGNACION                     shift and go to state 303
    CONDICIONIF                    shift and go to state 304
    RAISE                          shift and go to state 305
    BEGINEND                       shift and go to state 306
    CALLPROCEDURE                  shift and go to state 307
    RETURN                         shift and go to state 309
    INSERT                         shift and go to state 310
    SELECT                         shift and go to state 311
    UPDATE                         shift and go to state 312
    DELETE                         shift and go to state 313
    CASE                           shift and go to state 314

state 637

    (68) DECLARACIONES -> id TIPO not . null ASIG ptcoma

    null            shift and go to state 719


state 638

    (69) DECLARACIONES -> id TIPO ASIG . ptcoma

    ptcoma          shift and go to state 720


state 639

    (72) ASIG -> default . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 721
    SELECT                         shift and go to state 74

state 640

    (73) ASIG -> dospuntos . igual EXP

    igual           shift and go to state 722


state 641

    (74) ASIG -> igual . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 723
    SELECT                         shift and go to state 74

state 642

    (70) DECLARACIONES -> id constant TIPO . not null ASIG ptcoma
    (71) DECLARACIONES -> id constant TIPO . ASIG ptcoma
    (72) ASIG -> . default EXP
    (73) ASIG -> . dospuntos igual EXP
    (74) ASIG -> . igual EXP
    (75) ASIG -> .

    not             shift and go to state 724
    default         shift and go to state 639
    dospuntos       shift and go to state 640
    igual           shift and go to state 641
    ptcoma          reduce using rule 75 (ASIG -> .)

    ASIG                           shift and go to state 725

state 643

    (107) RAISE -> raise LEVEL cadena coma . id

    id              shift and go to state 726


state 644

    (113) FORMAT -> format para . EXP coma LEXP parc
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 727
    SELECT                         shift and go to state 74

state 645

    (118) INSERT -> insert into id values para LEXP parc .

    ptcoma          reduce using rule 118 (INSERT -> insert into id values para LEXP parc .)


state 646

    (119) INSERT -> insert into id para LEXP parc values . para LEXP parc

    para            shift and go to state 728


state 647

    (200) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING . COMBINING ORDER LIMIT
    (214) COMBINING -> . union EXP
    (215) COMBINING -> . union all EXP
    (216) COMBINING -> . intersect EXP
    (217) COMBINING -> . except EXP
    (218) COMBINING -> .

  ! shift/reduce conflict for union resolved as shift
  ! shift/reduce conflict for intersect resolved as shift
  ! shift/reduce conflict for except resolved as shift
    union           shift and go to state 461
    intersect       shift and go to state 462
    except          shift and go to state 463
    r_from          reduce using rule 218 (COMBINING -> .)
    coma            reduce using rule 218 (COMBINING -> .)
    where           reduce using rule 218 (COMBINING -> .)
    group           reduce using rule 218 (COMBINING -> .)
    having          reduce using rule 218 (COMBINING -> .)
    order           reduce using rule 218 (COMBINING -> .)
    limit           reduce using rule 218 (COMBINING -> .)
    offset          reduce using rule 218 (COMBINING -> .)
    ptcoma          reduce using rule 218 (COMBINING -> .)
    mas             reduce using rule 218 (COMBINING -> .)
    menos           reduce using rule 218 (COMBINING -> .)
    multiplicacion  reduce using rule 218 (COMBINING -> .)
    division        reduce using rule 218 (COMBINING -> .)
    modulo          reduce using rule 218 (COMBINING -> .)
    elevado         reduce using rule 218 (COMBINING -> .)
    and             reduce using rule 218 (COMBINING -> .)
    or              reduce using rule 218 (COMBINING -> .)
    mayor           reduce using rule 218 (COMBINING -> .)
    menor           reduce using rule 218 (COMBINING -> .)
    mayor_igual     reduce using rule 218 (COMBINING -> .)
    menor_igual     reduce using rule 218 (COMBINING -> .)
    igual           reduce using rule 218 (COMBINING -> .)
    diferente1      reduce using rule 218 (COMBINING -> .)
    diferente2      reduce using rule 218 (COMBINING -> .)
    between         reduce using rule 218 (COMBINING -> .)
    is              reduce using rule 218 (COMBINING -> .)
    isnull          reduce using rule 218 (COMBINING -> .)
    notnull         reduce using rule 218 (COMBINING -> .)
    as              reduce using rule 218 (COMBINING -> .)
    cadenaString    reduce using rule 218 (COMBINING -> .)
    cadena          reduce using rule 218 (COMBINING -> .)
    id              reduce using rule 218 (COMBINING -> .)
    in              reduce using rule 218 (COMBINING -> .)
    not             reduce using rule 218 (COMBINING -> .)
    like            reduce using rule 218 (COMBINING -> .)
    then            reduce using rule 218 (COMBINING -> .)
    when            reduce using rule 218 (COMBINING -> .)
    parc            reduce using rule 218 (COMBINING -> .)
    constraint      reduce using rule 218 (COMBINING -> .)
    unique          reduce using rule 218 (COMBINING -> .)
    check           reduce using rule 218 (COMBINING -> .)
    default         reduce using rule 218 (COMBINING -> .)
    null            reduce using rule 218 (COMBINING -> .)
    primary         reduce using rule 218 (COMBINING -> .)
    references      reduce using rule 218 (COMBINING -> .)
    asc             reduce using rule 218 (COMBINING -> .)
    desc            reduce using rule 218 (COMBINING -> .)

  ! union           [ reduce using rule 218 (COMBINING -> .) ]
  ! intersect       [ reduce using rule 218 (COMBINING -> .) ]
  ! except          [ reduce using rule 218 (COMBINING -> .) ]

    COMBINING                      shift and go to state 729

state 648

    (201) SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING . ORDER LIMIT
    (223) ORDER -> . order by LEXP ORD
    (224) ORDER -> . order by LEXP
    (225) ORDER -> .

  ! shift/reduce conflict for order resolved as shift
    order           shift and go to state 555
    r_from          reduce using rule 225 (ORDER -> .)
    coma            reduce using rule 225 (ORDER -> .)
    where           reduce using rule 225 (ORDER -> .)
    group           reduce using rule 225 (ORDER -> .)
    having          reduce using rule 225 (ORDER -> .)
    union           reduce using rule 225 (ORDER -> .)
    intersect       reduce using rule 225 (ORDER -> .)
    except          reduce using rule 225 (ORDER -> .)
    limit           reduce using rule 225 (ORDER -> .)
    offset          reduce using rule 225 (ORDER -> .)
    ptcoma          reduce using rule 225 (ORDER -> .)
    mas             reduce using rule 225 (ORDER -> .)
    menos           reduce using rule 225 (ORDER -> .)
    multiplicacion  reduce using rule 225 (ORDER -> .)
    division        reduce using rule 225 (ORDER -> .)
    modulo          reduce using rule 225 (ORDER -> .)
    elevado         reduce using rule 225 (ORDER -> .)
    and             reduce using rule 225 (ORDER -> .)
    or              reduce using rule 225 (ORDER -> .)
    mayor           reduce using rule 225 (ORDER -> .)
    menor           reduce using rule 225 (ORDER -> .)
    mayor_igual     reduce using rule 225 (ORDER -> .)
    menor_igual     reduce using rule 225 (ORDER -> .)
    igual           reduce using rule 225 (ORDER -> .)
    diferente1      reduce using rule 225 (ORDER -> .)
    diferente2      reduce using rule 225 (ORDER -> .)
    between         reduce using rule 225 (ORDER -> .)
    is              reduce using rule 225 (ORDER -> .)
    isnull          reduce using rule 225 (ORDER -> .)
    notnull         reduce using rule 225 (ORDER -> .)
    as              reduce using rule 225 (ORDER -> .)
    cadenaString    reduce using rule 225 (ORDER -> .)
    cadena          reduce using rule 225 (ORDER -> .)
    id              reduce using rule 225 (ORDER -> .)
    in              reduce using rule 225 (ORDER -> .)
    not             reduce using rule 225 (ORDER -> .)
    like            reduce using rule 225 (ORDER -> .)
    then            reduce using rule 225 (ORDER -> .)
    when            reduce using rule 225 (ORDER -> .)
    parc            reduce using rule 225 (ORDER -> .)
    constraint      reduce using rule 225 (ORDER -> .)
    unique          reduce using rule 225 (ORDER -> .)
    check           reduce using rule 225 (ORDER -> .)
    default         reduce using rule 225 (ORDER -> .)
    null            reduce using rule 225 (ORDER -> .)
    primary         reduce using rule 225 (ORDER -> .)
    references      reduce using rule 225 (ORDER -> .)
    asc             reduce using rule 225 (ORDER -> .)
    desc            reduce using rule 225 (ORDER -> .)

  ! order           [ reduce using rule 225 (ORDER -> .) ]

    ORDER                          shift and go to state 730

state 649

    (202) SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .

    ptcoma          reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    r_from          reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    coma            reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    where           reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    group           reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    having          reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    union           reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    intersect       reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    except          reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    order           reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    limit           reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    offset          reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mas             reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menos           reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    multiplicacion  reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    division        reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    modulo          reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    elevado         reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    and             reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    or              reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor           reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor           reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor_igual     reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor_igual     reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    igual           reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente1      reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente2      reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    between         reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    is              reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    isnull          reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    notnull         reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    as              reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadenaString    reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadena          reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    id              reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    in              reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    not             reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    like            reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    then            reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    when            reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    parc            reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    constraint      reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    unique          reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    check           reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    default         reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    null            reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    primary         reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    references      reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    asc             reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    desc            reduce using rule 202 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)


state 650

    (203) LIMIT -> limit . int
    (204) LIMIT -> limit . all
    (206) LIMIT -> limit . int offset int
    (208) LIMIT -> limit . all offset int

    int             shift and go to state 731
    all             shift and go to state 732


state 651

    (205) LIMIT -> offset . int
    (207) LIMIT -> offset . int limit int
    (209) LIMIT -> offset . int limit all

    int             shift and go to state 733


state 652

    (223) ORDER -> order by . LEXP ORD
    (224) ORDER -> order by . LEXP
    (234) LEXP -> . LEXP coma EXP
    (235) LEXP -> . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    LEXP                           shift and go to state 734
    EXP                            shift and go to state 62
    SELECT                         shift and go to state 74

state 653

    (215) COMBINING -> union all EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    r_from          reduce using rule 215 (COMBINING -> union all EXP .)
    coma            reduce using rule 215 (COMBINING -> union all EXP .)
    where           reduce using rule 215 (COMBINING -> union all EXP .)
    group           reduce using rule 215 (COMBINING -> union all EXP .)
    having          reduce using rule 215 (COMBINING -> union all EXP .)
    union           reduce using rule 215 (COMBINING -> union all EXP .)
    intersect       reduce using rule 215 (COMBINING -> union all EXP .)
    except          reduce using rule 215 (COMBINING -> union all EXP .)
    order           reduce using rule 215 (COMBINING -> union all EXP .)
    limit           reduce using rule 215 (COMBINING -> union all EXP .)
    offset          reduce using rule 215 (COMBINING -> union all EXP .)
    ptcoma          reduce using rule 215 (COMBINING -> union all EXP .)
    then            reduce using rule 215 (COMBINING -> union all EXP .)
    when            reduce using rule 215 (COMBINING -> union all EXP .)
    parc            reduce using rule 215 (COMBINING -> union all EXP .)
    constraint      reduce using rule 215 (COMBINING -> union all EXP .)
    unique          reduce using rule 215 (COMBINING -> union all EXP .)
    check           reduce using rule 215 (COMBINING -> union all EXP .)
    default         reduce using rule 215 (COMBINING -> union all EXP .)
    null            reduce using rule 215 (COMBINING -> union all EXP .)
    primary         reduce using rule 215 (COMBINING -> union all EXP .)
    references      reduce using rule 215 (COMBINING -> union all EXP .)
    asc             reduce using rule 215 (COMBINING -> union all EXP .)
    desc            reduce using rule 215 (COMBINING -> union all EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    and             shift and go to state 135
    or              shift and go to state 136
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143
    between         shift and go to state 144
    is              shift and go to state 145
    isnull          shift and go to state 147
    notnull         shift and go to state 148
    as              shift and go to state 149
    cadenaString    shift and go to state 150
    cadena          shift and go to state 151
    id              shift and go to state 152
    in              shift and go to state 153
    not             shift and go to state 146
    like            shift and go to state 154

  ! mas             [ reduce using rule 215 (COMBINING -> union all EXP .) ]
  ! menos           [ reduce using rule 215 (COMBINING -> union all EXP .) ]
  ! multiplicacion  [ reduce using rule 215 (COMBINING -> union all EXP .) ]
  ! division        [ reduce using rule 215 (COMBINING -> union all EXP .) ]
  ! modulo          [ reduce using rule 215 (COMBINING -> union all EXP .) ]
  ! elevado         [ reduce using rule 215 (COMBINING -> union all EXP .) ]
  ! and             [ reduce using rule 215 (COMBINING -> union all EXP .) ]
  ! or              [ reduce using rule 215 (COMBINING -> union all EXP .) ]
  ! mayor           [ reduce using rule 215 (COMBINING -> union all EXP .) ]
  ! menor           [ reduce using rule 215 (COMBINING -> union all EXP .) ]
  ! mayor_igual     [ reduce using rule 215 (COMBINING -> union all EXP .) ]
  ! menor_igual     [ reduce using rule 215 (COMBINING -> union all EXP .) ]
  ! igual           [ reduce using rule 215 (COMBINING -> union all EXP .) ]
  ! diferente1      [ reduce using rule 215 (COMBINING -> union all EXP .) ]
  ! diferente2      [ reduce using rule 215 (COMBINING -> union all EXP .) ]
  ! between         [ reduce using rule 215 (COMBINING -> union all EXP .) ]
  ! is              [ reduce using rule 215 (COMBINING -> union all EXP .) ]
  ! isnull          [ reduce using rule 215 (COMBINING -> union all EXP .) ]
  ! notnull         [ reduce using rule 215 (COMBINING -> union all EXP .) ]
  ! as              [ reduce using rule 215 (COMBINING -> union all EXP .) ]
  ! cadenaString    [ reduce using rule 215 (COMBINING -> union all EXP .) ]
  ! cadena          [ reduce using rule 215 (COMBINING -> union all EXP .) ]
  ! id              [ reduce using rule 215 (COMBINING -> union all EXP .) ]
  ! in              [ reduce using rule 215 (COMBINING -> union all EXP .) ]
  ! not             [ reduce using rule 215 (COMBINING -> union all EXP .) ]
  ! like            [ reduce using rule 215 (COMBINING -> union all EXP .) ]


state 654

    (332) EXP -> all para . LEXP parc
    (328) EXP -> para . EXP parc
    (234) LEXP -> . LEXP coma EXP
    (235) LEXP -> . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    LEXP                           shift and go to state 266
    EXP                            shift and go to state 735
    SELECT                         shift and go to state 74

state 655

    (256) TIPO -> interval para int parc cadena .

    r_from          reduce using rule 256 (TIPO -> interval para int parc cadena .)
    coma            reduce using rule 256 (TIPO -> interval para int parc cadena .)
    where           reduce using rule 256 (TIPO -> interval para int parc cadena .)
    group           reduce using rule 256 (TIPO -> interval para int parc cadena .)
    having          reduce using rule 256 (TIPO -> interval para int parc cadena .)
    union           reduce using rule 256 (TIPO -> interval para int parc cadena .)
    intersect       reduce using rule 256 (TIPO -> interval para int parc cadena .)
    except          reduce using rule 256 (TIPO -> interval para int parc cadena .)
    order           reduce using rule 256 (TIPO -> interval para int parc cadena .)
    limit           reduce using rule 256 (TIPO -> interval para int parc cadena .)
    offset          reduce using rule 256 (TIPO -> interval para int parc cadena .)
    ptcoma          reduce using rule 256 (TIPO -> interval para int parc cadena .)
    mas             reduce using rule 256 (TIPO -> interval para int parc cadena .)
    menos           reduce using rule 256 (TIPO -> interval para int parc cadena .)
    multiplicacion  reduce using rule 256 (TIPO -> interval para int parc cadena .)
    division        reduce using rule 256 (TIPO -> interval para int parc cadena .)
    modulo          reduce using rule 256 (TIPO -> interval para int parc cadena .)
    elevado         reduce using rule 256 (TIPO -> interval para int parc cadena .)
    and             reduce using rule 256 (TIPO -> interval para int parc cadena .)
    or              reduce using rule 256 (TIPO -> interval para int parc cadena .)
    mayor           reduce using rule 256 (TIPO -> interval para int parc cadena .)
    menor           reduce using rule 256 (TIPO -> interval para int parc cadena .)
    mayor_igual     reduce using rule 256 (TIPO -> interval para int parc cadena .)
    menor_igual     reduce using rule 256 (TIPO -> interval para int parc cadena .)
    igual           reduce using rule 256 (TIPO -> interval para int parc cadena .)
    diferente1      reduce using rule 256 (TIPO -> interval para int parc cadena .)
    diferente2      reduce using rule 256 (TIPO -> interval para int parc cadena .)
    between         reduce using rule 256 (TIPO -> interval para int parc cadena .)
    is              reduce using rule 256 (TIPO -> interval para int parc cadena .)
    isnull          reduce using rule 256 (TIPO -> interval para int parc cadena .)
    notnull         reduce using rule 256 (TIPO -> interval para int parc cadena .)
    as              reduce using rule 256 (TIPO -> interval para int parc cadena .)
    cadenaString    reduce using rule 256 (TIPO -> interval para int parc cadena .)
    cadena          reduce using rule 256 (TIPO -> interval para int parc cadena .)
    id              reduce using rule 256 (TIPO -> interval para int parc cadena .)
    in              reduce using rule 256 (TIPO -> interval para int parc cadena .)
    not             reduce using rule 256 (TIPO -> interval para int parc cadena .)
    like            reduce using rule 256 (TIPO -> interval para int parc cadena .)
    then            reduce using rule 256 (TIPO -> interval para int parc cadena .)
    when            reduce using rule 256 (TIPO -> interval para int parc cadena .)
    parc            reduce using rule 256 (TIPO -> interval para int parc cadena .)
    constraint      reduce using rule 256 (TIPO -> interval para int parc cadena .)
    unique          reduce using rule 256 (TIPO -> interval para int parc cadena .)
    check           reduce using rule 256 (TIPO -> interval para int parc cadena .)
    default         reduce using rule 256 (TIPO -> interval para int parc cadena .)
    null            reduce using rule 256 (TIPO -> interval para int parc cadena .)
    primary         reduce using rule 256 (TIPO -> interval para int parc cadena .)
    references      reduce using rule 256 (TIPO -> interval para int parc cadena .)
    asc             reduce using rule 256 (TIPO -> interval para int parc cadena .)
    desc            reduce using rule 256 (TIPO -> interval para int parc cadena .)
    dospuntos       reduce using rule 256 (TIPO -> interval para int parc cadena .)
    language        reduce using rule 256 (TIPO -> interval para int parc cadena .)
    do              reduce using rule 256 (TIPO -> interval para int parc cadena .)


state 656

    (237) TIPO -> decimal para int coma int . parc

    parc            shift and go to state 736


state 657

    (240) TIPO -> numeric para int coma int . parc

    parc            shift and go to state 737


state 658

    (252) TIPO -> timestamp para int parc without . time zone

    time            shift and go to state 738


state 659

    (253) TIPO -> timestamp para int parc with . time zone

    time            shift and go to state 739


state 660

    (249) TIPO -> character varying para int parc .

    r_from          reduce using rule 249 (TIPO -> character varying para int parc .)
    coma            reduce using rule 249 (TIPO -> character varying para int parc .)
    where           reduce using rule 249 (TIPO -> character varying para int parc .)
    group           reduce using rule 249 (TIPO -> character varying para int parc .)
    having          reduce using rule 249 (TIPO -> character varying para int parc .)
    union           reduce using rule 249 (TIPO -> character varying para int parc .)
    intersect       reduce using rule 249 (TIPO -> character varying para int parc .)
    except          reduce using rule 249 (TIPO -> character varying para int parc .)
    order           reduce using rule 249 (TIPO -> character varying para int parc .)
    limit           reduce using rule 249 (TIPO -> character varying para int parc .)
    offset          reduce using rule 249 (TIPO -> character varying para int parc .)
    ptcoma          reduce using rule 249 (TIPO -> character varying para int parc .)
    mas             reduce using rule 249 (TIPO -> character varying para int parc .)
    menos           reduce using rule 249 (TIPO -> character varying para int parc .)
    multiplicacion  reduce using rule 249 (TIPO -> character varying para int parc .)
    division        reduce using rule 249 (TIPO -> character varying para int parc .)
    modulo          reduce using rule 249 (TIPO -> character varying para int parc .)
    elevado         reduce using rule 249 (TIPO -> character varying para int parc .)
    and             reduce using rule 249 (TIPO -> character varying para int parc .)
    or              reduce using rule 249 (TIPO -> character varying para int parc .)
    mayor           reduce using rule 249 (TIPO -> character varying para int parc .)
    menor           reduce using rule 249 (TIPO -> character varying para int parc .)
    mayor_igual     reduce using rule 249 (TIPO -> character varying para int parc .)
    menor_igual     reduce using rule 249 (TIPO -> character varying para int parc .)
    igual           reduce using rule 249 (TIPO -> character varying para int parc .)
    diferente1      reduce using rule 249 (TIPO -> character varying para int parc .)
    diferente2      reduce using rule 249 (TIPO -> character varying para int parc .)
    between         reduce using rule 249 (TIPO -> character varying para int parc .)
    is              reduce using rule 249 (TIPO -> character varying para int parc .)
    isnull          reduce using rule 249 (TIPO -> character varying para int parc .)
    notnull         reduce using rule 249 (TIPO -> character varying para int parc .)
    as              reduce using rule 249 (TIPO -> character varying para int parc .)
    cadenaString    reduce using rule 249 (TIPO -> character varying para int parc .)
    cadena          reduce using rule 249 (TIPO -> character varying para int parc .)
    id              reduce using rule 249 (TIPO -> character varying para int parc .)
    in              reduce using rule 249 (TIPO -> character varying para int parc .)
    not             reduce using rule 249 (TIPO -> character varying para int parc .)
    like            reduce using rule 249 (TIPO -> character varying para int parc .)
    then            reduce using rule 249 (TIPO -> character varying para int parc .)
    when            reduce using rule 249 (TIPO -> character varying para int parc .)
    parc            reduce using rule 249 (TIPO -> character varying para int parc .)
    constraint      reduce using rule 249 (TIPO -> character varying para int parc .)
    unique          reduce using rule 249 (TIPO -> character varying para int parc .)
    check           reduce using rule 249 (TIPO -> character varying para int parc .)
    default         reduce using rule 249 (TIPO -> character varying para int parc .)
    null            reduce using rule 249 (TIPO -> character varying para int parc .)
    primary         reduce using rule 249 (TIPO -> character varying para int parc .)
    references      reduce using rule 249 (TIPO -> character varying para int parc .)
    asc             reduce using rule 249 (TIPO -> character varying para int parc .)
    desc            reduce using rule 249 (TIPO -> character varying para int parc .)
    dospuntos       reduce using rule 249 (TIPO -> character varying para int parc .)
    language        reduce using rule 249 (TIPO -> character varying para int parc .)
    do              reduce using rule 249 (TIPO -> character varying para int parc .)


state 661

    (254) TIPO -> time para int parc without . time zone

    time            shift and go to state 740


state 662

    (255) TIPO -> time para int parc with . time zone

    time            shift and go to state 741


state 663

    (334) EXP -> extract para FIELDS r_from timestamp cadena parc .

    r_from          reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    coma            reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    where           reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    group           reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    having          reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    union           reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    intersect       reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    except          reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    order           reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    limit           reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    offset          reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    ptcoma          reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    mas             reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    menos           reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    multiplicacion  reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    division        reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    modulo          reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    elevado         reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    and             reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    or              reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    mayor           reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    menor           reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    mayor_igual     reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    menor_igual     reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    igual           reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    diferente1      reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    diferente2      reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    between         reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    is              reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    isnull          reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    notnull         reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    as              reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    cadenaString    reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    cadena          reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    id              reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    in              reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    not             reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    like            reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    then            reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    when            reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    parc            reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    constraint      reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    unique          reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    check           reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    default         reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    null            reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    primary         reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    references      reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    asc             reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    desc            reduce using rule 334 (EXP -> extract para FIELDS r_from timestamp cadena parc .)


state 664

    (176) LOPCOLUMN -> LOPCOLUMN OPCOLUMN .

    constraint      reduce using rule 176 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    unique          reduce using rule 176 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    check           reduce using rule 176 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    default         reduce using rule 176 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    not             reduce using rule 176 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    null            reduce using rule 176 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    primary         reduce using rule 176 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    references      reduce using rule 176 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    parc            reduce using rule 176 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    coma            reduce using rule 176 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)


state 665

    (178) OPCOLUMN -> constraint id . unique
    (180) OPCOLUMN -> constraint id . check para CONDCHECK parc

    unique          shift and go to state 742
    check           shift and go to state 743


state 666

    (181) OPCOLUMN -> check para . CONDCHECK parc
    (191) CONDCHECK -> . EXP mayor EXP
    (192) CONDCHECK -> . EXP menor EXP
    (193) CONDCHECK -> . EXP mayor_igual EXP
    (194) CONDCHECK -> . EXP menor_igual EXP
    (195) CONDCHECK -> . EXP igual EXP
    (196) CONDCHECK -> . EXP diferente1 EXP
    (197) CONDCHECK -> . EXP diferente2 EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    CONDCHECK                      shift and go to state 744
    EXP                            shift and go to state 597
    SELECT                         shift and go to state 74

state 667

    (182) OPCOLUMN -> default EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

  ! shift/reduce conflict for not resolved as shift
    constraint      reduce using rule 182 (OPCOLUMN -> default EXP .)
    unique          reduce using rule 182 (OPCOLUMN -> default EXP .)
    check           reduce using rule 182 (OPCOLUMN -> default EXP .)
    default         reduce using rule 182 (OPCOLUMN -> default EXP .)
    null            reduce using rule 182 (OPCOLUMN -> default EXP .)
    primary         reduce using rule 182 (OPCOLUMN -> default EXP .)
    references      reduce using rule 182 (OPCOLUMN -> default EXP .)
    parc            reduce using rule 182 (OPCOLUMN -> default EXP .)
    coma            reduce using rule 182 (OPCOLUMN -> default EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    and             shift and go to state 135
    or              shift and go to state 136
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143
    between         shift and go to state 144
    is              shift and go to state 145
    isnull          shift and go to state 147
    notnull         shift and go to state 148
    as              shift and go to state 149
    cadenaString    shift and go to state 150
    cadena          shift and go to state 151
    id              shift and go to state 152
    in              shift and go to state 153
    not             shift and go to state 146
    like            shift and go to state 154

  ! not             [ reduce using rule 182 (OPCOLUMN -> default EXP .) ]


state 668

    (183) OPCOLUMN -> not null .

    constraint      reduce using rule 183 (OPCOLUMN -> not null .)
    unique          reduce using rule 183 (OPCOLUMN -> not null .)
    check           reduce using rule 183 (OPCOLUMN -> not null .)
    default         reduce using rule 183 (OPCOLUMN -> not null .)
    not             reduce using rule 183 (OPCOLUMN -> not null .)
    null            reduce using rule 183 (OPCOLUMN -> not null .)
    primary         reduce using rule 183 (OPCOLUMN -> not null .)
    references      reduce using rule 183 (OPCOLUMN -> not null .)
    parc            reduce using rule 183 (OPCOLUMN -> not null .)
    coma            reduce using rule 183 (OPCOLUMN -> not null .)


state 669

    (185) OPCOLUMN -> primary key .

    constraint      reduce using rule 185 (OPCOLUMN -> primary key .)
    unique          reduce using rule 185 (OPCOLUMN -> primary key .)
    check           reduce using rule 185 (OPCOLUMN -> primary key .)
    default         reduce using rule 185 (OPCOLUMN -> primary key .)
    not             reduce using rule 185 (OPCOLUMN -> primary key .)
    null            reduce using rule 185 (OPCOLUMN -> primary key .)
    primary         reduce using rule 185 (OPCOLUMN -> primary key .)
    references      reduce using rule 185 (OPCOLUMN -> primary key .)
    parc            reduce using rule 185 (OPCOLUMN -> primary key .)
    coma            reduce using rule 185 (OPCOLUMN -> primary key .)


state 670

    (186) OPCOLUMN -> references id .

    constraint      reduce using rule 186 (OPCOLUMN -> references id .)
    unique          reduce using rule 186 (OPCOLUMN -> references id .)
    check           reduce using rule 186 (OPCOLUMN -> references id .)
    default         reduce using rule 186 (OPCOLUMN -> references id .)
    not             reduce using rule 186 (OPCOLUMN -> references id .)
    null            reduce using rule 186 (OPCOLUMN -> references id .)
    primary         reduce using rule 186 (OPCOLUMN -> references id .)
    references      reduce using rule 186 (OPCOLUMN -> references id .)
    parc            reduce using rule 186 (OPCOLUMN -> references id .)
    coma            reduce using rule 186 (OPCOLUMN -> references id .)


state 671

    (169) CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .

    use             reduce using rule 169 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    select          reduce using rule 169 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    create          reduce using rule 169 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    update          reduce using rule 169 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    delete          reduce using rule 169 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    alter           reduce using rule 169 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    drop            reduce using rule 169 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    insert          reduce using rule 169 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    case            reduce using rule 169 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    show            reduce using rule 169 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    id              reduce using rule 169 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    if              reduce using rule 169 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    execute         reduce using rule 169 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    $end            reduce using rule 169 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)


state 672

    (198) HERENCIA -> inherits para . id parc

    id              shift and go to state 745


state 673

    (187) OPCONST -> primary key para LEXP . parc
    (234) LEXP -> LEXP . coma EXP

    parc            shift and go to state 746
    coma            shift and go to state 128


state 674

    (188) OPCONST -> foreign key para LEXP . parc references id para LEXP parc
    (234) LEXP -> LEXP . coma EXP

    parc            shift and go to state 747
    coma            shift and go to state 128


state 675

    (189) OPCONST -> unique para LEXP parc .

    parc            reduce using rule 189 (OPCONST -> unique para LEXP parc .)
    coma            reduce using rule 189 (OPCONST -> unique para LEXP parc .)


state 676

    (190) OPCONST -> check para CONDCHECK parc .

    parc            reduce using rule 190 (OPCONST -> check para CONDCHECK parc .)
    coma            reduce using rule 190 (OPCONST -> check para CONDCHECK parc .)


state 677

    (191) CONDCHECK -> EXP mayor . EXP
    (291) EXP -> EXP mayor . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 748
    SELECT                         shift and go to state 74

state 678

    (192) CONDCHECK -> EXP menor . EXP
    (292) EXP -> EXP menor . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 749
    SELECT                         shift and go to state 74

state 679

    (193) CONDCHECK -> EXP mayor_igual . EXP
    (293) EXP -> EXP mayor_igual . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 750
    SELECT                         shift and go to state 74

state 680

    (194) CONDCHECK -> EXP menor_igual . EXP
    (294) EXP -> EXP menor_igual . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 751
    SELECT                         shift and go to state 74

state 681

    (195) CONDCHECK -> EXP igual . EXP
    (295) EXP -> EXP igual . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 752
    SELECT                         shift and go to state 74

state 682

    (196) CONDCHECK -> EXP diferente1 . EXP
    (296) EXP -> EXP diferente1 . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 753
    SELECT                         shift and go to state 74

state 683

    (197) CONDCHECK -> EXP diferente2 . EXP
    (297) EXP -> EXP diferente2 . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 754
    SELECT                         shift and go to state 74

state 684

    (199) CREATETYPE -> create type id as enum para LEXP parc .

    ptcoma          reduce using rule 199 (CREATETYPE -> create type id as enum para LEXP parc .)


state 685

    (56) CREATEINDEX -> create index id on id para id id . ORDEN parc
    (57) CREATEINDEX -> create index id on id para id id . parc
    (58) ORDEN -> . asc
    (59) ORDEN -> . desc
    (60) ORDEN -> . nulls first
    (61) ORDEN -> . nulls last
    (62) ORDEN -> . asc nulls first
    (63) ORDEN -> . desc nulls last
    (64) ORDEN -> . desc nulls first
    (65) ORDEN -> . asc nulls last

    parc            shift and go to state 756
    asc             shift and go to state 687
    desc            shift and go to state 688
    nulls           shift and go to state 689

    ORDEN                          shift and go to state 755

state 686

    (55) CREATEINDEX -> create index id on id para id ORDEN . parc

    parc            shift and go to state 757


state 687

    (58) ORDEN -> asc .
    (62) ORDEN -> asc . nulls first
    (65) ORDEN -> asc . nulls last

    parc            reduce using rule 58 (ORDEN -> asc .)
    nulls           shift and go to state 758


state 688

    (59) ORDEN -> desc .
    (63) ORDEN -> desc . nulls last
    (64) ORDEN -> desc . nulls first

    parc            reduce using rule 59 (ORDEN -> desc .)
    nulls           shift and go to state 759


state 689

    (60) ORDEN -> nulls . first
    (61) ORDEN -> nulls . last

    first           shift and go to state 760
    last            shift and go to state 761


state 690

    (52) CREATEINDEX -> create index id on id para LEXP parc .

    ptcoma          reduce using rule 52 (CREATEINDEX -> create index id on id para LEXP parc .)
    where           reduce using rule 52 (CREATEINDEX -> create index id on id para LEXP parc .)


state 691

    (54) CREATEINDEX -> create index id on id using hash para . LEXP parc
    (234) LEXP -> . LEXP coma EXP
    (235) LEXP -> . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    LEXP                           shift and go to state 762
    EXP                            shift and go to state 62
    SELECT                         shift and go to state 74

state 692

    (53) CREATEINDEX -> create unique index id on id para LEXP . parc
    (234) LEXP -> LEXP . coma EXP

    parc            shift and go to state 763
    coma            shift and go to state 128


state 693

    (37) PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .
    (41) LCONTENIDOP -> LCONTENIDOP . CONTENIDOP
    (43) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (44) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn

    use             reduce using rule 37 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    select          reduce using rule 37 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    create          reduce using rule 37 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    update          reduce using rule 37 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    delete          reduce using rule 37 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    alter           reduce using rule 37 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    drop            reduce using rule 37 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    insert          reduce using rule 37 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    case            reduce using rule 37 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    show            reduce using rule 37 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    id              reduce using rule 37 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    if              reduce using rule 37 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    execute         reduce using rule 37 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    $end            reduce using rule 37 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    as              shift and go to state 511
    do              shift and go to state 512

    CONTENIDOP                     shift and go to state 610

state 694

    (39) PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .

    use             reduce using rule 39 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    select          reduce using rule 39 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    create          reduce using rule 39 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    update          reduce using rule 39 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    delete          reduce using rule 39 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    alter           reduce using rule 39 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    drop            reduce using rule 39 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    insert          reduce using rule 39 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    case            reduce using rule 39 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    show            reduce using rule 39 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    id              reduce using rule 39 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    if              reduce using rule 39 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    execute         reduce using rule 39 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    $end            reduce using rule 39 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)


state 695

    (45) LPARAM -> LPARAM coma inout id . TIPO
    (236) TIPO -> . interval cadena
    (237) TIPO -> . decimal para int coma int parc
    (238) TIPO -> . decimal para int parc
    (239) TIPO -> . decimal
    (240) TIPO -> . numeric para int coma int parc
    (241) TIPO -> . numeric para int parc
    (242) TIPO -> . numeric
    (243) TIPO -> . varchar para int parc
    (244) TIPO -> . timestamp para int parc
    (245) TIPO -> . character para int parc
    (246) TIPO -> . interval para int parc
    (247) TIPO -> . char para int parc
    (248) TIPO -> . time para int parc
    (249) TIPO -> . character varying para int parc
    (250) TIPO -> . id modulo rowtype
    (251) TIPO -> . idPunto modulo type
    (252) TIPO -> . timestamp para int parc without time zone
    (253) TIPO -> . timestamp para int parc with time zone
    (254) TIPO -> . time para int parc without time zone
    (255) TIPO -> . time para int parc with time zone
    (256) TIPO -> . interval para int parc cadena
    (257) TIPO -> . smallint
    (258) TIPO -> . integer
    (259) TIPO -> . r_int
    (260) TIPO -> . bigint
    (261) TIPO -> . real
    (262) TIPO -> . double precision
    (263) TIPO -> . money
    (264) TIPO -> . text
    (265) TIPO -> . timestamp
    (266) TIPO -> . date
    (267) TIPO -> . time
    (268) TIPO -> . interval
    (269) TIPO -> . boolean
    (270) TIPO -> . record
    (271) TIPO -> . varchar
    (272) TIPO -> . timestamp without time zone
    (273) TIPO -> . timestamp with time zone
    (274) TIPO -> . time without time zone
    (275) TIPO -> . time with time zone
    (276) TIPO -> . id

    interval        shift and go to state 241
    decimal         shift and go to state 242
    numeric         shift and go to state 243
    varchar         shift and go to state 244
    timestamp       shift and go to state 245
    character       shift and go to state 246
    char            shift and go to state 247
    time            shift and go to state 248
    id              shift and go to state 249
    idPunto         shift and go to state 250
    smallint        shift and go to state 251
    integer         shift and go to state 252
    r_int           shift and go to state 253
    bigint          shift and go to state 254
    real            shift and go to state 255
    double          shift and go to state 256
    money           shift and go to state 257
    text            shift and go to state 258
    date            shift and go to state 259
    boolean         shift and go to state 260
    record          shift and go to state 261

    TIPO                           shift and go to state 764

state 696

    (46) LPARAM -> LPARAM coma id TIPO .

    parc            reduce using rule 46 (LPARAM -> LPARAM coma id TIPO .)
    coma            reduce using rule 46 (LPARAM -> LPARAM coma id TIPO .)


state 697

    (50) LENGUAJE -> language plpgsql ptcoma .

    as              reduce using rule 50 (LENGUAJE -> language plpgsql ptcoma .)
    do              reduce using rule 50 (LENGUAJE -> language plpgsql ptcoma .)
    use             reduce using rule 50 (LENGUAJE -> language plpgsql ptcoma .)
    select          reduce using rule 50 (LENGUAJE -> language plpgsql ptcoma .)
    create          reduce using rule 50 (LENGUAJE -> language plpgsql ptcoma .)
    update          reduce using rule 50 (LENGUAJE -> language plpgsql ptcoma .)
    delete          reduce using rule 50 (LENGUAJE -> language plpgsql ptcoma .)
    alter           reduce using rule 50 (LENGUAJE -> language plpgsql ptcoma .)
    drop            reduce using rule 50 (LENGUAJE -> language plpgsql ptcoma .)
    insert          reduce using rule 50 (LENGUAJE -> language plpgsql ptcoma .)
    case            reduce using rule 50 (LENGUAJE -> language plpgsql ptcoma .)
    show            reduce using rule 50 (LENGUAJE -> language plpgsql ptcoma .)
    id              reduce using rule 50 (LENGUAJE -> language plpgsql ptcoma .)
    if              reduce using rule 50 (LENGUAJE -> language plpgsql ptcoma .)
    execute         reduce using rule 50 (LENGUAJE -> language plpgsql ptcoma .)
    $end            reduce using rule 50 (LENGUAJE -> language plpgsql ptcoma .)


state 698

    (43) CONTENIDOP -> as dolarn LISTACONTENIDO . dolarn
    (89) LISTACONTENIDO -> LISTACONTENIDO . CONTENIDO
    (91) CONTENIDO -> . ASIGNACION ptcoma
    (92) CONTENIDO -> . CONDICIONIF ptcoma
    (93) CONTENIDO -> . RAISE ptcoma
    (94) CONTENIDO -> . BEGINEND ptcoma
    (95) CONTENIDO -> . CALLPROCEDURE ptcoma
    (96) CONTENIDO -> . declare LDEC
    (97) CONTENIDO -> . RETURN ptcoma
    (98) CONTENIDO -> . INSERT ptcoma
    (99) CONTENIDO -> . SELECT ptcoma
    (100) CONTENIDO -> . UPDATE ptcoma
    (101) CONTENIDO -> . DELETE ptcoma
    (102) CONTENIDO -> . CASE ptcoma
    (76) ASIGNACION -> . id dospuntos igual EXP
    (77) ASIGNACION -> . id igual EXP
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (80) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (81) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (103) RAISE -> . raise LEVEL FORMAT
    (104) RAISE -> . raise LEVEL EXP
    (105) RAISE -> . raise LEVEL
    (106) RAISE -> . raise
    (107) RAISE -> . raise LEVEL cadena coma id
    (51) BEGINEND -> . begin LISTACONTENIDO end
    (35) CALLPROCEDURE -> . execute id para LEXP parc
    (36) CALLPROCEDURE -> . execute id para parc
    (26) RETURN -> . return EXP
    (118) INSERT -> . insert into id values para LEXP parc
    (119) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (228) UPDATE -> . update id set LCAMPOS WHERE
    (231) DELETE -> . delete r_from id WHERE
    (85) CASE -> . case EXP LISTAWHEN ELSEF end case
    (86) CASE -> . case EXP LISTAWHEN end case
    (87) CASE -> . case LISTAWHEN ELSEF end case
    (88) CASE -> . case LISTAWHEN end case

    dolarn          shift and go to state 765
    declare         shift and go to state 308
    id              shift and go to state 17
    if              shift and go to state 31
    raise           shift and go to state 315
    begin           shift and go to state 316
    execute         shift and go to state 36
    return          shift and go to state 317
    insert          shift and go to state 33
    select          shift and go to state 26
    update          shift and go to state 28
    delete          shift and go to state 29
    case            shift and go to state 34

    CONTENIDO                      shift and go to state 422
    ASIGNACION                     shift and go to state 303
    CONDICIONIF                    shift and go to state 304
    RAISE                          shift and go to state 305
    BEGINEND                       shift and go to state 306
    CALLPROCEDURE                  shift and go to state 307
    RETURN                         shift and go to state 309
    INSERT                         shift and go to state 310
    SELECT                         shift and go to state 311
    UPDATE                         shift and go to state 312
    DELETE                         shift and go to state 313
    CASE                           shift and go to state 314

state 699

    (44) CONTENIDOP -> do dolarn LISTACONTENIDO . dolarn
    (89) LISTACONTENIDO -> LISTACONTENIDO . CONTENIDO
    (91) CONTENIDO -> . ASIGNACION ptcoma
    (92) CONTENIDO -> . CONDICIONIF ptcoma
    (93) CONTENIDO -> . RAISE ptcoma
    (94) CONTENIDO -> . BEGINEND ptcoma
    (95) CONTENIDO -> . CALLPROCEDURE ptcoma
    (96) CONTENIDO -> . declare LDEC
    (97) CONTENIDO -> . RETURN ptcoma
    (98) CONTENIDO -> . INSERT ptcoma
    (99) CONTENIDO -> . SELECT ptcoma
    (100) CONTENIDO -> . UPDATE ptcoma
    (101) CONTENIDO -> . DELETE ptcoma
    (102) CONTENIDO -> . CASE ptcoma
    (76) ASIGNACION -> . id dospuntos igual EXP
    (77) ASIGNACION -> . id igual EXP
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (80) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (81) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (103) RAISE -> . raise LEVEL FORMAT
    (104) RAISE -> . raise LEVEL EXP
    (105) RAISE -> . raise LEVEL
    (106) RAISE -> . raise
    (107) RAISE -> . raise LEVEL cadena coma id
    (51) BEGINEND -> . begin LISTACONTENIDO end
    (35) CALLPROCEDURE -> . execute id para LEXP parc
    (36) CALLPROCEDURE -> . execute id para parc
    (26) RETURN -> . return EXP
    (118) INSERT -> . insert into id values para LEXP parc
    (119) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (228) UPDATE -> . update id set LCAMPOS WHERE
    (231) DELETE -> . delete r_from id WHERE
    (85) CASE -> . case EXP LISTAWHEN ELSEF end case
    (86) CASE -> . case EXP LISTAWHEN end case
    (87) CASE -> . case LISTAWHEN ELSEF end case
    (88) CASE -> . case LISTAWHEN end case

    dolarn          shift and go to state 766
    declare         shift and go to state 308
    id              shift and go to state 17
    if              shift and go to state 31
    raise           shift and go to state 315
    begin           shift and go to state 316
    execute         shift and go to state 36
    return          shift and go to state 317
    insert          shift and go to state 33
    select          shift and go to state 26
    update          shift and go to state 28
    delete          shift and go to state 29
    case            shift and go to state 34

    CONTENIDO                      shift and go to state 422
    ASIGNACION                     shift and go to state 303
    CONDICIONIF                    shift and go to state 304
    RAISE                          shift and go to state 305
    BEGINEND                       shift and go to state 306
    CALLPROCEDURE                  shift and go to state 307
    RETURN                         shift and go to state 309
    INSERT                         shift and go to state 310
    SELECT                         shift and go to state 311
    UPDATE                         shift and go to state 312
    DELETE                         shift and go to state 313
    CASE                           shift and go to state 314

state 700

    (27) FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE . LCONTENIDOP
    (41) LCONTENIDOP -> . LCONTENIDOP CONTENIDOP
    (42) LCONTENIDOP -> . CONTENIDOP
    (43) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (44) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn

    as              shift and go to state 511
    do              shift and go to state 512

    LCONTENIDOP                    shift and go to state 767
    CONTENIDOP                     shift and go to state 510

state 701

    (29) FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP . LENGUAJE
    (41) LCONTENIDOP -> LCONTENIDOP . CONTENIDOP
    (49) LENGUAJE -> . language plpgsql
    (50) LENGUAJE -> . language plpgsql ptcoma
    (43) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (44) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn

    language        shift and go to state 509
    as              shift and go to state 511
    do              shift and go to state 512

    LENGUAJE                       shift and go to state 768
    CONTENIDOP                     shift and go to state 610

state 702

    (28) FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .
    (41) LCONTENIDOP -> LCONTENIDOP . CONTENIDOP
    (43) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (44) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn

    use             reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .)
    select          reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .)
    create          reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .)
    update          reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .)
    delete          reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .)
    alter           reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .)
    drop            reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .)
    insert          reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .)
    case            reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .)
    show            reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .)
    id              reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .)
    if              reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .)
    execute         reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .)
    $end            reduce using rule 28 (FUNCIONES -> create function id para parc RETURNP LENGUAJE LCONTENIDOP .)
    as              shift and go to state 511
    do              shift and go to state 512

    CONTENIDOP                     shift and go to state 610

state 703

    (30) FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .

    use             reduce using rule 30 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    select          reduce using rule 30 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    create          reduce using rule 30 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    update          reduce using rule 30 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    delete          reduce using rule 30 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    alter           reduce using rule 30 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    drop            reduce using rule 30 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    insert          reduce using rule 30 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    case            reduce using rule 30 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    show            reduce using rule 30 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    id              reduce using rule 30 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    if              reduce using rule 30 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    execute         reduce using rule 30 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)
    $end            reduce using rule 30 (FUNCIONES -> create function id para parc RETURNP LCONTENIDOP LENGUAJE .)


state 704

    (229) LCAMPOS -> LCAMPOS coma id igual EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    coma            reduce using rule 229 (LCAMPOS -> LCAMPOS coma id igual EXP .)
    where           reduce using rule 229 (LCAMPOS -> LCAMPOS coma id igual EXP .)
    ptcoma          reduce using rule 229 (LCAMPOS -> LCAMPOS coma id igual EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    and             shift and go to state 135
    or              shift and go to state 136
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143
    between         shift and go to state 144
    is              shift and go to state 145
    isnull          shift and go to state 147
    notnull         shift and go to state 148
    as              shift and go to state 149
    cadenaString    shift and go to state 150
    cadena          shift and go to state 151
    id              shift and go to state 152
    in              shift and go to state 153
    not             shift and go to state 146
    like            shift and go to state 154


state 705

    (141) OP -> alter column id set not . null

    null            shift and go to state 769


state 706

    (142) OP -> alter column id set null .

    coma            reduce using rule 142 (OP -> alter column id set null .)
    ptcoma          reduce using rule 142 (OP -> alter column id set null .)


state 707

    (147) OP -> alter column id type TIPO .

    coma            reduce using rule 147 (OP -> alter column id type TIPO .)
    ptcoma          reduce using rule 147 (OP -> alter column id type TIPO .)


state 708

    (135) OP -> add check para CONDCHECK parc .

    coma            reduce using rule 135 (OP -> add check para CONDCHECK parc .)
    ptcoma          reduce using rule 135 (OP -> add check para CONDCHECK parc .)


state 709

    (136) OP -> add constraint id check para . CONDCHECK parc
    (191) CONDCHECK -> . EXP mayor EXP
    (192) CONDCHECK -> . EXP menor EXP
    (193) CONDCHECK -> . EXP mayor_igual EXP
    (194) CONDCHECK -> . EXP menor_igual EXP
    (195) CONDCHECK -> . EXP igual EXP
    (196) CONDCHECK -> . EXP diferente1 EXP
    (197) CONDCHECK -> . EXP diferente2 EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    CONDCHECK                      shift and go to state 770
    EXP                            shift and go to state 597
    SELECT                         shift and go to state 74

state 710

    (137) OP -> add constraint id unique para . LEXP parc
    (234) LEXP -> . LEXP coma EXP
    (235) LEXP -> . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    LEXP                           shift and go to state 771
    EXP                            shift and go to state 62
    SELECT                         shift and go to state 74

state 711

    (140) OP -> add constraint id foreign key . para LEXP parc references id para LEXP parc

    para            shift and go to state 772


state 712

    (138) OP -> add unique para LEXP parc .

    coma            reduce using rule 138 (OP -> add unique para LEXP parc .)
    ptcoma          reduce using rule 138 (OP -> add unique para LEXP parc .)


state 713

    (139) OP -> add foreign key para LEXP . parc references id para LEXP parc
    (234) LEXP -> LEXP . coma EXP

    parc            shift and go to state 773
    coma            shift and go to state 128


state 714

    (146) OP -> rename column id to id .

    coma            reduce using rule 146 (OP -> rename column id to id .)
    ptcoma          reduce using rule 146 (OP -> rename column id to id .)


state 715

    (131) ALTER -> alter index if exist id alter column EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    ptcoma          reduce using rule 131 (ALTER -> alter index if exist id alter column EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    and             shift and go to state 135
    or              shift and go to state 136
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143
    between         shift and go to state 144
    is              shift and go to state 145
    isnull          shift and go to state 147
    notnull         shift and go to state 148
    as              shift and go to state 149
    cadenaString    shift and go to state 150
    cadena          shift and go to state 151
    id              shift and go to state 152
    in              shift and go to state 153
    not             shift and go to state 146
    like            shift and go to state 154


state 716

    (81) CONDICIONIF -> if EXP then LISTACONTENIDO LELIF ELSEF end if .

    ptcoma          reduce using rule 81 (CONDICIONIF -> if EXP then LISTACONTENIDO LELIF ELSEF end if .)


state 717

    (82) LELIF -> LELIF elsif EXP then . LISTACONTENIDO
    (89) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (90) LISTACONTENIDO -> . CONTENIDO
    (91) CONTENIDO -> . ASIGNACION ptcoma
    (92) CONTENIDO -> . CONDICIONIF ptcoma
    (93) CONTENIDO -> . RAISE ptcoma
    (94) CONTENIDO -> . BEGINEND ptcoma
    (95) CONTENIDO -> . CALLPROCEDURE ptcoma
    (96) CONTENIDO -> . declare LDEC
    (97) CONTENIDO -> . RETURN ptcoma
    (98) CONTENIDO -> . INSERT ptcoma
    (99) CONTENIDO -> . SELECT ptcoma
    (100) CONTENIDO -> . UPDATE ptcoma
    (101) CONTENIDO -> . DELETE ptcoma
    (102) CONTENIDO -> . CASE ptcoma
    (76) ASIGNACION -> . id dospuntos igual EXP
    (77) ASIGNACION -> . id igual EXP
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (80) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (81) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (103) RAISE -> . raise LEVEL FORMAT
    (104) RAISE -> . raise LEVEL EXP
    (105) RAISE -> . raise LEVEL
    (106) RAISE -> . raise
    (107) RAISE -> . raise LEVEL cadena coma id
    (51) BEGINEND -> . begin LISTACONTENIDO end
    (35) CALLPROCEDURE -> . execute id para LEXP parc
    (36) CALLPROCEDURE -> . execute id para parc
    (26) RETURN -> . return EXP
    (118) INSERT -> . insert into id values para LEXP parc
    (119) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (228) UPDATE -> . update id set LCAMPOS WHERE
    (231) DELETE -> . delete r_from id WHERE
    (85) CASE -> . case EXP LISTAWHEN ELSEF end case
    (86) CASE -> . case EXP LISTAWHEN end case
    (87) CASE -> . case LISTAWHEN ELSEF end case
    (88) CASE -> . case LISTAWHEN end case

    declare         shift and go to state 308
    id              shift and go to state 17
    if              shift and go to state 31
    raise           shift and go to state 315
    begin           shift and go to state 316
    execute         shift and go to state 36
    return          shift and go to state 317
    insert          shift and go to state 33
    select          shift and go to state 26
    update          shift and go to state 28
    delete          shift and go to state 29
    case            shift and go to state 34

    LISTACONTENIDO                 shift and go to state 774
    CONTENIDO                      shift and go to state 302
    ASIGNACION                     shift and go to state 303
    CONDICIONIF                    shift and go to state 304
    RAISE                          shift and go to state 305
    BEGINEND                       shift and go to state 306
    CALLPROCEDURE                  shift and go to state 307
    RETURN                         shift and go to state 309
    INSERT                         shift and go to state 310
    SELECT                         shift and go to state 311
    UPDATE                         shift and go to state 312
    DELETE                         shift and go to state 313
    CASE                           shift and go to state 314

state 718

    (83) LELIF -> elsif EXP then LISTACONTENIDO .
    (89) LISTACONTENIDO -> LISTACONTENIDO . CONTENIDO
    (91) CONTENIDO -> . ASIGNACION ptcoma
    (92) CONTENIDO -> . CONDICIONIF ptcoma
    (93) CONTENIDO -> . RAISE ptcoma
    (94) CONTENIDO -> . BEGINEND ptcoma
    (95) CONTENIDO -> . CALLPROCEDURE ptcoma
    (96) CONTENIDO -> . declare LDEC
    (97) CONTENIDO -> . RETURN ptcoma
    (98) CONTENIDO -> . INSERT ptcoma
    (99) CONTENIDO -> . SELECT ptcoma
    (100) CONTENIDO -> . UPDATE ptcoma
    (101) CONTENIDO -> . DELETE ptcoma
    (102) CONTENIDO -> . CASE ptcoma
    (76) ASIGNACION -> . id dospuntos igual EXP
    (77) ASIGNACION -> . id igual EXP
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (80) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (81) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (103) RAISE -> . raise LEVEL FORMAT
    (104) RAISE -> . raise LEVEL EXP
    (105) RAISE -> . raise LEVEL
    (106) RAISE -> . raise
    (107) RAISE -> . raise LEVEL cadena coma id
    (51) BEGINEND -> . begin LISTACONTENIDO end
    (35) CALLPROCEDURE -> . execute id para LEXP parc
    (36) CALLPROCEDURE -> . execute id para parc
    (26) RETURN -> . return EXP
    (118) INSERT -> . insert into id values para LEXP parc
    (119) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (228) UPDATE -> . update id set LCAMPOS WHERE
    (231) DELETE -> . delete r_from id WHERE
    (85) CASE -> . case EXP LISTAWHEN ELSEF end case
    (86) CASE -> . case EXP LISTAWHEN end case
    (87) CASE -> . case LISTAWHEN ELSEF end case
    (88) CASE -> . case LISTAWHEN end case

    end             reduce using rule 83 (LELIF -> elsif EXP then LISTACONTENIDO .)
    elsif           reduce using rule 83 (LELIF -> elsif EXP then LISTACONTENIDO .)
    else            reduce using rule 83 (LELIF -> elsif EXP then LISTACONTENIDO .)
    declare         shift and go to state 308
    id              shift and go to state 17
    if              shift and go to state 31
    raise           shift and go to state 315
    begin           shift and go to state 316
    execute         shift and go to state 36
    return          shift and go to state 317
    insert          shift and go to state 33
    select          shift and go to state 26
    update          shift and go to state 28
    delete          shift and go to state 29
    case            shift and go to state 34

    CONTENIDO                      shift and go to state 422
    ASIGNACION                     shift and go to state 303
    CONDICIONIF                    shift and go to state 304
    RAISE                          shift and go to state 305
    BEGINEND                       shift and go to state 306
    CALLPROCEDURE                  shift and go to state 307
    RETURN                         shift and go to state 309
    INSERT                         shift and go to state 310
    SELECT                         shift and go to state 311
    UPDATE                         shift and go to state 312
    DELETE                         shift and go to state 313
    CASE                           shift and go to state 314

state 719

    (68) DECLARACIONES -> id TIPO not null . ASIG ptcoma
    (72) ASIG -> . default EXP
    (73) ASIG -> . dospuntos igual EXP
    (74) ASIG -> . igual EXP
    (75) ASIG -> .

    default         shift and go to state 639
    dospuntos       shift and go to state 640
    igual           shift and go to state 641
    ptcoma          reduce using rule 75 (ASIG -> .)

    ASIG                           shift and go to state 775

state 720

    (69) DECLARACIONES -> id TIPO ASIG ptcoma .

    id              reduce using rule 69 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    end             reduce using rule 69 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    else            reduce using rule 69 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    elsif           reduce using rule 69 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    declare         reduce using rule 69 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    if              reduce using rule 69 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    raise           reduce using rule 69 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    begin           reduce using rule 69 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    execute         reduce using rule 69 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    return          reduce using rule 69 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    insert          reduce using rule 69 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    select          reduce using rule 69 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    update          reduce using rule 69 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    delete          reduce using rule 69 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    case            reduce using rule 69 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    when            reduce using rule 69 (DECLARACIONES -> id TIPO ASIG ptcoma .)
    dolarn          reduce using rule 69 (DECLARACIONES -> id TIPO ASIG ptcoma .)


state 721

    (72) ASIG -> default EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    ptcoma          reduce using rule 72 (ASIG -> default EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    and             shift and go to state 135
    or              shift and go to state 136
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143
    between         shift and go to state 144
    is              shift and go to state 145
    isnull          shift and go to state 147
    notnull         shift and go to state 148
    as              shift and go to state 149
    cadenaString    shift and go to state 150
    cadena          shift and go to state 151
    id              shift and go to state 152
    in              shift and go to state 153
    not             shift and go to state 146
    like            shift and go to state 154


state 722

    (73) ASIG -> dospuntos igual . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 776
    SELECT                         shift and go to state 74

state 723

    (74) ASIG -> igual EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    ptcoma          reduce using rule 74 (ASIG -> igual EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    and             shift and go to state 135
    or              shift and go to state 136
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143
    between         shift and go to state 144
    is              shift and go to state 145
    isnull          shift and go to state 147
    notnull         shift and go to state 148
    as              shift and go to state 149
    cadenaString    shift and go to state 150
    cadena          shift and go to state 151
    id              shift and go to state 152
    in              shift and go to state 153
    not             shift and go to state 146
    like            shift and go to state 154


state 724

    (70) DECLARACIONES -> id constant TIPO not . null ASIG ptcoma

    null            shift and go to state 777


state 725

    (71) DECLARACIONES -> id constant TIPO ASIG . ptcoma

    ptcoma          shift and go to state 778


state 726

    (107) RAISE -> raise LEVEL cadena coma id .

    ptcoma          reduce using rule 107 (RAISE -> raise LEVEL cadena coma id .)


state 727

    (113) FORMAT -> format para EXP . coma LEXP parc
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    coma            shift and go to state 779
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    and             shift and go to state 135
    or              shift and go to state 136
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143
    between         shift and go to state 144
    is              shift and go to state 145
    isnull          shift and go to state 147
    notnull         shift and go to state 148
    as              shift and go to state 149
    cadenaString    shift and go to state 150
    cadena          shift and go to state 151
    id              shift and go to state 152
    in              shift and go to state 153
    not             shift and go to state 146
    like            shift and go to state 154


state 728

    (119) INSERT -> insert into id para LEXP parc values para . LEXP parc
    (234) LEXP -> . LEXP coma EXP
    (235) LEXP -> . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    LEXP                           shift and go to state 780
    EXP                            shift and go to state 62
    SELECT                         shift and go to state 74

state 729

    (200) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING . ORDER LIMIT
    (223) ORDER -> . order by LEXP ORD
    (224) ORDER -> . order by LEXP
    (225) ORDER -> .

  ! shift/reduce conflict for order resolved as shift
    order           shift and go to state 555
    r_from          reduce using rule 225 (ORDER -> .)
    coma            reduce using rule 225 (ORDER -> .)
    where           reduce using rule 225 (ORDER -> .)
    group           reduce using rule 225 (ORDER -> .)
    having          reduce using rule 225 (ORDER -> .)
    union           reduce using rule 225 (ORDER -> .)
    intersect       reduce using rule 225 (ORDER -> .)
    except          reduce using rule 225 (ORDER -> .)
    limit           reduce using rule 225 (ORDER -> .)
    offset          reduce using rule 225 (ORDER -> .)
    ptcoma          reduce using rule 225 (ORDER -> .)
    mas             reduce using rule 225 (ORDER -> .)
    menos           reduce using rule 225 (ORDER -> .)
    multiplicacion  reduce using rule 225 (ORDER -> .)
    division        reduce using rule 225 (ORDER -> .)
    modulo          reduce using rule 225 (ORDER -> .)
    elevado         reduce using rule 225 (ORDER -> .)
    and             reduce using rule 225 (ORDER -> .)
    or              reduce using rule 225 (ORDER -> .)
    mayor           reduce using rule 225 (ORDER -> .)
    menor           reduce using rule 225 (ORDER -> .)
    mayor_igual     reduce using rule 225 (ORDER -> .)
    menor_igual     reduce using rule 225 (ORDER -> .)
    igual           reduce using rule 225 (ORDER -> .)
    diferente1      reduce using rule 225 (ORDER -> .)
    diferente2      reduce using rule 225 (ORDER -> .)
    between         reduce using rule 225 (ORDER -> .)
    is              reduce using rule 225 (ORDER -> .)
    isnull          reduce using rule 225 (ORDER -> .)
    notnull         reduce using rule 225 (ORDER -> .)
    as              reduce using rule 225 (ORDER -> .)
    cadenaString    reduce using rule 225 (ORDER -> .)
    cadena          reduce using rule 225 (ORDER -> .)
    id              reduce using rule 225 (ORDER -> .)
    in              reduce using rule 225 (ORDER -> .)
    not             reduce using rule 225 (ORDER -> .)
    like            reduce using rule 225 (ORDER -> .)
    then            reduce using rule 225 (ORDER -> .)
    when            reduce using rule 225 (ORDER -> .)
    parc            reduce using rule 225 (ORDER -> .)
    constraint      reduce using rule 225 (ORDER -> .)
    unique          reduce using rule 225 (ORDER -> .)
    check           reduce using rule 225 (ORDER -> .)
    default         reduce using rule 225 (ORDER -> .)
    null            reduce using rule 225 (ORDER -> .)
    primary         reduce using rule 225 (ORDER -> .)
    references      reduce using rule 225 (ORDER -> .)
    asc             reduce using rule 225 (ORDER -> .)
    desc            reduce using rule 225 (ORDER -> .)

  ! order           [ reduce using rule 225 (ORDER -> .) ]

    ORDER                          shift and go to state 781

state 730

    (201) SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER . LIMIT
    (203) LIMIT -> . limit int
    (204) LIMIT -> . limit all
    (205) LIMIT -> . offset int
    (206) LIMIT -> . limit int offset int
    (207) LIMIT -> . offset int limit int
    (208) LIMIT -> . limit all offset int
    (209) LIMIT -> . offset int limit all
    (210) LIMIT -> .

  ! shift/reduce conflict for limit resolved as shift
  ! shift/reduce conflict for offset resolved as shift
    limit           shift and go to state 650
    offset          shift and go to state 651
    ptcoma          reduce using rule 210 (LIMIT -> .)
    r_from          reduce using rule 210 (LIMIT -> .)
    coma            reduce using rule 210 (LIMIT -> .)
    where           reduce using rule 210 (LIMIT -> .)
    group           reduce using rule 210 (LIMIT -> .)
    having          reduce using rule 210 (LIMIT -> .)
    union           reduce using rule 210 (LIMIT -> .)
    intersect       reduce using rule 210 (LIMIT -> .)
    except          reduce using rule 210 (LIMIT -> .)
    order           reduce using rule 210 (LIMIT -> .)
    mas             reduce using rule 210 (LIMIT -> .)
    menos           reduce using rule 210 (LIMIT -> .)
    multiplicacion  reduce using rule 210 (LIMIT -> .)
    division        reduce using rule 210 (LIMIT -> .)
    modulo          reduce using rule 210 (LIMIT -> .)
    elevado         reduce using rule 210 (LIMIT -> .)
    and             reduce using rule 210 (LIMIT -> .)
    or              reduce using rule 210 (LIMIT -> .)
    mayor           reduce using rule 210 (LIMIT -> .)
    menor           reduce using rule 210 (LIMIT -> .)
    mayor_igual     reduce using rule 210 (LIMIT -> .)
    menor_igual     reduce using rule 210 (LIMIT -> .)
    igual           reduce using rule 210 (LIMIT -> .)
    diferente1      reduce using rule 210 (LIMIT -> .)
    diferente2      reduce using rule 210 (LIMIT -> .)
    between         reduce using rule 210 (LIMIT -> .)
    is              reduce using rule 210 (LIMIT -> .)
    isnull          reduce using rule 210 (LIMIT -> .)
    notnull         reduce using rule 210 (LIMIT -> .)
    as              reduce using rule 210 (LIMIT -> .)
    cadenaString    reduce using rule 210 (LIMIT -> .)
    cadena          reduce using rule 210 (LIMIT -> .)
    id              reduce using rule 210 (LIMIT -> .)
    in              reduce using rule 210 (LIMIT -> .)
    not             reduce using rule 210 (LIMIT -> .)
    like            reduce using rule 210 (LIMIT -> .)
    then            reduce using rule 210 (LIMIT -> .)
    when            reduce using rule 210 (LIMIT -> .)
    parc            reduce using rule 210 (LIMIT -> .)
    constraint      reduce using rule 210 (LIMIT -> .)
    unique          reduce using rule 210 (LIMIT -> .)
    check           reduce using rule 210 (LIMIT -> .)
    default         reduce using rule 210 (LIMIT -> .)
    null            reduce using rule 210 (LIMIT -> .)
    primary         reduce using rule 210 (LIMIT -> .)
    references      reduce using rule 210 (LIMIT -> .)
    asc             reduce using rule 210 (LIMIT -> .)
    desc            reduce using rule 210 (LIMIT -> .)

  ! limit           [ reduce using rule 210 (LIMIT -> .) ]
  ! offset          [ reduce using rule 210 (LIMIT -> .) ]

    LIMIT                          shift and go to state 782

state 731

    (203) LIMIT -> limit int .
    (206) LIMIT -> limit int . offset int

  ! shift/reduce conflict for offset resolved as shift
    ptcoma          reduce using rule 203 (LIMIT -> limit int .)
    r_from          reduce using rule 203 (LIMIT -> limit int .)
    coma            reduce using rule 203 (LIMIT -> limit int .)
    where           reduce using rule 203 (LIMIT -> limit int .)
    group           reduce using rule 203 (LIMIT -> limit int .)
    having          reduce using rule 203 (LIMIT -> limit int .)
    union           reduce using rule 203 (LIMIT -> limit int .)
    intersect       reduce using rule 203 (LIMIT -> limit int .)
    except          reduce using rule 203 (LIMIT -> limit int .)
    order           reduce using rule 203 (LIMIT -> limit int .)
    limit           reduce using rule 203 (LIMIT -> limit int .)
    mas             reduce using rule 203 (LIMIT -> limit int .)
    menos           reduce using rule 203 (LIMIT -> limit int .)
    multiplicacion  reduce using rule 203 (LIMIT -> limit int .)
    division        reduce using rule 203 (LIMIT -> limit int .)
    modulo          reduce using rule 203 (LIMIT -> limit int .)
    elevado         reduce using rule 203 (LIMIT -> limit int .)
    and             reduce using rule 203 (LIMIT -> limit int .)
    or              reduce using rule 203 (LIMIT -> limit int .)
    mayor           reduce using rule 203 (LIMIT -> limit int .)
    menor           reduce using rule 203 (LIMIT -> limit int .)
    mayor_igual     reduce using rule 203 (LIMIT -> limit int .)
    menor_igual     reduce using rule 203 (LIMIT -> limit int .)
    igual           reduce using rule 203 (LIMIT -> limit int .)
    diferente1      reduce using rule 203 (LIMIT -> limit int .)
    diferente2      reduce using rule 203 (LIMIT -> limit int .)
    between         reduce using rule 203 (LIMIT -> limit int .)
    is              reduce using rule 203 (LIMIT -> limit int .)
    isnull          reduce using rule 203 (LIMIT -> limit int .)
    notnull         reduce using rule 203 (LIMIT -> limit int .)
    as              reduce using rule 203 (LIMIT -> limit int .)
    cadenaString    reduce using rule 203 (LIMIT -> limit int .)
    cadena          reduce using rule 203 (LIMIT -> limit int .)
    id              reduce using rule 203 (LIMIT -> limit int .)
    in              reduce using rule 203 (LIMIT -> limit int .)
    not             reduce using rule 203 (LIMIT -> limit int .)
    like            reduce using rule 203 (LIMIT -> limit int .)
    then            reduce using rule 203 (LIMIT -> limit int .)
    when            reduce using rule 203 (LIMIT -> limit int .)
    parc            reduce using rule 203 (LIMIT -> limit int .)
    constraint      reduce using rule 203 (LIMIT -> limit int .)
    unique          reduce using rule 203 (LIMIT -> limit int .)
    check           reduce using rule 203 (LIMIT -> limit int .)
    default         reduce using rule 203 (LIMIT -> limit int .)
    null            reduce using rule 203 (LIMIT -> limit int .)
    primary         reduce using rule 203 (LIMIT -> limit int .)
    references      reduce using rule 203 (LIMIT -> limit int .)
    asc             reduce using rule 203 (LIMIT -> limit int .)
    desc            reduce using rule 203 (LIMIT -> limit int .)
    offset          shift and go to state 783

  ! offset          [ reduce using rule 203 (LIMIT -> limit int .) ]


state 732

    (204) LIMIT -> limit all .
    (208) LIMIT -> limit all . offset int

  ! shift/reduce conflict for offset resolved as shift
    ptcoma          reduce using rule 204 (LIMIT -> limit all .)
    r_from          reduce using rule 204 (LIMIT -> limit all .)
    coma            reduce using rule 204 (LIMIT -> limit all .)
    where           reduce using rule 204 (LIMIT -> limit all .)
    group           reduce using rule 204 (LIMIT -> limit all .)
    having          reduce using rule 204 (LIMIT -> limit all .)
    union           reduce using rule 204 (LIMIT -> limit all .)
    intersect       reduce using rule 204 (LIMIT -> limit all .)
    except          reduce using rule 204 (LIMIT -> limit all .)
    order           reduce using rule 204 (LIMIT -> limit all .)
    limit           reduce using rule 204 (LIMIT -> limit all .)
    mas             reduce using rule 204 (LIMIT -> limit all .)
    menos           reduce using rule 204 (LIMIT -> limit all .)
    multiplicacion  reduce using rule 204 (LIMIT -> limit all .)
    division        reduce using rule 204 (LIMIT -> limit all .)
    modulo          reduce using rule 204 (LIMIT -> limit all .)
    elevado         reduce using rule 204 (LIMIT -> limit all .)
    and             reduce using rule 204 (LIMIT -> limit all .)
    or              reduce using rule 204 (LIMIT -> limit all .)
    mayor           reduce using rule 204 (LIMIT -> limit all .)
    menor           reduce using rule 204 (LIMIT -> limit all .)
    mayor_igual     reduce using rule 204 (LIMIT -> limit all .)
    menor_igual     reduce using rule 204 (LIMIT -> limit all .)
    igual           reduce using rule 204 (LIMIT -> limit all .)
    diferente1      reduce using rule 204 (LIMIT -> limit all .)
    diferente2      reduce using rule 204 (LIMIT -> limit all .)
    between         reduce using rule 204 (LIMIT -> limit all .)
    is              reduce using rule 204 (LIMIT -> limit all .)
    isnull          reduce using rule 204 (LIMIT -> limit all .)
    notnull         reduce using rule 204 (LIMIT -> limit all .)
    as              reduce using rule 204 (LIMIT -> limit all .)
    cadenaString    reduce using rule 204 (LIMIT -> limit all .)
    cadena          reduce using rule 204 (LIMIT -> limit all .)
    id              reduce using rule 204 (LIMIT -> limit all .)
    in              reduce using rule 204 (LIMIT -> limit all .)
    not             reduce using rule 204 (LIMIT -> limit all .)
    like            reduce using rule 204 (LIMIT -> limit all .)
    then            reduce using rule 204 (LIMIT -> limit all .)
    when            reduce using rule 204 (LIMIT -> limit all .)
    parc            reduce using rule 204 (LIMIT -> limit all .)
    constraint      reduce using rule 204 (LIMIT -> limit all .)
    unique          reduce using rule 204 (LIMIT -> limit all .)
    check           reduce using rule 204 (LIMIT -> limit all .)
    default         reduce using rule 204 (LIMIT -> limit all .)
    null            reduce using rule 204 (LIMIT -> limit all .)
    primary         reduce using rule 204 (LIMIT -> limit all .)
    references      reduce using rule 204 (LIMIT -> limit all .)
    asc             reduce using rule 204 (LIMIT -> limit all .)
    desc            reduce using rule 204 (LIMIT -> limit all .)
    offset          shift and go to state 784

  ! offset          [ reduce using rule 204 (LIMIT -> limit all .) ]


state 733

    (205) LIMIT -> offset int .
    (207) LIMIT -> offset int . limit int
    (209) LIMIT -> offset int . limit all

  ! shift/reduce conflict for limit resolved as shift
    ptcoma          reduce using rule 205 (LIMIT -> offset int .)
    r_from          reduce using rule 205 (LIMIT -> offset int .)
    coma            reduce using rule 205 (LIMIT -> offset int .)
    where           reduce using rule 205 (LIMIT -> offset int .)
    group           reduce using rule 205 (LIMIT -> offset int .)
    having          reduce using rule 205 (LIMIT -> offset int .)
    union           reduce using rule 205 (LIMIT -> offset int .)
    intersect       reduce using rule 205 (LIMIT -> offset int .)
    except          reduce using rule 205 (LIMIT -> offset int .)
    order           reduce using rule 205 (LIMIT -> offset int .)
    offset          reduce using rule 205 (LIMIT -> offset int .)
    mas             reduce using rule 205 (LIMIT -> offset int .)
    menos           reduce using rule 205 (LIMIT -> offset int .)
    multiplicacion  reduce using rule 205 (LIMIT -> offset int .)
    division        reduce using rule 205 (LIMIT -> offset int .)
    modulo          reduce using rule 205 (LIMIT -> offset int .)
    elevado         reduce using rule 205 (LIMIT -> offset int .)
    and             reduce using rule 205 (LIMIT -> offset int .)
    or              reduce using rule 205 (LIMIT -> offset int .)
    mayor           reduce using rule 205 (LIMIT -> offset int .)
    menor           reduce using rule 205 (LIMIT -> offset int .)
    mayor_igual     reduce using rule 205 (LIMIT -> offset int .)
    menor_igual     reduce using rule 205 (LIMIT -> offset int .)
    igual           reduce using rule 205 (LIMIT -> offset int .)
    diferente1      reduce using rule 205 (LIMIT -> offset int .)
    diferente2      reduce using rule 205 (LIMIT -> offset int .)
    between         reduce using rule 205 (LIMIT -> offset int .)
    is              reduce using rule 205 (LIMIT -> offset int .)
    isnull          reduce using rule 205 (LIMIT -> offset int .)
    notnull         reduce using rule 205 (LIMIT -> offset int .)
    as              reduce using rule 205 (LIMIT -> offset int .)
    cadenaString    reduce using rule 205 (LIMIT -> offset int .)
    cadena          reduce using rule 205 (LIMIT -> offset int .)
    id              reduce using rule 205 (LIMIT -> offset int .)
    in              reduce using rule 205 (LIMIT -> offset int .)
    not             reduce using rule 205 (LIMIT -> offset int .)
    like            reduce using rule 205 (LIMIT -> offset int .)
    then            reduce using rule 205 (LIMIT -> offset int .)
    when            reduce using rule 205 (LIMIT -> offset int .)
    parc            reduce using rule 205 (LIMIT -> offset int .)
    constraint      reduce using rule 205 (LIMIT -> offset int .)
    unique          reduce using rule 205 (LIMIT -> offset int .)
    check           reduce using rule 205 (LIMIT -> offset int .)
    default         reduce using rule 205 (LIMIT -> offset int .)
    null            reduce using rule 205 (LIMIT -> offset int .)
    primary         reduce using rule 205 (LIMIT -> offset int .)
    references      reduce using rule 205 (LIMIT -> offset int .)
    asc             reduce using rule 205 (LIMIT -> offset int .)
    desc            reduce using rule 205 (LIMIT -> offset int .)
    limit           shift and go to state 785

  ! limit           [ reduce using rule 205 (LIMIT -> offset int .) ]


state 734

    (223) ORDER -> order by LEXP . ORD
    (224) ORDER -> order by LEXP .
    (234) LEXP -> LEXP . coma EXP
    (226) ORD -> . asc
    (227) ORD -> . desc

  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for asc resolved as shift
  ! shift/reduce conflict for desc resolved as shift
    r_from          reduce using rule 224 (ORDER -> order by LEXP .)
    where           reduce using rule 224 (ORDER -> order by LEXP .)
    group           reduce using rule 224 (ORDER -> order by LEXP .)
    having          reduce using rule 224 (ORDER -> order by LEXP .)
    union           reduce using rule 224 (ORDER -> order by LEXP .)
    intersect       reduce using rule 224 (ORDER -> order by LEXP .)
    except          reduce using rule 224 (ORDER -> order by LEXP .)
    order           reduce using rule 224 (ORDER -> order by LEXP .)
    limit           reduce using rule 224 (ORDER -> order by LEXP .)
    offset          reduce using rule 224 (ORDER -> order by LEXP .)
    ptcoma          reduce using rule 224 (ORDER -> order by LEXP .)
    mas             reduce using rule 224 (ORDER -> order by LEXP .)
    menos           reduce using rule 224 (ORDER -> order by LEXP .)
    multiplicacion  reduce using rule 224 (ORDER -> order by LEXP .)
    division        reduce using rule 224 (ORDER -> order by LEXP .)
    modulo          reduce using rule 224 (ORDER -> order by LEXP .)
    elevado         reduce using rule 224 (ORDER -> order by LEXP .)
    and             reduce using rule 224 (ORDER -> order by LEXP .)
    or              reduce using rule 224 (ORDER -> order by LEXP .)
    mayor           reduce using rule 224 (ORDER -> order by LEXP .)
    menor           reduce using rule 224 (ORDER -> order by LEXP .)
    mayor_igual     reduce using rule 224 (ORDER -> order by LEXP .)
    menor_igual     reduce using rule 224 (ORDER -> order by LEXP .)
    igual           reduce using rule 224 (ORDER -> order by LEXP .)
    diferente1      reduce using rule 224 (ORDER -> order by LEXP .)
    diferente2      reduce using rule 224 (ORDER -> order by LEXP .)
    between         reduce using rule 224 (ORDER -> order by LEXP .)
    is              reduce using rule 224 (ORDER -> order by LEXP .)
    isnull          reduce using rule 224 (ORDER -> order by LEXP .)
    notnull         reduce using rule 224 (ORDER -> order by LEXP .)
    as              reduce using rule 224 (ORDER -> order by LEXP .)
    cadenaString    reduce using rule 224 (ORDER -> order by LEXP .)
    cadena          reduce using rule 224 (ORDER -> order by LEXP .)
    id              reduce using rule 224 (ORDER -> order by LEXP .)
    in              reduce using rule 224 (ORDER -> order by LEXP .)
    not             reduce using rule 224 (ORDER -> order by LEXP .)
    like            reduce using rule 224 (ORDER -> order by LEXP .)
    then            reduce using rule 224 (ORDER -> order by LEXP .)
    when            reduce using rule 224 (ORDER -> order by LEXP .)
    parc            reduce using rule 224 (ORDER -> order by LEXP .)
    constraint      reduce using rule 224 (ORDER -> order by LEXP .)
    unique          reduce using rule 224 (ORDER -> order by LEXP .)
    check           reduce using rule 224 (ORDER -> order by LEXP .)
    default         reduce using rule 224 (ORDER -> order by LEXP .)
    null            reduce using rule 224 (ORDER -> order by LEXP .)
    primary         reduce using rule 224 (ORDER -> order by LEXP .)
    references      reduce using rule 224 (ORDER -> order by LEXP .)
    coma            shift and go to state 128
    asc             shift and go to state 787
    desc            shift and go to state 788

  ! coma            [ reduce using rule 224 (ORDER -> order by LEXP .) ]
  ! asc             [ reduce using rule 224 (ORDER -> order by LEXP .) ]
  ! desc            [ reduce using rule 224 (ORDER -> order by LEXP .) ]

    ORD                            shift and go to state 786

state 735

    (328) EXP -> para EXP . parc
    (235) LEXP -> EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

  ! shift/reduce conflict for parc resolved as shift
    parc            shift and go to state 264
    coma            reduce using rule 235 (LEXP -> EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    and             shift and go to state 135
    or              shift and go to state 136
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143
    between         shift and go to state 144
    is              shift and go to state 145
    isnull          shift and go to state 147
    notnull         shift and go to state 148
    as              shift and go to state 149
    cadenaString    shift and go to state 150
    cadena          shift and go to state 151
    id              shift and go to state 152
    in              shift and go to state 153
    not             shift and go to state 146
    like            shift and go to state 154

  ! parc            [ reduce using rule 235 (LEXP -> EXP .) ]


state 736

    (237) TIPO -> decimal para int coma int parc .

    r_from          reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    coma            reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    where           reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    group           reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    having          reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    union           reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    intersect       reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    except          reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    order           reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    limit           reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    offset          reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    ptcoma          reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    mas             reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    menos           reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    multiplicacion  reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    division        reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    modulo          reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    elevado         reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    and             reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    or              reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    mayor           reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    menor           reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    mayor_igual     reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    menor_igual     reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    igual           reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    diferente1      reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    diferente2      reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    between         reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    is              reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    isnull          reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    notnull         reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    as              reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    cadenaString    reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    cadena          reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    id              reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    in              reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    not             reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    like            reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    then            reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    when            reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    parc            reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    constraint      reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    unique          reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    check           reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    default         reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    null            reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    primary         reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    references      reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    asc             reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    desc            reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    dospuntos       reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    language        reduce using rule 237 (TIPO -> decimal para int coma int parc .)
    do              reduce using rule 237 (TIPO -> decimal para int coma int parc .)


state 737

    (240) TIPO -> numeric para int coma int parc .

    r_from          reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    coma            reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    where           reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    group           reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    having          reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    union           reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    intersect       reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    except          reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    order           reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    limit           reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    offset          reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    ptcoma          reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    mas             reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    menos           reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    multiplicacion  reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    division        reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    modulo          reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    elevado         reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    and             reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    or              reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    mayor           reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    menor           reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    mayor_igual     reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    menor_igual     reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    igual           reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    diferente1      reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    diferente2      reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    between         reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    is              reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    isnull          reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    notnull         reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    as              reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    cadenaString    reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    cadena          reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    id              reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    in              reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    not             reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    like            reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    then            reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    when            reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    parc            reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    constraint      reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    unique          reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    check           reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    default         reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    null            reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    primary         reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    references      reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    asc             reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    desc            reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    dospuntos       reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    language        reduce using rule 240 (TIPO -> numeric para int coma int parc .)
    do              reduce using rule 240 (TIPO -> numeric para int coma int parc .)


state 738

    (252) TIPO -> timestamp para int parc without time . zone

    zone            shift and go to state 789


state 739

    (253) TIPO -> timestamp para int parc with time . zone

    zone            shift and go to state 790


state 740

    (254) TIPO -> time para int parc without time . zone

    zone            shift and go to state 791


state 741

    (255) TIPO -> time para int parc with time . zone

    zone            shift and go to state 792


state 742

    (178) OPCOLUMN -> constraint id unique .

    constraint      reduce using rule 178 (OPCOLUMN -> constraint id unique .)
    unique          reduce using rule 178 (OPCOLUMN -> constraint id unique .)
    check           reduce using rule 178 (OPCOLUMN -> constraint id unique .)
    default         reduce using rule 178 (OPCOLUMN -> constraint id unique .)
    not             reduce using rule 178 (OPCOLUMN -> constraint id unique .)
    null            reduce using rule 178 (OPCOLUMN -> constraint id unique .)
    primary         reduce using rule 178 (OPCOLUMN -> constraint id unique .)
    references      reduce using rule 178 (OPCOLUMN -> constraint id unique .)
    parc            reduce using rule 178 (OPCOLUMN -> constraint id unique .)
    coma            reduce using rule 178 (OPCOLUMN -> constraint id unique .)


state 743

    (180) OPCOLUMN -> constraint id check . para CONDCHECK parc

    para            shift and go to state 793


state 744

    (181) OPCOLUMN -> check para CONDCHECK . parc

    parc            shift and go to state 794


state 745

    (198) HERENCIA -> inherits para id . parc

    parc            shift and go to state 795


state 746

    (187) OPCONST -> primary key para LEXP parc .

    parc            reduce using rule 187 (OPCONST -> primary key para LEXP parc .)
    coma            reduce using rule 187 (OPCONST -> primary key para LEXP parc .)


state 747

    (188) OPCONST -> foreign key para LEXP parc . references id para LEXP parc

    references      shift and go to state 796


state 748

    (191) CONDCHECK -> EXP mayor EXP .
    (291) EXP -> EXP mayor EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    parc            reduce using rule 191 (CONDCHECK -> EXP mayor EXP .)
    mayor           reduce using rule 291 (EXP -> EXP mayor EXP .)
    menor           reduce using rule 291 (EXP -> EXP mayor EXP .)
    mayor_igual     reduce using rule 291 (EXP -> EXP mayor EXP .)
    menor_igual     reduce using rule 291 (EXP -> EXP mayor EXP .)
    igual           reduce using rule 291 (EXP -> EXP mayor EXP .)
    diferente1      reduce using rule 291 (EXP -> EXP mayor EXP .)
    diferente2      reduce using rule 291 (EXP -> EXP mayor EXP .)
    and             reduce using rule 291 (EXP -> EXP mayor EXP .)
    or              reduce using rule 291 (EXP -> EXP mayor EXP .)
    between         reduce using rule 291 (EXP -> EXP mayor EXP .)
    is              reduce using rule 291 (EXP -> EXP mayor EXP .)
    isnull          reduce using rule 291 (EXP -> EXP mayor EXP .)
    notnull         reduce using rule 291 (EXP -> EXP mayor EXP .)
    as              reduce using rule 291 (EXP -> EXP mayor EXP .)
    cadenaString    reduce using rule 291 (EXP -> EXP mayor EXP .)
    cadena          reduce using rule 291 (EXP -> EXP mayor EXP .)
    id              reduce using rule 291 (EXP -> EXP mayor EXP .)
    in              reduce using rule 291 (EXP -> EXP mayor EXP .)
    not             reduce using rule 291 (EXP -> EXP mayor EXP .)
    like            reduce using rule 291 (EXP -> EXP mayor EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134

  ! mas             [ reduce using rule 291 (EXP -> EXP mayor EXP .) ]
  ! menos           [ reduce using rule 291 (EXP -> EXP mayor EXP .) ]
  ! multiplicacion  [ reduce using rule 291 (EXP -> EXP mayor EXP .) ]
  ! division        [ reduce using rule 291 (EXP -> EXP mayor EXP .) ]
  ! modulo          [ reduce using rule 291 (EXP -> EXP mayor EXP .) ]
  ! elevado         [ reduce using rule 291 (EXP -> EXP mayor EXP .) ]
  ! and             [ shift and go to state 135 ]
  ! or              [ shift and go to state 136 ]
  ! mayor           [ shift and go to state 137 ]
  ! menor           [ shift and go to state 138 ]
  ! mayor_igual     [ shift and go to state 139 ]
  ! menor_igual     [ shift and go to state 140 ]
  ! igual           [ shift and go to state 141 ]
  ! diferente1      [ shift and go to state 142 ]
  ! diferente2      [ shift and go to state 143 ]
  ! between         [ shift and go to state 144 ]
  ! is              [ shift and go to state 145 ]
  ! isnull          [ shift and go to state 147 ]
  ! notnull         [ shift and go to state 148 ]
  ! as              [ shift and go to state 149 ]
  ! cadenaString    [ shift and go to state 150 ]
  ! cadena          [ shift and go to state 151 ]
  ! id              [ shift and go to state 152 ]
  ! in              [ shift and go to state 153 ]
  ! not             [ shift and go to state 146 ]
  ! like            [ shift and go to state 154 ]


state 749

    (192) CONDCHECK -> EXP menor EXP .
    (292) EXP -> EXP menor EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    parc            reduce using rule 192 (CONDCHECK -> EXP menor EXP .)
    mayor           reduce using rule 292 (EXP -> EXP menor EXP .)
    menor           reduce using rule 292 (EXP -> EXP menor EXP .)
    mayor_igual     reduce using rule 292 (EXP -> EXP menor EXP .)
    menor_igual     reduce using rule 292 (EXP -> EXP menor EXP .)
    igual           reduce using rule 292 (EXP -> EXP menor EXP .)
    diferente1      reduce using rule 292 (EXP -> EXP menor EXP .)
    diferente2      reduce using rule 292 (EXP -> EXP menor EXP .)
    and             reduce using rule 292 (EXP -> EXP menor EXP .)
    or              reduce using rule 292 (EXP -> EXP menor EXP .)
    between         reduce using rule 292 (EXP -> EXP menor EXP .)
    is              reduce using rule 292 (EXP -> EXP menor EXP .)
    isnull          reduce using rule 292 (EXP -> EXP menor EXP .)
    notnull         reduce using rule 292 (EXP -> EXP menor EXP .)
    as              reduce using rule 292 (EXP -> EXP menor EXP .)
    cadenaString    reduce using rule 292 (EXP -> EXP menor EXP .)
    cadena          reduce using rule 292 (EXP -> EXP menor EXP .)
    id              reduce using rule 292 (EXP -> EXP menor EXP .)
    in              reduce using rule 292 (EXP -> EXP menor EXP .)
    not             reduce using rule 292 (EXP -> EXP menor EXP .)
    like            reduce using rule 292 (EXP -> EXP menor EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134

  ! mas             [ reduce using rule 292 (EXP -> EXP menor EXP .) ]
  ! menos           [ reduce using rule 292 (EXP -> EXP menor EXP .) ]
  ! multiplicacion  [ reduce using rule 292 (EXP -> EXP menor EXP .) ]
  ! division        [ reduce using rule 292 (EXP -> EXP menor EXP .) ]
  ! modulo          [ reduce using rule 292 (EXP -> EXP menor EXP .) ]
  ! elevado         [ reduce using rule 292 (EXP -> EXP menor EXP .) ]
  ! and             [ shift and go to state 135 ]
  ! or              [ shift and go to state 136 ]
  ! mayor           [ shift and go to state 137 ]
  ! menor           [ shift and go to state 138 ]
  ! mayor_igual     [ shift and go to state 139 ]
  ! menor_igual     [ shift and go to state 140 ]
  ! igual           [ shift and go to state 141 ]
  ! diferente1      [ shift and go to state 142 ]
  ! diferente2      [ shift and go to state 143 ]
  ! between         [ shift and go to state 144 ]
  ! is              [ shift and go to state 145 ]
  ! isnull          [ shift and go to state 147 ]
  ! notnull         [ shift and go to state 148 ]
  ! as              [ shift and go to state 149 ]
  ! cadenaString    [ shift and go to state 150 ]
  ! cadena          [ shift and go to state 151 ]
  ! id              [ shift and go to state 152 ]
  ! in              [ shift and go to state 153 ]
  ! not             [ shift and go to state 146 ]
  ! like            [ shift and go to state 154 ]


state 750

    (193) CONDCHECK -> EXP mayor_igual EXP .
    (293) EXP -> EXP mayor_igual EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    parc            reduce using rule 193 (CONDCHECK -> EXP mayor_igual EXP .)
    mayor           reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    menor           reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    mayor_igual     reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    menor_igual     reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    igual           reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    diferente1      reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    diferente2      reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    and             reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    or              reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    between         reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    is              reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    isnull          reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    notnull         reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    as              reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    cadenaString    reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    cadena          reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    id              reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    in              reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    not             reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    like            reduce using rule 293 (EXP -> EXP mayor_igual EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134

  ! mas             [ reduce using rule 293 (EXP -> EXP mayor_igual EXP .) ]
  ! menos           [ reduce using rule 293 (EXP -> EXP mayor_igual EXP .) ]
  ! multiplicacion  [ reduce using rule 293 (EXP -> EXP mayor_igual EXP .) ]
  ! division        [ reduce using rule 293 (EXP -> EXP mayor_igual EXP .) ]
  ! modulo          [ reduce using rule 293 (EXP -> EXP mayor_igual EXP .) ]
  ! elevado         [ reduce using rule 293 (EXP -> EXP mayor_igual EXP .) ]
  ! and             [ shift and go to state 135 ]
  ! or              [ shift and go to state 136 ]
  ! mayor           [ shift and go to state 137 ]
  ! menor           [ shift and go to state 138 ]
  ! mayor_igual     [ shift and go to state 139 ]
  ! menor_igual     [ shift and go to state 140 ]
  ! igual           [ shift and go to state 141 ]
  ! diferente1      [ shift and go to state 142 ]
  ! diferente2      [ shift and go to state 143 ]
  ! between         [ shift and go to state 144 ]
  ! is              [ shift and go to state 145 ]
  ! isnull          [ shift and go to state 147 ]
  ! notnull         [ shift and go to state 148 ]
  ! as              [ shift and go to state 149 ]
  ! cadenaString    [ shift and go to state 150 ]
  ! cadena          [ shift and go to state 151 ]
  ! id              [ shift and go to state 152 ]
  ! in              [ shift and go to state 153 ]
  ! not             [ shift and go to state 146 ]
  ! like            [ shift and go to state 154 ]


state 751

    (194) CONDCHECK -> EXP menor_igual EXP .
    (294) EXP -> EXP menor_igual EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    parc            reduce using rule 194 (CONDCHECK -> EXP menor_igual EXP .)
    mayor           reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    menor           reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    mayor_igual     reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    menor_igual     reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    igual           reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    diferente1      reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    diferente2      reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    and             reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    or              reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    between         reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    is              reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    isnull          reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    notnull         reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    as              reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    cadenaString    reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    cadena          reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    id              reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    in              reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    not             reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    like            reduce using rule 294 (EXP -> EXP menor_igual EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134

  ! mas             [ reduce using rule 294 (EXP -> EXP menor_igual EXP .) ]
  ! menos           [ reduce using rule 294 (EXP -> EXP menor_igual EXP .) ]
  ! multiplicacion  [ reduce using rule 294 (EXP -> EXP menor_igual EXP .) ]
  ! division        [ reduce using rule 294 (EXP -> EXP menor_igual EXP .) ]
  ! modulo          [ reduce using rule 294 (EXP -> EXP menor_igual EXP .) ]
  ! elevado         [ reduce using rule 294 (EXP -> EXP menor_igual EXP .) ]
  ! and             [ shift and go to state 135 ]
  ! or              [ shift and go to state 136 ]
  ! mayor           [ shift and go to state 137 ]
  ! menor           [ shift and go to state 138 ]
  ! mayor_igual     [ shift and go to state 139 ]
  ! menor_igual     [ shift and go to state 140 ]
  ! igual           [ shift and go to state 141 ]
  ! diferente1      [ shift and go to state 142 ]
  ! diferente2      [ shift and go to state 143 ]
  ! between         [ shift and go to state 144 ]
  ! is              [ shift and go to state 145 ]
  ! isnull          [ shift and go to state 147 ]
  ! notnull         [ shift and go to state 148 ]
  ! as              [ shift and go to state 149 ]
  ! cadenaString    [ shift and go to state 150 ]
  ! cadena          [ shift and go to state 151 ]
  ! id              [ shift and go to state 152 ]
  ! in              [ shift and go to state 153 ]
  ! not             [ shift and go to state 146 ]
  ! like            [ shift and go to state 154 ]


state 752

    (195) CONDCHECK -> EXP igual EXP .
    (295) EXP -> EXP igual EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    parc            reduce using rule 195 (CONDCHECK -> EXP igual EXP .)
    mayor           reduce using rule 295 (EXP -> EXP igual EXP .)
    menor           reduce using rule 295 (EXP -> EXP igual EXP .)
    mayor_igual     reduce using rule 295 (EXP -> EXP igual EXP .)
    menor_igual     reduce using rule 295 (EXP -> EXP igual EXP .)
    igual           reduce using rule 295 (EXP -> EXP igual EXP .)
    diferente1      reduce using rule 295 (EXP -> EXP igual EXP .)
    diferente2      reduce using rule 295 (EXP -> EXP igual EXP .)
    and             reduce using rule 295 (EXP -> EXP igual EXP .)
    or              reduce using rule 295 (EXP -> EXP igual EXP .)
    between         reduce using rule 295 (EXP -> EXP igual EXP .)
    is              reduce using rule 295 (EXP -> EXP igual EXP .)
    isnull          reduce using rule 295 (EXP -> EXP igual EXP .)
    notnull         reduce using rule 295 (EXP -> EXP igual EXP .)
    as              reduce using rule 295 (EXP -> EXP igual EXP .)
    cadenaString    reduce using rule 295 (EXP -> EXP igual EXP .)
    cadena          reduce using rule 295 (EXP -> EXP igual EXP .)
    id              reduce using rule 295 (EXP -> EXP igual EXP .)
    in              reduce using rule 295 (EXP -> EXP igual EXP .)
    not             reduce using rule 295 (EXP -> EXP igual EXP .)
    like            reduce using rule 295 (EXP -> EXP igual EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134

  ! mas             [ reduce using rule 295 (EXP -> EXP igual EXP .) ]
  ! menos           [ reduce using rule 295 (EXP -> EXP igual EXP .) ]
  ! multiplicacion  [ reduce using rule 295 (EXP -> EXP igual EXP .) ]
  ! division        [ reduce using rule 295 (EXP -> EXP igual EXP .) ]
  ! modulo          [ reduce using rule 295 (EXP -> EXP igual EXP .) ]
  ! elevado         [ reduce using rule 295 (EXP -> EXP igual EXP .) ]
  ! and             [ shift and go to state 135 ]
  ! or              [ shift and go to state 136 ]
  ! mayor           [ shift and go to state 137 ]
  ! menor           [ shift and go to state 138 ]
  ! mayor_igual     [ shift and go to state 139 ]
  ! menor_igual     [ shift and go to state 140 ]
  ! igual           [ shift and go to state 141 ]
  ! diferente1      [ shift and go to state 142 ]
  ! diferente2      [ shift and go to state 143 ]
  ! between         [ shift and go to state 144 ]
  ! is              [ shift and go to state 145 ]
  ! isnull          [ shift and go to state 147 ]
  ! notnull         [ shift and go to state 148 ]
  ! as              [ shift and go to state 149 ]
  ! cadenaString    [ shift and go to state 150 ]
  ! cadena          [ shift and go to state 151 ]
  ! id              [ shift and go to state 152 ]
  ! in              [ shift and go to state 153 ]
  ! not             [ shift and go to state 146 ]
  ! like            [ shift and go to state 154 ]


state 753

    (196) CONDCHECK -> EXP diferente1 EXP .
    (296) EXP -> EXP diferente1 EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    parc            reduce using rule 196 (CONDCHECK -> EXP diferente1 EXP .)
    mayor           reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    menor           reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    mayor_igual     reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    menor_igual     reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    igual           reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    diferente1      reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    diferente2      reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    and             reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    or              reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    between         reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    is              reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    isnull          reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    notnull         reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    as              reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    cadenaString    reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    cadena          reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    id              reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    in              reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    not             reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    like            reduce using rule 296 (EXP -> EXP diferente1 EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134

  ! mas             [ reduce using rule 296 (EXP -> EXP diferente1 EXP .) ]
  ! menos           [ reduce using rule 296 (EXP -> EXP diferente1 EXP .) ]
  ! multiplicacion  [ reduce using rule 296 (EXP -> EXP diferente1 EXP .) ]
  ! division        [ reduce using rule 296 (EXP -> EXP diferente1 EXP .) ]
  ! modulo          [ reduce using rule 296 (EXP -> EXP diferente1 EXP .) ]
  ! elevado         [ reduce using rule 296 (EXP -> EXP diferente1 EXP .) ]
  ! and             [ shift and go to state 135 ]
  ! or              [ shift and go to state 136 ]
  ! mayor           [ shift and go to state 137 ]
  ! menor           [ shift and go to state 138 ]
  ! mayor_igual     [ shift and go to state 139 ]
  ! menor_igual     [ shift and go to state 140 ]
  ! igual           [ shift and go to state 141 ]
  ! diferente1      [ shift and go to state 142 ]
  ! diferente2      [ shift and go to state 143 ]
  ! between         [ shift and go to state 144 ]
  ! is              [ shift and go to state 145 ]
  ! isnull          [ shift and go to state 147 ]
  ! notnull         [ shift and go to state 148 ]
  ! as              [ shift and go to state 149 ]
  ! cadenaString    [ shift and go to state 150 ]
  ! cadena          [ shift and go to state 151 ]
  ! id              [ shift and go to state 152 ]
  ! in              [ shift and go to state 153 ]
  ! not             [ shift and go to state 146 ]
  ! like            [ shift and go to state 154 ]


state 754

    (197) CONDCHECK -> EXP diferente2 EXP .
    (297) EXP -> EXP diferente2 EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    parc            reduce using rule 197 (CONDCHECK -> EXP diferente2 EXP .)
    mayor           reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    menor           reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    mayor_igual     reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    menor_igual     reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    igual           reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    diferente1      reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    diferente2      reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    and             reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    or              reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    between         reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    is              reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    isnull          reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    notnull         reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    as              reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    cadenaString    reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    cadena          reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    id              reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    in              reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    not             reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    like            reduce using rule 297 (EXP -> EXP diferente2 EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134

  ! mas             [ reduce using rule 297 (EXP -> EXP diferente2 EXP .) ]
  ! menos           [ reduce using rule 297 (EXP -> EXP diferente2 EXP .) ]
  ! multiplicacion  [ reduce using rule 297 (EXP -> EXP diferente2 EXP .) ]
  ! division        [ reduce using rule 297 (EXP -> EXP diferente2 EXP .) ]
  ! modulo          [ reduce using rule 297 (EXP -> EXP diferente2 EXP .) ]
  ! elevado         [ reduce using rule 297 (EXP -> EXP diferente2 EXP .) ]
  ! and             [ shift and go to state 135 ]
  ! or              [ shift and go to state 136 ]
  ! mayor           [ shift and go to state 137 ]
  ! menor           [ shift and go to state 138 ]
  ! mayor_igual     [ shift and go to state 139 ]
  ! menor_igual     [ shift and go to state 140 ]
  ! igual           [ shift and go to state 141 ]
  ! diferente1      [ shift and go to state 142 ]
  ! diferente2      [ shift and go to state 143 ]
  ! between         [ shift and go to state 144 ]
  ! is              [ shift and go to state 145 ]
  ! isnull          [ shift and go to state 147 ]
  ! notnull         [ shift and go to state 148 ]
  ! as              [ shift and go to state 149 ]
  ! cadenaString    [ shift and go to state 150 ]
  ! cadena          [ shift and go to state 151 ]
  ! id              [ shift and go to state 152 ]
  ! in              [ shift and go to state 153 ]
  ! not             [ shift and go to state 146 ]
  ! like            [ shift and go to state 154 ]


state 755

    (56) CREATEINDEX -> create index id on id para id id ORDEN . parc

    parc            shift and go to state 797


state 756

    (57) CREATEINDEX -> create index id on id para id id parc .

    ptcoma          reduce using rule 57 (CREATEINDEX -> create index id on id para id id parc .)
    where           reduce using rule 57 (CREATEINDEX -> create index id on id para id id parc .)


state 757

    (55) CREATEINDEX -> create index id on id para id ORDEN parc .

    ptcoma          reduce using rule 55 (CREATEINDEX -> create index id on id para id ORDEN parc .)
    where           reduce using rule 55 (CREATEINDEX -> create index id on id para id ORDEN parc .)


state 758

    (62) ORDEN -> asc nulls . first
    (65) ORDEN -> asc nulls . last

    first           shift and go to state 798
    last            shift and go to state 799


state 759

    (63) ORDEN -> desc nulls . last
    (64) ORDEN -> desc nulls . first

    last            shift and go to state 800
    first           shift and go to state 801


state 760

    (60) ORDEN -> nulls first .

    parc            reduce using rule 60 (ORDEN -> nulls first .)


state 761

    (61) ORDEN -> nulls last .

    parc            reduce using rule 61 (ORDEN -> nulls last .)


state 762

    (54) CREATEINDEX -> create index id on id using hash para LEXP . parc
    (234) LEXP -> LEXP . coma EXP

    parc            shift and go to state 802
    coma            shift and go to state 128


state 763

    (53) CREATEINDEX -> create unique index id on id para LEXP parc .

    ptcoma          reduce using rule 53 (CREATEINDEX -> create unique index id on id para LEXP parc .)
    where           reduce using rule 53 (CREATEINDEX -> create unique index id on id para LEXP parc .)


state 764

    (45) LPARAM -> LPARAM coma inout id TIPO .

    parc            reduce using rule 45 (LPARAM -> LPARAM coma inout id TIPO .)
    coma            reduce using rule 45 (LPARAM -> LPARAM coma inout id TIPO .)


state 765

    (43) CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .

    language        reduce using rule 43 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    as              reduce using rule 43 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    do              reduce using rule 43 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    use             reduce using rule 43 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    select          reduce using rule 43 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    create          reduce using rule 43 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    update          reduce using rule 43 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    delete          reduce using rule 43 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    alter           reduce using rule 43 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    drop            reduce using rule 43 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    insert          reduce using rule 43 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    case            reduce using rule 43 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    show            reduce using rule 43 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    id              reduce using rule 43 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    if              reduce using rule 43 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    execute         reduce using rule 43 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)
    $end            reduce using rule 43 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn .)


state 766

    (44) CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .

    language        reduce using rule 44 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    as              reduce using rule 44 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    do              reduce using rule 44 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    use             reduce using rule 44 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    select          reduce using rule 44 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    create          reduce using rule 44 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    update          reduce using rule 44 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    delete          reduce using rule 44 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    alter           reduce using rule 44 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    drop            reduce using rule 44 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    insert          reduce using rule 44 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    case            reduce using rule 44 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    show            reduce using rule 44 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    id              reduce using rule 44 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    if              reduce using rule 44 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    execute         reduce using rule 44 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)
    $end            reduce using rule 44 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn .)


state 767

    (27) FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .
    (41) LCONTENIDOP -> LCONTENIDOP . CONTENIDOP
    (43) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn
    (44) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn

    use             reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    select          reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    create          reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    update          reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    delete          reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    alter           reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    drop            reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    insert          reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    case            reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    show            reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    id              reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    if              reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    execute         reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    $end            reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    as              shift and go to state 511
    do              shift and go to state 512

    CONTENIDOP                     shift and go to state 610

state 768

    (29) FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .

    use             reduce using rule 29 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    select          reduce using rule 29 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    create          reduce using rule 29 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    update          reduce using rule 29 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    delete          reduce using rule 29 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    alter           reduce using rule 29 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    drop            reduce using rule 29 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    insert          reduce using rule 29 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    case            reduce using rule 29 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    show            reduce using rule 29 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    id              reduce using rule 29 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    if              reduce using rule 29 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    execute         reduce using rule 29 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    $end            reduce using rule 29 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)


state 769

    (141) OP -> alter column id set not null .

    coma            reduce using rule 141 (OP -> alter column id set not null .)
    ptcoma          reduce using rule 141 (OP -> alter column id set not null .)


state 770

    (136) OP -> add constraint id check para CONDCHECK . parc

    parc            shift and go to state 803


state 771

    (137) OP -> add constraint id unique para LEXP . parc
    (234) LEXP -> LEXP . coma EXP

    parc            shift and go to state 804
    coma            shift and go to state 128


state 772

    (140) OP -> add constraint id foreign key para . LEXP parc references id para LEXP parc
    (234) LEXP -> . LEXP coma EXP
    (235) LEXP -> . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    LEXP                           shift and go to state 805
    EXP                            shift and go to state 62
    SELECT                         shift and go to state 74

state 773

    (139) OP -> add foreign key para LEXP parc . references id para LEXP parc

    references      shift and go to state 806


state 774

    (82) LELIF -> LELIF elsif EXP then LISTACONTENIDO .
    (89) LISTACONTENIDO -> LISTACONTENIDO . CONTENIDO
    (91) CONTENIDO -> . ASIGNACION ptcoma
    (92) CONTENIDO -> . CONDICIONIF ptcoma
    (93) CONTENIDO -> . RAISE ptcoma
    (94) CONTENIDO -> . BEGINEND ptcoma
    (95) CONTENIDO -> . CALLPROCEDURE ptcoma
    (96) CONTENIDO -> . declare LDEC
    (97) CONTENIDO -> . RETURN ptcoma
    (98) CONTENIDO -> . INSERT ptcoma
    (99) CONTENIDO -> . SELECT ptcoma
    (100) CONTENIDO -> . UPDATE ptcoma
    (101) CONTENIDO -> . DELETE ptcoma
    (102) CONTENIDO -> . CASE ptcoma
    (76) ASIGNACION -> . id dospuntos igual EXP
    (77) ASIGNACION -> . id igual EXP
    (78) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (79) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (80) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (81) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (103) RAISE -> . raise LEVEL FORMAT
    (104) RAISE -> . raise LEVEL EXP
    (105) RAISE -> . raise LEVEL
    (106) RAISE -> . raise
    (107) RAISE -> . raise LEVEL cadena coma id
    (51) BEGINEND -> . begin LISTACONTENIDO end
    (35) CALLPROCEDURE -> . execute id para LEXP parc
    (36) CALLPROCEDURE -> . execute id para parc
    (26) RETURN -> . return EXP
    (118) INSERT -> . insert into id values para LEXP parc
    (119) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (228) UPDATE -> . update id set LCAMPOS WHERE
    (231) DELETE -> . delete r_from id WHERE
    (85) CASE -> . case EXP LISTAWHEN ELSEF end case
    (86) CASE -> . case EXP LISTAWHEN end case
    (87) CASE -> . case LISTAWHEN ELSEF end case
    (88) CASE -> . case LISTAWHEN end case

    end             reduce using rule 82 (LELIF -> LELIF elsif EXP then LISTACONTENIDO .)
    elsif           reduce using rule 82 (LELIF -> LELIF elsif EXP then LISTACONTENIDO .)
    else            reduce using rule 82 (LELIF -> LELIF elsif EXP then LISTACONTENIDO .)
    declare         shift and go to state 308
    id              shift and go to state 17
    if              shift and go to state 31
    raise           shift and go to state 315
    begin           shift and go to state 316
    execute         shift and go to state 36
    return          shift and go to state 317
    insert          shift and go to state 33
    select          shift and go to state 26
    update          shift and go to state 28
    delete          shift and go to state 29
    case            shift and go to state 34

    CONTENIDO                      shift and go to state 422
    ASIGNACION                     shift and go to state 303
    CONDICIONIF                    shift and go to state 304
    RAISE                          shift and go to state 305
    BEGINEND                       shift and go to state 306
    CALLPROCEDURE                  shift and go to state 307
    RETURN                         shift and go to state 309
    INSERT                         shift and go to state 310
    SELECT                         shift and go to state 311
    UPDATE                         shift and go to state 312
    DELETE                         shift and go to state 313
    CASE                           shift and go to state 314

state 775

    (68) DECLARACIONES -> id TIPO not null ASIG . ptcoma

    ptcoma          shift and go to state 807


state 776

    (73) ASIG -> dospuntos igual EXP .
    (283) EXP -> EXP . mas EXP
    (284) EXP -> EXP . menos EXP
    (285) EXP -> EXP . multiplicacion EXP
    (286) EXP -> EXP . division EXP
    (287) EXP -> EXP . modulo EXP
    (288) EXP -> EXP . elevado EXP
    (289) EXP -> EXP . and EXP
    (290) EXP -> EXP . or EXP
    (291) EXP -> EXP . mayor EXP
    (292) EXP -> EXP . menor EXP
    (293) EXP -> EXP . mayor_igual EXP
    (294) EXP -> EXP . menor_igual EXP
    (295) EXP -> EXP . igual EXP
    (296) EXP -> EXP . diferente1 EXP
    (297) EXP -> EXP . diferente2 EXP
    (298) EXP -> EXP . between EXP
    (299) EXP -> EXP . is not null
    (300) EXP -> EXP . is null
    (301) EXP -> EXP . isnull
    (302) EXP -> EXP . notnull
    (303) EXP -> EXP . is true
    (304) EXP -> EXP . is not true
    (305) EXP -> EXP . is false
    (306) EXP -> EXP . is not false
    (307) EXP -> EXP . is unknown
    (308) EXP -> EXP . is not unknown
    (309) EXP -> EXP . as cadenaString
    (310) EXP -> EXP . cadenaString
    (311) EXP -> EXP . as cadena
    (312) EXP -> EXP . cadena
    (313) EXP -> EXP . as id
    (314) EXP -> EXP . id
    (318) EXP -> EXP . in para EXP parc
    (319) EXP -> EXP . not in para EXP parc
    (320) EXP -> EXP . not between EXP
    (321) EXP -> EXP . between symetric EXP
    (322) EXP -> EXP . not between symetric EXP
    (323) EXP -> EXP . is distinct r_from EXP
    (324) EXP -> EXP . is not distinct r_from EXP
    (325) EXP -> EXP . like cadena
    (326) EXP -> EXP . not like cadena

    ptcoma          reduce using rule 73 (ASIG -> dospuntos igual EXP .)
    mas             shift and go to state 129
    menos           shift and go to state 130
    multiplicacion  shift and go to state 131
    division        shift and go to state 132
    modulo          shift and go to state 133
    elevado         shift and go to state 134
    and             shift and go to state 135
    or              shift and go to state 136
    mayor           shift and go to state 137
    menor           shift and go to state 138
    mayor_igual     shift and go to state 139
    menor_igual     shift and go to state 140
    igual           shift and go to state 141
    diferente1      shift and go to state 142
    diferente2      shift and go to state 143
    between         shift and go to state 144
    is              shift and go to state 145
    isnull          shift and go to state 147
    notnull         shift and go to state 148
    as              shift and go to state 149
    cadenaString    shift and go to state 150
    cadena          shift and go to state 151
    id              shift and go to state 152
    in              shift and go to state 153
    not             shift and go to state 146
    like            shift and go to state 154


state 777

    (70) DECLARACIONES -> id constant TIPO not null . ASIG ptcoma
    (72) ASIG -> . default EXP
    (73) ASIG -> . dospuntos igual EXP
    (74) ASIG -> . igual EXP
    (75) ASIG -> .

    default         shift and go to state 639
    dospuntos       shift and go to state 640
    igual           shift and go to state 641
    ptcoma          reduce using rule 75 (ASIG -> .)

    ASIG                           shift and go to state 808

state 778

    (71) DECLARACIONES -> id constant TIPO ASIG ptcoma .

    id              reduce using rule 71 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    end             reduce using rule 71 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    else            reduce using rule 71 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    elsif           reduce using rule 71 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    declare         reduce using rule 71 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    if              reduce using rule 71 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    raise           reduce using rule 71 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    begin           reduce using rule 71 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    execute         reduce using rule 71 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    return          reduce using rule 71 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    insert          reduce using rule 71 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    select          reduce using rule 71 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    update          reduce using rule 71 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    delete          reduce using rule 71 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    case            reduce using rule 71 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    when            reduce using rule 71 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)
    dolarn          reduce using rule 71 (DECLARACIONES -> id constant TIPO ASIG ptcoma .)


state 779

    (113) FORMAT -> format para EXP coma . LEXP parc
    (234) LEXP -> . LEXP coma EXP
    (235) LEXP -> . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    EXP                            shift and go to state 62
    LEXP                           shift and go to state 809
    SELECT                         shift and go to state 74

state 780

    (119) INSERT -> insert into id para LEXP parc values para LEXP . parc
    (234) LEXP -> LEXP . coma EXP

    parc            shift and go to state 810
    coma            shift and go to state 128


state 781

    (200) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER . LIMIT
    (203) LIMIT -> . limit int
    (204) LIMIT -> . limit all
    (205) LIMIT -> . offset int
    (206) LIMIT -> . limit int offset int
    (207) LIMIT -> . offset int limit int
    (208) LIMIT -> . limit all offset int
    (209) LIMIT -> . offset int limit all
    (210) LIMIT -> .

  ! shift/reduce conflict for limit resolved as shift
  ! shift/reduce conflict for offset resolved as shift
    limit           shift and go to state 650
    offset          shift and go to state 651
    ptcoma          reduce using rule 210 (LIMIT -> .)
    r_from          reduce using rule 210 (LIMIT -> .)
    coma            reduce using rule 210 (LIMIT -> .)
    where           reduce using rule 210 (LIMIT -> .)
    group           reduce using rule 210 (LIMIT -> .)
    having          reduce using rule 210 (LIMIT -> .)
    union           reduce using rule 210 (LIMIT -> .)
    intersect       reduce using rule 210 (LIMIT -> .)
    except          reduce using rule 210 (LIMIT -> .)
    order           reduce using rule 210 (LIMIT -> .)
    mas             reduce using rule 210 (LIMIT -> .)
    menos           reduce using rule 210 (LIMIT -> .)
    multiplicacion  reduce using rule 210 (LIMIT -> .)
    division        reduce using rule 210 (LIMIT -> .)
    modulo          reduce using rule 210 (LIMIT -> .)
    elevado         reduce using rule 210 (LIMIT -> .)
    and             reduce using rule 210 (LIMIT -> .)
    or              reduce using rule 210 (LIMIT -> .)
    mayor           reduce using rule 210 (LIMIT -> .)
    menor           reduce using rule 210 (LIMIT -> .)
    mayor_igual     reduce using rule 210 (LIMIT -> .)
    menor_igual     reduce using rule 210 (LIMIT -> .)
    igual           reduce using rule 210 (LIMIT -> .)
    diferente1      reduce using rule 210 (LIMIT -> .)
    diferente2      reduce using rule 210 (LIMIT -> .)
    between         reduce using rule 210 (LIMIT -> .)
    is              reduce using rule 210 (LIMIT -> .)
    isnull          reduce using rule 210 (LIMIT -> .)
    notnull         reduce using rule 210 (LIMIT -> .)
    as              reduce using rule 210 (LIMIT -> .)
    cadenaString    reduce using rule 210 (LIMIT -> .)
    cadena          reduce using rule 210 (LIMIT -> .)
    id              reduce using rule 210 (LIMIT -> .)
    in              reduce using rule 210 (LIMIT -> .)
    not             reduce using rule 210 (LIMIT -> .)
    like            reduce using rule 210 (LIMIT -> .)
    then            reduce using rule 210 (LIMIT -> .)
    when            reduce using rule 210 (LIMIT -> .)
    parc            reduce using rule 210 (LIMIT -> .)
    constraint      reduce using rule 210 (LIMIT -> .)
    unique          reduce using rule 210 (LIMIT -> .)
    check           reduce using rule 210 (LIMIT -> .)
    default         reduce using rule 210 (LIMIT -> .)
    null            reduce using rule 210 (LIMIT -> .)
    primary         reduce using rule 210 (LIMIT -> .)
    references      reduce using rule 210 (LIMIT -> .)
    asc             reduce using rule 210 (LIMIT -> .)
    desc            reduce using rule 210 (LIMIT -> .)

  ! limit           [ reduce using rule 210 (LIMIT -> .) ]
  ! offset          [ reduce using rule 210 (LIMIT -> .) ]

    LIMIT                          shift and go to state 811

state 782

    (201) SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .

    ptcoma          reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    r_from          reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    coma            reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    where           reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    group           reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    having          reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    union           reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    intersect       reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    except          reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    order           reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    limit           reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    offset          reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mas             reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menos           reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    multiplicacion  reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    division        reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    modulo          reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    elevado         reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    and             reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    or              reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor           reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor           reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor_igual     reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor_igual     reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    igual           reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente1      reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente2      reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    between         reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    is              reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    isnull          reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    notnull         reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    as              reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadenaString    reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadena          reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    id              reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    in              reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    not             reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    like            reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    then            reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    when            reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    parc            reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    constraint      reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    unique          reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    check           reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    default         reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    null            reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    primary         reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    references      reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    asc             reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    desc            reduce using rule 201 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)


state 783

    (206) LIMIT -> limit int offset . int

    int             shift and go to state 812


state 784

    (208) LIMIT -> limit all offset . int

    int             shift and go to state 813


state 785

    (207) LIMIT -> offset int limit . int
    (209) LIMIT -> offset int limit . all

    int             shift and go to state 814
    all             shift and go to state 815


state 786

    (223) ORDER -> order by LEXP ORD .

    r_from          reduce using rule 223 (ORDER -> order by LEXP ORD .)
    coma            reduce using rule 223 (ORDER -> order by LEXP ORD .)
    where           reduce using rule 223 (ORDER -> order by LEXP ORD .)
    group           reduce using rule 223 (ORDER -> order by LEXP ORD .)
    having          reduce using rule 223 (ORDER -> order by LEXP ORD .)
    union           reduce using rule 223 (ORDER -> order by LEXP ORD .)
    intersect       reduce using rule 223 (ORDER -> order by LEXP ORD .)
    except          reduce using rule 223 (ORDER -> order by LEXP ORD .)
    order           reduce using rule 223 (ORDER -> order by LEXP ORD .)
    limit           reduce using rule 223 (ORDER -> order by LEXP ORD .)
    offset          reduce using rule 223 (ORDER -> order by LEXP ORD .)
    ptcoma          reduce using rule 223 (ORDER -> order by LEXP ORD .)
    mas             reduce using rule 223 (ORDER -> order by LEXP ORD .)
    menos           reduce using rule 223 (ORDER -> order by LEXP ORD .)
    multiplicacion  reduce using rule 223 (ORDER -> order by LEXP ORD .)
    division        reduce using rule 223 (ORDER -> order by LEXP ORD .)
    modulo          reduce using rule 223 (ORDER -> order by LEXP ORD .)
    elevado         reduce using rule 223 (ORDER -> order by LEXP ORD .)
    and             reduce using rule 223 (ORDER -> order by LEXP ORD .)
    or              reduce using rule 223 (ORDER -> order by LEXP ORD .)
    mayor           reduce using rule 223 (ORDER -> order by LEXP ORD .)
    menor           reduce using rule 223 (ORDER -> order by LEXP ORD .)
    mayor_igual     reduce using rule 223 (ORDER -> order by LEXP ORD .)
    menor_igual     reduce using rule 223 (ORDER -> order by LEXP ORD .)
    igual           reduce using rule 223 (ORDER -> order by LEXP ORD .)
    diferente1      reduce using rule 223 (ORDER -> order by LEXP ORD .)
    diferente2      reduce using rule 223 (ORDER -> order by LEXP ORD .)
    between         reduce using rule 223 (ORDER -> order by LEXP ORD .)
    is              reduce using rule 223 (ORDER -> order by LEXP ORD .)
    isnull          reduce using rule 223 (ORDER -> order by LEXP ORD .)
    notnull         reduce using rule 223 (ORDER -> order by LEXP ORD .)
    as              reduce using rule 223 (ORDER -> order by LEXP ORD .)
    cadenaString    reduce using rule 223 (ORDER -> order by LEXP ORD .)
    cadena          reduce using rule 223 (ORDER -> order by LEXP ORD .)
    id              reduce using rule 223 (ORDER -> order by LEXP ORD .)
    in              reduce using rule 223 (ORDER -> order by LEXP ORD .)
    not             reduce using rule 223 (ORDER -> order by LEXP ORD .)
    like            reduce using rule 223 (ORDER -> order by LEXP ORD .)
    then            reduce using rule 223 (ORDER -> order by LEXP ORD .)
    when            reduce using rule 223 (ORDER -> order by LEXP ORD .)
    parc            reduce using rule 223 (ORDER -> order by LEXP ORD .)
    constraint      reduce using rule 223 (ORDER -> order by LEXP ORD .)
    unique          reduce using rule 223 (ORDER -> order by LEXP ORD .)
    check           reduce using rule 223 (ORDER -> order by LEXP ORD .)
    default         reduce using rule 223 (ORDER -> order by LEXP ORD .)
    null            reduce using rule 223 (ORDER -> order by LEXP ORD .)
    primary         reduce using rule 223 (ORDER -> order by LEXP ORD .)
    references      reduce using rule 223 (ORDER -> order by LEXP ORD .)
    asc             reduce using rule 223 (ORDER -> order by LEXP ORD .)
    desc            reduce using rule 223 (ORDER -> order by LEXP ORD .)


state 787

    (226) ORD -> asc .

    r_from          reduce using rule 226 (ORD -> asc .)
    coma            reduce using rule 226 (ORD -> asc .)
    where           reduce using rule 226 (ORD -> asc .)
    group           reduce using rule 226 (ORD -> asc .)
    having          reduce using rule 226 (ORD -> asc .)
    union           reduce using rule 226 (ORD -> asc .)
    intersect       reduce using rule 226 (ORD -> asc .)
    except          reduce using rule 226 (ORD -> asc .)
    order           reduce using rule 226 (ORD -> asc .)
    limit           reduce using rule 226 (ORD -> asc .)
    offset          reduce using rule 226 (ORD -> asc .)
    ptcoma          reduce using rule 226 (ORD -> asc .)
    mas             reduce using rule 226 (ORD -> asc .)
    menos           reduce using rule 226 (ORD -> asc .)
    multiplicacion  reduce using rule 226 (ORD -> asc .)
    division        reduce using rule 226 (ORD -> asc .)
    modulo          reduce using rule 226 (ORD -> asc .)
    elevado         reduce using rule 226 (ORD -> asc .)
    and             reduce using rule 226 (ORD -> asc .)
    or              reduce using rule 226 (ORD -> asc .)
    mayor           reduce using rule 226 (ORD -> asc .)
    menor           reduce using rule 226 (ORD -> asc .)
    mayor_igual     reduce using rule 226 (ORD -> asc .)
    menor_igual     reduce using rule 226 (ORD -> asc .)
    igual           reduce using rule 226 (ORD -> asc .)
    diferente1      reduce using rule 226 (ORD -> asc .)
    diferente2      reduce using rule 226 (ORD -> asc .)
    between         reduce using rule 226 (ORD -> asc .)
    is              reduce using rule 226 (ORD -> asc .)
    isnull          reduce using rule 226 (ORD -> asc .)
    notnull         reduce using rule 226 (ORD -> asc .)
    as              reduce using rule 226 (ORD -> asc .)
    cadenaString    reduce using rule 226 (ORD -> asc .)
    cadena          reduce using rule 226 (ORD -> asc .)
    id              reduce using rule 226 (ORD -> asc .)
    in              reduce using rule 226 (ORD -> asc .)
    not             reduce using rule 226 (ORD -> asc .)
    like            reduce using rule 226 (ORD -> asc .)
    then            reduce using rule 226 (ORD -> asc .)
    when            reduce using rule 226 (ORD -> asc .)
    parc            reduce using rule 226 (ORD -> asc .)
    constraint      reduce using rule 226 (ORD -> asc .)
    unique          reduce using rule 226 (ORD -> asc .)
    check           reduce using rule 226 (ORD -> asc .)
    default         reduce using rule 226 (ORD -> asc .)
    null            reduce using rule 226 (ORD -> asc .)
    primary         reduce using rule 226 (ORD -> asc .)
    references      reduce using rule 226 (ORD -> asc .)
    asc             reduce using rule 226 (ORD -> asc .)
    desc            reduce using rule 226 (ORD -> asc .)


state 788

    (227) ORD -> desc .

    r_from          reduce using rule 227 (ORD -> desc .)
    coma            reduce using rule 227 (ORD -> desc .)
    where           reduce using rule 227 (ORD -> desc .)
    group           reduce using rule 227 (ORD -> desc .)
    having          reduce using rule 227 (ORD -> desc .)
    union           reduce using rule 227 (ORD -> desc .)
    intersect       reduce using rule 227 (ORD -> desc .)
    except          reduce using rule 227 (ORD -> desc .)
    order           reduce using rule 227 (ORD -> desc .)
    limit           reduce using rule 227 (ORD -> desc .)
    offset          reduce using rule 227 (ORD -> desc .)
    ptcoma          reduce using rule 227 (ORD -> desc .)
    mas             reduce using rule 227 (ORD -> desc .)
    menos           reduce using rule 227 (ORD -> desc .)
    multiplicacion  reduce using rule 227 (ORD -> desc .)
    division        reduce using rule 227 (ORD -> desc .)
    modulo          reduce using rule 227 (ORD -> desc .)
    elevado         reduce using rule 227 (ORD -> desc .)
    and             reduce using rule 227 (ORD -> desc .)
    or              reduce using rule 227 (ORD -> desc .)
    mayor           reduce using rule 227 (ORD -> desc .)
    menor           reduce using rule 227 (ORD -> desc .)
    mayor_igual     reduce using rule 227 (ORD -> desc .)
    menor_igual     reduce using rule 227 (ORD -> desc .)
    igual           reduce using rule 227 (ORD -> desc .)
    diferente1      reduce using rule 227 (ORD -> desc .)
    diferente2      reduce using rule 227 (ORD -> desc .)
    between         reduce using rule 227 (ORD -> desc .)
    is              reduce using rule 227 (ORD -> desc .)
    isnull          reduce using rule 227 (ORD -> desc .)
    notnull         reduce using rule 227 (ORD -> desc .)
    as              reduce using rule 227 (ORD -> desc .)
    cadenaString    reduce using rule 227 (ORD -> desc .)
    cadena          reduce using rule 227 (ORD -> desc .)
    id              reduce using rule 227 (ORD -> desc .)
    in              reduce using rule 227 (ORD -> desc .)
    not             reduce using rule 227 (ORD -> desc .)
    like            reduce using rule 227 (ORD -> desc .)
    then            reduce using rule 227 (ORD -> desc .)
    when            reduce using rule 227 (ORD -> desc .)
    parc            reduce using rule 227 (ORD -> desc .)
    constraint      reduce using rule 227 (ORD -> desc .)
    unique          reduce using rule 227 (ORD -> desc .)
    check           reduce using rule 227 (ORD -> desc .)
    default         reduce using rule 227 (ORD -> desc .)
    null            reduce using rule 227 (ORD -> desc .)
    primary         reduce using rule 227 (ORD -> desc .)
    references      reduce using rule 227 (ORD -> desc .)
    asc             reduce using rule 227 (ORD -> desc .)
    desc            reduce using rule 227 (ORD -> desc .)


state 789

    (252) TIPO -> timestamp para int parc without time zone .

    r_from          reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    coma            reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    where           reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    group           reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    having          reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    union           reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    intersect       reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    except          reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    order           reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    limit           reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    offset          reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    ptcoma          reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    mas             reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    menos           reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    multiplicacion  reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    division        reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    modulo          reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    elevado         reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    and             reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    or              reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    mayor           reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    menor           reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    mayor_igual     reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    menor_igual     reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    igual           reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    diferente1      reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    diferente2      reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    between         reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    is              reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    isnull          reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    notnull         reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    as              reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    cadenaString    reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    cadena          reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    id              reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    in              reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    not             reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    like            reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    then            reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    when            reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    parc            reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    constraint      reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    unique          reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    check           reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    default         reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    null            reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    primary         reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    references      reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    asc             reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    desc            reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    dospuntos       reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    language        reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)
    do              reduce using rule 252 (TIPO -> timestamp para int parc without time zone .)


state 790

    (253) TIPO -> timestamp para int parc with time zone .

    r_from          reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    coma            reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    where           reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    group           reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    having          reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    union           reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    intersect       reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    except          reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    order           reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    limit           reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    offset          reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    ptcoma          reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    mas             reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    menos           reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    multiplicacion  reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    division        reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    modulo          reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    elevado         reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    and             reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    or              reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    mayor           reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    menor           reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    mayor_igual     reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    menor_igual     reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    igual           reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    diferente1      reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    diferente2      reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    between         reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    is              reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    isnull          reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    notnull         reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    as              reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    cadenaString    reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    cadena          reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    id              reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    in              reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    not             reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    like            reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    then            reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    when            reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    parc            reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    constraint      reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    unique          reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    check           reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    default         reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    null            reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    primary         reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    references      reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    asc             reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    desc            reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    dospuntos       reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    language        reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)
    do              reduce using rule 253 (TIPO -> timestamp para int parc with time zone .)


state 791

    (254) TIPO -> time para int parc without time zone .

    r_from          reduce using rule 254 (TIPO -> time para int parc without time zone .)
    coma            reduce using rule 254 (TIPO -> time para int parc without time zone .)
    where           reduce using rule 254 (TIPO -> time para int parc without time zone .)
    group           reduce using rule 254 (TIPO -> time para int parc without time zone .)
    having          reduce using rule 254 (TIPO -> time para int parc without time zone .)
    union           reduce using rule 254 (TIPO -> time para int parc without time zone .)
    intersect       reduce using rule 254 (TIPO -> time para int parc without time zone .)
    except          reduce using rule 254 (TIPO -> time para int parc without time zone .)
    order           reduce using rule 254 (TIPO -> time para int parc without time zone .)
    limit           reduce using rule 254 (TIPO -> time para int parc without time zone .)
    offset          reduce using rule 254 (TIPO -> time para int parc without time zone .)
    ptcoma          reduce using rule 254 (TIPO -> time para int parc without time zone .)
    mas             reduce using rule 254 (TIPO -> time para int parc without time zone .)
    menos           reduce using rule 254 (TIPO -> time para int parc without time zone .)
    multiplicacion  reduce using rule 254 (TIPO -> time para int parc without time zone .)
    division        reduce using rule 254 (TIPO -> time para int parc without time zone .)
    modulo          reduce using rule 254 (TIPO -> time para int parc without time zone .)
    elevado         reduce using rule 254 (TIPO -> time para int parc without time zone .)
    and             reduce using rule 254 (TIPO -> time para int parc without time zone .)
    or              reduce using rule 254 (TIPO -> time para int parc without time zone .)
    mayor           reduce using rule 254 (TIPO -> time para int parc without time zone .)
    menor           reduce using rule 254 (TIPO -> time para int parc without time zone .)
    mayor_igual     reduce using rule 254 (TIPO -> time para int parc without time zone .)
    menor_igual     reduce using rule 254 (TIPO -> time para int parc without time zone .)
    igual           reduce using rule 254 (TIPO -> time para int parc without time zone .)
    diferente1      reduce using rule 254 (TIPO -> time para int parc without time zone .)
    diferente2      reduce using rule 254 (TIPO -> time para int parc without time zone .)
    between         reduce using rule 254 (TIPO -> time para int parc without time zone .)
    is              reduce using rule 254 (TIPO -> time para int parc without time zone .)
    isnull          reduce using rule 254 (TIPO -> time para int parc without time zone .)
    notnull         reduce using rule 254 (TIPO -> time para int parc without time zone .)
    as              reduce using rule 254 (TIPO -> time para int parc without time zone .)
    cadenaString    reduce using rule 254 (TIPO -> time para int parc without time zone .)
    cadena          reduce using rule 254 (TIPO -> time para int parc without time zone .)
    id              reduce using rule 254 (TIPO -> time para int parc without time zone .)
    in              reduce using rule 254 (TIPO -> time para int parc without time zone .)
    not             reduce using rule 254 (TIPO -> time para int parc without time zone .)
    like            reduce using rule 254 (TIPO -> time para int parc without time zone .)
    then            reduce using rule 254 (TIPO -> time para int parc without time zone .)
    when            reduce using rule 254 (TIPO -> time para int parc without time zone .)
    parc            reduce using rule 254 (TIPO -> time para int parc without time zone .)
    constraint      reduce using rule 254 (TIPO -> time para int parc without time zone .)
    unique          reduce using rule 254 (TIPO -> time para int parc without time zone .)
    check           reduce using rule 254 (TIPO -> time para int parc without time zone .)
    default         reduce using rule 254 (TIPO -> time para int parc without time zone .)
    null            reduce using rule 254 (TIPO -> time para int parc without time zone .)
    primary         reduce using rule 254 (TIPO -> time para int parc without time zone .)
    references      reduce using rule 254 (TIPO -> time para int parc without time zone .)
    asc             reduce using rule 254 (TIPO -> time para int parc without time zone .)
    desc            reduce using rule 254 (TIPO -> time para int parc without time zone .)
    dospuntos       reduce using rule 254 (TIPO -> time para int parc without time zone .)
    language        reduce using rule 254 (TIPO -> time para int parc without time zone .)
    do              reduce using rule 254 (TIPO -> time para int parc without time zone .)


state 792

    (255) TIPO -> time para int parc with time zone .

    r_from          reduce using rule 255 (TIPO -> time para int parc with time zone .)
    coma            reduce using rule 255 (TIPO -> time para int parc with time zone .)
    where           reduce using rule 255 (TIPO -> time para int parc with time zone .)
    group           reduce using rule 255 (TIPO -> time para int parc with time zone .)
    having          reduce using rule 255 (TIPO -> time para int parc with time zone .)
    union           reduce using rule 255 (TIPO -> time para int parc with time zone .)
    intersect       reduce using rule 255 (TIPO -> time para int parc with time zone .)
    except          reduce using rule 255 (TIPO -> time para int parc with time zone .)
    order           reduce using rule 255 (TIPO -> time para int parc with time zone .)
    limit           reduce using rule 255 (TIPO -> time para int parc with time zone .)
    offset          reduce using rule 255 (TIPO -> time para int parc with time zone .)
    ptcoma          reduce using rule 255 (TIPO -> time para int parc with time zone .)
    mas             reduce using rule 255 (TIPO -> time para int parc with time zone .)
    menos           reduce using rule 255 (TIPO -> time para int parc with time zone .)
    multiplicacion  reduce using rule 255 (TIPO -> time para int parc with time zone .)
    division        reduce using rule 255 (TIPO -> time para int parc with time zone .)
    modulo          reduce using rule 255 (TIPO -> time para int parc with time zone .)
    elevado         reduce using rule 255 (TIPO -> time para int parc with time zone .)
    and             reduce using rule 255 (TIPO -> time para int parc with time zone .)
    or              reduce using rule 255 (TIPO -> time para int parc with time zone .)
    mayor           reduce using rule 255 (TIPO -> time para int parc with time zone .)
    menor           reduce using rule 255 (TIPO -> time para int parc with time zone .)
    mayor_igual     reduce using rule 255 (TIPO -> time para int parc with time zone .)
    menor_igual     reduce using rule 255 (TIPO -> time para int parc with time zone .)
    igual           reduce using rule 255 (TIPO -> time para int parc with time zone .)
    diferente1      reduce using rule 255 (TIPO -> time para int parc with time zone .)
    diferente2      reduce using rule 255 (TIPO -> time para int parc with time zone .)
    between         reduce using rule 255 (TIPO -> time para int parc with time zone .)
    is              reduce using rule 255 (TIPO -> time para int parc with time zone .)
    isnull          reduce using rule 255 (TIPO -> time para int parc with time zone .)
    notnull         reduce using rule 255 (TIPO -> time para int parc with time zone .)
    as              reduce using rule 255 (TIPO -> time para int parc with time zone .)
    cadenaString    reduce using rule 255 (TIPO -> time para int parc with time zone .)
    cadena          reduce using rule 255 (TIPO -> time para int parc with time zone .)
    id              reduce using rule 255 (TIPO -> time para int parc with time zone .)
    in              reduce using rule 255 (TIPO -> time para int parc with time zone .)
    not             reduce using rule 255 (TIPO -> time para int parc with time zone .)
    like            reduce using rule 255 (TIPO -> time para int parc with time zone .)
    then            reduce using rule 255 (TIPO -> time para int parc with time zone .)
    when            reduce using rule 255 (TIPO -> time para int parc with time zone .)
    parc            reduce using rule 255 (TIPO -> time para int parc with time zone .)
    constraint      reduce using rule 255 (TIPO -> time para int parc with time zone .)
    unique          reduce using rule 255 (TIPO -> time para int parc with time zone .)
    check           reduce using rule 255 (TIPO -> time para int parc with time zone .)
    default         reduce using rule 255 (TIPO -> time para int parc with time zone .)
    null            reduce using rule 255 (TIPO -> time para int parc with time zone .)
    primary         reduce using rule 255 (TIPO -> time para int parc with time zone .)
    references      reduce using rule 255 (TIPO -> time para int parc with time zone .)
    asc             reduce using rule 255 (TIPO -> time para int parc with time zone .)
    desc            reduce using rule 255 (TIPO -> time para int parc with time zone .)
    dospuntos       reduce using rule 255 (TIPO -> time para int parc with time zone .)
    language        reduce using rule 255 (TIPO -> time para int parc with time zone .)
    do              reduce using rule 255 (TIPO -> time para int parc with time zone .)


state 793

    (180) OPCOLUMN -> constraint id check para . CONDCHECK parc
    (191) CONDCHECK -> . EXP mayor EXP
    (192) CONDCHECK -> . EXP menor EXP
    (193) CONDCHECK -> . EXP mayor_igual EXP
    (194) CONDCHECK -> . EXP menor_igual EXP
    (195) CONDCHECK -> . EXP igual EXP
    (196) CONDCHECK -> . EXP diferente1 EXP
    (197) CONDCHECK -> . EXP diferente2 EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    CONDCHECK                      shift and go to state 816
    EXP                            shift and go to state 597
    SELECT                         shift and go to state 74

state 794

    (181) OPCOLUMN -> check para CONDCHECK parc .

    constraint      reduce using rule 181 (OPCOLUMN -> check para CONDCHECK parc .)
    unique          reduce using rule 181 (OPCOLUMN -> check para CONDCHECK parc .)
    check           reduce using rule 181 (OPCOLUMN -> check para CONDCHECK parc .)
    default         reduce using rule 181 (OPCOLUMN -> check para CONDCHECK parc .)
    not             reduce using rule 181 (OPCOLUMN -> check para CONDCHECK parc .)
    null            reduce using rule 181 (OPCOLUMN -> check para CONDCHECK parc .)
    primary         reduce using rule 181 (OPCOLUMN -> check para CONDCHECK parc .)
    references      reduce using rule 181 (OPCOLUMN -> check para CONDCHECK parc .)
    parc            reduce using rule 181 (OPCOLUMN -> check para CONDCHECK parc .)
    coma            reduce using rule 181 (OPCOLUMN -> check para CONDCHECK parc .)


state 795

    (198) HERENCIA -> inherits para id parc .

    ptcoma          reduce using rule 198 (HERENCIA -> inherits para id parc .)


state 796

    (188) OPCONST -> foreign key para LEXP parc references . id para LEXP parc

    id              shift and go to state 817


state 797

    (56) CREATEINDEX -> create index id on id para id id ORDEN parc .

    ptcoma          reduce using rule 56 (CREATEINDEX -> create index id on id para id id ORDEN parc .)
    where           reduce using rule 56 (CREATEINDEX -> create index id on id para id id ORDEN parc .)


state 798

    (62) ORDEN -> asc nulls first .

    parc            reduce using rule 62 (ORDEN -> asc nulls first .)


state 799

    (65) ORDEN -> asc nulls last .

    parc            reduce using rule 65 (ORDEN -> asc nulls last .)


state 800

    (63) ORDEN -> desc nulls last .

    parc            reduce using rule 63 (ORDEN -> desc nulls last .)


state 801

    (64) ORDEN -> desc nulls first .

    parc            reduce using rule 64 (ORDEN -> desc nulls first .)


state 802

    (54) CREATEINDEX -> create index id on id using hash para LEXP parc .

    ptcoma          reduce using rule 54 (CREATEINDEX -> create index id on id using hash para LEXP parc .)
    where           reduce using rule 54 (CREATEINDEX -> create index id on id using hash para LEXP parc .)


state 803

    (136) OP -> add constraint id check para CONDCHECK parc .

    coma            reduce using rule 136 (OP -> add constraint id check para CONDCHECK parc .)
    ptcoma          reduce using rule 136 (OP -> add constraint id check para CONDCHECK parc .)


state 804

    (137) OP -> add constraint id unique para LEXP parc .

    coma            reduce using rule 137 (OP -> add constraint id unique para LEXP parc .)
    ptcoma          reduce using rule 137 (OP -> add constraint id unique para LEXP parc .)


state 805

    (140) OP -> add constraint id foreign key para LEXP . parc references id para LEXP parc
    (234) LEXP -> LEXP . coma EXP

    parc            shift and go to state 818
    coma            shift and go to state 128


state 806

    (139) OP -> add foreign key para LEXP parc references . id para LEXP parc

    id              shift and go to state 819


state 807

    (68) DECLARACIONES -> id TIPO not null ASIG ptcoma .

    id              reduce using rule 68 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    end             reduce using rule 68 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    else            reduce using rule 68 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    elsif           reduce using rule 68 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    declare         reduce using rule 68 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    if              reduce using rule 68 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    raise           reduce using rule 68 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    begin           reduce using rule 68 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    execute         reduce using rule 68 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    return          reduce using rule 68 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    insert          reduce using rule 68 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    select          reduce using rule 68 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    update          reduce using rule 68 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    delete          reduce using rule 68 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    case            reduce using rule 68 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    when            reduce using rule 68 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)
    dolarn          reduce using rule 68 (DECLARACIONES -> id TIPO not null ASIG ptcoma .)


state 808

    (70) DECLARACIONES -> id constant TIPO not null ASIG . ptcoma

    ptcoma          shift and go to state 820


state 809

    (113) FORMAT -> format para EXP coma LEXP . parc
    (234) LEXP -> LEXP . coma EXP

    parc            shift and go to state 821
    coma            shift and go to state 128


state 810

    (119) INSERT -> insert into id para LEXP parc values para LEXP parc .

    ptcoma          reduce using rule 119 (INSERT -> insert into id para LEXP parc values para LEXP parc .)


state 811

    (200) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .

    ptcoma          reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    r_from          reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    coma            reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    where           reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    group           reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    having          reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    union           reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    intersect       reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    except          reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    order           reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    limit           reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    offset          reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mas             reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menos           reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    multiplicacion  reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    division        reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    modulo          reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    elevado         reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    and             reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    or              reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor           reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor           reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor_igual     reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor_igual     reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    igual           reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente1      reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente2      reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    between         reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    is              reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    isnull          reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    notnull         reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    as              reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadenaString    reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadena          reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    id              reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    in              reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    not             reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    like            reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    then            reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    when            reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    parc            reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    constraint      reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    unique          reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    check           reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    default         reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    null            reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    primary         reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    references      reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    asc             reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    desc            reduce using rule 200 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)


state 812

    (206) LIMIT -> limit int offset int .

    ptcoma          reduce using rule 206 (LIMIT -> limit int offset int .)
    r_from          reduce using rule 206 (LIMIT -> limit int offset int .)
    coma            reduce using rule 206 (LIMIT -> limit int offset int .)
    where           reduce using rule 206 (LIMIT -> limit int offset int .)
    group           reduce using rule 206 (LIMIT -> limit int offset int .)
    having          reduce using rule 206 (LIMIT -> limit int offset int .)
    union           reduce using rule 206 (LIMIT -> limit int offset int .)
    intersect       reduce using rule 206 (LIMIT -> limit int offset int .)
    except          reduce using rule 206 (LIMIT -> limit int offset int .)
    order           reduce using rule 206 (LIMIT -> limit int offset int .)
    limit           reduce using rule 206 (LIMIT -> limit int offset int .)
    offset          reduce using rule 206 (LIMIT -> limit int offset int .)
    mas             reduce using rule 206 (LIMIT -> limit int offset int .)
    menos           reduce using rule 206 (LIMIT -> limit int offset int .)
    multiplicacion  reduce using rule 206 (LIMIT -> limit int offset int .)
    division        reduce using rule 206 (LIMIT -> limit int offset int .)
    modulo          reduce using rule 206 (LIMIT -> limit int offset int .)
    elevado         reduce using rule 206 (LIMIT -> limit int offset int .)
    and             reduce using rule 206 (LIMIT -> limit int offset int .)
    or              reduce using rule 206 (LIMIT -> limit int offset int .)
    mayor           reduce using rule 206 (LIMIT -> limit int offset int .)
    menor           reduce using rule 206 (LIMIT -> limit int offset int .)
    mayor_igual     reduce using rule 206 (LIMIT -> limit int offset int .)
    menor_igual     reduce using rule 206 (LIMIT -> limit int offset int .)
    igual           reduce using rule 206 (LIMIT -> limit int offset int .)
    diferente1      reduce using rule 206 (LIMIT -> limit int offset int .)
    diferente2      reduce using rule 206 (LIMIT -> limit int offset int .)
    between         reduce using rule 206 (LIMIT -> limit int offset int .)
    is              reduce using rule 206 (LIMIT -> limit int offset int .)
    isnull          reduce using rule 206 (LIMIT -> limit int offset int .)
    notnull         reduce using rule 206 (LIMIT -> limit int offset int .)
    as              reduce using rule 206 (LIMIT -> limit int offset int .)
    cadenaString    reduce using rule 206 (LIMIT -> limit int offset int .)
    cadena          reduce using rule 206 (LIMIT -> limit int offset int .)
    id              reduce using rule 206 (LIMIT -> limit int offset int .)
    in              reduce using rule 206 (LIMIT -> limit int offset int .)
    not             reduce using rule 206 (LIMIT -> limit int offset int .)
    like            reduce using rule 206 (LIMIT -> limit int offset int .)
    then            reduce using rule 206 (LIMIT -> limit int offset int .)
    when            reduce using rule 206 (LIMIT -> limit int offset int .)
    parc            reduce using rule 206 (LIMIT -> limit int offset int .)
    constraint      reduce using rule 206 (LIMIT -> limit int offset int .)
    unique          reduce using rule 206 (LIMIT -> limit int offset int .)
    check           reduce using rule 206 (LIMIT -> limit int offset int .)
    default         reduce using rule 206 (LIMIT -> limit int offset int .)
    null            reduce using rule 206 (LIMIT -> limit int offset int .)
    primary         reduce using rule 206 (LIMIT -> limit int offset int .)
    references      reduce using rule 206 (LIMIT -> limit int offset int .)
    asc             reduce using rule 206 (LIMIT -> limit int offset int .)
    desc            reduce using rule 206 (LIMIT -> limit int offset int .)


state 813

    (208) LIMIT -> limit all offset int .

    ptcoma          reduce using rule 208 (LIMIT -> limit all offset int .)
    r_from          reduce using rule 208 (LIMIT -> limit all offset int .)
    coma            reduce using rule 208 (LIMIT -> limit all offset int .)
    where           reduce using rule 208 (LIMIT -> limit all offset int .)
    group           reduce using rule 208 (LIMIT -> limit all offset int .)
    having          reduce using rule 208 (LIMIT -> limit all offset int .)
    union           reduce using rule 208 (LIMIT -> limit all offset int .)
    intersect       reduce using rule 208 (LIMIT -> limit all offset int .)
    except          reduce using rule 208 (LIMIT -> limit all offset int .)
    order           reduce using rule 208 (LIMIT -> limit all offset int .)
    limit           reduce using rule 208 (LIMIT -> limit all offset int .)
    offset          reduce using rule 208 (LIMIT -> limit all offset int .)
    mas             reduce using rule 208 (LIMIT -> limit all offset int .)
    menos           reduce using rule 208 (LIMIT -> limit all offset int .)
    multiplicacion  reduce using rule 208 (LIMIT -> limit all offset int .)
    division        reduce using rule 208 (LIMIT -> limit all offset int .)
    modulo          reduce using rule 208 (LIMIT -> limit all offset int .)
    elevado         reduce using rule 208 (LIMIT -> limit all offset int .)
    and             reduce using rule 208 (LIMIT -> limit all offset int .)
    or              reduce using rule 208 (LIMIT -> limit all offset int .)
    mayor           reduce using rule 208 (LIMIT -> limit all offset int .)
    menor           reduce using rule 208 (LIMIT -> limit all offset int .)
    mayor_igual     reduce using rule 208 (LIMIT -> limit all offset int .)
    menor_igual     reduce using rule 208 (LIMIT -> limit all offset int .)
    igual           reduce using rule 208 (LIMIT -> limit all offset int .)
    diferente1      reduce using rule 208 (LIMIT -> limit all offset int .)
    diferente2      reduce using rule 208 (LIMIT -> limit all offset int .)
    between         reduce using rule 208 (LIMIT -> limit all offset int .)
    is              reduce using rule 208 (LIMIT -> limit all offset int .)
    isnull          reduce using rule 208 (LIMIT -> limit all offset int .)
    notnull         reduce using rule 208 (LIMIT -> limit all offset int .)
    as              reduce using rule 208 (LIMIT -> limit all offset int .)
    cadenaString    reduce using rule 208 (LIMIT -> limit all offset int .)
    cadena          reduce using rule 208 (LIMIT -> limit all offset int .)
    id              reduce using rule 208 (LIMIT -> limit all offset int .)
    in              reduce using rule 208 (LIMIT -> limit all offset int .)
    not             reduce using rule 208 (LIMIT -> limit all offset int .)
    like            reduce using rule 208 (LIMIT -> limit all offset int .)
    then            reduce using rule 208 (LIMIT -> limit all offset int .)
    when            reduce using rule 208 (LIMIT -> limit all offset int .)
    parc            reduce using rule 208 (LIMIT -> limit all offset int .)
    constraint      reduce using rule 208 (LIMIT -> limit all offset int .)
    unique          reduce using rule 208 (LIMIT -> limit all offset int .)
    check           reduce using rule 208 (LIMIT -> limit all offset int .)
    default         reduce using rule 208 (LIMIT -> limit all offset int .)
    null            reduce using rule 208 (LIMIT -> limit all offset int .)
    primary         reduce using rule 208 (LIMIT -> limit all offset int .)
    references      reduce using rule 208 (LIMIT -> limit all offset int .)
    asc             reduce using rule 208 (LIMIT -> limit all offset int .)
    desc            reduce using rule 208 (LIMIT -> limit all offset int .)


state 814

    (207) LIMIT -> offset int limit int .

    ptcoma          reduce using rule 207 (LIMIT -> offset int limit int .)
    r_from          reduce using rule 207 (LIMIT -> offset int limit int .)
    coma            reduce using rule 207 (LIMIT -> offset int limit int .)
    where           reduce using rule 207 (LIMIT -> offset int limit int .)
    group           reduce using rule 207 (LIMIT -> offset int limit int .)
    having          reduce using rule 207 (LIMIT -> offset int limit int .)
    union           reduce using rule 207 (LIMIT -> offset int limit int .)
    intersect       reduce using rule 207 (LIMIT -> offset int limit int .)
    except          reduce using rule 207 (LIMIT -> offset int limit int .)
    order           reduce using rule 207 (LIMIT -> offset int limit int .)
    limit           reduce using rule 207 (LIMIT -> offset int limit int .)
    offset          reduce using rule 207 (LIMIT -> offset int limit int .)
    mas             reduce using rule 207 (LIMIT -> offset int limit int .)
    menos           reduce using rule 207 (LIMIT -> offset int limit int .)
    multiplicacion  reduce using rule 207 (LIMIT -> offset int limit int .)
    division        reduce using rule 207 (LIMIT -> offset int limit int .)
    modulo          reduce using rule 207 (LIMIT -> offset int limit int .)
    elevado         reduce using rule 207 (LIMIT -> offset int limit int .)
    and             reduce using rule 207 (LIMIT -> offset int limit int .)
    or              reduce using rule 207 (LIMIT -> offset int limit int .)
    mayor           reduce using rule 207 (LIMIT -> offset int limit int .)
    menor           reduce using rule 207 (LIMIT -> offset int limit int .)
    mayor_igual     reduce using rule 207 (LIMIT -> offset int limit int .)
    menor_igual     reduce using rule 207 (LIMIT -> offset int limit int .)
    igual           reduce using rule 207 (LIMIT -> offset int limit int .)
    diferente1      reduce using rule 207 (LIMIT -> offset int limit int .)
    diferente2      reduce using rule 207 (LIMIT -> offset int limit int .)
    between         reduce using rule 207 (LIMIT -> offset int limit int .)
    is              reduce using rule 207 (LIMIT -> offset int limit int .)
    isnull          reduce using rule 207 (LIMIT -> offset int limit int .)
    notnull         reduce using rule 207 (LIMIT -> offset int limit int .)
    as              reduce using rule 207 (LIMIT -> offset int limit int .)
    cadenaString    reduce using rule 207 (LIMIT -> offset int limit int .)
    cadena          reduce using rule 207 (LIMIT -> offset int limit int .)
    id              reduce using rule 207 (LIMIT -> offset int limit int .)
    in              reduce using rule 207 (LIMIT -> offset int limit int .)
    not             reduce using rule 207 (LIMIT -> offset int limit int .)
    like            reduce using rule 207 (LIMIT -> offset int limit int .)
    then            reduce using rule 207 (LIMIT -> offset int limit int .)
    when            reduce using rule 207 (LIMIT -> offset int limit int .)
    parc            reduce using rule 207 (LIMIT -> offset int limit int .)
    constraint      reduce using rule 207 (LIMIT -> offset int limit int .)
    unique          reduce using rule 207 (LIMIT -> offset int limit int .)
    check           reduce using rule 207 (LIMIT -> offset int limit int .)
    default         reduce using rule 207 (LIMIT -> offset int limit int .)
    null            reduce using rule 207 (LIMIT -> offset int limit int .)
    primary         reduce using rule 207 (LIMIT -> offset int limit int .)
    references      reduce using rule 207 (LIMIT -> offset int limit int .)
    asc             reduce using rule 207 (LIMIT -> offset int limit int .)
    desc            reduce using rule 207 (LIMIT -> offset int limit int .)


state 815

    (209) LIMIT -> offset int limit all .

    ptcoma          reduce using rule 209 (LIMIT -> offset int limit all .)
    r_from          reduce using rule 209 (LIMIT -> offset int limit all .)
    coma            reduce using rule 209 (LIMIT -> offset int limit all .)
    where           reduce using rule 209 (LIMIT -> offset int limit all .)
    group           reduce using rule 209 (LIMIT -> offset int limit all .)
    having          reduce using rule 209 (LIMIT -> offset int limit all .)
    union           reduce using rule 209 (LIMIT -> offset int limit all .)
    intersect       reduce using rule 209 (LIMIT -> offset int limit all .)
    except          reduce using rule 209 (LIMIT -> offset int limit all .)
    order           reduce using rule 209 (LIMIT -> offset int limit all .)
    limit           reduce using rule 209 (LIMIT -> offset int limit all .)
    offset          reduce using rule 209 (LIMIT -> offset int limit all .)
    mas             reduce using rule 209 (LIMIT -> offset int limit all .)
    menos           reduce using rule 209 (LIMIT -> offset int limit all .)
    multiplicacion  reduce using rule 209 (LIMIT -> offset int limit all .)
    division        reduce using rule 209 (LIMIT -> offset int limit all .)
    modulo          reduce using rule 209 (LIMIT -> offset int limit all .)
    elevado         reduce using rule 209 (LIMIT -> offset int limit all .)
    and             reduce using rule 209 (LIMIT -> offset int limit all .)
    or              reduce using rule 209 (LIMIT -> offset int limit all .)
    mayor           reduce using rule 209 (LIMIT -> offset int limit all .)
    menor           reduce using rule 209 (LIMIT -> offset int limit all .)
    mayor_igual     reduce using rule 209 (LIMIT -> offset int limit all .)
    menor_igual     reduce using rule 209 (LIMIT -> offset int limit all .)
    igual           reduce using rule 209 (LIMIT -> offset int limit all .)
    diferente1      reduce using rule 209 (LIMIT -> offset int limit all .)
    diferente2      reduce using rule 209 (LIMIT -> offset int limit all .)
    between         reduce using rule 209 (LIMIT -> offset int limit all .)
    is              reduce using rule 209 (LIMIT -> offset int limit all .)
    isnull          reduce using rule 209 (LIMIT -> offset int limit all .)
    notnull         reduce using rule 209 (LIMIT -> offset int limit all .)
    as              reduce using rule 209 (LIMIT -> offset int limit all .)
    cadenaString    reduce using rule 209 (LIMIT -> offset int limit all .)
    cadena          reduce using rule 209 (LIMIT -> offset int limit all .)
    id              reduce using rule 209 (LIMIT -> offset int limit all .)
    in              reduce using rule 209 (LIMIT -> offset int limit all .)
    not             reduce using rule 209 (LIMIT -> offset int limit all .)
    like            reduce using rule 209 (LIMIT -> offset int limit all .)
    then            reduce using rule 209 (LIMIT -> offset int limit all .)
    when            reduce using rule 209 (LIMIT -> offset int limit all .)
    parc            reduce using rule 209 (LIMIT -> offset int limit all .)
    constraint      reduce using rule 209 (LIMIT -> offset int limit all .)
    unique          reduce using rule 209 (LIMIT -> offset int limit all .)
    check           reduce using rule 209 (LIMIT -> offset int limit all .)
    default         reduce using rule 209 (LIMIT -> offset int limit all .)
    null            reduce using rule 209 (LIMIT -> offset int limit all .)
    primary         reduce using rule 209 (LIMIT -> offset int limit all .)
    references      reduce using rule 209 (LIMIT -> offset int limit all .)
    asc             reduce using rule 209 (LIMIT -> offset int limit all .)
    desc            reduce using rule 209 (LIMIT -> offset int limit all .)


state 816

    (180) OPCOLUMN -> constraint id check para CONDCHECK . parc

    parc            shift and go to state 822


state 817

    (188) OPCONST -> foreign key para LEXP parc references id . para LEXP parc

    para            shift and go to state 823


state 818

    (140) OP -> add constraint id foreign key para LEXP parc . references id para LEXP parc

    references      shift and go to state 824


state 819

    (139) OP -> add foreign key para LEXP parc references id . para LEXP parc

    para            shift and go to state 825


state 820

    (70) DECLARACIONES -> id constant TIPO not null ASIG ptcoma .

    id              reduce using rule 70 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    end             reduce using rule 70 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    else            reduce using rule 70 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    elsif           reduce using rule 70 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    declare         reduce using rule 70 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    if              reduce using rule 70 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    raise           reduce using rule 70 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    begin           reduce using rule 70 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    execute         reduce using rule 70 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    return          reduce using rule 70 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    insert          reduce using rule 70 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    select          reduce using rule 70 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    update          reduce using rule 70 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    delete          reduce using rule 70 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    case            reduce using rule 70 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    when            reduce using rule 70 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)
    dolarn          reduce using rule 70 (DECLARACIONES -> id constant TIPO not null ASIG ptcoma .)


state 821

    (113) FORMAT -> format para EXP coma LEXP parc .

    ptcoma          reduce using rule 113 (FORMAT -> format para EXP coma LEXP parc .)


state 822

    (180) OPCOLUMN -> constraint id check para CONDCHECK parc .

    constraint      reduce using rule 180 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    unique          reduce using rule 180 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    check           reduce using rule 180 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    default         reduce using rule 180 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    not             reduce using rule 180 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    null            reduce using rule 180 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    primary         reduce using rule 180 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    references      reduce using rule 180 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    parc            reduce using rule 180 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    coma            reduce using rule 180 (OPCOLUMN -> constraint id check para CONDCHECK parc .)


state 823

    (188) OPCONST -> foreign key para LEXP parc references id para . LEXP parc
    (234) LEXP -> . LEXP coma EXP
    (235) LEXP -> . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    LEXP                           shift and go to state 826
    EXP                            shift and go to state 62
    SELECT                         shift and go to state 74

state 824

    (140) OP -> add constraint id foreign key para LEXP parc references . id para LEXP parc

    id              shift and go to state 827


state 825

    (139) OP -> add foreign key para LEXP parc references id para . LEXP parc
    (234) LEXP -> . LEXP coma EXP
    (235) LEXP -> . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    LEXP                           shift and go to state 828
    EXP                            shift and go to state 62
    SELECT                         shift and go to state 74

state 826

    (188) OPCONST -> foreign key para LEXP parc references id para LEXP . parc
    (234) LEXP -> LEXP . coma EXP

    parc            shift and go to state 829
    coma            shift and go to state 128


state 827

    (140) OP -> add constraint id foreign key para LEXP parc references id . para LEXP parc

    para            shift and go to state 830


state 828

    (139) OP -> add foreign key para LEXP parc references id para LEXP . parc
    (234) LEXP -> LEXP . coma EXP

    parc            shift and go to state 831
    coma            shift and go to state 128


state 829

    (188) OPCONST -> foreign key para LEXP parc references id para LEXP parc .

    parc            reduce using rule 188 (OPCONST -> foreign key para LEXP parc references id para LEXP parc .)
    coma            reduce using rule 188 (OPCONST -> foreign key para LEXP parc references id para LEXP parc .)


state 830

    (140) OP -> add constraint id foreign key para LEXP parc references id para . LEXP parc
    (234) LEXP -> . LEXP coma EXP
    (235) LEXP -> . EXP
    (283) EXP -> . EXP mas EXP
    (284) EXP -> . EXP menos EXP
    (285) EXP -> . EXP multiplicacion EXP
    (286) EXP -> . EXP division EXP
    (287) EXP -> . EXP modulo EXP
    (288) EXP -> . EXP elevado EXP
    (289) EXP -> . EXP and EXP
    (290) EXP -> . EXP or EXP
    (291) EXP -> . EXP mayor EXP
    (292) EXP -> . EXP menor EXP
    (293) EXP -> . EXP mayor_igual EXP
    (294) EXP -> . EXP menor_igual EXP
    (295) EXP -> . EXP igual EXP
    (296) EXP -> . EXP diferente1 EXP
    (297) EXP -> . EXP diferente2 EXP
    (298) EXP -> . EXP between EXP
    (299) EXP -> . EXP is not null
    (300) EXP -> . EXP is null
    (301) EXP -> . EXP isnull
    (302) EXP -> . EXP notnull
    (303) EXP -> . EXP is true
    (304) EXP -> . EXP is not true
    (305) EXP -> . EXP is false
    (306) EXP -> . EXP is not false
    (307) EXP -> . EXP is unknown
    (308) EXP -> . EXP is not unknown
    (309) EXP -> . EXP as cadenaString
    (310) EXP -> . EXP cadenaString
    (311) EXP -> . EXP as cadena
    (312) EXP -> . EXP cadena
    (313) EXP -> . EXP as id
    (314) EXP -> . EXP id
    (315) EXP -> . mas EXP
    (316) EXP -> . menos EXP
    (317) EXP -> . not EXP
    (318) EXP -> . EXP in para EXP parc
    (319) EXP -> . EXP not in para EXP parc
    (320) EXP -> . EXP not between EXP
    (321) EXP -> . EXP between symetric EXP
    (322) EXP -> . EXP not between symetric EXP
    (323) EXP -> . EXP is distinct r_from EXP
    (324) EXP -> . EXP is not distinct r_from EXP
    (325) EXP -> . EXP like cadena
    (326) EXP -> . EXP not like cadena
    (327) EXP -> . SELECT
    (328) EXP -> . para EXP parc
    (329) EXP -> . id para LEXP parc
    (330) EXP -> . id para parc
    (331) EXP -> . any para LEXP parc
    (332) EXP -> . all para LEXP parc
    (333) EXP -> . some para LEXP parc
    (334) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (335) EXP -> . int
    (336) EXP -> . decimales
    (337) EXP -> . cadena
    (338) EXP -> . cadenaString
    (339) EXP -> . true
    (340) EXP -> . false
    (341) EXP -> . id
    (342) EXP -> . multiplicacion
    (343) EXP -> . null
    (344) EXP -> . current_time
    (345) EXP -> . current_date
    (346) EXP -> . timestamp cadena
    (347) EXP -> . interval cadena
    (348) EXP -> . cadena as TIPO
    (349) EXP -> . default
    (350) EXP -> . idPunto
    (200) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (201) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (202) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 63
    menos           shift and go to state 64
    not             shift and go to state 66
    para            shift and go to state 73
    id              shift and go to state 72
    any             shift and go to state 75
    all             shift and go to state 76
    some            shift and go to state 77
    extract         shift and go to state 78
    int             shift and go to state 80
    decimales       shift and go to state 81
    cadena          shift and go to state 71
    cadenaString    shift and go to state 70
    true            shift and go to state 68
    false           shift and go to state 69
    multiplicacion  shift and go to state 65
    null            shift and go to state 67
    current_time    shift and go to state 82
    current_date    shift and go to state 83
    timestamp       shift and go to state 79
    interval        shift and go to state 84
    default         shift and go to state 85
    idPunto         shift and go to state 86
    select          shift and go to state 26

    LEXP                           shift and go to state 832
    EXP                            shift and go to state 62
    SELECT                         shift and go to state 74

state 831

    (139) OP -> add foreign key para LEXP parc references id para LEXP parc .

    coma            reduce using rule 139 (OP -> add foreign key para LEXP parc references id para LEXP parc .)
    ptcoma          reduce using rule 139 (OP -> add foreign key para LEXP parc references id para LEXP parc .)


state 832

    (140) OP -> add constraint id foreign key para LEXP parc references id para LEXP . parc
    (234) LEXP -> LEXP . coma EXP

    parc            shift and go to state 833
    coma            shift and go to state 128


state 833

    (140) OP -> add constraint id foreign key para LEXP parc references id para LEXP parc .

    coma            reduce using rule 140 (OP -> add constraint id foreign key para LEXP parc references id para LEXP parc .)
    ptcoma          reduce using rule 140 (OP -> add constraint id foreign key para LEXP parc references id para LEXP parc .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ptcoma in state 18 resolved as shift
WARNING: shift/reduce conflict for r_from in state 61 resolved as shift
WARNING: shift/reduce conflict for coma in state 61 resolved as shift
WARNING: shift/reduce conflict for where in state 61 resolved as shift
WARNING: shift/reduce conflict for mas in state 62 resolved as shift
WARNING: shift/reduce conflict for menos in state 62 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 62 resolved as shift
WARNING: shift/reduce conflict for division in state 62 resolved as shift
WARNING: shift/reduce conflict for modulo in state 62 resolved as shift
WARNING: shift/reduce conflict for elevado in state 62 resolved as shift
WARNING: shift/reduce conflict for and in state 62 resolved as shift
WARNING: shift/reduce conflict for or in state 62 resolved as shift
WARNING: shift/reduce conflict for mayor in state 62 resolved as shift
WARNING: shift/reduce conflict for menor in state 62 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 62 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 62 resolved as shift
WARNING: shift/reduce conflict for igual in state 62 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 62 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 62 resolved as shift
WARNING: shift/reduce conflict for between in state 62 resolved as shift
WARNING: shift/reduce conflict for is in state 62 resolved as shift
WARNING: shift/reduce conflict for isnull in state 62 resolved as shift
WARNING: shift/reduce conflict for notnull in state 62 resolved as shift
WARNING: shift/reduce conflict for as in state 62 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 62 resolved as shift
WARNING: shift/reduce conflict for cadena in state 62 resolved as shift
WARNING: shift/reduce conflict for id in state 62 resolved as shift
WARNING: shift/reduce conflict for in in state 62 resolved as shift
WARNING: shift/reduce conflict for not in state 62 resolved as shift
WARNING: shift/reduce conflict for like in state 62 resolved as shift
WARNING: shift/reduce conflict for as in state 71 resolved as shift
WARNING: shift/reduce conflict for mas in state 121 resolved as shift
WARNING: shift/reduce conflict for menos in state 121 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 121 resolved as shift
WARNING: shift/reduce conflict for division in state 121 resolved as shift
WARNING: shift/reduce conflict for modulo in state 121 resolved as shift
WARNING: shift/reduce conflict for elevado in state 121 resolved as shift
WARNING: shift/reduce conflict for and in state 121 resolved as shift
WARNING: shift/reduce conflict for or in state 121 resolved as shift
WARNING: shift/reduce conflict for mayor in state 121 resolved as shift
WARNING: shift/reduce conflict for menor in state 121 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 121 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 121 resolved as shift
WARNING: shift/reduce conflict for igual in state 121 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 121 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 121 resolved as shift
WARNING: shift/reduce conflict for between in state 121 resolved as shift
WARNING: shift/reduce conflict for is in state 121 resolved as shift
WARNING: shift/reduce conflict for isnull in state 121 resolved as shift
WARNING: shift/reduce conflict for notnull in state 121 resolved as shift
WARNING: shift/reduce conflict for as in state 121 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 121 resolved as shift
WARNING: shift/reduce conflict for cadena in state 121 resolved as shift
WARNING: shift/reduce conflict for id in state 121 resolved as shift
WARNING: shift/reduce conflict for in in state 121 resolved as shift
WARNING: shift/reduce conflict for not in state 121 resolved as shift
WARNING: shift/reduce conflict for like in state 121 resolved as shift
WARNING: shift/reduce conflict for group in state 127 resolved as shift
WARNING: shift/reduce conflict for coma in state 205 resolved as shift
WARNING: shift/reduce conflict for where in state 205 resolved as shift
WARNING: shift/reduce conflict for having in state 206 resolved as shift
WARNING: shift/reduce conflict for mas in state 208 resolved as shift
WARNING: shift/reduce conflict for menos in state 208 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 208 resolved as shift
WARNING: shift/reduce conflict for division in state 208 resolved as shift
WARNING: shift/reduce conflict for modulo in state 208 resolved as shift
WARNING: shift/reduce conflict for elevado in state 208 resolved as shift
WARNING: shift/reduce conflict for and in state 208 resolved as shift
WARNING: shift/reduce conflict for or in state 208 resolved as shift
WARNING: shift/reduce conflict for mayor in state 208 resolved as shift
WARNING: shift/reduce conflict for menor in state 208 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 208 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 208 resolved as shift
WARNING: shift/reduce conflict for igual in state 208 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 208 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 208 resolved as shift
WARNING: shift/reduce conflict for between in state 208 resolved as shift
WARNING: shift/reduce conflict for is in state 208 resolved as shift
WARNING: shift/reduce conflict for isnull in state 208 resolved as shift
WARNING: shift/reduce conflict for notnull in state 208 resolved as shift
WARNING: shift/reduce conflict for as in state 208 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 208 resolved as shift
WARNING: shift/reduce conflict for cadena in state 208 resolved as shift
WARNING: shift/reduce conflict for id in state 208 resolved as shift
WARNING: shift/reduce conflict for in in state 208 resolved as shift
WARNING: shift/reduce conflict for not in state 208 resolved as shift
WARNING: shift/reduce conflict for like in state 208 resolved as shift
WARNING: shift/reduce conflict for cadena in state 241 resolved as shift
WARNING: shift/reduce conflict for modulo in state 249 resolved as shift
WARNING: shift/reduce conflict for coma in state 335 resolved as shift
WARNING: shift/reduce conflict for where in state 335 resolved as shift
WARNING: shift/reduce conflict for group in state 336 resolved as shift
WARNING: shift/reduce conflict for union in state 337 resolved as shift
WARNING: shift/reduce conflict for intersect in state 337 resolved as shift
WARNING: shift/reduce conflict for except in state 337 resolved as shift
WARNING: shift/reduce conflict for id in state 429 resolved as shift
WARNING: shift/reduce conflict for group in state 458 resolved as shift
WARNING: shift/reduce conflict for having in state 459 resolved as shift
WARNING: shift/reduce conflict for order in state 460 resolved as shift
WARNING: shift/reduce conflict for mas in state 464 resolved as shift
WARNING: shift/reduce conflict for menos in state 464 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 464 resolved as shift
WARNING: shift/reduce conflict for division in state 464 resolved as shift
WARNING: shift/reduce conflict for modulo in state 464 resolved as shift
WARNING: shift/reduce conflict for elevado in state 464 resolved as shift
WARNING: shift/reduce conflict for and in state 464 resolved as shift
WARNING: shift/reduce conflict for or in state 464 resolved as shift
WARNING: shift/reduce conflict for mayor in state 464 resolved as shift
WARNING: shift/reduce conflict for menor in state 464 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 464 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 464 resolved as shift
WARNING: shift/reduce conflict for igual in state 464 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 464 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 464 resolved as shift
WARNING: shift/reduce conflict for between in state 464 resolved as shift
WARNING: shift/reduce conflict for is in state 464 resolved as shift
WARNING: shift/reduce conflict for isnull in state 464 resolved as shift
WARNING: shift/reduce conflict for notnull in state 464 resolved as shift
WARNING: shift/reduce conflict for as in state 464 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 464 resolved as shift
WARNING: shift/reduce conflict for cadena in state 464 resolved as shift
WARNING: shift/reduce conflict for id in state 464 resolved as shift
WARNING: shift/reduce conflict for in in state 464 resolved as shift
WARNING: shift/reduce conflict for not in state 464 resolved as shift
WARNING: shift/reduce conflict for like in state 464 resolved as shift
WARNING: shift/reduce conflict for coma in state 465 resolved as shift
WARNING: shift/reduce conflict for coma in state 529 resolved as shift
WARNING: shift/reduce conflict for as in state 545 resolved as shift
WARNING: shift/reduce conflict for having in state 552 resolved as shift
WARNING: shift/reduce conflict for union in state 553 resolved as shift
WARNING: shift/reduce conflict for intersect in state 553 resolved as shift
WARNING: shift/reduce conflict for except in state 553 resolved as shift
WARNING: shift/reduce conflict for limit in state 554 resolved as shift
WARNING: shift/reduce conflict for offset in state 554 resolved as shift
WARNING: shift/reduce conflict for mas in state 556 resolved as shift
WARNING: shift/reduce conflict for menos in state 556 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 556 resolved as shift
WARNING: shift/reduce conflict for division in state 556 resolved as shift
WARNING: shift/reduce conflict for modulo in state 556 resolved as shift
WARNING: shift/reduce conflict for elevado in state 556 resolved as shift
WARNING: shift/reduce conflict for and in state 556 resolved as shift
WARNING: shift/reduce conflict for or in state 556 resolved as shift
WARNING: shift/reduce conflict for mayor in state 556 resolved as shift
WARNING: shift/reduce conflict for menor in state 556 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 556 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 556 resolved as shift
WARNING: shift/reduce conflict for igual in state 556 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 556 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 556 resolved as shift
WARNING: shift/reduce conflict for between in state 556 resolved as shift
WARNING: shift/reduce conflict for is in state 556 resolved as shift
WARNING: shift/reduce conflict for isnull in state 556 resolved as shift
WARNING: shift/reduce conflict for notnull in state 556 resolved as shift
WARNING: shift/reduce conflict for as in state 556 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 556 resolved as shift
WARNING: shift/reduce conflict for cadena in state 556 resolved as shift
WARNING: shift/reduce conflict for id in state 556 resolved as shift
WARNING: shift/reduce conflict for in in state 556 resolved as shift
WARNING: shift/reduce conflict for not in state 556 resolved as shift
WARNING: shift/reduce conflict for like in state 556 resolved as shift
WARNING: shift/reduce conflict for mas in state 558 resolved as shift
WARNING: shift/reduce conflict for menos in state 558 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 558 resolved as shift
WARNING: shift/reduce conflict for division in state 558 resolved as shift
WARNING: shift/reduce conflict for modulo in state 558 resolved as shift
WARNING: shift/reduce conflict for elevado in state 558 resolved as shift
WARNING: shift/reduce conflict for and in state 558 resolved as shift
WARNING: shift/reduce conflict for or in state 558 resolved as shift
WARNING: shift/reduce conflict for mayor in state 558 resolved as shift
WARNING: shift/reduce conflict for menor in state 558 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 558 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 558 resolved as shift
WARNING: shift/reduce conflict for igual in state 558 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 558 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 558 resolved as shift
WARNING: shift/reduce conflict for between in state 558 resolved as shift
WARNING: shift/reduce conflict for is in state 558 resolved as shift
WARNING: shift/reduce conflict for isnull in state 558 resolved as shift
WARNING: shift/reduce conflict for notnull in state 558 resolved as shift
WARNING: shift/reduce conflict for as in state 558 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 558 resolved as shift
WARNING: shift/reduce conflict for cadena in state 558 resolved as shift
WARNING: shift/reduce conflict for id in state 558 resolved as shift
WARNING: shift/reduce conflict for in in state 558 resolved as shift
WARNING: shift/reduce conflict for not in state 558 resolved as shift
WARNING: shift/reduce conflict for like in state 558 resolved as shift
WARNING: shift/reduce conflict for mas in state 559 resolved as shift
WARNING: shift/reduce conflict for menos in state 559 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 559 resolved as shift
WARNING: shift/reduce conflict for division in state 559 resolved as shift
WARNING: shift/reduce conflict for modulo in state 559 resolved as shift
WARNING: shift/reduce conflict for elevado in state 559 resolved as shift
WARNING: shift/reduce conflict for and in state 559 resolved as shift
WARNING: shift/reduce conflict for or in state 559 resolved as shift
WARNING: shift/reduce conflict for mayor in state 559 resolved as shift
WARNING: shift/reduce conflict for menor in state 559 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 559 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 559 resolved as shift
WARNING: shift/reduce conflict for igual in state 559 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 559 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 559 resolved as shift
WARNING: shift/reduce conflict for between in state 559 resolved as shift
WARNING: shift/reduce conflict for is in state 559 resolved as shift
WARNING: shift/reduce conflict for isnull in state 559 resolved as shift
WARNING: shift/reduce conflict for notnull in state 559 resolved as shift
WARNING: shift/reduce conflict for as in state 559 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 559 resolved as shift
WARNING: shift/reduce conflict for cadena in state 559 resolved as shift
WARNING: shift/reduce conflict for id in state 559 resolved as shift
WARNING: shift/reduce conflict for in in state 559 resolved as shift
WARNING: shift/reduce conflict for not in state 559 resolved as shift
WARNING: shift/reduce conflict for like in state 559 resolved as shift
WARNING: shift/reduce conflict for cadena in state 562 resolved as shift
WARNING: shift/reduce conflict for id in state 600 resolved as shift
WARNING: shift/reduce conflict for union in state 647 resolved as shift
WARNING: shift/reduce conflict for intersect in state 647 resolved as shift
WARNING: shift/reduce conflict for except in state 647 resolved as shift
WARNING: shift/reduce conflict for order in state 648 resolved as shift
WARNING: shift/reduce conflict for mas in state 653 resolved as shift
WARNING: shift/reduce conflict for menos in state 653 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 653 resolved as shift
WARNING: shift/reduce conflict for division in state 653 resolved as shift
WARNING: shift/reduce conflict for modulo in state 653 resolved as shift
WARNING: shift/reduce conflict for elevado in state 653 resolved as shift
WARNING: shift/reduce conflict for and in state 653 resolved as shift
WARNING: shift/reduce conflict for or in state 653 resolved as shift
WARNING: shift/reduce conflict for mayor in state 653 resolved as shift
WARNING: shift/reduce conflict for menor in state 653 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 653 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 653 resolved as shift
WARNING: shift/reduce conflict for igual in state 653 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 653 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 653 resolved as shift
WARNING: shift/reduce conflict for between in state 653 resolved as shift
WARNING: shift/reduce conflict for is in state 653 resolved as shift
WARNING: shift/reduce conflict for isnull in state 653 resolved as shift
WARNING: shift/reduce conflict for notnull in state 653 resolved as shift
WARNING: shift/reduce conflict for as in state 653 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 653 resolved as shift
WARNING: shift/reduce conflict for cadena in state 653 resolved as shift
WARNING: shift/reduce conflict for id in state 653 resolved as shift
WARNING: shift/reduce conflict for in in state 653 resolved as shift
WARNING: shift/reduce conflict for not in state 653 resolved as shift
WARNING: shift/reduce conflict for like in state 653 resolved as shift
WARNING: shift/reduce conflict for not in state 667 resolved as shift
WARNING: shift/reduce conflict for order in state 729 resolved as shift
WARNING: shift/reduce conflict for limit in state 730 resolved as shift
WARNING: shift/reduce conflict for offset in state 730 resolved as shift
WARNING: shift/reduce conflict for offset in state 731 resolved as shift
WARNING: shift/reduce conflict for offset in state 732 resolved as shift
WARNING: shift/reduce conflict for limit in state 733 resolved as shift
WARNING: shift/reduce conflict for coma in state 734 resolved as shift
WARNING: shift/reduce conflict for asc in state 734 resolved as shift
WARNING: shift/reduce conflict for desc in state 734 resolved as shift
WARNING: shift/reduce conflict for parc in state 735 resolved as shift
WARNING: shift/reduce conflict for limit in state 781 resolved as shift
WARNING: shift/reduce conflict for offset in state 781 resolved as shift
