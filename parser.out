Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    punto

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> SELECT ptcoma
Rule 5     instruccion -> CREATETABLE
Rule 6     instruccion -> UPDATE ptcoma
Rule 7     instruccion -> DELETE ptcoma
Rule 8     instruccion -> ALTER ptcoma
Rule 9     instruccion -> DROP ptcoma
Rule 10    instruccion -> INSERT ptcoma
Rule 11    instruccion -> CREATETYPE ptcoma
Rule 12    instruccion -> CASE
Rule 13    instruccion -> CREATEDB ptcoma
Rule 14    instruccion -> SHOWDB ptcoma
Rule 15    instruccion -> SHOW ptcoma
Rule 16    instruccion -> use id ptcoma
Rule 17    CASE -> case LISTAWHEN ELSE end
Rule 18    CASE -> case LISTAWHEN end
Rule 19    LISTAWHEN -> LISTAWHEN WHEN
Rule 20    LISTAWHEN -> WHEN
Rule 21    WHEN -> when LEXP then LEXP
Rule 22    ELSE -> else LEXP
Rule 23    INSERT -> insert into id values para LEXP parc
Rule 24    INSERT -> insert into id para LEXP parc values para LEXP parc
Rule 25    DROP -> drop all para parc
Rule 26    DROP -> drop table id
Rule 27    DROP -> drop databases if exist id
Rule 28    DROP -> drop databases id
Rule 29    ALTER -> alter databases id rename to id
Rule 30    ALTER -> alter databases id owner to id
Rule 31    ALTER -> alter table id OP
Rule 32    OP -> add column id TIPO
Rule 33    OP -> add check para CONDCHECK parc
Rule 34    OP -> add constraint id unique para id parc
Rule 35    OP -> add foreign key para LEXP parc references id para LEXP parc
Rule 36    OP -> add constraint id foreign key para LEXP parc references id para LEXP parc
Rule 37    OP -> alter column id set not null
Rule 38    OP -> alter column id set null
Rule 39    OP -> drop constraint id
Rule 40    OP -> drop column LEXP
Rule 41    OP -> drop check id
Rule 42    OP -> rename column id to id
Rule 43    OP -> listaalc
Rule 44    listaalc -> listaalc coma alc
Rule 45    listaalc -> alc
Rule 46    alc -> alter column id type TIPO
Rule 47    SHOWDB -> show dbs
Rule 48    SHOW -> show tables para id parc
Rule 49    SHOW -> show collection para parc
Rule 50    CREATEDB -> create RD if not exist id
Rule 51    CREATEDB -> create RD if not exist id OPCCDB
Rule 52    CREATEDB -> create RD id
Rule 53    CREATEDB -> create RD id OPCCDB
Rule 54    OPCCDB -> PROPIETARIO
Rule 55    OPCCDB -> MODO
Rule 56    OPCCDB -> PROPIETARIO MODO
Rule 57    RD -> or replace databases
Rule 58    RD -> databases
Rule 59    PROPIETARIO -> owner igual id
Rule 60    PROPIETARIO -> owner igual cadena
Rule 61    PROPIETARIO -> owner igual cadenaString
Rule 62    PROPIETARIO -> owner id
Rule 63    PROPIETARIO -> owner cadena
Rule 64    PROPIETARIO -> owner cadenaString
Rule 65    MODO -> mode igual int
Rule 66    MODO -> mode int
Rule 67    CREATETABLE -> create table id para LDEF parc ptcoma
Rule 68    CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma
Rule 69    LDEF -> LDEF coma COLDEF
Rule 70    LDEF -> COLDEF
Rule 71    COLDEF -> OPCONST
Rule 72    COLDEF -> constraint id OPCONST
Rule 73    COLDEF -> id TIPO
Rule 74    COLDEF -> id TIPO LOPCOLUMN
Rule 75    LOPCOLUMN -> LOPCOLUMN OPCOLUMN
Rule 76    LOPCOLUMN -> OPCOLUMN
Rule 77    OPCOLUMN -> constraint id unique
Rule 78    OPCOLUMN -> unique
Rule 79    OPCOLUMN -> constraint id check para CONDCHECK parc
Rule 80    OPCOLUMN -> check para CONDCHECK parc
Rule 81    OPCOLUMN -> default EXP
Rule 82    OPCOLUMN -> not null
Rule 83    OPCOLUMN -> null
Rule 84    OPCOLUMN -> primary key
Rule 85    OPCOLUMN -> references id
Rule 86    OPCONST -> primary key para LEXP parc
Rule 87    OPCONST -> foreign key para LEXP parc references id para LEXP parc
Rule 88    OPCONST -> unique para LEXP parc
Rule 89    OPCONST -> check para CONDCHECK parc
Rule 90    CONDCHECK -> EXP mayor EXP
Rule 91    CONDCHECK -> EXP menor EXP
Rule 92    CONDCHECK -> EXP mayor_igual EXP
Rule 93    CONDCHECK -> EXP menor_igual EXP
Rule 94    CONDCHECK -> EXP igual EXP
Rule 95    CONDCHECK -> EXP diferente1 EXP
Rule 96    CONDCHECK -> EXP diferente2 EXP
Rule 97    HERENCIA -> inherits para id parc
Rule 98    CREATETYPE -> create type id as enum para LEXP parc
Rule 99    SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
Rule 100   SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
Rule 101   SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
Rule 102   LIMIT -> limit int
Rule 103   LIMIT -> limit all
Rule 104   LIMIT -> offset int
Rule 105   LIMIT -> limit int offset int
Rule 106   LIMIT -> offset int limit int
Rule 107   LIMIT -> limit all offset int
Rule 108   LIMIT -> offset int limit all
Rule 109   LIMIT -> <empty>
Rule 110   WHERE -> where EXP
Rule 111   WHERE -> where EXIST
Rule 112   WHERE -> <empty>
Rule 113   COMBINING -> union EXP
Rule 114   COMBINING -> union all EXP
Rule 115   COMBINING -> intersect EXP
Rule 116   COMBINING -> intersect all EXP
Rule 117   COMBINING -> except EXP
Rule 118   COMBINING -> except all EXP
Rule 119   COMBINING -> <empty>
Rule 120   GROUP -> group by LEXP
Rule 121   GROUP -> <empty>
Rule 122   HAVING -> having EXP
Rule 123   HAVING -> <empty>
Rule 124   ORDER -> order by LEXP ORD
Rule 125   ORDER -> order by LEXP
Rule 126   ORDER -> <empty>
Rule 127   ORD -> asc
Rule 128   ORD -> desc
Rule 129   UPDATE -> update id set LCAMPOS where LEXP
Rule 130   LCAMPOS -> LCAMPOS coma id igual EXP
Rule 131   LCAMPOS -> id igual EXP
Rule 132   DELETE -> delete r_from EXP WHERE
Rule 133   EXIST -> exist para SELECT parc
Rule 134   EXIST -> not exist para SELECT parc
Rule 135   LEXP -> LEXP coma EXP
Rule 136   LEXP -> EXP
Rule 137   TIPO -> interval cadena
Rule 138   TIPO -> decimal para int coma int parc
Rule 139   TIPO -> decimal para int parc
Rule 140   TIPO -> decimal
Rule 141   TIPO -> numeric para int coma int parc
Rule 142   TIPO -> numeric para int parc
Rule 143   TIPO -> numeric
Rule 144   TIPO -> varchar para int parc
Rule 145   TIPO -> timestamp para int parc
Rule 146   TIPO -> character para int parc
Rule 147   TIPO -> interval para int parc
Rule 148   TIPO -> char para int parc
Rule 149   TIPO -> time para int parc
Rule 150   TIPO -> character varying para int parc
Rule 151   TIPO -> timestamp para int parc without time zone
Rule 152   TIPO -> timestamp para int parc with time zone
Rule 153   TIPO -> time para int parc without time zone
Rule 154   TIPO -> time para int parc with time zone
Rule 155   TIPO -> interval para int parc cadena
Rule 156   TIPO -> smallint
Rule 157   TIPO -> integer
Rule 158   TIPO -> r_int
Rule 159   TIPO -> bigint
Rule 160   TIPO -> real
Rule 161   TIPO -> double precision
Rule 162   TIPO -> money
Rule 163   TIPO -> text
Rule 164   TIPO -> timestamp
Rule 165   TIPO -> date
Rule 166   TIPO -> time
Rule 167   TIPO -> interval
Rule 168   TIPO -> boolean
Rule 169   TIPO -> timestamp without time zone
Rule 170   TIPO -> timestamp with time zone
Rule 171   TIPO -> time without time zone
Rule 172   TIPO -> time with time zone
Rule 173   TIPO -> id
Rule 174   FIELDS -> year
Rule 175   FIELDS -> month
Rule 176   FIELDS -> day
Rule 177   FIELDS -> hour
Rule 178   FIELDS -> minute
Rule 179   FIELDS -> second
Rule 180   EXP -> EXP mas EXP
Rule 181   EXP -> EXP menos EXP
Rule 182   EXP -> EXP multiplicacion EXP
Rule 183   EXP -> EXP division EXP
Rule 184   EXP -> EXP modulo EXP
Rule 185   EXP -> EXP elevado EXP
Rule 186   EXP -> EXP and EXP
Rule 187   EXP -> EXP or EXP
Rule 188   EXP -> EXP mayor EXP
Rule 189   EXP -> EXP menor EXP
Rule 190   EXP -> EXP mayor_igual EXP
Rule 191   EXP -> EXP menor_igual EXP
Rule 192   EXP -> EXP igual EXP
Rule 193   EXP -> EXP diferente1 EXP
Rule 194   EXP -> EXP diferente2 EXP
Rule 195   EXP -> EXP between EXP
Rule 196   EXP -> EXP is not null
Rule 197   EXP -> EXP is null
Rule 198   EXP -> EXP isnull
Rule 199   EXP -> EXP notnull
Rule 200   EXP -> EXP is true
Rule 201   EXP -> EXP is not true
Rule 202   EXP -> EXP is false
Rule 203   EXP -> EXP is not false
Rule 204   EXP -> EXP is unknown
Rule 205   EXP -> EXP is not unknown
Rule 206   EXP -> EXP as cadenaString
Rule 207   EXP -> EXP cadenaString
Rule 208   EXP -> EXP as id
Rule 209   EXP -> EXP id
Rule 210   EXP -> EXP as cadena
Rule 211   EXP -> EXP cadena
Rule 212   EXP -> mas EXP
Rule 213   EXP -> menos EXP
Rule 214   EXP -> not EXP
Rule 215   EXP -> EXP in para EXP parc
Rule 216   EXP -> EXP not in para EXP parc
Rule 217   EXP -> EXP not between EXP
Rule 218   EXP -> EXP between symetric EXP
Rule 219   EXP -> EXP not between symetric EXP
Rule 220   EXP -> EXP is distinct r_from EXP
Rule 221   EXP -> EXP is not distinct r_from EXP
Rule 222   EXP -> EXP like cadena
Rule 223   EXP -> EXP not like cadena
Rule 224   EXP -> SELECT
Rule 225   EXP -> para EXP parc
Rule 226   EXP -> CASE
Rule 227   EXP -> id para LEXP parc
Rule 228   EXP -> id para parc
Rule 229   EXP -> any para LEXP parc
Rule 230   EXP -> all para LEXP parc
Rule 231   EXP -> some para LEXP parc
Rule 232   EXP -> extract para FIELDS r_from timestamp cadena parc
Rule 233   EXP -> int
Rule 234   EXP -> decimales
Rule 235   EXP -> cadena
Rule 236   EXP -> cadenaString
Rule 237   EXP -> true
Rule 238   EXP -> false
Rule 239   EXP -> id
Rule 240   EXP -> multiplicacion
Rule 241   EXP -> null
Rule 242   EXP -> current_time
Rule 243   EXP -> current_date
Rule 244   EXP -> timestamp cadena
Rule 245   EXP -> interval cadena
Rule 246   EXP -> cadena as TIPO
Rule 247   EXP -> default
Rule 248   EXP -> idPunto

Terminals, with rules where they appear

add                  : 32 33 34 35 36
all                  : 25 103 107 108 114 116 118 230
alter                : 29 30 31 37 38 46
and                  : 186
any                  : 229
as                   : 98 206 208 210 246
asc                  : 127
between              : 195 217 218 219
bigint               : 159
boolean              : 168
by                   : 120 124 125
cadena               : 60 63 137 155 210 211 222 223 232 235 244 245 246
cadenaString         : 61 64 206 207 236
case                 : 17 18
char                 : 148
character            : 146 150
check                : 33 41 79 80 89
collection           : 49
column               : 32 37 38 40 42 46
coma                 : 44 69 130 135 138 141
constraint           : 34 36 39 72 77 79
create               : 50 51 52 53 67 68 98
current_date         : 243
current_time         : 242
databases            : 27 28 29 30 57 58
date                 : 165
day                  : 176
dbs                  : 47
decimal              : 138 139 140
decimales            : 234
default              : 81 247
delete               : 132
desc                 : 128
diferente1           : 95 193
diferente2           : 96 194
distinct             : 99 220 221
division             : 183
double               : 161
drop                 : 25 26 27 28 39 40 41
elevado              : 185
else                 : 22
end                  : 17 18
enum                 : 98
error                : 
except               : 117 118
exist                : 27 50 51 133 134
extract              : 232
false                : 202 203 238
foreign              : 35 36 87
group                : 120
having               : 122
hour                 : 177
id                   : 16 23 24 26 27 28 29 29 30 30 31 32 34 34 35 36 36 37 38 39 41 42 42 46 48 50 51 52 53 59 62 67 68 72 73 74 77 79 85 87 97 98 129 130 131 173 208 209 227 228 239
idPunto              : 248
if                   : 27 50 51
igual                : 59 60 61 65 94 130 131 192
in                   : 215 216
inherits             : 97
insert               : 23 24
int                  : 65 66 102 104 105 105 106 106 107 108 138 138 139 141 141 142 144 145 146 147 148 149 150 151 152 153 154 155 233
integer              : 157
intersect            : 115 116
interval             : 137 147 155 167 245
into                 : 23 24
is                   : 196 197 200 201 202 203 204 205 220 221
isnull               : 198
key                  : 35 36 84 86 87
like                 : 222 223
limit                : 102 103 105 106 107 108
mas                  : 180 212
mayor                : 90 188
mayor_igual          : 92 190
menor                : 91 189
menor_igual          : 93 191
menos                : 181 213
minute               : 178
mode                 : 65 66
modulo               : 184
money                : 162
month                : 175
multiplicacion       : 182 240
not                  : 37 50 51 82 134 196 201 203 205 214 216 217 219 221 223
notnull              : 199
null                 : 37 38 82 83 196 197 241
numeric              : 141 142 143
offset               : 104 105 106 107 108
or                   : 57 187
order                : 124 125
owner                : 30 59 60 61 62 63 64
para                 : 23 24 24 25 33 34 35 35 36 36 48 49 67 68 79 80 86 87 87 88 89 97 98 133 134 138 139 141 142 144 145 146 147 148 149 150 151 152 153 154 155 215 216 225 227 228 229 230 231 232
parc                 : 23 24 24 25 33 34 35 35 36 36 48 49 67 68 79 80 86 87 87 88 89 97 98 133 134 138 139 141 142 144 145 146 147 148 149 150 151 152 153 154 155 215 216 225 227 228 229 230 231 232
precision            : 161
primary              : 84 86
ptcoma               : 4 6 7 8 9 10 11 13 14 15 16 67 68
punto                : 
r_from               : 99 100 132 220 221 232
r_int                : 158
real                 : 160
references           : 35 36 85 87
rename               : 29 42
replace              : 57
second               : 179
select               : 99 100 101
set                  : 37 38 129
show                 : 47 48 49
smallint             : 156
some                 : 231
symetric             : 218 219
table                : 26 31 67 68
tables               : 48
text                 : 163
then                 : 21
time                 : 149 151 152 153 153 154 154 166 169 170 171 171 172 172
timestamp            : 145 151 152 164 169 170 232 244
to                   : 29 30 42
true                 : 200 201 237
type                 : 46 98
union                : 113 114
unique               : 34 77 78 88
unknown              : 204 205
update               : 129
use                  : 16
values               : 23 24
varchar              : 144
varying              : 150
when                 : 21
where                : 110 111 129
with                 : 152 154 170 172
without              : 151 153 169 171
year                 : 174
zone                 : 151 152 153 154 169 170 171 172

Nonterminals, with rules where they appear

ALTER                : 8
CASE                 : 12 226
COLDEF               : 69 70
COMBINING            : 99 100 101
CONDCHECK            : 33 79 80 89
CREATEDB             : 13
CREATETABLE          : 5
CREATETYPE           : 11
DELETE               : 7
DROP                 : 9
ELSE                 : 17
EXIST                : 111
EXP                  : 81 90 90 91 91 92 92 93 93 94 94 95 95 96 96 110 113 114 115 116 117 118 122 130 131 132 135 136 180 180 181 181 182 182 183 183 184 184 185 185 186 186 187 187 188 188 189 189 190 190 191 191 192 192 193 193 194 194 195 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 215 216 216 217 217 218 218 219 219 220 220 221 221 222 223 225
FIELDS               : 232
GROUP                : 99 100 101
HAVING               : 99 100 101
HERENCIA             : 68
INSERT               : 10
LCAMPOS              : 129 130
LDEF                 : 67 68 69
LEXP                 : 21 21 22 23 24 24 35 35 36 36 40 86 87 87 88 98 99 99 100 100 101 120 124 125 129 135 227 229 230 231
LIMIT                : 99 100 101
LISTAWHEN            : 17 18 19
LOPCOLUMN            : 74 75
MODO                 : 55 56
OP                   : 31
OPCCDB               : 51 53
OPCOLUMN             : 75 76
OPCONST              : 71 72
ORD                  : 124
ORDER                : 99 100 101
PROPIETARIO          : 54 56
RD                   : 50 51 52 53
SELECT               : 4 133 134 224
SHOW                 : 15
SHOWDB               : 14
TIPO                 : 32 46 73 74 246
UPDATE               : 6
WHEN                 : 19 20
WHERE                : 99 100 101 132
alc                  : 44 45
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2
listaalc             : 43 44

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . SELECT ptcoma
    (5) instruccion -> . CREATETABLE
    (6) instruccion -> . UPDATE ptcoma
    (7) instruccion -> . DELETE ptcoma
    (8) instruccion -> . ALTER ptcoma
    (9) instruccion -> . DROP ptcoma
    (10) instruccion -> . INSERT ptcoma
    (11) instruccion -> . CREATETYPE ptcoma
    (12) instruccion -> . CASE
    (13) instruccion -> . CREATEDB ptcoma
    (14) instruccion -> . SHOWDB ptcoma
    (15) instruccion -> . SHOW ptcoma
    (16) instruccion -> . use id ptcoma
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (67) CREATETABLE -> . create table id para LDEF parc ptcoma
    (68) CREATETABLE -> . create table id para LDEF parc HERENCIA ptcoma
    (129) UPDATE -> . update id set LCAMPOS where LEXP
    (132) DELETE -> . delete r_from EXP WHERE
    (29) ALTER -> . alter databases id rename to id
    (30) ALTER -> . alter databases id owner to id
    (31) ALTER -> . alter table id OP
    (25) DROP -> . drop all para parc
    (26) DROP -> . drop table id
    (27) DROP -> . drop databases if exist id
    (28) DROP -> . drop databases id
    (23) INSERT -> . insert into id values para LEXP parc
    (24) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (98) CREATETYPE -> . create type id as enum para LEXP parc
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end
    (50) CREATEDB -> . create RD if not exist id
    (51) CREATEDB -> . create RD if not exist id OPCCDB
    (52) CREATEDB -> . create RD id
    (53) CREATEDB -> . create RD id OPCCDB
    (47) SHOWDB -> . show dbs
    (48) SHOW -> . show tables para id parc
    (49) SHOW -> . show collection para parc

    use             shift and go to state 16
    select          shift and go to state 17
    create          shift and go to state 18
    update          shift and go to state 19
    delete          shift and go to state 20
    alter           shift and go to state 21
    drop            shift and go to state 22
    insert          shift and go to state 23
    case            shift and go to state 24
    show            shift and go to state 25

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    SELECT                         shift and go to state 4
    CREATETABLE                    shift and go to state 5
    UPDATE                         shift and go to state 6
    DELETE                         shift and go to state 7
    ALTER                          shift and go to state 8
    DROP                           shift and go to state 9
    INSERT                         shift and go to state 10
    CREATETYPE                     shift and go to state 11
    CASE                           shift and go to state 12
    CREATEDB                       shift and go to state 13
    SHOWDB                         shift and go to state 14
    SHOW                           shift and go to state 15

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . SELECT ptcoma
    (5) instruccion -> . CREATETABLE
    (6) instruccion -> . UPDATE ptcoma
    (7) instruccion -> . DELETE ptcoma
    (8) instruccion -> . ALTER ptcoma
    (9) instruccion -> . DROP ptcoma
    (10) instruccion -> . INSERT ptcoma
    (11) instruccion -> . CREATETYPE ptcoma
    (12) instruccion -> . CASE
    (13) instruccion -> . CREATEDB ptcoma
    (14) instruccion -> . SHOWDB ptcoma
    (15) instruccion -> . SHOW ptcoma
    (16) instruccion -> . use id ptcoma
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (67) CREATETABLE -> . create table id para LDEF parc ptcoma
    (68) CREATETABLE -> . create table id para LDEF parc HERENCIA ptcoma
    (129) UPDATE -> . update id set LCAMPOS where LEXP
    (132) DELETE -> . delete r_from EXP WHERE
    (29) ALTER -> . alter databases id rename to id
    (30) ALTER -> . alter databases id owner to id
    (31) ALTER -> . alter table id OP
    (25) DROP -> . drop all para parc
    (26) DROP -> . drop table id
    (27) DROP -> . drop databases if exist id
    (28) DROP -> . drop databases id
    (23) INSERT -> . insert into id values para LEXP parc
    (24) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (98) CREATETYPE -> . create type id as enum para LEXP parc
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end
    (50) CREATEDB -> . create RD if not exist id
    (51) CREATEDB -> . create RD if not exist id OPCCDB
    (52) CREATEDB -> . create RD id
    (53) CREATEDB -> . create RD id OPCCDB
    (47) SHOWDB -> . show dbs
    (48) SHOW -> . show tables para id parc
    (49) SHOW -> . show collection para parc

    $end            reduce using rule 1 (init -> instrucciones .)
    use             shift and go to state 16
    select          shift and go to state 17
    create          shift and go to state 18
    update          shift and go to state 19
    delete          shift and go to state 20
    alter           shift and go to state 21
    drop            shift and go to state 22
    insert          shift and go to state 23
    case            shift and go to state 24
    show            shift and go to state 25

    instruccion                    shift and go to state 26
    SELECT                         shift and go to state 4
    CREATETABLE                    shift and go to state 5
    UPDATE                         shift and go to state 6
    DELETE                         shift and go to state 7
    ALTER                          shift and go to state 8
    DROP                           shift and go to state 9
    INSERT                         shift and go to state 10
    CREATETYPE                     shift and go to state 11
    CASE                           shift and go to state 12
    CREATEDB                       shift and go to state 13
    SHOWDB                         shift and go to state 14
    SHOW                           shift and go to state 15

state 3

    (3) instrucciones -> instruccion .

    use             reduce using rule 3 (instrucciones -> instruccion .)
    select          reduce using rule 3 (instrucciones -> instruccion .)
    create          reduce using rule 3 (instrucciones -> instruccion .)
    update          reduce using rule 3 (instrucciones -> instruccion .)
    delete          reduce using rule 3 (instrucciones -> instruccion .)
    alter           reduce using rule 3 (instrucciones -> instruccion .)
    drop            reduce using rule 3 (instrucciones -> instruccion .)
    insert          reduce using rule 3 (instrucciones -> instruccion .)
    case            reduce using rule 3 (instrucciones -> instruccion .)
    show            reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> SELECT . ptcoma

    ptcoma          shift and go to state 27


state 5

    (5) instruccion -> CREATETABLE .

    use             reduce using rule 5 (instruccion -> CREATETABLE .)
    select          reduce using rule 5 (instruccion -> CREATETABLE .)
    create          reduce using rule 5 (instruccion -> CREATETABLE .)
    update          reduce using rule 5 (instruccion -> CREATETABLE .)
    delete          reduce using rule 5 (instruccion -> CREATETABLE .)
    alter           reduce using rule 5 (instruccion -> CREATETABLE .)
    drop            reduce using rule 5 (instruccion -> CREATETABLE .)
    insert          reduce using rule 5 (instruccion -> CREATETABLE .)
    case            reduce using rule 5 (instruccion -> CREATETABLE .)
    show            reduce using rule 5 (instruccion -> CREATETABLE .)
    $end            reduce using rule 5 (instruccion -> CREATETABLE .)


state 6

    (6) instruccion -> UPDATE . ptcoma

    ptcoma          shift and go to state 28


state 7

    (7) instruccion -> DELETE . ptcoma

    ptcoma          shift and go to state 29


state 8

    (8) instruccion -> ALTER . ptcoma

    ptcoma          shift and go to state 30


state 9

    (9) instruccion -> DROP . ptcoma

    ptcoma          shift and go to state 31


state 10

    (10) instruccion -> INSERT . ptcoma

    ptcoma          shift and go to state 32


state 11

    (11) instruccion -> CREATETYPE . ptcoma

    ptcoma          shift and go to state 33


state 12

    (12) instruccion -> CASE .

    use             reduce using rule 12 (instruccion -> CASE .)
    select          reduce using rule 12 (instruccion -> CASE .)
    create          reduce using rule 12 (instruccion -> CASE .)
    update          reduce using rule 12 (instruccion -> CASE .)
    delete          reduce using rule 12 (instruccion -> CASE .)
    alter           reduce using rule 12 (instruccion -> CASE .)
    drop            reduce using rule 12 (instruccion -> CASE .)
    insert          reduce using rule 12 (instruccion -> CASE .)
    case            reduce using rule 12 (instruccion -> CASE .)
    show            reduce using rule 12 (instruccion -> CASE .)
    $end            reduce using rule 12 (instruccion -> CASE .)


state 13

    (13) instruccion -> CREATEDB . ptcoma

    ptcoma          shift and go to state 34


state 14

    (14) instruccion -> SHOWDB . ptcoma

    ptcoma          shift and go to state 35


state 15

    (15) instruccion -> SHOW . ptcoma

    ptcoma          shift and go to state 36


state 16

    (16) instruccion -> use . id ptcoma

    id              shift and go to state 37


state 17

    (99) SELECT -> select . distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> select . LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> select . LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    distinct        shift and go to state 38
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 39
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 18

    (67) CREATETABLE -> create . table id para LDEF parc ptcoma
    (68) CREATETABLE -> create . table id para LDEF parc HERENCIA ptcoma
    (98) CREATETYPE -> create . type id as enum para LEXP parc
    (50) CREATEDB -> create . RD if not exist id
    (51) CREATEDB -> create . RD if not exist id OPCCDB
    (52) CREATEDB -> create . RD id
    (53) CREATEDB -> create . RD id OPCCDB
    (57) RD -> . or replace databases
    (58) RD -> . databases

    table           shift and go to state 66
    type            shift and go to state 67
    or              shift and go to state 69
    databases       shift and go to state 70

    RD                             shift and go to state 68

state 19

    (129) UPDATE -> update . id set LCAMPOS where LEXP

    id              shift and go to state 71


state 20

    (132) DELETE -> delete . r_from EXP WHERE

    r_from          shift and go to state 72


state 21

    (29) ALTER -> alter . databases id rename to id
    (30) ALTER -> alter . databases id owner to id
    (31) ALTER -> alter . table id OP

    databases       shift and go to state 73
    table           shift and go to state 74


state 22

    (25) DROP -> drop . all para parc
    (26) DROP -> drop . table id
    (27) DROP -> drop . databases if exist id
    (28) DROP -> drop . databases id

    all             shift and go to state 75
    table           shift and go to state 76
    databases       shift and go to state 77


state 23

    (23) INSERT -> insert . into id values para LEXP parc
    (24) INSERT -> insert . into id para LEXP parc values para LEXP parc

    into            shift and go to state 78


state 24

    (17) CASE -> case . LISTAWHEN ELSE end
    (18) CASE -> case . LISTAWHEN end
    (19) LISTAWHEN -> . LISTAWHEN WHEN
    (20) LISTAWHEN -> . WHEN
    (21) WHEN -> . when LEXP then LEXP

    when            shift and go to state 81

    LISTAWHEN                      shift and go to state 79
    WHEN                           shift and go to state 80

state 25

    (47) SHOWDB -> show . dbs
    (48) SHOW -> show . tables para id parc
    (49) SHOW -> show . collection para parc

    dbs             shift and go to state 82
    tables          shift and go to state 83
    collection      shift and go to state 84


state 26

    (2) instrucciones -> instrucciones instruccion .

    use             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    select          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    create          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    update          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    delete          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    alter           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    drop            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    insert          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    case            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    show            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 27

    (4) instruccion -> SELECT ptcoma .

    use             reduce using rule 4 (instruccion -> SELECT ptcoma .)
    select          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    create          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    update          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    delete          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    alter           reduce using rule 4 (instruccion -> SELECT ptcoma .)
    drop            reduce using rule 4 (instruccion -> SELECT ptcoma .)
    insert          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    case            reduce using rule 4 (instruccion -> SELECT ptcoma .)
    show            reduce using rule 4 (instruccion -> SELECT ptcoma .)
    $end            reduce using rule 4 (instruccion -> SELECT ptcoma .)


state 28

    (6) instruccion -> UPDATE ptcoma .

    use             reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    select          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    create          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    update          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    delete          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    alter           reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    drop            reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    insert          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    case            reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    show            reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    $end            reduce using rule 6 (instruccion -> UPDATE ptcoma .)


state 29

    (7) instruccion -> DELETE ptcoma .

    use             reduce using rule 7 (instruccion -> DELETE ptcoma .)
    select          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    create          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    update          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    delete          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    alter           reduce using rule 7 (instruccion -> DELETE ptcoma .)
    drop            reduce using rule 7 (instruccion -> DELETE ptcoma .)
    insert          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    case            reduce using rule 7 (instruccion -> DELETE ptcoma .)
    show            reduce using rule 7 (instruccion -> DELETE ptcoma .)
    $end            reduce using rule 7 (instruccion -> DELETE ptcoma .)


state 30

    (8) instruccion -> ALTER ptcoma .

    use             reduce using rule 8 (instruccion -> ALTER ptcoma .)
    select          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    create          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    update          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    delete          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    alter           reduce using rule 8 (instruccion -> ALTER ptcoma .)
    drop            reduce using rule 8 (instruccion -> ALTER ptcoma .)
    insert          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    case            reduce using rule 8 (instruccion -> ALTER ptcoma .)
    show            reduce using rule 8 (instruccion -> ALTER ptcoma .)
    $end            reduce using rule 8 (instruccion -> ALTER ptcoma .)


state 31

    (9) instruccion -> DROP ptcoma .

    use             reduce using rule 9 (instruccion -> DROP ptcoma .)
    select          reduce using rule 9 (instruccion -> DROP ptcoma .)
    create          reduce using rule 9 (instruccion -> DROP ptcoma .)
    update          reduce using rule 9 (instruccion -> DROP ptcoma .)
    delete          reduce using rule 9 (instruccion -> DROP ptcoma .)
    alter           reduce using rule 9 (instruccion -> DROP ptcoma .)
    drop            reduce using rule 9 (instruccion -> DROP ptcoma .)
    insert          reduce using rule 9 (instruccion -> DROP ptcoma .)
    case            reduce using rule 9 (instruccion -> DROP ptcoma .)
    show            reduce using rule 9 (instruccion -> DROP ptcoma .)
    $end            reduce using rule 9 (instruccion -> DROP ptcoma .)


state 32

    (10) instruccion -> INSERT ptcoma .

    use             reduce using rule 10 (instruccion -> INSERT ptcoma .)
    select          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    create          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    update          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    delete          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    alter           reduce using rule 10 (instruccion -> INSERT ptcoma .)
    drop            reduce using rule 10 (instruccion -> INSERT ptcoma .)
    insert          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    case            reduce using rule 10 (instruccion -> INSERT ptcoma .)
    show            reduce using rule 10 (instruccion -> INSERT ptcoma .)
    $end            reduce using rule 10 (instruccion -> INSERT ptcoma .)


state 33

    (11) instruccion -> CREATETYPE ptcoma .

    use             reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    select          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    create          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    update          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    delete          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    alter           reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    drop            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    insert          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    case            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    show            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    $end            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)


state 34

    (13) instruccion -> CREATEDB ptcoma .

    use             reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    select          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    create          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    update          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    delete          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    alter           reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    drop            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    insert          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    case            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    show            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    $end            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)


state 35

    (14) instruccion -> SHOWDB ptcoma .

    use             reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    select          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    create          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    update          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    delete          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    alter           reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    drop            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    insert          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    case            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    show            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    $end            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)


state 36

    (15) instruccion -> SHOW ptcoma .

    use             reduce using rule 15 (instruccion -> SHOW ptcoma .)
    select          reduce using rule 15 (instruccion -> SHOW ptcoma .)
    create          reduce using rule 15 (instruccion -> SHOW ptcoma .)
    update          reduce using rule 15 (instruccion -> SHOW ptcoma .)
    delete          reduce using rule 15 (instruccion -> SHOW ptcoma .)
    alter           reduce using rule 15 (instruccion -> SHOW ptcoma .)
    drop            reduce using rule 15 (instruccion -> SHOW ptcoma .)
    insert          reduce using rule 15 (instruccion -> SHOW ptcoma .)
    case            reduce using rule 15 (instruccion -> SHOW ptcoma .)
    show            reduce using rule 15 (instruccion -> SHOW ptcoma .)
    $end            reduce using rule 15 (instruccion -> SHOW ptcoma .)


state 37

    (16) instruccion -> use id . ptcoma

    ptcoma          shift and go to state 85


state 38

    (99) SELECT -> select distinct . LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 86
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 39

    (100) SELECT -> select LEXP . r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> select LEXP . WHERE GROUP HAVING COMBINING ORDER LIMIT
    (135) LEXP -> LEXP . coma EXP
    (110) WHERE -> . where EXP
    (111) WHERE -> . where EXIST
    (112) WHERE -> .

  ! shift/reduce conflict for r_from resolved as shift
  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for where resolved as shift
    r_from          shift and go to state 87
    coma            shift and go to state 89
    where           shift and go to state 90
    group           reduce using rule 112 (WHERE -> .)
    having          reduce using rule 112 (WHERE -> .)
    union           reduce using rule 112 (WHERE -> .)
    intersect       reduce using rule 112 (WHERE -> .)
    except          reduce using rule 112 (WHERE -> .)
    order           reduce using rule 112 (WHERE -> .)
    limit           reduce using rule 112 (WHERE -> .)
    offset          reduce using rule 112 (WHERE -> .)
    ptcoma          reduce using rule 112 (WHERE -> .)
    mas             reduce using rule 112 (WHERE -> .)
    menos           reduce using rule 112 (WHERE -> .)
    multiplicacion  reduce using rule 112 (WHERE -> .)
    division        reduce using rule 112 (WHERE -> .)
    modulo          reduce using rule 112 (WHERE -> .)
    elevado         reduce using rule 112 (WHERE -> .)
    and             reduce using rule 112 (WHERE -> .)
    or              reduce using rule 112 (WHERE -> .)
    mayor           reduce using rule 112 (WHERE -> .)
    menor           reduce using rule 112 (WHERE -> .)
    mayor_igual     reduce using rule 112 (WHERE -> .)
    menor_igual     reduce using rule 112 (WHERE -> .)
    igual           reduce using rule 112 (WHERE -> .)
    diferente1      reduce using rule 112 (WHERE -> .)
    diferente2      reduce using rule 112 (WHERE -> .)
    between         reduce using rule 112 (WHERE -> .)
    is              reduce using rule 112 (WHERE -> .)
    isnull          reduce using rule 112 (WHERE -> .)
    notnull         reduce using rule 112 (WHERE -> .)
    as              reduce using rule 112 (WHERE -> .)
    cadenaString    reduce using rule 112 (WHERE -> .)
    id              reduce using rule 112 (WHERE -> .)
    cadena          reduce using rule 112 (WHERE -> .)
    in              reduce using rule 112 (WHERE -> .)
    not             reduce using rule 112 (WHERE -> .)
    like            reduce using rule 112 (WHERE -> .)
    parc            reduce using rule 112 (WHERE -> .)
    then            reduce using rule 112 (WHERE -> .)
    end             reduce using rule 112 (WHERE -> .)
    else            reduce using rule 112 (WHERE -> .)
    when            reduce using rule 112 (WHERE -> .)
    constraint      reduce using rule 112 (WHERE -> .)
    unique          reduce using rule 112 (WHERE -> .)
    check           reduce using rule 112 (WHERE -> .)
    default         reduce using rule 112 (WHERE -> .)
    null            reduce using rule 112 (WHERE -> .)
    primary         reduce using rule 112 (WHERE -> .)
    references      reduce using rule 112 (WHERE -> .)
    asc             reduce using rule 112 (WHERE -> .)
    desc            reduce using rule 112 (WHERE -> .)

  ! r_from          [ reduce using rule 112 (WHERE -> .) ]
  ! coma            [ reduce using rule 112 (WHERE -> .) ]
  ! where           [ reduce using rule 112 (WHERE -> .) ]

    WHERE                          shift and go to state 88

state 40

    (136) LEXP -> EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    r_from          reduce using rule 136 (LEXP -> EXP .)
    coma            reduce using rule 136 (LEXP -> EXP .)
    where           reduce using rule 136 (LEXP -> EXP .)
    group           reduce using rule 136 (LEXP -> EXP .)
    having          reduce using rule 136 (LEXP -> EXP .)
    union           reduce using rule 136 (LEXP -> EXP .)
    intersect       reduce using rule 136 (LEXP -> EXP .)
    except          reduce using rule 136 (LEXP -> EXP .)
    order           reduce using rule 136 (LEXP -> EXP .)
    limit           reduce using rule 136 (LEXP -> EXP .)
    offset          reduce using rule 136 (LEXP -> EXP .)
    ptcoma          reduce using rule 136 (LEXP -> EXP .)
    parc            reduce using rule 136 (LEXP -> EXP .)
    then            reduce using rule 136 (LEXP -> EXP .)
    end             reduce using rule 136 (LEXP -> EXP .)
    else            reduce using rule 136 (LEXP -> EXP .)
    when            reduce using rule 136 (LEXP -> EXP .)
    constraint      reduce using rule 136 (LEXP -> EXP .)
    unique          reduce using rule 136 (LEXP -> EXP .)
    check           reduce using rule 136 (LEXP -> EXP .)
    default         reduce using rule 136 (LEXP -> EXP .)
    null            reduce using rule 136 (LEXP -> EXP .)
    primary         reduce using rule 136 (LEXP -> EXP .)
    references      reduce using rule 136 (LEXP -> EXP .)
    asc             reduce using rule 136 (LEXP -> EXP .)
    desc            reduce using rule 136 (LEXP -> EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    and             shift and go to state 97
    or              shift and go to state 98
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105
    between         shift and go to state 106
    is              shift and go to state 107
    isnull          shift and go to state 109
    notnull         shift and go to state 110
    as              shift and go to state 111
    cadenaString    shift and go to state 112
    id              shift and go to state 113
    cadena          shift and go to state 114
    in              shift and go to state 115
    not             shift and go to state 108
    like            shift and go to state 116

  ! mas             [ reduce using rule 136 (LEXP -> EXP .) ]
  ! menos           [ reduce using rule 136 (LEXP -> EXP .) ]
  ! multiplicacion  [ reduce using rule 136 (LEXP -> EXP .) ]
  ! division        [ reduce using rule 136 (LEXP -> EXP .) ]
  ! modulo          [ reduce using rule 136 (LEXP -> EXP .) ]
  ! elevado         [ reduce using rule 136 (LEXP -> EXP .) ]
  ! and             [ reduce using rule 136 (LEXP -> EXP .) ]
  ! or              [ reduce using rule 136 (LEXP -> EXP .) ]
  ! mayor           [ reduce using rule 136 (LEXP -> EXP .) ]
  ! menor           [ reduce using rule 136 (LEXP -> EXP .) ]
  ! mayor_igual     [ reduce using rule 136 (LEXP -> EXP .) ]
  ! menor_igual     [ reduce using rule 136 (LEXP -> EXP .) ]
  ! igual           [ reduce using rule 136 (LEXP -> EXP .) ]
  ! diferente1      [ reduce using rule 136 (LEXP -> EXP .) ]
  ! diferente2      [ reduce using rule 136 (LEXP -> EXP .) ]
  ! between         [ reduce using rule 136 (LEXP -> EXP .) ]
  ! is              [ reduce using rule 136 (LEXP -> EXP .) ]
  ! isnull          [ reduce using rule 136 (LEXP -> EXP .) ]
  ! notnull         [ reduce using rule 136 (LEXP -> EXP .) ]
  ! as              [ reduce using rule 136 (LEXP -> EXP .) ]
  ! cadenaString    [ reduce using rule 136 (LEXP -> EXP .) ]
  ! id              [ reduce using rule 136 (LEXP -> EXP .) ]
  ! cadena          [ reduce using rule 136 (LEXP -> EXP .) ]
  ! in              [ reduce using rule 136 (LEXP -> EXP .) ]
  ! not             [ reduce using rule 136 (LEXP -> EXP .) ]
  ! like            [ reduce using rule 136 (LEXP -> EXP .) ]


state 41

    (212) EXP -> mas . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 117
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 42

    (213) EXP -> menos . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 118
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 43

    (240) EXP -> multiplicacion .

    r_from          reduce using rule 240 (EXP -> multiplicacion .)
    coma            reduce using rule 240 (EXP -> multiplicacion .)
    where           reduce using rule 240 (EXP -> multiplicacion .)
    group           reduce using rule 240 (EXP -> multiplicacion .)
    having          reduce using rule 240 (EXP -> multiplicacion .)
    union           reduce using rule 240 (EXP -> multiplicacion .)
    intersect       reduce using rule 240 (EXP -> multiplicacion .)
    except          reduce using rule 240 (EXP -> multiplicacion .)
    order           reduce using rule 240 (EXP -> multiplicacion .)
    limit           reduce using rule 240 (EXP -> multiplicacion .)
    offset          reduce using rule 240 (EXP -> multiplicacion .)
    ptcoma          reduce using rule 240 (EXP -> multiplicacion .)
    mas             reduce using rule 240 (EXP -> multiplicacion .)
    menos           reduce using rule 240 (EXP -> multiplicacion .)
    multiplicacion  reduce using rule 240 (EXP -> multiplicacion .)
    division        reduce using rule 240 (EXP -> multiplicacion .)
    modulo          reduce using rule 240 (EXP -> multiplicacion .)
    elevado         reduce using rule 240 (EXP -> multiplicacion .)
    and             reduce using rule 240 (EXP -> multiplicacion .)
    or              reduce using rule 240 (EXP -> multiplicacion .)
    mayor           reduce using rule 240 (EXP -> multiplicacion .)
    menor           reduce using rule 240 (EXP -> multiplicacion .)
    mayor_igual     reduce using rule 240 (EXP -> multiplicacion .)
    menor_igual     reduce using rule 240 (EXP -> multiplicacion .)
    igual           reduce using rule 240 (EXP -> multiplicacion .)
    diferente1      reduce using rule 240 (EXP -> multiplicacion .)
    diferente2      reduce using rule 240 (EXP -> multiplicacion .)
    between         reduce using rule 240 (EXP -> multiplicacion .)
    is              reduce using rule 240 (EXP -> multiplicacion .)
    isnull          reduce using rule 240 (EXP -> multiplicacion .)
    notnull         reduce using rule 240 (EXP -> multiplicacion .)
    as              reduce using rule 240 (EXP -> multiplicacion .)
    cadenaString    reduce using rule 240 (EXP -> multiplicacion .)
    id              reduce using rule 240 (EXP -> multiplicacion .)
    cadena          reduce using rule 240 (EXP -> multiplicacion .)
    in              reduce using rule 240 (EXP -> multiplicacion .)
    not             reduce using rule 240 (EXP -> multiplicacion .)
    like            reduce using rule 240 (EXP -> multiplicacion .)
    parc            reduce using rule 240 (EXP -> multiplicacion .)
    then            reduce using rule 240 (EXP -> multiplicacion .)
    end             reduce using rule 240 (EXP -> multiplicacion .)
    else            reduce using rule 240 (EXP -> multiplicacion .)
    when            reduce using rule 240 (EXP -> multiplicacion .)
    constraint      reduce using rule 240 (EXP -> multiplicacion .)
    unique          reduce using rule 240 (EXP -> multiplicacion .)
    check           reduce using rule 240 (EXP -> multiplicacion .)
    default         reduce using rule 240 (EXP -> multiplicacion .)
    null            reduce using rule 240 (EXP -> multiplicacion .)
    primary         reduce using rule 240 (EXP -> multiplicacion .)
    references      reduce using rule 240 (EXP -> multiplicacion .)
    asc             reduce using rule 240 (EXP -> multiplicacion .)
    desc            reduce using rule 240 (EXP -> multiplicacion .)


state 44

    (214) EXP -> not . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 119
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 45

    (241) EXP -> null .

    r_from          reduce using rule 241 (EXP -> null .)
    coma            reduce using rule 241 (EXP -> null .)
    where           reduce using rule 241 (EXP -> null .)
    group           reduce using rule 241 (EXP -> null .)
    having          reduce using rule 241 (EXP -> null .)
    union           reduce using rule 241 (EXP -> null .)
    intersect       reduce using rule 241 (EXP -> null .)
    except          reduce using rule 241 (EXP -> null .)
    order           reduce using rule 241 (EXP -> null .)
    limit           reduce using rule 241 (EXP -> null .)
    offset          reduce using rule 241 (EXP -> null .)
    ptcoma          reduce using rule 241 (EXP -> null .)
    mas             reduce using rule 241 (EXP -> null .)
    menos           reduce using rule 241 (EXP -> null .)
    multiplicacion  reduce using rule 241 (EXP -> null .)
    division        reduce using rule 241 (EXP -> null .)
    modulo          reduce using rule 241 (EXP -> null .)
    elevado         reduce using rule 241 (EXP -> null .)
    and             reduce using rule 241 (EXP -> null .)
    or              reduce using rule 241 (EXP -> null .)
    mayor           reduce using rule 241 (EXP -> null .)
    menor           reduce using rule 241 (EXP -> null .)
    mayor_igual     reduce using rule 241 (EXP -> null .)
    menor_igual     reduce using rule 241 (EXP -> null .)
    igual           reduce using rule 241 (EXP -> null .)
    diferente1      reduce using rule 241 (EXP -> null .)
    diferente2      reduce using rule 241 (EXP -> null .)
    between         reduce using rule 241 (EXP -> null .)
    is              reduce using rule 241 (EXP -> null .)
    isnull          reduce using rule 241 (EXP -> null .)
    notnull         reduce using rule 241 (EXP -> null .)
    as              reduce using rule 241 (EXP -> null .)
    cadenaString    reduce using rule 241 (EXP -> null .)
    id              reduce using rule 241 (EXP -> null .)
    cadena          reduce using rule 241 (EXP -> null .)
    in              reduce using rule 241 (EXP -> null .)
    not             reduce using rule 241 (EXP -> null .)
    like            reduce using rule 241 (EXP -> null .)
    parc            reduce using rule 241 (EXP -> null .)
    then            reduce using rule 241 (EXP -> null .)
    end             reduce using rule 241 (EXP -> null .)
    else            reduce using rule 241 (EXP -> null .)
    when            reduce using rule 241 (EXP -> null .)
    constraint      reduce using rule 241 (EXP -> null .)
    unique          reduce using rule 241 (EXP -> null .)
    check           reduce using rule 241 (EXP -> null .)
    default         reduce using rule 241 (EXP -> null .)
    null            reduce using rule 241 (EXP -> null .)
    primary         reduce using rule 241 (EXP -> null .)
    references      reduce using rule 241 (EXP -> null .)
    asc             reduce using rule 241 (EXP -> null .)
    desc            reduce using rule 241 (EXP -> null .)


state 46

    (237) EXP -> true .

    r_from          reduce using rule 237 (EXP -> true .)
    coma            reduce using rule 237 (EXP -> true .)
    where           reduce using rule 237 (EXP -> true .)
    group           reduce using rule 237 (EXP -> true .)
    having          reduce using rule 237 (EXP -> true .)
    union           reduce using rule 237 (EXP -> true .)
    intersect       reduce using rule 237 (EXP -> true .)
    except          reduce using rule 237 (EXP -> true .)
    order           reduce using rule 237 (EXP -> true .)
    limit           reduce using rule 237 (EXP -> true .)
    offset          reduce using rule 237 (EXP -> true .)
    ptcoma          reduce using rule 237 (EXP -> true .)
    mas             reduce using rule 237 (EXP -> true .)
    menos           reduce using rule 237 (EXP -> true .)
    multiplicacion  reduce using rule 237 (EXP -> true .)
    division        reduce using rule 237 (EXP -> true .)
    modulo          reduce using rule 237 (EXP -> true .)
    elevado         reduce using rule 237 (EXP -> true .)
    and             reduce using rule 237 (EXP -> true .)
    or              reduce using rule 237 (EXP -> true .)
    mayor           reduce using rule 237 (EXP -> true .)
    menor           reduce using rule 237 (EXP -> true .)
    mayor_igual     reduce using rule 237 (EXP -> true .)
    menor_igual     reduce using rule 237 (EXP -> true .)
    igual           reduce using rule 237 (EXP -> true .)
    diferente1      reduce using rule 237 (EXP -> true .)
    diferente2      reduce using rule 237 (EXP -> true .)
    between         reduce using rule 237 (EXP -> true .)
    is              reduce using rule 237 (EXP -> true .)
    isnull          reduce using rule 237 (EXP -> true .)
    notnull         reduce using rule 237 (EXP -> true .)
    as              reduce using rule 237 (EXP -> true .)
    cadenaString    reduce using rule 237 (EXP -> true .)
    id              reduce using rule 237 (EXP -> true .)
    cadena          reduce using rule 237 (EXP -> true .)
    in              reduce using rule 237 (EXP -> true .)
    not             reduce using rule 237 (EXP -> true .)
    like            reduce using rule 237 (EXP -> true .)
    parc            reduce using rule 237 (EXP -> true .)
    then            reduce using rule 237 (EXP -> true .)
    end             reduce using rule 237 (EXP -> true .)
    else            reduce using rule 237 (EXP -> true .)
    when            reduce using rule 237 (EXP -> true .)
    constraint      reduce using rule 237 (EXP -> true .)
    unique          reduce using rule 237 (EXP -> true .)
    check           reduce using rule 237 (EXP -> true .)
    default         reduce using rule 237 (EXP -> true .)
    null            reduce using rule 237 (EXP -> true .)
    primary         reduce using rule 237 (EXP -> true .)
    references      reduce using rule 237 (EXP -> true .)
    asc             reduce using rule 237 (EXP -> true .)
    desc            reduce using rule 237 (EXP -> true .)


state 47

    (238) EXP -> false .

    r_from          reduce using rule 238 (EXP -> false .)
    coma            reduce using rule 238 (EXP -> false .)
    where           reduce using rule 238 (EXP -> false .)
    group           reduce using rule 238 (EXP -> false .)
    having          reduce using rule 238 (EXP -> false .)
    union           reduce using rule 238 (EXP -> false .)
    intersect       reduce using rule 238 (EXP -> false .)
    except          reduce using rule 238 (EXP -> false .)
    order           reduce using rule 238 (EXP -> false .)
    limit           reduce using rule 238 (EXP -> false .)
    offset          reduce using rule 238 (EXP -> false .)
    ptcoma          reduce using rule 238 (EXP -> false .)
    mas             reduce using rule 238 (EXP -> false .)
    menos           reduce using rule 238 (EXP -> false .)
    multiplicacion  reduce using rule 238 (EXP -> false .)
    division        reduce using rule 238 (EXP -> false .)
    modulo          reduce using rule 238 (EXP -> false .)
    elevado         reduce using rule 238 (EXP -> false .)
    and             reduce using rule 238 (EXP -> false .)
    or              reduce using rule 238 (EXP -> false .)
    mayor           reduce using rule 238 (EXP -> false .)
    menor           reduce using rule 238 (EXP -> false .)
    mayor_igual     reduce using rule 238 (EXP -> false .)
    menor_igual     reduce using rule 238 (EXP -> false .)
    igual           reduce using rule 238 (EXP -> false .)
    diferente1      reduce using rule 238 (EXP -> false .)
    diferente2      reduce using rule 238 (EXP -> false .)
    between         reduce using rule 238 (EXP -> false .)
    is              reduce using rule 238 (EXP -> false .)
    isnull          reduce using rule 238 (EXP -> false .)
    notnull         reduce using rule 238 (EXP -> false .)
    as              reduce using rule 238 (EXP -> false .)
    cadenaString    reduce using rule 238 (EXP -> false .)
    id              reduce using rule 238 (EXP -> false .)
    cadena          reduce using rule 238 (EXP -> false .)
    in              reduce using rule 238 (EXP -> false .)
    not             reduce using rule 238 (EXP -> false .)
    like            reduce using rule 238 (EXP -> false .)
    parc            reduce using rule 238 (EXP -> false .)
    then            reduce using rule 238 (EXP -> false .)
    end             reduce using rule 238 (EXP -> false .)
    else            reduce using rule 238 (EXP -> false .)
    when            reduce using rule 238 (EXP -> false .)
    constraint      reduce using rule 238 (EXP -> false .)
    unique          reduce using rule 238 (EXP -> false .)
    check           reduce using rule 238 (EXP -> false .)
    default         reduce using rule 238 (EXP -> false .)
    null            reduce using rule 238 (EXP -> false .)
    primary         reduce using rule 238 (EXP -> false .)
    references      reduce using rule 238 (EXP -> false .)
    asc             reduce using rule 238 (EXP -> false .)
    desc            reduce using rule 238 (EXP -> false .)


state 48

    (236) EXP -> cadenaString .

    r_from          reduce using rule 236 (EXP -> cadenaString .)
    coma            reduce using rule 236 (EXP -> cadenaString .)
    where           reduce using rule 236 (EXP -> cadenaString .)
    group           reduce using rule 236 (EXP -> cadenaString .)
    having          reduce using rule 236 (EXP -> cadenaString .)
    union           reduce using rule 236 (EXP -> cadenaString .)
    intersect       reduce using rule 236 (EXP -> cadenaString .)
    except          reduce using rule 236 (EXP -> cadenaString .)
    order           reduce using rule 236 (EXP -> cadenaString .)
    limit           reduce using rule 236 (EXP -> cadenaString .)
    offset          reduce using rule 236 (EXP -> cadenaString .)
    ptcoma          reduce using rule 236 (EXP -> cadenaString .)
    mas             reduce using rule 236 (EXP -> cadenaString .)
    menos           reduce using rule 236 (EXP -> cadenaString .)
    multiplicacion  reduce using rule 236 (EXP -> cadenaString .)
    division        reduce using rule 236 (EXP -> cadenaString .)
    modulo          reduce using rule 236 (EXP -> cadenaString .)
    elevado         reduce using rule 236 (EXP -> cadenaString .)
    and             reduce using rule 236 (EXP -> cadenaString .)
    or              reduce using rule 236 (EXP -> cadenaString .)
    mayor           reduce using rule 236 (EXP -> cadenaString .)
    menor           reduce using rule 236 (EXP -> cadenaString .)
    mayor_igual     reduce using rule 236 (EXP -> cadenaString .)
    menor_igual     reduce using rule 236 (EXP -> cadenaString .)
    igual           reduce using rule 236 (EXP -> cadenaString .)
    diferente1      reduce using rule 236 (EXP -> cadenaString .)
    diferente2      reduce using rule 236 (EXP -> cadenaString .)
    between         reduce using rule 236 (EXP -> cadenaString .)
    is              reduce using rule 236 (EXP -> cadenaString .)
    isnull          reduce using rule 236 (EXP -> cadenaString .)
    notnull         reduce using rule 236 (EXP -> cadenaString .)
    as              reduce using rule 236 (EXP -> cadenaString .)
    cadenaString    reduce using rule 236 (EXP -> cadenaString .)
    id              reduce using rule 236 (EXP -> cadenaString .)
    cadena          reduce using rule 236 (EXP -> cadenaString .)
    in              reduce using rule 236 (EXP -> cadenaString .)
    not             reduce using rule 236 (EXP -> cadenaString .)
    like            reduce using rule 236 (EXP -> cadenaString .)
    parc            reduce using rule 236 (EXP -> cadenaString .)
    then            reduce using rule 236 (EXP -> cadenaString .)
    end             reduce using rule 236 (EXP -> cadenaString .)
    else            reduce using rule 236 (EXP -> cadenaString .)
    when            reduce using rule 236 (EXP -> cadenaString .)
    constraint      reduce using rule 236 (EXP -> cadenaString .)
    unique          reduce using rule 236 (EXP -> cadenaString .)
    check           reduce using rule 236 (EXP -> cadenaString .)
    default         reduce using rule 236 (EXP -> cadenaString .)
    null            reduce using rule 236 (EXP -> cadenaString .)
    primary         reduce using rule 236 (EXP -> cadenaString .)
    references      reduce using rule 236 (EXP -> cadenaString .)
    asc             reduce using rule 236 (EXP -> cadenaString .)
    desc            reduce using rule 236 (EXP -> cadenaString .)


state 49

    (227) EXP -> id . para LEXP parc
    (228) EXP -> id . para parc
    (239) EXP -> id .

    para            shift and go to state 120
    r_from          reduce using rule 239 (EXP -> id .)
    coma            reduce using rule 239 (EXP -> id .)
    where           reduce using rule 239 (EXP -> id .)
    group           reduce using rule 239 (EXP -> id .)
    having          reduce using rule 239 (EXP -> id .)
    union           reduce using rule 239 (EXP -> id .)
    intersect       reduce using rule 239 (EXP -> id .)
    except          reduce using rule 239 (EXP -> id .)
    order           reduce using rule 239 (EXP -> id .)
    limit           reduce using rule 239 (EXP -> id .)
    offset          reduce using rule 239 (EXP -> id .)
    ptcoma          reduce using rule 239 (EXP -> id .)
    mas             reduce using rule 239 (EXP -> id .)
    menos           reduce using rule 239 (EXP -> id .)
    multiplicacion  reduce using rule 239 (EXP -> id .)
    division        reduce using rule 239 (EXP -> id .)
    modulo          reduce using rule 239 (EXP -> id .)
    elevado         reduce using rule 239 (EXP -> id .)
    and             reduce using rule 239 (EXP -> id .)
    or              reduce using rule 239 (EXP -> id .)
    mayor           reduce using rule 239 (EXP -> id .)
    menor           reduce using rule 239 (EXP -> id .)
    mayor_igual     reduce using rule 239 (EXP -> id .)
    menor_igual     reduce using rule 239 (EXP -> id .)
    igual           reduce using rule 239 (EXP -> id .)
    diferente1      reduce using rule 239 (EXP -> id .)
    diferente2      reduce using rule 239 (EXP -> id .)
    between         reduce using rule 239 (EXP -> id .)
    is              reduce using rule 239 (EXP -> id .)
    isnull          reduce using rule 239 (EXP -> id .)
    notnull         reduce using rule 239 (EXP -> id .)
    as              reduce using rule 239 (EXP -> id .)
    cadenaString    reduce using rule 239 (EXP -> id .)
    id              reduce using rule 239 (EXP -> id .)
    cadena          reduce using rule 239 (EXP -> id .)
    in              reduce using rule 239 (EXP -> id .)
    not             reduce using rule 239 (EXP -> id .)
    like            reduce using rule 239 (EXP -> id .)
    parc            reduce using rule 239 (EXP -> id .)
    then            reduce using rule 239 (EXP -> id .)
    end             reduce using rule 239 (EXP -> id .)
    else            reduce using rule 239 (EXP -> id .)
    when            reduce using rule 239 (EXP -> id .)
    constraint      reduce using rule 239 (EXP -> id .)
    unique          reduce using rule 239 (EXP -> id .)
    check           reduce using rule 239 (EXP -> id .)
    default         reduce using rule 239 (EXP -> id .)
    null            reduce using rule 239 (EXP -> id .)
    primary         reduce using rule 239 (EXP -> id .)
    references      reduce using rule 239 (EXP -> id .)
    asc             reduce using rule 239 (EXP -> id .)
    desc            reduce using rule 239 (EXP -> id .)


state 50

    (235) EXP -> cadena .
    (246) EXP -> cadena . as TIPO

  ! shift/reduce conflict for as resolved as shift
    r_from          reduce using rule 235 (EXP -> cadena .)
    coma            reduce using rule 235 (EXP -> cadena .)
    where           reduce using rule 235 (EXP -> cadena .)
    group           reduce using rule 235 (EXP -> cadena .)
    having          reduce using rule 235 (EXP -> cadena .)
    union           reduce using rule 235 (EXP -> cadena .)
    intersect       reduce using rule 235 (EXP -> cadena .)
    except          reduce using rule 235 (EXP -> cadena .)
    order           reduce using rule 235 (EXP -> cadena .)
    limit           reduce using rule 235 (EXP -> cadena .)
    offset          reduce using rule 235 (EXP -> cadena .)
    ptcoma          reduce using rule 235 (EXP -> cadena .)
    mas             reduce using rule 235 (EXP -> cadena .)
    menos           reduce using rule 235 (EXP -> cadena .)
    multiplicacion  reduce using rule 235 (EXP -> cadena .)
    division        reduce using rule 235 (EXP -> cadena .)
    modulo          reduce using rule 235 (EXP -> cadena .)
    elevado         reduce using rule 235 (EXP -> cadena .)
    and             reduce using rule 235 (EXP -> cadena .)
    or              reduce using rule 235 (EXP -> cadena .)
    mayor           reduce using rule 235 (EXP -> cadena .)
    menor           reduce using rule 235 (EXP -> cadena .)
    mayor_igual     reduce using rule 235 (EXP -> cadena .)
    menor_igual     reduce using rule 235 (EXP -> cadena .)
    igual           reduce using rule 235 (EXP -> cadena .)
    diferente1      reduce using rule 235 (EXP -> cadena .)
    diferente2      reduce using rule 235 (EXP -> cadena .)
    between         reduce using rule 235 (EXP -> cadena .)
    is              reduce using rule 235 (EXP -> cadena .)
    isnull          reduce using rule 235 (EXP -> cadena .)
    notnull         reduce using rule 235 (EXP -> cadena .)
    cadenaString    reduce using rule 235 (EXP -> cadena .)
    id              reduce using rule 235 (EXP -> cadena .)
    cadena          reduce using rule 235 (EXP -> cadena .)
    in              reduce using rule 235 (EXP -> cadena .)
    not             reduce using rule 235 (EXP -> cadena .)
    like            reduce using rule 235 (EXP -> cadena .)
    parc            reduce using rule 235 (EXP -> cadena .)
    then            reduce using rule 235 (EXP -> cadena .)
    end             reduce using rule 235 (EXP -> cadena .)
    else            reduce using rule 235 (EXP -> cadena .)
    when            reduce using rule 235 (EXP -> cadena .)
    constraint      reduce using rule 235 (EXP -> cadena .)
    unique          reduce using rule 235 (EXP -> cadena .)
    check           reduce using rule 235 (EXP -> cadena .)
    default         reduce using rule 235 (EXP -> cadena .)
    null            reduce using rule 235 (EXP -> cadena .)
    primary         reduce using rule 235 (EXP -> cadena .)
    references      reduce using rule 235 (EXP -> cadena .)
    asc             reduce using rule 235 (EXP -> cadena .)
    desc            reduce using rule 235 (EXP -> cadena .)
    as              shift and go to state 121

  ! as              [ reduce using rule 235 (EXP -> cadena .) ]


state 51

    (225) EXP -> para . EXP parc
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 122
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 52

    (224) EXP -> SELECT .

    r_from          reduce using rule 224 (EXP -> SELECT .)
    coma            reduce using rule 224 (EXP -> SELECT .)
    where           reduce using rule 224 (EXP -> SELECT .)
    group           reduce using rule 224 (EXP -> SELECT .)
    having          reduce using rule 224 (EXP -> SELECT .)
    union           reduce using rule 224 (EXP -> SELECT .)
    intersect       reduce using rule 224 (EXP -> SELECT .)
    except          reduce using rule 224 (EXP -> SELECT .)
    order           reduce using rule 224 (EXP -> SELECT .)
    limit           reduce using rule 224 (EXP -> SELECT .)
    offset          reduce using rule 224 (EXP -> SELECT .)
    ptcoma          reduce using rule 224 (EXP -> SELECT .)
    mas             reduce using rule 224 (EXP -> SELECT .)
    menos           reduce using rule 224 (EXP -> SELECT .)
    multiplicacion  reduce using rule 224 (EXP -> SELECT .)
    division        reduce using rule 224 (EXP -> SELECT .)
    modulo          reduce using rule 224 (EXP -> SELECT .)
    elevado         reduce using rule 224 (EXP -> SELECT .)
    and             reduce using rule 224 (EXP -> SELECT .)
    or              reduce using rule 224 (EXP -> SELECT .)
    mayor           reduce using rule 224 (EXP -> SELECT .)
    menor           reduce using rule 224 (EXP -> SELECT .)
    mayor_igual     reduce using rule 224 (EXP -> SELECT .)
    menor_igual     reduce using rule 224 (EXP -> SELECT .)
    igual           reduce using rule 224 (EXP -> SELECT .)
    diferente1      reduce using rule 224 (EXP -> SELECT .)
    diferente2      reduce using rule 224 (EXP -> SELECT .)
    between         reduce using rule 224 (EXP -> SELECT .)
    is              reduce using rule 224 (EXP -> SELECT .)
    isnull          reduce using rule 224 (EXP -> SELECT .)
    notnull         reduce using rule 224 (EXP -> SELECT .)
    as              reduce using rule 224 (EXP -> SELECT .)
    cadenaString    reduce using rule 224 (EXP -> SELECT .)
    id              reduce using rule 224 (EXP -> SELECT .)
    cadena          reduce using rule 224 (EXP -> SELECT .)
    in              reduce using rule 224 (EXP -> SELECT .)
    not             reduce using rule 224 (EXP -> SELECT .)
    like            reduce using rule 224 (EXP -> SELECT .)
    parc            reduce using rule 224 (EXP -> SELECT .)
    then            reduce using rule 224 (EXP -> SELECT .)
    end             reduce using rule 224 (EXP -> SELECT .)
    else            reduce using rule 224 (EXP -> SELECT .)
    when            reduce using rule 224 (EXP -> SELECT .)
    constraint      reduce using rule 224 (EXP -> SELECT .)
    unique          reduce using rule 224 (EXP -> SELECT .)
    check           reduce using rule 224 (EXP -> SELECT .)
    default         reduce using rule 224 (EXP -> SELECT .)
    null            reduce using rule 224 (EXP -> SELECT .)
    primary         reduce using rule 224 (EXP -> SELECT .)
    references      reduce using rule 224 (EXP -> SELECT .)
    asc             reduce using rule 224 (EXP -> SELECT .)
    desc            reduce using rule 224 (EXP -> SELECT .)


state 53

    (226) EXP -> CASE .

    r_from          reduce using rule 226 (EXP -> CASE .)
    coma            reduce using rule 226 (EXP -> CASE .)
    where           reduce using rule 226 (EXP -> CASE .)
    group           reduce using rule 226 (EXP -> CASE .)
    having          reduce using rule 226 (EXP -> CASE .)
    union           reduce using rule 226 (EXP -> CASE .)
    intersect       reduce using rule 226 (EXP -> CASE .)
    except          reduce using rule 226 (EXP -> CASE .)
    order           reduce using rule 226 (EXP -> CASE .)
    limit           reduce using rule 226 (EXP -> CASE .)
    offset          reduce using rule 226 (EXP -> CASE .)
    ptcoma          reduce using rule 226 (EXP -> CASE .)
    mas             reduce using rule 226 (EXP -> CASE .)
    menos           reduce using rule 226 (EXP -> CASE .)
    multiplicacion  reduce using rule 226 (EXP -> CASE .)
    division        reduce using rule 226 (EXP -> CASE .)
    modulo          reduce using rule 226 (EXP -> CASE .)
    elevado         reduce using rule 226 (EXP -> CASE .)
    and             reduce using rule 226 (EXP -> CASE .)
    or              reduce using rule 226 (EXP -> CASE .)
    mayor           reduce using rule 226 (EXP -> CASE .)
    menor           reduce using rule 226 (EXP -> CASE .)
    mayor_igual     reduce using rule 226 (EXP -> CASE .)
    menor_igual     reduce using rule 226 (EXP -> CASE .)
    igual           reduce using rule 226 (EXP -> CASE .)
    diferente1      reduce using rule 226 (EXP -> CASE .)
    diferente2      reduce using rule 226 (EXP -> CASE .)
    between         reduce using rule 226 (EXP -> CASE .)
    is              reduce using rule 226 (EXP -> CASE .)
    isnull          reduce using rule 226 (EXP -> CASE .)
    notnull         reduce using rule 226 (EXP -> CASE .)
    as              reduce using rule 226 (EXP -> CASE .)
    cadenaString    reduce using rule 226 (EXP -> CASE .)
    id              reduce using rule 226 (EXP -> CASE .)
    cadena          reduce using rule 226 (EXP -> CASE .)
    in              reduce using rule 226 (EXP -> CASE .)
    not             reduce using rule 226 (EXP -> CASE .)
    like            reduce using rule 226 (EXP -> CASE .)
    parc            reduce using rule 226 (EXP -> CASE .)
    then            reduce using rule 226 (EXP -> CASE .)
    end             reduce using rule 226 (EXP -> CASE .)
    else            reduce using rule 226 (EXP -> CASE .)
    when            reduce using rule 226 (EXP -> CASE .)
    constraint      reduce using rule 226 (EXP -> CASE .)
    unique          reduce using rule 226 (EXP -> CASE .)
    check           reduce using rule 226 (EXP -> CASE .)
    default         reduce using rule 226 (EXP -> CASE .)
    null            reduce using rule 226 (EXP -> CASE .)
    primary         reduce using rule 226 (EXP -> CASE .)
    references      reduce using rule 226 (EXP -> CASE .)
    asc             reduce using rule 226 (EXP -> CASE .)
    desc            reduce using rule 226 (EXP -> CASE .)


state 54

    (229) EXP -> any . para LEXP parc

    para            shift and go to state 123


state 55

    (230) EXP -> all . para LEXP parc

    para            shift and go to state 124


state 56

    (231) EXP -> some . para LEXP parc

    para            shift and go to state 125


state 57

    (232) EXP -> extract . para FIELDS r_from timestamp cadena parc

    para            shift and go to state 126


state 58

    (244) EXP -> timestamp . cadena

    cadena          shift and go to state 127


state 59

    (233) EXP -> int .

    r_from          reduce using rule 233 (EXP -> int .)
    coma            reduce using rule 233 (EXP -> int .)
    where           reduce using rule 233 (EXP -> int .)
    group           reduce using rule 233 (EXP -> int .)
    having          reduce using rule 233 (EXP -> int .)
    union           reduce using rule 233 (EXP -> int .)
    intersect       reduce using rule 233 (EXP -> int .)
    except          reduce using rule 233 (EXP -> int .)
    order           reduce using rule 233 (EXP -> int .)
    limit           reduce using rule 233 (EXP -> int .)
    offset          reduce using rule 233 (EXP -> int .)
    ptcoma          reduce using rule 233 (EXP -> int .)
    mas             reduce using rule 233 (EXP -> int .)
    menos           reduce using rule 233 (EXP -> int .)
    multiplicacion  reduce using rule 233 (EXP -> int .)
    division        reduce using rule 233 (EXP -> int .)
    modulo          reduce using rule 233 (EXP -> int .)
    elevado         reduce using rule 233 (EXP -> int .)
    and             reduce using rule 233 (EXP -> int .)
    or              reduce using rule 233 (EXP -> int .)
    mayor           reduce using rule 233 (EXP -> int .)
    menor           reduce using rule 233 (EXP -> int .)
    mayor_igual     reduce using rule 233 (EXP -> int .)
    menor_igual     reduce using rule 233 (EXP -> int .)
    igual           reduce using rule 233 (EXP -> int .)
    diferente1      reduce using rule 233 (EXP -> int .)
    diferente2      reduce using rule 233 (EXP -> int .)
    between         reduce using rule 233 (EXP -> int .)
    is              reduce using rule 233 (EXP -> int .)
    isnull          reduce using rule 233 (EXP -> int .)
    notnull         reduce using rule 233 (EXP -> int .)
    as              reduce using rule 233 (EXP -> int .)
    cadenaString    reduce using rule 233 (EXP -> int .)
    id              reduce using rule 233 (EXP -> int .)
    cadena          reduce using rule 233 (EXP -> int .)
    in              reduce using rule 233 (EXP -> int .)
    not             reduce using rule 233 (EXP -> int .)
    like            reduce using rule 233 (EXP -> int .)
    parc            reduce using rule 233 (EXP -> int .)
    then            reduce using rule 233 (EXP -> int .)
    end             reduce using rule 233 (EXP -> int .)
    else            reduce using rule 233 (EXP -> int .)
    when            reduce using rule 233 (EXP -> int .)
    constraint      reduce using rule 233 (EXP -> int .)
    unique          reduce using rule 233 (EXP -> int .)
    check           reduce using rule 233 (EXP -> int .)
    default         reduce using rule 233 (EXP -> int .)
    null            reduce using rule 233 (EXP -> int .)
    primary         reduce using rule 233 (EXP -> int .)
    references      reduce using rule 233 (EXP -> int .)
    asc             reduce using rule 233 (EXP -> int .)
    desc            reduce using rule 233 (EXP -> int .)


state 60

    (234) EXP -> decimales .

    r_from          reduce using rule 234 (EXP -> decimales .)
    coma            reduce using rule 234 (EXP -> decimales .)
    where           reduce using rule 234 (EXP -> decimales .)
    group           reduce using rule 234 (EXP -> decimales .)
    having          reduce using rule 234 (EXP -> decimales .)
    union           reduce using rule 234 (EXP -> decimales .)
    intersect       reduce using rule 234 (EXP -> decimales .)
    except          reduce using rule 234 (EXP -> decimales .)
    order           reduce using rule 234 (EXP -> decimales .)
    limit           reduce using rule 234 (EXP -> decimales .)
    offset          reduce using rule 234 (EXP -> decimales .)
    ptcoma          reduce using rule 234 (EXP -> decimales .)
    mas             reduce using rule 234 (EXP -> decimales .)
    menos           reduce using rule 234 (EXP -> decimales .)
    multiplicacion  reduce using rule 234 (EXP -> decimales .)
    division        reduce using rule 234 (EXP -> decimales .)
    modulo          reduce using rule 234 (EXP -> decimales .)
    elevado         reduce using rule 234 (EXP -> decimales .)
    and             reduce using rule 234 (EXP -> decimales .)
    or              reduce using rule 234 (EXP -> decimales .)
    mayor           reduce using rule 234 (EXP -> decimales .)
    menor           reduce using rule 234 (EXP -> decimales .)
    mayor_igual     reduce using rule 234 (EXP -> decimales .)
    menor_igual     reduce using rule 234 (EXP -> decimales .)
    igual           reduce using rule 234 (EXP -> decimales .)
    diferente1      reduce using rule 234 (EXP -> decimales .)
    diferente2      reduce using rule 234 (EXP -> decimales .)
    between         reduce using rule 234 (EXP -> decimales .)
    is              reduce using rule 234 (EXP -> decimales .)
    isnull          reduce using rule 234 (EXP -> decimales .)
    notnull         reduce using rule 234 (EXP -> decimales .)
    as              reduce using rule 234 (EXP -> decimales .)
    cadenaString    reduce using rule 234 (EXP -> decimales .)
    id              reduce using rule 234 (EXP -> decimales .)
    cadena          reduce using rule 234 (EXP -> decimales .)
    in              reduce using rule 234 (EXP -> decimales .)
    not             reduce using rule 234 (EXP -> decimales .)
    like            reduce using rule 234 (EXP -> decimales .)
    parc            reduce using rule 234 (EXP -> decimales .)
    then            reduce using rule 234 (EXP -> decimales .)
    end             reduce using rule 234 (EXP -> decimales .)
    else            reduce using rule 234 (EXP -> decimales .)
    when            reduce using rule 234 (EXP -> decimales .)
    constraint      reduce using rule 234 (EXP -> decimales .)
    unique          reduce using rule 234 (EXP -> decimales .)
    check           reduce using rule 234 (EXP -> decimales .)
    default         reduce using rule 234 (EXP -> decimales .)
    null            reduce using rule 234 (EXP -> decimales .)
    primary         reduce using rule 234 (EXP -> decimales .)
    references      reduce using rule 234 (EXP -> decimales .)
    asc             reduce using rule 234 (EXP -> decimales .)
    desc            reduce using rule 234 (EXP -> decimales .)


state 61

    (242) EXP -> current_time .

    r_from          reduce using rule 242 (EXP -> current_time .)
    coma            reduce using rule 242 (EXP -> current_time .)
    where           reduce using rule 242 (EXP -> current_time .)
    group           reduce using rule 242 (EXP -> current_time .)
    having          reduce using rule 242 (EXP -> current_time .)
    union           reduce using rule 242 (EXP -> current_time .)
    intersect       reduce using rule 242 (EXP -> current_time .)
    except          reduce using rule 242 (EXP -> current_time .)
    order           reduce using rule 242 (EXP -> current_time .)
    limit           reduce using rule 242 (EXP -> current_time .)
    offset          reduce using rule 242 (EXP -> current_time .)
    ptcoma          reduce using rule 242 (EXP -> current_time .)
    mas             reduce using rule 242 (EXP -> current_time .)
    menos           reduce using rule 242 (EXP -> current_time .)
    multiplicacion  reduce using rule 242 (EXP -> current_time .)
    division        reduce using rule 242 (EXP -> current_time .)
    modulo          reduce using rule 242 (EXP -> current_time .)
    elevado         reduce using rule 242 (EXP -> current_time .)
    and             reduce using rule 242 (EXP -> current_time .)
    or              reduce using rule 242 (EXP -> current_time .)
    mayor           reduce using rule 242 (EXP -> current_time .)
    menor           reduce using rule 242 (EXP -> current_time .)
    mayor_igual     reduce using rule 242 (EXP -> current_time .)
    menor_igual     reduce using rule 242 (EXP -> current_time .)
    igual           reduce using rule 242 (EXP -> current_time .)
    diferente1      reduce using rule 242 (EXP -> current_time .)
    diferente2      reduce using rule 242 (EXP -> current_time .)
    between         reduce using rule 242 (EXP -> current_time .)
    is              reduce using rule 242 (EXP -> current_time .)
    isnull          reduce using rule 242 (EXP -> current_time .)
    notnull         reduce using rule 242 (EXP -> current_time .)
    as              reduce using rule 242 (EXP -> current_time .)
    cadenaString    reduce using rule 242 (EXP -> current_time .)
    id              reduce using rule 242 (EXP -> current_time .)
    cadena          reduce using rule 242 (EXP -> current_time .)
    in              reduce using rule 242 (EXP -> current_time .)
    not             reduce using rule 242 (EXP -> current_time .)
    like            reduce using rule 242 (EXP -> current_time .)
    parc            reduce using rule 242 (EXP -> current_time .)
    then            reduce using rule 242 (EXP -> current_time .)
    end             reduce using rule 242 (EXP -> current_time .)
    else            reduce using rule 242 (EXP -> current_time .)
    when            reduce using rule 242 (EXP -> current_time .)
    constraint      reduce using rule 242 (EXP -> current_time .)
    unique          reduce using rule 242 (EXP -> current_time .)
    check           reduce using rule 242 (EXP -> current_time .)
    default         reduce using rule 242 (EXP -> current_time .)
    null            reduce using rule 242 (EXP -> current_time .)
    primary         reduce using rule 242 (EXP -> current_time .)
    references      reduce using rule 242 (EXP -> current_time .)
    asc             reduce using rule 242 (EXP -> current_time .)
    desc            reduce using rule 242 (EXP -> current_time .)


state 62

    (243) EXP -> current_date .

    r_from          reduce using rule 243 (EXP -> current_date .)
    coma            reduce using rule 243 (EXP -> current_date .)
    where           reduce using rule 243 (EXP -> current_date .)
    group           reduce using rule 243 (EXP -> current_date .)
    having          reduce using rule 243 (EXP -> current_date .)
    union           reduce using rule 243 (EXP -> current_date .)
    intersect       reduce using rule 243 (EXP -> current_date .)
    except          reduce using rule 243 (EXP -> current_date .)
    order           reduce using rule 243 (EXP -> current_date .)
    limit           reduce using rule 243 (EXP -> current_date .)
    offset          reduce using rule 243 (EXP -> current_date .)
    ptcoma          reduce using rule 243 (EXP -> current_date .)
    mas             reduce using rule 243 (EXP -> current_date .)
    menos           reduce using rule 243 (EXP -> current_date .)
    multiplicacion  reduce using rule 243 (EXP -> current_date .)
    division        reduce using rule 243 (EXP -> current_date .)
    modulo          reduce using rule 243 (EXP -> current_date .)
    elevado         reduce using rule 243 (EXP -> current_date .)
    and             reduce using rule 243 (EXP -> current_date .)
    or              reduce using rule 243 (EXP -> current_date .)
    mayor           reduce using rule 243 (EXP -> current_date .)
    menor           reduce using rule 243 (EXP -> current_date .)
    mayor_igual     reduce using rule 243 (EXP -> current_date .)
    menor_igual     reduce using rule 243 (EXP -> current_date .)
    igual           reduce using rule 243 (EXP -> current_date .)
    diferente1      reduce using rule 243 (EXP -> current_date .)
    diferente2      reduce using rule 243 (EXP -> current_date .)
    between         reduce using rule 243 (EXP -> current_date .)
    is              reduce using rule 243 (EXP -> current_date .)
    isnull          reduce using rule 243 (EXP -> current_date .)
    notnull         reduce using rule 243 (EXP -> current_date .)
    as              reduce using rule 243 (EXP -> current_date .)
    cadenaString    reduce using rule 243 (EXP -> current_date .)
    id              reduce using rule 243 (EXP -> current_date .)
    cadena          reduce using rule 243 (EXP -> current_date .)
    in              reduce using rule 243 (EXP -> current_date .)
    not             reduce using rule 243 (EXP -> current_date .)
    like            reduce using rule 243 (EXP -> current_date .)
    parc            reduce using rule 243 (EXP -> current_date .)
    then            reduce using rule 243 (EXP -> current_date .)
    end             reduce using rule 243 (EXP -> current_date .)
    else            reduce using rule 243 (EXP -> current_date .)
    when            reduce using rule 243 (EXP -> current_date .)
    constraint      reduce using rule 243 (EXP -> current_date .)
    unique          reduce using rule 243 (EXP -> current_date .)
    check           reduce using rule 243 (EXP -> current_date .)
    default         reduce using rule 243 (EXP -> current_date .)
    null            reduce using rule 243 (EXP -> current_date .)
    primary         reduce using rule 243 (EXP -> current_date .)
    references      reduce using rule 243 (EXP -> current_date .)
    asc             reduce using rule 243 (EXP -> current_date .)
    desc            reduce using rule 243 (EXP -> current_date .)


state 63

    (245) EXP -> interval . cadena

    cadena          shift and go to state 128


state 64

    (247) EXP -> default .

    r_from          reduce using rule 247 (EXP -> default .)
    coma            reduce using rule 247 (EXP -> default .)
    where           reduce using rule 247 (EXP -> default .)
    group           reduce using rule 247 (EXP -> default .)
    having          reduce using rule 247 (EXP -> default .)
    union           reduce using rule 247 (EXP -> default .)
    intersect       reduce using rule 247 (EXP -> default .)
    except          reduce using rule 247 (EXP -> default .)
    order           reduce using rule 247 (EXP -> default .)
    limit           reduce using rule 247 (EXP -> default .)
    offset          reduce using rule 247 (EXP -> default .)
    ptcoma          reduce using rule 247 (EXP -> default .)
    mas             reduce using rule 247 (EXP -> default .)
    menos           reduce using rule 247 (EXP -> default .)
    multiplicacion  reduce using rule 247 (EXP -> default .)
    division        reduce using rule 247 (EXP -> default .)
    modulo          reduce using rule 247 (EXP -> default .)
    elevado         reduce using rule 247 (EXP -> default .)
    and             reduce using rule 247 (EXP -> default .)
    or              reduce using rule 247 (EXP -> default .)
    mayor           reduce using rule 247 (EXP -> default .)
    menor           reduce using rule 247 (EXP -> default .)
    mayor_igual     reduce using rule 247 (EXP -> default .)
    menor_igual     reduce using rule 247 (EXP -> default .)
    igual           reduce using rule 247 (EXP -> default .)
    diferente1      reduce using rule 247 (EXP -> default .)
    diferente2      reduce using rule 247 (EXP -> default .)
    between         reduce using rule 247 (EXP -> default .)
    is              reduce using rule 247 (EXP -> default .)
    isnull          reduce using rule 247 (EXP -> default .)
    notnull         reduce using rule 247 (EXP -> default .)
    as              reduce using rule 247 (EXP -> default .)
    cadenaString    reduce using rule 247 (EXP -> default .)
    id              reduce using rule 247 (EXP -> default .)
    cadena          reduce using rule 247 (EXP -> default .)
    in              reduce using rule 247 (EXP -> default .)
    not             reduce using rule 247 (EXP -> default .)
    like            reduce using rule 247 (EXP -> default .)
    parc            reduce using rule 247 (EXP -> default .)
    then            reduce using rule 247 (EXP -> default .)
    end             reduce using rule 247 (EXP -> default .)
    else            reduce using rule 247 (EXP -> default .)
    when            reduce using rule 247 (EXP -> default .)
    constraint      reduce using rule 247 (EXP -> default .)
    unique          reduce using rule 247 (EXP -> default .)
    check           reduce using rule 247 (EXP -> default .)
    default         reduce using rule 247 (EXP -> default .)
    null            reduce using rule 247 (EXP -> default .)
    primary         reduce using rule 247 (EXP -> default .)
    references      reduce using rule 247 (EXP -> default .)
    asc             reduce using rule 247 (EXP -> default .)
    desc            reduce using rule 247 (EXP -> default .)


state 65

    (248) EXP -> idPunto .

    r_from          reduce using rule 248 (EXP -> idPunto .)
    coma            reduce using rule 248 (EXP -> idPunto .)
    where           reduce using rule 248 (EXP -> idPunto .)
    group           reduce using rule 248 (EXP -> idPunto .)
    having          reduce using rule 248 (EXP -> idPunto .)
    union           reduce using rule 248 (EXP -> idPunto .)
    intersect       reduce using rule 248 (EXP -> idPunto .)
    except          reduce using rule 248 (EXP -> idPunto .)
    order           reduce using rule 248 (EXP -> idPunto .)
    limit           reduce using rule 248 (EXP -> idPunto .)
    offset          reduce using rule 248 (EXP -> idPunto .)
    ptcoma          reduce using rule 248 (EXP -> idPunto .)
    mas             reduce using rule 248 (EXP -> idPunto .)
    menos           reduce using rule 248 (EXP -> idPunto .)
    multiplicacion  reduce using rule 248 (EXP -> idPunto .)
    division        reduce using rule 248 (EXP -> idPunto .)
    modulo          reduce using rule 248 (EXP -> idPunto .)
    elevado         reduce using rule 248 (EXP -> idPunto .)
    and             reduce using rule 248 (EXP -> idPunto .)
    or              reduce using rule 248 (EXP -> idPunto .)
    mayor           reduce using rule 248 (EXP -> idPunto .)
    menor           reduce using rule 248 (EXP -> idPunto .)
    mayor_igual     reduce using rule 248 (EXP -> idPunto .)
    menor_igual     reduce using rule 248 (EXP -> idPunto .)
    igual           reduce using rule 248 (EXP -> idPunto .)
    diferente1      reduce using rule 248 (EXP -> idPunto .)
    diferente2      reduce using rule 248 (EXP -> idPunto .)
    between         reduce using rule 248 (EXP -> idPunto .)
    is              reduce using rule 248 (EXP -> idPunto .)
    isnull          reduce using rule 248 (EXP -> idPunto .)
    notnull         reduce using rule 248 (EXP -> idPunto .)
    as              reduce using rule 248 (EXP -> idPunto .)
    cadenaString    reduce using rule 248 (EXP -> idPunto .)
    id              reduce using rule 248 (EXP -> idPunto .)
    cadena          reduce using rule 248 (EXP -> idPunto .)
    in              reduce using rule 248 (EXP -> idPunto .)
    not             reduce using rule 248 (EXP -> idPunto .)
    like            reduce using rule 248 (EXP -> idPunto .)
    parc            reduce using rule 248 (EXP -> idPunto .)
    then            reduce using rule 248 (EXP -> idPunto .)
    end             reduce using rule 248 (EXP -> idPunto .)
    else            reduce using rule 248 (EXP -> idPunto .)
    when            reduce using rule 248 (EXP -> idPunto .)
    constraint      reduce using rule 248 (EXP -> idPunto .)
    unique          reduce using rule 248 (EXP -> idPunto .)
    check           reduce using rule 248 (EXP -> idPunto .)
    default         reduce using rule 248 (EXP -> idPunto .)
    null            reduce using rule 248 (EXP -> idPunto .)
    primary         reduce using rule 248 (EXP -> idPunto .)
    references      reduce using rule 248 (EXP -> idPunto .)
    asc             reduce using rule 248 (EXP -> idPunto .)
    desc            reduce using rule 248 (EXP -> idPunto .)


state 66

    (67) CREATETABLE -> create table . id para LDEF parc ptcoma
    (68) CREATETABLE -> create table . id para LDEF parc HERENCIA ptcoma

    id              shift and go to state 129


state 67

    (98) CREATETYPE -> create type . id as enum para LEXP parc

    id              shift and go to state 130


state 68

    (50) CREATEDB -> create RD . if not exist id
    (51) CREATEDB -> create RD . if not exist id OPCCDB
    (52) CREATEDB -> create RD . id
    (53) CREATEDB -> create RD . id OPCCDB

    if              shift and go to state 131
    id              shift and go to state 132


state 69

    (57) RD -> or . replace databases

    replace         shift and go to state 133


state 70

    (58) RD -> databases .

    if              reduce using rule 58 (RD -> databases .)
    id              reduce using rule 58 (RD -> databases .)


state 71

    (129) UPDATE -> update id . set LCAMPOS where LEXP

    set             shift and go to state 134


state 72

    (132) DELETE -> delete r_from . EXP WHERE
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 135
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 73

    (29) ALTER -> alter databases . id rename to id
    (30) ALTER -> alter databases . id owner to id

    id              shift and go to state 136


state 74

    (31) ALTER -> alter table . id OP

    id              shift and go to state 137


state 75

    (25) DROP -> drop all . para parc

    para            shift and go to state 138


state 76

    (26) DROP -> drop table . id

    id              shift and go to state 139


state 77

    (27) DROP -> drop databases . if exist id
    (28) DROP -> drop databases . id

    if              shift and go to state 140
    id              shift and go to state 141


state 78

    (23) INSERT -> insert into . id values para LEXP parc
    (24) INSERT -> insert into . id para LEXP parc values para LEXP parc

    id              shift and go to state 142


state 79

    (17) CASE -> case LISTAWHEN . ELSE end
    (18) CASE -> case LISTAWHEN . end
    (19) LISTAWHEN -> LISTAWHEN . WHEN
    (22) ELSE -> . else LEXP
    (21) WHEN -> . when LEXP then LEXP

    end             shift and go to state 144
    else            shift and go to state 146
    when            shift and go to state 81

    ELSE                           shift and go to state 143
    WHEN                           shift and go to state 145

state 80

    (20) LISTAWHEN -> WHEN .

    end             reduce using rule 20 (LISTAWHEN -> WHEN .)
    else            reduce using rule 20 (LISTAWHEN -> WHEN .)
    when            reduce using rule 20 (LISTAWHEN -> WHEN .)


state 81

    (21) WHEN -> when . LEXP then LEXP
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 147
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 82

    (47) SHOWDB -> show dbs .

    ptcoma          reduce using rule 47 (SHOWDB -> show dbs .)


state 83

    (48) SHOW -> show tables . para id parc

    para            shift and go to state 148


state 84

    (49) SHOW -> show collection . para parc

    para            shift and go to state 149


state 85

    (16) instruccion -> use id ptcoma .

    use             reduce using rule 16 (instruccion -> use id ptcoma .)
    select          reduce using rule 16 (instruccion -> use id ptcoma .)
    create          reduce using rule 16 (instruccion -> use id ptcoma .)
    update          reduce using rule 16 (instruccion -> use id ptcoma .)
    delete          reduce using rule 16 (instruccion -> use id ptcoma .)
    alter           reduce using rule 16 (instruccion -> use id ptcoma .)
    drop            reduce using rule 16 (instruccion -> use id ptcoma .)
    insert          reduce using rule 16 (instruccion -> use id ptcoma .)
    case            reduce using rule 16 (instruccion -> use id ptcoma .)
    show            reduce using rule 16 (instruccion -> use id ptcoma .)
    $end            reduce using rule 16 (instruccion -> use id ptcoma .)


state 86

    (99) SELECT -> select distinct LEXP . r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (135) LEXP -> LEXP . coma EXP

    r_from          shift and go to state 150
    coma            shift and go to state 89


state 87

    (100) SELECT -> select LEXP r_from . LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 151
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 88

    (101) SELECT -> select LEXP WHERE . GROUP HAVING COMBINING ORDER LIMIT
    (120) GROUP -> . group by LEXP
    (121) GROUP -> .

  ! shift/reduce conflict for group resolved as shift
    group           shift and go to state 153
    r_from          reduce using rule 121 (GROUP -> .)
    coma            reduce using rule 121 (GROUP -> .)
    where           reduce using rule 121 (GROUP -> .)
    having          reduce using rule 121 (GROUP -> .)
    union           reduce using rule 121 (GROUP -> .)
    intersect       reduce using rule 121 (GROUP -> .)
    except          reduce using rule 121 (GROUP -> .)
    order           reduce using rule 121 (GROUP -> .)
    limit           reduce using rule 121 (GROUP -> .)
    offset          reduce using rule 121 (GROUP -> .)
    ptcoma          reduce using rule 121 (GROUP -> .)
    mas             reduce using rule 121 (GROUP -> .)
    menos           reduce using rule 121 (GROUP -> .)
    multiplicacion  reduce using rule 121 (GROUP -> .)
    division        reduce using rule 121 (GROUP -> .)
    modulo          reduce using rule 121 (GROUP -> .)
    elevado         reduce using rule 121 (GROUP -> .)
    and             reduce using rule 121 (GROUP -> .)
    or              reduce using rule 121 (GROUP -> .)
    mayor           reduce using rule 121 (GROUP -> .)
    menor           reduce using rule 121 (GROUP -> .)
    mayor_igual     reduce using rule 121 (GROUP -> .)
    menor_igual     reduce using rule 121 (GROUP -> .)
    igual           reduce using rule 121 (GROUP -> .)
    diferente1      reduce using rule 121 (GROUP -> .)
    diferente2      reduce using rule 121 (GROUP -> .)
    between         reduce using rule 121 (GROUP -> .)
    is              reduce using rule 121 (GROUP -> .)
    isnull          reduce using rule 121 (GROUP -> .)
    notnull         reduce using rule 121 (GROUP -> .)
    as              reduce using rule 121 (GROUP -> .)
    cadenaString    reduce using rule 121 (GROUP -> .)
    id              reduce using rule 121 (GROUP -> .)
    cadena          reduce using rule 121 (GROUP -> .)
    in              reduce using rule 121 (GROUP -> .)
    not             reduce using rule 121 (GROUP -> .)
    like            reduce using rule 121 (GROUP -> .)
    parc            reduce using rule 121 (GROUP -> .)
    then            reduce using rule 121 (GROUP -> .)
    end             reduce using rule 121 (GROUP -> .)
    else            reduce using rule 121 (GROUP -> .)
    when            reduce using rule 121 (GROUP -> .)
    constraint      reduce using rule 121 (GROUP -> .)
    unique          reduce using rule 121 (GROUP -> .)
    check           reduce using rule 121 (GROUP -> .)
    default         reduce using rule 121 (GROUP -> .)
    null            reduce using rule 121 (GROUP -> .)
    primary         reduce using rule 121 (GROUP -> .)
    references      reduce using rule 121 (GROUP -> .)
    asc             reduce using rule 121 (GROUP -> .)
    desc            reduce using rule 121 (GROUP -> .)

  ! group           [ reduce using rule 121 (GROUP -> .) ]

    GROUP                          shift and go to state 152

state 89

    (135) LEXP -> LEXP coma . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 154
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 90

    (110) WHERE -> where . EXP
    (111) WHERE -> where . EXIST
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (133) EXIST -> . exist para SELECT parc
    (134) EXIST -> . not exist para SELECT parc
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 157
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    exist           shift and go to state 158
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 155
    EXIST                          shift and go to state 156
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 91

    (180) EXP -> EXP mas . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 159
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 92

    (181) EXP -> EXP menos . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 160
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 93

    (182) EXP -> EXP multiplicacion . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 161
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 94

    (183) EXP -> EXP division . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 162
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 95

    (184) EXP -> EXP modulo . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 163
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 96

    (185) EXP -> EXP elevado . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 164
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 97

    (186) EXP -> EXP and . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 165
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 98

    (187) EXP -> EXP or . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 166
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 99

    (188) EXP -> EXP mayor . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 167
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 100

    (189) EXP -> EXP menor . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 168
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 101

    (190) EXP -> EXP mayor_igual . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 169
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 102

    (191) EXP -> EXP menor_igual . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 170
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 103

    (192) EXP -> EXP igual . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 171
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 104

    (193) EXP -> EXP diferente1 . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 172
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 105

    (194) EXP -> EXP diferente2 . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 173
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 106

    (195) EXP -> EXP between . EXP
    (218) EXP -> EXP between . symetric EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    symetric        shift and go to state 175
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 174
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 107

    (196) EXP -> EXP is . not null
    (197) EXP -> EXP is . null
    (200) EXP -> EXP is . true
    (201) EXP -> EXP is . not true
    (202) EXP -> EXP is . false
    (203) EXP -> EXP is . not false
    (204) EXP -> EXP is . unknown
    (205) EXP -> EXP is . not unknown
    (220) EXP -> EXP is . distinct r_from EXP
    (221) EXP -> EXP is . not distinct r_from EXP

    not             shift and go to state 176
    null            shift and go to state 177
    true            shift and go to state 178
    false           shift and go to state 179
    unknown         shift and go to state 180
    distinct        shift and go to state 181


state 108

    (216) EXP -> EXP not . in para EXP parc
    (217) EXP -> EXP not . between EXP
    (219) EXP -> EXP not . between symetric EXP
    (223) EXP -> EXP not . like cadena

    in              shift and go to state 182
    between         shift and go to state 183
    like            shift and go to state 184


state 109

    (198) EXP -> EXP isnull .

    r_from          reduce using rule 198 (EXP -> EXP isnull .)
    coma            reduce using rule 198 (EXP -> EXP isnull .)
    where           reduce using rule 198 (EXP -> EXP isnull .)
    group           reduce using rule 198 (EXP -> EXP isnull .)
    having          reduce using rule 198 (EXP -> EXP isnull .)
    union           reduce using rule 198 (EXP -> EXP isnull .)
    intersect       reduce using rule 198 (EXP -> EXP isnull .)
    except          reduce using rule 198 (EXP -> EXP isnull .)
    order           reduce using rule 198 (EXP -> EXP isnull .)
    limit           reduce using rule 198 (EXP -> EXP isnull .)
    offset          reduce using rule 198 (EXP -> EXP isnull .)
    ptcoma          reduce using rule 198 (EXP -> EXP isnull .)
    mas             reduce using rule 198 (EXP -> EXP isnull .)
    menos           reduce using rule 198 (EXP -> EXP isnull .)
    multiplicacion  reduce using rule 198 (EXP -> EXP isnull .)
    division        reduce using rule 198 (EXP -> EXP isnull .)
    modulo          reduce using rule 198 (EXP -> EXP isnull .)
    elevado         reduce using rule 198 (EXP -> EXP isnull .)
    and             reduce using rule 198 (EXP -> EXP isnull .)
    or              reduce using rule 198 (EXP -> EXP isnull .)
    mayor           reduce using rule 198 (EXP -> EXP isnull .)
    menor           reduce using rule 198 (EXP -> EXP isnull .)
    mayor_igual     reduce using rule 198 (EXP -> EXP isnull .)
    menor_igual     reduce using rule 198 (EXP -> EXP isnull .)
    igual           reduce using rule 198 (EXP -> EXP isnull .)
    diferente1      reduce using rule 198 (EXP -> EXP isnull .)
    diferente2      reduce using rule 198 (EXP -> EXP isnull .)
    between         reduce using rule 198 (EXP -> EXP isnull .)
    is              reduce using rule 198 (EXP -> EXP isnull .)
    isnull          reduce using rule 198 (EXP -> EXP isnull .)
    notnull         reduce using rule 198 (EXP -> EXP isnull .)
    as              reduce using rule 198 (EXP -> EXP isnull .)
    cadenaString    reduce using rule 198 (EXP -> EXP isnull .)
    id              reduce using rule 198 (EXP -> EXP isnull .)
    cadena          reduce using rule 198 (EXP -> EXP isnull .)
    in              reduce using rule 198 (EXP -> EXP isnull .)
    not             reduce using rule 198 (EXP -> EXP isnull .)
    like            reduce using rule 198 (EXP -> EXP isnull .)
    parc            reduce using rule 198 (EXP -> EXP isnull .)
    then            reduce using rule 198 (EXP -> EXP isnull .)
    end             reduce using rule 198 (EXP -> EXP isnull .)
    else            reduce using rule 198 (EXP -> EXP isnull .)
    when            reduce using rule 198 (EXP -> EXP isnull .)
    constraint      reduce using rule 198 (EXP -> EXP isnull .)
    unique          reduce using rule 198 (EXP -> EXP isnull .)
    check           reduce using rule 198 (EXP -> EXP isnull .)
    default         reduce using rule 198 (EXP -> EXP isnull .)
    null            reduce using rule 198 (EXP -> EXP isnull .)
    primary         reduce using rule 198 (EXP -> EXP isnull .)
    references      reduce using rule 198 (EXP -> EXP isnull .)
    asc             reduce using rule 198 (EXP -> EXP isnull .)
    desc            reduce using rule 198 (EXP -> EXP isnull .)


state 110

    (199) EXP -> EXP notnull .

    r_from          reduce using rule 199 (EXP -> EXP notnull .)
    coma            reduce using rule 199 (EXP -> EXP notnull .)
    where           reduce using rule 199 (EXP -> EXP notnull .)
    group           reduce using rule 199 (EXP -> EXP notnull .)
    having          reduce using rule 199 (EXP -> EXP notnull .)
    union           reduce using rule 199 (EXP -> EXP notnull .)
    intersect       reduce using rule 199 (EXP -> EXP notnull .)
    except          reduce using rule 199 (EXP -> EXP notnull .)
    order           reduce using rule 199 (EXP -> EXP notnull .)
    limit           reduce using rule 199 (EXP -> EXP notnull .)
    offset          reduce using rule 199 (EXP -> EXP notnull .)
    ptcoma          reduce using rule 199 (EXP -> EXP notnull .)
    mas             reduce using rule 199 (EXP -> EXP notnull .)
    menos           reduce using rule 199 (EXP -> EXP notnull .)
    multiplicacion  reduce using rule 199 (EXP -> EXP notnull .)
    division        reduce using rule 199 (EXP -> EXP notnull .)
    modulo          reduce using rule 199 (EXP -> EXP notnull .)
    elevado         reduce using rule 199 (EXP -> EXP notnull .)
    and             reduce using rule 199 (EXP -> EXP notnull .)
    or              reduce using rule 199 (EXP -> EXP notnull .)
    mayor           reduce using rule 199 (EXP -> EXP notnull .)
    menor           reduce using rule 199 (EXP -> EXP notnull .)
    mayor_igual     reduce using rule 199 (EXP -> EXP notnull .)
    menor_igual     reduce using rule 199 (EXP -> EXP notnull .)
    igual           reduce using rule 199 (EXP -> EXP notnull .)
    diferente1      reduce using rule 199 (EXP -> EXP notnull .)
    diferente2      reduce using rule 199 (EXP -> EXP notnull .)
    between         reduce using rule 199 (EXP -> EXP notnull .)
    is              reduce using rule 199 (EXP -> EXP notnull .)
    isnull          reduce using rule 199 (EXP -> EXP notnull .)
    notnull         reduce using rule 199 (EXP -> EXP notnull .)
    as              reduce using rule 199 (EXP -> EXP notnull .)
    cadenaString    reduce using rule 199 (EXP -> EXP notnull .)
    id              reduce using rule 199 (EXP -> EXP notnull .)
    cadena          reduce using rule 199 (EXP -> EXP notnull .)
    in              reduce using rule 199 (EXP -> EXP notnull .)
    not             reduce using rule 199 (EXP -> EXP notnull .)
    like            reduce using rule 199 (EXP -> EXP notnull .)
    parc            reduce using rule 199 (EXP -> EXP notnull .)
    then            reduce using rule 199 (EXP -> EXP notnull .)
    end             reduce using rule 199 (EXP -> EXP notnull .)
    else            reduce using rule 199 (EXP -> EXP notnull .)
    when            reduce using rule 199 (EXP -> EXP notnull .)
    constraint      reduce using rule 199 (EXP -> EXP notnull .)
    unique          reduce using rule 199 (EXP -> EXP notnull .)
    check           reduce using rule 199 (EXP -> EXP notnull .)
    default         reduce using rule 199 (EXP -> EXP notnull .)
    null            reduce using rule 199 (EXP -> EXP notnull .)
    primary         reduce using rule 199 (EXP -> EXP notnull .)
    references      reduce using rule 199 (EXP -> EXP notnull .)
    asc             reduce using rule 199 (EXP -> EXP notnull .)
    desc            reduce using rule 199 (EXP -> EXP notnull .)


state 111

    (206) EXP -> EXP as . cadenaString
    (208) EXP -> EXP as . id
    (210) EXP -> EXP as . cadena

    cadenaString    shift and go to state 185
    id              shift and go to state 186
    cadena          shift and go to state 187


state 112

    (207) EXP -> EXP cadenaString .

    r_from          reduce using rule 207 (EXP -> EXP cadenaString .)
    coma            reduce using rule 207 (EXP -> EXP cadenaString .)
    where           reduce using rule 207 (EXP -> EXP cadenaString .)
    group           reduce using rule 207 (EXP -> EXP cadenaString .)
    having          reduce using rule 207 (EXP -> EXP cadenaString .)
    union           reduce using rule 207 (EXP -> EXP cadenaString .)
    intersect       reduce using rule 207 (EXP -> EXP cadenaString .)
    except          reduce using rule 207 (EXP -> EXP cadenaString .)
    order           reduce using rule 207 (EXP -> EXP cadenaString .)
    limit           reduce using rule 207 (EXP -> EXP cadenaString .)
    offset          reduce using rule 207 (EXP -> EXP cadenaString .)
    ptcoma          reduce using rule 207 (EXP -> EXP cadenaString .)
    mas             reduce using rule 207 (EXP -> EXP cadenaString .)
    menos           reduce using rule 207 (EXP -> EXP cadenaString .)
    multiplicacion  reduce using rule 207 (EXP -> EXP cadenaString .)
    division        reduce using rule 207 (EXP -> EXP cadenaString .)
    modulo          reduce using rule 207 (EXP -> EXP cadenaString .)
    elevado         reduce using rule 207 (EXP -> EXP cadenaString .)
    and             reduce using rule 207 (EXP -> EXP cadenaString .)
    or              reduce using rule 207 (EXP -> EXP cadenaString .)
    mayor           reduce using rule 207 (EXP -> EXP cadenaString .)
    menor           reduce using rule 207 (EXP -> EXP cadenaString .)
    mayor_igual     reduce using rule 207 (EXP -> EXP cadenaString .)
    menor_igual     reduce using rule 207 (EXP -> EXP cadenaString .)
    igual           reduce using rule 207 (EXP -> EXP cadenaString .)
    diferente1      reduce using rule 207 (EXP -> EXP cadenaString .)
    diferente2      reduce using rule 207 (EXP -> EXP cadenaString .)
    between         reduce using rule 207 (EXP -> EXP cadenaString .)
    is              reduce using rule 207 (EXP -> EXP cadenaString .)
    isnull          reduce using rule 207 (EXP -> EXP cadenaString .)
    notnull         reduce using rule 207 (EXP -> EXP cadenaString .)
    as              reduce using rule 207 (EXP -> EXP cadenaString .)
    cadenaString    reduce using rule 207 (EXP -> EXP cadenaString .)
    id              reduce using rule 207 (EXP -> EXP cadenaString .)
    cadena          reduce using rule 207 (EXP -> EXP cadenaString .)
    in              reduce using rule 207 (EXP -> EXP cadenaString .)
    not             reduce using rule 207 (EXP -> EXP cadenaString .)
    like            reduce using rule 207 (EXP -> EXP cadenaString .)
    parc            reduce using rule 207 (EXP -> EXP cadenaString .)
    then            reduce using rule 207 (EXP -> EXP cadenaString .)
    end             reduce using rule 207 (EXP -> EXP cadenaString .)
    else            reduce using rule 207 (EXP -> EXP cadenaString .)
    when            reduce using rule 207 (EXP -> EXP cadenaString .)
    constraint      reduce using rule 207 (EXP -> EXP cadenaString .)
    unique          reduce using rule 207 (EXP -> EXP cadenaString .)
    check           reduce using rule 207 (EXP -> EXP cadenaString .)
    default         reduce using rule 207 (EXP -> EXP cadenaString .)
    null            reduce using rule 207 (EXP -> EXP cadenaString .)
    primary         reduce using rule 207 (EXP -> EXP cadenaString .)
    references      reduce using rule 207 (EXP -> EXP cadenaString .)
    asc             reduce using rule 207 (EXP -> EXP cadenaString .)
    desc            reduce using rule 207 (EXP -> EXP cadenaString .)


state 113

    (209) EXP -> EXP id .

    r_from          reduce using rule 209 (EXP -> EXP id .)
    coma            reduce using rule 209 (EXP -> EXP id .)
    where           reduce using rule 209 (EXP -> EXP id .)
    group           reduce using rule 209 (EXP -> EXP id .)
    having          reduce using rule 209 (EXP -> EXP id .)
    union           reduce using rule 209 (EXP -> EXP id .)
    intersect       reduce using rule 209 (EXP -> EXP id .)
    except          reduce using rule 209 (EXP -> EXP id .)
    order           reduce using rule 209 (EXP -> EXP id .)
    limit           reduce using rule 209 (EXP -> EXP id .)
    offset          reduce using rule 209 (EXP -> EXP id .)
    ptcoma          reduce using rule 209 (EXP -> EXP id .)
    mas             reduce using rule 209 (EXP -> EXP id .)
    menos           reduce using rule 209 (EXP -> EXP id .)
    multiplicacion  reduce using rule 209 (EXP -> EXP id .)
    division        reduce using rule 209 (EXP -> EXP id .)
    modulo          reduce using rule 209 (EXP -> EXP id .)
    elevado         reduce using rule 209 (EXP -> EXP id .)
    and             reduce using rule 209 (EXP -> EXP id .)
    or              reduce using rule 209 (EXP -> EXP id .)
    mayor           reduce using rule 209 (EXP -> EXP id .)
    menor           reduce using rule 209 (EXP -> EXP id .)
    mayor_igual     reduce using rule 209 (EXP -> EXP id .)
    menor_igual     reduce using rule 209 (EXP -> EXP id .)
    igual           reduce using rule 209 (EXP -> EXP id .)
    diferente1      reduce using rule 209 (EXP -> EXP id .)
    diferente2      reduce using rule 209 (EXP -> EXP id .)
    between         reduce using rule 209 (EXP -> EXP id .)
    is              reduce using rule 209 (EXP -> EXP id .)
    isnull          reduce using rule 209 (EXP -> EXP id .)
    notnull         reduce using rule 209 (EXP -> EXP id .)
    as              reduce using rule 209 (EXP -> EXP id .)
    cadenaString    reduce using rule 209 (EXP -> EXP id .)
    id              reduce using rule 209 (EXP -> EXP id .)
    cadena          reduce using rule 209 (EXP -> EXP id .)
    in              reduce using rule 209 (EXP -> EXP id .)
    not             reduce using rule 209 (EXP -> EXP id .)
    like            reduce using rule 209 (EXP -> EXP id .)
    parc            reduce using rule 209 (EXP -> EXP id .)
    then            reduce using rule 209 (EXP -> EXP id .)
    end             reduce using rule 209 (EXP -> EXP id .)
    else            reduce using rule 209 (EXP -> EXP id .)
    when            reduce using rule 209 (EXP -> EXP id .)
    constraint      reduce using rule 209 (EXP -> EXP id .)
    unique          reduce using rule 209 (EXP -> EXP id .)
    check           reduce using rule 209 (EXP -> EXP id .)
    default         reduce using rule 209 (EXP -> EXP id .)
    null            reduce using rule 209 (EXP -> EXP id .)
    primary         reduce using rule 209 (EXP -> EXP id .)
    references      reduce using rule 209 (EXP -> EXP id .)
    asc             reduce using rule 209 (EXP -> EXP id .)
    desc            reduce using rule 209 (EXP -> EXP id .)


state 114

    (211) EXP -> EXP cadena .

    r_from          reduce using rule 211 (EXP -> EXP cadena .)
    coma            reduce using rule 211 (EXP -> EXP cadena .)
    where           reduce using rule 211 (EXP -> EXP cadena .)
    group           reduce using rule 211 (EXP -> EXP cadena .)
    having          reduce using rule 211 (EXP -> EXP cadena .)
    union           reduce using rule 211 (EXP -> EXP cadena .)
    intersect       reduce using rule 211 (EXP -> EXP cadena .)
    except          reduce using rule 211 (EXP -> EXP cadena .)
    order           reduce using rule 211 (EXP -> EXP cadena .)
    limit           reduce using rule 211 (EXP -> EXP cadena .)
    offset          reduce using rule 211 (EXP -> EXP cadena .)
    ptcoma          reduce using rule 211 (EXP -> EXP cadena .)
    mas             reduce using rule 211 (EXP -> EXP cadena .)
    menos           reduce using rule 211 (EXP -> EXP cadena .)
    multiplicacion  reduce using rule 211 (EXP -> EXP cadena .)
    division        reduce using rule 211 (EXP -> EXP cadena .)
    modulo          reduce using rule 211 (EXP -> EXP cadena .)
    elevado         reduce using rule 211 (EXP -> EXP cadena .)
    and             reduce using rule 211 (EXP -> EXP cadena .)
    or              reduce using rule 211 (EXP -> EXP cadena .)
    mayor           reduce using rule 211 (EXP -> EXP cadena .)
    menor           reduce using rule 211 (EXP -> EXP cadena .)
    mayor_igual     reduce using rule 211 (EXP -> EXP cadena .)
    menor_igual     reduce using rule 211 (EXP -> EXP cadena .)
    igual           reduce using rule 211 (EXP -> EXP cadena .)
    diferente1      reduce using rule 211 (EXP -> EXP cadena .)
    diferente2      reduce using rule 211 (EXP -> EXP cadena .)
    between         reduce using rule 211 (EXP -> EXP cadena .)
    is              reduce using rule 211 (EXP -> EXP cadena .)
    isnull          reduce using rule 211 (EXP -> EXP cadena .)
    notnull         reduce using rule 211 (EXP -> EXP cadena .)
    as              reduce using rule 211 (EXP -> EXP cadena .)
    cadenaString    reduce using rule 211 (EXP -> EXP cadena .)
    id              reduce using rule 211 (EXP -> EXP cadena .)
    cadena          reduce using rule 211 (EXP -> EXP cadena .)
    in              reduce using rule 211 (EXP -> EXP cadena .)
    not             reduce using rule 211 (EXP -> EXP cadena .)
    like            reduce using rule 211 (EXP -> EXP cadena .)
    parc            reduce using rule 211 (EXP -> EXP cadena .)
    then            reduce using rule 211 (EXP -> EXP cadena .)
    end             reduce using rule 211 (EXP -> EXP cadena .)
    else            reduce using rule 211 (EXP -> EXP cadena .)
    when            reduce using rule 211 (EXP -> EXP cadena .)
    constraint      reduce using rule 211 (EXP -> EXP cadena .)
    unique          reduce using rule 211 (EXP -> EXP cadena .)
    check           reduce using rule 211 (EXP -> EXP cadena .)
    default         reduce using rule 211 (EXP -> EXP cadena .)
    null            reduce using rule 211 (EXP -> EXP cadena .)
    primary         reduce using rule 211 (EXP -> EXP cadena .)
    references      reduce using rule 211 (EXP -> EXP cadena .)
    asc             reduce using rule 211 (EXP -> EXP cadena .)
    desc            reduce using rule 211 (EXP -> EXP cadena .)


state 115

    (215) EXP -> EXP in . para EXP parc

    para            shift and go to state 188


state 116

    (222) EXP -> EXP like . cadena

    cadena          shift and go to state 189


state 117

    (212) EXP -> mas EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    r_from          reduce using rule 212 (EXP -> mas EXP .)
    coma            reduce using rule 212 (EXP -> mas EXP .)
    where           reduce using rule 212 (EXP -> mas EXP .)
    group           reduce using rule 212 (EXP -> mas EXP .)
    having          reduce using rule 212 (EXP -> mas EXP .)
    union           reduce using rule 212 (EXP -> mas EXP .)
    intersect       reduce using rule 212 (EXP -> mas EXP .)
    except          reduce using rule 212 (EXP -> mas EXP .)
    order           reduce using rule 212 (EXP -> mas EXP .)
    limit           reduce using rule 212 (EXP -> mas EXP .)
    offset          reduce using rule 212 (EXP -> mas EXP .)
    ptcoma          reduce using rule 212 (EXP -> mas EXP .)
    mas             reduce using rule 212 (EXP -> mas EXP .)
    menos           reduce using rule 212 (EXP -> mas EXP .)
    multiplicacion  reduce using rule 212 (EXP -> mas EXP .)
    division        reduce using rule 212 (EXP -> mas EXP .)
    modulo          reduce using rule 212 (EXP -> mas EXP .)
    elevado         reduce using rule 212 (EXP -> mas EXP .)
    and             reduce using rule 212 (EXP -> mas EXP .)
    or              reduce using rule 212 (EXP -> mas EXP .)
    mayor           reduce using rule 212 (EXP -> mas EXP .)
    menor           reduce using rule 212 (EXP -> mas EXP .)
    mayor_igual     reduce using rule 212 (EXP -> mas EXP .)
    menor_igual     reduce using rule 212 (EXP -> mas EXP .)
    igual           reduce using rule 212 (EXP -> mas EXP .)
    diferente1      reduce using rule 212 (EXP -> mas EXP .)
    diferente2      reduce using rule 212 (EXP -> mas EXP .)
    between         reduce using rule 212 (EXP -> mas EXP .)
    is              reduce using rule 212 (EXP -> mas EXP .)
    isnull          reduce using rule 212 (EXP -> mas EXP .)
    notnull         reduce using rule 212 (EXP -> mas EXP .)
    as              reduce using rule 212 (EXP -> mas EXP .)
    cadenaString    reduce using rule 212 (EXP -> mas EXP .)
    id              reduce using rule 212 (EXP -> mas EXP .)
    cadena          reduce using rule 212 (EXP -> mas EXP .)
    in              reduce using rule 212 (EXP -> mas EXP .)
    not             reduce using rule 212 (EXP -> mas EXP .)
    like            reduce using rule 212 (EXP -> mas EXP .)
    parc            reduce using rule 212 (EXP -> mas EXP .)
    then            reduce using rule 212 (EXP -> mas EXP .)
    end             reduce using rule 212 (EXP -> mas EXP .)
    else            reduce using rule 212 (EXP -> mas EXP .)
    when            reduce using rule 212 (EXP -> mas EXP .)
    constraint      reduce using rule 212 (EXP -> mas EXP .)
    unique          reduce using rule 212 (EXP -> mas EXP .)
    check           reduce using rule 212 (EXP -> mas EXP .)
    default         reduce using rule 212 (EXP -> mas EXP .)
    null            reduce using rule 212 (EXP -> mas EXP .)
    primary         reduce using rule 212 (EXP -> mas EXP .)
    references      reduce using rule 212 (EXP -> mas EXP .)
    asc             reduce using rule 212 (EXP -> mas EXP .)
    desc            reduce using rule 212 (EXP -> mas EXP .)

  ! mas             [ shift and go to state 91 ]
  ! menos           [ shift and go to state 92 ]
  ! multiplicacion  [ shift and go to state 93 ]
  ! division        [ shift and go to state 94 ]
  ! modulo          [ shift and go to state 95 ]
  ! elevado         [ shift and go to state 96 ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]
  ! as              [ shift and go to state 111 ]
  ! cadenaString    [ shift and go to state 112 ]
  ! id              [ shift and go to state 113 ]
  ! cadena          [ shift and go to state 114 ]
  ! in              [ shift and go to state 115 ]
  ! not             [ shift and go to state 108 ]
  ! like            [ shift and go to state 116 ]


state 118

    (213) EXP -> menos EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    r_from          reduce using rule 213 (EXP -> menos EXP .)
    coma            reduce using rule 213 (EXP -> menos EXP .)
    where           reduce using rule 213 (EXP -> menos EXP .)
    group           reduce using rule 213 (EXP -> menos EXP .)
    having          reduce using rule 213 (EXP -> menos EXP .)
    union           reduce using rule 213 (EXP -> menos EXP .)
    intersect       reduce using rule 213 (EXP -> menos EXP .)
    except          reduce using rule 213 (EXP -> menos EXP .)
    order           reduce using rule 213 (EXP -> menos EXP .)
    limit           reduce using rule 213 (EXP -> menos EXP .)
    offset          reduce using rule 213 (EXP -> menos EXP .)
    ptcoma          reduce using rule 213 (EXP -> menos EXP .)
    mas             reduce using rule 213 (EXP -> menos EXP .)
    menos           reduce using rule 213 (EXP -> menos EXP .)
    multiplicacion  reduce using rule 213 (EXP -> menos EXP .)
    division        reduce using rule 213 (EXP -> menos EXP .)
    modulo          reduce using rule 213 (EXP -> menos EXP .)
    elevado         reduce using rule 213 (EXP -> menos EXP .)
    and             reduce using rule 213 (EXP -> menos EXP .)
    or              reduce using rule 213 (EXP -> menos EXP .)
    mayor           reduce using rule 213 (EXP -> menos EXP .)
    menor           reduce using rule 213 (EXP -> menos EXP .)
    mayor_igual     reduce using rule 213 (EXP -> menos EXP .)
    menor_igual     reduce using rule 213 (EXP -> menos EXP .)
    igual           reduce using rule 213 (EXP -> menos EXP .)
    diferente1      reduce using rule 213 (EXP -> menos EXP .)
    diferente2      reduce using rule 213 (EXP -> menos EXP .)
    between         reduce using rule 213 (EXP -> menos EXP .)
    is              reduce using rule 213 (EXP -> menos EXP .)
    isnull          reduce using rule 213 (EXP -> menos EXP .)
    notnull         reduce using rule 213 (EXP -> menos EXP .)
    as              reduce using rule 213 (EXP -> menos EXP .)
    cadenaString    reduce using rule 213 (EXP -> menos EXP .)
    id              reduce using rule 213 (EXP -> menos EXP .)
    cadena          reduce using rule 213 (EXP -> menos EXP .)
    in              reduce using rule 213 (EXP -> menos EXP .)
    not             reduce using rule 213 (EXP -> menos EXP .)
    like            reduce using rule 213 (EXP -> menos EXP .)
    parc            reduce using rule 213 (EXP -> menos EXP .)
    then            reduce using rule 213 (EXP -> menos EXP .)
    end             reduce using rule 213 (EXP -> menos EXP .)
    else            reduce using rule 213 (EXP -> menos EXP .)
    when            reduce using rule 213 (EXP -> menos EXP .)
    constraint      reduce using rule 213 (EXP -> menos EXP .)
    unique          reduce using rule 213 (EXP -> menos EXP .)
    check           reduce using rule 213 (EXP -> menos EXP .)
    default         reduce using rule 213 (EXP -> menos EXP .)
    null            reduce using rule 213 (EXP -> menos EXP .)
    primary         reduce using rule 213 (EXP -> menos EXP .)
    references      reduce using rule 213 (EXP -> menos EXP .)
    asc             reduce using rule 213 (EXP -> menos EXP .)
    desc            reduce using rule 213 (EXP -> menos EXP .)

  ! mas             [ shift and go to state 91 ]
  ! menos           [ shift and go to state 92 ]
  ! multiplicacion  [ shift and go to state 93 ]
  ! division        [ shift and go to state 94 ]
  ! modulo          [ shift and go to state 95 ]
  ! elevado         [ shift and go to state 96 ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]
  ! as              [ shift and go to state 111 ]
  ! cadenaString    [ shift and go to state 112 ]
  ! id              [ shift and go to state 113 ]
  ! cadena          [ shift and go to state 114 ]
  ! in              [ shift and go to state 115 ]
  ! not             [ shift and go to state 108 ]
  ! like            [ shift and go to state 116 ]


state 119

    (214) EXP -> not EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    r_from          reduce using rule 214 (EXP -> not EXP .)
    coma            reduce using rule 214 (EXP -> not EXP .)
    where           reduce using rule 214 (EXP -> not EXP .)
    group           reduce using rule 214 (EXP -> not EXP .)
    having          reduce using rule 214 (EXP -> not EXP .)
    union           reduce using rule 214 (EXP -> not EXP .)
    intersect       reduce using rule 214 (EXP -> not EXP .)
    except          reduce using rule 214 (EXP -> not EXP .)
    order           reduce using rule 214 (EXP -> not EXP .)
    limit           reduce using rule 214 (EXP -> not EXP .)
    offset          reduce using rule 214 (EXP -> not EXP .)
    ptcoma          reduce using rule 214 (EXP -> not EXP .)
    and             reduce using rule 214 (EXP -> not EXP .)
    or              reduce using rule 214 (EXP -> not EXP .)
    between         reduce using rule 214 (EXP -> not EXP .)
    is              reduce using rule 214 (EXP -> not EXP .)
    isnull          reduce using rule 214 (EXP -> not EXP .)
    notnull         reduce using rule 214 (EXP -> not EXP .)
    as              reduce using rule 214 (EXP -> not EXP .)
    cadenaString    reduce using rule 214 (EXP -> not EXP .)
    id              reduce using rule 214 (EXP -> not EXP .)
    cadena          reduce using rule 214 (EXP -> not EXP .)
    in              reduce using rule 214 (EXP -> not EXP .)
    like            reduce using rule 214 (EXP -> not EXP .)
    parc            reduce using rule 214 (EXP -> not EXP .)
    then            reduce using rule 214 (EXP -> not EXP .)
    end             reduce using rule 214 (EXP -> not EXP .)
    else            reduce using rule 214 (EXP -> not EXP .)
    when            reduce using rule 214 (EXP -> not EXP .)
    constraint      reduce using rule 214 (EXP -> not EXP .)
    unique          reduce using rule 214 (EXP -> not EXP .)
    check           reduce using rule 214 (EXP -> not EXP .)
    default         reduce using rule 214 (EXP -> not EXP .)
    null            reduce using rule 214 (EXP -> not EXP .)
    primary         reduce using rule 214 (EXP -> not EXP .)
    references      reduce using rule 214 (EXP -> not EXP .)
    asc             reduce using rule 214 (EXP -> not EXP .)
    desc            reduce using rule 214 (EXP -> not EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105
    not             shift and go to state 108

  ! mas             [ reduce using rule 214 (EXP -> not EXP .) ]
  ! menos           [ reduce using rule 214 (EXP -> not EXP .) ]
  ! multiplicacion  [ reduce using rule 214 (EXP -> not EXP .) ]
  ! division        [ reduce using rule 214 (EXP -> not EXP .) ]
  ! modulo          [ reduce using rule 214 (EXP -> not EXP .) ]
  ! elevado         [ reduce using rule 214 (EXP -> not EXP .) ]
  ! mayor           [ reduce using rule 214 (EXP -> not EXP .) ]
  ! menor           [ reduce using rule 214 (EXP -> not EXP .) ]
  ! mayor_igual     [ reduce using rule 214 (EXP -> not EXP .) ]
  ! menor_igual     [ reduce using rule 214 (EXP -> not EXP .) ]
  ! igual           [ reduce using rule 214 (EXP -> not EXP .) ]
  ! diferente1      [ reduce using rule 214 (EXP -> not EXP .) ]
  ! diferente2      [ reduce using rule 214 (EXP -> not EXP .) ]
  ! not             [ reduce using rule 214 (EXP -> not EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]
  ! as              [ shift and go to state 111 ]
  ! cadenaString    [ shift and go to state 112 ]
  ! id              [ shift and go to state 113 ]
  ! cadena          [ shift and go to state 114 ]
  ! in              [ shift and go to state 115 ]
  ! like            [ shift and go to state 116 ]


state 120

    (227) EXP -> id para . LEXP parc
    (228) EXP -> id para . parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    parc            shift and go to state 191
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 190
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 121

    (246) EXP -> cadena as . TIPO
    (137) TIPO -> . interval cadena
    (138) TIPO -> . decimal para int coma int parc
    (139) TIPO -> . decimal para int parc
    (140) TIPO -> . decimal
    (141) TIPO -> . numeric para int coma int parc
    (142) TIPO -> . numeric para int parc
    (143) TIPO -> . numeric
    (144) TIPO -> . varchar para int parc
    (145) TIPO -> . timestamp para int parc
    (146) TIPO -> . character para int parc
    (147) TIPO -> . interval para int parc
    (148) TIPO -> . char para int parc
    (149) TIPO -> . time para int parc
    (150) TIPO -> . character varying para int parc
    (151) TIPO -> . timestamp para int parc without time zone
    (152) TIPO -> . timestamp para int parc with time zone
    (153) TIPO -> . time para int parc without time zone
    (154) TIPO -> . time para int parc with time zone
    (155) TIPO -> . interval para int parc cadena
    (156) TIPO -> . smallint
    (157) TIPO -> . integer
    (158) TIPO -> . r_int
    (159) TIPO -> . bigint
    (160) TIPO -> . real
    (161) TIPO -> . double precision
    (162) TIPO -> . money
    (163) TIPO -> . text
    (164) TIPO -> . timestamp
    (165) TIPO -> . date
    (166) TIPO -> . time
    (167) TIPO -> . interval
    (168) TIPO -> . boolean
    (169) TIPO -> . timestamp without time zone
    (170) TIPO -> . timestamp with time zone
    (171) TIPO -> . time without time zone
    (172) TIPO -> . time with time zone
    (173) TIPO -> . id

    interval        shift and go to state 193
    decimal         shift and go to state 194
    numeric         shift and go to state 195
    varchar         shift and go to state 196
    timestamp       shift and go to state 197
    character       shift and go to state 198
    char            shift and go to state 199
    time            shift and go to state 200
    smallint        shift and go to state 201
    integer         shift and go to state 202
    r_int           shift and go to state 203
    bigint          shift and go to state 204
    real            shift and go to state 205
    double          shift and go to state 206
    money           shift and go to state 207
    text            shift and go to state 208
    date            shift and go to state 209
    boolean         shift and go to state 210
    id              shift and go to state 211

    TIPO                           shift and go to state 192

state 122

    (225) EXP -> para EXP . parc
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    parc            shift and go to state 212
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    and             shift and go to state 97
    or              shift and go to state 98
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105
    between         shift and go to state 106
    is              shift and go to state 107
    isnull          shift and go to state 109
    notnull         shift and go to state 110
    as              shift and go to state 111
    cadenaString    shift and go to state 112
    id              shift and go to state 113
    cadena          shift and go to state 114
    in              shift and go to state 115
    not             shift and go to state 108
    like            shift and go to state 116


state 123

    (229) EXP -> any para . LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 213
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 124

    (230) EXP -> all para . LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 214
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 125

    (231) EXP -> some para . LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 215
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 126

    (232) EXP -> extract para . FIELDS r_from timestamp cadena parc
    (174) FIELDS -> . year
    (175) FIELDS -> . month
    (176) FIELDS -> . day
    (177) FIELDS -> . hour
    (178) FIELDS -> . minute
    (179) FIELDS -> . second

    year            shift and go to state 217
    month           shift and go to state 218
    day             shift and go to state 219
    hour            shift and go to state 220
    minute          shift and go to state 221
    second          shift and go to state 222

    FIELDS                         shift and go to state 216

state 127

    (244) EXP -> timestamp cadena .

    r_from          reduce using rule 244 (EXP -> timestamp cadena .)
    coma            reduce using rule 244 (EXP -> timestamp cadena .)
    where           reduce using rule 244 (EXP -> timestamp cadena .)
    group           reduce using rule 244 (EXP -> timestamp cadena .)
    having          reduce using rule 244 (EXP -> timestamp cadena .)
    union           reduce using rule 244 (EXP -> timestamp cadena .)
    intersect       reduce using rule 244 (EXP -> timestamp cadena .)
    except          reduce using rule 244 (EXP -> timestamp cadena .)
    order           reduce using rule 244 (EXP -> timestamp cadena .)
    limit           reduce using rule 244 (EXP -> timestamp cadena .)
    offset          reduce using rule 244 (EXP -> timestamp cadena .)
    ptcoma          reduce using rule 244 (EXP -> timestamp cadena .)
    mas             reduce using rule 244 (EXP -> timestamp cadena .)
    menos           reduce using rule 244 (EXP -> timestamp cadena .)
    multiplicacion  reduce using rule 244 (EXP -> timestamp cadena .)
    division        reduce using rule 244 (EXP -> timestamp cadena .)
    modulo          reduce using rule 244 (EXP -> timestamp cadena .)
    elevado         reduce using rule 244 (EXP -> timestamp cadena .)
    and             reduce using rule 244 (EXP -> timestamp cadena .)
    or              reduce using rule 244 (EXP -> timestamp cadena .)
    mayor           reduce using rule 244 (EXP -> timestamp cadena .)
    menor           reduce using rule 244 (EXP -> timestamp cadena .)
    mayor_igual     reduce using rule 244 (EXP -> timestamp cadena .)
    menor_igual     reduce using rule 244 (EXP -> timestamp cadena .)
    igual           reduce using rule 244 (EXP -> timestamp cadena .)
    diferente1      reduce using rule 244 (EXP -> timestamp cadena .)
    diferente2      reduce using rule 244 (EXP -> timestamp cadena .)
    between         reduce using rule 244 (EXP -> timestamp cadena .)
    is              reduce using rule 244 (EXP -> timestamp cadena .)
    isnull          reduce using rule 244 (EXP -> timestamp cadena .)
    notnull         reduce using rule 244 (EXP -> timestamp cadena .)
    as              reduce using rule 244 (EXP -> timestamp cadena .)
    cadenaString    reduce using rule 244 (EXP -> timestamp cadena .)
    id              reduce using rule 244 (EXP -> timestamp cadena .)
    cadena          reduce using rule 244 (EXP -> timestamp cadena .)
    in              reduce using rule 244 (EXP -> timestamp cadena .)
    not             reduce using rule 244 (EXP -> timestamp cadena .)
    like            reduce using rule 244 (EXP -> timestamp cadena .)
    parc            reduce using rule 244 (EXP -> timestamp cadena .)
    then            reduce using rule 244 (EXP -> timestamp cadena .)
    end             reduce using rule 244 (EXP -> timestamp cadena .)
    else            reduce using rule 244 (EXP -> timestamp cadena .)
    when            reduce using rule 244 (EXP -> timestamp cadena .)
    constraint      reduce using rule 244 (EXP -> timestamp cadena .)
    unique          reduce using rule 244 (EXP -> timestamp cadena .)
    check           reduce using rule 244 (EXP -> timestamp cadena .)
    default         reduce using rule 244 (EXP -> timestamp cadena .)
    null            reduce using rule 244 (EXP -> timestamp cadena .)
    primary         reduce using rule 244 (EXP -> timestamp cadena .)
    references      reduce using rule 244 (EXP -> timestamp cadena .)
    asc             reduce using rule 244 (EXP -> timestamp cadena .)
    desc            reduce using rule 244 (EXP -> timestamp cadena .)


state 128

    (245) EXP -> interval cadena .

    r_from          reduce using rule 245 (EXP -> interval cadena .)
    coma            reduce using rule 245 (EXP -> interval cadena .)
    where           reduce using rule 245 (EXP -> interval cadena .)
    group           reduce using rule 245 (EXP -> interval cadena .)
    having          reduce using rule 245 (EXP -> interval cadena .)
    union           reduce using rule 245 (EXP -> interval cadena .)
    intersect       reduce using rule 245 (EXP -> interval cadena .)
    except          reduce using rule 245 (EXP -> interval cadena .)
    order           reduce using rule 245 (EXP -> interval cadena .)
    limit           reduce using rule 245 (EXP -> interval cadena .)
    offset          reduce using rule 245 (EXP -> interval cadena .)
    ptcoma          reduce using rule 245 (EXP -> interval cadena .)
    mas             reduce using rule 245 (EXP -> interval cadena .)
    menos           reduce using rule 245 (EXP -> interval cadena .)
    multiplicacion  reduce using rule 245 (EXP -> interval cadena .)
    division        reduce using rule 245 (EXP -> interval cadena .)
    modulo          reduce using rule 245 (EXP -> interval cadena .)
    elevado         reduce using rule 245 (EXP -> interval cadena .)
    and             reduce using rule 245 (EXP -> interval cadena .)
    or              reduce using rule 245 (EXP -> interval cadena .)
    mayor           reduce using rule 245 (EXP -> interval cadena .)
    menor           reduce using rule 245 (EXP -> interval cadena .)
    mayor_igual     reduce using rule 245 (EXP -> interval cadena .)
    menor_igual     reduce using rule 245 (EXP -> interval cadena .)
    igual           reduce using rule 245 (EXP -> interval cadena .)
    diferente1      reduce using rule 245 (EXP -> interval cadena .)
    diferente2      reduce using rule 245 (EXP -> interval cadena .)
    between         reduce using rule 245 (EXP -> interval cadena .)
    is              reduce using rule 245 (EXP -> interval cadena .)
    isnull          reduce using rule 245 (EXP -> interval cadena .)
    notnull         reduce using rule 245 (EXP -> interval cadena .)
    as              reduce using rule 245 (EXP -> interval cadena .)
    cadenaString    reduce using rule 245 (EXP -> interval cadena .)
    id              reduce using rule 245 (EXP -> interval cadena .)
    cadena          reduce using rule 245 (EXP -> interval cadena .)
    in              reduce using rule 245 (EXP -> interval cadena .)
    not             reduce using rule 245 (EXP -> interval cadena .)
    like            reduce using rule 245 (EXP -> interval cadena .)
    parc            reduce using rule 245 (EXP -> interval cadena .)
    then            reduce using rule 245 (EXP -> interval cadena .)
    end             reduce using rule 245 (EXP -> interval cadena .)
    else            reduce using rule 245 (EXP -> interval cadena .)
    when            reduce using rule 245 (EXP -> interval cadena .)
    constraint      reduce using rule 245 (EXP -> interval cadena .)
    unique          reduce using rule 245 (EXP -> interval cadena .)
    check           reduce using rule 245 (EXP -> interval cadena .)
    default         reduce using rule 245 (EXP -> interval cadena .)
    null            reduce using rule 245 (EXP -> interval cadena .)
    primary         reduce using rule 245 (EXP -> interval cadena .)
    references      reduce using rule 245 (EXP -> interval cadena .)
    asc             reduce using rule 245 (EXP -> interval cadena .)
    desc            reduce using rule 245 (EXP -> interval cadena .)


state 129

    (67) CREATETABLE -> create table id . para LDEF parc ptcoma
    (68) CREATETABLE -> create table id . para LDEF parc HERENCIA ptcoma

    para            shift and go to state 223


state 130

    (98) CREATETYPE -> create type id . as enum para LEXP parc

    as              shift and go to state 224


state 131

    (50) CREATEDB -> create RD if . not exist id
    (51) CREATEDB -> create RD if . not exist id OPCCDB

    not             shift and go to state 225


state 132

    (52) CREATEDB -> create RD id .
    (53) CREATEDB -> create RD id . OPCCDB
    (54) OPCCDB -> . PROPIETARIO
    (55) OPCCDB -> . MODO
    (56) OPCCDB -> . PROPIETARIO MODO
    (59) PROPIETARIO -> . owner igual id
    (60) PROPIETARIO -> . owner igual cadena
    (61) PROPIETARIO -> . owner igual cadenaString
    (62) PROPIETARIO -> . owner id
    (63) PROPIETARIO -> . owner cadena
    (64) PROPIETARIO -> . owner cadenaString
    (65) MODO -> . mode igual int
    (66) MODO -> . mode int

    ptcoma          reduce using rule 52 (CREATEDB -> create RD id .)
    owner           shift and go to state 229
    mode            shift and go to state 230

    OPCCDB                         shift and go to state 226
    PROPIETARIO                    shift and go to state 227
    MODO                           shift and go to state 228

state 133

    (57) RD -> or replace . databases

    databases       shift and go to state 231


state 134

    (129) UPDATE -> update id set . LCAMPOS where LEXP
    (130) LCAMPOS -> . LCAMPOS coma id igual EXP
    (131) LCAMPOS -> . id igual EXP

    id              shift and go to state 232

    LCAMPOS                        shift and go to state 233

state 135

    (132) DELETE -> delete r_from EXP . WHERE
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena
    (110) WHERE -> . where EXP
    (111) WHERE -> . where EXIST
    (112) WHERE -> .

    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    and             shift and go to state 97
    or              shift and go to state 98
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105
    between         shift and go to state 106
    is              shift and go to state 107
    isnull          shift and go to state 109
    notnull         shift and go to state 110
    as              shift and go to state 111
    cadenaString    shift and go to state 112
    id              shift and go to state 113
    cadena          shift and go to state 114
    in              shift and go to state 115
    not             shift and go to state 108
    like            shift and go to state 116
    where           shift and go to state 90
    ptcoma          reduce using rule 112 (WHERE -> .)

    WHERE                          shift and go to state 234

state 136

    (29) ALTER -> alter databases id . rename to id
    (30) ALTER -> alter databases id . owner to id

    rename          shift and go to state 235
    owner           shift and go to state 236


state 137

    (31) ALTER -> alter table id . OP
    (32) OP -> . add column id TIPO
    (33) OP -> . add check para CONDCHECK parc
    (34) OP -> . add constraint id unique para id parc
    (35) OP -> . add foreign key para LEXP parc references id para LEXP parc
    (36) OP -> . add constraint id foreign key para LEXP parc references id para LEXP parc
    (37) OP -> . alter column id set not null
    (38) OP -> . alter column id set null
    (39) OP -> . drop constraint id
    (40) OP -> . drop column LEXP
    (41) OP -> . drop check id
    (42) OP -> . rename column id to id
    (43) OP -> . listaalc
    (44) listaalc -> . listaalc coma alc
    (45) listaalc -> . alc
    (46) alc -> . alter column id type TIPO

    add             shift and go to state 239
    alter           shift and go to state 237
    drop            shift and go to state 240
    rename          shift and go to state 241

    OP                             shift and go to state 238
    listaalc                       shift and go to state 242
    alc                            shift and go to state 243

state 138

    (25) DROP -> drop all para . parc

    parc            shift and go to state 244


state 139

    (26) DROP -> drop table id .

    ptcoma          reduce using rule 26 (DROP -> drop table id .)


state 140

    (27) DROP -> drop databases if . exist id

    exist           shift and go to state 245


state 141

    (28) DROP -> drop databases id .

    ptcoma          reduce using rule 28 (DROP -> drop databases id .)


state 142

    (23) INSERT -> insert into id . values para LEXP parc
    (24) INSERT -> insert into id . para LEXP parc values para LEXP parc

    values          shift and go to state 246
    para            shift and go to state 247


state 143

    (17) CASE -> case LISTAWHEN ELSE . end

    end             shift and go to state 248


state 144

    (18) CASE -> case LISTAWHEN end .

    use             reduce using rule 18 (CASE -> case LISTAWHEN end .)
    select          reduce using rule 18 (CASE -> case LISTAWHEN end .)
    create          reduce using rule 18 (CASE -> case LISTAWHEN end .)
    update          reduce using rule 18 (CASE -> case LISTAWHEN end .)
    delete          reduce using rule 18 (CASE -> case LISTAWHEN end .)
    alter           reduce using rule 18 (CASE -> case LISTAWHEN end .)
    drop            reduce using rule 18 (CASE -> case LISTAWHEN end .)
    insert          reduce using rule 18 (CASE -> case LISTAWHEN end .)
    case            reduce using rule 18 (CASE -> case LISTAWHEN end .)
    show            reduce using rule 18 (CASE -> case LISTAWHEN end .)
    $end            reduce using rule 18 (CASE -> case LISTAWHEN end .)
    r_from          reduce using rule 18 (CASE -> case LISTAWHEN end .)
    coma            reduce using rule 18 (CASE -> case LISTAWHEN end .)
    where           reduce using rule 18 (CASE -> case LISTAWHEN end .)
    group           reduce using rule 18 (CASE -> case LISTAWHEN end .)
    having          reduce using rule 18 (CASE -> case LISTAWHEN end .)
    union           reduce using rule 18 (CASE -> case LISTAWHEN end .)
    intersect       reduce using rule 18 (CASE -> case LISTAWHEN end .)
    except          reduce using rule 18 (CASE -> case LISTAWHEN end .)
    order           reduce using rule 18 (CASE -> case LISTAWHEN end .)
    limit           reduce using rule 18 (CASE -> case LISTAWHEN end .)
    offset          reduce using rule 18 (CASE -> case LISTAWHEN end .)
    ptcoma          reduce using rule 18 (CASE -> case LISTAWHEN end .)
    mas             reduce using rule 18 (CASE -> case LISTAWHEN end .)
    menos           reduce using rule 18 (CASE -> case LISTAWHEN end .)
    multiplicacion  reduce using rule 18 (CASE -> case LISTAWHEN end .)
    division        reduce using rule 18 (CASE -> case LISTAWHEN end .)
    modulo          reduce using rule 18 (CASE -> case LISTAWHEN end .)
    elevado         reduce using rule 18 (CASE -> case LISTAWHEN end .)
    and             reduce using rule 18 (CASE -> case LISTAWHEN end .)
    or              reduce using rule 18 (CASE -> case LISTAWHEN end .)
    mayor           reduce using rule 18 (CASE -> case LISTAWHEN end .)
    menor           reduce using rule 18 (CASE -> case LISTAWHEN end .)
    mayor_igual     reduce using rule 18 (CASE -> case LISTAWHEN end .)
    menor_igual     reduce using rule 18 (CASE -> case LISTAWHEN end .)
    igual           reduce using rule 18 (CASE -> case LISTAWHEN end .)
    diferente1      reduce using rule 18 (CASE -> case LISTAWHEN end .)
    diferente2      reduce using rule 18 (CASE -> case LISTAWHEN end .)
    between         reduce using rule 18 (CASE -> case LISTAWHEN end .)
    is              reduce using rule 18 (CASE -> case LISTAWHEN end .)
    isnull          reduce using rule 18 (CASE -> case LISTAWHEN end .)
    notnull         reduce using rule 18 (CASE -> case LISTAWHEN end .)
    as              reduce using rule 18 (CASE -> case LISTAWHEN end .)
    cadenaString    reduce using rule 18 (CASE -> case LISTAWHEN end .)
    id              reduce using rule 18 (CASE -> case LISTAWHEN end .)
    cadena          reduce using rule 18 (CASE -> case LISTAWHEN end .)
    in              reduce using rule 18 (CASE -> case LISTAWHEN end .)
    not             reduce using rule 18 (CASE -> case LISTAWHEN end .)
    like            reduce using rule 18 (CASE -> case LISTAWHEN end .)
    parc            reduce using rule 18 (CASE -> case LISTAWHEN end .)
    then            reduce using rule 18 (CASE -> case LISTAWHEN end .)
    end             reduce using rule 18 (CASE -> case LISTAWHEN end .)
    else            reduce using rule 18 (CASE -> case LISTAWHEN end .)
    when            reduce using rule 18 (CASE -> case LISTAWHEN end .)
    constraint      reduce using rule 18 (CASE -> case LISTAWHEN end .)
    unique          reduce using rule 18 (CASE -> case LISTAWHEN end .)
    check           reduce using rule 18 (CASE -> case LISTAWHEN end .)
    default         reduce using rule 18 (CASE -> case LISTAWHEN end .)
    null            reduce using rule 18 (CASE -> case LISTAWHEN end .)
    primary         reduce using rule 18 (CASE -> case LISTAWHEN end .)
    references      reduce using rule 18 (CASE -> case LISTAWHEN end .)
    asc             reduce using rule 18 (CASE -> case LISTAWHEN end .)
    desc            reduce using rule 18 (CASE -> case LISTAWHEN end .)


state 145

    (19) LISTAWHEN -> LISTAWHEN WHEN .

    end             reduce using rule 19 (LISTAWHEN -> LISTAWHEN WHEN .)
    else            reduce using rule 19 (LISTAWHEN -> LISTAWHEN WHEN .)
    when            reduce using rule 19 (LISTAWHEN -> LISTAWHEN WHEN .)


state 146

    (22) ELSE -> else . LEXP
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 249
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 147

    (21) WHEN -> when LEXP . then LEXP
    (135) LEXP -> LEXP . coma EXP

    then            shift and go to state 250
    coma            shift and go to state 89


state 148

    (48) SHOW -> show tables para . id parc

    id              shift and go to state 251


state 149

    (49) SHOW -> show collection para . parc

    parc            shift and go to state 252


state 150

    (99) SELECT -> select distinct LEXP r_from . LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 253
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 151

    (100) SELECT -> select LEXP r_from LEXP . WHERE GROUP HAVING COMBINING ORDER LIMIT
    (135) LEXP -> LEXP . coma EXP
    (110) WHERE -> . where EXP
    (111) WHERE -> . where EXIST
    (112) WHERE -> .

  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for where resolved as shift
    coma            shift and go to state 89
    where           shift and go to state 90
    r_from          reduce using rule 112 (WHERE -> .)
    group           reduce using rule 112 (WHERE -> .)
    having          reduce using rule 112 (WHERE -> .)
    union           reduce using rule 112 (WHERE -> .)
    intersect       reduce using rule 112 (WHERE -> .)
    except          reduce using rule 112 (WHERE -> .)
    order           reduce using rule 112 (WHERE -> .)
    limit           reduce using rule 112 (WHERE -> .)
    offset          reduce using rule 112 (WHERE -> .)
    ptcoma          reduce using rule 112 (WHERE -> .)
    mas             reduce using rule 112 (WHERE -> .)
    menos           reduce using rule 112 (WHERE -> .)
    multiplicacion  reduce using rule 112 (WHERE -> .)
    division        reduce using rule 112 (WHERE -> .)
    modulo          reduce using rule 112 (WHERE -> .)
    elevado         reduce using rule 112 (WHERE -> .)
    and             reduce using rule 112 (WHERE -> .)
    or              reduce using rule 112 (WHERE -> .)
    mayor           reduce using rule 112 (WHERE -> .)
    menor           reduce using rule 112 (WHERE -> .)
    mayor_igual     reduce using rule 112 (WHERE -> .)
    menor_igual     reduce using rule 112 (WHERE -> .)
    igual           reduce using rule 112 (WHERE -> .)
    diferente1      reduce using rule 112 (WHERE -> .)
    diferente2      reduce using rule 112 (WHERE -> .)
    between         reduce using rule 112 (WHERE -> .)
    is              reduce using rule 112 (WHERE -> .)
    isnull          reduce using rule 112 (WHERE -> .)
    notnull         reduce using rule 112 (WHERE -> .)
    as              reduce using rule 112 (WHERE -> .)
    cadenaString    reduce using rule 112 (WHERE -> .)
    id              reduce using rule 112 (WHERE -> .)
    cadena          reduce using rule 112 (WHERE -> .)
    in              reduce using rule 112 (WHERE -> .)
    not             reduce using rule 112 (WHERE -> .)
    like            reduce using rule 112 (WHERE -> .)
    parc            reduce using rule 112 (WHERE -> .)
    then            reduce using rule 112 (WHERE -> .)
    end             reduce using rule 112 (WHERE -> .)
    else            reduce using rule 112 (WHERE -> .)
    when            reduce using rule 112 (WHERE -> .)
    constraint      reduce using rule 112 (WHERE -> .)
    unique          reduce using rule 112 (WHERE -> .)
    check           reduce using rule 112 (WHERE -> .)
    default         reduce using rule 112 (WHERE -> .)
    null            reduce using rule 112 (WHERE -> .)
    primary         reduce using rule 112 (WHERE -> .)
    references      reduce using rule 112 (WHERE -> .)
    asc             reduce using rule 112 (WHERE -> .)
    desc            reduce using rule 112 (WHERE -> .)

  ! coma            [ reduce using rule 112 (WHERE -> .) ]
  ! where           [ reduce using rule 112 (WHERE -> .) ]

    WHERE                          shift and go to state 254

state 152

    (101) SELECT -> select LEXP WHERE GROUP . HAVING COMBINING ORDER LIMIT
    (122) HAVING -> . having EXP
    (123) HAVING -> .

  ! shift/reduce conflict for having resolved as shift
    having          shift and go to state 256
    r_from          reduce using rule 123 (HAVING -> .)
    coma            reduce using rule 123 (HAVING -> .)
    where           reduce using rule 123 (HAVING -> .)
    group           reduce using rule 123 (HAVING -> .)
    union           reduce using rule 123 (HAVING -> .)
    intersect       reduce using rule 123 (HAVING -> .)
    except          reduce using rule 123 (HAVING -> .)
    order           reduce using rule 123 (HAVING -> .)
    limit           reduce using rule 123 (HAVING -> .)
    offset          reduce using rule 123 (HAVING -> .)
    ptcoma          reduce using rule 123 (HAVING -> .)
    mas             reduce using rule 123 (HAVING -> .)
    menos           reduce using rule 123 (HAVING -> .)
    multiplicacion  reduce using rule 123 (HAVING -> .)
    division        reduce using rule 123 (HAVING -> .)
    modulo          reduce using rule 123 (HAVING -> .)
    elevado         reduce using rule 123 (HAVING -> .)
    and             reduce using rule 123 (HAVING -> .)
    or              reduce using rule 123 (HAVING -> .)
    mayor           reduce using rule 123 (HAVING -> .)
    menor           reduce using rule 123 (HAVING -> .)
    mayor_igual     reduce using rule 123 (HAVING -> .)
    menor_igual     reduce using rule 123 (HAVING -> .)
    igual           reduce using rule 123 (HAVING -> .)
    diferente1      reduce using rule 123 (HAVING -> .)
    diferente2      reduce using rule 123 (HAVING -> .)
    between         reduce using rule 123 (HAVING -> .)
    is              reduce using rule 123 (HAVING -> .)
    isnull          reduce using rule 123 (HAVING -> .)
    notnull         reduce using rule 123 (HAVING -> .)
    as              reduce using rule 123 (HAVING -> .)
    cadenaString    reduce using rule 123 (HAVING -> .)
    id              reduce using rule 123 (HAVING -> .)
    cadena          reduce using rule 123 (HAVING -> .)
    in              reduce using rule 123 (HAVING -> .)
    not             reduce using rule 123 (HAVING -> .)
    like            reduce using rule 123 (HAVING -> .)
    parc            reduce using rule 123 (HAVING -> .)
    then            reduce using rule 123 (HAVING -> .)
    end             reduce using rule 123 (HAVING -> .)
    else            reduce using rule 123 (HAVING -> .)
    when            reduce using rule 123 (HAVING -> .)
    constraint      reduce using rule 123 (HAVING -> .)
    unique          reduce using rule 123 (HAVING -> .)
    check           reduce using rule 123 (HAVING -> .)
    default         reduce using rule 123 (HAVING -> .)
    null            reduce using rule 123 (HAVING -> .)
    primary         reduce using rule 123 (HAVING -> .)
    references      reduce using rule 123 (HAVING -> .)
    asc             reduce using rule 123 (HAVING -> .)
    desc            reduce using rule 123 (HAVING -> .)

  ! having          [ reduce using rule 123 (HAVING -> .) ]

    HAVING                         shift and go to state 255

state 153

    (120) GROUP -> group . by LEXP

    by              shift and go to state 257


state 154

    (135) LEXP -> LEXP coma EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    r_from          reduce using rule 135 (LEXP -> LEXP coma EXP .)
    coma            reduce using rule 135 (LEXP -> LEXP coma EXP .)
    where           reduce using rule 135 (LEXP -> LEXP coma EXP .)
    group           reduce using rule 135 (LEXP -> LEXP coma EXP .)
    having          reduce using rule 135 (LEXP -> LEXP coma EXP .)
    union           reduce using rule 135 (LEXP -> LEXP coma EXP .)
    intersect       reduce using rule 135 (LEXP -> LEXP coma EXP .)
    except          reduce using rule 135 (LEXP -> LEXP coma EXP .)
    order           reduce using rule 135 (LEXP -> LEXP coma EXP .)
    limit           reduce using rule 135 (LEXP -> LEXP coma EXP .)
    offset          reduce using rule 135 (LEXP -> LEXP coma EXP .)
    ptcoma          reduce using rule 135 (LEXP -> LEXP coma EXP .)
    parc            reduce using rule 135 (LEXP -> LEXP coma EXP .)
    then            reduce using rule 135 (LEXP -> LEXP coma EXP .)
    end             reduce using rule 135 (LEXP -> LEXP coma EXP .)
    else            reduce using rule 135 (LEXP -> LEXP coma EXP .)
    when            reduce using rule 135 (LEXP -> LEXP coma EXP .)
    constraint      reduce using rule 135 (LEXP -> LEXP coma EXP .)
    unique          reduce using rule 135 (LEXP -> LEXP coma EXP .)
    check           reduce using rule 135 (LEXP -> LEXP coma EXP .)
    default         reduce using rule 135 (LEXP -> LEXP coma EXP .)
    null            reduce using rule 135 (LEXP -> LEXP coma EXP .)
    primary         reduce using rule 135 (LEXP -> LEXP coma EXP .)
    references      reduce using rule 135 (LEXP -> LEXP coma EXP .)
    asc             reduce using rule 135 (LEXP -> LEXP coma EXP .)
    desc            reduce using rule 135 (LEXP -> LEXP coma EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    and             shift and go to state 97
    or              shift and go to state 98
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105
    between         shift and go to state 106
    is              shift and go to state 107
    isnull          shift and go to state 109
    notnull         shift and go to state 110
    as              shift and go to state 111
    cadenaString    shift and go to state 112
    id              shift and go to state 113
    cadena          shift and go to state 114
    in              shift and go to state 115
    not             shift and go to state 108
    like            shift and go to state 116

  ! mas             [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! menos           [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! multiplicacion  [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! division        [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! modulo          [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! elevado         [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! and             [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! or              [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! mayor           [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! menor           [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! mayor_igual     [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! menor_igual     [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! igual           [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! diferente1      [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! diferente2      [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! between         [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! is              [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! isnull          [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! notnull         [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! as              [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! cadenaString    [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! id              [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! cadena          [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! in              [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! not             [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]
  ! like            [ reduce using rule 135 (LEXP -> LEXP coma EXP .) ]


state 155

    (110) WHERE -> where EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    r_from          reduce using rule 110 (WHERE -> where EXP .)
    coma            reduce using rule 110 (WHERE -> where EXP .)
    where           reduce using rule 110 (WHERE -> where EXP .)
    group           reduce using rule 110 (WHERE -> where EXP .)
    having          reduce using rule 110 (WHERE -> where EXP .)
    union           reduce using rule 110 (WHERE -> where EXP .)
    intersect       reduce using rule 110 (WHERE -> where EXP .)
    except          reduce using rule 110 (WHERE -> where EXP .)
    order           reduce using rule 110 (WHERE -> where EXP .)
    limit           reduce using rule 110 (WHERE -> where EXP .)
    offset          reduce using rule 110 (WHERE -> where EXP .)
    ptcoma          reduce using rule 110 (WHERE -> where EXP .)
    parc            reduce using rule 110 (WHERE -> where EXP .)
    then            reduce using rule 110 (WHERE -> where EXP .)
    end             reduce using rule 110 (WHERE -> where EXP .)
    else            reduce using rule 110 (WHERE -> where EXP .)
    when            reduce using rule 110 (WHERE -> where EXP .)
    constraint      reduce using rule 110 (WHERE -> where EXP .)
    unique          reduce using rule 110 (WHERE -> where EXP .)
    check           reduce using rule 110 (WHERE -> where EXP .)
    default         reduce using rule 110 (WHERE -> where EXP .)
    null            reduce using rule 110 (WHERE -> where EXP .)
    primary         reduce using rule 110 (WHERE -> where EXP .)
    references      reduce using rule 110 (WHERE -> where EXP .)
    asc             reduce using rule 110 (WHERE -> where EXP .)
    desc            reduce using rule 110 (WHERE -> where EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    and             shift and go to state 97
    or              shift and go to state 98
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105
    between         shift and go to state 106
    is              shift and go to state 107
    isnull          shift and go to state 109
    notnull         shift and go to state 110
    as              shift and go to state 111
    cadenaString    shift and go to state 112
    id              shift and go to state 113
    cadena          shift and go to state 114
    in              shift and go to state 115
    not             shift and go to state 108
    like            shift and go to state 116

  ! mas             [ reduce using rule 110 (WHERE -> where EXP .) ]
  ! menos           [ reduce using rule 110 (WHERE -> where EXP .) ]
  ! multiplicacion  [ reduce using rule 110 (WHERE -> where EXP .) ]
  ! division        [ reduce using rule 110 (WHERE -> where EXP .) ]
  ! modulo          [ reduce using rule 110 (WHERE -> where EXP .) ]
  ! elevado         [ reduce using rule 110 (WHERE -> where EXP .) ]
  ! and             [ reduce using rule 110 (WHERE -> where EXP .) ]
  ! or              [ reduce using rule 110 (WHERE -> where EXP .) ]
  ! mayor           [ reduce using rule 110 (WHERE -> where EXP .) ]
  ! menor           [ reduce using rule 110 (WHERE -> where EXP .) ]
  ! mayor_igual     [ reduce using rule 110 (WHERE -> where EXP .) ]
  ! menor_igual     [ reduce using rule 110 (WHERE -> where EXP .) ]
  ! igual           [ reduce using rule 110 (WHERE -> where EXP .) ]
  ! diferente1      [ reduce using rule 110 (WHERE -> where EXP .) ]
  ! diferente2      [ reduce using rule 110 (WHERE -> where EXP .) ]
  ! between         [ reduce using rule 110 (WHERE -> where EXP .) ]
  ! is              [ reduce using rule 110 (WHERE -> where EXP .) ]
  ! isnull          [ reduce using rule 110 (WHERE -> where EXP .) ]
  ! notnull         [ reduce using rule 110 (WHERE -> where EXP .) ]
  ! as              [ reduce using rule 110 (WHERE -> where EXP .) ]
  ! cadenaString    [ reduce using rule 110 (WHERE -> where EXP .) ]
  ! id              [ reduce using rule 110 (WHERE -> where EXP .) ]
  ! cadena          [ reduce using rule 110 (WHERE -> where EXP .) ]
  ! in              [ reduce using rule 110 (WHERE -> where EXP .) ]
  ! not             [ reduce using rule 110 (WHERE -> where EXP .) ]
  ! like            [ reduce using rule 110 (WHERE -> where EXP .) ]


state 156

    (111) WHERE -> where EXIST .

    r_from          reduce using rule 111 (WHERE -> where EXIST .)
    coma            reduce using rule 111 (WHERE -> where EXIST .)
    where           reduce using rule 111 (WHERE -> where EXIST .)
    group           reduce using rule 111 (WHERE -> where EXIST .)
    having          reduce using rule 111 (WHERE -> where EXIST .)
    union           reduce using rule 111 (WHERE -> where EXIST .)
    intersect       reduce using rule 111 (WHERE -> where EXIST .)
    except          reduce using rule 111 (WHERE -> where EXIST .)
    order           reduce using rule 111 (WHERE -> where EXIST .)
    limit           reduce using rule 111 (WHERE -> where EXIST .)
    offset          reduce using rule 111 (WHERE -> where EXIST .)
    ptcoma          reduce using rule 111 (WHERE -> where EXIST .)
    mas             reduce using rule 111 (WHERE -> where EXIST .)
    menos           reduce using rule 111 (WHERE -> where EXIST .)
    multiplicacion  reduce using rule 111 (WHERE -> where EXIST .)
    division        reduce using rule 111 (WHERE -> where EXIST .)
    modulo          reduce using rule 111 (WHERE -> where EXIST .)
    elevado         reduce using rule 111 (WHERE -> where EXIST .)
    and             reduce using rule 111 (WHERE -> where EXIST .)
    or              reduce using rule 111 (WHERE -> where EXIST .)
    mayor           reduce using rule 111 (WHERE -> where EXIST .)
    menor           reduce using rule 111 (WHERE -> where EXIST .)
    mayor_igual     reduce using rule 111 (WHERE -> where EXIST .)
    menor_igual     reduce using rule 111 (WHERE -> where EXIST .)
    igual           reduce using rule 111 (WHERE -> where EXIST .)
    diferente1      reduce using rule 111 (WHERE -> where EXIST .)
    diferente2      reduce using rule 111 (WHERE -> where EXIST .)
    between         reduce using rule 111 (WHERE -> where EXIST .)
    is              reduce using rule 111 (WHERE -> where EXIST .)
    isnull          reduce using rule 111 (WHERE -> where EXIST .)
    notnull         reduce using rule 111 (WHERE -> where EXIST .)
    as              reduce using rule 111 (WHERE -> where EXIST .)
    cadenaString    reduce using rule 111 (WHERE -> where EXIST .)
    id              reduce using rule 111 (WHERE -> where EXIST .)
    cadena          reduce using rule 111 (WHERE -> where EXIST .)
    in              reduce using rule 111 (WHERE -> where EXIST .)
    not             reduce using rule 111 (WHERE -> where EXIST .)
    like            reduce using rule 111 (WHERE -> where EXIST .)
    parc            reduce using rule 111 (WHERE -> where EXIST .)
    then            reduce using rule 111 (WHERE -> where EXIST .)
    end             reduce using rule 111 (WHERE -> where EXIST .)
    else            reduce using rule 111 (WHERE -> where EXIST .)
    when            reduce using rule 111 (WHERE -> where EXIST .)
    constraint      reduce using rule 111 (WHERE -> where EXIST .)
    unique          reduce using rule 111 (WHERE -> where EXIST .)
    check           reduce using rule 111 (WHERE -> where EXIST .)
    default         reduce using rule 111 (WHERE -> where EXIST .)
    null            reduce using rule 111 (WHERE -> where EXIST .)
    primary         reduce using rule 111 (WHERE -> where EXIST .)
    references      reduce using rule 111 (WHERE -> where EXIST .)
    asc             reduce using rule 111 (WHERE -> where EXIST .)
    desc            reduce using rule 111 (WHERE -> where EXIST .)


state 157

    (214) EXP -> not . EXP
    (134) EXIST -> not . exist para SELECT parc
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    exist           shift and go to state 258
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 119
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 158

    (133) EXIST -> exist . para SELECT parc

    para            shift and go to state 259


state 159

    (180) EXP -> EXP mas EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    r_from          reduce using rule 180 (EXP -> EXP mas EXP .)
    coma            reduce using rule 180 (EXP -> EXP mas EXP .)
    where           reduce using rule 180 (EXP -> EXP mas EXP .)
    group           reduce using rule 180 (EXP -> EXP mas EXP .)
    having          reduce using rule 180 (EXP -> EXP mas EXP .)
    union           reduce using rule 180 (EXP -> EXP mas EXP .)
    intersect       reduce using rule 180 (EXP -> EXP mas EXP .)
    except          reduce using rule 180 (EXP -> EXP mas EXP .)
    order           reduce using rule 180 (EXP -> EXP mas EXP .)
    limit           reduce using rule 180 (EXP -> EXP mas EXP .)
    offset          reduce using rule 180 (EXP -> EXP mas EXP .)
    ptcoma          reduce using rule 180 (EXP -> EXP mas EXP .)
    mas             reduce using rule 180 (EXP -> EXP mas EXP .)
    menos           reduce using rule 180 (EXP -> EXP mas EXP .)
    and             reduce using rule 180 (EXP -> EXP mas EXP .)
    or              reduce using rule 180 (EXP -> EXP mas EXP .)
    mayor           reduce using rule 180 (EXP -> EXP mas EXP .)
    menor           reduce using rule 180 (EXP -> EXP mas EXP .)
    mayor_igual     reduce using rule 180 (EXP -> EXP mas EXP .)
    menor_igual     reduce using rule 180 (EXP -> EXP mas EXP .)
    igual           reduce using rule 180 (EXP -> EXP mas EXP .)
    diferente1      reduce using rule 180 (EXP -> EXP mas EXP .)
    diferente2      reduce using rule 180 (EXP -> EXP mas EXP .)
    between         reduce using rule 180 (EXP -> EXP mas EXP .)
    is              reduce using rule 180 (EXP -> EXP mas EXP .)
    isnull          reduce using rule 180 (EXP -> EXP mas EXP .)
    notnull         reduce using rule 180 (EXP -> EXP mas EXP .)
    as              reduce using rule 180 (EXP -> EXP mas EXP .)
    cadenaString    reduce using rule 180 (EXP -> EXP mas EXP .)
    id              reduce using rule 180 (EXP -> EXP mas EXP .)
    cadena          reduce using rule 180 (EXP -> EXP mas EXP .)
    in              reduce using rule 180 (EXP -> EXP mas EXP .)
    not             reduce using rule 180 (EXP -> EXP mas EXP .)
    like            reduce using rule 180 (EXP -> EXP mas EXP .)
    parc            reduce using rule 180 (EXP -> EXP mas EXP .)
    then            reduce using rule 180 (EXP -> EXP mas EXP .)
    end             reduce using rule 180 (EXP -> EXP mas EXP .)
    else            reduce using rule 180 (EXP -> EXP mas EXP .)
    when            reduce using rule 180 (EXP -> EXP mas EXP .)
    constraint      reduce using rule 180 (EXP -> EXP mas EXP .)
    unique          reduce using rule 180 (EXP -> EXP mas EXP .)
    check           reduce using rule 180 (EXP -> EXP mas EXP .)
    default         reduce using rule 180 (EXP -> EXP mas EXP .)
    null            reduce using rule 180 (EXP -> EXP mas EXP .)
    primary         reduce using rule 180 (EXP -> EXP mas EXP .)
    references      reduce using rule 180 (EXP -> EXP mas EXP .)
    asc             reduce using rule 180 (EXP -> EXP mas EXP .)
    desc            reduce using rule 180 (EXP -> EXP mas EXP .)
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96

  ! multiplicacion  [ reduce using rule 180 (EXP -> EXP mas EXP .) ]
  ! division        [ reduce using rule 180 (EXP -> EXP mas EXP .) ]
  ! modulo          [ reduce using rule 180 (EXP -> EXP mas EXP .) ]
  ! elevado         [ reduce using rule 180 (EXP -> EXP mas EXP .) ]
  ! mas             [ shift and go to state 91 ]
  ! menos           [ shift and go to state 92 ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]
  ! as              [ shift and go to state 111 ]
  ! cadenaString    [ shift and go to state 112 ]
  ! id              [ shift and go to state 113 ]
  ! cadena          [ shift and go to state 114 ]
  ! in              [ shift and go to state 115 ]
  ! not             [ shift and go to state 108 ]
  ! like            [ shift and go to state 116 ]


state 160

    (181) EXP -> EXP menos EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    r_from          reduce using rule 181 (EXP -> EXP menos EXP .)
    coma            reduce using rule 181 (EXP -> EXP menos EXP .)
    where           reduce using rule 181 (EXP -> EXP menos EXP .)
    group           reduce using rule 181 (EXP -> EXP menos EXP .)
    having          reduce using rule 181 (EXP -> EXP menos EXP .)
    union           reduce using rule 181 (EXP -> EXP menos EXP .)
    intersect       reduce using rule 181 (EXP -> EXP menos EXP .)
    except          reduce using rule 181 (EXP -> EXP menos EXP .)
    order           reduce using rule 181 (EXP -> EXP menos EXP .)
    limit           reduce using rule 181 (EXP -> EXP menos EXP .)
    offset          reduce using rule 181 (EXP -> EXP menos EXP .)
    ptcoma          reduce using rule 181 (EXP -> EXP menos EXP .)
    mas             reduce using rule 181 (EXP -> EXP menos EXP .)
    menos           reduce using rule 181 (EXP -> EXP menos EXP .)
    and             reduce using rule 181 (EXP -> EXP menos EXP .)
    or              reduce using rule 181 (EXP -> EXP menos EXP .)
    mayor           reduce using rule 181 (EXP -> EXP menos EXP .)
    menor           reduce using rule 181 (EXP -> EXP menos EXP .)
    mayor_igual     reduce using rule 181 (EXP -> EXP menos EXP .)
    menor_igual     reduce using rule 181 (EXP -> EXP menos EXP .)
    igual           reduce using rule 181 (EXP -> EXP menos EXP .)
    diferente1      reduce using rule 181 (EXP -> EXP menos EXP .)
    diferente2      reduce using rule 181 (EXP -> EXP menos EXP .)
    between         reduce using rule 181 (EXP -> EXP menos EXP .)
    is              reduce using rule 181 (EXP -> EXP menos EXP .)
    isnull          reduce using rule 181 (EXP -> EXP menos EXP .)
    notnull         reduce using rule 181 (EXP -> EXP menos EXP .)
    as              reduce using rule 181 (EXP -> EXP menos EXP .)
    cadenaString    reduce using rule 181 (EXP -> EXP menos EXP .)
    id              reduce using rule 181 (EXP -> EXP menos EXP .)
    cadena          reduce using rule 181 (EXP -> EXP menos EXP .)
    in              reduce using rule 181 (EXP -> EXP menos EXP .)
    not             reduce using rule 181 (EXP -> EXP menos EXP .)
    like            reduce using rule 181 (EXP -> EXP menos EXP .)
    parc            reduce using rule 181 (EXP -> EXP menos EXP .)
    then            reduce using rule 181 (EXP -> EXP menos EXP .)
    end             reduce using rule 181 (EXP -> EXP menos EXP .)
    else            reduce using rule 181 (EXP -> EXP menos EXP .)
    when            reduce using rule 181 (EXP -> EXP menos EXP .)
    constraint      reduce using rule 181 (EXP -> EXP menos EXP .)
    unique          reduce using rule 181 (EXP -> EXP menos EXP .)
    check           reduce using rule 181 (EXP -> EXP menos EXP .)
    default         reduce using rule 181 (EXP -> EXP menos EXP .)
    null            reduce using rule 181 (EXP -> EXP menos EXP .)
    primary         reduce using rule 181 (EXP -> EXP menos EXP .)
    references      reduce using rule 181 (EXP -> EXP menos EXP .)
    asc             reduce using rule 181 (EXP -> EXP menos EXP .)
    desc            reduce using rule 181 (EXP -> EXP menos EXP .)
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96

  ! multiplicacion  [ reduce using rule 181 (EXP -> EXP menos EXP .) ]
  ! division        [ reduce using rule 181 (EXP -> EXP menos EXP .) ]
  ! modulo          [ reduce using rule 181 (EXP -> EXP menos EXP .) ]
  ! elevado         [ reduce using rule 181 (EXP -> EXP menos EXP .) ]
  ! mas             [ shift and go to state 91 ]
  ! menos           [ shift and go to state 92 ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]
  ! as              [ shift and go to state 111 ]
  ! cadenaString    [ shift and go to state 112 ]
  ! id              [ shift and go to state 113 ]
  ! cadena          [ shift and go to state 114 ]
  ! in              [ shift and go to state 115 ]
  ! not             [ shift and go to state 108 ]
  ! like            [ shift and go to state 116 ]


state 161

    (182) EXP -> EXP multiplicacion EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    r_from          reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    coma            reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    where           reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    group           reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    having          reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    union           reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    intersect       reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    except          reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    order           reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    limit           reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    offset          reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    ptcoma          reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    mas             reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    menos           reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    multiplicacion  reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    division        reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    modulo          reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    and             reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    or              reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    mayor           reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    menor           reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    mayor_igual     reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    menor_igual     reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    igual           reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    diferente1      reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    diferente2      reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    between         reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    is              reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    isnull          reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    notnull         reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    as              reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    cadenaString    reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    id              reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    cadena          reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    in              reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    not             reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    like            reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    parc            reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    then            reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    end             reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    else            reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    when            reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    constraint      reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    unique          reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    check           reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    default         reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    null            reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    primary         reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    references      reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    asc             reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    desc            reduce using rule 182 (EXP -> EXP multiplicacion EXP .)
    elevado         shift and go to state 96

  ! elevado         [ reduce using rule 182 (EXP -> EXP multiplicacion EXP .) ]
  ! mas             [ shift and go to state 91 ]
  ! menos           [ shift and go to state 92 ]
  ! multiplicacion  [ shift and go to state 93 ]
  ! division        [ shift and go to state 94 ]
  ! modulo          [ shift and go to state 95 ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]
  ! as              [ shift and go to state 111 ]
  ! cadenaString    [ shift and go to state 112 ]
  ! id              [ shift and go to state 113 ]
  ! cadena          [ shift and go to state 114 ]
  ! in              [ shift and go to state 115 ]
  ! not             [ shift and go to state 108 ]
  ! like            [ shift and go to state 116 ]


state 162

    (183) EXP -> EXP division EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    r_from          reduce using rule 183 (EXP -> EXP division EXP .)
    coma            reduce using rule 183 (EXP -> EXP division EXP .)
    where           reduce using rule 183 (EXP -> EXP division EXP .)
    group           reduce using rule 183 (EXP -> EXP division EXP .)
    having          reduce using rule 183 (EXP -> EXP division EXP .)
    union           reduce using rule 183 (EXP -> EXP division EXP .)
    intersect       reduce using rule 183 (EXP -> EXP division EXP .)
    except          reduce using rule 183 (EXP -> EXP division EXP .)
    order           reduce using rule 183 (EXP -> EXP division EXP .)
    limit           reduce using rule 183 (EXP -> EXP division EXP .)
    offset          reduce using rule 183 (EXP -> EXP division EXP .)
    ptcoma          reduce using rule 183 (EXP -> EXP division EXP .)
    mas             reduce using rule 183 (EXP -> EXP division EXP .)
    menos           reduce using rule 183 (EXP -> EXP division EXP .)
    multiplicacion  reduce using rule 183 (EXP -> EXP division EXP .)
    division        reduce using rule 183 (EXP -> EXP division EXP .)
    modulo          reduce using rule 183 (EXP -> EXP division EXP .)
    and             reduce using rule 183 (EXP -> EXP division EXP .)
    or              reduce using rule 183 (EXP -> EXP division EXP .)
    mayor           reduce using rule 183 (EXP -> EXP division EXP .)
    menor           reduce using rule 183 (EXP -> EXP division EXP .)
    mayor_igual     reduce using rule 183 (EXP -> EXP division EXP .)
    menor_igual     reduce using rule 183 (EXP -> EXP division EXP .)
    igual           reduce using rule 183 (EXP -> EXP division EXP .)
    diferente1      reduce using rule 183 (EXP -> EXP division EXP .)
    diferente2      reduce using rule 183 (EXP -> EXP division EXP .)
    between         reduce using rule 183 (EXP -> EXP division EXP .)
    is              reduce using rule 183 (EXP -> EXP division EXP .)
    isnull          reduce using rule 183 (EXP -> EXP division EXP .)
    notnull         reduce using rule 183 (EXP -> EXP division EXP .)
    as              reduce using rule 183 (EXP -> EXP division EXP .)
    cadenaString    reduce using rule 183 (EXP -> EXP division EXP .)
    id              reduce using rule 183 (EXP -> EXP division EXP .)
    cadena          reduce using rule 183 (EXP -> EXP division EXP .)
    in              reduce using rule 183 (EXP -> EXP division EXP .)
    not             reduce using rule 183 (EXP -> EXP division EXP .)
    like            reduce using rule 183 (EXP -> EXP division EXP .)
    parc            reduce using rule 183 (EXP -> EXP division EXP .)
    then            reduce using rule 183 (EXP -> EXP division EXP .)
    end             reduce using rule 183 (EXP -> EXP division EXP .)
    else            reduce using rule 183 (EXP -> EXP division EXP .)
    when            reduce using rule 183 (EXP -> EXP division EXP .)
    constraint      reduce using rule 183 (EXP -> EXP division EXP .)
    unique          reduce using rule 183 (EXP -> EXP division EXP .)
    check           reduce using rule 183 (EXP -> EXP division EXP .)
    default         reduce using rule 183 (EXP -> EXP division EXP .)
    null            reduce using rule 183 (EXP -> EXP division EXP .)
    primary         reduce using rule 183 (EXP -> EXP division EXP .)
    references      reduce using rule 183 (EXP -> EXP division EXP .)
    asc             reduce using rule 183 (EXP -> EXP division EXP .)
    desc            reduce using rule 183 (EXP -> EXP division EXP .)
    elevado         shift and go to state 96

  ! elevado         [ reduce using rule 183 (EXP -> EXP division EXP .) ]
  ! mas             [ shift and go to state 91 ]
  ! menos           [ shift and go to state 92 ]
  ! multiplicacion  [ shift and go to state 93 ]
  ! division        [ shift and go to state 94 ]
  ! modulo          [ shift and go to state 95 ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]
  ! as              [ shift and go to state 111 ]
  ! cadenaString    [ shift and go to state 112 ]
  ! id              [ shift and go to state 113 ]
  ! cadena          [ shift and go to state 114 ]
  ! in              [ shift and go to state 115 ]
  ! not             [ shift and go to state 108 ]
  ! like            [ shift and go to state 116 ]


state 163

    (184) EXP -> EXP modulo EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    r_from          reduce using rule 184 (EXP -> EXP modulo EXP .)
    coma            reduce using rule 184 (EXP -> EXP modulo EXP .)
    where           reduce using rule 184 (EXP -> EXP modulo EXP .)
    group           reduce using rule 184 (EXP -> EXP modulo EXP .)
    having          reduce using rule 184 (EXP -> EXP modulo EXP .)
    union           reduce using rule 184 (EXP -> EXP modulo EXP .)
    intersect       reduce using rule 184 (EXP -> EXP modulo EXP .)
    except          reduce using rule 184 (EXP -> EXP modulo EXP .)
    order           reduce using rule 184 (EXP -> EXP modulo EXP .)
    limit           reduce using rule 184 (EXP -> EXP modulo EXP .)
    offset          reduce using rule 184 (EXP -> EXP modulo EXP .)
    ptcoma          reduce using rule 184 (EXP -> EXP modulo EXP .)
    mas             reduce using rule 184 (EXP -> EXP modulo EXP .)
    menos           reduce using rule 184 (EXP -> EXP modulo EXP .)
    multiplicacion  reduce using rule 184 (EXP -> EXP modulo EXP .)
    division        reduce using rule 184 (EXP -> EXP modulo EXP .)
    modulo          reduce using rule 184 (EXP -> EXP modulo EXP .)
    and             reduce using rule 184 (EXP -> EXP modulo EXP .)
    or              reduce using rule 184 (EXP -> EXP modulo EXP .)
    mayor           reduce using rule 184 (EXP -> EXP modulo EXP .)
    menor           reduce using rule 184 (EXP -> EXP modulo EXP .)
    mayor_igual     reduce using rule 184 (EXP -> EXP modulo EXP .)
    menor_igual     reduce using rule 184 (EXP -> EXP modulo EXP .)
    igual           reduce using rule 184 (EXP -> EXP modulo EXP .)
    diferente1      reduce using rule 184 (EXP -> EXP modulo EXP .)
    diferente2      reduce using rule 184 (EXP -> EXP modulo EXP .)
    between         reduce using rule 184 (EXP -> EXP modulo EXP .)
    is              reduce using rule 184 (EXP -> EXP modulo EXP .)
    isnull          reduce using rule 184 (EXP -> EXP modulo EXP .)
    notnull         reduce using rule 184 (EXP -> EXP modulo EXP .)
    as              reduce using rule 184 (EXP -> EXP modulo EXP .)
    cadenaString    reduce using rule 184 (EXP -> EXP modulo EXP .)
    id              reduce using rule 184 (EXP -> EXP modulo EXP .)
    cadena          reduce using rule 184 (EXP -> EXP modulo EXP .)
    in              reduce using rule 184 (EXP -> EXP modulo EXP .)
    not             reduce using rule 184 (EXP -> EXP modulo EXP .)
    like            reduce using rule 184 (EXP -> EXP modulo EXP .)
    parc            reduce using rule 184 (EXP -> EXP modulo EXP .)
    then            reduce using rule 184 (EXP -> EXP modulo EXP .)
    end             reduce using rule 184 (EXP -> EXP modulo EXP .)
    else            reduce using rule 184 (EXP -> EXP modulo EXP .)
    when            reduce using rule 184 (EXP -> EXP modulo EXP .)
    constraint      reduce using rule 184 (EXP -> EXP modulo EXP .)
    unique          reduce using rule 184 (EXP -> EXP modulo EXP .)
    check           reduce using rule 184 (EXP -> EXP modulo EXP .)
    default         reduce using rule 184 (EXP -> EXP modulo EXP .)
    null            reduce using rule 184 (EXP -> EXP modulo EXP .)
    primary         reduce using rule 184 (EXP -> EXP modulo EXP .)
    references      reduce using rule 184 (EXP -> EXP modulo EXP .)
    asc             reduce using rule 184 (EXP -> EXP modulo EXP .)
    desc            reduce using rule 184 (EXP -> EXP modulo EXP .)
    elevado         shift and go to state 96

  ! elevado         [ reduce using rule 184 (EXP -> EXP modulo EXP .) ]
  ! mas             [ shift and go to state 91 ]
  ! menos           [ shift and go to state 92 ]
  ! multiplicacion  [ shift and go to state 93 ]
  ! division        [ shift and go to state 94 ]
  ! modulo          [ shift and go to state 95 ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]
  ! as              [ shift and go to state 111 ]
  ! cadenaString    [ shift and go to state 112 ]
  ! id              [ shift and go to state 113 ]
  ! cadena          [ shift and go to state 114 ]
  ! in              [ shift and go to state 115 ]
  ! not             [ shift and go to state 108 ]
  ! like            [ shift and go to state 116 ]


state 164

    (185) EXP -> EXP elevado EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    r_from          reduce using rule 185 (EXP -> EXP elevado EXP .)
    coma            reduce using rule 185 (EXP -> EXP elevado EXP .)
    where           reduce using rule 185 (EXP -> EXP elevado EXP .)
    group           reduce using rule 185 (EXP -> EXP elevado EXP .)
    having          reduce using rule 185 (EXP -> EXP elevado EXP .)
    union           reduce using rule 185 (EXP -> EXP elevado EXP .)
    intersect       reduce using rule 185 (EXP -> EXP elevado EXP .)
    except          reduce using rule 185 (EXP -> EXP elevado EXP .)
    order           reduce using rule 185 (EXP -> EXP elevado EXP .)
    limit           reduce using rule 185 (EXP -> EXP elevado EXP .)
    offset          reduce using rule 185 (EXP -> EXP elevado EXP .)
    ptcoma          reduce using rule 185 (EXP -> EXP elevado EXP .)
    mas             reduce using rule 185 (EXP -> EXP elevado EXP .)
    menos           reduce using rule 185 (EXP -> EXP elevado EXP .)
    multiplicacion  reduce using rule 185 (EXP -> EXP elevado EXP .)
    division        reduce using rule 185 (EXP -> EXP elevado EXP .)
    modulo          reduce using rule 185 (EXP -> EXP elevado EXP .)
    elevado         reduce using rule 185 (EXP -> EXP elevado EXP .)
    and             reduce using rule 185 (EXP -> EXP elevado EXP .)
    or              reduce using rule 185 (EXP -> EXP elevado EXP .)
    mayor           reduce using rule 185 (EXP -> EXP elevado EXP .)
    menor           reduce using rule 185 (EXP -> EXP elevado EXP .)
    mayor_igual     reduce using rule 185 (EXP -> EXP elevado EXP .)
    menor_igual     reduce using rule 185 (EXP -> EXP elevado EXP .)
    igual           reduce using rule 185 (EXP -> EXP elevado EXP .)
    diferente1      reduce using rule 185 (EXP -> EXP elevado EXP .)
    diferente2      reduce using rule 185 (EXP -> EXP elevado EXP .)
    between         reduce using rule 185 (EXP -> EXP elevado EXP .)
    is              reduce using rule 185 (EXP -> EXP elevado EXP .)
    isnull          reduce using rule 185 (EXP -> EXP elevado EXP .)
    notnull         reduce using rule 185 (EXP -> EXP elevado EXP .)
    as              reduce using rule 185 (EXP -> EXP elevado EXP .)
    cadenaString    reduce using rule 185 (EXP -> EXP elevado EXP .)
    id              reduce using rule 185 (EXP -> EXP elevado EXP .)
    cadena          reduce using rule 185 (EXP -> EXP elevado EXP .)
    in              reduce using rule 185 (EXP -> EXP elevado EXP .)
    not             reduce using rule 185 (EXP -> EXP elevado EXP .)
    like            reduce using rule 185 (EXP -> EXP elevado EXP .)
    parc            reduce using rule 185 (EXP -> EXP elevado EXP .)
    then            reduce using rule 185 (EXP -> EXP elevado EXP .)
    end             reduce using rule 185 (EXP -> EXP elevado EXP .)
    else            reduce using rule 185 (EXP -> EXP elevado EXP .)
    when            reduce using rule 185 (EXP -> EXP elevado EXP .)
    constraint      reduce using rule 185 (EXP -> EXP elevado EXP .)
    unique          reduce using rule 185 (EXP -> EXP elevado EXP .)
    check           reduce using rule 185 (EXP -> EXP elevado EXP .)
    default         reduce using rule 185 (EXP -> EXP elevado EXP .)
    null            reduce using rule 185 (EXP -> EXP elevado EXP .)
    primary         reduce using rule 185 (EXP -> EXP elevado EXP .)
    references      reduce using rule 185 (EXP -> EXP elevado EXP .)
    asc             reduce using rule 185 (EXP -> EXP elevado EXP .)
    desc            reduce using rule 185 (EXP -> EXP elevado EXP .)

  ! mas             [ shift and go to state 91 ]
  ! menos           [ shift and go to state 92 ]
  ! multiplicacion  [ shift and go to state 93 ]
  ! division        [ shift and go to state 94 ]
  ! modulo          [ shift and go to state 95 ]
  ! elevado         [ shift and go to state 96 ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]
  ! as              [ shift and go to state 111 ]
  ! cadenaString    [ shift and go to state 112 ]
  ! id              [ shift and go to state 113 ]
  ! cadena          [ shift and go to state 114 ]
  ! in              [ shift and go to state 115 ]
  ! not             [ shift and go to state 108 ]
  ! like            [ shift and go to state 116 ]


state 165

    (186) EXP -> EXP and EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    r_from          reduce using rule 186 (EXP -> EXP and EXP .)
    coma            reduce using rule 186 (EXP -> EXP and EXP .)
    where           reduce using rule 186 (EXP -> EXP and EXP .)
    group           reduce using rule 186 (EXP -> EXP and EXP .)
    having          reduce using rule 186 (EXP -> EXP and EXP .)
    union           reduce using rule 186 (EXP -> EXP and EXP .)
    intersect       reduce using rule 186 (EXP -> EXP and EXP .)
    except          reduce using rule 186 (EXP -> EXP and EXP .)
    order           reduce using rule 186 (EXP -> EXP and EXP .)
    limit           reduce using rule 186 (EXP -> EXP and EXP .)
    offset          reduce using rule 186 (EXP -> EXP and EXP .)
    ptcoma          reduce using rule 186 (EXP -> EXP and EXP .)
    and             reduce using rule 186 (EXP -> EXP and EXP .)
    or              reduce using rule 186 (EXP -> EXP and EXP .)
    between         reduce using rule 186 (EXP -> EXP and EXP .)
    is              reduce using rule 186 (EXP -> EXP and EXP .)
    isnull          reduce using rule 186 (EXP -> EXP and EXP .)
    notnull         reduce using rule 186 (EXP -> EXP and EXP .)
    as              reduce using rule 186 (EXP -> EXP and EXP .)
    cadenaString    reduce using rule 186 (EXP -> EXP and EXP .)
    id              reduce using rule 186 (EXP -> EXP and EXP .)
    cadena          reduce using rule 186 (EXP -> EXP and EXP .)
    in              reduce using rule 186 (EXP -> EXP and EXP .)
    like            reduce using rule 186 (EXP -> EXP and EXP .)
    parc            reduce using rule 186 (EXP -> EXP and EXP .)
    then            reduce using rule 186 (EXP -> EXP and EXP .)
    end             reduce using rule 186 (EXP -> EXP and EXP .)
    else            reduce using rule 186 (EXP -> EXP and EXP .)
    when            reduce using rule 186 (EXP -> EXP and EXP .)
    constraint      reduce using rule 186 (EXP -> EXP and EXP .)
    unique          reduce using rule 186 (EXP -> EXP and EXP .)
    check           reduce using rule 186 (EXP -> EXP and EXP .)
    default         reduce using rule 186 (EXP -> EXP and EXP .)
    null            reduce using rule 186 (EXP -> EXP and EXP .)
    primary         reduce using rule 186 (EXP -> EXP and EXP .)
    references      reduce using rule 186 (EXP -> EXP and EXP .)
    asc             reduce using rule 186 (EXP -> EXP and EXP .)
    desc            reduce using rule 186 (EXP -> EXP and EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105
    not             shift and go to state 108

  ! mas             [ reduce using rule 186 (EXP -> EXP and EXP .) ]
  ! menos           [ reduce using rule 186 (EXP -> EXP and EXP .) ]
  ! multiplicacion  [ reduce using rule 186 (EXP -> EXP and EXP .) ]
  ! division        [ reduce using rule 186 (EXP -> EXP and EXP .) ]
  ! modulo          [ reduce using rule 186 (EXP -> EXP and EXP .) ]
  ! elevado         [ reduce using rule 186 (EXP -> EXP and EXP .) ]
  ! mayor           [ reduce using rule 186 (EXP -> EXP and EXP .) ]
  ! menor           [ reduce using rule 186 (EXP -> EXP and EXP .) ]
  ! mayor_igual     [ reduce using rule 186 (EXP -> EXP and EXP .) ]
  ! menor_igual     [ reduce using rule 186 (EXP -> EXP and EXP .) ]
  ! igual           [ reduce using rule 186 (EXP -> EXP and EXP .) ]
  ! diferente1      [ reduce using rule 186 (EXP -> EXP and EXP .) ]
  ! diferente2      [ reduce using rule 186 (EXP -> EXP and EXP .) ]
  ! not             [ reduce using rule 186 (EXP -> EXP and EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]
  ! as              [ shift and go to state 111 ]
  ! cadenaString    [ shift and go to state 112 ]
  ! id              [ shift and go to state 113 ]
  ! cadena          [ shift and go to state 114 ]
  ! in              [ shift and go to state 115 ]
  ! like            [ shift and go to state 116 ]


state 166

    (187) EXP -> EXP or EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    r_from          reduce using rule 187 (EXP -> EXP or EXP .)
    coma            reduce using rule 187 (EXP -> EXP or EXP .)
    where           reduce using rule 187 (EXP -> EXP or EXP .)
    group           reduce using rule 187 (EXP -> EXP or EXP .)
    having          reduce using rule 187 (EXP -> EXP or EXP .)
    union           reduce using rule 187 (EXP -> EXP or EXP .)
    intersect       reduce using rule 187 (EXP -> EXP or EXP .)
    except          reduce using rule 187 (EXP -> EXP or EXP .)
    order           reduce using rule 187 (EXP -> EXP or EXP .)
    limit           reduce using rule 187 (EXP -> EXP or EXP .)
    offset          reduce using rule 187 (EXP -> EXP or EXP .)
    ptcoma          reduce using rule 187 (EXP -> EXP or EXP .)
    or              reduce using rule 187 (EXP -> EXP or EXP .)
    between         reduce using rule 187 (EXP -> EXP or EXP .)
    is              reduce using rule 187 (EXP -> EXP or EXP .)
    isnull          reduce using rule 187 (EXP -> EXP or EXP .)
    notnull         reduce using rule 187 (EXP -> EXP or EXP .)
    as              reduce using rule 187 (EXP -> EXP or EXP .)
    cadenaString    reduce using rule 187 (EXP -> EXP or EXP .)
    id              reduce using rule 187 (EXP -> EXP or EXP .)
    cadena          reduce using rule 187 (EXP -> EXP or EXP .)
    in              reduce using rule 187 (EXP -> EXP or EXP .)
    like            reduce using rule 187 (EXP -> EXP or EXP .)
    parc            reduce using rule 187 (EXP -> EXP or EXP .)
    then            reduce using rule 187 (EXP -> EXP or EXP .)
    end             reduce using rule 187 (EXP -> EXP or EXP .)
    else            reduce using rule 187 (EXP -> EXP or EXP .)
    when            reduce using rule 187 (EXP -> EXP or EXP .)
    constraint      reduce using rule 187 (EXP -> EXP or EXP .)
    unique          reduce using rule 187 (EXP -> EXP or EXP .)
    check           reduce using rule 187 (EXP -> EXP or EXP .)
    default         reduce using rule 187 (EXP -> EXP or EXP .)
    null            reduce using rule 187 (EXP -> EXP or EXP .)
    primary         reduce using rule 187 (EXP -> EXP or EXP .)
    references      reduce using rule 187 (EXP -> EXP or EXP .)
    asc             reduce using rule 187 (EXP -> EXP or EXP .)
    desc            reduce using rule 187 (EXP -> EXP or EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    and             shift and go to state 97
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105
    not             shift and go to state 108

  ! mas             [ reduce using rule 187 (EXP -> EXP or EXP .) ]
  ! menos           [ reduce using rule 187 (EXP -> EXP or EXP .) ]
  ! multiplicacion  [ reduce using rule 187 (EXP -> EXP or EXP .) ]
  ! division        [ reduce using rule 187 (EXP -> EXP or EXP .) ]
  ! modulo          [ reduce using rule 187 (EXP -> EXP or EXP .) ]
  ! elevado         [ reduce using rule 187 (EXP -> EXP or EXP .) ]
  ! and             [ reduce using rule 187 (EXP -> EXP or EXP .) ]
  ! mayor           [ reduce using rule 187 (EXP -> EXP or EXP .) ]
  ! menor           [ reduce using rule 187 (EXP -> EXP or EXP .) ]
  ! mayor_igual     [ reduce using rule 187 (EXP -> EXP or EXP .) ]
  ! menor_igual     [ reduce using rule 187 (EXP -> EXP or EXP .) ]
  ! igual           [ reduce using rule 187 (EXP -> EXP or EXP .) ]
  ! diferente1      [ reduce using rule 187 (EXP -> EXP or EXP .) ]
  ! diferente2      [ reduce using rule 187 (EXP -> EXP or EXP .) ]
  ! not             [ reduce using rule 187 (EXP -> EXP or EXP .) ]
  ! or              [ shift and go to state 98 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]
  ! as              [ shift and go to state 111 ]
  ! cadenaString    [ shift and go to state 112 ]
  ! id              [ shift and go to state 113 ]
  ! cadena          [ shift and go to state 114 ]
  ! in              [ shift and go to state 115 ]
  ! like            [ shift and go to state 116 ]


state 167

    (188) EXP -> EXP mayor EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    r_from          reduce using rule 188 (EXP -> EXP mayor EXP .)
    coma            reduce using rule 188 (EXP -> EXP mayor EXP .)
    where           reduce using rule 188 (EXP -> EXP mayor EXP .)
    group           reduce using rule 188 (EXP -> EXP mayor EXP .)
    having          reduce using rule 188 (EXP -> EXP mayor EXP .)
    union           reduce using rule 188 (EXP -> EXP mayor EXP .)
    intersect       reduce using rule 188 (EXP -> EXP mayor EXP .)
    except          reduce using rule 188 (EXP -> EXP mayor EXP .)
    order           reduce using rule 188 (EXP -> EXP mayor EXP .)
    limit           reduce using rule 188 (EXP -> EXP mayor EXP .)
    offset          reduce using rule 188 (EXP -> EXP mayor EXP .)
    ptcoma          reduce using rule 188 (EXP -> EXP mayor EXP .)
    and             reduce using rule 188 (EXP -> EXP mayor EXP .)
    or              reduce using rule 188 (EXP -> EXP mayor EXP .)
    mayor           reduce using rule 188 (EXP -> EXP mayor EXP .)
    menor           reduce using rule 188 (EXP -> EXP mayor EXP .)
    mayor_igual     reduce using rule 188 (EXP -> EXP mayor EXP .)
    menor_igual     reduce using rule 188 (EXP -> EXP mayor EXP .)
    igual           reduce using rule 188 (EXP -> EXP mayor EXP .)
    diferente1      reduce using rule 188 (EXP -> EXP mayor EXP .)
    diferente2      reduce using rule 188 (EXP -> EXP mayor EXP .)
    between         reduce using rule 188 (EXP -> EXP mayor EXP .)
    is              reduce using rule 188 (EXP -> EXP mayor EXP .)
    isnull          reduce using rule 188 (EXP -> EXP mayor EXP .)
    notnull         reduce using rule 188 (EXP -> EXP mayor EXP .)
    as              reduce using rule 188 (EXP -> EXP mayor EXP .)
    cadenaString    reduce using rule 188 (EXP -> EXP mayor EXP .)
    id              reduce using rule 188 (EXP -> EXP mayor EXP .)
    cadena          reduce using rule 188 (EXP -> EXP mayor EXP .)
    in              reduce using rule 188 (EXP -> EXP mayor EXP .)
    not             reduce using rule 188 (EXP -> EXP mayor EXP .)
    like            reduce using rule 188 (EXP -> EXP mayor EXP .)
    parc            reduce using rule 188 (EXP -> EXP mayor EXP .)
    then            reduce using rule 188 (EXP -> EXP mayor EXP .)
    end             reduce using rule 188 (EXP -> EXP mayor EXP .)
    else            reduce using rule 188 (EXP -> EXP mayor EXP .)
    when            reduce using rule 188 (EXP -> EXP mayor EXP .)
    constraint      reduce using rule 188 (EXP -> EXP mayor EXP .)
    unique          reduce using rule 188 (EXP -> EXP mayor EXP .)
    check           reduce using rule 188 (EXP -> EXP mayor EXP .)
    default         reduce using rule 188 (EXP -> EXP mayor EXP .)
    null            reduce using rule 188 (EXP -> EXP mayor EXP .)
    primary         reduce using rule 188 (EXP -> EXP mayor EXP .)
    references      reduce using rule 188 (EXP -> EXP mayor EXP .)
    asc             reduce using rule 188 (EXP -> EXP mayor EXP .)
    desc            reduce using rule 188 (EXP -> EXP mayor EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96

  ! mas             [ reduce using rule 188 (EXP -> EXP mayor EXP .) ]
  ! menos           [ reduce using rule 188 (EXP -> EXP mayor EXP .) ]
  ! multiplicacion  [ reduce using rule 188 (EXP -> EXP mayor EXP .) ]
  ! division        [ reduce using rule 188 (EXP -> EXP mayor EXP .) ]
  ! modulo          [ reduce using rule 188 (EXP -> EXP mayor EXP .) ]
  ! elevado         [ reduce using rule 188 (EXP -> EXP mayor EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]
  ! as              [ shift and go to state 111 ]
  ! cadenaString    [ shift and go to state 112 ]
  ! id              [ shift and go to state 113 ]
  ! cadena          [ shift and go to state 114 ]
  ! in              [ shift and go to state 115 ]
  ! not             [ shift and go to state 108 ]
  ! like            [ shift and go to state 116 ]


state 168

    (189) EXP -> EXP menor EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    r_from          reduce using rule 189 (EXP -> EXP menor EXP .)
    coma            reduce using rule 189 (EXP -> EXP menor EXP .)
    where           reduce using rule 189 (EXP -> EXP menor EXP .)
    group           reduce using rule 189 (EXP -> EXP menor EXP .)
    having          reduce using rule 189 (EXP -> EXP menor EXP .)
    union           reduce using rule 189 (EXP -> EXP menor EXP .)
    intersect       reduce using rule 189 (EXP -> EXP menor EXP .)
    except          reduce using rule 189 (EXP -> EXP menor EXP .)
    order           reduce using rule 189 (EXP -> EXP menor EXP .)
    limit           reduce using rule 189 (EXP -> EXP menor EXP .)
    offset          reduce using rule 189 (EXP -> EXP menor EXP .)
    ptcoma          reduce using rule 189 (EXP -> EXP menor EXP .)
    and             reduce using rule 189 (EXP -> EXP menor EXP .)
    or              reduce using rule 189 (EXP -> EXP menor EXP .)
    mayor           reduce using rule 189 (EXP -> EXP menor EXP .)
    menor           reduce using rule 189 (EXP -> EXP menor EXP .)
    mayor_igual     reduce using rule 189 (EXP -> EXP menor EXP .)
    menor_igual     reduce using rule 189 (EXP -> EXP menor EXP .)
    igual           reduce using rule 189 (EXP -> EXP menor EXP .)
    diferente1      reduce using rule 189 (EXP -> EXP menor EXP .)
    diferente2      reduce using rule 189 (EXP -> EXP menor EXP .)
    between         reduce using rule 189 (EXP -> EXP menor EXP .)
    is              reduce using rule 189 (EXP -> EXP menor EXP .)
    isnull          reduce using rule 189 (EXP -> EXP menor EXP .)
    notnull         reduce using rule 189 (EXP -> EXP menor EXP .)
    as              reduce using rule 189 (EXP -> EXP menor EXP .)
    cadenaString    reduce using rule 189 (EXP -> EXP menor EXP .)
    id              reduce using rule 189 (EXP -> EXP menor EXP .)
    cadena          reduce using rule 189 (EXP -> EXP menor EXP .)
    in              reduce using rule 189 (EXP -> EXP menor EXP .)
    not             reduce using rule 189 (EXP -> EXP menor EXP .)
    like            reduce using rule 189 (EXP -> EXP menor EXP .)
    parc            reduce using rule 189 (EXP -> EXP menor EXP .)
    then            reduce using rule 189 (EXP -> EXP menor EXP .)
    end             reduce using rule 189 (EXP -> EXP menor EXP .)
    else            reduce using rule 189 (EXP -> EXP menor EXP .)
    when            reduce using rule 189 (EXP -> EXP menor EXP .)
    constraint      reduce using rule 189 (EXP -> EXP menor EXP .)
    unique          reduce using rule 189 (EXP -> EXP menor EXP .)
    check           reduce using rule 189 (EXP -> EXP menor EXP .)
    default         reduce using rule 189 (EXP -> EXP menor EXP .)
    null            reduce using rule 189 (EXP -> EXP menor EXP .)
    primary         reduce using rule 189 (EXP -> EXP menor EXP .)
    references      reduce using rule 189 (EXP -> EXP menor EXP .)
    asc             reduce using rule 189 (EXP -> EXP menor EXP .)
    desc            reduce using rule 189 (EXP -> EXP menor EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96

  ! mas             [ reduce using rule 189 (EXP -> EXP menor EXP .) ]
  ! menos           [ reduce using rule 189 (EXP -> EXP menor EXP .) ]
  ! multiplicacion  [ reduce using rule 189 (EXP -> EXP menor EXP .) ]
  ! division        [ reduce using rule 189 (EXP -> EXP menor EXP .) ]
  ! modulo          [ reduce using rule 189 (EXP -> EXP menor EXP .) ]
  ! elevado         [ reduce using rule 189 (EXP -> EXP menor EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]
  ! as              [ shift and go to state 111 ]
  ! cadenaString    [ shift and go to state 112 ]
  ! id              [ shift and go to state 113 ]
  ! cadena          [ shift and go to state 114 ]
  ! in              [ shift and go to state 115 ]
  ! not             [ shift and go to state 108 ]
  ! like            [ shift and go to state 116 ]


state 169

    (190) EXP -> EXP mayor_igual EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    r_from          reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    coma            reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    where           reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    group           reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    having          reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    union           reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    intersect       reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    except          reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    order           reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    limit           reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    offset          reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    ptcoma          reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    and             reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    or              reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    mayor           reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    menor           reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    mayor_igual     reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    menor_igual     reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    igual           reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    diferente1      reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    diferente2      reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    between         reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    is              reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    isnull          reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    notnull         reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    as              reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    cadenaString    reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    id              reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    cadena          reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    in              reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    not             reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    like            reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    parc            reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    then            reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    end             reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    else            reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    when            reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    constraint      reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    unique          reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    check           reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    default         reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    null            reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    primary         reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    references      reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    asc             reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    desc            reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96

  ! mas             [ reduce using rule 190 (EXP -> EXP mayor_igual EXP .) ]
  ! menos           [ reduce using rule 190 (EXP -> EXP mayor_igual EXP .) ]
  ! multiplicacion  [ reduce using rule 190 (EXP -> EXP mayor_igual EXP .) ]
  ! division        [ reduce using rule 190 (EXP -> EXP mayor_igual EXP .) ]
  ! modulo          [ reduce using rule 190 (EXP -> EXP mayor_igual EXP .) ]
  ! elevado         [ reduce using rule 190 (EXP -> EXP mayor_igual EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]
  ! as              [ shift and go to state 111 ]
  ! cadenaString    [ shift and go to state 112 ]
  ! id              [ shift and go to state 113 ]
  ! cadena          [ shift and go to state 114 ]
  ! in              [ shift and go to state 115 ]
  ! not             [ shift and go to state 108 ]
  ! like            [ shift and go to state 116 ]


state 170

    (191) EXP -> EXP menor_igual EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    r_from          reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    coma            reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    where           reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    group           reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    having          reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    union           reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    intersect       reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    except          reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    order           reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    limit           reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    offset          reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    ptcoma          reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    and             reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    or              reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    mayor           reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    menor           reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    mayor_igual     reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    menor_igual     reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    igual           reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    diferente1      reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    diferente2      reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    between         reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    is              reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    isnull          reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    notnull         reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    as              reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    cadenaString    reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    id              reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    cadena          reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    in              reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    not             reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    like            reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    parc            reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    then            reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    end             reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    else            reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    when            reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    constraint      reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    unique          reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    check           reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    default         reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    null            reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    primary         reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    references      reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    asc             reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    desc            reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96

  ! mas             [ reduce using rule 191 (EXP -> EXP menor_igual EXP .) ]
  ! menos           [ reduce using rule 191 (EXP -> EXP menor_igual EXP .) ]
  ! multiplicacion  [ reduce using rule 191 (EXP -> EXP menor_igual EXP .) ]
  ! division        [ reduce using rule 191 (EXP -> EXP menor_igual EXP .) ]
  ! modulo          [ reduce using rule 191 (EXP -> EXP menor_igual EXP .) ]
  ! elevado         [ reduce using rule 191 (EXP -> EXP menor_igual EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]
  ! as              [ shift and go to state 111 ]
  ! cadenaString    [ shift and go to state 112 ]
  ! id              [ shift and go to state 113 ]
  ! cadena          [ shift and go to state 114 ]
  ! in              [ shift and go to state 115 ]
  ! not             [ shift and go to state 108 ]
  ! like            [ shift and go to state 116 ]


state 171

    (192) EXP -> EXP igual EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    r_from          reduce using rule 192 (EXP -> EXP igual EXP .)
    coma            reduce using rule 192 (EXP -> EXP igual EXP .)
    where           reduce using rule 192 (EXP -> EXP igual EXP .)
    group           reduce using rule 192 (EXP -> EXP igual EXP .)
    having          reduce using rule 192 (EXP -> EXP igual EXP .)
    union           reduce using rule 192 (EXP -> EXP igual EXP .)
    intersect       reduce using rule 192 (EXP -> EXP igual EXP .)
    except          reduce using rule 192 (EXP -> EXP igual EXP .)
    order           reduce using rule 192 (EXP -> EXP igual EXP .)
    limit           reduce using rule 192 (EXP -> EXP igual EXP .)
    offset          reduce using rule 192 (EXP -> EXP igual EXP .)
    ptcoma          reduce using rule 192 (EXP -> EXP igual EXP .)
    and             reduce using rule 192 (EXP -> EXP igual EXP .)
    or              reduce using rule 192 (EXP -> EXP igual EXP .)
    mayor           reduce using rule 192 (EXP -> EXP igual EXP .)
    menor           reduce using rule 192 (EXP -> EXP igual EXP .)
    mayor_igual     reduce using rule 192 (EXP -> EXP igual EXP .)
    menor_igual     reduce using rule 192 (EXP -> EXP igual EXP .)
    igual           reduce using rule 192 (EXP -> EXP igual EXP .)
    diferente1      reduce using rule 192 (EXP -> EXP igual EXP .)
    diferente2      reduce using rule 192 (EXP -> EXP igual EXP .)
    between         reduce using rule 192 (EXP -> EXP igual EXP .)
    is              reduce using rule 192 (EXP -> EXP igual EXP .)
    isnull          reduce using rule 192 (EXP -> EXP igual EXP .)
    notnull         reduce using rule 192 (EXP -> EXP igual EXP .)
    as              reduce using rule 192 (EXP -> EXP igual EXP .)
    cadenaString    reduce using rule 192 (EXP -> EXP igual EXP .)
    id              reduce using rule 192 (EXP -> EXP igual EXP .)
    cadena          reduce using rule 192 (EXP -> EXP igual EXP .)
    in              reduce using rule 192 (EXP -> EXP igual EXP .)
    not             reduce using rule 192 (EXP -> EXP igual EXP .)
    like            reduce using rule 192 (EXP -> EXP igual EXP .)
    parc            reduce using rule 192 (EXP -> EXP igual EXP .)
    then            reduce using rule 192 (EXP -> EXP igual EXP .)
    end             reduce using rule 192 (EXP -> EXP igual EXP .)
    else            reduce using rule 192 (EXP -> EXP igual EXP .)
    when            reduce using rule 192 (EXP -> EXP igual EXP .)
    constraint      reduce using rule 192 (EXP -> EXP igual EXP .)
    unique          reduce using rule 192 (EXP -> EXP igual EXP .)
    check           reduce using rule 192 (EXP -> EXP igual EXP .)
    default         reduce using rule 192 (EXP -> EXP igual EXP .)
    null            reduce using rule 192 (EXP -> EXP igual EXP .)
    primary         reduce using rule 192 (EXP -> EXP igual EXP .)
    references      reduce using rule 192 (EXP -> EXP igual EXP .)
    asc             reduce using rule 192 (EXP -> EXP igual EXP .)
    desc            reduce using rule 192 (EXP -> EXP igual EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96

  ! mas             [ reduce using rule 192 (EXP -> EXP igual EXP .) ]
  ! menos           [ reduce using rule 192 (EXP -> EXP igual EXP .) ]
  ! multiplicacion  [ reduce using rule 192 (EXP -> EXP igual EXP .) ]
  ! division        [ reduce using rule 192 (EXP -> EXP igual EXP .) ]
  ! modulo          [ reduce using rule 192 (EXP -> EXP igual EXP .) ]
  ! elevado         [ reduce using rule 192 (EXP -> EXP igual EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]
  ! as              [ shift and go to state 111 ]
  ! cadenaString    [ shift and go to state 112 ]
  ! id              [ shift and go to state 113 ]
  ! cadena          [ shift and go to state 114 ]
  ! in              [ shift and go to state 115 ]
  ! not             [ shift and go to state 108 ]
  ! like            [ shift and go to state 116 ]


state 172

    (193) EXP -> EXP diferente1 EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    r_from          reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    coma            reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    where           reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    group           reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    having          reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    union           reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    intersect       reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    except          reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    order           reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    limit           reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    offset          reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    ptcoma          reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    and             reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    or              reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    mayor           reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    menor           reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    mayor_igual     reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    menor_igual     reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    igual           reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    diferente1      reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    diferente2      reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    between         reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    is              reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    isnull          reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    notnull         reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    as              reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    cadenaString    reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    id              reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    cadena          reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    in              reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    not             reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    like            reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    parc            reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    then            reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    end             reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    else            reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    when            reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    constraint      reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    unique          reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    check           reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    default         reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    null            reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    primary         reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    references      reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    asc             reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    desc            reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96

  ! mas             [ reduce using rule 193 (EXP -> EXP diferente1 EXP .) ]
  ! menos           [ reduce using rule 193 (EXP -> EXP diferente1 EXP .) ]
  ! multiplicacion  [ reduce using rule 193 (EXP -> EXP diferente1 EXP .) ]
  ! division        [ reduce using rule 193 (EXP -> EXP diferente1 EXP .) ]
  ! modulo          [ reduce using rule 193 (EXP -> EXP diferente1 EXP .) ]
  ! elevado         [ reduce using rule 193 (EXP -> EXP diferente1 EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]
  ! as              [ shift and go to state 111 ]
  ! cadenaString    [ shift and go to state 112 ]
  ! id              [ shift and go to state 113 ]
  ! cadena          [ shift and go to state 114 ]
  ! in              [ shift and go to state 115 ]
  ! not             [ shift and go to state 108 ]
  ! like            [ shift and go to state 116 ]


state 173

    (194) EXP -> EXP diferente2 EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    r_from          reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    coma            reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    where           reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    group           reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    having          reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    union           reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    intersect       reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    except          reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    order           reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    limit           reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    offset          reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    ptcoma          reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    and             reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    or              reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    mayor           reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    menor           reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    mayor_igual     reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    menor_igual     reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    igual           reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    diferente1      reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    diferente2      reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    between         reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    is              reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    isnull          reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    notnull         reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    as              reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    cadenaString    reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    id              reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    cadena          reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    in              reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    not             reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    like            reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    parc            reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    then            reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    end             reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    else            reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    when            reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    constraint      reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    unique          reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    check           reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    default         reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    null            reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    primary         reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    references      reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    asc             reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    desc            reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96

  ! mas             [ reduce using rule 194 (EXP -> EXP diferente2 EXP .) ]
  ! menos           [ reduce using rule 194 (EXP -> EXP diferente2 EXP .) ]
  ! multiplicacion  [ reduce using rule 194 (EXP -> EXP diferente2 EXP .) ]
  ! division        [ reduce using rule 194 (EXP -> EXP diferente2 EXP .) ]
  ! modulo          [ reduce using rule 194 (EXP -> EXP diferente2 EXP .) ]
  ! elevado         [ reduce using rule 194 (EXP -> EXP diferente2 EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]
  ! as              [ shift and go to state 111 ]
  ! cadenaString    [ shift and go to state 112 ]
  ! id              [ shift and go to state 113 ]
  ! cadena          [ shift and go to state 114 ]
  ! in              [ shift and go to state 115 ]
  ! not             [ shift and go to state 108 ]
  ! like            [ shift and go to state 116 ]


state 174

    (195) EXP -> EXP between EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    r_from          reduce using rule 195 (EXP -> EXP between EXP .)
    coma            reduce using rule 195 (EXP -> EXP between EXP .)
    where           reduce using rule 195 (EXP -> EXP between EXP .)
    group           reduce using rule 195 (EXP -> EXP between EXP .)
    having          reduce using rule 195 (EXP -> EXP between EXP .)
    union           reduce using rule 195 (EXP -> EXP between EXP .)
    intersect       reduce using rule 195 (EXP -> EXP between EXP .)
    except          reduce using rule 195 (EXP -> EXP between EXP .)
    order           reduce using rule 195 (EXP -> EXP between EXP .)
    limit           reduce using rule 195 (EXP -> EXP between EXP .)
    offset          reduce using rule 195 (EXP -> EXP between EXP .)
    ptcoma          reduce using rule 195 (EXP -> EXP between EXP .)
    and             reduce using rule 195 (EXP -> EXP between EXP .)
    or              reduce using rule 195 (EXP -> EXP between EXP .)
    between         reduce using rule 195 (EXP -> EXP between EXP .)
    is              reduce using rule 195 (EXP -> EXP between EXP .)
    isnull          reduce using rule 195 (EXP -> EXP between EXP .)
    notnull         reduce using rule 195 (EXP -> EXP between EXP .)
    as              reduce using rule 195 (EXP -> EXP between EXP .)
    cadenaString    reduce using rule 195 (EXP -> EXP between EXP .)
    id              reduce using rule 195 (EXP -> EXP between EXP .)
    cadena          reduce using rule 195 (EXP -> EXP between EXP .)
    in              reduce using rule 195 (EXP -> EXP between EXP .)
    not             reduce using rule 195 (EXP -> EXP between EXP .)
    like            reduce using rule 195 (EXP -> EXP between EXP .)
    parc            reduce using rule 195 (EXP -> EXP between EXP .)
    then            reduce using rule 195 (EXP -> EXP between EXP .)
    end             reduce using rule 195 (EXP -> EXP between EXP .)
    else            reduce using rule 195 (EXP -> EXP between EXP .)
    when            reduce using rule 195 (EXP -> EXP between EXP .)
    constraint      reduce using rule 195 (EXP -> EXP between EXP .)
    unique          reduce using rule 195 (EXP -> EXP between EXP .)
    check           reduce using rule 195 (EXP -> EXP between EXP .)
    default         reduce using rule 195 (EXP -> EXP between EXP .)
    null            reduce using rule 195 (EXP -> EXP between EXP .)
    primary         reduce using rule 195 (EXP -> EXP between EXP .)
    references      reduce using rule 195 (EXP -> EXP between EXP .)
    asc             reduce using rule 195 (EXP -> EXP between EXP .)
    desc            reduce using rule 195 (EXP -> EXP between EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105

  ! mas             [ reduce using rule 195 (EXP -> EXP between EXP .) ]
  ! menos           [ reduce using rule 195 (EXP -> EXP between EXP .) ]
  ! multiplicacion  [ reduce using rule 195 (EXP -> EXP between EXP .) ]
  ! division        [ reduce using rule 195 (EXP -> EXP between EXP .) ]
  ! modulo          [ reduce using rule 195 (EXP -> EXP between EXP .) ]
  ! elevado         [ reduce using rule 195 (EXP -> EXP between EXP .) ]
  ! mayor           [ reduce using rule 195 (EXP -> EXP between EXP .) ]
  ! menor           [ reduce using rule 195 (EXP -> EXP between EXP .) ]
  ! mayor_igual     [ reduce using rule 195 (EXP -> EXP between EXP .) ]
  ! menor_igual     [ reduce using rule 195 (EXP -> EXP between EXP .) ]
  ! igual           [ reduce using rule 195 (EXP -> EXP between EXP .) ]
  ! diferente1      [ reduce using rule 195 (EXP -> EXP between EXP .) ]
  ! diferente2      [ reduce using rule 195 (EXP -> EXP between EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]
  ! as              [ shift and go to state 111 ]
  ! cadenaString    [ shift and go to state 112 ]
  ! id              [ shift and go to state 113 ]
  ! cadena          [ shift and go to state 114 ]
  ! in              [ shift and go to state 115 ]
  ! not             [ shift and go to state 108 ]
  ! like            [ shift and go to state 116 ]


state 175

    (218) EXP -> EXP between symetric . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 260
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 176

    (196) EXP -> EXP is not . null
    (201) EXP -> EXP is not . true
    (203) EXP -> EXP is not . false
    (205) EXP -> EXP is not . unknown
    (221) EXP -> EXP is not . distinct r_from EXP

    null            shift and go to state 261
    true            shift and go to state 262
    false           shift and go to state 263
    unknown         shift and go to state 264
    distinct        shift and go to state 265


state 177

    (197) EXP -> EXP is null .

    r_from          reduce using rule 197 (EXP -> EXP is null .)
    coma            reduce using rule 197 (EXP -> EXP is null .)
    where           reduce using rule 197 (EXP -> EXP is null .)
    group           reduce using rule 197 (EXP -> EXP is null .)
    having          reduce using rule 197 (EXP -> EXP is null .)
    union           reduce using rule 197 (EXP -> EXP is null .)
    intersect       reduce using rule 197 (EXP -> EXP is null .)
    except          reduce using rule 197 (EXP -> EXP is null .)
    order           reduce using rule 197 (EXP -> EXP is null .)
    limit           reduce using rule 197 (EXP -> EXP is null .)
    offset          reduce using rule 197 (EXP -> EXP is null .)
    ptcoma          reduce using rule 197 (EXP -> EXP is null .)
    mas             reduce using rule 197 (EXP -> EXP is null .)
    menos           reduce using rule 197 (EXP -> EXP is null .)
    multiplicacion  reduce using rule 197 (EXP -> EXP is null .)
    division        reduce using rule 197 (EXP -> EXP is null .)
    modulo          reduce using rule 197 (EXP -> EXP is null .)
    elevado         reduce using rule 197 (EXP -> EXP is null .)
    and             reduce using rule 197 (EXP -> EXP is null .)
    or              reduce using rule 197 (EXP -> EXP is null .)
    mayor           reduce using rule 197 (EXP -> EXP is null .)
    menor           reduce using rule 197 (EXP -> EXP is null .)
    mayor_igual     reduce using rule 197 (EXP -> EXP is null .)
    menor_igual     reduce using rule 197 (EXP -> EXP is null .)
    igual           reduce using rule 197 (EXP -> EXP is null .)
    diferente1      reduce using rule 197 (EXP -> EXP is null .)
    diferente2      reduce using rule 197 (EXP -> EXP is null .)
    between         reduce using rule 197 (EXP -> EXP is null .)
    is              reduce using rule 197 (EXP -> EXP is null .)
    isnull          reduce using rule 197 (EXP -> EXP is null .)
    notnull         reduce using rule 197 (EXP -> EXP is null .)
    as              reduce using rule 197 (EXP -> EXP is null .)
    cadenaString    reduce using rule 197 (EXP -> EXP is null .)
    id              reduce using rule 197 (EXP -> EXP is null .)
    cadena          reduce using rule 197 (EXP -> EXP is null .)
    in              reduce using rule 197 (EXP -> EXP is null .)
    not             reduce using rule 197 (EXP -> EXP is null .)
    like            reduce using rule 197 (EXP -> EXP is null .)
    parc            reduce using rule 197 (EXP -> EXP is null .)
    then            reduce using rule 197 (EXP -> EXP is null .)
    end             reduce using rule 197 (EXP -> EXP is null .)
    else            reduce using rule 197 (EXP -> EXP is null .)
    when            reduce using rule 197 (EXP -> EXP is null .)
    constraint      reduce using rule 197 (EXP -> EXP is null .)
    unique          reduce using rule 197 (EXP -> EXP is null .)
    check           reduce using rule 197 (EXP -> EXP is null .)
    default         reduce using rule 197 (EXP -> EXP is null .)
    null            reduce using rule 197 (EXP -> EXP is null .)
    primary         reduce using rule 197 (EXP -> EXP is null .)
    references      reduce using rule 197 (EXP -> EXP is null .)
    asc             reduce using rule 197 (EXP -> EXP is null .)
    desc            reduce using rule 197 (EXP -> EXP is null .)


state 178

    (200) EXP -> EXP is true .

    r_from          reduce using rule 200 (EXP -> EXP is true .)
    coma            reduce using rule 200 (EXP -> EXP is true .)
    where           reduce using rule 200 (EXP -> EXP is true .)
    group           reduce using rule 200 (EXP -> EXP is true .)
    having          reduce using rule 200 (EXP -> EXP is true .)
    union           reduce using rule 200 (EXP -> EXP is true .)
    intersect       reduce using rule 200 (EXP -> EXP is true .)
    except          reduce using rule 200 (EXP -> EXP is true .)
    order           reduce using rule 200 (EXP -> EXP is true .)
    limit           reduce using rule 200 (EXP -> EXP is true .)
    offset          reduce using rule 200 (EXP -> EXP is true .)
    ptcoma          reduce using rule 200 (EXP -> EXP is true .)
    mas             reduce using rule 200 (EXP -> EXP is true .)
    menos           reduce using rule 200 (EXP -> EXP is true .)
    multiplicacion  reduce using rule 200 (EXP -> EXP is true .)
    division        reduce using rule 200 (EXP -> EXP is true .)
    modulo          reduce using rule 200 (EXP -> EXP is true .)
    elevado         reduce using rule 200 (EXP -> EXP is true .)
    and             reduce using rule 200 (EXP -> EXP is true .)
    or              reduce using rule 200 (EXP -> EXP is true .)
    mayor           reduce using rule 200 (EXP -> EXP is true .)
    menor           reduce using rule 200 (EXP -> EXP is true .)
    mayor_igual     reduce using rule 200 (EXP -> EXP is true .)
    menor_igual     reduce using rule 200 (EXP -> EXP is true .)
    igual           reduce using rule 200 (EXP -> EXP is true .)
    diferente1      reduce using rule 200 (EXP -> EXP is true .)
    diferente2      reduce using rule 200 (EXP -> EXP is true .)
    between         reduce using rule 200 (EXP -> EXP is true .)
    is              reduce using rule 200 (EXP -> EXP is true .)
    isnull          reduce using rule 200 (EXP -> EXP is true .)
    notnull         reduce using rule 200 (EXP -> EXP is true .)
    as              reduce using rule 200 (EXP -> EXP is true .)
    cadenaString    reduce using rule 200 (EXP -> EXP is true .)
    id              reduce using rule 200 (EXP -> EXP is true .)
    cadena          reduce using rule 200 (EXP -> EXP is true .)
    in              reduce using rule 200 (EXP -> EXP is true .)
    not             reduce using rule 200 (EXP -> EXP is true .)
    like            reduce using rule 200 (EXP -> EXP is true .)
    parc            reduce using rule 200 (EXP -> EXP is true .)
    then            reduce using rule 200 (EXP -> EXP is true .)
    end             reduce using rule 200 (EXP -> EXP is true .)
    else            reduce using rule 200 (EXP -> EXP is true .)
    when            reduce using rule 200 (EXP -> EXP is true .)
    constraint      reduce using rule 200 (EXP -> EXP is true .)
    unique          reduce using rule 200 (EXP -> EXP is true .)
    check           reduce using rule 200 (EXP -> EXP is true .)
    default         reduce using rule 200 (EXP -> EXP is true .)
    null            reduce using rule 200 (EXP -> EXP is true .)
    primary         reduce using rule 200 (EXP -> EXP is true .)
    references      reduce using rule 200 (EXP -> EXP is true .)
    asc             reduce using rule 200 (EXP -> EXP is true .)
    desc            reduce using rule 200 (EXP -> EXP is true .)


state 179

    (202) EXP -> EXP is false .

    r_from          reduce using rule 202 (EXP -> EXP is false .)
    coma            reduce using rule 202 (EXP -> EXP is false .)
    where           reduce using rule 202 (EXP -> EXP is false .)
    group           reduce using rule 202 (EXP -> EXP is false .)
    having          reduce using rule 202 (EXP -> EXP is false .)
    union           reduce using rule 202 (EXP -> EXP is false .)
    intersect       reduce using rule 202 (EXP -> EXP is false .)
    except          reduce using rule 202 (EXP -> EXP is false .)
    order           reduce using rule 202 (EXP -> EXP is false .)
    limit           reduce using rule 202 (EXP -> EXP is false .)
    offset          reduce using rule 202 (EXP -> EXP is false .)
    ptcoma          reduce using rule 202 (EXP -> EXP is false .)
    mas             reduce using rule 202 (EXP -> EXP is false .)
    menos           reduce using rule 202 (EXP -> EXP is false .)
    multiplicacion  reduce using rule 202 (EXP -> EXP is false .)
    division        reduce using rule 202 (EXP -> EXP is false .)
    modulo          reduce using rule 202 (EXP -> EXP is false .)
    elevado         reduce using rule 202 (EXP -> EXP is false .)
    and             reduce using rule 202 (EXP -> EXP is false .)
    or              reduce using rule 202 (EXP -> EXP is false .)
    mayor           reduce using rule 202 (EXP -> EXP is false .)
    menor           reduce using rule 202 (EXP -> EXP is false .)
    mayor_igual     reduce using rule 202 (EXP -> EXP is false .)
    menor_igual     reduce using rule 202 (EXP -> EXP is false .)
    igual           reduce using rule 202 (EXP -> EXP is false .)
    diferente1      reduce using rule 202 (EXP -> EXP is false .)
    diferente2      reduce using rule 202 (EXP -> EXP is false .)
    between         reduce using rule 202 (EXP -> EXP is false .)
    is              reduce using rule 202 (EXP -> EXP is false .)
    isnull          reduce using rule 202 (EXP -> EXP is false .)
    notnull         reduce using rule 202 (EXP -> EXP is false .)
    as              reduce using rule 202 (EXP -> EXP is false .)
    cadenaString    reduce using rule 202 (EXP -> EXP is false .)
    id              reduce using rule 202 (EXP -> EXP is false .)
    cadena          reduce using rule 202 (EXP -> EXP is false .)
    in              reduce using rule 202 (EXP -> EXP is false .)
    not             reduce using rule 202 (EXP -> EXP is false .)
    like            reduce using rule 202 (EXP -> EXP is false .)
    parc            reduce using rule 202 (EXP -> EXP is false .)
    then            reduce using rule 202 (EXP -> EXP is false .)
    end             reduce using rule 202 (EXP -> EXP is false .)
    else            reduce using rule 202 (EXP -> EXP is false .)
    when            reduce using rule 202 (EXP -> EXP is false .)
    constraint      reduce using rule 202 (EXP -> EXP is false .)
    unique          reduce using rule 202 (EXP -> EXP is false .)
    check           reduce using rule 202 (EXP -> EXP is false .)
    default         reduce using rule 202 (EXP -> EXP is false .)
    null            reduce using rule 202 (EXP -> EXP is false .)
    primary         reduce using rule 202 (EXP -> EXP is false .)
    references      reduce using rule 202 (EXP -> EXP is false .)
    asc             reduce using rule 202 (EXP -> EXP is false .)
    desc            reduce using rule 202 (EXP -> EXP is false .)


state 180

    (204) EXP -> EXP is unknown .

    r_from          reduce using rule 204 (EXP -> EXP is unknown .)
    coma            reduce using rule 204 (EXP -> EXP is unknown .)
    where           reduce using rule 204 (EXP -> EXP is unknown .)
    group           reduce using rule 204 (EXP -> EXP is unknown .)
    having          reduce using rule 204 (EXP -> EXP is unknown .)
    union           reduce using rule 204 (EXP -> EXP is unknown .)
    intersect       reduce using rule 204 (EXP -> EXP is unknown .)
    except          reduce using rule 204 (EXP -> EXP is unknown .)
    order           reduce using rule 204 (EXP -> EXP is unknown .)
    limit           reduce using rule 204 (EXP -> EXP is unknown .)
    offset          reduce using rule 204 (EXP -> EXP is unknown .)
    ptcoma          reduce using rule 204 (EXP -> EXP is unknown .)
    mas             reduce using rule 204 (EXP -> EXP is unknown .)
    menos           reduce using rule 204 (EXP -> EXP is unknown .)
    multiplicacion  reduce using rule 204 (EXP -> EXP is unknown .)
    division        reduce using rule 204 (EXP -> EXP is unknown .)
    modulo          reduce using rule 204 (EXP -> EXP is unknown .)
    elevado         reduce using rule 204 (EXP -> EXP is unknown .)
    and             reduce using rule 204 (EXP -> EXP is unknown .)
    or              reduce using rule 204 (EXP -> EXP is unknown .)
    mayor           reduce using rule 204 (EXP -> EXP is unknown .)
    menor           reduce using rule 204 (EXP -> EXP is unknown .)
    mayor_igual     reduce using rule 204 (EXP -> EXP is unknown .)
    menor_igual     reduce using rule 204 (EXP -> EXP is unknown .)
    igual           reduce using rule 204 (EXP -> EXP is unknown .)
    diferente1      reduce using rule 204 (EXP -> EXP is unknown .)
    diferente2      reduce using rule 204 (EXP -> EXP is unknown .)
    between         reduce using rule 204 (EXP -> EXP is unknown .)
    is              reduce using rule 204 (EXP -> EXP is unknown .)
    isnull          reduce using rule 204 (EXP -> EXP is unknown .)
    notnull         reduce using rule 204 (EXP -> EXP is unknown .)
    as              reduce using rule 204 (EXP -> EXP is unknown .)
    cadenaString    reduce using rule 204 (EXP -> EXP is unknown .)
    id              reduce using rule 204 (EXP -> EXP is unknown .)
    cadena          reduce using rule 204 (EXP -> EXP is unknown .)
    in              reduce using rule 204 (EXP -> EXP is unknown .)
    not             reduce using rule 204 (EXP -> EXP is unknown .)
    like            reduce using rule 204 (EXP -> EXP is unknown .)
    parc            reduce using rule 204 (EXP -> EXP is unknown .)
    then            reduce using rule 204 (EXP -> EXP is unknown .)
    end             reduce using rule 204 (EXP -> EXP is unknown .)
    else            reduce using rule 204 (EXP -> EXP is unknown .)
    when            reduce using rule 204 (EXP -> EXP is unknown .)
    constraint      reduce using rule 204 (EXP -> EXP is unknown .)
    unique          reduce using rule 204 (EXP -> EXP is unknown .)
    check           reduce using rule 204 (EXP -> EXP is unknown .)
    default         reduce using rule 204 (EXP -> EXP is unknown .)
    null            reduce using rule 204 (EXP -> EXP is unknown .)
    primary         reduce using rule 204 (EXP -> EXP is unknown .)
    references      reduce using rule 204 (EXP -> EXP is unknown .)
    asc             reduce using rule 204 (EXP -> EXP is unknown .)
    desc            reduce using rule 204 (EXP -> EXP is unknown .)


state 181

    (220) EXP -> EXP is distinct . r_from EXP

    r_from          shift and go to state 266


state 182

    (216) EXP -> EXP not in . para EXP parc

    para            shift and go to state 267


state 183

    (217) EXP -> EXP not between . EXP
    (219) EXP -> EXP not between . symetric EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    symetric        shift and go to state 269
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 268
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 184

    (223) EXP -> EXP not like . cadena

    cadena          shift and go to state 270


state 185

    (206) EXP -> EXP as cadenaString .

    r_from          reduce using rule 206 (EXP -> EXP as cadenaString .)
    coma            reduce using rule 206 (EXP -> EXP as cadenaString .)
    where           reduce using rule 206 (EXP -> EXP as cadenaString .)
    group           reduce using rule 206 (EXP -> EXP as cadenaString .)
    having          reduce using rule 206 (EXP -> EXP as cadenaString .)
    union           reduce using rule 206 (EXP -> EXP as cadenaString .)
    intersect       reduce using rule 206 (EXP -> EXP as cadenaString .)
    except          reduce using rule 206 (EXP -> EXP as cadenaString .)
    order           reduce using rule 206 (EXP -> EXP as cadenaString .)
    limit           reduce using rule 206 (EXP -> EXP as cadenaString .)
    offset          reduce using rule 206 (EXP -> EXP as cadenaString .)
    ptcoma          reduce using rule 206 (EXP -> EXP as cadenaString .)
    mas             reduce using rule 206 (EXP -> EXP as cadenaString .)
    menos           reduce using rule 206 (EXP -> EXP as cadenaString .)
    multiplicacion  reduce using rule 206 (EXP -> EXP as cadenaString .)
    division        reduce using rule 206 (EXP -> EXP as cadenaString .)
    modulo          reduce using rule 206 (EXP -> EXP as cadenaString .)
    elevado         reduce using rule 206 (EXP -> EXP as cadenaString .)
    and             reduce using rule 206 (EXP -> EXP as cadenaString .)
    or              reduce using rule 206 (EXP -> EXP as cadenaString .)
    mayor           reduce using rule 206 (EXP -> EXP as cadenaString .)
    menor           reduce using rule 206 (EXP -> EXP as cadenaString .)
    mayor_igual     reduce using rule 206 (EXP -> EXP as cadenaString .)
    menor_igual     reduce using rule 206 (EXP -> EXP as cadenaString .)
    igual           reduce using rule 206 (EXP -> EXP as cadenaString .)
    diferente1      reduce using rule 206 (EXP -> EXP as cadenaString .)
    diferente2      reduce using rule 206 (EXP -> EXP as cadenaString .)
    between         reduce using rule 206 (EXP -> EXP as cadenaString .)
    is              reduce using rule 206 (EXP -> EXP as cadenaString .)
    isnull          reduce using rule 206 (EXP -> EXP as cadenaString .)
    notnull         reduce using rule 206 (EXP -> EXP as cadenaString .)
    as              reduce using rule 206 (EXP -> EXP as cadenaString .)
    cadenaString    reduce using rule 206 (EXP -> EXP as cadenaString .)
    id              reduce using rule 206 (EXP -> EXP as cadenaString .)
    cadena          reduce using rule 206 (EXP -> EXP as cadenaString .)
    in              reduce using rule 206 (EXP -> EXP as cadenaString .)
    not             reduce using rule 206 (EXP -> EXP as cadenaString .)
    like            reduce using rule 206 (EXP -> EXP as cadenaString .)
    parc            reduce using rule 206 (EXP -> EXP as cadenaString .)
    then            reduce using rule 206 (EXP -> EXP as cadenaString .)
    end             reduce using rule 206 (EXP -> EXP as cadenaString .)
    else            reduce using rule 206 (EXP -> EXP as cadenaString .)
    when            reduce using rule 206 (EXP -> EXP as cadenaString .)
    constraint      reduce using rule 206 (EXP -> EXP as cadenaString .)
    unique          reduce using rule 206 (EXP -> EXP as cadenaString .)
    check           reduce using rule 206 (EXP -> EXP as cadenaString .)
    default         reduce using rule 206 (EXP -> EXP as cadenaString .)
    null            reduce using rule 206 (EXP -> EXP as cadenaString .)
    primary         reduce using rule 206 (EXP -> EXP as cadenaString .)
    references      reduce using rule 206 (EXP -> EXP as cadenaString .)
    asc             reduce using rule 206 (EXP -> EXP as cadenaString .)
    desc            reduce using rule 206 (EXP -> EXP as cadenaString .)


state 186

    (208) EXP -> EXP as id .

    r_from          reduce using rule 208 (EXP -> EXP as id .)
    coma            reduce using rule 208 (EXP -> EXP as id .)
    where           reduce using rule 208 (EXP -> EXP as id .)
    group           reduce using rule 208 (EXP -> EXP as id .)
    having          reduce using rule 208 (EXP -> EXP as id .)
    union           reduce using rule 208 (EXP -> EXP as id .)
    intersect       reduce using rule 208 (EXP -> EXP as id .)
    except          reduce using rule 208 (EXP -> EXP as id .)
    order           reduce using rule 208 (EXP -> EXP as id .)
    limit           reduce using rule 208 (EXP -> EXP as id .)
    offset          reduce using rule 208 (EXP -> EXP as id .)
    ptcoma          reduce using rule 208 (EXP -> EXP as id .)
    mas             reduce using rule 208 (EXP -> EXP as id .)
    menos           reduce using rule 208 (EXP -> EXP as id .)
    multiplicacion  reduce using rule 208 (EXP -> EXP as id .)
    division        reduce using rule 208 (EXP -> EXP as id .)
    modulo          reduce using rule 208 (EXP -> EXP as id .)
    elevado         reduce using rule 208 (EXP -> EXP as id .)
    and             reduce using rule 208 (EXP -> EXP as id .)
    or              reduce using rule 208 (EXP -> EXP as id .)
    mayor           reduce using rule 208 (EXP -> EXP as id .)
    menor           reduce using rule 208 (EXP -> EXP as id .)
    mayor_igual     reduce using rule 208 (EXP -> EXP as id .)
    menor_igual     reduce using rule 208 (EXP -> EXP as id .)
    igual           reduce using rule 208 (EXP -> EXP as id .)
    diferente1      reduce using rule 208 (EXP -> EXP as id .)
    diferente2      reduce using rule 208 (EXP -> EXP as id .)
    between         reduce using rule 208 (EXP -> EXP as id .)
    is              reduce using rule 208 (EXP -> EXP as id .)
    isnull          reduce using rule 208 (EXP -> EXP as id .)
    notnull         reduce using rule 208 (EXP -> EXP as id .)
    as              reduce using rule 208 (EXP -> EXP as id .)
    cadenaString    reduce using rule 208 (EXP -> EXP as id .)
    id              reduce using rule 208 (EXP -> EXP as id .)
    cadena          reduce using rule 208 (EXP -> EXP as id .)
    in              reduce using rule 208 (EXP -> EXP as id .)
    not             reduce using rule 208 (EXP -> EXP as id .)
    like            reduce using rule 208 (EXP -> EXP as id .)
    parc            reduce using rule 208 (EXP -> EXP as id .)
    then            reduce using rule 208 (EXP -> EXP as id .)
    end             reduce using rule 208 (EXP -> EXP as id .)
    else            reduce using rule 208 (EXP -> EXP as id .)
    when            reduce using rule 208 (EXP -> EXP as id .)
    constraint      reduce using rule 208 (EXP -> EXP as id .)
    unique          reduce using rule 208 (EXP -> EXP as id .)
    check           reduce using rule 208 (EXP -> EXP as id .)
    default         reduce using rule 208 (EXP -> EXP as id .)
    null            reduce using rule 208 (EXP -> EXP as id .)
    primary         reduce using rule 208 (EXP -> EXP as id .)
    references      reduce using rule 208 (EXP -> EXP as id .)
    asc             reduce using rule 208 (EXP -> EXP as id .)
    desc            reduce using rule 208 (EXP -> EXP as id .)


state 187

    (210) EXP -> EXP as cadena .

    r_from          reduce using rule 210 (EXP -> EXP as cadena .)
    coma            reduce using rule 210 (EXP -> EXP as cadena .)
    where           reduce using rule 210 (EXP -> EXP as cadena .)
    group           reduce using rule 210 (EXP -> EXP as cadena .)
    having          reduce using rule 210 (EXP -> EXP as cadena .)
    union           reduce using rule 210 (EXP -> EXP as cadena .)
    intersect       reduce using rule 210 (EXP -> EXP as cadena .)
    except          reduce using rule 210 (EXP -> EXP as cadena .)
    order           reduce using rule 210 (EXP -> EXP as cadena .)
    limit           reduce using rule 210 (EXP -> EXP as cadena .)
    offset          reduce using rule 210 (EXP -> EXP as cadena .)
    ptcoma          reduce using rule 210 (EXP -> EXP as cadena .)
    mas             reduce using rule 210 (EXP -> EXP as cadena .)
    menos           reduce using rule 210 (EXP -> EXP as cadena .)
    multiplicacion  reduce using rule 210 (EXP -> EXP as cadena .)
    division        reduce using rule 210 (EXP -> EXP as cadena .)
    modulo          reduce using rule 210 (EXP -> EXP as cadena .)
    elevado         reduce using rule 210 (EXP -> EXP as cadena .)
    and             reduce using rule 210 (EXP -> EXP as cadena .)
    or              reduce using rule 210 (EXP -> EXP as cadena .)
    mayor           reduce using rule 210 (EXP -> EXP as cadena .)
    menor           reduce using rule 210 (EXP -> EXP as cadena .)
    mayor_igual     reduce using rule 210 (EXP -> EXP as cadena .)
    menor_igual     reduce using rule 210 (EXP -> EXP as cadena .)
    igual           reduce using rule 210 (EXP -> EXP as cadena .)
    diferente1      reduce using rule 210 (EXP -> EXP as cadena .)
    diferente2      reduce using rule 210 (EXP -> EXP as cadena .)
    between         reduce using rule 210 (EXP -> EXP as cadena .)
    is              reduce using rule 210 (EXP -> EXP as cadena .)
    isnull          reduce using rule 210 (EXP -> EXP as cadena .)
    notnull         reduce using rule 210 (EXP -> EXP as cadena .)
    as              reduce using rule 210 (EXP -> EXP as cadena .)
    cadenaString    reduce using rule 210 (EXP -> EXP as cadena .)
    id              reduce using rule 210 (EXP -> EXP as cadena .)
    cadena          reduce using rule 210 (EXP -> EXP as cadena .)
    in              reduce using rule 210 (EXP -> EXP as cadena .)
    not             reduce using rule 210 (EXP -> EXP as cadena .)
    like            reduce using rule 210 (EXP -> EXP as cadena .)
    parc            reduce using rule 210 (EXP -> EXP as cadena .)
    then            reduce using rule 210 (EXP -> EXP as cadena .)
    end             reduce using rule 210 (EXP -> EXP as cadena .)
    else            reduce using rule 210 (EXP -> EXP as cadena .)
    when            reduce using rule 210 (EXP -> EXP as cadena .)
    constraint      reduce using rule 210 (EXP -> EXP as cadena .)
    unique          reduce using rule 210 (EXP -> EXP as cadena .)
    check           reduce using rule 210 (EXP -> EXP as cadena .)
    default         reduce using rule 210 (EXP -> EXP as cadena .)
    null            reduce using rule 210 (EXP -> EXP as cadena .)
    primary         reduce using rule 210 (EXP -> EXP as cadena .)
    references      reduce using rule 210 (EXP -> EXP as cadena .)
    asc             reduce using rule 210 (EXP -> EXP as cadena .)
    desc            reduce using rule 210 (EXP -> EXP as cadena .)


state 188

    (215) EXP -> EXP in para . EXP parc
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 271
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 189

    (222) EXP -> EXP like cadena .

    r_from          reduce using rule 222 (EXP -> EXP like cadena .)
    coma            reduce using rule 222 (EXP -> EXP like cadena .)
    where           reduce using rule 222 (EXP -> EXP like cadena .)
    group           reduce using rule 222 (EXP -> EXP like cadena .)
    having          reduce using rule 222 (EXP -> EXP like cadena .)
    union           reduce using rule 222 (EXP -> EXP like cadena .)
    intersect       reduce using rule 222 (EXP -> EXP like cadena .)
    except          reduce using rule 222 (EXP -> EXP like cadena .)
    order           reduce using rule 222 (EXP -> EXP like cadena .)
    limit           reduce using rule 222 (EXP -> EXP like cadena .)
    offset          reduce using rule 222 (EXP -> EXP like cadena .)
    ptcoma          reduce using rule 222 (EXP -> EXP like cadena .)
    mas             reduce using rule 222 (EXP -> EXP like cadena .)
    menos           reduce using rule 222 (EXP -> EXP like cadena .)
    multiplicacion  reduce using rule 222 (EXP -> EXP like cadena .)
    division        reduce using rule 222 (EXP -> EXP like cadena .)
    modulo          reduce using rule 222 (EXP -> EXP like cadena .)
    elevado         reduce using rule 222 (EXP -> EXP like cadena .)
    and             reduce using rule 222 (EXP -> EXP like cadena .)
    or              reduce using rule 222 (EXP -> EXP like cadena .)
    mayor           reduce using rule 222 (EXP -> EXP like cadena .)
    menor           reduce using rule 222 (EXP -> EXP like cadena .)
    mayor_igual     reduce using rule 222 (EXP -> EXP like cadena .)
    menor_igual     reduce using rule 222 (EXP -> EXP like cadena .)
    igual           reduce using rule 222 (EXP -> EXP like cadena .)
    diferente1      reduce using rule 222 (EXP -> EXP like cadena .)
    diferente2      reduce using rule 222 (EXP -> EXP like cadena .)
    between         reduce using rule 222 (EXP -> EXP like cadena .)
    is              reduce using rule 222 (EXP -> EXP like cadena .)
    isnull          reduce using rule 222 (EXP -> EXP like cadena .)
    notnull         reduce using rule 222 (EXP -> EXP like cadena .)
    as              reduce using rule 222 (EXP -> EXP like cadena .)
    cadenaString    reduce using rule 222 (EXP -> EXP like cadena .)
    id              reduce using rule 222 (EXP -> EXP like cadena .)
    cadena          reduce using rule 222 (EXP -> EXP like cadena .)
    in              reduce using rule 222 (EXP -> EXP like cadena .)
    not             reduce using rule 222 (EXP -> EXP like cadena .)
    like            reduce using rule 222 (EXP -> EXP like cadena .)
    parc            reduce using rule 222 (EXP -> EXP like cadena .)
    then            reduce using rule 222 (EXP -> EXP like cadena .)
    end             reduce using rule 222 (EXP -> EXP like cadena .)
    else            reduce using rule 222 (EXP -> EXP like cadena .)
    when            reduce using rule 222 (EXP -> EXP like cadena .)
    constraint      reduce using rule 222 (EXP -> EXP like cadena .)
    unique          reduce using rule 222 (EXP -> EXP like cadena .)
    check           reduce using rule 222 (EXP -> EXP like cadena .)
    default         reduce using rule 222 (EXP -> EXP like cadena .)
    null            reduce using rule 222 (EXP -> EXP like cadena .)
    primary         reduce using rule 222 (EXP -> EXP like cadena .)
    references      reduce using rule 222 (EXP -> EXP like cadena .)
    asc             reduce using rule 222 (EXP -> EXP like cadena .)
    desc            reduce using rule 222 (EXP -> EXP like cadena .)


state 190

    (227) EXP -> id para LEXP . parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 272
    coma            shift and go to state 89


state 191

    (228) EXP -> id para parc .

    r_from          reduce using rule 228 (EXP -> id para parc .)
    coma            reduce using rule 228 (EXP -> id para parc .)
    where           reduce using rule 228 (EXP -> id para parc .)
    group           reduce using rule 228 (EXP -> id para parc .)
    having          reduce using rule 228 (EXP -> id para parc .)
    union           reduce using rule 228 (EXP -> id para parc .)
    intersect       reduce using rule 228 (EXP -> id para parc .)
    except          reduce using rule 228 (EXP -> id para parc .)
    order           reduce using rule 228 (EXP -> id para parc .)
    limit           reduce using rule 228 (EXP -> id para parc .)
    offset          reduce using rule 228 (EXP -> id para parc .)
    ptcoma          reduce using rule 228 (EXP -> id para parc .)
    mas             reduce using rule 228 (EXP -> id para parc .)
    menos           reduce using rule 228 (EXP -> id para parc .)
    multiplicacion  reduce using rule 228 (EXP -> id para parc .)
    division        reduce using rule 228 (EXP -> id para parc .)
    modulo          reduce using rule 228 (EXP -> id para parc .)
    elevado         reduce using rule 228 (EXP -> id para parc .)
    and             reduce using rule 228 (EXP -> id para parc .)
    or              reduce using rule 228 (EXP -> id para parc .)
    mayor           reduce using rule 228 (EXP -> id para parc .)
    menor           reduce using rule 228 (EXP -> id para parc .)
    mayor_igual     reduce using rule 228 (EXP -> id para parc .)
    menor_igual     reduce using rule 228 (EXP -> id para parc .)
    igual           reduce using rule 228 (EXP -> id para parc .)
    diferente1      reduce using rule 228 (EXP -> id para parc .)
    diferente2      reduce using rule 228 (EXP -> id para parc .)
    between         reduce using rule 228 (EXP -> id para parc .)
    is              reduce using rule 228 (EXP -> id para parc .)
    isnull          reduce using rule 228 (EXP -> id para parc .)
    notnull         reduce using rule 228 (EXP -> id para parc .)
    as              reduce using rule 228 (EXP -> id para parc .)
    cadenaString    reduce using rule 228 (EXP -> id para parc .)
    id              reduce using rule 228 (EXP -> id para parc .)
    cadena          reduce using rule 228 (EXP -> id para parc .)
    in              reduce using rule 228 (EXP -> id para parc .)
    not             reduce using rule 228 (EXP -> id para parc .)
    like            reduce using rule 228 (EXP -> id para parc .)
    parc            reduce using rule 228 (EXP -> id para parc .)
    then            reduce using rule 228 (EXP -> id para parc .)
    end             reduce using rule 228 (EXP -> id para parc .)
    else            reduce using rule 228 (EXP -> id para parc .)
    when            reduce using rule 228 (EXP -> id para parc .)
    constraint      reduce using rule 228 (EXP -> id para parc .)
    unique          reduce using rule 228 (EXP -> id para parc .)
    check           reduce using rule 228 (EXP -> id para parc .)
    default         reduce using rule 228 (EXP -> id para parc .)
    null            reduce using rule 228 (EXP -> id para parc .)
    primary         reduce using rule 228 (EXP -> id para parc .)
    references      reduce using rule 228 (EXP -> id para parc .)
    asc             reduce using rule 228 (EXP -> id para parc .)
    desc            reduce using rule 228 (EXP -> id para parc .)


state 192

    (246) EXP -> cadena as TIPO .

    r_from          reduce using rule 246 (EXP -> cadena as TIPO .)
    coma            reduce using rule 246 (EXP -> cadena as TIPO .)
    where           reduce using rule 246 (EXP -> cadena as TIPO .)
    group           reduce using rule 246 (EXP -> cadena as TIPO .)
    having          reduce using rule 246 (EXP -> cadena as TIPO .)
    union           reduce using rule 246 (EXP -> cadena as TIPO .)
    intersect       reduce using rule 246 (EXP -> cadena as TIPO .)
    except          reduce using rule 246 (EXP -> cadena as TIPO .)
    order           reduce using rule 246 (EXP -> cadena as TIPO .)
    limit           reduce using rule 246 (EXP -> cadena as TIPO .)
    offset          reduce using rule 246 (EXP -> cadena as TIPO .)
    ptcoma          reduce using rule 246 (EXP -> cadena as TIPO .)
    mas             reduce using rule 246 (EXP -> cadena as TIPO .)
    menos           reduce using rule 246 (EXP -> cadena as TIPO .)
    multiplicacion  reduce using rule 246 (EXP -> cadena as TIPO .)
    division        reduce using rule 246 (EXP -> cadena as TIPO .)
    modulo          reduce using rule 246 (EXP -> cadena as TIPO .)
    elevado         reduce using rule 246 (EXP -> cadena as TIPO .)
    and             reduce using rule 246 (EXP -> cadena as TIPO .)
    or              reduce using rule 246 (EXP -> cadena as TIPO .)
    mayor           reduce using rule 246 (EXP -> cadena as TIPO .)
    menor           reduce using rule 246 (EXP -> cadena as TIPO .)
    mayor_igual     reduce using rule 246 (EXP -> cadena as TIPO .)
    menor_igual     reduce using rule 246 (EXP -> cadena as TIPO .)
    igual           reduce using rule 246 (EXP -> cadena as TIPO .)
    diferente1      reduce using rule 246 (EXP -> cadena as TIPO .)
    diferente2      reduce using rule 246 (EXP -> cadena as TIPO .)
    between         reduce using rule 246 (EXP -> cadena as TIPO .)
    is              reduce using rule 246 (EXP -> cadena as TIPO .)
    isnull          reduce using rule 246 (EXP -> cadena as TIPO .)
    notnull         reduce using rule 246 (EXP -> cadena as TIPO .)
    as              reduce using rule 246 (EXP -> cadena as TIPO .)
    cadenaString    reduce using rule 246 (EXP -> cadena as TIPO .)
    id              reduce using rule 246 (EXP -> cadena as TIPO .)
    cadena          reduce using rule 246 (EXP -> cadena as TIPO .)
    in              reduce using rule 246 (EXP -> cadena as TIPO .)
    not             reduce using rule 246 (EXP -> cadena as TIPO .)
    like            reduce using rule 246 (EXP -> cadena as TIPO .)
    parc            reduce using rule 246 (EXP -> cadena as TIPO .)
    then            reduce using rule 246 (EXP -> cadena as TIPO .)
    end             reduce using rule 246 (EXP -> cadena as TIPO .)
    else            reduce using rule 246 (EXP -> cadena as TIPO .)
    when            reduce using rule 246 (EXP -> cadena as TIPO .)
    constraint      reduce using rule 246 (EXP -> cadena as TIPO .)
    unique          reduce using rule 246 (EXP -> cadena as TIPO .)
    check           reduce using rule 246 (EXP -> cadena as TIPO .)
    default         reduce using rule 246 (EXP -> cadena as TIPO .)
    null            reduce using rule 246 (EXP -> cadena as TIPO .)
    primary         reduce using rule 246 (EXP -> cadena as TIPO .)
    references      reduce using rule 246 (EXP -> cadena as TIPO .)
    asc             reduce using rule 246 (EXP -> cadena as TIPO .)
    desc            reduce using rule 246 (EXP -> cadena as TIPO .)


state 193

    (137) TIPO -> interval . cadena
    (147) TIPO -> interval . para int parc
    (155) TIPO -> interval . para int parc cadena
    (167) TIPO -> interval .

  ! shift/reduce conflict for cadena resolved as shift
    cadena          shift and go to state 273
    para            shift and go to state 274
    r_from          reduce using rule 167 (TIPO -> interval .)
    coma            reduce using rule 167 (TIPO -> interval .)
    where           reduce using rule 167 (TIPO -> interval .)
    group           reduce using rule 167 (TIPO -> interval .)
    having          reduce using rule 167 (TIPO -> interval .)
    union           reduce using rule 167 (TIPO -> interval .)
    intersect       reduce using rule 167 (TIPO -> interval .)
    except          reduce using rule 167 (TIPO -> interval .)
    order           reduce using rule 167 (TIPO -> interval .)
    limit           reduce using rule 167 (TIPO -> interval .)
    offset          reduce using rule 167 (TIPO -> interval .)
    ptcoma          reduce using rule 167 (TIPO -> interval .)
    mas             reduce using rule 167 (TIPO -> interval .)
    menos           reduce using rule 167 (TIPO -> interval .)
    multiplicacion  reduce using rule 167 (TIPO -> interval .)
    division        reduce using rule 167 (TIPO -> interval .)
    modulo          reduce using rule 167 (TIPO -> interval .)
    elevado         reduce using rule 167 (TIPO -> interval .)
    and             reduce using rule 167 (TIPO -> interval .)
    or              reduce using rule 167 (TIPO -> interval .)
    mayor           reduce using rule 167 (TIPO -> interval .)
    menor           reduce using rule 167 (TIPO -> interval .)
    mayor_igual     reduce using rule 167 (TIPO -> interval .)
    menor_igual     reduce using rule 167 (TIPO -> interval .)
    igual           reduce using rule 167 (TIPO -> interval .)
    diferente1      reduce using rule 167 (TIPO -> interval .)
    diferente2      reduce using rule 167 (TIPO -> interval .)
    between         reduce using rule 167 (TIPO -> interval .)
    is              reduce using rule 167 (TIPO -> interval .)
    isnull          reduce using rule 167 (TIPO -> interval .)
    notnull         reduce using rule 167 (TIPO -> interval .)
    as              reduce using rule 167 (TIPO -> interval .)
    cadenaString    reduce using rule 167 (TIPO -> interval .)
    id              reduce using rule 167 (TIPO -> interval .)
    in              reduce using rule 167 (TIPO -> interval .)
    not             reduce using rule 167 (TIPO -> interval .)
    like            reduce using rule 167 (TIPO -> interval .)
    parc            reduce using rule 167 (TIPO -> interval .)
    then            reduce using rule 167 (TIPO -> interval .)
    end             reduce using rule 167 (TIPO -> interval .)
    else            reduce using rule 167 (TIPO -> interval .)
    when            reduce using rule 167 (TIPO -> interval .)
    constraint      reduce using rule 167 (TIPO -> interval .)
    unique          reduce using rule 167 (TIPO -> interval .)
    check           reduce using rule 167 (TIPO -> interval .)
    default         reduce using rule 167 (TIPO -> interval .)
    null            reduce using rule 167 (TIPO -> interval .)
    primary         reduce using rule 167 (TIPO -> interval .)
    references      reduce using rule 167 (TIPO -> interval .)
    asc             reduce using rule 167 (TIPO -> interval .)
    desc            reduce using rule 167 (TIPO -> interval .)

  ! cadena          [ reduce using rule 167 (TIPO -> interval .) ]


state 194

    (138) TIPO -> decimal . para int coma int parc
    (139) TIPO -> decimal . para int parc
    (140) TIPO -> decimal .

    para            shift and go to state 275
    r_from          reduce using rule 140 (TIPO -> decimal .)
    coma            reduce using rule 140 (TIPO -> decimal .)
    where           reduce using rule 140 (TIPO -> decimal .)
    group           reduce using rule 140 (TIPO -> decimal .)
    having          reduce using rule 140 (TIPO -> decimal .)
    union           reduce using rule 140 (TIPO -> decimal .)
    intersect       reduce using rule 140 (TIPO -> decimal .)
    except          reduce using rule 140 (TIPO -> decimal .)
    order           reduce using rule 140 (TIPO -> decimal .)
    limit           reduce using rule 140 (TIPO -> decimal .)
    offset          reduce using rule 140 (TIPO -> decimal .)
    ptcoma          reduce using rule 140 (TIPO -> decimal .)
    mas             reduce using rule 140 (TIPO -> decimal .)
    menos           reduce using rule 140 (TIPO -> decimal .)
    multiplicacion  reduce using rule 140 (TIPO -> decimal .)
    division        reduce using rule 140 (TIPO -> decimal .)
    modulo          reduce using rule 140 (TIPO -> decimal .)
    elevado         reduce using rule 140 (TIPO -> decimal .)
    and             reduce using rule 140 (TIPO -> decimal .)
    or              reduce using rule 140 (TIPO -> decimal .)
    mayor           reduce using rule 140 (TIPO -> decimal .)
    menor           reduce using rule 140 (TIPO -> decimal .)
    mayor_igual     reduce using rule 140 (TIPO -> decimal .)
    menor_igual     reduce using rule 140 (TIPO -> decimal .)
    igual           reduce using rule 140 (TIPO -> decimal .)
    diferente1      reduce using rule 140 (TIPO -> decimal .)
    diferente2      reduce using rule 140 (TIPO -> decimal .)
    between         reduce using rule 140 (TIPO -> decimal .)
    is              reduce using rule 140 (TIPO -> decimal .)
    isnull          reduce using rule 140 (TIPO -> decimal .)
    notnull         reduce using rule 140 (TIPO -> decimal .)
    as              reduce using rule 140 (TIPO -> decimal .)
    cadenaString    reduce using rule 140 (TIPO -> decimal .)
    id              reduce using rule 140 (TIPO -> decimal .)
    cadena          reduce using rule 140 (TIPO -> decimal .)
    in              reduce using rule 140 (TIPO -> decimal .)
    not             reduce using rule 140 (TIPO -> decimal .)
    like            reduce using rule 140 (TIPO -> decimal .)
    parc            reduce using rule 140 (TIPO -> decimal .)
    then            reduce using rule 140 (TIPO -> decimal .)
    end             reduce using rule 140 (TIPO -> decimal .)
    else            reduce using rule 140 (TIPO -> decimal .)
    when            reduce using rule 140 (TIPO -> decimal .)
    constraint      reduce using rule 140 (TIPO -> decimal .)
    unique          reduce using rule 140 (TIPO -> decimal .)
    check           reduce using rule 140 (TIPO -> decimal .)
    default         reduce using rule 140 (TIPO -> decimal .)
    null            reduce using rule 140 (TIPO -> decimal .)
    primary         reduce using rule 140 (TIPO -> decimal .)
    references      reduce using rule 140 (TIPO -> decimal .)
    asc             reduce using rule 140 (TIPO -> decimal .)
    desc            reduce using rule 140 (TIPO -> decimal .)


state 195

    (141) TIPO -> numeric . para int coma int parc
    (142) TIPO -> numeric . para int parc
    (143) TIPO -> numeric .

    para            shift and go to state 276
    r_from          reduce using rule 143 (TIPO -> numeric .)
    coma            reduce using rule 143 (TIPO -> numeric .)
    where           reduce using rule 143 (TIPO -> numeric .)
    group           reduce using rule 143 (TIPO -> numeric .)
    having          reduce using rule 143 (TIPO -> numeric .)
    union           reduce using rule 143 (TIPO -> numeric .)
    intersect       reduce using rule 143 (TIPO -> numeric .)
    except          reduce using rule 143 (TIPO -> numeric .)
    order           reduce using rule 143 (TIPO -> numeric .)
    limit           reduce using rule 143 (TIPO -> numeric .)
    offset          reduce using rule 143 (TIPO -> numeric .)
    ptcoma          reduce using rule 143 (TIPO -> numeric .)
    mas             reduce using rule 143 (TIPO -> numeric .)
    menos           reduce using rule 143 (TIPO -> numeric .)
    multiplicacion  reduce using rule 143 (TIPO -> numeric .)
    division        reduce using rule 143 (TIPO -> numeric .)
    modulo          reduce using rule 143 (TIPO -> numeric .)
    elevado         reduce using rule 143 (TIPO -> numeric .)
    and             reduce using rule 143 (TIPO -> numeric .)
    or              reduce using rule 143 (TIPO -> numeric .)
    mayor           reduce using rule 143 (TIPO -> numeric .)
    menor           reduce using rule 143 (TIPO -> numeric .)
    mayor_igual     reduce using rule 143 (TIPO -> numeric .)
    menor_igual     reduce using rule 143 (TIPO -> numeric .)
    igual           reduce using rule 143 (TIPO -> numeric .)
    diferente1      reduce using rule 143 (TIPO -> numeric .)
    diferente2      reduce using rule 143 (TIPO -> numeric .)
    between         reduce using rule 143 (TIPO -> numeric .)
    is              reduce using rule 143 (TIPO -> numeric .)
    isnull          reduce using rule 143 (TIPO -> numeric .)
    notnull         reduce using rule 143 (TIPO -> numeric .)
    as              reduce using rule 143 (TIPO -> numeric .)
    cadenaString    reduce using rule 143 (TIPO -> numeric .)
    id              reduce using rule 143 (TIPO -> numeric .)
    cadena          reduce using rule 143 (TIPO -> numeric .)
    in              reduce using rule 143 (TIPO -> numeric .)
    not             reduce using rule 143 (TIPO -> numeric .)
    like            reduce using rule 143 (TIPO -> numeric .)
    parc            reduce using rule 143 (TIPO -> numeric .)
    then            reduce using rule 143 (TIPO -> numeric .)
    end             reduce using rule 143 (TIPO -> numeric .)
    else            reduce using rule 143 (TIPO -> numeric .)
    when            reduce using rule 143 (TIPO -> numeric .)
    constraint      reduce using rule 143 (TIPO -> numeric .)
    unique          reduce using rule 143 (TIPO -> numeric .)
    check           reduce using rule 143 (TIPO -> numeric .)
    default         reduce using rule 143 (TIPO -> numeric .)
    null            reduce using rule 143 (TIPO -> numeric .)
    primary         reduce using rule 143 (TIPO -> numeric .)
    references      reduce using rule 143 (TIPO -> numeric .)
    asc             reduce using rule 143 (TIPO -> numeric .)
    desc            reduce using rule 143 (TIPO -> numeric .)


state 196

    (144) TIPO -> varchar . para int parc

    para            shift and go to state 277


state 197

    (145) TIPO -> timestamp . para int parc
    (151) TIPO -> timestamp . para int parc without time zone
    (152) TIPO -> timestamp . para int parc with time zone
    (164) TIPO -> timestamp .
    (169) TIPO -> timestamp . without time zone
    (170) TIPO -> timestamp . with time zone

    para            shift and go to state 278
    r_from          reduce using rule 164 (TIPO -> timestamp .)
    coma            reduce using rule 164 (TIPO -> timestamp .)
    where           reduce using rule 164 (TIPO -> timestamp .)
    group           reduce using rule 164 (TIPO -> timestamp .)
    having          reduce using rule 164 (TIPO -> timestamp .)
    union           reduce using rule 164 (TIPO -> timestamp .)
    intersect       reduce using rule 164 (TIPO -> timestamp .)
    except          reduce using rule 164 (TIPO -> timestamp .)
    order           reduce using rule 164 (TIPO -> timestamp .)
    limit           reduce using rule 164 (TIPO -> timestamp .)
    offset          reduce using rule 164 (TIPO -> timestamp .)
    ptcoma          reduce using rule 164 (TIPO -> timestamp .)
    mas             reduce using rule 164 (TIPO -> timestamp .)
    menos           reduce using rule 164 (TIPO -> timestamp .)
    multiplicacion  reduce using rule 164 (TIPO -> timestamp .)
    division        reduce using rule 164 (TIPO -> timestamp .)
    modulo          reduce using rule 164 (TIPO -> timestamp .)
    elevado         reduce using rule 164 (TIPO -> timestamp .)
    and             reduce using rule 164 (TIPO -> timestamp .)
    or              reduce using rule 164 (TIPO -> timestamp .)
    mayor           reduce using rule 164 (TIPO -> timestamp .)
    menor           reduce using rule 164 (TIPO -> timestamp .)
    mayor_igual     reduce using rule 164 (TIPO -> timestamp .)
    menor_igual     reduce using rule 164 (TIPO -> timestamp .)
    igual           reduce using rule 164 (TIPO -> timestamp .)
    diferente1      reduce using rule 164 (TIPO -> timestamp .)
    diferente2      reduce using rule 164 (TIPO -> timestamp .)
    between         reduce using rule 164 (TIPO -> timestamp .)
    is              reduce using rule 164 (TIPO -> timestamp .)
    isnull          reduce using rule 164 (TIPO -> timestamp .)
    notnull         reduce using rule 164 (TIPO -> timestamp .)
    as              reduce using rule 164 (TIPO -> timestamp .)
    cadenaString    reduce using rule 164 (TIPO -> timestamp .)
    id              reduce using rule 164 (TIPO -> timestamp .)
    cadena          reduce using rule 164 (TIPO -> timestamp .)
    in              reduce using rule 164 (TIPO -> timestamp .)
    not             reduce using rule 164 (TIPO -> timestamp .)
    like            reduce using rule 164 (TIPO -> timestamp .)
    parc            reduce using rule 164 (TIPO -> timestamp .)
    then            reduce using rule 164 (TIPO -> timestamp .)
    end             reduce using rule 164 (TIPO -> timestamp .)
    else            reduce using rule 164 (TIPO -> timestamp .)
    when            reduce using rule 164 (TIPO -> timestamp .)
    constraint      reduce using rule 164 (TIPO -> timestamp .)
    unique          reduce using rule 164 (TIPO -> timestamp .)
    check           reduce using rule 164 (TIPO -> timestamp .)
    default         reduce using rule 164 (TIPO -> timestamp .)
    null            reduce using rule 164 (TIPO -> timestamp .)
    primary         reduce using rule 164 (TIPO -> timestamp .)
    references      reduce using rule 164 (TIPO -> timestamp .)
    asc             reduce using rule 164 (TIPO -> timestamp .)
    desc            reduce using rule 164 (TIPO -> timestamp .)
    without         shift and go to state 279
    with            shift and go to state 280


state 198

    (146) TIPO -> character . para int parc
    (150) TIPO -> character . varying para int parc

    para            shift and go to state 281
    varying         shift and go to state 282


state 199

    (148) TIPO -> char . para int parc

    para            shift and go to state 283


state 200

    (149) TIPO -> time . para int parc
    (153) TIPO -> time . para int parc without time zone
    (154) TIPO -> time . para int parc with time zone
    (166) TIPO -> time .
    (171) TIPO -> time . without time zone
    (172) TIPO -> time . with time zone

    para            shift and go to state 284
    r_from          reduce using rule 166 (TIPO -> time .)
    coma            reduce using rule 166 (TIPO -> time .)
    where           reduce using rule 166 (TIPO -> time .)
    group           reduce using rule 166 (TIPO -> time .)
    having          reduce using rule 166 (TIPO -> time .)
    union           reduce using rule 166 (TIPO -> time .)
    intersect       reduce using rule 166 (TIPO -> time .)
    except          reduce using rule 166 (TIPO -> time .)
    order           reduce using rule 166 (TIPO -> time .)
    limit           reduce using rule 166 (TIPO -> time .)
    offset          reduce using rule 166 (TIPO -> time .)
    ptcoma          reduce using rule 166 (TIPO -> time .)
    mas             reduce using rule 166 (TIPO -> time .)
    menos           reduce using rule 166 (TIPO -> time .)
    multiplicacion  reduce using rule 166 (TIPO -> time .)
    division        reduce using rule 166 (TIPO -> time .)
    modulo          reduce using rule 166 (TIPO -> time .)
    elevado         reduce using rule 166 (TIPO -> time .)
    and             reduce using rule 166 (TIPO -> time .)
    or              reduce using rule 166 (TIPO -> time .)
    mayor           reduce using rule 166 (TIPO -> time .)
    menor           reduce using rule 166 (TIPO -> time .)
    mayor_igual     reduce using rule 166 (TIPO -> time .)
    menor_igual     reduce using rule 166 (TIPO -> time .)
    igual           reduce using rule 166 (TIPO -> time .)
    diferente1      reduce using rule 166 (TIPO -> time .)
    diferente2      reduce using rule 166 (TIPO -> time .)
    between         reduce using rule 166 (TIPO -> time .)
    is              reduce using rule 166 (TIPO -> time .)
    isnull          reduce using rule 166 (TIPO -> time .)
    notnull         reduce using rule 166 (TIPO -> time .)
    as              reduce using rule 166 (TIPO -> time .)
    cadenaString    reduce using rule 166 (TIPO -> time .)
    id              reduce using rule 166 (TIPO -> time .)
    cadena          reduce using rule 166 (TIPO -> time .)
    in              reduce using rule 166 (TIPO -> time .)
    not             reduce using rule 166 (TIPO -> time .)
    like            reduce using rule 166 (TIPO -> time .)
    parc            reduce using rule 166 (TIPO -> time .)
    then            reduce using rule 166 (TIPO -> time .)
    end             reduce using rule 166 (TIPO -> time .)
    else            reduce using rule 166 (TIPO -> time .)
    when            reduce using rule 166 (TIPO -> time .)
    constraint      reduce using rule 166 (TIPO -> time .)
    unique          reduce using rule 166 (TIPO -> time .)
    check           reduce using rule 166 (TIPO -> time .)
    default         reduce using rule 166 (TIPO -> time .)
    null            reduce using rule 166 (TIPO -> time .)
    primary         reduce using rule 166 (TIPO -> time .)
    references      reduce using rule 166 (TIPO -> time .)
    asc             reduce using rule 166 (TIPO -> time .)
    desc            reduce using rule 166 (TIPO -> time .)
    without         shift and go to state 285
    with            shift and go to state 286


state 201

    (156) TIPO -> smallint .

    r_from          reduce using rule 156 (TIPO -> smallint .)
    coma            reduce using rule 156 (TIPO -> smallint .)
    where           reduce using rule 156 (TIPO -> smallint .)
    group           reduce using rule 156 (TIPO -> smallint .)
    having          reduce using rule 156 (TIPO -> smallint .)
    union           reduce using rule 156 (TIPO -> smallint .)
    intersect       reduce using rule 156 (TIPO -> smallint .)
    except          reduce using rule 156 (TIPO -> smallint .)
    order           reduce using rule 156 (TIPO -> smallint .)
    limit           reduce using rule 156 (TIPO -> smallint .)
    offset          reduce using rule 156 (TIPO -> smallint .)
    ptcoma          reduce using rule 156 (TIPO -> smallint .)
    mas             reduce using rule 156 (TIPO -> smallint .)
    menos           reduce using rule 156 (TIPO -> smallint .)
    multiplicacion  reduce using rule 156 (TIPO -> smallint .)
    division        reduce using rule 156 (TIPO -> smallint .)
    modulo          reduce using rule 156 (TIPO -> smallint .)
    elevado         reduce using rule 156 (TIPO -> smallint .)
    and             reduce using rule 156 (TIPO -> smallint .)
    or              reduce using rule 156 (TIPO -> smallint .)
    mayor           reduce using rule 156 (TIPO -> smallint .)
    menor           reduce using rule 156 (TIPO -> smallint .)
    mayor_igual     reduce using rule 156 (TIPO -> smallint .)
    menor_igual     reduce using rule 156 (TIPO -> smallint .)
    igual           reduce using rule 156 (TIPO -> smallint .)
    diferente1      reduce using rule 156 (TIPO -> smallint .)
    diferente2      reduce using rule 156 (TIPO -> smallint .)
    between         reduce using rule 156 (TIPO -> smallint .)
    is              reduce using rule 156 (TIPO -> smallint .)
    isnull          reduce using rule 156 (TIPO -> smallint .)
    notnull         reduce using rule 156 (TIPO -> smallint .)
    as              reduce using rule 156 (TIPO -> smallint .)
    cadenaString    reduce using rule 156 (TIPO -> smallint .)
    id              reduce using rule 156 (TIPO -> smallint .)
    cadena          reduce using rule 156 (TIPO -> smallint .)
    in              reduce using rule 156 (TIPO -> smallint .)
    not             reduce using rule 156 (TIPO -> smallint .)
    like            reduce using rule 156 (TIPO -> smallint .)
    parc            reduce using rule 156 (TIPO -> smallint .)
    then            reduce using rule 156 (TIPO -> smallint .)
    end             reduce using rule 156 (TIPO -> smallint .)
    else            reduce using rule 156 (TIPO -> smallint .)
    when            reduce using rule 156 (TIPO -> smallint .)
    constraint      reduce using rule 156 (TIPO -> smallint .)
    unique          reduce using rule 156 (TIPO -> smallint .)
    check           reduce using rule 156 (TIPO -> smallint .)
    default         reduce using rule 156 (TIPO -> smallint .)
    null            reduce using rule 156 (TIPO -> smallint .)
    primary         reduce using rule 156 (TIPO -> smallint .)
    references      reduce using rule 156 (TIPO -> smallint .)
    asc             reduce using rule 156 (TIPO -> smallint .)
    desc            reduce using rule 156 (TIPO -> smallint .)


state 202

    (157) TIPO -> integer .

    r_from          reduce using rule 157 (TIPO -> integer .)
    coma            reduce using rule 157 (TIPO -> integer .)
    where           reduce using rule 157 (TIPO -> integer .)
    group           reduce using rule 157 (TIPO -> integer .)
    having          reduce using rule 157 (TIPO -> integer .)
    union           reduce using rule 157 (TIPO -> integer .)
    intersect       reduce using rule 157 (TIPO -> integer .)
    except          reduce using rule 157 (TIPO -> integer .)
    order           reduce using rule 157 (TIPO -> integer .)
    limit           reduce using rule 157 (TIPO -> integer .)
    offset          reduce using rule 157 (TIPO -> integer .)
    ptcoma          reduce using rule 157 (TIPO -> integer .)
    mas             reduce using rule 157 (TIPO -> integer .)
    menos           reduce using rule 157 (TIPO -> integer .)
    multiplicacion  reduce using rule 157 (TIPO -> integer .)
    division        reduce using rule 157 (TIPO -> integer .)
    modulo          reduce using rule 157 (TIPO -> integer .)
    elevado         reduce using rule 157 (TIPO -> integer .)
    and             reduce using rule 157 (TIPO -> integer .)
    or              reduce using rule 157 (TIPO -> integer .)
    mayor           reduce using rule 157 (TIPO -> integer .)
    menor           reduce using rule 157 (TIPO -> integer .)
    mayor_igual     reduce using rule 157 (TIPO -> integer .)
    menor_igual     reduce using rule 157 (TIPO -> integer .)
    igual           reduce using rule 157 (TIPO -> integer .)
    diferente1      reduce using rule 157 (TIPO -> integer .)
    diferente2      reduce using rule 157 (TIPO -> integer .)
    between         reduce using rule 157 (TIPO -> integer .)
    is              reduce using rule 157 (TIPO -> integer .)
    isnull          reduce using rule 157 (TIPO -> integer .)
    notnull         reduce using rule 157 (TIPO -> integer .)
    as              reduce using rule 157 (TIPO -> integer .)
    cadenaString    reduce using rule 157 (TIPO -> integer .)
    id              reduce using rule 157 (TIPO -> integer .)
    cadena          reduce using rule 157 (TIPO -> integer .)
    in              reduce using rule 157 (TIPO -> integer .)
    not             reduce using rule 157 (TIPO -> integer .)
    like            reduce using rule 157 (TIPO -> integer .)
    parc            reduce using rule 157 (TIPO -> integer .)
    then            reduce using rule 157 (TIPO -> integer .)
    end             reduce using rule 157 (TIPO -> integer .)
    else            reduce using rule 157 (TIPO -> integer .)
    when            reduce using rule 157 (TIPO -> integer .)
    constraint      reduce using rule 157 (TIPO -> integer .)
    unique          reduce using rule 157 (TIPO -> integer .)
    check           reduce using rule 157 (TIPO -> integer .)
    default         reduce using rule 157 (TIPO -> integer .)
    null            reduce using rule 157 (TIPO -> integer .)
    primary         reduce using rule 157 (TIPO -> integer .)
    references      reduce using rule 157 (TIPO -> integer .)
    asc             reduce using rule 157 (TIPO -> integer .)
    desc            reduce using rule 157 (TIPO -> integer .)


state 203

    (158) TIPO -> r_int .

    r_from          reduce using rule 158 (TIPO -> r_int .)
    coma            reduce using rule 158 (TIPO -> r_int .)
    where           reduce using rule 158 (TIPO -> r_int .)
    group           reduce using rule 158 (TIPO -> r_int .)
    having          reduce using rule 158 (TIPO -> r_int .)
    union           reduce using rule 158 (TIPO -> r_int .)
    intersect       reduce using rule 158 (TIPO -> r_int .)
    except          reduce using rule 158 (TIPO -> r_int .)
    order           reduce using rule 158 (TIPO -> r_int .)
    limit           reduce using rule 158 (TIPO -> r_int .)
    offset          reduce using rule 158 (TIPO -> r_int .)
    ptcoma          reduce using rule 158 (TIPO -> r_int .)
    mas             reduce using rule 158 (TIPO -> r_int .)
    menos           reduce using rule 158 (TIPO -> r_int .)
    multiplicacion  reduce using rule 158 (TIPO -> r_int .)
    division        reduce using rule 158 (TIPO -> r_int .)
    modulo          reduce using rule 158 (TIPO -> r_int .)
    elevado         reduce using rule 158 (TIPO -> r_int .)
    and             reduce using rule 158 (TIPO -> r_int .)
    or              reduce using rule 158 (TIPO -> r_int .)
    mayor           reduce using rule 158 (TIPO -> r_int .)
    menor           reduce using rule 158 (TIPO -> r_int .)
    mayor_igual     reduce using rule 158 (TIPO -> r_int .)
    menor_igual     reduce using rule 158 (TIPO -> r_int .)
    igual           reduce using rule 158 (TIPO -> r_int .)
    diferente1      reduce using rule 158 (TIPO -> r_int .)
    diferente2      reduce using rule 158 (TIPO -> r_int .)
    between         reduce using rule 158 (TIPO -> r_int .)
    is              reduce using rule 158 (TIPO -> r_int .)
    isnull          reduce using rule 158 (TIPO -> r_int .)
    notnull         reduce using rule 158 (TIPO -> r_int .)
    as              reduce using rule 158 (TIPO -> r_int .)
    cadenaString    reduce using rule 158 (TIPO -> r_int .)
    id              reduce using rule 158 (TIPO -> r_int .)
    cadena          reduce using rule 158 (TIPO -> r_int .)
    in              reduce using rule 158 (TIPO -> r_int .)
    not             reduce using rule 158 (TIPO -> r_int .)
    like            reduce using rule 158 (TIPO -> r_int .)
    parc            reduce using rule 158 (TIPO -> r_int .)
    then            reduce using rule 158 (TIPO -> r_int .)
    end             reduce using rule 158 (TIPO -> r_int .)
    else            reduce using rule 158 (TIPO -> r_int .)
    when            reduce using rule 158 (TIPO -> r_int .)
    constraint      reduce using rule 158 (TIPO -> r_int .)
    unique          reduce using rule 158 (TIPO -> r_int .)
    check           reduce using rule 158 (TIPO -> r_int .)
    default         reduce using rule 158 (TIPO -> r_int .)
    null            reduce using rule 158 (TIPO -> r_int .)
    primary         reduce using rule 158 (TIPO -> r_int .)
    references      reduce using rule 158 (TIPO -> r_int .)
    asc             reduce using rule 158 (TIPO -> r_int .)
    desc            reduce using rule 158 (TIPO -> r_int .)


state 204

    (159) TIPO -> bigint .

    r_from          reduce using rule 159 (TIPO -> bigint .)
    coma            reduce using rule 159 (TIPO -> bigint .)
    where           reduce using rule 159 (TIPO -> bigint .)
    group           reduce using rule 159 (TIPO -> bigint .)
    having          reduce using rule 159 (TIPO -> bigint .)
    union           reduce using rule 159 (TIPO -> bigint .)
    intersect       reduce using rule 159 (TIPO -> bigint .)
    except          reduce using rule 159 (TIPO -> bigint .)
    order           reduce using rule 159 (TIPO -> bigint .)
    limit           reduce using rule 159 (TIPO -> bigint .)
    offset          reduce using rule 159 (TIPO -> bigint .)
    ptcoma          reduce using rule 159 (TIPO -> bigint .)
    mas             reduce using rule 159 (TIPO -> bigint .)
    menos           reduce using rule 159 (TIPO -> bigint .)
    multiplicacion  reduce using rule 159 (TIPO -> bigint .)
    division        reduce using rule 159 (TIPO -> bigint .)
    modulo          reduce using rule 159 (TIPO -> bigint .)
    elevado         reduce using rule 159 (TIPO -> bigint .)
    and             reduce using rule 159 (TIPO -> bigint .)
    or              reduce using rule 159 (TIPO -> bigint .)
    mayor           reduce using rule 159 (TIPO -> bigint .)
    menor           reduce using rule 159 (TIPO -> bigint .)
    mayor_igual     reduce using rule 159 (TIPO -> bigint .)
    menor_igual     reduce using rule 159 (TIPO -> bigint .)
    igual           reduce using rule 159 (TIPO -> bigint .)
    diferente1      reduce using rule 159 (TIPO -> bigint .)
    diferente2      reduce using rule 159 (TIPO -> bigint .)
    between         reduce using rule 159 (TIPO -> bigint .)
    is              reduce using rule 159 (TIPO -> bigint .)
    isnull          reduce using rule 159 (TIPO -> bigint .)
    notnull         reduce using rule 159 (TIPO -> bigint .)
    as              reduce using rule 159 (TIPO -> bigint .)
    cadenaString    reduce using rule 159 (TIPO -> bigint .)
    id              reduce using rule 159 (TIPO -> bigint .)
    cadena          reduce using rule 159 (TIPO -> bigint .)
    in              reduce using rule 159 (TIPO -> bigint .)
    not             reduce using rule 159 (TIPO -> bigint .)
    like            reduce using rule 159 (TIPO -> bigint .)
    parc            reduce using rule 159 (TIPO -> bigint .)
    then            reduce using rule 159 (TIPO -> bigint .)
    end             reduce using rule 159 (TIPO -> bigint .)
    else            reduce using rule 159 (TIPO -> bigint .)
    when            reduce using rule 159 (TIPO -> bigint .)
    constraint      reduce using rule 159 (TIPO -> bigint .)
    unique          reduce using rule 159 (TIPO -> bigint .)
    check           reduce using rule 159 (TIPO -> bigint .)
    default         reduce using rule 159 (TIPO -> bigint .)
    null            reduce using rule 159 (TIPO -> bigint .)
    primary         reduce using rule 159 (TIPO -> bigint .)
    references      reduce using rule 159 (TIPO -> bigint .)
    asc             reduce using rule 159 (TIPO -> bigint .)
    desc            reduce using rule 159 (TIPO -> bigint .)


state 205

    (160) TIPO -> real .

    r_from          reduce using rule 160 (TIPO -> real .)
    coma            reduce using rule 160 (TIPO -> real .)
    where           reduce using rule 160 (TIPO -> real .)
    group           reduce using rule 160 (TIPO -> real .)
    having          reduce using rule 160 (TIPO -> real .)
    union           reduce using rule 160 (TIPO -> real .)
    intersect       reduce using rule 160 (TIPO -> real .)
    except          reduce using rule 160 (TIPO -> real .)
    order           reduce using rule 160 (TIPO -> real .)
    limit           reduce using rule 160 (TIPO -> real .)
    offset          reduce using rule 160 (TIPO -> real .)
    ptcoma          reduce using rule 160 (TIPO -> real .)
    mas             reduce using rule 160 (TIPO -> real .)
    menos           reduce using rule 160 (TIPO -> real .)
    multiplicacion  reduce using rule 160 (TIPO -> real .)
    division        reduce using rule 160 (TIPO -> real .)
    modulo          reduce using rule 160 (TIPO -> real .)
    elevado         reduce using rule 160 (TIPO -> real .)
    and             reduce using rule 160 (TIPO -> real .)
    or              reduce using rule 160 (TIPO -> real .)
    mayor           reduce using rule 160 (TIPO -> real .)
    menor           reduce using rule 160 (TIPO -> real .)
    mayor_igual     reduce using rule 160 (TIPO -> real .)
    menor_igual     reduce using rule 160 (TIPO -> real .)
    igual           reduce using rule 160 (TIPO -> real .)
    diferente1      reduce using rule 160 (TIPO -> real .)
    diferente2      reduce using rule 160 (TIPO -> real .)
    between         reduce using rule 160 (TIPO -> real .)
    is              reduce using rule 160 (TIPO -> real .)
    isnull          reduce using rule 160 (TIPO -> real .)
    notnull         reduce using rule 160 (TIPO -> real .)
    as              reduce using rule 160 (TIPO -> real .)
    cadenaString    reduce using rule 160 (TIPO -> real .)
    id              reduce using rule 160 (TIPO -> real .)
    cadena          reduce using rule 160 (TIPO -> real .)
    in              reduce using rule 160 (TIPO -> real .)
    not             reduce using rule 160 (TIPO -> real .)
    like            reduce using rule 160 (TIPO -> real .)
    parc            reduce using rule 160 (TIPO -> real .)
    then            reduce using rule 160 (TIPO -> real .)
    end             reduce using rule 160 (TIPO -> real .)
    else            reduce using rule 160 (TIPO -> real .)
    when            reduce using rule 160 (TIPO -> real .)
    constraint      reduce using rule 160 (TIPO -> real .)
    unique          reduce using rule 160 (TIPO -> real .)
    check           reduce using rule 160 (TIPO -> real .)
    default         reduce using rule 160 (TIPO -> real .)
    null            reduce using rule 160 (TIPO -> real .)
    primary         reduce using rule 160 (TIPO -> real .)
    references      reduce using rule 160 (TIPO -> real .)
    asc             reduce using rule 160 (TIPO -> real .)
    desc            reduce using rule 160 (TIPO -> real .)


state 206

    (161) TIPO -> double . precision

    precision       shift and go to state 287


state 207

    (162) TIPO -> money .

    r_from          reduce using rule 162 (TIPO -> money .)
    coma            reduce using rule 162 (TIPO -> money .)
    where           reduce using rule 162 (TIPO -> money .)
    group           reduce using rule 162 (TIPO -> money .)
    having          reduce using rule 162 (TIPO -> money .)
    union           reduce using rule 162 (TIPO -> money .)
    intersect       reduce using rule 162 (TIPO -> money .)
    except          reduce using rule 162 (TIPO -> money .)
    order           reduce using rule 162 (TIPO -> money .)
    limit           reduce using rule 162 (TIPO -> money .)
    offset          reduce using rule 162 (TIPO -> money .)
    ptcoma          reduce using rule 162 (TIPO -> money .)
    mas             reduce using rule 162 (TIPO -> money .)
    menos           reduce using rule 162 (TIPO -> money .)
    multiplicacion  reduce using rule 162 (TIPO -> money .)
    division        reduce using rule 162 (TIPO -> money .)
    modulo          reduce using rule 162 (TIPO -> money .)
    elevado         reduce using rule 162 (TIPO -> money .)
    and             reduce using rule 162 (TIPO -> money .)
    or              reduce using rule 162 (TIPO -> money .)
    mayor           reduce using rule 162 (TIPO -> money .)
    menor           reduce using rule 162 (TIPO -> money .)
    mayor_igual     reduce using rule 162 (TIPO -> money .)
    menor_igual     reduce using rule 162 (TIPO -> money .)
    igual           reduce using rule 162 (TIPO -> money .)
    diferente1      reduce using rule 162 (TIPO -> money .)
    diferente2      reduce using rule 162 (TIPO -> money .)
    between         reduce using rule 162 (TIPO -> money .)
    is              reduce using rule 162 (TIPO -> money .)
    isnull          reduce using rule 162 (TIPO -> money .)
    notnull         reduce using rule 162 (TIPO -> money .)
    as              reduce using rule 162 (TIPO -> money .)
    cadenaString    reduce using rule 162 (TIPO -> money .)
    id              reduce using rule 162 (TIPO -> money .)
    cadena          reduce using rule 162 (TIPO -> money .)
    in              reduce using rule 162 (TIPO -> money .)
    not             reduce using rule 162 (TIPO -> money .)
    like            reduce using rule 162 (TIPO -> money .)
    parc            reduce using rule 162 (TIPO -> money .)
    then            reduce using rule 162 (TIPO -> money .)
    end             reduce using rule 162 (TIPO -> money .)
    else            reduce using rule 162 (TIPO -> money .)
    when            reduce using rule 162 (TIPO -> money .)
    constraint      reduce using rule 162 (TIPO -> money .)
    unique          reduce using rule 162 (TIPO -> money .)
    check           reduce using rule 162 (TIPO -> money .)
    default         reduce using rule 162 (TIPO -> money .)
    null            reduce using rule 162 (TIPO -> money .)
    primary         reduce using rule 162 (TIPO -> money .)
    references      reduce using rule 162 (TIPO -> money .)
    asc             reduce using rule 162 (TIPO -> money .)
    desc            reduce using rule 162 (TIPO -> money .)


state 208

    (163) TIPO -> text .

    r_from          reduce using rule 163 (TIPO -> text .)
    coma            reduce using rule 163 (TIPO -> text .)
    where           reduce using rule 163 (TIPO -> text .)
    group           reduce using rule 163 (TIPO -> text .)
    having          reduce using rule 163 (TIPO -> text .)
    union           reduce using rule 163 (TIPO -> text .)
    intersect       reduce using rule 163 (TIPO -> text .)
    except          reduce using rule 163 (TIPO -> text .)
    order           reduce using rule 163 (TIPO -> text .)
    limit           reduce using rule 163 (TIPO -> text .)
    offset          reduce using rule 163 (TIPO -> text .)
    ptcoma          reduce using rule 163 (TIPO -> text .)
    mas             reduce using rule 163 (TIPO -> text .)
    menos           reduce using rule 163 (TIPO -> text .)
    multiplicacion  reduce using rule 163 (TIPO -> text .)
    division        reduce using rule 163 (TIPO -> text .)
    modulo          reduce using rule 163 (TIPO -> text .)
    elevado         reduce using rule 163 (TIPO -> text .)
    and             reduce using rule 163 (TIPO -> text .)
    or              reduce using rule 163 (TIPO -> text .)
    mayor           reduce using rule 163 (TIPO -> text .)
    menor           reduce using rule 163 (TIPO -> text .)
    mayor_igual     reduce using rule 163 (TIPO -> text .)
    menor_igual     reduce using rule 163 (TIPO -> text .)
    igual           reduce using rule 163 (TIPO -> text .)
    diferente1      reduce using rule 163 (TIPO -> text .)
    diferente2      reduce using rule 163 (TIPO -> text .)
    between         reduce using rule 163 (TIPO -> text .)
    is              reduce using rule 163 (TIPO -> text .)
    isnull          reduce using rule 163 (TIPO -> text .)
    notnull         reduce using rule 163 (TIPO -> text .)
    as              reduce using rule 163 (TIPO -> text .)
    cadenaString    reduce using rule 163 (TIPO -> text .)
    id              reduce using rule 163 (TIPO -> text .)
    cadena          reduce using rule 163 (TIPO -> text .)
    in              reduce using rule 163 (TIPO -> text .)
    not             reduce using rule 163 (TIPO -> text .)
    like            reduce using rule 163 (TIPO -> text .)
    parc            reduce using rule 163 (TIPO -> text .)
    then            reduce using rule 163 (TIPO -> text .)
    end             reduce using rule 163 (TIPO -> text .)
    else            reduce using rule 163 (TIPO -> text .)
    when            reduce using rule 163 (TIPO -> text .)
    constraint      reduce using rule 163 (TIPO -> text .)
    unique          reduce using rule 163 (TIPO -> text .)
    check           reduce using rule 163 (TIPO -> text .)
    default         reduce using rule 163 (TIPO -> text .)
    null            reduce using rule 163 (TIPO -> text .)
    primary         reduce using rule 163 (TIPO -> text .)
    references      reduce using rule 163 (TIPO -> text .)
    asc             reduce using rule 163 (TIPO -> text .)
    desc            reduce using rule 163 (TIPO -> text .)


state 209

    (165) TIPO -> date .

    r_from          reduce using rule 165 (TIPO -> date .)
    coma            reduce using rule 165 (TIPO -> date .)
    where           reduce using rule 165 (TIPO -> date .)
    group           reduce using rule 165 (TIPO -> date .)
    having          reduce using rule 165 (TIPO -> date .)
    union           reduce using rule 165 (TIPO -> date .)
    intersect       reduce using rule 165 (TIPO -> date .)
    except          reduce using rule 165 (TIPO -> date .)
    order           reduce using rule 165 (TIPO -> date .)
    limit           reduce using rule 165 (TIPO -> date .)
    offset          reduce using rule 165 (TIPO -> date .)
    ptcoma          reduce using rule 165 (TIPO -> date .)
    mas             reduce using rule 165 (TIPO -> date .)
    menos           reduce using rule 165 (TIPO -> date .)
    multiplicacion  reduce using rule 165 (TIPO -> date .)
    division        reduce using rule 165 (TIPO -> date .)
    modulo          reduce using rule 165 (TIPO -> date .)
    elevado         reduce using rule 165 (TIPO -> date .)
    and             reduce using rule 165 (TIPO -> date .)
    or              reduce using rule 165 (TIPO -> date .)
    mayor           reduce using rule 165 (TIPO -> date .)
    menor           reduce using rule 165 (TIPO -> date .)
    mayor_igual     reduce using rule 165 (TIPO -> date .)
    menor_igual     reduce using rule 165 (TIPO -> date .)
    igual           reduce using rule 165 (TIPO -> date .)
    diferente1      reduce using rule 165 (TIPO -> date .)
    diferente2      reduce using rule 165 (TIPO -> date .)
    between         reduce using rule 165 (TIPO -> date .)
    is              reduce using rule 165 (TIPO -> date .)
    isnull          reduce using rule 165 (TIPO -> date .)
    notnull         reduce using rule 165 (TIPO -> date .)
    as              reduce using rule 165 (TIPO -> date .)
    cadenaString    reduce using rule 165 (TIPO -> date .)
    id              reduce using rule 165 (TIPO -> date .)
    cadena          reduce using rule 165 (TIPO -> date .)
    in              reduce using rule 165 (TIPO -> date .)
    not             reduce using rule 165 (TIPO -> date .)
    like            reduce using rule 165 (TIPO -> date .)
    parc            reduce using rule 165 (TIPO -> date .)
    then            reduce using rule 165 (TIPO -> date .)
    end             reduce using rule 165 (TIPO -> date .)
    else            reduce using rule 165 (TIPO -> date .)
    when            reduce using rule 165 (TIPO -> date .)
    constraint      reduce using rule 165 (TIPO -> date .)
    unique          reduce using rule 165 (TIPO -> date .)
    check           reduce using rule 165 (TIPO -> date .)
    default         reduce using rule 165 (TIPO -> date .)
    null            reduce using rule 165 (TIPO -> date .)
    primary         reduce using rule 165 (TIPO -> date .)
    references      reduce using rule 165 (TIPO -> date .)
    asc             reduce using rule 165 (TIPO -> date .)
    desc            reduce using rule 165 (TIPO -> date .)


state 210

    (168) TIPO -> boolean .

    r_from          reduce using rule 168 (TIPO -> boolean .)
    coma            reduce using rule 168 (TIPO -> boolean .)
    where           reduce using rule 168 (TIPO -> boolean .)
    group           reduce using rule 168 (TIPO -> boolean .)
    having          reduce using rule 168 (TIPO -> boolean .)
    union           reduce using rule 168 (TIPO -> boolean .)
    intersect       reduce using rule 168 (TIPO -> boolean .)
    except          reduce using rule 168 (TIPO -> boolean .)
    order           reduce using rule 168 (TIPO -> boolean .)
    limit           reduce using rule 168 (TIPO -> boolean .)
    offset          reduce using rule 168 (TIPO -> boolean .)
    ptcoma          reduce using rule 168 (TIPO -> boolean .)
    mas             reduce using rule 168 (TIPO -> boolean .)
    menos           reduce using rule 168 (TIPO -> boolean .)
    multiplicacion  reduce using rule 168 (TIPO -> boolean .)
    division        reduce using rule 168 (TIPO -> boolean .)
    modulo          reduce using rule 168 (TIPO -> boolean .)
    elevado         reduce using rule 168 (TIPO -> boolean .)
    and             reduce using rule 168 (TIPO -> boolean .)
    or              reduce using rule 168 (TIPO -> boolean .)
    mayor           reduce using rule 168 (TIPO -> boolean .)
    menor           reduce using rule 168 (TIPO -> boolean .)
    mayor_igual     reduce using rule 168 (TIPO -> boolean .)
    menor_igual     reduce using rule 168 (TIPO -> boolean .)
    igual           reduce using rule 168 (TIPO -> boolean .)
    diferente1      reduce using rule 168 (TIPO -> boolean .)
    diferente2      reduce using rule 168 (TIPO -> boolean .)
    between         reduce using rule 168 (TIPO -> boolean .)
    is              reduce using rule 168 (TIPO -> boolean .)
    isnull          reduce using rule 168 (TIPO -> boolean .)
    notnull         reduce using rule 168 (TIPO -> boolean .)
    as              reduce using rule 168 (TIPO -> boolean .)
    cadenaString    reduce using rule 168 (TIPO -> boolean .)
    id              reduce using rule 168 (TIPO -> boolean .)
    cadena          reduce using rule 168 (TIPO -> boolean .)
    in              reduce using rule 168 (TIPO -> boolean .)
    not             reduce using rule 168 (TIPO -> boolean .)
    like            reduce using rule 168 (TIPO -> boolean .)
    parc            reduce using rule 168 (TIPO -> boolean .)
    then            reduce using rule 168 (TIPO -> boolean .)
    end             reduce using rule 168 (TIPO -> boolean .)
    else            reduce using rule 168 (TIPO -> boolean .)
    when            reduce using rule 168 (TIPO -> boolean .)
    constraint      reduce using rule 168 (TIPO -> boolean .)
    unique          reduce using rule 168 (TIPO -> boolean .)
    check           reduce using rule 168 (TIPO -> boolean .)
    default         reduce using rule 168 (TIPO -> boolean .)
    null            reduce using rule 168 (TIPO -> boolean .)
    primary         reduce using rule 168 (TIPO -> boolean .)
    references      reduce using rule 168 (TIPO -> boolean .)
    asc             reduce using rule 168 (TIPO -> boolean .)
    desc            reduce using rule 168 (TIPO -> boolean .)


state 211

    (173) TIPO -> id .

    r_from          reduce using rule 173 (TIPO -> id .)
    coma            reduce using rule 173 (TIPO -> id .)
    where           reduce using rule 173 (TIPO -> id .)
    group           reduce using rule 173 (TIPO -> id .)
    having          reduce using rule 173 (TIPO -> id .)
    union           reduce using rule 173 (TIPO -> id .)
    intersect       reduce using rule 173 (TIPO -> id .)
    except          reduce using rule 173 (TIPO -> id .)
    order           reduce using rule 173 (TIPO -> id .)
    limit           reduce using rule 173 (TIPO -> id .)
    offset          reduce using rule 173 (TIPO -> id .)
    ptcoma          reduce using rule 173 (TIPO -> id .)
    mas             reduce using rule 173 (TIPO -> id .)
    menos           reduce using rule 173 (TIPO -> id .)
    multiplicacion  reduce using rule 173 (TIPO -> id .)
    division        reduce using rule 173 (TIPO -> id .)
    modulo          reduce using rule 173 (TIPO -> id .)
    elevado         reduce using rule 173 (TIPO -> id .)
    and             reduce using rule 173 (TIPO -> id .)
    or              reduce using rule 173 (TIPO -> id .)
    mayor           reduce using rule 173 (TIPO -> id .)
    menor           reduce using rule 173 (TIPO -> id .)
    mayor_igual     reduce using rule 173 (TIPO -> id .)
    menor_igual     reduce using rule 173 (TIPO -> id .)
    igual           reduce using rule 173 (TIPO -> id .)
    diferente1      reduce using rule 173 (TIPO -> id .)
    diferente2      reduce using rule 173 (TIPO -> id .)
    between         reduce using rule 173 (TIPO -> id .)
    is              reduce using rule 173 (TIPO -> id .)
    isnull          reduce using rule 173 (TIPO -> id .)
    notnull         reduce using rule 173 (TIPO -> id .)
    as              reduce using rule 173 (TIPO -> id .)
    cadenaString    reduce using rule 173 (TIPO -> id .)
    id              reduce using rule 173 (TIPO -> id .)
    cadena          reduce using rule 173 (TIPO -> id .)
    in              reduce using rule 173 (TIPO -> id .)
    not             reduce using rule 173 (TIPO -> id .)
    like            reduce using rule 173 (TIPO -> id .)
    parc            reduce using rule 173 (TIPO -> id .)
    then            reduce using rule 173 (TIPO -> id .)
    end             reduce using rule 173 (TIPO -> id .)
    else            reduce using rule 173 (TIPO -> id .)
    when            reduce using rule 173 (TIPO -> id .)
    constraint      reduce using rule 173 (TIPO -> id .)
    unique          reduce using rule 173 (TIPO -> id .)
    check           reduce using rule 173 (TIPO -> id .)
    default         reduce using rule 173 (TIPO -> id .)
    null            reduce using rule 173 (TIPO -> id .)
    primary         reduce using rule 173 (TIPO -> id .)
    references      reduce using rule 173 (TIPO -> id .)
    asc             reduce using rule 173 (TIPO -> id .)
    desc            reduce using rule 173 (TIPO -> id .)


state 212

    (225) EXP -> para EXP parc .

    r_from          reduce using rule 225 (EXP -> para EXP parc .)
    coma            reduce using rule 225 (EXP -> para EXP parc .)
    where           reduce using rule 225 (EXP -> para EXP parc .)
    group           reduce using rule 225 (EXP -> para EXP parc .)
    having          reduce using rule 225 (EXP -> para EXP parc .)
    union           reduce using rule 225 (EXP -> para EXP parc .)
    intersect       reduce using rule 225 (EXP -> para EXP parc .)
    except          reduce using rule 225 (EXP -> para EXP parc .)
    order           reduce using rule 225 (EXP -> para EXP parc .)
    limit           reduce using rule 225 (EXP -> para EXP parc .)
    offset          reduce using rule 225 (EXP -> para EXP parc .)
    ptcoma          reduce using rule 225 (EXP -> para EXP parc .)
    mas             reduce using rule 225 (EXP -> para EXP parc .)
    menos           reduce using rule 225 (EXP -> para EXP parc .)
    multiplicacion  reduce using rule 225 (EXP -> para EXP parc .)
    division        reduce using rule 225 (EXP -> para EXP parc .)
    modulo          reduce using rule 225 (EXP -> para EXP parc .)
    elevado         reduce using rule 225 (EXP -> para EXP parc .)
    and             reduce using rule 225 (EXP -> para EXP parc .)
    or              reduce using rule 225 (EXP -> para EXP parc .)
    mayor           reduce using rule 225 (EXP -> para EXP parc .)
    menor           reduce using rule 225 (EXP -> para EXP parc .)
    mayor_igual     reduce using rule 225 (EXP -> para EXP parc .)
    menor_igual     reduce using rule 225 (EXP -> para EXP parc .)
    igual           reduce using rule 225 (EXP -> para EXP parc .)
    diferente1      reduce using rule 225 (EXP -> para EXP parc .)
    diferente2      reduce using rule 225 (EXP -> para EXP parc .)
    between         reduce using rule 225 (EXP -> para EXP parc .)
    is              reduce using rule 225 (EXP -> para EXP parc .)
    isnull          reduce using rule 225 (EXP -> para EXP parc .)
    notnull         reduce using rule 225 (EXP -> para EXP parc .)
    as              reduce using rule 225 (EXP -> para EXP parc .)
    cadenaString    reduce using rule 225 (EXP -> para EXP parc .)
    id              reduce using rule 225 (EXP -> para EXP parc .)
    cadena          reduce using rule 225 (EXP -> para EXP parc .)
    in              reduce using rule 225 (EXP -> para EXP parc .)
    not             reduce using rule 225 (EXP -> para EXP parc .)
    like            reduce using rule 225 (EXP -> para EXP parc .)
    parc            reduce using rule 225 (EXP -> para EXP parc .)
    then            reduce using rule 225 (EXP -> para EXP parc .)
    end             reduce using rule 225 (EXP -> para EXP parc .)
    else            reduce using rule 225 (EXP -> para EXP parc .)
    when            reduce using rule 225 (EXP -> para EXP parc .)
    constraint      reduce using rule 225 (EXP -> para EXP parc .)
    unique          reduce using rule 225 (EXP -> para EXP parc .)
    check           reduce using rule 225 (EXP -> para EXP parc .)
    default         reduce using rule 225 (EXP -> para EXP parc .)
    null            reduce using rule 225 (EXP -> para EXP parc .)
    primary         reduce using rule 225 (EXP -> para EXP parc .)
    references      reduce using rule 225 (EXP -> para EXP parc .)
    asc             reduce using rule 225 (EXP -> para EXP parc .)
    desc            reduce using rule 225 (EXP -> para EXP parc .)


state 213

    (229) EXP -> any para LEXP . parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 288
    coma            shift and go to state 89


state 214

    (230) EXP -> all para LEXP . parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 289
    coma            shift and go to state 89


state 215

    (231) EXP -> some para LEXP . parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 290
    coma            shift and go to state 89


state 216

    (232) EXP -> extract para FIELDS . r_from timestamp cadena parc

    r_from          shift and go to state 291


state 217

    (174) FIELDS -> year .

    r_from          reduce using rule 174 (FIELDS -> year .)


state 218

    (175) FIELDS -> month .

    r_from          reduce using rule 175 (FIELDS -> month .)


state 219

    (176) FIELDS -> day .

    r_from          reduce using rule 176 (FIELDS -> day .)


state 220

    (177) FIELDS -> hour .

    r_from          reduce using rule 177 (FIELDS -> hour .)


state 221

    (178) FIELDS -> minute .

    r_from          reduce using rule 178 (FIELDS -> minute .)


state 222

    (179) FIELDS -> second .

    r_from          reduce using rule 179 (FIELDS -> second .)


state 223

    (67) CREATETABLE -> create table id para . LDEF parc ptcoma
    (68) CREATETABLE -> create table id para . LDEF parc HERENCIA ptcoma
    (69) LDEF -> . LDEF coma COLDEF
    (70) LDEF -> . COLDEF
    (71) COLDEF -> . OPCONST
    (72) COLDEF -> . constraint id OPCONST
    (73) COLDEF -> . id TIPO
    (74) COLDEF -> . id TIPO LOPCOLUMN
    (86) OPCONST -> . primary key para LEXP parc
    (87) OPCONST -> . foreign key para LEXP parc references id para LEXP parc
    (88) OPCONST -> . unique para LEXP parc
    (89) OPCONST -> . check para CONDCHECK parc

    constraint      shift and go to state 296
    id              shift and go to state 292
    primary         shift and go to state 297
    foreign         shift and go to state 298
    unique          shift and go to state 299
    check           shift and go to state 300

    LDEF                           shift and go to state 293
    COLDEF                         shift and go to state 294
    OPCONST                        shift and go to state 295

state 224

    (98) CREATETYPE -> create type id as . enum para LEXP parc

    enum            shift and go to state 301


state 225

    (50) CREATEDB -> create RD if not . exist id
    (51) CREATEDB -> create RD if not . exist id OPCCDB

    exist           shift and go to state 302


state 226

    (53) CREATEDB -> create RD id OPCCDB .

    ptcoma          reduce using rule 53 (CREATEDB -> create RD id OPCCDB .)


state 227

    (54) OPCCDB -> PROPIETARIO .
    (56) OPCCDB -> PROPIETARIO . MODO
    (65) MODO -> . mode igual int
    (66) MODO -> . mode int

    ptcoma          reduce using rule 54 (OPCCDB -> PROPIETARIO .)
    mode            shift and go to state 230

    MODO                           shift and go to state 303

state 228

    (55) OPCCDB -> MODO .

    ptcoma          reduce using rule 55 (OPCCDB -> MODO .)


state 229

    (59) PROPIETARIO -> owner . igual id
    (60) PROPIETARIO -> owner . igual cadena
    (61) PROPIETARIO -> owner . igual cadenaString
    (62) PROPIETARIO -> owner . id
    (63) PROPIETARIO -> owner . cadena
    (64) PROPIETARIO -> owner . cadenaString

    igual           shift and go to state 304
    id              shift and go to state 305
    cadena          shift and go to state 306
    cadenaString    shift and go to state 307


state 230

    (65) MODO -> mode . igual int
    (66) MODO -> mode . int

    igual           shift and go to state 308
    int             shift and go to state 309


state 231

    (57) RD -> or replace databases .

    if              reduce using rule 57 (RD -> or replace databases .)
    id              reduce using rule 57 (RD -> or replace databases .)


state 232

    (131) LCAMPOS -> id . igual EXP

    igual           shift and go to state 310


state 233

    (129) UPDATE -> update id set LCAMPOS . where LEXP
    (130) LCAMPOS -> LCAMPOS . coma id igual EXP

    where           shift and go to state 311
    coma            shift and go to state 312


state 234

    (132) DELETE -> delete r_from EXP WHERE .

    ptcoma          reduce using rule 132 (DELETE -> delete r_from EXP WHERE .)


state 235

    (29) ALTER -> alter databases id rename . to id

    to              shift and go to state 313


state 236

    (30) ALTER -> alter databases id owner . to id

    to              shift and go to state 314


state 237

    (37) OP -> alter . column id set not null
    (38) OP -> alter . column id set null
    (46) alc -> alter . column id type TIPO

    column          shift and go to state 315


state 238

    (31) ALTER -> alter table id OP .

    ptcoma          reduce using rule 31 (ALTER -> alter table id OP .)


state 239

    (32) OP -> add . column id TIPO
    (33) OP -> add . check para CONDCHECK parc
    (34) OP -> add . constraint id unique para id parc
    (35) OP -> add . foreign key para LEXP parc references id para LEXP parc
    (36) OP -> add . constraint id foreign key para LEXP parc references id para LEXP parc

    column          shift and go to state 316
    check           shift and go to state 317
    constraint      shift and go to state 318
    foreign         shift and go to state 319


state 240

    (39) OP -> drop . constraint id
    (40) OP -> drop . column LEXP
    (41) OP -> drop . check id

    constraint      shift and go to state 320
    column          shift and go to state 321
    check           shift and go to state 322


state 241

    (42) OP -> rename . column id to id

    column          shift and go to state 323


state 242

    (43) OP -> listaalc .
    (44) listaalc -> listaalc . coma alc

    ptcoma          reduce using rule 43 (OP -> listaalc .)
    coma            shift and go to state 324


state 243

    (45) listaalc -> alc .

    coma            reduce using rule 45 (listaalc -> alc .)
    ptcoma          reduce using rule 45 (listaalc -> alc .)


state 244

    (25) DROP -> drop all para parc .

    ptcoma          reduce using rule 25 (DROP -> drop all para parc .)


state 245

    (27) DROP -> drop databases if exist . id

    id              shift and go to state 325


state 246

    (23) INSERT -> insert into id values . para LEXP parc

    para            shift and go to state 326


state 247

    (24) INSERT -> insert into id para . LEXP parc values para LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 327
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 248

    (17) CASE -> case LISTAWHEN ELSE end .

    use             reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    select          reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    create          reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    update          reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    delete          reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    alter           reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    drop            reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    insert          reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    case            reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    show            reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    $end            reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    r_from          reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    coma            reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    where           reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    group           reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    having          reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    union           reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    intersect       reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    except          reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    order           reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    limit           reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    offset          reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    ptcoma          reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    mas             reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    menos           reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    multiplicacion  reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    division        reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    modulo          reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    elevado         reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    and             reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    or              reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    mayor           reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    menor           reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    mayor_igual     reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    menor_igual     reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    igual           reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    diferente1      reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    diferente2      reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    between         reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    is              reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    isnull          reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    notnull         reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    as              reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    cadenaString    reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    id              reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    cadena          reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    in              reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    not             reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    like            reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    parc            reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    then            reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    end             reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    else            reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    when            reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    constraint      reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    unique          reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    check           reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    default         reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    null            reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    primary         reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    references      reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    asc             reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)
    desc            reduce using rule 17 (CASE -> case LISTAWHEN ELSE end .)


state 249

    (22) ELSE -> else LEXP .
    (135) LEXP -> LEXP . coma EXP

    end             reduce using rule 22 (ELSE -> else LEXP .)
    coma            shift and go to state 89


state 250

    (21) WHEN -> when LEXP then . LEXP
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 328
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 251

    (48) SHOW -> show tables para id . parc

    parc            shift and go to state 329


state 252

    (49) SHOW -> show collection para parc .

    ptcoma          reduce using rule 49 (SHOW -> show collection para parc .)


state 253

    (99) SELECT -> select distinct LEXP r_from LEXP . WHERE GROUP HAVING COMBINING ORDER LIMIT
    (135) LEXP -> LEXP . coma EXP
    (110) WHERE -> . where EXP
    (111) WHERE -> . where EXIST
    (112) WHERE -> .

  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for where resolved as shift
    coma            shift and go to state 89
    where           shift and go to state 90
    r_from          reduce using rule 112 (WHERE -> .)
    group           reduce using rule 112 (WHERE -> .)
    having          reduce using rule 112 (WHERE -> .)
    union           reduce using rule 112 (WHERE -> .)
    intersect       reduce using rule 112 (WHERE -> .)
    except          reduce using rule 112 (WHERE -> .)
    order           reduce using rule 112 (WHERE -> .)
    limit           reduce using rule 112 (WHERE -> .)
    offset          reduce using rule 112 (WHERE -> .)
    ptcoma          reduce using rule 112 (WHERE -> .)
    mas             reduce using rule 112 (WHERE -> .)
    menos           reduce using rule 112 (WHERE -> .)
    multiplicacion  reduce using rule 112 (WHERE -> .)
    division        reduce using rule 112 (WHERE -> .)
    modulo          reduce using rule 112 (WHERE -> .)
    elevado         reduce using rule 112 (WHERE -> .)
    and             reduce using rule 112 (WHERE -> .)
    or              reduce using rule 112 (WHERE -> .)
    mayor           reduce using rule 112 (WHERE -> .)
    menor           reduce using rule 112 (WHERE -> .)
    mayor_igual     reduce using rule 112 (WHERE -> .)
    menor_igual     reduce using rule 112 (WHERE -> .)
    igual           reduce using rule 112 (WHERE -> .)
    diferente1      reduce using rule 112 (WHERE -> .)
    diferente2      reduce using rule 112 (WHERE -> .)
    between         reduce using rule 112 (WHERE -> .)
    is              reduce using rule 112 (WHERE -> .)
    isnull          reduce using rule 112 (WHERE -> .)
    notnull         reduce using rule 112 (WHERE -> .)
    as              reduce using rule 112 (WHERE -> .)
    cadenaString    reduce using rule 112 (WHERE -> .)
    id              reduce using rule 112 (WHERE -> .)
    cadena          reduce using rule 112 (WHERE -> .)
    in              reduce using rule 112 (WHERE -> .)
    not             reduce using rule 112 (WHERE -> .)
    like            reduce using rule 112 (WHERE -> .)
    parc            reduce using rule 112 (WHERE -> .)
    then            reduce using rule 112 (WHERE -> .)
    end             reduce using rule 112 (WHERE -> .)
    else            reduce using rule 112 (WHERE -> .)
    when            reduce using rule 112 (WHERE -> .)
    constraint      reduce using rule 112 (WHERE -> .)
    unique          reduce using rule 112 (WHERE -> .)
    check           reduce using rule 112 (WHERE -> .)
    default         reduce using rule 112 (WHERE -> .)
    null            reduce using rule 112 (WHERE -> .)
    primary         reduce using rule 112 (WHERE -> .)
    references      reduce using rule 112 (WHERE -> .)
    asc             reduce using rule 112 (WHERE -> .)
    desc            reduce using rule 112 (WHERE -> .)

  ! coma            [ reduce using rule 112 (WHERE -> .) ]
  ! where           [ reduce using rule 112 (WHERE -> .) ]

    WHERE                          shift and go to state 330

state 254

    (100) SELECT -> select LEXP r_from LEXP WHERE . GROUP HAVING COMBINING ORDER LIMIT
    (120) GROUP -> . group by LEXP
    (121) GROUP -> .

  ! shift/reduce conflict for group resolved as shift
    group           shift and go to state 153
    r_from          reduce using rule 121 (GROUP -> .)
    coma            reduce using rule 121 (GROUP -> .)
    where           reduce using rule 121 (GROUP -> .)
    having          reduce using rule 121 (GROUP -> .)
    union           reduce using rule 121 (GROUP -> .)
    intersect       reduce using rule 121 (GROUP -> .)
    except          reduce using rule 121 (GROUP -> .)
    order           reduce using rule 121 (GROUP -> .)
    limit           reduce using rule 121 (GROUP -> .)
    offset          reduce using rule 121 (GROUP -> .)
    ptcoma          reduce using rule 121 (GROUP -> .)
    mas             reduce using rule 121 (GROUP -> .)
    menos           reduce using rule 121 (GROUP -> .)
    multiplicacion  reduce using rule 121 (GROUP -> .)
    division        reduce using rule 121 (GROUP -> .)
    modulo          reduce using rule 121 (GROUP -> .)
    elevado         reduce using rule 121 (GROUP -> .)
    and             reduce using rule 121 (GROUP -> .)
    or              reduce using rule 121 (GROUP -> .)
    mayor           reduce using rule 121 (GROUP -> .)
    menor           reduce using rule 121 (GROUP -> .)
    mayor_igual     reduce using rule 121 (GROUP -> .)
    menor_igual     reduce using rule 121 (GROUP -> .)
    igual           reduce using rule 121 (GROUP -> .)
    diferente1      reduce using rule 121 (GROUP -> .)
    diferente2      reduce using rule 121 (GROUP -> .)
    between         reduce using rule 121 (GROUP -> .)
    is              reduce using rule 121 (GROUP -> .)
    isnull          reduce using rule 121 (GROUP -> .)
    notnull         reduce using rule 121 (GROUP -> .)
    as              reduce using rule 121 (GROUP -> .)
    cadenaString    reduce using rule 121 (GROUP -> .)
    id              reduce using rule 121 (GROUP -> .)
    cadena          reduce using rule 121 (GROUP -> .)
    in              reduce using rule 121 (GROUP -> .)
    not             reduce using rule 121 (GROUP -> .)
    like            reduce using rule 121 (GROUP -> .)
    parc            reduce using rule 121 (GROUP -> .)
    then            reduce using rule 121 (GROUP -> .)
    end             reduce using rule 121 (GROUP -> .)
    else            reduce using rule 121 (GROUP -> .)
    when            reduce using rule 121 (GROUP -> .)
    constraint      reduce using rule 121 (GROUP -> .)
    unique          reduce using rule 121 (GROUP -> .)
    check           reduce using rule 121 (GROUP -> .)
    default         reduce using rule 121 (GROUP -> .)
    null            reduce using rule 121 (GROUP -> .)
    primary         reduce using rule 121 (GROUP -> .)
    references      reduce using rule 121 (GROUP -> .)
    asc             reduce using rule 121 (GROUP -> .)
    desc            reduce using rule 121 (GROUP -> .)

  ! group           [ reduce using rule 121 (GROUP -> .) ]

    GROUP                          shift and go to state 331

state 255

    (101) SELECT -> select LEXP WHERE GROUP HAVING . COMBINING ORDER LIMIT
    (113) COMBINING -> . union EXP
    (114) COMBINING -> . union all EXP
    (115) COMBINING -> . intersect EXP
    (116) COMBINING -> . intersect all EXP
    (117) COMBINING -> . except EXP
    (118) COMBINING -> . except all EXP
    (119) COMBINING -> .

  ! shift/reduce conflict for union resolved as shift
  ! shift/reduce conflict for intersect resolved as shift
  ! shift/reduce conflict for except resolved as shift
    union           shift and go to state 333
    intersect       shift and go to state 334
    except          shift and go to state 335
    r_from          reduce using rule 119 (COMBINING -> .)
    coma            reduce using rule 119 (COMBINING -> .)
    where           reduce using rule 119 (COMBINING -> .)
    group           reduce using rule 119 (COMBINING -> .)
    having          reduce using rule 119 (COMBINING -> .)
    order           reduce using rule 119 (COMBINING -> .)
    limit           reduce using rule 119 (COMBINING -> .)
    offset          reduce using rule 119 (COMBINING -> .)
    ptcoma          reduce using rule 119 (COMBINING -> .)
    mas             reduce using rule 119 (COMBINING -> .)
    menos           reduce using rule 119 (COMBINING -> .)
    multiplicacion  reduce using rule 119 (COMBINING -> .)
    division        reduce using rule 119 (COMBINING -> .)
    modulo          reduce using rule 119 (COMBINING -> .)
    elevado         reduce using rule 119 (COMBINING -> .)
    and             reduce using rule 119 (COMBINING -> .)
    or              reduce using rule 119 (COMBINING -> .)
    mayor           reduce using rule 119 (COMBINING -> .)
    menor           reduce using rule 119 (COMBINING -> .)
    mayor_igual     reduce using rule 119 (COMBINING -> .)
    menor_igual     reduce using rule 119 (COMBINING -> .)
    igual           reduce using rule 119 (COMBINING -> .)
    diferente1      reduce using rule 119 (COMBINING -> .)
    diferente2      reduce using rule 119 (COMBINING -> .)
    between         reduce using rule 119 (COMBINING -> .)
    is              reduce using rule 119 (COMBINING -> .)
    isnull          reduce using rule 119 (COMBINING -> .)
    notnull         reduce using rule 119 (COMBINING -> .)
    as              reduce using rule 119 (COMBINING -> .)
    cadenaString    reduce using rule 119 (COMBINING -> .)
    id              reduce using rule 119 (COMBINING -> .)
    cadena          reduce using rule 119 (COMBINING -> .)
    in              reduce using rule 119 (COMBINING -> .)
    not             reduce using rule 119 (COMBINING -> .)
    like            reduce using rule 119 (COMBINING -> .)
    parc            reduce using rule 119 (COMBINING -> .)
    then            reduce using rule 119 (COMBINING -> .)
    end             reduce using rule 119 (COMBINING -> .)
    else            reduce using rule 119 (COMBINING -> .)
    when            reduce using rule 119 (COMBINING -> .)
    constraint      reduce using rule 119 (COMBINING -> .)
    unique          reduce using rule 119 (COMBINING -> .)
    check           reduce using rule 119 (COMBINING -> .)
    default         reduce using rule 119 (COMBINING -> .)
    null            reduce using rule 119 (COMBINING -> .)
    primary         reduce using rule 119 (COMBINING -> .)
    references      reduce using rule 119 (COMBINING -> .)
    asc             reduce using rule 119 (COMBINING -> .)
    desc            reduce using rule 119 (COMBINING -> .)

  ! union           [ reduce using rule 119 (COMBINING -> .) ]
  ! intersect       [ reduce using rule 119 (COMBINING -> .) ]
  ! except          [ reduce using rule 119 (COMBINING -> .) ]

    COMBINING                      shift and go to state 332

state 256

    (122) HAVING -> having . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 336
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 257

    (120) GROUP -> group by . LEXP
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 337
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 258

    (134) EXIST -> not exist . para SELECT parc

    para            shift and go to state 338


state 259

    (133) EXIST -> exist para . SELECT parc
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    select          shift and go to state 17

    SELECT                         shift and go to state 339

state 260

    (218) EXP -> EXP between symetric EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    r_from          reduce using rule 218 (EXP -> EXP between symetric EXP .)
    coma            reduce using rule 218 (EXP -> EXP between symetric EXP .)
    where           reduce using rule 218 (EXP -> EXP between symetric EXP .)
    group           reduce using rule 218 (EXP -> EXP between symetric EXP .)
    having          reduce using rule 218 (EXP -> EXP between symetric EXP .)
    union           reduce using rule 218 (EXP -> EXP between symetric EXP .)
    intersect       reduce using rule 218 (EXP -> EXP between symetric EXP .)
    except          reduce using rule 218 (EXP -> EXP between symetric EXP .)
    order           reduce using rule 218 (EXP -> EXP between symetric EXP .)
    limit           reduce using rule 218 (EXP -> EXP between symetric EXP .)
    offset          reduce using rule 218 (EXP -> EXP between symetric EXP .)
    ptcoma          reduce using rule 218 (EXP -> EXP between symetric EXP .)
    and             reduce using rule 218 (EXP -> EXP between symetric EXP .)
    or              reduce using rule 218 (EXP -> EXP between symetric EXP .)
    between         reduce using rule 218 (EXP -> EXP between symetric EXP .)
    is              reduce using rule 218 (EXP -> EXP between symetric EXP .)
    isnull          reduce using rule 218 (EXP -> EXP between symetric EXP .)
    notnull         reduce using rule 218 (EXP -> EXP between symetric EXP .)
    as              reduce using rule 218 (EXP -> EXP between symetric EXP .)
    cadenaString    reduce using rule 218 (EXP -> EXP between symetric EXP .)
    id              reduce using rule 218 (EXP -> EXP between symetric EXP .)
    cadena          reduce using rule 218 (EXP -> EXP between symetric EXP .)
    in              reduce using rule 218 (EXP -> EXP between symetric EXP .)
    not             reduce using rule 218 (EXP -> EXP between symetric EXP .)
    like            reduce using rule 218 (EXP -> EXP between symetric EXP .)
    parc            reduce using rule 218 (EXP -> EXP between symetric EXP .)
    then            reduce using rule 218 (EXP -> EXP between symetric EXP .)
    end             reduce using rule 218 (EXP -> EXP between symetric EXP .)
    else            reduce using rule 218 (EXP -> EXP between symetric EXP .)
    when            reduce using rule 218 (EXP -> EXP between symetric EXP .)
    constraint      reduce using rule 218 (EXP -> EXP between symetric EXP .)
    unique          reduce using rule 218 (EXP -> EXP between symetric EXP .)
    check           reduce using rule 218 (EXP -> EXP between symetric EXP .)
    default         reduce using rule 218 (EXP -> EXP between symetric EXP .)
    null            reduce using rule 218 (EXP -> EXP between symetric EXP .)
    primary         reduce using rule 218 (EXP -> EXP between symetric EXP .)
    references      reduce using rule 218 (EXP -> EXP between symetric EXP .)
    asc             reduce using rule 218 (EXP -> EXP between symetric EXP .)
    desc            reduce using rule 218 (EXP -> EXP between symetric EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105

  ! mas             [ reduce using rule 218 (EXP -> EXP between symetric EXP .) ]
  ! menos           [ reduce using rule 218 (EXP -> EXP between symetric EXP .) ]
  ! multiplicacion  [ reduce using rule 218 (EXP -> EXP between symetric EXP .) ]
  ! division        [ reduce using rule 218 (EXP -> EXP between symetric EXP .) ]
  ! modulo          [ reduce using rule 218 (EXP -> EXP between symetric EXP .) ]
  ! elevado         [ reduce using rule 218 (EXP -> EXP between symetric EXP .) ]
  ! mayor           [ reduce using rule 218 (EXP -> EXP between symetric EXP .) ]
  ! menor           [ reduce using rule 218 (EXP -> EXP between symetric EXP .) ]
  ! mayor_igual     [ reduce using rule 218 (EXP -> EXP between symetric EXP .) ]
  ! menor_igual     [ reduce using rule 218 (EXP -> EXP between symetric EXP .) ]
  ! igual           [ reduce using rule 218 (EXP -> EXP between symetric EXP .) ]
  ! diferente1      [ reduce using rule 218 (EXP -> EXP between symetric EXP .) ]
  ! diferente2      [ reduce using rule 218 (EXP -> EXP between symetric EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]
  ! as              [ shift and go to state 111 ]
  ! cadenaString    [ shift and go to state 112 ]
  ! id              [ shift and go to state 113 ]
  ! cadena          [ shift and go to state 114 ]
  ! in              [ shift and go to state 115 ]
  ! not             [ shift and go to state 108 ]
  ! like            [ shift and go to state 116 ]


state 261

    (196) EXP -> EXP is not null .

    r_from          reduce using rule 196 (EXP -> EXP is not null .)
    coma            reduce using rule 196 (EXP -> EXP is not null .)
    where           reduce using rule 196 (EXP -> EXP is not null .)
    group           reduce using rule 196 (EXP -> EXP is not null .)
    having          reduce using rule 196 (EXP -> EXP is not null .)
    union           reduce using rule 196 (EXP -> EXP is not null .)
    intersect       reduce using rule 196 (EXP -> EXP is not null .)
    except          reduce using rule 196 (EXP -> EXP is not null .)
    order           reduce using rule 196 (EXP -> EXP is not null .)
    limit           reduce using rule 196 (EXP -> EXP is not null .)
    offset          reduce using rule 196 (EXP -> EXP is not null .)
    ptcoma          reduce using rule 196 (EXP -> EXP is not null .)
    mas             reduce using rule 196 (EXP -> EXP is not null .)
    menos           reduce using rule 196 (EXP -> EXP is not null .)
    multiplicacion  reduce using rule 196 (EXP -> EXP is not null .)
    division        reduce using rule 196 (EXP -> EXP is not null .)
    modulo          reduce using rule 196 (EXP -> EXP is not null .)
    elevado         reduce using rule 196 (EXP -> EXP is not null .)
    and             reduce using rule 196 (EXP -> EXP is not null .)
    or              reduce using rule 196 (EXP -> EXP is not null .)
    mayor           reduce using rule 196 (EXP -> EXP is not null .)
    menor           reduce using rule 196 (EXP -> EXP is not null .)
    mayor_igual     reduce using rule 196 (EXP -> EXP is not null .)
    menor_igual     reduce using rule 196 (EXP -> EXP is not null .)
    igual           reduce using rule 196 (EXP -> EXP is not null .)
    diferente1      reduce using rule 196 (EXP -> EXP is not null .)
    diferente2      reduce using rule 196 (EXP -> EXP is not null .)
    between         reduce using rule 196 (EXP -> EXP is not null .)
    is              reduce using rule 196 (EXP -> EXP is not null .)
    isnull          reduce using rule 196 (EXP -> EXP is not null .)
    notnull         reduce using rule 196 (EXP -> EXP is not null .)
    as              reduce using rule 196 (EXP -> EXP is not null .)
    cadenaString    reduce using rule 196 (EXP -> EXP is not null .)
    id              reduce using rule 196 (EXP -> EXP is not null .)
    cadena          reduce using rule 196 (EXP -> EXP is not null .)
    in              reduce using rule 196 (EXP -> EXP is not null .)
    not             reduce using rule 196 (EXP -> EXP is not null .)
    like            reduce using rule 196 (EXP -> EXP is not null .)
    parc            reduce using rule 196 (EXP -> EXP is not null .)
    then            reduce using rule 196 (EXP -> EXP is not null .)
    end             reduce using rule 196 (EXP -> EXP is not null .)
    else            reduce using rule 196 (EXP -> EXP is not null .)
    when            reduce using rule 196 (EXP -> EXP is not null .)
    constraint      reduce using rule 196 (EXP -> EXP is not null .)
    unique          reduce using rule 196 (EXP -> EXP is not null .)
    check           reduce using rule 196 (EXP -> EXP is not null .)
    default         reduce using rule 196 (EXP -> EXP is not null .)
    null            reduce using rule 196 (EXP -> EXP is not null .)
    primary         reduce using rule 196 (EXP -> EXP is not null .)
    references      reduce using rule 196 (EXP -> EXP is not null .)
    asc             reduce using rule 196 (EXP -> EXP is not null .)
    desc            reduce using rule 196 (EXP -> EXP is not null .)


state 262

    (201) EXP -> EXP is not true .

    r_from          reduce using rule 201 (EXP -> EXP is not true .)
    coma            reduce using rule 201 (EXP -> EXP is not true .)
    where           reduce using rule 201 (EXP -> EXP is not true .)
    group           reduce using rule 201 (EXP -> EXP is not true .)
    having          reduce using rule 201 (EXP -> EXP is not true .)
    union           reduce using rule 201 (EXP -> EXP is not true .)
    intersect       reduce using rule 201 (EXP -> EXP is not true .)
    except          reduce using rule 201 (EXP -> EXP is not true .)
    order           reduce using rule 201 (EXP -> EXP is not true .)
    limit           reduce using rule 201 (EXP -> EXP is not true .)
    offset          reduce using rule 201 (EXP -> EXP is not true .)
    ptcoma          reduce using rule 201 (EXP -> EXP is not true .)
    mas             reduce using rule 201 (EXP -> EXP is not true .)
    menos           reduce using rule 201 (EXP -> EXP is not true .)
    multiplicacion  reduce using rule 201 (EXP -> EXP is not true .)
    division        reduce using rule 201 (EXP -> EXP is not true .)
    modulo          reduce using rule 201 (EXP -> EXP is not true .)
    elevado         reduce using rule 201 (EXP -> EXP is not true .)
    and             reduce using rule 201 (EXP -> EXP is not true .)
    or              reduce using rule 201 (EXP -> EXP is not true .)
    mayor           reduce using rule 201 (EXP -> EXP is not true .)
    menor           reduce using rule 201 (EXP -> EXP is not true .)
    mayor_igual     reduce using rule 201 (EXP -> EXP is not true .)
    menor_igual     reduce using rule 201 (EXP -> EXP is not true .)
    igual           reduce using rule 201 (EXP -> EXP is not true .)
    diferente1      reduce using rule 201 (EXP -> EXP is not true .)
    diferente2      reduce using rule 201 (EXP -> EXP is not true .)
    between         reduce using rule 201 (EXP -> EXP is not true .)
    is              reduce using rule 201 (EXP -> EXP is not true .)
    isnull          reduce using rule 201 (EXP -> EXP is not true .)
    notnull         reduce using rule 201 (EXP -> EXP is not true .)
    as              reduce using rule 201 (EXP -> EXP is not true .)
    cadenaString    reduce using rule 201 (EXP -> EXP is not true .)
    id              reduce using rule 201 (EXP -> EXP is not true .)
    cadena          reduce using rule 201 (EXP -> EXP is not true .)
    in              reduce using rule 201 (EXP -> EXP is not true .)
    not             reduce using rule 201 (EXP -> EXP is not true .)
    like            reduce using rule 201 (EXP -> EXP is not true .)
    parc            reduce using rule 201 (EXP -> EXP is not true .)
    then            reduce using rule 201 (EXP -> EXP is not true .)
    end             reduce using rule 201 (EXP -> EXP is not true .)
    else            reduce using rule 201 (EXP -> EXP is not true .)
    when            reduce using rule 201 (EXP -> EXP is not true .)
    constraint      reduce using rule 201 (EXP -> EXP is not true .)
    unique          reduce using rule 201 (EXP -> EXP is not true .)
    check           reduce using rule 201 (EXP -> EXP is not true .)
    default         reduce using rule 201 (EXP -> EXP is not true .)
    null            reduce using rule 201 (EXP -> EXP is not true .)
    primary         reduce using rule 201 (EXP -> EXP is not true .)
    references      reduce using rule 201 (EXP -> EXP is not true .)
    asc             reduce using rule 201 (EXP -> EXP is not true .)
    desc            reduce using rule 201 (EXP -> EXP is not true .)


state 263

    (203) EXP -> EXP is not false .

    r_from          reduce using rule 203 (EXP -> EXP is not false .)
    coma            reduce using rule 203 (EXP -> EXP is not false .)
    where           reduce using rule 203 (EXP -> EXP is not false .)
    group           reduce using rule 203 (EXP -> EXP is not false .)
    having          reduce using rule 203 (EXP -> EXP is not false .)
    union           reduce using rule 203 (EXP -> EXP is not false .)
    intersect       reduce using rule 203 (EXP -> EXP is not false .)
    except          reduce using rule 203 (EXP -> EXP is not false .)
    order           reduce using rule 203 (EXP -> EXP is not false .)
    limit           reduce using rule 203 (EXP -> EXP is not false .)
    offset          reduce using rule 203 (EXP -> EXP is not false .)
    ptcoma          reduce using rule 203 (EXP -> EXP is not false .)
    mas             reduce using rule 203 (EXP -> EXP is not false .)
    menos           reduce using rule 203 (EXP -> EXP is not false .)
    multiplicacion  reduce using rule 203 (EXP -> EXP is not false .)
    division        reduce using rule 203 (EXP -> EXP is not false .)
    modulo          reduce using rule 203 (EXP -> EXP is not false .)
    elevado         reduce using rule 203 (EXP -> EXP is not false .)
    and             reduce using rule 203 (EXP -> EXP is not false .)
    or              reduce using rule 203 (EXP -> EXP is not false .)
    mayor           reduce using rule 203 (EXP -> EXP is not false .)
    menor           reduce using rule 203 (EXP -> EXP is not false .)
    mayor_igual     reduce using rule 203 (EXP -> EXP is not false .)
    menor_igual     reduce using rule 203 (EXP -> EXP is not false .)
    igual           reduce using rule 203 (EXP -> EXP is not false .)
    diferente1      reduce using rule 203 (EXP -> EXP is not false .)
    diferente2      reduce using rule 203 (EXP -> EXP is not false .)
    between         reduce using rule 203 (EXP -> EXP is not false .)
    is              reduce using rule 203 (EXP -> EXP is not false .)
    isnull          reduce using rule 203 (EXP -> EXP is not false .)
    notnull         reduce using rule 203 (EXP -> EXP is not false .)
    as              reduce using rule 203 (EXP -> EXP is not false .)
    cadenaString    reduce using rule 203 (EXP -> EXP is not false .)
    id              reduce using rule 203 (EXP -> EXP is not false .)
    cadena          reduce using rule 203 (EXP -> EXP is not false .)
    in              reduce using rule 203 (EXP -> EXP is not false .)
    not             reduce using rule 203 (EXP -> EXP is not false .)
    like            reduce using rule 203 (EXP -> EXP is not false .)
    parc            reduce using rule 203 (EXP -> EXP is not false .)
    then            reduce using rule 203 (EXP -> EXP is not false .)
    end             reduce using rule 203 (EXP -> EXP is not false .)
    else            reduce using rule 203 (EXP -> EXP is not false .)
    when            reduce using rule 203 (EXP -> EXP is not false .)
    constraint      reduce using rule 203 (EXP -> EXP is not false .)
    unique          reduce using rule 203 (EXP -> EXP is not false .)
    check           reduce using rule 203 (EXP -> EXP is not false .)
    default         reduce using rule 203 (EXP -> EXP is not false .)
    null            reduce using rule 203 (EXP -> EXP is not false .)
    primary         reduce using rule 203 (EXP -> EXP is not false .)
    references      reduce using rule 203 (EXP -> EXP is not false .)
    asc             reduce using rule 203 (EXP -> EXP is not false .)
    desc            reduce using rule 203 (EXP -> EXP is not false .)


state 264

    (205) EXP -> EXP is not unknown .

    r_from          reduce using rule 205 (EXP -> EXP is not unknown .)
    coma            reduce using rule 205 (EXP -> EXP is not unknown .)
    where           reduce using rule 205 (EXP -> EXP is not unknown .)
    group           reduce using rule 205 (EXP -> EXP is not unknown .)
    having          reduce using rule 205 (EXP -> EXP is not unknown .)
    union           reduce using rule 205 (EXP -> EXP is not unknown .)
    intersect       reduce using rule 205 (EXP -> EXP is not unknown .)
    except          reduce using rule 205 (EXP -> EXP is not unknown .)
    order           reduce using rule 205 (EXP -> EXP is not unknown .)
    limit           reduce using rule 205 (EXP -> EXP is not unknown .)
    offset          reduce using rule 205 (EXP -> EXP is not unknown .)
    ptcoma          reduce using rule 205 (EXP -> EXP is not unknown .)
    mas             reduce using rule 205 (EXP -> EXP is not unknown .)
    menos           reduce using rule 205 (EXP -> EXP is not unknown .)
    multiplicacion  reduce using rule 205 (EXP -> EXP is not unknown .)
    division        reduce using rule 205 (EXP -> EXP is not unknown .)
    modulo          reduce using rule 205 (EXP -> EXP is not unknown .)
    elevado         reduce using rule 205 (EXP -> EXP is not unknown .)
    and             reduce using rule 205 (EXP -> EXP is not unknown .)
    or              reduce using rule 205 (EXP -> EXP is not unknown .)
    mayor           reduce using rule 205 (EXP -> EXP is not unknown .)
    menor           reduce using rule 205 (EXP -> EXP is not unknown .)
    mayor_igual     reduce using rule 205 (EXP -> EXP is not unknown .)
    menor_igual     reduce using rule 205 (EXP -> EXP is not unknown .)
    igual           reduce using rule 205 (EXP -> EXP is not unknown .)
    diferente1      reduce using rule 205 (EXP -> EXP is not unknown .)
    diferente2      reduce using rule 205 (EXP -> EXP is not unknown .)
    between         reduce using rule 205 (EXP -> EXP is not unknown .)
    is              reduce using rule 205 (EXP -> EXP is not unknown .)
    isnull          reduce using rule 205 (EXP -> EXP is not unknown .)
    notnull         reduce using rule 205 (EXP -> EXP is not unknown .)
    as              reduce using rule 205 (EXP -> EXP is not unknown .)
    cadenaString    reduce using rule 205 (EXP -> EXP is not unknown .)
    id              reduce using rule 205 (EXP -> EXP is not unknown .)
    cadena          reduce using rule 205 (EXP -> EXP is not unknown .)
    in              reduce using rule 205 (EXP -> EXP is not unknown .)
    not             reduce using rule 205 (EXP -> EXP is not unknown .)
    like            reduce using rule 205 (EXP -> EXP is not unknown .)
    parc            reduce using rule 205 (EXP -> EXP is not unknown .)
    then            reduce using rule 205 (EXP -> EXP is not unknown .)
    end             reduce using rule 205 (EXP -> EXP is not unknown .)
    else            reduce using rule 205 (EXP -> EXP is not unknown .)
    when            reduce using rule 205 (EXP -> EXP is not unknown .)
    constraint      reduce using rule 205 (EXP -> EXP is not unknown .)
    unique          reduce using rule 205 (EXP -> EXP is not unknown .)
    check           reduce using rule 205 (EXP -> EXP is not unknown .)
    default         reduce using rule 205 (EXP -> EXP is not unknown .)
    null            reduce using rule 205 (EXP -> EXP is not unknown .)
    primary         reduce using rule 205 (EXP -> EXP is not unknown .)
    references      reduce using rule 205 (EXP -> EXP is not unknown .)
    asc             reduce using rule 205 (EXP -> EXP is not unknown .)
    desc            reduce using rule 205 (EXP -> EXP is not unknown .)


state 265

    (221) EXP -> EXP is not distinct . r_from EXP

    r_from          shift and go to state 340


state 266

    (220) EXP -> EXP is distinct r_from . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 341
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 267

    (216) EXP -> EXP not in para . EXP parc
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 342
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 268

    (217) EXP -> EXP not between EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    r_from          reduce using rule 217 (EXP -> EXP not between EXP .)
    coma            reduce using rule 217 (EXP -> EXP not between EXP .)
    where           reduce using rule 217 (EXP -> EXP not between EXP .)
    group           reduce using rule 217 (EXP -> EXP not between EXP .)
    having          reduce using rule 217 (EXP -> EXP not between EXP .)
    union           reduce using rule 217 (EXP -> EXP not between EXP .)
    intersect       reduce using rule 217 (EXP -> EXP not between EXP .)
    except          reduce using rule 217 (EXP -> EXP not between EXP .)
    order           reduce using rule 217 (EXP -> EXP not between EXP .)
    limit           reduce using rule 217 (EXP -> EXP not between EXP .)
    offset          reduce using rule 217 (EXP -> EXP not between EXP .)
    ptcoma          reduce using rule 217 (EXP -> EXP not between EXP .)
    and             reduce using rule 217 (EXP -> EXP not between EXP .)
    or              reduce using rule 217 (EXP -> EXP not between EXP .)
    between         reduce using rule 217 (EXP -> EXP not between EXP .)
    is              reduce using rule 217 (EXP -> EXP not between EXP .)
    isnull          reduce using rule 217 (EXP -> EXP not between EXP .)
    notnull         reduce using rule 217 (EXP -> EXP not between EXP .)
    as              reduce using rule 217 (EXP -> EXP not between EXP .)
    cadenaString    reduce using rule 217 (EXP -> EXP not between EXP .)
    id              reduce using rule 217 (EXP -> EXP not between EXP .)
    cadena          reduce using rule 217 (EXP -> EXP not between EXP .)
    in              reduce using rule 217 (EXP -> EXP not between EXP .)
    not             reduce using rule 217 (EXP -> EXP not between EXP .)
    like            reduce using rule 217 (EXP -> EXP not between EXP .)
    parc            reduce using rule 217 (EXP -> EXP not between EXP .)
    then            reduce using rule 217 (EXP -> EXP not between EXP .)
    end             reduce using rule 217 (EXP -> EXP not between EXP .)
    else            reduce using rule 217 (EXP -> EXP not between EXP .)
    when            reduce using rule 217 (EXP -> EXP not between EXP .)
    constraint      reduce using rule 217 (EXP -> EXP not between EXP .)
    unique          reduce using rule 217 (EXP -> EXP not between EXP .)
    check           reduce using rule 217 (EXP -> EXP not between EXP .)
    default         reduce using rule 217 (EXP -> EXP not between EXP .)
    null            reduce using rule 217 (EXP -> EXP not between EXP .)
    primary         reduce using rule 217 (EXP -> EXP not between EXP .)
    references      reduce using rule 217 (EXP -> EXP not between EXP .)
    asc             reduce using rule 217 (EXP -> EXP not between EXP .)
    desc            reduce using rule 217 (EXP -> EXP not between EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105

  ! mas             [ reduce using rule 217 (EXP -> EXP not between EXP .) ]
  ! menos           [ reduce using rule 217 (EXP -> EXP not between EXP .) ]
  ! multiplicacion  [ reduce using rule 217 (EXP -> EXP not between EXP .) ]
  ! division        [ reduce using rule 217 (EXP -> EXP not between EXP .) ]
  ! modulo          [ reduce using rule 217 (EXP -> EXP not between EXP .) ]
  ! elevado         [ reduce using rule 217 (EXP -> EXP not between EXP .) ]
  ! mayor           [ reduce using rule 217 (EXP -> EXP not between EXP .) ]
  ! menor           [ reduce using rule 217 (EXP -> EXP not between EXP .) ]
  ! mayor_igual     [ reduce using rule 217 (EXP -> EXP not between EXP .) ]
  ! menor_igual     [ reduce using rule 217 (EXP -> EXP not between EXP .) ]
  ! igual           [ reduce using rule 217 (EXP -> EXP not between EXP .) ]
  ! diferente1      [ reduce using rule 217 (EXP -> EXP not between EXP .) ]
  ! diferente2      [ reduce using rule 217 (EXP -> EXP not between EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]
  ! as              [ shift and go to state 111 ]
  ! cadenaString    [ shift and go to state 112 ]
  ! id              [ shift and go to state 113 ]
  ! cadena          [ shift and go to state 114 ]
  ! in              [ shift and go to state 115 ]
  ! not             [ shift and go to state 108 ]
  ! like            [ shift and go to state 116 ]


state 269

    (219) EXP -> EXP not between symetric . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 343
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 270

    (223) EXP -> EXP not like cadena .

    r_from          reduce using rule 223 (EXP -> EXP not like cadena .)
    coma            reduce using rule 223 (EXP -> EXP not like cadena .)
    where           reduce using rule 223 (EXP -> EXP not like cadena .)
    group           reduce using rule 223 (EXP -> EXP not like cadena .)
    having          reduce using rule 223 (EXP -> EXP not like cadena .)
    union           reduce using rule 223 (EXP -> EXP not like cadena .)
    intersect       reduce using rule 223 (EXP -> EXP not like cadena .)
    except          reduce using rule 223 (EXP -> EXP not like cadena .)
    order           reduce using rule 223 (EXP -> EXP not like cadena .)
    limit           reduce using rule 223 (EXP -> EXP not like cadena .)
    offset          reduce using rule 223 (EXP -> EXP not like cadena .)
    ptcoma          reduce using rule 223 (EXP -> EXP not like cadena .)
    mas             reduce using rule 223 (EXP -> EXP not like cadena .)
    menos           reduce using rule 223 (EXP -> EXP not like cadena .)
    multiplicacion  reduce using rule 223 (EXP -> EXP not like cadena .)
    division        reduce using rule 223 (EXP -> EXP not like cadena .)
    modulo          reduce using rule 223 (EXP -> EXP not like cadena .)
    elevado         reduce using rule 223 (EXP -> EXP not like cadena .)
    and             reduce using rule 223 (EXP -> EXP not like cadena .)
    or              reduce using rule 223 (EXP -> EXP not like cadena .)
    mayor           reduce using rule 223 (EXP -> EXP not like cadena .)
    menor           reduce using rule 223 (EXP -> EXP not like cadena .)
    mayor_igual     reduce using rule 223 (EXP -> EXP not like cadena .)
    menor_igual     reduce using rule 223 (EXP -> EXP not like cadena .)
    igual           reduce using rule 223 (EXP -> EXP not like cadena .)
    diferente1      reduce using rule 223 (EXP -> EXP not like cadena .)
    diferente2      reduce using rule 223 (EXP -> EXP not like cadena .)
    between         reduce using rule 223 (EXP -> EXP not like cadena .)
    is              reduce using rule 223 (EXP -> EXP not like cadena .)
    isnull          reduce using rule 223 (EXP -> EXP not like cadena .)
    notnull         reduce using rule 223 (EXP -> EXP not like cadena .)
    as              reduce using rule 223 (EXP -> EXP not like cadena .)
    cadenaString    reduce using rule 223 (EXP -> EXP not like cadena .)
    id              reduce using rule 223 (EXP -> EXP not like cadena .)
    cadena          reduce using rule 223 (EXP -> EXP not like cadena .)
    in              reduce using rule 223 (EXP -> EXP not like cadena .)
    not             reduce using rule 223 (EXP -> EXP not like cadena .)
    like            reduce using rule 223 (EXP -> EXP not like cadena .)
    parc            reduce using rule 223 (EXP -> EXP not like cadena .)
    then            reduce using rule 223 (EXP -> EXP not like cadena .)
    end             reduce using rule 223 (EXP -> EXP not like cadena .)
    else            reduce using rule 223 (EXP -> EXP not like cadena .)
    when            reduce using rule 223 (EXP -> EXP not like cadena .)
    constraint      reduce using rule 223 (EXP -> EXP not like cadena .)
    unique          reduce using rule 223 (EXP -> EXP not like cadena .)
    check           reduce using rule 223 (EXP -> EXP not like cadena .)
    default         reduce using rule 223 (EXP -> EXP not like cadena .)
    null            reduce using rule 223 (EXP -> EXP not like cadena .)
    primary         reduce using rule 223 (EXP -> EXP not like cadena .)
    references      reduce using rule 223 (EXP -> EXP not like cadena .)
    asc             reduce using rule 223 (EXP -> EXP not like cadena .)
    desc            reduce using rule 223 (EXP -> EXP not like cadena .)


state 271

    (215) EXP -> EXP in para EXP . parc
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    parc            shift and go to state 344
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    and             shift and go to state 97
    or              shift and go to state 98
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105
    between         shift and go to state 106
    is              shift and go to state 107
    isnull          shift and go to state 109
    notnull         shift and go to state 110
    as              shift and go to state 111
    cadenaString    shift and go to state 112
    id              shift and go to state 113
    cadena          shift and go to state 114
    in              shift and go to state 115
    not             shift and go to state 108
    like            shift and go to state 116


state 272

    (227) EXP -> id para LEXP parc .

    r_from          reduce using rule 227 (EXP -> id para LEXP parc .)
    coma            reduce using rule 227 (EXP -> id para LEXP parc .)
    where           reduce using rule 227 (EXP -> id para LEXP parc .)
    group           reduce using rule 227 (EXP -> id para LEXP parc .)
    having          reduce using rule 227 (EXP -> id para LEXP parc .)
    union           reduce using rule 227 (EXP -> id para LEXP parc .)
    intersect       reduce using rule 227 (EXP -> id para LEXP parc .)
    except          reduce using rule 227 (EXP -> id para LEXP parc .)
    order           reduce using rule 227 (EXP -> id para LEXP parc .)
    limit           reduce using rule 227 (EXP -> id para LEXP parc .)
    offset          reduce using rule 227 (EXP -> id para LEXP parc .)
    ptcoma          reduce using rule 227 (EXP -> id para LEXP parc .)
    mas             reduce using rule 227 (EXP -> id para LEXP parc .)
    menos           reduce using rule 227 (EXP -> id para LEXP parc .)
    multiplicacion  reduce using rule 227 (EXP -> id para LEXP parc .)
    division        reduce using rule 227 (EXP -> id para LEXP parc .)
    modulo          reduce using rule 227 (EXP -> id para LEXP parc .)
    elevado         reduce using rule 227 (EXP -> id para LEXP parc .)
    and             reduce using rule 227 (EXP -> id para LEXP parc .)
    or              reduce using rule 227 (EXP -> id para LEXP parc .)
    mayor           reduce using rule 227 (EXP -> id para LEXP parc .)
    menor           reduce using rule 227 (EXP -> id para LEXP parc .)
    mayor_igual     reduce using rule 227 (EXP -> id para LEXP parc .)
    menor_igual     reduce using rule 227 (EXP -> id para LEXP parc .)
    igual           reduce using rule 227 (EXP -> id para LEXP parc .)
    diferente1      reduce using rule 227 (EXP -> id para LEXP parc .)
    diferente2      reduce using rule 227 (EXP -> id para LEXP parc .)
    between         reduce using rule 227 (EXP -> id para LEXP parc .)
    is              reduce using rule 227 (EXP -> id para LEXP parc .)
    isnull          reduce using rule 227 (EXP -> id para LEXP parc .)
    notnull         reduce using rule 227 (EXP -> id para LEXP parc .)
    as              reduce using rule 227 (EXP -> id para LEXP parc .)
    cadenaString    reduce using rule 227 (EXP -> id para LEXP parc .)
    id              reduce using rule 227 (EXP -> id para LEXP parc .)
    cadena          reduce using rule 227 (EXP -> id para LEXP parc .)
    in              reduce using rule 227 (EXP -> id para LEXP parc .)
    not             reduce using rule 227 (EXP -> id para LEXP parc .)
    like            reduce using rule 227 (EXP -> id para LEXP parc .)
    parc            reduce using rule 227 (EXP -> id para LEXP parc .)
    then            reduce using rule 227 (EXP -> id para LEXP parc .)
    end             reduce using rule 227 (EXP -> id para LEXP parc .)
    else            reduce using rule 227 (EXP -> id para LEXP parc .)
    when            reduce using rule 227 (EXP -> id para LEXP parc .)
    constraint      reduce using rule 227 (EXP -> id para LEXP parc .)
    unique          reduce using rule 227 (EXP -> id para LEXP parc .)
    check           reduce using rule 227 (EXP -> id para LEXP parc .)
    default         reduce using rule 227 (EXP -> id para LEXP parc .)
    null            reduce using rule 227 (EXP -> id para LEXP parc .)
    primary         reduce using rule 227 (EXP -> id para LEXP parc .)
    references      reduce using rule 227 (EXP -> id para LEXP parc .)
    asc             reduce using rule 227 (EXP -> id para LEXP parc .)
    desc            reduce using rule 227 (EXP -> id para LEXP parc .)


state 273

    (137) TIPO -> interval cadena .

    r_from          reduce using rule 137 (TIPO -> interval cadena .)
    coma            reduce using rule 137 (TIPO -> interval cadena .)
    where           reduce using rule 137 (TIPO -> interval cadena .)
    group           reduce using rule 137 (TIPO -> interval cadena .)
    having          reduce using rule 137 (TIPO -> interval cadena .)
    union           reduce using rule 137 (TIPO -> interval cadena .)
    intersect       reduce using rule 137 (TIPO -> interval cadena .)
    except          reduce using rule 137 (TIPO -> interval cadena .)
    order           reduce using rule 137 (TIPO -> interval cadena .)
    limit           reduce using rule 137 (TIPO -> interval cadena .)
    offset          reduce using rule 137 (TIPO -> interval cadena .)
    ptcoma          reduce using rule 137 (TIPO -> interval cadena .)
    mas             reduce using rule 137 (TIPO -> interval cadena .)
    menos           reduce using rule 137 (TIPO -> interval cadena .)
    multiplicacion  reduce using rule 137 (TIPO -> interval cadena .)
    division        reduce using rule 137 (TIPO -> interval cadena .)
    modulo          reduce using rule 137 (TIPO -> interval cadena .)
    elevado         reduce using rule 137 (TIPO -> interval cadena .)
    and             reduce using rule 137 (TIPO -> interval cadena .)
    or              reduce using rule 137 (TIPO -> interval cadena .)
    mayor           reduce using rule 137 (TIPO -> interval cadena .)
    menor           reduce using rule 137 (TIPO -> interval cadena .)
    mayor_igual     reduce using rule 137 (TIPO -> interval cadena .)
    menor_igual     reduce using rule 137 (TIPO -> interval cadena .)
    igual           reduce using rule 137 (TIPO -> interval cadena .)
    diferente1      reduce using rule 137 (TIPO -> interval cadena .)
    diferente2      reduce using rule 137 (TIPO -> interval cadena .)
    between         reduce using rule 137 (TIPO -> interval cadena .)
    is              reduce using rule 137 (TIPO -> interval cadena .)
    isnull          reduce using rule 137 (TIPO -> interval cadena .)
    notnull         reduce using rule 137 (TIPO -> interval cadena .)
    as              reduce using rule 137 (TIPO -> interval cadena .)
    cadenaString    reduce using rule 137 (TIPO -> interval cadena .)
    id              reduce using rule 137 (TIPO -> interval cadena .)
    cadena          reduce using rule 137 (TIPO -> interval cadena .)
    in              reduce using rule 137 (TIPO -> interval cadena .)
    not             reduce using rule 137 (TIPO -> interval cadena .)
    like            reduce using rule 137 (TIPO -> interval cadena .)
    parc            reduce using rule 137 (TIPO -> interval cadena .)
    then            reduce using rule 137 (TIPO -> interval cadena .)
    end             reduce using rule 137 (TIPO -> interval cadena .)
    else            reduce using rule 137 (TIPO -> interval cadena .)
    when            reduce using rule 137 (TIPO -> interval cadena .)
    constraint      reduce using rule 137 (TIPO -> interval cadena .)
    unique          reduce using rule 137 (TIPO -> interval cadena .)
    check           reduce using rule 137 (TIPO -> interval cadena .)
    default         reduce using rule 137 (TIPO -> interval cadena .)
    null            reduce using rule 137 (TIPO -> interval cadena .)
    primary         reduce using rule 137 (TIPO -> interval cadena .)
    references      reduce using rule 137 (TIPO -> interval cadena .)
    asc             reduce using rule 137 (TIPO -> interval cadena .)
    desc            reduce using rule 137 (TIPO -> interval cadena .)


state 274

    (147) TIPO -> interval para . int parc
    (155) TIPO -> interval para . int parc cadena

    int             shift and go to state 345


state 275

    (138) TIPO -> decimal para . int coma int parc
    (139) TIPO -> decimal para . int parc

    int             shift and go to state 346


state 276

    (141) TIPO -> numeric para . int coma int parc
    (142) TIPO -> numeric para . int parc

    int             shift and go to state 347


state 277

    (144) TIPO -> varchar para . int parc

    int             shift and go to state 348


state 278

    (145) TIPO -> timestamp para . int parc
    (151) TIPO -> timestamp para . int parc without time zone
    (152) TIPO -> timestamp para . int parc with time zone

    int             shift and go to state 349


state 279

    (169) TIPO -> timestamp without . time zone

    time            shift and go to state 350


state 280

    (170) TIPO -> timestamp with . time zone

    time            shift and go to state 351


state 281

    (146) TIPO -> character para . int parc

    int             shift and go to state 352


state 282

    (150) TIPO -> character varying . para int parc

    para            shift and go to state 353


state 283

    (148) TIPO -> char para . int parc

    int             shift and go to state 354


state 284

    (149) TIPO -> time para . int parc
    (153) TIPO -> time para . int parc without time zone
    (154) TIPO -> time para . int parc with time zone

    int             shift and go to state 355


state 285

    (171) TIPO -> time without . time zone

    time            shift and go to state 356


state 286

    (172) TIPO -> time with . time zone

    time            shift and go to state 357


state 287

    (161) TIPO -> double precision .

    r_from          reduce using rule 161 (TIPO -> double precision .)
    coma            reduce using rule 161 (TIPO -> double precision .)
    where           reduce using rule 161 (TIPO -> double precision .)
    group           reduce using rule 161 (TIPO -> double precision .)
    having          reduce using rule 161 (TIPO -> double precision .)
    union           reduce using rule 161 (TIPO -> double precision .)
    intersect       reduce using rule 161 (TIPO -> double precision .)
    except          reduce using rule 161 (TIPO -> double precision .)
    order           reduce using rule 161 (TIPO -> double precision .)
    limit           reduce using rule 161 (TIPO -> double precision .)
    offset          reduce using rule 161 (TIPO -> double precision .)
    ptcoma          reduce using rule 161 (TIPO -> double precision .)
    mas             reduce using rule 161 (TIPO -> double precision .)
    menos           reduce using rule 161 (TIPO -> double precision .)
    multiplicacion  reduce using rule 161 (TIPO -> double precision .)
    division        reduce using rule 161 (TIPO -> double precision .)
    modulo          reduce using rule 161 (TIPO -> double precision .)
    elevado         reduce using rule 161 (TIPO -> double precision .)
    and             reduce using rule 161 (TIPO -> double precision .)
    or              reduce using rule 161 (TIPO -> double precision .)
    mayor           reduce using rule 161 (TIPO -> double precision .)
    menor           reduce using rule 161 (TIPO -> double precision .)
    mayor_igual     reduce using rule 161 (TIPO -> double precision .)
    menor_igual     reduce using rule 161 (TIPO -> double precision .)
    igual           reduce using rule 161 (TIPO -> double precision .)
    diferente1      reduce using rule 161 (TIPO -> double precision .)
    diferente2      reduce using rule 161 (TIPO -> double precision .)
    between         reduce using rule 161 (TIPO -> double precision .)
    is              reduce using rule 161 (TIPO -> double precision .)
    isnull          reduce using rule 161 (TIPO -> double precision .)
    notnull         reduce using rule 161 (TIPO -> double precision .)
    as              reduce using rule 161 (TIPO -> double precision .)
    cadenaString    reduce using rule 161 (TIPO -> double precision .)
    id              reduce using rule 161 (TIPO -> double precision .)
    cadena          reduce using rule 161 (TIPO -> double precision .)
    in              reduce using rule 161 (TIPO -> double precision .)
    not             reduce using rule 161 (TIPO -> double precision .)
    like            reduce using rule 161 (TIPO -> double precision .)
    parc            reduce using rule 161 (TIPO -> double precision .)
    then            reduce using rule 161 (TIPO -> double precision .)
    end             reduce using rule 161 (TIPO -> double precision .)
    else            reduce using rule 161 (TIPO -> double precision .)
    when            reduce using rule 161 (TIPO -> double precision .)
    constraint      reduce using rule 161 (TIPO -> double precision .)
    unique          reduce using rule 161 (TIPO -> double precision .)
    check           reduce using rule 161 (TIPO -> double precision .)
    default         reduce using rule 161 (TIPO -> double precision .)
    null            reduce using rule 161 (TIPO -> double precision .)
    primary         reduce using rule 161 (TIPO -> double precision .)
    references      reduce using rule 161 (TIPO -> double precision .)
    asc             reduce using rule 161 (TIPO -> double precision .)
    desc            reduce using rule 161 (TIPO -> double precision .)


state 288

    (229) EXP -> any para LEXP parc .

    r_from          reduce using rule 229 (EXP -> any para LEXP parc .)
    coma            reduce using rule 229 (EXP -> any para LEXP parc .)
    where           reduce using rule 229 (EXP -> any para LEXP parc .)
    group           reduce using rule 229 (EXP -> any para LEXP parc .)
    having          reduce using rule 229 (EXP -> any para LEXP parc .)
    union           reduce using rule 229 (EXP -> any para LEXP parc .)
    intersect       reduce using rule 229 (EXP -> any para LEXP parc .)
    except          reduce using rule 229 (EXP -> any para LEXP parc .)
    order           reduce using rule 229 (EXP -> any para LEXP parc .)
    limit           reduce using rule 229 (EXP -> any para LEXP parc .)
    offset          reduce using rule 229 (EXP -> any para LEXP parc .)
    ptcoma          reduce using rule 229 (EXP -> any para LEXP parc .)
    mas             reduce using rule 229 (EXP -> any para LEXP parc .)
    menos           reduce using rule 229 (EXP -> any para LEXP parc .)
    multiplicacion  reduce using rule 229 (EXP -> any para LEXP parc .)
    division        reduce using rule 229 (EXP -> any para LEXP parc .)
    modulo          reduce using rule 229 (EXP -> any para LEXP parc .)
    elevado         reduce using rule 229 (EXP -> any para LEXP parc .)
    and             reduce using rule 229 (EXP -> any para LEXP parc .)
    or              reduce using rule 229 (EXP -> any para LEXP parc .)
    mayor           reduce using rule 229 (EXP -> any para LEXP parc .)
    menor           reduce using rule 229 (EXP -> any para LEXP parc .)
    mayor_igual     reduce using rule 229 (EXP -> any para LEXP parc .)
    menor_igual     reduce using rule 229 (EXP -> any para LEXP parc .)
    igual           reduce using rule 229 (EXP -> any para LEXP parc .)
    diferente1      reduce using rule 229 (EXP -> any para LEXP parc .)
    diferente2      reduce using rule 229 (EXP -> any para LEXP parc .)
    between         reduce using rule 229 (EXP -> any para LEXP parc .)
    is              reduce using rule 229 (EXP -> any para LEXP parc .)
    isnull          reduce using rule 229 (EXP -> any para LEXP parc .)
    notnull         reduce using rule 229 (EXP -> any para LEXP parc .)
    as              reduce using rule 229 (EXP -> any para LEXP parc .)
    cadenaString    reduce using rule 229 (EXP -> any para LEXP parc .)
    id              reduce using rule 229 (EXP -> any para LEXP parc .)
    cadena          reduce using rule 229 (EXP -> any para LEXP parc .)
    in              reduce using rule 229 (EXP -> any para LEXP parc .)
    not             reduce using rule 229 (EXP -> any para LEXP parc .)
    like            reduce using rule 229 (EXP -> any para LEXP parc .)
    parc            reduce using rule 229 (EXP -> any para LEXP parc .)
    then            reduce using rule 229 (EXP -> any para LEXP parc .)
    end             reduce using rule 229 (EXP -> any para LEXP parc .)
    else            reduce using rule 229 (EXP -> any para LEXP parc .)
    when            reduce using rule 229 (EXP -> any para LEXP parc .)
    constraint      reduce using rule 229 (EXP -> any para LEXP parc .)
    unique          reduce using rule 229 (EXP -> any para LEXP parc .)
    check           reduce using rule 229 (EXP -> any para LEXP parc .)
    default         reduce using rule 229 (EXP -> any para LEXP parc .)
    null            reduce using rule 229 (EXP -> any para LEXP parc .)
    primary         reduce using rule 229 (EXP -> any para LEXP parc .)
    references      reduce using rule 229 (EXP -> any para LEXP parc .)
    asc             reduce using rule 229 (EXP -> any para LEXP parc .)
    desc            reduce using rule 229 (EXP -> any para LEXP parc .)


state 289

    (230) EXP -> all para LEXP parc .

    r_from          reduce using rule 230 (EXP -> all para LEXP parc .)
    coma            reduce using rule 230 (EXP -> all para LEXP parc .)
    where           reduce using rule 230 (EXP -> all para LEXP parc .)
    group           reduce using rule 230 (EXP -> all para LEXP parc .)
    having          reduce using rule 230 (EXP -> all para LEXP parc .)
    union           reduce using rule 230 (EXP -> all para LEXP parc .)
    intersect       reduce using rule 230 (EXP -> all para LEXP parc .)
    except          reduce using rule 230 (EXP -> all para LEXP parc .)
    order           reduce using rule 230 (EXP -> all para LEXP parc .)
    limit           reduce using rule 230 (EXP -> all para LEXP parc .)
    offset          reduce using rule 230 (EXP -> all para LEXP parc .)
    ptcoma          reduce using rule 230 (EXP -> all para LEXP parc .)
    mas             reduce using rule 230 (EXP -> all para LEXP parc .)
    menos           reduce using rule 230 (EXP -> all para LEXP parc .)
    multiplicacion  reduce using rule 230 (EXP -> all para LEXP parc .)
    division        reduce using rule 230 (EXP -> all para LEXP parc .)
    modulo          reduce using rule 230 (EXP -> all para LEXP parc .)
    elevado         reduce using rule 230 (EXP -> all para LEXP parc .)
    and             reduce using rule 230 (EXP -> all para LEXP parc .)
    or              reduce using rule 230 (EXP -> all para LEXP parc .)
    mayor           reduce using rule 230 (EXP -> all para LEXP parc .)
    menor           reduce using rule 230 (EXP -> all para LEXP parc .)
    mayor_igual     reduce using rule 230 (EXP -> all para LEXP parc .)
    menor_igual     reduce using rule 230 (EXP -> all para LEXP parc .)
    igual           reduce using rule 230 (EXP -> all para LEXP parc .)
    diferente1      reduce using rule 230 (EXP -> all para LEXP parc .)
    diferente2      reduce using rule 230 (EXP -> all para LEXP parc .)
    between         reduce using rule 230 (EXP -> all para LEXP parc .)
    is              reduce using rule 230 (EXP -> all para LEXP parc .)
    isnull          reduce using rule 230 (EXP -> all para LEXP parc .)
    notnull         reduce using rule 230 (EXP -> all para LEXP parc .)
    as              reduce using rule 230 (EXP -> all para LEXP parc .)
    cadenaString    reduce using rule 230 (EXP -> all para LEXP parc .)
    id              reduce using rule 230 (EXP -> all para LEXP parc .)
    cadena          reduce using rule 230 (EXP -> all para LEXP parc .)
    in              reduce using rule 230 (EXP -> all para LEXP parc .)
    not             reduce using rule 230 (EXP -> all para LEXP parc .)
    like            reduce using rule 230 (EXP -> all para LEXP parc .)
    parc            reduce using rule 230 (EXP -> all para LEXP parc .)
    then            reduce using rule 230 (EXP -> all para LEXP parc .)
    end             reduce using rule 230 (EXP -> all para LEXP parc .)
    else            reduce using rule 230 (EXP -> all para LEXP parc .)
    when            reduce using rule 230 (EXP -> all para LEXP parc .)
    constraint      reduce using rule 230 (EXP -> all para LEXP parc .)
    unique          reduce using rule 230 (EXP -> all para LEXP parc .)
    check           reduce using rule 230 (EXP -> all para LEXP parc .)
    default         reduce using rule 230 (EXP -> all para LEXP parc .)
    null            reduce using rule 230 (EXP -> all para LEXP parc .)
    primary         reduce using rule 230 (EXP -> all para LEXP parc .)
    references      reduce using rule 230 (EXP -> all para LEXP parc .)
    asc             reduce using rule 230 (EXP -> all para LEXP parc .)
    desc            reduce using rule 230 (EXP -> all para LEXP parc .)


state 290

    (231) EXP -> some para LEXP parc .

    r_from          reduce using rule 231 (EXP -> some para LEXP parc .)
    coma            reduce using rule 231 (EXP -> some para LEXP parc .)
    where           reduce using rule 231 (EXP -> some para LEXP parc .)
    group           reduce using rule 231 (EXP -> some para LEXP parc .)
    having          reduce using rule 231 (EXP -> some para LEXP parc .)
    union           reduce using rule 231 (EXP -> some para LEXP parc .)
    intersect       reduce using rule 231 (EXP -> some para LEXP parc .)
    except          reduce using rule 231 (EXP -> some para LEXP parc .)
    order           reduce using rule 231 (EXP -> some para LEXP parc .)
    limit           reduce using rule 231 (EXP -> some para LEXP parc .)
    offset          reduce using rule 231 (EXP -> some para LEXP parc .)
    ptcoma          reduce using rule 231 (EXP -> some para LEXP parc .)
    mas             reduce using rule 231 (EXP -> some para LEXP parc .)
    menos           reduce using rule 231 (EXP -> some para LEXP parc .)
    multiplicacion  reduce using rule 231 (EXP -> some para LEXP parc .)
    division        reduce using rule 231 (EXP -> some para LEXP parc .)
    modulo          reduce using rule 231 (EXP -> some para LEXP parc .)
    elevado         reduce using rule 231 (EXP -> some para LEXP parc .)
    and             reduce using rule 231 (EXP -> some para LEXP parc .)
    or              reduce using rule 231 (EXP -> some para LEXP parc .)
    mayor           reduce using rule 231 (EXP -> some para LEXP parc .)
    menor           reduce using rule 231 (EXP -> some para LEXP parc .)
    mayor_igual     reduce using rule 231 (EXP -> some para LEXP parc .)
    menor_igual     reduce using rule 231 (EXP -> some para LEXP parc .)
    igual           reduce using rule 231 (EXP -> some para LEXP parc .)
    diferente1      reduce using rule 231 (EXP -> some para LEXP parc .)
    diferente2      reduce using rule 231 (EXP -> some para LEXP parc .)
    between         reduce using rule 231 (EXP -> some para LEXP parc .)
    is              reduce using rule 231 (EXP -> some para LEXP parc .)
    isnull          reduce using rule 231 (EXP -> some para LEXP parc .)
    notnull         reduce using rule 231 (EXP -> some para LEXP parc .)
    as              reduce using rule 231 (EXP -> some para LEXP parc .)
    cadenaString    reduce using rule 231 (EXP -> some para LEXP parc .)
    id              reduce using rule 231 (EXP -> some para LEXP parc .)
    cadena          reduce using rule 231 (EXP -> some para LEXP parc .)
    in              reduce using rule 231 (EXP -> some para LEXP parc .)
    not             reduce using rule 231 (EXP -> some para LEXP parc .)
    like            reduce using rule 231 (EXP -> some para LEXP parc .)
    parc            reduce using rule 231 (EXP -> some para LEXP parc .)
    then            reduce using rule 231 (EXP -> some para LEXP parc .)
    end             reduce using rule 231 (EXP -> some para LEXP parc .)
    else            reduce using rule 231 (EXP -> some para LEXP parc .)
    when            reduce using rule 231 (EXP -> some para LEXP parc .)
    constraint      reduce using rule 231 (EXP -> some para LEXP parc .)
    unique          reduce using rule 231 (EXP -> some para LEXP parc .)
    check           reduce using rule 231 (EXP -> some para LEXP parc .)
    default         reduce using rule 231 (EXP -> some para LEXP parc .)
    null            reduce using rule 231 (EXP -> some para LEXP parc .)
    primary         reduce using rule 231 (EXP -> some para LEXP parc .)
    references      reduce using rule 231 (EXP -> some para LEXP parc .)
    asc             reduce using rule 231 (EXP -> some para LEXP parc .)
    desc            reduce using rule 231 (EXP -> some para LEXP parc .)


state 291

    (232) EXP -> extract para FIELDS r_from . timestamp cadena parc

    timestamp       shift and go to state 358


state 292

    (73) COLDEF -> id . TIPO
    (74) COLDEF -> id . TIPO LOPCOLUMN
    (137) TIPO -> . interval cadena
    (138) TIPO -> . decimal para int coma int parc
    (139) TIPO -> . decimal para int parc
    (140) TIPO -> . decimal
    (141) TIPO -> . numeric para int coma int parc
    (142) TIPO -> . numeric para int parc
    (143) TIPO -> . numeric
    (144) TIPO -> . varchar para int parc
    (145) TIPO -> . timestamp para int parc
    (146) TIPO -> . character para int parc
    (147) TIPO -> . interval para int parc
    (148) TIPO -> . char para int parc
    (149) TIPO -> . time para int parc
    (150) TIPO -> . character varying para int parc
    (151) TIPO -> . timestamp para int parc without time zone
    (152) TIPO -> . timestamp para int parc with time zone
    (153) TIPO -> . time para int parc without time zone
    (154) TIPO -> . time para int parc with time zone
    (155) TIPO -> . interval para int parc cadena
    (156) TIPO -> . smallint
    (157) TIPO -> . integer
    (158) TIPO -> . r_int
    (159) TIPO -> . bigint
    (160) TIPO -> . real
    (161) TIPO -> . double precision
    (162) TIPO -> . money
    (163) TIPO -> . text
    (164) TIPO -> . timestamp
    (165) TIPO -> . date
    (166) TIPO -> . time
    (167) TIPO -> . interval
    (168) TIPO -> . boolean
    (169) TIPO -> . timestamp without time zone
    (170) TIPO -> . timestamp with time zone
    (171) TIPO -> . time without time zone
    (172) TIPO -> . time with time zone
    (173) TIPO -> . id

    interval        shift and go to state 193
    decimal         shift and go to state 194
    numeric         shift and go to state 195
    varchar         shift and go to state 196
    timestamp       shift and go to state 197
    character       shift and go to state 198
    char            shift and go to state 199
    time            shift and go to state 200
    smallint        shift and go to state 201
    integer         shift and go to state 202
    r_int           shift and go to state 203
    bigint          shift and go to state 204
    real            shift and go to state 205
    double          shift and go to state 206
    money           shift and go to state 207
    text            shift and go to state 208
    date            shift and go to state 209
    boolean         shift and go to state 210
    id              shift and go to state 211

    TIPO                           shift and go to state 359

state 293

    (67) CREATETABLE -> create table id para LDEF . parc ptcoma
    (68) CREATETABLE -> create table id para LDEF . parc HERENCIA ptcoma
    (69) LDEF -> LDEF . coma COLDEF

    parc            shift and go to state 360
    coma            shift and go to state 361


state 294

    (70) LDEF -> COLDEF .

    parc            reduce using rule 70 (LDEF -> COLDEF .)
    coma            reduce using rule 70 (LDEF -> COLDEF .)


state 295

    (71) COLDEF -> OPCONST .

    parc            reduce using rule 71 (COLDEF -> OPCONST .)
    coma            reduce using rule 71 (COLDEF -> OPCONST .)


state 296

    (72) COLDEF -> constraint . id OPCONST

    id              shift and go to state 362


state 297

    (86) OPCONST -> primary . key para LEXP parc

    key             shift and go to state 363


state 298

    (87) OPCONST -> foreign . key para LEXP parc references id para LEXP parc

    key             shift and go to state 364


state 299

    (88) OPCONST -> unique . para LEXP parc

    para            shift and go to state 365


state 300

    (89) OPCONST -> check . para CONDCHECK parc

    para            shift and go to state 366


state 301

    (98) CREATETYPE -> create type id as enum . para LEXP parc

    para            shift and go to state 367


state 302

    (50) CREATEDB -> create RD if not exist . id
    (51) CREATEDB -> create RD if not exist . id OPCCDB

    id              shift and go to state 368


state 303

    (56) OPCCDB -> PROPIETARIO MODO .

    ptcoma          reduce using rule 56 (OPCCDB -> PROPIETARIO MODO .)


state 304

    (59) PROPIETARIO -> owner igual . id
    (60) PROPIETARIO -> owner igual . cadena
    (61) PROPIETARIO -> owner igual . cadenaString

    id              shift and go to state 369
    cadena          shift and go to state 370
    cadenaString    shift and go to state 371


state 305

    (62) PROPIETARIO -> owner id .

    mode            reduce using rule 62 (PROPIETARIO -> owner id .)
    ptcoma          reduce using rule 62 (PROPIETARIO -> owner id .)


state 306

    (63) PROPIETARIO -> owner cadena .

    mode            reduce using rule 63 (PROPIETARIO -> owner cadena .)
    ptcoma          reduce using rule 63 (PROPIETARIO -> owner cadena .)


state 307

    (64) PROPIETARIO -> owner cadenaString .

    mode            reduce using rule 64 (PROPIETARIO -> owner cadenaString .)
    ptcoma          reduce using rule 64 (PROPIETARIO -> owner cadenaString .)


state 308

    (65) MODO -> mode igual . int

    int             shift and go to state 372


state 309

    (66) MODO -> mode int .

    ptcoma          reduce using rule 66 (MODO -> mode int .)


state 310

    (131) LCAMPOS -> id igual . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 373
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 311

    (129) UPDATE -> update id set LCAMPOS where . LEXP
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 374
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 312

    (130) LCAMPOS -> LCAMPOS coma . id igual EXP

    id              shift and go to state 375


state 313

    (29) ALTER -> alter databases id rename to . id

    id              shift and go to state 376


state 314

    (30) ALTER -> alter databases id owner to . id

    id              shift and go to state 377


state 315

    (37) OP -> alter column . id set not null
    (38) OP -> alter column . id set null
    (46) alc -> alter column . id type TIPO

    id              shift and go to state 378


state 316

    (32) OP -> add column . id TIPO

    id              shift and go to state 379


state 317

    (33) OP -> add check . para CONDCHECK parc

    para            shift and go to state 380


state 318

    (34) OP -> add constraint . id unique para id parc
    (36) OP -> add constraint . id foreign key para LEXP parc references id para LEXP parc

    id              shift and go to state 381


state 319

    (35) OP -> add foreign . key para LEXP parc references id para LEXP parc

    key             shift and go to state 382


state 320

    (39) OP -> drop constraint . id

    id              shift and go to state 383


state 321

    (40) OP -> drop column . LEXP
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 384
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 322

    (41) OP -> drop check . id

    id              shift and go to state 385


state 323

    (42) OP -> rename column . id to id

    id              shift and go to state 386


state 324

    (44) listaalc -> listaalc coma . alc
    (46) alc -> . alter column id type TIPO

    alter           shift and go to state 388

    alc                            shift and go to state 387

state 325

    (27) DROP -> drop databases if exist id .

    ptcoma          reduce using rule 27 (DROP -> drop databases if exist id .)


state 326

    (23) INSERT -> insert into id values para . LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 389
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 327

    (24) INSERT -> insert into id para LEXP . parc values para LEXP parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 390
    coma            shift and go to state 89


state 328

    (21) WHEN -> when LEXP then LEXP .
    (135) LEXP -> LEXP . coma EXP

    end             reduce using rule 21 (WHEN -> when LEXP then LEXP .)
    else            reduce using rule 21 (WHEN -> when LEXP then LEXP .)
    when            reduce using rule 21 (WHEN -> when LEXP then LEXP .)
    coma            shift and go to state 89


state 329

    (48) SHOW -> show tables para id parc .

    ptcoma          reduce using rule 48 (SHOW -> show tables para id parc .)


state 330

    (99) SELECT -> select distinct LEXP r_from LEXP WHERE . GROUP HAVING COMBINING ORDER LIMIT
    (120) GROUP -> . group by LEXP
    (121) GROUP -> .

  ! shift/reduce conflict for group resolved as shift
    group           shift and go to state 153
    r_from          reduce using rule 121 (GROUP -> .)
    coma            reduce using rule 121 (GROUP -> .)
    where           reduce using rule 121 (GROUP -> .)
    having          reduce using rule 121 (GROUP -> .)
    union           reduce using rule 121 (GROUP -> .)
    intersect       reduce using rule 121 (GROUP -> .)
    except          reduce using rule 121 (GROUP -> .)
    order           reduce using rule 121 (GROUP -> .)
    limit           reduce using rule 121 (GROUP -> .)
    offset          reduce using rule 121 (GROUP -> .)
    ptcoma          reduce using rule 121 (GROUP -> .)
    mas             reduce using rule 121 (GROUP -> .)
    menos           reduce using rule 121 (GROUP -> .)
    multiplicacion  reduce using rule 121 (GROUP -> .)
    division        reduce using rule 121 (GROUP -> .)
    modulo          reduce using rule 121 (GROUP -> .)
    elevado         reduce using rule 121 (GROUP -> .)
    and             reduce using rule 121 (GROUP -> .)
    or              reduce using rule 121 (GROUP -> .)
    mayor           reduce using rule 121 (GROUP -> .)
    menor           reduce using rule 121 (GROUP -> .)
    mayor_igual     reduce using rule 121 (GROUP -> .)
    menor_igual     reduce using rule 121 (GROUP -> .)
    igual           reduce using rule 121 (GROUP -> .)
    diferente1      reduce using rule 121 (GROUP -> .)
    diferente2      reduce using rule 121 (GROUP -> .)
    between         reduce using rule 121 (GROUP -> .)
    is              reduce using rule 121 (GROUP -> .)
    isnull          reduce using rule 121 (GROUP -> .)
    notnull         reduce using rule 121 (GROUP -> .)
    as              reduce using rule 121 (GROUP -> .)
    cadenaString    reduce using rule 121 (GROUP -> .)
    id              reduce using rule 121 (GROUP -> .)
    cadena          reduce using rule 121 (GROUP -> .)
    in              reduce using rule 121 (GROUP -> .)
    not             reduce using rule 121 (GROUP -> .)
    like            reduce using rule 121 (GROUP -> .)
    parc            reduce using rule 121 (GROUP -> .)
    then            reduce using rule 121 (GROUP -> .)
    end             reduce using rule 121 (GROUP -> .)
    else            reduce using rule 121 (GROUP -> .)
    when            reduce using rule 121 (GROUP -> .)
    constraint      reduce using rule 121 (GROUP -> .)
    unique          reduce using rule 121 (GROUP -> .)
    check           reduce using rule 121 (GROUP -> .)
    default         reduce using rule 121 (GROUP -> .)
    null            reduce using rule 121 (GROUP -> .)
    primary         reduce using rule 121 (GROUP -> .)
    references      reduce using rule 121 (GROUP -> .)
    asc             reduce using rule 121 (GROUP -> .)
    desc            reduce using rule 121 (GROUP -> .)

  ! group           [ reduce using rule 121 (GROUP -> .) ]

    GROUP                          shift and go to state 391

state 331

    (100) SELECT -> select LEXP r_from LEXP WHERE GROUP . HAVING COMBINING ORDER LIMIT
    (122) HAVING -> . having EXP
    (123) HAVING -> .

  ! shift/reduce conflict for having resolved as shift
    having          shift and go to state 256
    r_from          reduce using rule 123 (HAVING -> .)
    coma            reduce using rule 123 (HAVING -> .)
    where           reduce using rule 123 (HAVING -> .)
    group           reduce using rule 123 (HAVING -> .)
    union           reduce using rule 123 (HAVING -> .)
    intersect       reduce using rule 123 (HAVING -> .)
    except          reduce using rule 123 (HAVING -> .)
    order           reduce using rule 123 (HAVING -> .)
    limit           reduce using rule 123 (HAVING -> .)
    offset          reduce using rule 123 (HAVING -> .)
    ptcoma          reduce using rule 123 (HAVING -> .)
    mas             reduce using rule 123 (HAVING -> .)
    menos           reduce using rule 123 (HAVING -> .)
    multiplicacion  reduce using rule 123 (HAVING -> .)
    division        reduce using rule 123 (HAVING -> .)
    modulo          reduce using rule 123 (HAVING -> .)
    elevado         reduce using rule 123 (HAVING -> .)
    and             reduce using rule 123 (HAVING -> .)
    or              reduce using rule 123 (HAVING -> .)
    mayor           reduce using rule 123 (HAVING -> .)
    menor           reduce using rule 123 (HAVING -> .)
    mayor_igual     reduce using rule 123 (HAVING -> .)
    menor_igual     reduce using rule 123 (HAVING -> .)
    igual           reduce using rule 123 (HAVING -> .)
    diferente1      reduce using rule 123 (HAVING -> .)
    diferente2      reduce using rule 123 (HAVING -> .)
    between         reduce using rule 123 (HAVING -> .)
    is              reduce using rule 123 (HAVING -> .)
    isnull          reduce using rule 123 (HAVING -> .)
    notnull         reduce using rule 123 (HAVING -> .)
    as              reduce using rule 123 (HAVING -> .)
    cadenaString    reduce using rule 123 (HAVING -> .)
    id              reduce using rule 123 (HAVING -> .)
    cadena          reduce using rule 123 (HAVING -> .)
    in              reduce using rule 123 (HAVING -> .)
    not             reduce using rule 123 (HAVING -> .)
    like            reduce using rule 123 (HAVING -> .)
    parc            reduce using rule 123 (HAVING -> .)
    then            reduce using rule 123 (HAVING -> .)
    end             reduce using rule 123 (HAVING -> .)
    else            reduce using rule 123 (HAVING -> .)
    when            reduce using rule 123 (HAVING -> .)
    constraint      reduce using rule 123 (HAVING -> .)
    unique          reduce using rule 123 (HAVING -> .)
    check           reduce using rule 123 (HAVING -> .)
    default         reduce using rule 123 (HAVING -> .)
    null            reduce using rule 123 (HAVING -> .)
    primary         reduce using rule 123 (HAVING -> .)
    references      reduce using rule 123 (HAVING -> .)
    asc             reduce using rule 123 (HAVING -> .)
    desc            reduce using rule 123 (HAVING -> .)

  ! having          [ reduce using rule 123 (HAVING -> .) ]

    HAVING                         shift and go to state 392

state 332

    (101) SELECT -> select LEXP WHERE GROUP HAVING COMBINING . ORDER LIMIT
    (124) ORDER -> . order by LEXP ORD
    (125) ORDER -> . order by LEXP
    (126) ORDER -> .

  ! shift/reduce conflict for order resolved as shift
    order           shift and go to state 394
    r_from          reduce using rule 126 (ORDER -> .)
    coma            reduce using rule 126 (ORDER -> .)
    where           reduce using rule 126 (ORDER -> .)
    group           reduce using rule 126 (ORDER -> .)
    having          reduce using rule 126 (ORDER -> .)
    union           reduce using rule 126 (ORDER -> .)
    intersect       reduce using rule 126 (ORDER -> .)
    except          reduce using rule 126 (ORDER -> .)
    limit           reduce using rule 126 (ORDER -> .)
    offset          reduce using rule 126 (ORDER -> .)
    ptcoma          reduce using rule 126 (ORDER -> .)
    mas             reduce using rule 126 (ORDER -> .)
    menos           reduce using rule 126 (ORDER -> .)
    multiplicacion  reduce using rule 126 (ORDER -> .)
    division        reduce using rule 126 (ORDER -> .)
    modulo          reduce using rule 126 (ORDER -> .)
    elevado         reduce using rule 126 (ORDER -> .)
    and             reduce using rule 126 (ORDER -> .)
    or              reduce using rule 126 (ORDER -> .)
    mayor           reduce using rule 126 (ORDER -> .)
    menor           reduce using rule 126 (ORDER -> .)
    mayor_igual     reduce using rule 126 (ORDER -> .)
    menor_igual     reduce using rule 126 (ORDER -> .)
    igual           reduce using rule 126 (ORDER -> .)
    diferente1      reduce using rule 126 (ORDER -> .)
    diferente2      reduce using rule 126 (ORDER -> .)
    between         reduce using rule 126 (ORDER -> .)
    is              reduce using rule 126 (ORDER -> .)
    isnull          reduce using rule 126 (ORDER -> .)
    notnull         reduce using rule 126 (ORDER -> .)
    as              reduce using rule 126 (ORDER -> .)
    cadenaString    reduce using rule 126 (ORDER -> .)
    id              reduce using rule 126 (ORDER -> .)
    cadena          reduce using rule 126 (ORDER -> .)
    in              reduce using rule 126 (ORDER -> .)
    not             reduce using rule 126 (ORDER -> .)
    like            reduce using rule 126 (ORDER -> .)
    parc            reduce using rule 126 (ORDER -> .)
    then            reduce using rule 126 (ORDER -> .)
    end             reduce using rule 126 (ORDER -> .)
    else            reduce using rule 126 (ORDER -> .)
    when            reduce using rule 126 (ORDER -> .)
    constraint      reduce using rule 126 (ORDER -> .)
    unique          reduce using rule 126 (ORDER -> .)
    check           reduce using rule 126 (ORDER -> .)
    default         reduce using rule 126 (ORDER -> .)
    null            reduce using rule 126 (ORDER -> .)
    primary         reduce using rule 126 (ORDER -> .)
    references      reduce using rule 126 (ORDER -> .)
    asc             reduce using rule 126 (ORDER -> .)
    desc            reduce using rule 126 (ORDER -> .)

  ! order           [ reduce using rule 126 (ORDER -> .) ]

    ORDER                          shift and go to state 393

state 333

    (113) COMBINING -> union . EXP
    (114) COMBINING -> union . all EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    all             shift and go to state 396
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 395
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 334

    (115) COMBINING -> intersect . EXP
    (116) COMBINING -> intersect . all EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    all             shift and go to state 398
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 397
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 335

    (117) COMBINING -> except . EXP
    (118) COMBINING -> except . all EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    all             shift and go to state 400
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 399
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 336

    (122) HAVING -> having EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    r_from          reduce using rule 122 (HAVING -> having EXP .)
    coma            reduce using rule 122 (HAVING -> having EXP .)
    where           reduce using rule 122 (HAVING -> having EXP .)
    group           reduce using rule 122 (HAVING -> having EXP .)
    having          reduce using rule 122 (HAVING -> having EXP .)
    union           reduce using rule 122 (HAVING -> having EXP .)
    intersect       reduce using rule 122 (HAVING -> having EXP .)
    except          reduce using rule 122 (HAVING -> having EXP .)
    order           reduce using rule 122 (HAVING -> having EXP .)
    limit           reduce using rule 122 (HAVING -> having EXP .)
    offset          reduce using rule 122 (HAVING -> having EXP .)
    ptcoma          reduce using rule 122 (HAVING -> having EXP .)
    parc            reduce using rule 122 (HAVING -> having EXP .)
    then            reduce using rule 122 (HAVING -> having EXP .)
    end             reduce using rule 122 (HAVING -> having EXP .)
    else            reduce using rule 122 (HAVING -> having EXP .)
    when            reduce using rule 122 (HAVING -> having EXP .)
    constraint      reduce using rule 122 (HAVING -> having EXP .)
    unique          reduce using rule 122 (HAVING -> having EXP .)
    check           reduce using rule 122 (HAVING -> having EXP .)
    default         reduce using rule 122 (HAVING -> having EXP .)
    null            reduce using rule 122 (HAVING -> having EXP .)
    primary         reduce using rule 122 (HAVING -> having EXP .)
    references      reduce using rule 122 (HAVING -> having EXP .)
    asc             reduce using rule 122 (HAVING -> having EXP .)
    desc            reduce using rule 122 (HAVING -> having EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    and             shift and go to state 97
    or              shift and go to state 98
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105
    between         shift and go to state 106
    is              shift and go to state 107
    isnull          shift and go to state 109
    notnull         shift and go to state 110
    as              shift and go to state 111
    cadenaString    shift and go to state 112
    id              shift and go to state 113
    cadena          shift and go to state 114
    in              shift and go to state 115
    not             shift and go to state 108
    like            shift and go to state 116

  ! mas             [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! menos           [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! multiplicacion  [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! division        [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! modulo          [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! elevado         [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! and             [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! or              [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! mayor           [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! menor           [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! mayor_igual     [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! menor_igual     [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! igual           [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! diferente1      [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! diferente2      [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! between         [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! is              [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! isnull          [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! notnull         [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! as              [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! cadenaString    [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! id              [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! cadena          [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! in              [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! not             [ reduce using rule 122 (HAVING -> having EXP .) ]
  ! like            [ reduce using rule 122 (HAVING -> having EXP .) ]


state 337

    (120) GROUP -> group by LEXP .
    (135) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 120 (GROUP -> group by LEXP .)
    where           reduce using rule 120 (GROUP -> group by LEXP .)
    group           reduce using rule 120 (GROUP -> group by LEXP .)
    having          reduce using rule 120 (GROUP -> group by LEXP .)
    union           reduce using rule 120 (GROUP -> group by LEXP .)
    intersect       reduce using rule 120 (GROUP -> group by LEXP .)
    except          reduce using rule 120 (GROUP -> group by LEXP .)
    order           reduce using rule 120 (GROUP -> group by LEXP .)
    limit           reduce using rule 120 (GROUP -> group by LEXP .)
    offset          reduce using rule 120 (GROUP -> group by LEXP .)
    ptcoma          reduce using rule 120 (GROUP -> group by LEXP .)
    mas             reduce using rule 120 (GROUP -> group by LEXP .)
    menos           reduce using rule 120 (GROUP -> group by LEXP .)
    multiplicacion  reduce using rule 120 (GROUP -> group by LEXP .)
    division        reduce using rule 120 (GROUP -> group by LEXP .)
    modulo          reduce using rule 120 (GROUP -> group by LEXP .)
    elevado         reduce using rule 120 (GROUP -> group by LEXP .)
    and             reduce using rule 120 (GROUP -> group by LEXP .)
    or              reduce using rule 120 (GROUP -> group by LEXP .)
    mayor           reduce using rule 120 (GROUP -> group by LEXP .)
    menor           reduce using rule 120 (GROUP -> group by LEXP .)
    mayor_igual     reduce using rule 120 (GROUP -> group by LEXP .)
    menor_igual     reduce using rule 120 (GROUP -> group by LEXP .)
    igual           reduce using rule 120 (GROUP -> group by LEXP .)
    diferente1      reduce using rule 120 (GROUP -> group by LEXP .)
    diferente2      reduce using rule 120 (GROUP -> group by LEXP .)
    between         reduce using rule 120 (GROUP -> group by LEXP .)
    is              reduce using rule 120 (GROUP -> group by LEXP .)
    isnull          reduce using rule 120 (GROUP -> group by LEXP .)
    notnull         reduce using rule 120 (GROUP -> group by LEXP .)
    as              reduce using rule 120 (GROUP -> group by LEXP .)
    cadenaString    reduce using rule 120 (GROUP -> group by LEXP .)
    id              reduce using rule 120 (GROUP -> group by LEXP .)
    cadena          reduce using rule 120 (GROUP -> group by LEXP .)
    in              reduce using rule 120 (GROUP -> group by LEXP .)
    not             reduce using rule 120 (GROUP -> group by LEXP .)
    like            reduce using rule 120 (GROUP -> group by LEXP .)
    parc            reduce using rule 120 (GROUP -> group by LEXP .)
    then            reduce using rule 120 (GROUP -> group by LEXP .)
    end             reduce using rule 120 (GROUP -> group by LEXP .)
    else            reduce using rule 120 (GROUP -> group by LEXP .)
    when            reduce using rule 120 (GROUP -> group by LEXP .)
    constraint      reduce using rule 120 (GROUP -> group by LEXP .)
    unique          reduce using rule 120 (GROUP -> group by LEXP .)
    check           reduce using rule 120 (GROUP -> group by LEXP .)
    default         reduce using rule 120 (GROUP -> group by LEXP .)
    null            reduce using rule 120 (GROUP -> group by LEXP .)
    primary         reduce using rule 120 (GROUP -> group by LEXP .)
    references      reduce using rule 120 (GROUP -> group by LEXP .)
    asc             reduce using rule 120 (GROUP -> group by LEXP .)
    desc            reduce using rule 120 (GROUP -> group by LEXP .)
    coma            shift and go to state 89

  ! coma            [ reduce using rule 120 (GROUP -> group by LEXP .) ]


state 338

    (134) EXIST -> not exist para . SELECT parc
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    select          shift and go to state 17

    SELECT                         shift and go to state 401

state 339

    (133) EXIST -> exist para SELECT . parc

    parc            shift and go to state 402


state 340

    (221) EXP -> EXP is not distinct r_from . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 403
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 341

    (220) EXP -> EXP is distinct r_from EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    r_from          reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    coma            reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    where           reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    group           reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    having          reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    union           reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    intersect       reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    except          reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    order           reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    limit           reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    offset          reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    ptcoma          reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    and             reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    or              reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    between         reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    is              reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    isnull          reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    notnull         reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    as              reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    cadenaString    reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    id              reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    cadena          reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    in              reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    not             reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    like            reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    parc            reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    then            reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    end             reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    else            reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    when            reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    constraint      reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    unique          reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    check           reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    default         reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    null            reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    primary         reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    references      reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    asc             reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    desc            reduce using rule 220 (EXP -> EXP is distinct r_from EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105

  ! mas             [ reduce using rule 220 (EXP -> EXP is distinct r_from EXP .) ]
  ! menos           [ reduce using rule 220 (EXP -> EXP is distinct r_from EXP .) ]
  ! multiplicacion  [ reduce using rule 220 (EXP -> EXP is distinct r_from EXP .) ]
  ! division        [ reduce using rule 220 (EXP -> EXP is distinct r_from EXP .) ]
  ! modulo          [ reduce using rule 220 (EXP -> EXP is distinct r_from EXP .) ]
  ! elevado         [ reduce using rule 220 (EXP -> EXP is distinct r_from EXP .) ]
  ! mayor           [ reduce using rule 220 (EXP -> EXP is distinct r_from EXP .) ]
  ! menor           [ reduce using rule 220 (EXP -> EXP is distinct r_from EXP .) ]
  ! mayor_igual     [ reduce using rule 220 (EXP -> EXP is distinct r_from EXP .) ]
  ! menor_igual     [ reduce using rule 220 (EXP -> EXP is distinct r_from EXP .) ]
  ! igual           [ reduce using rule 220 (EXP -> EXP is distinct r_from EXP .) ]
  ! diferente1      [ reduce using rule 220 (EXP -> EXP is distinct r_from EXP .) ]
  ! diferente2      [ reduce using rule 220 (EXP -> EXP is distinct r_from EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]
  ! as              [ shift and go to state 111 ]
  ! cadenaString    [ shift and go to state 112 ]
  ! id              [ shift and go to state 113 ]
  ! cadena          [ shift and go to state 114 ]
  ! in              [ shift and go to state 115 ]
  ! not             [ shift and go to state 108 ]
  ! like            [ shift and go to state 116 ]


state 342

    (216) EXP -> EXP not in para EXP . parc
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    parc            shift and go to state 404
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    and             shift and go to state 97
    or              shift and go to state 98
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105
    between         shift and go to state 106
    is              shift and go to state 107
    isnull          shift and go to state 109
    notnull         shift and go to state 110
    as              shift and go to state 111
    cadenaString    shift and go to state 112
    id              shift and go to state 113
    cadena          shift and go to state 114
    in              shift and go to state 115
    not             shift and go to state 108
    like            shift and go to state 116


state 343

    (219) EXP -> EXP not between symetric EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    r_from          reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    coma            reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    where           reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    group           reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    having          reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    union           reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    intersect       reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    except          reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    order           reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    limit           reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    offset          reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    ptcoma          reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    and             reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    or              reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    between         reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    is              reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    isnull          reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    notnull         reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    as              reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    cadenaString    reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    id              reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    cadena          reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    in              reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    not             reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    like            reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    parc            reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    then            reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    end             reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    else            reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    when            reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    constraint      reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    unique          reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    check           reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    default         reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    null            reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    primary         reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    references      reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    asc             reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    desc            reduce using rule 219 (EXP -> EXP not between symetric EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105

  ! mas             [ reduce using rule 219 (EXP -> EXP not between symetric EXP .) ]
  ! menos           [ reduce using rule 219 (EXP -> EXP not between symetric EXP .) ]
  ! multiplicacion  [ reduce using rule 219 (EXP -> EXP not between symetric EXP .) ]
  ! division        [ reduce using rule 219 (EXP -> EXP not between symetric EXP .) ]
  ! modulo          [ reduce using rule 219 (EXP -> EXP not between symetric EXP .) ]
  ! elevado         [ reduce using rule 219 (EXP -> EXP not between symetric EXP .) ]
  ! mayor           [ reduce using rule 219 (EXP -> EXP not between symetric EXP .) ]
  ! menor           [ reduce using rule 219 (EXP -> EXP not between symetric EXP .) ]
  ! mayor_igual     [ reduce using rule 219 (EXP -> EXP not between symetric EXP .) ]
  ! menor_igual     [ reduce using rule 219 (EXP -> EXP not between symetric EXP .) ]
  ! igual           [ reduce using rule 219 (EXP -> EXP not between symetric EXP .) ]
  ! diferente1      [ reduce using rule 219 (EXP -> EXP not between symetric EXP .) ]
  ! diferente2      [ reduce using rule 219 (EXP -> EXP not between symetric EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]
  ! as              [ shift and go to state 111 ]
  ! cadenaString    [ shift and go to state 112 ]
  ! id              [ shift and go to state 113 ]
  ! cadena          [ shift and go to state 114 ]
  ! in              [ shift and go to state 115 ]
  ! not             [ shift and go to state 108 ]
  ! like            [ shift and go to state 116 ]


state 344

    (215) EXP -> EXP in para EXP parc .

    r_from          reduce using rule 215 (EXP -> EXP in para EXP parc .)
    coma            reduce using rule 215 (EXP -> EXP in para EXP parc .)
    where           reduce using rule 215 (EXP -> EXP in para EXP parc .)
    group           reduce using rule 215 (EXP -> EXP in para EXP parc .)
    having          reduce using rule 215 (EXP -> EXP in para EXP parc .)
    union           reduce using rule 215 (EXP -> EXP in para EXP parc .)
    intersect       reduce using rule 215 (EXP -> EXP in para EXP parc .)
    except          reduce using rule 215 (EXP -> EXP in para EXP parc .)
    order           reduce using rule 215 (EXP -> EXP in para EXP parc .)
    limit           reduce using rule 215 (EXP -> EXP in para EXP parc .)
    offset          reduce using rule 215 (EXP -> EXP in para EXP parc .)
    ptcoma          reduce using rule 215 (EXP -> EXP in para EXP parc .)
    mas             reduce using rule 215 (EXP -> EXP in para EXP parc .)
    menos           reduce using rule 215 (EXP -> EXP in para EXP parc .)
    multiplicacion  reduce using rule 215 (EXP -> EXP in para EXP parc .)
    division        reduce using rule 215 (EXP -> EXP in para EXP parc .)
    modulo          reduce using rule 215 (EXP -> EXP in para EXP parc .)
    elevado         reduce using rule 215 (EXP -> EXP in para EXP parc .)
    and             reduce using rule 215 (EXP -> EXP in para EXP parc .)
    or              reduce using rule 215 (EXP -> EXP in para EXP parc .)
    mayor           reduce using rule 215 (EXP -> EXP in para EXP parc .)
    menor           reduce using rule 215 (EXP -> EXP in para EXP parc .)
    mayor_igual     reduce using rule 215 (EXP -> EXP in para EXP parc .)
    menor_igual     reduce using rule 215 (EXP -> EXP in para EXP parc .)
    igual           reduce using rule 215 (EXP -> EXP in para EXP parc .)
    diferente1      reduce using rule 215 (EXP -> EXP in para EXP parc .)
    diferente2      reduce using rule 215 (EXP -> EXP in para EXP parc .)
    between         reduce using rule 215 (EXP -> EXP in para EXP parc .)
    is              reduce using rule 215 (EXP -> EXP in para EXP parc .)
    isnull          reduce using rule 215 (EXP -> EXP in para EXP parc .)
    notnull         reduce using rule 215 (EXP -> EXP in para EXP parc .)
    as              reduce using rule 215 (EXP -> EXP in para EXP parc .)
    cadenaString    reduce using rule 215 (EXP -> EXP in para EXP parc .)
    id              reduce using rule 215 (EXP -> EXP in para EXP parc .)
    cadena          reduce using rule 215 (EXP -> EXP in para EXP parc .)
    in              reduce using rule 215 (EXP -> EXP in para EXP parc .)
    not             reduce using rule 215 (EXP -> EXP in para EXP parc .)
    like            reduce using rule 215 (EXP -> EXP in para EXP parc .)
    parc            reduce using rule 215 (EXP -> EXP in para EXP parc .)
    then            reduce using rule 215 (EXP -> EXP in para EXP parc .)
    end             reduce using rule 215 (EXP -> EXP in para EXP parc .)
    else            reduce using rule 215 (EXP -> EXP in para EXP parc .)
    when            reduce using rule 215 (EXP -> EXP in para EXP parc .)
    constraint      reduce using rule 215 (EXP -> EXP in para EXP parc .)
    unique          reduce using rule 215 (EXP -> EXP in para EXP parc .)
    check           reduce using rule 215 (EXP -> EXP in para EXP parc .)
    default         reduce using rule 215 (EXP -> EXP in para EXP parc .)
    null            reduce using rule 215 (EXP -> EXP in para EXP parc .)
    primary         reduce using rule 215 (EXP -> EXP in para EXP parc .)
    references      reduce using rule 215 (EXP -> EXP in para EXP parc .)
    asc             reduce using rule 215 (EXP -> EXP in para EXP parc .)
    desc            reduce using rule 215 (EXP -> EXP in para EXP parc .)


state 345

    (147) TIPO -> interval para int . parc
    (155) TIPO -> interval para int . parc cadena

    parc            shift and go to state 405


state 346

    (138) TIPO -> decimal para int . coma int parc
    (139) TIPO -> decimal para int . parc

    coma            shift and go to state 406
    parc            shift and go to state 407


state 347

    (141) TIPO -> numeric para int . coma int parc
    (142) TIPO -> numeric para int . parc

    coma            shift and go to state 408
    parc            shift and go to state 409


state 348

    (144) TIPO -> varchar para int . parc

    parc            shift and go to state 410


state 349

    (145) TIPO -> timestamp para int . parc
    (151) TIPO -> timestamp para int . parc without time zone
    (152) TIPO -> timestamp para int . parc with time zone

    parc            shift and go to state 411


state 350

    (169) TIPO -> timestamp without time . zone

    zone            shift and go to state 412


state 351

    (170) TIPO -> timestamp with time . zone

    zone            shift and go to state 413


state 352

    (146) TIPO -> character para int . parc

    parc            shift and go to state 414


state 353

    (150) TIPO -> character varying para . int parc

    int             shift and go to state 415


state 354

    (148) TIPO -> char para int . parc

    parc            shift and go to state 416


state 355

    (149) TIPO -> time para int . parc
    (153) TIPO -> time para int . parc without time zone
    (154) TIPO -> time para int . parc with time zone

    parc            shift and go to state 417


state 356

    (171) TIPO -> time without time . zone

    zone            shift and go to state 418


state 357

    (172) TIPO -> time with time . zone

    zone            shift and go to state 419


state 358

    (232) EXP -> extract para FIELDS r_from timestamp . cadena parc

    cadena          shift and go to state 420


state 359

    (73) COLDEF -> id TIPO .
    (74) COLDEF -> id TIPO . LOPCOLUMN
    (75) LOPCOLUMN -> . LOPCOLUMN OPCOLUMN
    (76) LOPCOLUMN -> . OPCOLUMN
    (77) OPCOLUMN -> . constraint id unique
    (78) OPCOLUMN -> . unique
    (79) OPCOLUMN -> . constraint id check para CONDCHECK parc
    (80) OPCOLUMN -> . check para CONDCHECK parc
    (81) OPCOLUMN -> . default EXP
    (82) OPCOLUMN -> . not null
    (83) OPCOLUMN -> . null
    (84) OPCOLUMN -> . primary key
    (85) OPCOLUMN -> . references id

    parc            reduce using rule 73 (COLDEF -> id TIPO .)
    coma            reduce using rule 73 (COLDEF -> id TIPO .)
    constraint      shift and go to state 423
    unique          shift and go to state 424
    check           shift and go to state 425
    default         shift and go to state 426
    not             shift and go to state 427
    null            shift and go to state 428
    primary         shift and go to state 429
    references      shift and go to state 430

    LOPCOLUMN                      shift and go to state 421
    OPCOLUMN                       shift and go to state 422

state 360

    (67) CREATETABLE -> create table id para LDEF parc . ptcoma
    (68) CREATETABLE -> create table id para LDEF parc . HERENCIA ptcoma
    (97) HERENCIA -> . inherits para id parc

    ptcoma          shift and go to state 431
    inherits        shift and go to state 433

    HERENCIA                       shift and go to state 432

state 361

    (69) LDEF -> LDEF coma . COLDEF
    (71) COLDEF -> . OPCONST
    (72) COLDEF -> . constraint id OPCONST
    (73) COLDEF -> . id TIPO
    (74) COLDEF -> . id TIPO LOPCOLUMN
    (86) OPCONST -> . primary key para LEXP parc
    (87) OPCONST -> . foreign key para LEXP parc references id para LEXP parc
    (88) OPCONST -> . unique para LEXP parc
    (89) OPCONST -> . check para CONDCHECK parc

    constraint      shift and go to state 296
    id              shift and go to state 292
    primary         shift and go to state 297
    foreign         shift and go to state 298
    unique          shift and go to state 299
    check           shift and go to state 300

    COLDEF                         shift and go to state 434
    OPCONST                        shift and go to state 295

state 362

    (72) COLDEF -> constraint id . OPCONST
    (86) OPCONST -> . primary key para LEXP parc
    (87) OPCONST -> . foreign key para LEXP parc references id para LEXP parc
    (88) OPCONST -> . unique para LEXP parc
    (89) OPCONST -> . check para CONDCHECK parc

    primary         shift and go to state 297
    foreign         shift and go to state 298
    unique          shift and go to state 299
    check           shift and go to state 300

    OPCONST                        shift and go to state 435

state 363

    (86) OPCONST -> primary key . para LEXP parc

    para            shift and go to state 436


state 364

    (87) OPCONST -> foreign key . para LEXP parc references id para LEXP parc

    para            shift and go to state 437


state 365

    (88) OPCONST -> unique para . LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 438
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 366

    (89) OPCONST -> check para . CONDCHECK parc
    (90) CONDCHECK -> . EXP mayor EXP
    (91) CONDCHECK -> . EXP menor EXP
    (92) CONDCHECK -> . EXP mayor_igual EXP
    (93) CONDCHECK -> . EXP menor_igual EXP
    (94) CONDCHECK -> . EXP igual EXP
    (95) CONDCHECK -> . EXP diferente1 EXP
    (96) CONDCHECK -> . EXP diferente2 EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    CONDCHECK                      shift and go to state 439
    EXP                            shift and go to state 440
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 367

    (98) CREATETYPE -> create type id as enum para . LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 441
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 368

    (50) CREATEDB -> create RD if not exist id .
    (51) CREATEDB -> create RD if not exist id . OPCCDB
    (54) OPCCDB -> . PROPIETARIO
    (55) OPCCDB -> . MODO
    (56) OPCCDB -> . PROPIETARIO MODO
    (59) PROPIETARIO -> . owner igual id
    (60) PROPIETARIO -> . owner igual cadena
    (61) PROPIETARIO -> . owner igual cadenaString
    (62) PROPIETARIO -> . owner id
    (63) PROPIETARIO -> . owner cadena
    (64) PROPIETARIO -> . owner cadenaString
    (65) MODO -> . mode igual int
    (66) MODO -> . mode int

    ptcoma          reduce using rule 50 (CREATEDB -> create RD if not exist id .)
    owner           shift and go to state 229
    mode            shift and go to state 230

    OPCCDB                         shift and go to state 442
    PROPIETARIO                    shift and go to state 227
    MODO                           shift and go to state 228

state 369

    (59) PROPIETARIO -> owner igual id .

    mode            reduce using rule 59 (PROPIETARIO -> owner igual id .)
    ptcoma          reduce using rule 59 (PROPIETARIO -> owner igual id .)


state 370

    (60) PROPIETARIO -> owner igual cadena .

    mode            reduce using rule 60 (PROPIETARIO -> owner igual cadena .)
    ptcoma          reduce using rule 60 (PROPIETARIO -> owner igual cadena .)


state 371

    (61) PROPIETARIO -> owner igual cadenaString .

    mode            reduce using rule 61 (PROPIETARIO -> owner igual cadenaString .)
    ptcoma          reduce using rule 61 (PROPIETARIO -> owner igual cadenaString .)


state 372

    (65) MODO -> mode igual int .

    ptcoma          reduce using rule 65 (MODO -> mode igual int .)


state 373

    (131) LCAMPOS -> id igual EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    where           reduce using rule 131 (LCAMPOS -> id igual EXP .)
    coma            reduce using rule 131 (LCAMPOS -> id igual EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    and             shift and go to state 97
    or              shift and go to state 98
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105
    between         shift and go to state 106
    is              shift and go to state 107
    isnull          shift and go to state 109
    notnull         shift and go to state 110
    as              shift and go to state 111
    cadenaString    shift and go to state 112
    id              shift and go to state 113
    cadena          shift and go to state 114
    in              shift and go to state 115
    not             shift and go to state 108
    like            shift and go to state 116


state 374

    (129) UPDATE -> update id set LCAMPOS where LEXP .
    (135) LEXP -> LEXP . coma EXP

    ptcoma          reduce using rule 129 (UPDATE -> update id set LCAMPOS where LEXP .)
    coma            shift and go to state 89


state 375

    (130) LCAMPOS -> LCAMPOS coma id . igual EXP

    igual           shift and go to state 443


state 376

    (29) ALTER -> alter databases id rename to id .

    ptcoma          reduce using rule 29 (ALTER -> alter databases id rename to id .)


state 377

    (30) ALTER -> alter databases id owner to id .

    ptcoma          reduce using rule 30 (ALTER -> alter databases id owner to id .)


state 378

    (37) OP -> alter column id . set not null
    (38) OP -> alter column id . set null
    (46) alc -> alter column id . type TIPO

    set             shift and go to state 444
    type            shift and go to state 445


state 379

    (32) OP -> add column id . TIPO
    (137) TIPO -> . interval cadena
    (138) TIPO -> . decimal para int coma int parc
    (139) TIPO -> . decimal para int parc
    (140) TIPO -> . decimal
    (141) TIPO -> . numeric para int coma int parc
    (142) TIPO -> . numeric para int parc
    (143) TIPO -> . numeric
    (144) TIPO -> . varchar para int parc
    (145) TIPO -> . timestamp para int parc
    (146) TIPO -> . character para int parc
    (147) TIPO -> . interval para int parc
    (148) TIPO -> . char para int parc
    (149) TIPO -> . time para int parc
    (150) TIPO -> . character varying para int parc
    (151) TIPO -> . timestamp para int parc without time zone
    (152) TIPO -> . timestamp para int parc with time zone
    (153) TIPO -> . time para int parc without time zone
    (154) TIPO -> . time para int parc with time zone
    (155) TIPO -> . interval para int parc cadena
    (156) TIPO -> . smallint
    (157) TIPO -> . integer
    (158) TIPO -> . r_int
    (159) TIPO -> . bigint
    (160) TIPO -> . real
    (161) TIPO -> . double precision
    (162) TIPO -> . money
    (163) TIPO -> . text
    (164) TIPO -> . timestamp
    (165) TIPO -> . date
    (166) TIPO -> . time
    (167) TIPO -> . interval
    (168) TIPO -> . boolean
    (169) TIPO -> . timestamp without time zone
    (170) TIPO -> . timestamp with time zone
    (171) TIPO -> . time without time zone
    (172) TIPO -> . time with time zone
    (173) TIPO -> . id

    interval        shift and go to state 193
    decimal         shift and go to state 194
    numeric         shift and go to state 195
    varchar         shift and go to state 196
    timestamp       shift and go to state 197
    character       shift and go to state 198
    char            shift and go to state 199
    time            shift and go to state 200
    smallint        shift and go to state 201
    integer         shift and go to state 202
    r_int           shift and go to state 203
    bigint          shift and go to state 204
    real            shift and go to state 205
    double          shift and go to state 206
    money           shift and go to state 207
    text            shift and go to state 208
    date            shift and go to state 209
    boolean         shift and go to state 210
    id              shift and go to state 211

    TIPO                           shift and go to state 446

state 380

    (33) OP -> add check para . CONDCHECK parc
    (90) CONDCHECK -> . EXP mayor EXP
    (91) CONDCHECK -> . EXP menor EXP
    (92) CONDCHECK -> . EXP mayor_igual EXP
    (93) CONDCHECK -> . EXP menor_igual EXP
    (94) CONDCHECK -> . EXP igual EXP
    (95) CONDCHECK -> . EXP diferente1 EXP
    (96) CONDCHECK -> . EXP diferente2 EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    CONDCHECK                      shift and go to state 447
    EXP                            shift and go to state 440
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 381

    (34) OP -> add constraint id . unique para id parc
    (36) OP -> add constraint id . foreign key para LEXP parc references id para LEXP parc

    unique          shift and go to state 448
    foreign         shift and go to state 449


state 382

    (35) OP -> add foreign key . para LEXP parc references id para LEXP parc

    para            shift and go to state 450


state 383

    (39) OP -> drop constraint id .

    ptcoma          reduce using rule 39 (OP -> drop constraint id .)


state 384

    (40) OP -> drop column LEXP .
    (135) LEXP -> LEXP . coma EXP

    ptcoma          reduce using rule 40 (OP -> drop column LEXP .)
    coma            shift and go to state 89


state 385

    (41) OP -> drop check id .

    ptcoma          reduce using rule 41 (OP -> drop check id .)


state 386

    (42) OP -> rename column id . to id

    to              shift and go to state 451


state 387

    (44) listaalc -> listaalc coma alc .

    coma            reduce using rule 44 (listaalc -> listaalc coma alc .)
    ptcoma          reduce using rule 44 (listaalc -> listaalc coma alc .)


state 388

    (46) alc -> alter . column id type TIPO

    column          shift and go to state 452


state 389

    (23) INSERT -> insert into id values para LEXP . parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 453
    coma            shift and go to state 89


state 390

    (24) INSERT -> insert into id para LEXP parc . values para LEXP parc

    values          shift and go to state 454


state 391

    (99) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP . HAVING COMBINING ORDER LIMIT
    (122) HAVING -> . having EXP
    (123) HAVING -> .

  ! shift/reduce conflict for having resolved as shift
    having          shift and go to state 256
    r_from          reduce using rule 123 (HAVING -> .)
    coma            reduce using rule 123 (HAVING -> .)
    where           reduce using rule 123 (HAVING -> .)
    group           reduce using rule 123 (HAVING -> .)
    union           reduce using rule 123 (HAVING -> .)
    intersect       reduce using rule 123 (HAVING -> .)
    except          reduce using rule 123 (HAVING -> .)
    order           reduce using rule 123 (HAVING -> .)
    limit           reduce using rule 123 (HAVING -> .)
    offset          reduce using rule 123 (HAVING -> .)
    ptcoma          reduce using rule 123 (HAVING -> .)
    mas             reduce using rule 123 (HAVING -> .)
    menos           reduce using rule 123 (HAVING -> .)
    multiplicacion  reduce using rule 123 (HAVING -> .)
    division        reduce using rule 123 (HAVING -> .)
    modulo          reduce using rule 123 (HAVING -> .)
    elevado         reduce using rule 123 (HAVING -> .)
    and             reduce using rule 123 (HAVING -> .)
    or              reduce using rule 123 (HAVING -> .)
    mayor           reduce using rule 123 (HAVING -> .)
    menor           reduce using rule 123 (HAVING -> .)
    mayor_igual     reduce using rule 123 (HAVING -> .)
    menor_igual     reduce using rule 123 (HAVING -> .)
    igual           reduce using rule 123 (HAVING -> .)
    diferente1      reduce using rule 123 (HAVING -> .)
    diferente2      reduce using rule 123 (HAVING -> .)
    between         reduce using rule 123 (HAVING -> .)
    is              reduce using rule 123 (HAVING -> .)
    isnull          reduce using rule 123 (HAVING -> .)
    notnull         reduce using rule 123 (HAVING -> .)
    as              reduce using rule 123 (HAVING -> .)
    cadenaString    reduce using rule 123 (HAVING -> .)
    id              reduce using rule 123 (HAVING -> .)
    cadena          reduce using rule 123 (HAVING -> .)
    in              reduce using rule 123 (HAVING -> .)
    not             reduce using rule 123 (HAVING -> .)
    like            reduce using rule 123 (HAVING -> .)
    parc            reduce using rule 123 (HAVING -> .)
    then            reduce using rule 123 (HAVING -> .)
    end             reduce using rule 123 (HAVING -> .)
    else            reduce using rule 123 (HAVING -> .)
    when            reduce using rule 123 (HAVING -> .)
    constraint      reduce using rule 123 (HAVING -> .)
    unique          reduce using rule 123 (HAVING -> .)
    check           reduce using rule 123 (HAVING -> .)
    default         reduce using rule 123 (HAVING -> .)
    null            reduce using rule 123 (HAVING -> .)
    primary         reduce using rule 123 (HAVING -> .)
    references      reduce using rule 123 (HAVING -> .)
    asc             reduce using rule 123 (HAVING -> .)
    desc            reduce using rule 123 (HAVING -> .)

  ! having          [ reduce using rule 123 (HAVING -> .) ]

    HAVING                         shift and go to state 455

state 392

    (100) SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING . COMBINING ORDER LIMIT
    (113) COMBINING -> . union EXP
    (114) COMBINING -> . union all EXP
    (115) COMBINING -> . intersect EXP
    (116) COMBINING -> . intersect all EXP
    (117) COMBINING -> . except EXP
    (118) COMBINING -> . except all EXP
    (119) COMBINING -> .

  ! shift/reduce conflict for union resolved as shift
  ! shift/reduce conflict for intersect resolved as shift
  ! shift/reduce conflict for except resolved as shift
    union           shift and go to state 333
    intersect       shift and go to state 334
    except          shift and go to state 335
    r_from          reduce using rule 119 (COMBINING -> .)
    coma            reduce using rule 119 (COMBINING -> .)
    where           reduce using rule 119 (COMBINING -> .)
    group           reduce using rule 119 (COMBINING -> .)
    having          reduce using rule 119 (COMBINING -> .)
    order           reduce using rule 119 (COMBINING -> .)
    limit           reduce using rule 119 (COMBINING -> .)
    offset          reduce using rule 119 (COMBINING -> .)
    ptcoma          reduce using rule 119 (COMBINING -> .)
    mas             reduce using rule 119 (COMBINING -> .)
    menos           reduce using rule 119 (COMBINING -> .)
    multiplicacion  reduce using rule 119 (COMBINING -> .)
    division        reduce using rule 119 (COMBINING -> .)
    modulo          reduce using rule 119 (COMBINING -> .)
    elevado         reduce using rule 119 (COMBINING -> .)
    and             reduce using rule 119 (COMBINING -> .)
    or              reduce using rule 119 (COMBINING -> .)
    mayor           reduce using rule 119 (COMBINING -> .)
    menor           reduce using rule 119 (COMBINING -> .)
    mayor_igual     reduce using rule 119 (COMBINING -> .)
    menor_igual     reduce using rule 119 (COMBINING -> .)
    igual           reduce using rule 119 (COMBINING -> .)
    diferente1      reduce using rule 119 (COMBINING -> .)
    diferente2      reduce using rule 119 (COMBINING -> .)
    between         reduce using rule 119 (COMBINING -> .)
    is              reduce using rule 119 (COMBINING -> .)
    isnull          reduce using rule 119 (COMBINING -> .)
    notnull         reduce using rule 119 (COMBINING -> .)
    as              reduce using rule 119 (COMBINING -> .)
    cadenaString    reduce using rule 119 (COMBINING -> .)
    id              reduce using rule 119 (COMBINING -> .)
    cadena          reduce using rule 119 (COMBINING -> .)
    in              reduce using rule 119 (COMBINING -> .)
    not             reduce using rule 119 (COMBINING -> .)
    like            reduce using rule 119 (COMBINING -> .)
    parc            reduce using rule 119 (COMBINING -> .)
    then            reduce using rule 119 (COMBINING -> .)
    end             reduce using rule 119 (COMBINING -> .)
    else            reduce using rule 119 (COMBINING -> .)
    when            reduce using rule 119 (COMBINING -> .)
    constraint      reduce using rule 119 (COMBINING -> .)
    unique          reduce using rule 119 (COMBINING -> .)
    check           reduce using rule 119 (COMBINING -> .)
    default         reduce using rule 119 (COMBINING -> .)
    null            reduce using rule 119 (COMBINING -> .)
    primary         reduce using rule 119 (COMBINING -> .)
    references      reduce using rule 119 (COMBINING -> .)
    asc             reduce using rule 119 (COMBINING -> .)
    desc            reduce using rule 119 (COMBINING -> .)

  ! union           [ reduce using rule 119 (COMBINING -> .) ]
  ! intersect       [ reduce using rule 119 (COMBINING -> .) ]
  ! except          [ reduce using rule 119 (COMBINING -> .) ]

    COMBINING                      shift and go to state 456

state 393

    (101) SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER . LIMIT
    (102) LIMIT -> . limit int
    (103) LIMIT -> . limit all
    (104) LIMIT -> . offset int
    (105) LIMIT -> . limit int offset int
    (106) LIMIT -> . offset int limit int
    (107) LIMIT -> . limit all offset int
    (108) LIMIT -> . offset int limit all
    (109) LIMIT -> .

  ! shift/reduce conflict for limit resolved as shift
  ! shift/reduce conflict for offset resolved as shift
    limit           shift and go to state 458
    offset          shift and go to state 459
    ptcoma          reduce using rule 109 (LIMIT -> .)
    r_from          reduce using rule 109 (LIMIT -> .)
    coma            reduce using rule 109 (LIMIT -> .)
    where           reduce using rule 109 (LIMIT -> .)
    group           reduce using rule 109 (LIMIT -> .)
    having          reduce using rule 109 (LIMIT -> .)
    union           reduce using rule 109 (LIMIT -> .)
    intersect       reduce using rule 109 (LIMIT -> .)
    except          reduce using rule 109 (LIMIT -> .)
    order           reduce using rule 109 (LIMIT -> .)
    mas             reduce using rule 109 (LIMIT -> .)
    menos           reduce using rule 109 (LIMIT -> .)
    multiplicacion  reduce using rule 109 (LIMIT -> .)
    division        reduce using rule 109 (LIMIT -> .)
    modulo          reduce using rule 109 (LIMIT -> .)
    elevado         reduce using rule 109 (LIMIT -> .)
    and             reduce using rule 109 (LIMIT -> .)
    or              reduce using rule 109 (LIMIT -> .)
    mayor           reduce using rule 109 (LIMIT -> .)
    menor           reduce using rule 109 (LIMIT -> .)
    mayor_igual     reduce using rule 109 (LIMIT -> .)
    menor_igual     reduce using rule 109 (LIMIT -> .)
    igual           reduce using rule 109 (LIMIT -> .)
    diferente1      reduce using rule 109 (LIMIT -> .)
    diferente2      reduce using rule 109 (LIMIT -> .)
    between         reduce using rule 109 (LIMIT -> .)
    is              reduce using rule 109 (LIMIT -> .)
    isnull          reduce using rule 109 (LIMIT -> .)
    notnull         reduce using rule 109 (LIMIT -> .)
    as              reduce using rule 109 (LIMIT -> .)
    cadenaString    reduce using rule 109 (LIMIT -> .)
    id              reduce using rule 109 (LIMIT -> .)
    cadena          reduce using rule 109 (LIMIT -> .)
    in              reduce using rule 109 (LIMIT -> .)
    not             reduce using rule 109 (LIMIT -> .)
    like            reduce using rule 109 (LIMIT -> .)
    parc            reduce using rule 109 (LIMIT -> .)
    then            reduce using rule 109 (LIMIT -> .)
    end             reduce using rule 109 (LIMIT -> .)
    else            reduce using rule 109 (LIMIT -> .)
    when            reduce using rule 109 (LIMIT -> .)
    constraint      reduce using rule 109 (LIMIT -> .)
    unique          reduce using rule 109 (LIMIT -> .)
    check           reduce using rule 109 (LIMIT -> .)
    default         reduce using rule 109 (LIMIT -> .)
    null            reduce using rule 109 (LIMIT -> .)
    primary         reduce using rule 109 (LIMIT -> .)
    references      reduce using rule 109 (LIMIT -> .)
    asc             reduce using rule 109 (LIMIT -> .)
    desc            reduce using rule 109 (LIMIT -> .)

  ! limit           [ reduce using rule 109 (LIMIT -> .) ]
  ! offset          [ reduce using rule 109 (LIMIT -> .) ]

    LIMIT                          shift and go to state 457

state 394

    (124) ORDER -> order . by LEXP ORD
    (125) ORDER -> order . by LEXP

    by              shift and go to state 460


state 395

    (113) COMBINING -> union EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    r_from          reduce using rule 113 (COMBINING -> union EXP .)
    coma            reduce using rule 113 (COMBINING -> union EXP .)
    where           reduce using rule 113 (COMBINING -> union EXP .)
    group           reduce using rule 113 (COMBINING -> union EXP .)
    having          reduce using rule 113 (COMBINING -> union EXP .)
    union           reduce using rule 113 (COMBINING -> union EXP .)
    intersect       reduce using rule 113 (COMBINING -> union EXP .)
    except          reduce using rule 113 (COMBINING -> union EXP .)
    order           reduce using rule 113 (COMBINING -> union EXP .)
    limit           reduce using rule 113 (COMBINING -> union EXP .)
    offset          reduce using rule 113 (COMBINING -> union EXP .)
    ptcoma          reduce using rule 113 (COMBINING -> union EXP .)
    parc            reduce using rule 113 (COMBINING -> union EXP .)
    then            reduce using rule 113 (COMBINING -> union EXP .)
    end             reduce using rule 113 (COMBINING -> union EXP .)
    else            reduce using rule 113 (COMBINING -> union EXP .)
    when            reduce using rule 113 (COMBINING -> union EXP .)
    constraint      reduce using rule 113 (COMBINING -> union EXP .)
    unique          reduce using rule 113 (COMBINING -> union EXP .)
    check           reduce using rule 113 (COMBINING -> union EXP .)
    default         reduce using rule 113 (COMBINING -> union EXP .)
    null            reduce using rule 113 (COMBINING -> union EXP .)
    primary         reduce using rule 113 (COMBINING -> union EXP .)
    references      reduce using rule 113 (COMBINING -> union EXP .)
    asc             reduce using rule 113 (COMBINING -> union EXP .)
    desc            reduce using rule 113 (COMBINING -> union EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    and             shift and go to state 97
    or              shift and go to state 98
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105
    between         shift and go to state 106
    is              shift and go to state 107
    isnull          shift and go to state 109
    notnull         shift and go to state 110
    as              shift and go to state 111
    cadenaString    shift and go to state 112
    id              shift and go to state 113
    cadena          shift and go to state 114
    in              shift and go to state 115
    not             shift and go to state 108
    like            shift and go to state 116

  ! mas             [ reduce using rule 113 (COMBINING -> union EXP .) ]
  ! menos           [ reduce using rule 113 (COMBINING -> union EXP .) ]
  ! multiplicacion  [ reduce using rule 113 (COMBINING -> union EXP .) ]
  ! division        [ reduce using rule 113 (COMBINING -> union EXP .) ]
  ! modulo          [ reduce using rule 113 (COMBINING -> union EXP .) ]
  ! elevado         [ reduce using rule 113 (COMBINING -> union EXP .) ]
  ! and             [ reduce using rule 113 (COMBINING -> union EXP .) ]
  ! or              [ reduce using rule 113 (COMBINING -> union EXP .) ]
  ! mayor           [ reduce using rule 113 (COMBINING -> union EXP .) ]
  ! menor           [ reduce using rule 113 (COMBINING -> union EXP .) ]
  ! mayor_igual     [ reduce using rule 113 (COMBINING -> union EXP .) ]
  ! menor_igual     [ reduce using rule 113 (COMBINING -> union EXP .) ]
  ! igual           [ reduce using rule 113 (COMBINING -> union EXP .) ]
  ! diferente1      [ reduce using rule 113 (COMBINING -> union EXP .) ]
  ! diferente2      [ reduce using rule 113 (COMBINING -> union EXP .) ]
  ! between         [ reduce using rule 113 (COMBINING -> union EXP .) ]
  ! is              [ reduce using rule 113 (COMBINING -> union EXP .) ]
  ! isnull          [ reduce using rule 113 (COMBINING -> union EXP .) ]
  ! notnull         [ reduce using rule 113 (COMBINING -> union EXP .) ]
  ! as              [ reduce using rule 113 (COMBINING -> union EXP .) ]
  ! cadenaString    [ reduce using rule 113 (COMBINING -> union EXP .) ]
  ! id              [ reduce using rule 113 (COMBINING -> union EXP .) ]
  ! cadena          [ reduce using rule 113 (COMBINING -> union EXP .) ]
  ! in              [ reduce using rule 113 (COMBINING -> union EXP .) ]
  ! not             [ reduce using rule 113 (COMBINING -> union EXP .) ]
  ! like            [ reduce using rule 113 (COMBINING -> union EXP .) ]


state 396

    (114) COMBINING -> union all . EXP
    (230) EXP -> all . para LEXP parc
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    para            shift and go to state 462
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 461
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 397

    (115) COMBINING -> intersect EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    r_from          reduce using rule 115 (COMBINING -> intersect EXP .)
    coma            reduce using rule 115 (COMBINING -> intersect EXP .)
    where           reduce using rule 115 (COMBINING -> intersect EXP .)
    group           reduce using rule 115 (COMBINING -> intersect EXP .)
    having          reduce using rule 115 (COMBINING -> intersect EXP .)
    union           reduce using rule 115 (COMBINING -> intersect EXP .)
    intersect       reduce using rule 115 (COMBINING -> intersect EXP .)
    except          reduce using rule 115 (COMBINING -> intersect EXP .)
    order           reduce using rule 115 (COMBINING -> intersect EXP .)
    limit           reduce using rule 115 (COMBINING -> intersect EXP .)
    offset          reduce using rule 115 (COMBINING -> intersect EXP .)
    ptcoma          reduce using rule 115 (COMBINING -> intersect EXP .)
    parc            reduce using rule 115 (COMBINING -> intersect EXP .)
    then            reduce using rule 115 (COMBINING -> intersect EXP .)
    end             reduce using rule 115 (COMBINING -> intersect EXP .)
    else            reduce using rule 115 (COMBINING -> intersect EXP .)
    when            reduce using rule 115 (COMBINING -> intersect EXP .)
    constraint      reduce using rule 115 (COMBINING -> intersect EXP .)
    unique          reduce using rule 115 (COMBINING -> intersect EXP .)
    check           reduce using rule 115 (COMBINING -> intersect EXP .)
    default         reduce using rule 115 (COMBINING -> intersect EXP .)
    null            reduce using rule 115 (COMBINING -> intersect EXP .)
    primary         reduce using rule 115 (COMBINING -> intersect EXP .)
    references      reduce using rule 115 (COMBINING -> intersect EXP .)
    asc             reduce using rule 115 (COMBINING -> intersect EXP .)
    desc            reduce using rule 115 (COMBINING -> intersect EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    and             shift and go to state 97
    or              shift and go to state 98
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105
    between         shift and go to state 106
    is              shift and go to state 107
    isnull          shift and go to state 109
    notnull         shift and go to state 110
    as              shift and go to state 111
    cadenaString    shift and go to state 112
    id              shift and go to state 113
    cadena          shift and go to state 114
    in              shift and go to state 115
    not             shift and go to state 108
    like            shift and go to state 116

  ! mas             [ reduce using rule 115 (COMBINING -> intersect EXP .) ]
  ! menos           [ reduce using rule 115 (COMBINING -> intersect EXP .) ]
  ! multiplicacion  [ reduce using rule 115 (COMBINING -> intersect EXP .) ]
  ! division        [ reduce using rule 115 (COMBINING -> intersect EXP .) ]
  ! modulo          [ reduce using rule 115 (COMBINING -> intersect EXP .) ]
  ! elevado         [ reduce using rule 115 (COMBINING -> intersect EXP .) ]
  ! and             [ reduce using rule 115 (COMBINING -> intersect EXP .) ]
  ! or              [ reduce using rule 115 (COMBINING -> intersect EXP .) ]
  ! mayor           [ reduce using rule 115 (COMBINING -> intersect EXP .) ]
  ! menor           [ reduce using rule 115 (COMBINING -> intersect EXP .) ]
  ! mayor_igual     [ reduce using rule 115 (COMBINING -> intersect EXP .) ]
  ! menor_igual     [ reduce using rule 115 (COMBINING -> intersect EXP .) ]
  ! igual           [ reduce using rule 115 (COMBINING -> intersect EXP .) ]
  ! diferente1      [ reduce using rule 115 (COMBINING -> intersect EXP .) ]
  ! diferente2      [ reduce using rule 115 (COMBINING -> intersect EXP .) ]
  ! between         [ reduce using rule 115 (COMBINING -> intersect EXP .) ]
  ! is              [ reduce using rule 115 (COMBINING -> intersect EXP .) ]
  ! isnull          [ reduce using rule 115 (COMBINING -> intersect EXP .) ]
  ! notnull         [ reduce using rule 115 (COMBINING -> intersect EXP .) ]
  ! as              [ reduce using rule 115 (COMBINING -> intersect EXP .) ]
  ! cadenaString    [ reduce using rule 115 (COMBINING -> intersect EXP .) ]
  ! id              [ reduce using rule 115 (COMBINING -> intersect EXP .) ]
  ! cadena          [ reduce using rule 115 (COMBINING -> intersect EXP .) ]
  ! in              [ reduce using rule 115 (COMBINING -> intersect EXP .) ]
  ! not             [ reduce using rule 115 (COMBINING -> intersect EXP .) ]
  ! like            [ reduce using rule 115 (COMBINING -> intersect EXP .) ]


state 398

    (116) COMBINING -> intersect all . EXP
    (230) EXP -> all . para LEXP parc
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    para            shift and go to state 462
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 463
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 399

    (117) COMBINING -> except EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    r_from          reduce using rule 117 (COMBINING -> except EXP .)
    coma            reduce using rule 117 (COMBINING -> except EXP .)
    where           reduce using rule 117 (COMBINING -> except EXP .)
    group           reduce using rule 117 (COMBINING -> except EXP .)
    having          reduce using rule 117 (COMBINING -> except EXP .)
    union           reduce using rule 117 (COMBINING -> except EXP .)
    intersect       reduce using rule 117 (COMBINING -> except EXP .)
    except          reduce using rule 117 (COMBINING -> except EXP .)
    order           reduce using rule 117 (COMBINING -> except EXP .)
    limit           reduce using rule 117 (COMBINING -> except EXP .)
    offset          reduce using rule 117 (COMBINING -> except EXP .)
    ptcoma          reduce using rule 117 (COMBINING -> except EXP .)
    parc            reduce using rule 117 (COMBINING -> except EXP .)
    then            reduce using rule 117 (COMBINING -> except EXP .)
    end             reduce using rule 117 (COMBINING -> except EXP .)
    else            reduce using rule 117 (COMBINING -> except EXP .)
    when            reduce using rule 117 (COMBINING -> except EXP .)
    constraint      reduce using rule 117 (COMBINING -> except EXP .)
    unique          reduce using rule 117 (COMBINING -> except EXP .)
    check           reduce using rule 117 (COMBINING -> except EXP .)
    default         reduce using rule 117 (COMBINING -> except EXP .)
    null            reduce using rule 117 (COMBINING -> except EXP .)
    primary         reduce using rule 117 (COMBINING -> except EXP .)
    references      reduce using rule 117 (COMBINING -> except EXP .)
    asc             reduce using rule 117 (COMBINING -> except EXP .)
    desc            reduce using rule 117 (COMBINING -> except EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    and             shift and go to state 97
    or              shift and go to state 98
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105
    between         shift and go to state 106
    is              shift and go to state 107
    isnull          shift and go to state 109
    notnull         shift and go to state 110
    as              shift and go to state 111
    cadenaString    shift and go to state 112
    id              shift and go to state 113
    cadena          shift and go to state 114
    in              shift and go to state 115
    not             shift and go to state 108
    like            shift and go to state 116

  ! mas             [ reduce using rule 117 (COMBINING -> except EXP .) ]
  ! menos           [ reduce using rule 117 (COMBINING -> except EXP .) ]
  ! multiplicacion  [ reduce using rule 117 (COMBINING -> except EXP .) ]
  ! division        [ reduce using rule 117 (COMBINING -> except EXP .) ]
  ! modulo          [ reduce using rule 117 (COMBINING -> except EXP .) ]
  ! elevado         [ reduce using rule 117 (COMBINING -> except EXP .) ]
  ! and             [ reduce using rule 117 (COMBINING -> except EXP .) ]
  ! or              [ reduce using rule 117 (COMBINING -> except EXP .) ]
  ! mayor           [ reduce using rule 117 (COMBINING -> except EXP .) ]
  ! menor           [ reduce using rule 117 (COMBINING -> except EXP .) ]
  ! mayor_igual     [ reduce using rule 117 (COMBINING -> except EXP .) ]
  ! menor_igual     [ reduce using rule 117 (COMBINING -> except EXP .) ]
  ! igual           [ reduce using rule 117 (COMBINING -> except EXP .) ]
  ! diferente1      [ reduce using rule 117 (COMBINING -> except EXP .) ]
  ! diferente2      [ reduce using rule 117 (COMBINING -> except EXP .) ]
  ! between         [ reduce using rule 117 (COMBINING -> except EXP .) ]
  ! is              [ reduce using rule 117 (COMBINING -> except EXP .) ]
  ! isnull          [ reduce using rule 117 (COMBINING -> except EXP .) ]
  ! notnull         [ reduce using rule 117 (COMBINING -> except EXP .) ]
  ! as              [ reduce using rule 117 (COMBINING -> except EXP .) ]
  ! cadenaString    [ reduce using rule 117 (COMBINING -> except EXP .) ]
  ! id              [ reduce using rule 117 (COMBINING -> except EXP .) ]
  ! cadena          [ reduce using rule 117 (COMBINING -> except EXP .) ]
  ! in              [ reduce using rule 117 (COMBINING -> except EXP .) ]
  ! not             [ reduce using rule 117 (COMBINING -> except EXP .) ]
  ! like            [ reduce using rule 117 (COMBINING -> except EXP .) ]


state 400

    (118) COMBINING -> except all . EXP
    (230) EXP -> all . para LEXP parc
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    para            shift and go to state 462
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 464
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 401

    (134) EXIST -> not exist para SELECT . parc

    parc            shift and go to state 465


state 402

    (133) EXIST -> exist para SELECT parc .

    r_from          reduce using rule 133 (EXIST -> exist para SELECT parc .)
    coma            reduce using rule 133 (EXIST -> exist para SELECT parc .)
    where           reduce using rule 133 (EXIST -> exist para SELECT parc .)
    group           reduce using rule 133 (EXIST -> exist para SELECT parc .)
    having          reduce using rule 133 (EXIST -> exist para SELECT parc .)
    union           reduce using rule 133 (EXIST -> exist para SELECT parc .)
    intersect       reduce using rule 133 (EXIST -> exist para SELECT parc .)
    except          reduce using rule 133 (EXIST -> exist para SELECT parc .)
    order           reduce using rule 133 (EXIST -> exist para SELECT parc .)
    limit           reduce using rule 133 (EXIST -> exist para SELECT parc .)
    offset          reduce using rule 133 (EXIST -> exist para SELECT parc .)
    ptcoma          reduce using rule 133 (EXIST -> exist para SELECT parc .)
    mas             reduce using rule 133 (EXIST -> exist para SELECT parc .)
    menos           reduce using rule 133 (EXIST -> exist para SELECT parc .)
    multiplicacion  reduce using rule 133 (EXIST -> exist para SELECT parc .)
    division        reduce using rule 133 (EXIST -> exist para SELECT parc .)
    modulo          reduce using rule 133 (EXIST -> exist para SELECT parc .)
    elevado         reduce using rule 133 (EXIST -> exist para SELECT parc .)
    and             reduce using rule 133 (EXIST -> exist para SELECT parc .)
    or              reduce using rule 133 (EXIST -> exist para SELECT parc .)
    mayor           reduce using rule 133 (EXIST -> exist para SELECT parc .)
    menor           reduce using rule 133 (EXIST -> exist para SELECT parc .)
    mayor_igual     reduce using rule 133 (EXIST -> exist para SELECT parc .)
    menor_igual     reduce using rule 133 (EXIST -> exist para SELECT parc .)
    igual           reduce using rule 133 (EXIST -> exist para SELECT parc .)
    diferente1      reduce using rule 133 (EXIST -> exist para SELECT parc .)
    diferente2      reduce using rule 133 (EXIST -> exist para SELECT parc .)
    between         reduce using rule 133 (EXIST -> exist para SELECT parc .)
    is              reduce using rule 133 (EXIST -> exist para SELECT parc .)
    isnull          reduce using rule 133 (EXIST -> exist para SELECT parc .)
    notnull         reduce using rule 133 (EXIST -> exist para SELECT parc .)
    as              reduce using rule 133 (EXIST -> exist para SELECT parc .)
    cadenaString    reduce using rule 133 (EXIST -> exist para SELECT parc .)
    id              reduce using rule 133 (EXIST -> exist para SELECT parc .)
    cadena          reduce using rule 133 (EXIST -> exist para SELECT parc .)
    in              reduce using rule 133 (EXIST -> exist para SELECT parc .)
    not             reduce using rule 133 (EXIST -> exist para SELECT parc .)
    like            reduce using rule 133 (EXIST -> exist para SELECT parc .)
    parc            reduce using rule 133 (EXIST -> exist para SELECT parc .)
    then            reduce using rule 133 (EXIST -> exist para SELECT parc .)
    end             reduce using rule 133 (EXIST -> exist para SELECT parc .)
    else            reduce using rule 133 (EXIST -> exist para SELECT parc .)
    when            reduce using rule 133 (EXIST -> exist para SELECT parc .)
    constraint      reduce using rule 133 (EXIST -> exist para SELECT parc .)
    unique          reduce using rule 133 (EXIST -> exist para SELECT parc .)
    check           reduce using rule 133 (EXIST -> exist para SELECT parc .)
    default         reduce using rule 133 (EXIST -> exist para SELECT parc .)
    null            reduce using rule 133 (EXIST -> exist para SELECT parc .)
    primary         reduce using rule 133 (EXIST -> exist para SELECT parc .)
    references      reduce using rule 133 (EXIST -> exist para SELECT parc .)
    asc             reduce using rule 133 (EXIST -> exist para SELECT parc .)
    desc            reduce using rule 133 (EXIST -> exist para SELECT parc .)


state 403

    (221) EXP -> EXP is not distinct r_from EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    r_from          reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    coma            reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    where           reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    group           reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    having          reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    union           reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    intersect       reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    except          reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    order           reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    limit           reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    offset          reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    ptcoma          reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    and             reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    or              reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    between         reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    is              reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    isnull          reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    notnull         reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    as              reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    cadenaString    reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    id              reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    cadena          reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    in              reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    not             reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    like            reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    parc            reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    then            reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    end             reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    else            reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    when            reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    constraint      reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    unique          reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    check           reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    default         reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    null            reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    primary         reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    references      reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    asc             reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    desc            reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105

  ! mas             [ reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .) ]
  ! menos           [ reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .) ]
  ! multiplicacion  [ reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .) ]
  ! division        [ reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .) ]
  ! modulo          [ reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .) ]
  ! elevado         [ reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .) ]
  ! mayor           [ reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .) ]
  ! menor           [ reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .) ]
  ! mayor_igual     [ reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .) ]
  ! menor_igual     [ reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .) ]
  ! igual           [ reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .) ]
  ! diferente1      [ reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .) ]
  ! diferente2      [ reduce using rule 221 (EXP -> EXP is not distinct r_from EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]
  ! as              [ shift and go to state 111 ]
  ! cadenaString    [ shift and go to state 112 ]
  ! id              [ shift and go to state 113 ]
  ! cadena          [ shift and go to state 114 ]
  ! in              [ shift and go to state 115 ]
  ! not             [ shift and go to state 108 ]
  ! like            [ shift and go to state 116 ]


state 404

    (216) EXP -> EXP not in para EXP parc .

    r_from          reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    coma            reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    where           reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    group           reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    having          reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    union           reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    intersect       reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    except          reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    order           reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    limit           reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    offset          reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    ptcoma          reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    mas             reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    menos           reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    multiplicacion  reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    division        reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    modulo          reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    elevado         reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    and             reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    or              reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    mayor           reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    menor           reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    mayor_igual     reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    menor_igual     reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    igual           reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    diferente1      reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    diferente2      reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    between         reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    is              reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    isnull          reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    notnull         reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    as              reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    cadenaString    reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    id              reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    cadena          reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    in              reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    not             reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    like            reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    parc            reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    then            reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    end             reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    else            reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    when            reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    constraint      reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    unique          reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    check           reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    default         reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    null            reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    primary         reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    references      reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    asc             reduce using rule 216 (EXP -> EXP not in para EXP parc .)
    desc            reduce using rule 216 (EXP -> EXP not in para EXP parc .)


state 405

    (147) TIPO -> interval para int parc .
    (155) TIPO -> interval para int parc . cadena

  ! shift/reduce conflict for cadena resolved as shift
    r_from          reduce using rule 147 (TIPO -> interval para int parc .)
    coma            reduce using rule 147 (TIPO -> interval para int parc .)
    where           reduce using rule 147 (TIPO -> interval para int parc .)
    group           reduce using rule 147 (TIPO -> interval para int parc .)
    having          reduce using rule 147 (TIPO -> interval para int parc .)
    union           reduce using rule 147 (TIPO -> interval para int parc .)
    intersect       reduce using rule 147 (TIPO -> interval para int parc .)
    except          reduce using rule 147 (TIPO -> interval para int parc .)
    order           reduce using rule 147 (TIPO -> interval para int parc .)
    limit           reduce using rule 147 (TIPO -> interval para int parc .)
    offset          reduce using rule 147 (TIPO -> interval para int parc .)
    ptcoma          reduce using rule 147 (TIPO -> interval para int parc .)
    mas             reduce using rule 147 (TIPO -> interval para int parc .)
    menos           reduce using rule 147 (TIPO -> interval para int parc .)
    multiplicacion  reduce using rule 147 (TIPO -> interval para int parc .)
    division        reduce using rule 147 (TIPO -> interval para int parc .)
    modulo          reduce using rule 147 (TIPO -> interval para int parc .)
    elevado         reduce using rule 147 (TIPO -> interval para int parc .)
    and             reduce using rule 147 (TIPO -> interval para int parc .)
    or              reduce using rule 147 (TIPO -> interval para int parc .)
    mayor           reduce using rule 147 (TIPO -> interval para int parc .)
    menor           reduce using rule 147 (TIPO -> interval para int parc .)
    mayor_igual     reduce using rule 147 (TIPO -> interval para int parc .)
    menor_igual     reduce using rule 147 (TIPO -> interval para int parc .)
    igual           reduce using rule 147 (TIPO -> interval para int parc .)
    diferente1      reduce using rule 147 (TIPO -> interval para int parc .)
    diferente2      reduce using rule 147 (TIPO -> interval para int parc .)
    between         reduce using rule 147 (TIPO -> interval para int parc .)
    is              reduce using rule 147 (TIPO -> interval para int parc .)
    isnull          reduce using rule 147 (TIPO -> interval para int parc .)
    notnull         reduce using rule 147 (TIPO -> interval para int parc .)
    as              reduce using rule 147 (TIPO -> interval para int parc .)
    cadenaString    reduce using rule 147 (TIPO -> interval para int parc .)
    id              reduce using rule 147 (TIPO -> interval para int parc .)
    in              reduce using rule 147 (TIPO -> interval para int parc .)
    not             reduce using rule 147 (TIPO -> interval para int parc .)
    like            reduce using rule 147 (TIPO -> interval para int parc .)
    parc            reduce using rule 147 (TIPO -> interval para int parc .)
    then            reduce using rule 147 (TIPO -> interval para int parc .)
    end             reduce using rule 147 (TIPO -> interval para int parc .)
    else            reduce using rule 147 (TIPO -> interval para int parc .)
    when            reduce using rule 147 (TIPO -> interval para int parc .)
    constraint      reduce using rule 147 (TIPO -> interval para int parc .)
    unique          reduce using rule 147 (TIPO -> interval para int parc .)
    check           reduce using rule 147 (TIPO -> interval para int parc .)
    default         reduce using rule 147 (TIPO -> interval para int parc .)
    null            reduce using rule 147 (TIPO -> interval para int parc .)
    primary         reduce using rule 147 (TIPO -> interval para int parc .)
    references      reduce using rule 147 (TIPO -> interval para int parc .)
    asc             reduce using rule 147 (TIPO -> interval para int parc .)
    desc            reduce using rule 147 (TIPO -> interval para int parc .)
    cadena          shift and go to state 466

  ! cadena          [ reduce using rule 147 (TIPO -> interval para int parc .) ]


state 406

    (138) TIPO -> decimal para int coma . int parc

    int             shift and go to state 467


state 407

    (139) TIPO -> decimal para int parc .

    r_from          reduce using rule 139 (TIPO -> decimal para int parc .)
    coma            reduce using rule 139 (TIPO -> decimal para int parc .)
    where           reduce using rule 139 (TIPO -> decimal para int parc .)
    group           reduce using rule 139 (TIPO -> decimal para int parc .)
    having          reduce using rule 139 (TIPO -> decimal para int parc .)
    union           reduce using rule 139 (TIPO -> decimal para int parc .)
    intersect       reduce using rule 139 (TIPO -> decimal para int parc .)
    except          reduce using rule 139 (TIPO -> decimal para int parc .)
    order           reduce using rule 139 (TIPO -> decimal para int parc .)
    limit           reduce using rule 139 (TIPO -> decimal para int parc .)
    offset          reduce using rule 139 (TIPO -> decimal para int parc .)
    ptcoma          reduce using rule 139 (TIPO -> decimal para int parc .)
    mas             reduce using rule 139 (TIPO -> decimal para int parc .)
    menos           reduce using rule 139 (TIPO -> decimal para int parc .)
    multiplicacion  reduce using rule 139 (TIPO -> decimal para int parc .)
    division        reduce using rule 139 (TIPO -> decimal para int parc .)
    modulo          reduce using rule 139 (TIPO -> decimal para int parc .)
    elevado         reduce using rule 139 (TIPO -> decimal para int parc .)
    and             reduce using rule 139 (TIPO -> decimal para int parc .)
    or              reduce using rule 139 (TIPO -> decimal para int parc .)
    mayor           reduce using rule 139 (TIPO -> decimal para int parc .)
    menor           reduce using rule 139 (TIPO -> decimal para int parc .)
    mayor_igual     reduce using rule 139 (TIPO -> decimal para int parc .)
    menor_igual     reduce using rule 139 (TIPO -> decimal para int parc .)
    igual           reduce using rule 139 (TIPO -> decimal para int parc .)
    diferente1      reduce using rule 139 (TIPO -> decimal para int parc .)
    diferente2      reduce using rule 139 (TIPO -> decimal para int parc .)
    between         reduce using rule 139 (TIPO -> decimal para int parc .)
    is              reduce using rule 139 (TIPO -> decimal para int parc .)
    isnull          reduce using rule 139 (TIPO -> decimal para int parc .)
    notnull         reduce using rule 139 (TIPO -> decimal para int parc .)
    as              reduce using rule 139 (TIPO -> decimal para int parc .)
    cadenaString    reduce using rule 139 (TIPO -> decimal para int parc .)
    id              reduce using rule 139 (TIPO -> decimal para int parc .)
    cadena          reduce using rule 139 (TIPO -> decimal para int parc .)
    in              reduce using rule 139 (TIPO -> decimal para int parc .)
    not             reduce using rule 139 (TIPO -> decimal para int parc .)
    like            reduce using rule 139 (TIPO -> decimal para int parc .)
    parc            reduce using rule 139 (TIPO -> decimal para int parc .)
    then            reduce using rule 139 (TIPO -> decimal para int parc .)
    end             reduce using rule 139 (TIPO -> decimal para int parc .)
    else            reduce using rule 139 (TIPO -> decimal para int parc .)
    when            reduce using rule 139 (TIPO -> decimal para int parc .)
    constraint      reduce using rule 139 (TIPO -> decimal para int parc .)
    unique          reduce using rule 139 (TIPO -> decimal para int parc .)
    check           reduce using rule 139 (TIPO -> decimal para int parc .)
    default         reduce using rule 139 (TIPO -> decimal para int parc .)
    null            reduce using rule 139 (TIPO -> decimal para int parc .)
    primary         reduce using rule 139 (TIPO -> decimal para int parc .)
    references      reduce using rule 139 (TIPO -> decimal para int parc .)
    asc             reduce using rule 139 (TIPO -> decimal para int parc .)
    desc            reduce using rule 139 (TIPO -> decimal para int parc .)


state 408

    (141) TIPO -> numeric para int coma . int parc

    int             shift and go to state 468


state 409

    (142) TIPO -> numeric para int parc .

    r_from          reduce using rule 142 (TIPO -> numeric para int parc .)
    coma            reduce using rule 142 (TIPO -> numeric para int parc .)
    where           reduce using rule 142 (TIPO -> numeric para int parc .)
    group           reduce using rule 142 (TIPO -> numeric para int parc .)
    having          reduce using rule 142 (TIPO -> numeric para int parc .)
    union           reduce using rule 142 (TIPO -> numeric para int parc .)
    intersect       reduce using rule 142 (TIPO -> numeric para int parc .)
    except          reduce using rule 142 (TIPO -> numeric para int parc .)
    order           reduce using rule 142 (TIPO -> numeric para int parc .)
    limit           reduce using rule 142 (TIPO -> numeric para int parc .)
    offset          reduce using rule 142 (TIPO -> numeric para int parc .)
    ptcoma          reduce using rule 142 (TIPO -> numeric para int parc .)
    mas             reduce using rule 142 (TIPO -> numeric para int parc .)
    menos           reduce using rule 142 (TIPO -> numeric para int parc .)
    multiplicacion  reduce using rule 142 (TIPO -> numeric para int parc .)
    division        reduce using rule 142 (TIPO -> numeric para int parc .)
    modulo          reduce using rule 142 (TIPO -> numeric para int parc .)
    elevado         reduce using rule 142 (TIPO -> numeric para int parc .)
    and             reduce using rule 142 (TIPO -> numeric para int parc .)
    or              reduce using rule 142 (TIPO -> numeric para int parc .)
    mayor           reduce using rule 142 (TIPO -> numeric para int parc .)
    menor           reduce using rule 142 (TIPO -> numeric para int parc .)
    mayor_igual     reduce using rule 142 (TIPO -> numeric para int parc .)
    menor_igual     reduce using rule 142 (TIPO -> numeric para int parc .)
    igual           reduce using rule 142 (TIPO -> numeric para int parc .)
    diferente1      reduce using rule 142 (TIPO -> numeric para int parc .)
    diferente2      reduce using rule 142 (TIPO -> numeric para int parc .)
    between         reduce using rule 142 (TIPO -> numeric para int parc .)
    is              reduce using rule 142 (TIPO -> numeric para int parc .)
    isnull          reduce using rule 142 (TIPO -> numeric para int parc .)
    notnull         reduce using rule 142 (TIPO -> numeric para int parc .)
    as              reduce using rule 142 (TIPO -> numeric para int parc .)
    cadenaString    reduce using rule 142 (TIPO -> numeric para int parc .)
    id              reduce using rule 142 (TIPO -> numeric para int parc .)
    cadena          reduce using rule 142 (TIPO -> numeric para int parc .)
    in              reduce using rule 142 (TIPO -> numeric para int parc .)
    not             reduce using rule 142 (TIPO -> numeric para int parc .)
    like            reduce using rule 142 (TIPO -> numeric para int parc .)
    parc            reduce using rule 142 (TIPO -> numeric para int parc .)
    then            reduce using rule 142 (TIPO -> numeric para int parc .)
    end             reduce using rule 142 (TIPO -> numeric para int parc .)
    else            reduce using rule 142 (TIPO -> numeric para int parc .)
    when            reduce using rule 142 (TIPO -> numeric para int parc .)
    constraint      reduce using rule 142 (TIPO -> numeric para int parc .)
    unique          reduce using rule 142 (TIPO -> numeric para int parc .)
    check           reduce using rule 142 (TIPO -> numeric para int parc .)
    default         reduce using rule 142 (TIPO -> numeric para int parc .)
    null            reduce using rule 142 (TIPO -> numeric para int parc .)
    primary         reduce using rule 142 (TIPO -> numeric para int parc .)
    references      reduce using rule 142 (TIPO -> numeric para int parc .)
    asc             reduce using rule 142 (TIPO -> numeric para int parc .)
    desc            reduce using rule 142 (TIPO -> numeric para int parc .)


state 410

    (144) TIPO -> varchar para int parc .

    r_from          reduce using rule 144 (TIPO -> varchar para int parc .)
    coma            reduce using rule 144 (TIPO -> varchar para int parc .)
    where           reduce using rule 144 (TIPO -> varchar para int parc .)
    group           reduce using rule 144 (TIPO -> varchar para int parc .)
    having          reduce using rule 144 (TIPO -> varchar para int parc .)
    union           reduce using rule 144 (TIPO -> varchar para int parc .)
    intersect       reduce using rule 144 (TIPO -> varchar para int parc .)
    except          reduce using rule 144 (TIPO -> varchar para int parc .)
    order           reduce using rule 144 (TIPO -> varchar para int parc .)
    limit           reduce using rule 144 (TIPO -> varchar para int parc .)
    offset          reduce using rule 144 (TIPO -> varchar para int parc .)
    ptcoma          reduce using rule 144 (TIPO -> varchar para int parc .)
    mas             reduce using rule 144 (TIPO -> varchar para int parc .)
    menos           reduce using rule 144 (TIPO -> varchar para int parc .)
    multiplicacion  reduce using rule 144 (TIPO -> varchar para int parc .)
    division        reduce using rule 144 (TIPO -> varchar para int parc .)
    modulo          reduce using rule 144 (TIPO -> varchar para int parc .)
    elevado         reduce using rule 144 (TIPO -> varchar para int parc .)
    and             reduce using rule 144 (TIPO -> varchar para int parc .)
    or              reduce using rule 144 (TIPO -> varchar para int parc .)
    mayor           reduce using rule 144 (TIPO -> varchar para int parc .)
    menor           reduce using rule 144 (TIPO -> varchar para int parc .)
    mayor_igual     reduce using rule 144 (TIPO -> varchar para int parc .)
    menor_igual     reduce using rule 144 (TIPO -> varchar para int parc .)
    igual           reduce using rule 144 (TIPO -> varchar para int parc .)
    diferente1      reduce using rule 144 (TIPO -> varchar para int parc .)
    diferente2      reduce using rule 144 (TIPO -> varchar para int parc .)
    between         reduce using rule 144 (TIPO -> varchar para int parc .)
    is              reduce using rule 144 (TIPO -> varchar para int parc .)
    isnull          reduce using rule 144 (TIPO -> varchar para int parc .)
    notnull         reduce using rule 144 (TIPO -> varchar para int parc .)
    as              reduce using rule 144 (TIPO -> varchar para int parc .)
    cadenaString    reduce using rule 144 (TIPO -> varchar para int parc .)
    id              reduce using rule 144 (TIPO -> varchar para int parc .)
    cadena          reduce using rule 144 (TIPO -> varchar para int parc .)
    in              reduce using rule 144 (TIPO -> varchar para int parc .)
    not             reduce using rule 144 (TIPO -> varchar para int parc .)
    like            reduce using rule 144 (TIPO -> varchar para int parc .)
    parc            reduce using rule 144 (TIPO -> varchar para int parc .)
    then            reduce using rule 144 (TIPO -> varchar para int parc .)
    end             reduce using rule 144 (TIPO -> varchar para int parc .)
    else            reduce using rule 144 (TIPO -> varchar para int parc .)
    when            reduce using rule 144 (TIPO -> varchar para int parc .)
    constraint      reduce using rule 144 (TIPO -> varchar para int parc .)
    unique          reduce using rule 144 (TIPO -> varchar para int parc .)
    check           reduce using rule 144 (TIPO -> varchar para int parc .)
    default         reduce using rule 144 (TIPO -> varchar para int parc .)
    null            reduce using rule 144 (TIPO -> varchar para int parc .)
    primary         reduce using rule 144 (TIPO -> varchar para int parc .)
    references      reduce using rule 144 (TIPO -> varchar para int parc .)
    asc             reduce using rule 144 (TIPO -> varchar para int parc .)
    desc            reduce using rule 144 (TIPO -> varchar para int parc .)


state 411

    (145) TIPO -> timestamp para int parc .
    (151) TIPO -> timestamp para int parc . without time zone
    (152) TIPO -> timestamp para int parc . with time zone

    r_from          reduce using rule 145 (TIPO -> timestamp para int parc .)
    coma            reduce using rule 145 (TIPO -> timestamp para int parc .)
    where           reduce using rule 145 (TIPO -> timestamp para int parc .)
    group           reduce using rule 145 (TIPO -> timestamp para int parc .)
    having          reduce using rule 145 (TIPO -> timestamp para int parc .)
    union           reduce using rule 145 (TIPO -> timestamp para int parc .)
    intersect       reduce using rule 145 (TIPO -> timestamp para int parc .)
    except          reduce using rule 145 (TIPO -> timestamp para int parc .)
    order           reduce using rule 145 (TIPO -> timestamp para int parc .)
    limit           reduce using rule 145 (TIPO -> timestamp para int parc .)
    offset          reduce using rule 145 (TIPO -> timestamp para int parc .)
    ptcoma          reduce using rule 145 (TIPO -> timestamp para int parc .)
    mas             reduce using rule 145 (TIPO -> timestamp para int parc .)
    menos           reduce using rule 145 (TIPO -> timestamp para int parc .)
    multiplicacion  reduce using rule 145 (TIPO -> timestamp para int parc .)
    division        reduce using rule 145 (TIPO -> timestamp para int parc .)
    modulo          reduce using rule 145 (TIPO -> timestamp para int parc .)
    elevado         reduce using rule 145 (TIPO -> timestamp para int parc .)
    and             reduce using rule 145 (TIPO -> timestamp para int parc .)
    or              reduce using rule 145 (TIPO -> timestamp para int parc .)
    mayor           reduce using rule 145 (TIPO -> timestamp para int parc .)
    menor           reduce using rule 145 (TIPO -> timestamp para int parc .)
    mayor_igual     reduce using rule 145 (TIPO -> timestamp para int parc .)
    menor_igual     reduce using rule 145 (TIPO -> timestamp para int parc .)
    igual           reduce using rule 145 (TIPO -> timestamp para int parc .)
    diferente1      reduce using rule 145 (TIPO -> timestamp para int parc .)
    diferente2      reduce using rule 145 (TIPO -> timestamp para int parc .)
    between         reduce using rule 145 (TIPO -> timestamp para int parc .)
    is              reduce using rule 145 (TIPO -> timestamp para int parc .)
    isnull          reduce using rule 145 (TIPO -> timestamp para int parc .)
    notnull         reduce using rule 145 (TIPO -> timestamp para int parc .)
    as              reduce using rule 145 (TIPO -> timestamp para int parc .)
    cadenaString    reduce using rule 145 (TIPO -> timestamp para int parc .)
    id              reduce using rule 145 (TIPO -> timestamp para int parc .)
    cadena          reduce using rule 145 (TIPO -> timestamp para int parc .)
    in              reduce using rule 145 (TIPO -> timestamp para int parc .)
    not             reduce using rule 145 (TIPO -> timestamp para int parc .)
    like            reduce using rule 145 (TIPO -> timestamp para int parc .)
    parc            reduce using rule 145 (TIPO -> timestamp para int parc .)
    then            reduce using rule 145 (TIPO -> timestamp para int parc .)
    end             reduce using rule 145 (TIPO -> timestamp para int parc .)
    else            reduce using rule 145 (TIPO -> timestamp para int parc .)
    when            reduce using rule 145 (TIPO -> timestamp para int parc .)
    constraint      reduce using rule 145 (TIPO -> timestamp para int parc .)
    unique          reduce using rule 145 (TIPO -> timestamp para int parc .)
    check           reduce using rule 145 (TIPO -> timestamp para int parc .)
    default         reduce using rule 145 (TIPO -> timestamp para int parc .)
    null            reduce using rule 145 (TIPO -> timestamp para int parc .)
    primary         reduce using rule 145 (TIPO -> timestamp para int parc .)
    references      reduce using rule 145 (TIPO -> timestamp para int parc .)
    asc             reduce using rule 145 (TIPO -> timestamp para int parc .)
    desc            reduce using rule 145 (TIPO -> timestamp para int parc .)
    without         shift and go to state 469
    with            shift and go to state 470


state 412

    (169) TIPO -> timestamp without time zone .

    r_from          reduce using rule 169 (TIPO -> timestamp without time zone .)
    coma            reduce using rule 169 (TIPO -> timestamp without time zone .)
    where           reduce using rule 169 (TIPO -> timestamp without time zone .)
    group           reduce using rule 169 (TIPO -> timestamp without time zone .)
    having          reduce using rule 169 (TIPO -> timestamp without time zone .)
    union           reduce using rule 169 (TIPO -> timestamp without time zone .)
    intersect       reduce using rule 169 (TIPO -> timestamp without time zone .)
    except          reduce using rule 169 (TIPO -> timestamp without time zone .)
    order           reduce using rule 169 (TIPO -> timestamp without time zone .)
    limit           reduce using rule 169 (TIPO -> timestamp without time zone .)
    offset          reduce using rule 169 (TIPO -> timestamp without time zone .)
    ptcoma          reduce using rule 169 (TIPO -> timestamp without time zone .)
    mas             reduce using rule 169 (TIPO -> timestamp without time zone .)
    menos           reduce using rule 169 (TIPO -> timestamp without time zone .)
    multiplicacion  reduce using rule 169 (TIPO -> timestamp without time zone .)
    division        reduce using rule 169 (TIPO -> timestamp without time zone .)
    modulo          reduce using rule 169 (TIPO -> timestamp without time zone .)
    elevado         reduce using rule 169 (TIPO -> timestamp without time zone .)
    and             reduce using rule 169 (TIPO -> timestamp without time zone .)
    or              reduce using rule 169 (TIPO -> timestamp without time zone .)
    mayor           reduce using rule 169 (TIPO -> timestamp without time zone .)
    menor           reduce using rule 169 (TIPO -> timestamp without time zone .)
    mayor_igual     reduce using rule 169 (TIPO -> timestamp without time zone .)
    menor_igual     reduce using rule 169 (TIPO -> timestamp without time zone .)
    igual           reduce using rule 169 (TIPO -> timestamp without time zone .)
    diferente1      reduce using rule 169 (TIPO -> timestamp without time zone .)
    diferente2      reduce using rule 169 (TIPO -> timestamp without time zone .)
    between         reduce using rule 169 (TIPO -> timestamp without time zone .)
    is              reduce using rule 169 (TIPO -> timestamp without time zone .)
    isnull          reduce using rule 169 (TIPO -> timestamp without time zone .)
    notnull         reduce using rule 169 (TIPO -> timestamp without time zone .)
    as              reduce using rule 169 (TIPO -> timestamp without time zone .)
    cadenaString    reduce using rule 169 (TIPO -> timestamp without time zone .)
    id              reduce using rule 169 (TIPO -> timestamp without time zone .)
    cadena          reduce using rule 169 (TIPO -> timestamp without time zone .)
    in              reduce using rule 169 (TIPO -> timestamp without time zone .)
    not             reduce using rule 169 (TIPO -> timestamp without time zone .)
    like            reduce using rule 169 (TIPO -> timestamp without time zone .)
    parc            reduce using rule 169 (TIPO -> timestamp without time zone .)
    then            reduce using rule 169 (TIPO -> timestamp without time zone .)
    end             reduce using rule 169 (TIPO -> timestamp without time zone .)
    else            reduce using rule 169 (TIPO -> timestamp without time zone .)
    when            reduce using rule 169 (TIPO -> timestamp without time zone .)
    constraint      reduce using rule 169 (TIPO -> timestamp without time zone .)
    unique          reduce using rule 169 (TIPO -> timestamp without time zone .)
    check           reduce using rule 169 (TIPO -> timestamp without time zone .)
    default         reduce using rule 169 (TIPO -> timestamp without time zone .)
    null            reduce using rule 169 (TIPO -> timestamp without time zone .)
    primary         reduce using rule 169 (TIPO -> timestamp without time zone .)
    references      reduce using rule 169 (TIPO -> timestamp without time zone .)
    asc             reduce using rule 169 (TIPO -> timestamp without time zone .)
    desc            reduce using rule 169 (TIPO -> timestamp without time zone .)


state 413

    (170) TIPO -> timestamp with time zone .

    r_from          reduce using rule 170 (TIPO -> timestamp with time zone .)
    coma            reduce using rule 170 (TIPO -> timestamp with time zone .)
    where           reduce using rule 170 (TIPO -> timestamp with time zone .)
    group           reduce using rule 170 (TIPO -> timestamp with time zone .)
    having          reduce using rule 170 (TIPO -> timestamp with time zone .)
    union           reduce using rule 170 (TIPO -> timestamp with time zone .)
    intersect       reduce using rule 170 (TIPO -> timestamp with time zone .)
    except          reduce using rule 170 (TIPO -> timestamp with time zone .)
    order           reduce using rule 170 (TIPO -> timestamp with time zone .)
    limit           reduce using rule 170 (TIPO -> timestamp with time zone .)
    offset          reduce using rule 170 (TIPO -> timestamp with time zone .)
    ptcoma          reduce using rule 170 (TIPO -> timestamp with time zone .)
    mas             reduce using rule 170 (TIPO -> timestamp with time zone .)
    menos           reduce using rule 170 (TIPO -> timestamp with time zone .)
    multiplicacion  reduce using rule 170 (TIPO -> timestamp with time zone .)
    division        reduce using rule 170 (TIPO -> timestamp with time zone .)
    modulo          reduce using rule 170 (TIPO -> timestamp with time zone .)
    elevado         reduce using rule 170 (TIPO -> timestamp with time zone .)
    and             reduce using rule 170 (TIPO -> timestamp with time zone .)
    or              reduce using rule 170 (TIPO -> timestamp with time zone .)
    mayor           reduce using rule 170 (TIPO -> timestamp with time zone .)
    menor           reduce using rule 170 (TIPO -> timestamp with time zone .)
    mayor_igual     reduce using rule 170 (TIPO -> timestamp with time zone .)
    menor_igual     reduce using rule 170 (TIPO -> timestamp with time zone .)
    igual           reduce using rule 170 (TIPO -> timestamp with time zone .)
    diferente1      reduce using rule 170 (TIPO -> timestamp with time zone .)
    diferente2      reduce using rule 170 (TIPO -> timestamp with time zone .)
    between         reduce using rule 170 (TIPO -> timestamp with time zone .)
    is              reduce using rule 170 (TIPO -> timestamp with time zone .)
    isnull          reduce using rule 170 (TIPO -> timestamp with time zone .)
    notnull         reduce using rule 170 (TIPO -> timestamp with time zone .)
    as              reduce using rule 170 (TIPO -> timestamp with time zone .)
    cadenaString    reduce using rule 170 (TIPO -> timestamp with time zone .)
    id              reduce using rule 170 (TIPO -> timestamp with time zone .)
    cadena          reduce using rule 170 (TIPO -> timestamp with time zone .)
    in              reduce using rule 170 (TIPO -> timestamp with time zone .)
    not             reduce using rule 170 (TIPO -> timestamp with time zone .)
    like            reduce using rule 170 (TIPO -> timestamp with time zone .)
    parc            reduce using rule 170 (TIPO -> timestamp with time zone .)
    then            reduce using rule 170 (TIPO -> timestamp with time zone .)
    end             reduce using rule 170 (TIPO -> timestamp with time zone .)
    else            reduce using rule 170 (TIPO -> timestamp with time zone .)
    when            reduce using rule 170 (TIPO -> timestamp with time zone .)
    constraint      reduce using rule 170 (TIPO -> timestamp with time zone .)
    unique          reduce using rule 170 (TIPO -> timestamp with time zone .)
    check           reduce using rule 170 (TIPO -> timestamp with time zone .)
    default         reduce using rule 170 (TIPO -> timestamp with time zone .)
    null            reduce using rule 170 (TIPO -> timestamp with time zone .)
    primary         reduce using rule 170 (TIPO -> timestamp with time zone .)
    references      reduce using rule 170 (TIPO -> timestamp with time zone .)
    asc             reduce using rule 170 (TIPO -> timestamp with time zone .)
    desc            reduce using rule 170 (TIPO -> timestamp with time zone .)


state 414

    (146) TIPO -> character para int parc .

    r_from          reduce using rule 146 (TIPO -> character para int parc .)
    coma            reduce using rule 146 (TIPO -> character para int parc .)
    where           reduce using rule 146 (TIPO -> character para int parc .)
    group           reduce using rule 146 (TIPO -> character para int parc .)
    having          reduce using rule 146 (TIPO -> character para int parc .)
    union           reduce using rule 146 (TIPO -> character para int parc .)
    intersect       reduce using rule 146 (TIPO -> character para int parc .)
    except          reduce using rule 146 (TIPO -> character para int parc .)
    order           reduce using rule 146 (TIPO -> character para int parc .)
    limit           reduce using rule 146 (TIPO -> character para int parc .)
    offset          reduce using rule 146 (TIPO -> character para int parc .)
    ptcoma          reduce using rule 146 (TIPO -> character para int parc .)
    mas             reduce using rule 146 (TIPO -> character para int parc .)
    menos           reduce using rule 146 (TIPO -> character para int parc .)
    multiplicacion  reduce using rule 146 (TIPO -> character para int parc .)
    division        reduce using rule 146 (TIPO -> character para int parc .)
    modulo          reduce using rule 146 (TIPO -> character para int parc .)
    elevado         reduce using rule 146 (TIPO -> character para int parc .)
    and             reduce using rule 146 (TIPO -> character para int parc .)
    or              reduce using rule 146 (TIPO -> character para int parc .)
    mayor           reduce using rule 146 (TIPO -> character para int parc .)
    menor           reduce using rule 146 (TIPO -> character para int parc .)
    mayor_igual     reduce using rule 146 (TIPO -> character para int parc .)
    menor_igual     reduce using rule 146 (TIPO -> character para int parc .)
    igual           reduce using rule 146 (TIPO -> character para int parc .)
    diferente1      reduce using rule 146 (TIPO -> character para int parc .)
    diferente2      reduce using rule 146 (TIPO -> character para int parc .)
    between         reduce using rule 146 (TIPO -> character para int parc .)
    is              reduce using rule 146 (TIPO -> character para int parc .)
    isnull          reduce using rule 146 (TIPO -> character para int parc .)
    notnull         reduce using rule 146 (TIPO -> character para int parc .)
    as              reduce using rule 146 (TIPO -> character para int parc .)
    cadenaString    reduce using rule 146 (TIPO -> character para int parc .)
    id              reduce using rule 146 (TIPO -> character para int parc .)
    cadena          reduce using rule 146 (TIPO -> character para int parc .)
    in              reduce using rule 146 (TIPO -> character para int parc .)
    not             reduce using rule 146 (TIPO -> character para int parc .)
    like            reduce using rule 146 (TIPO -> character para int parc .)
    parc            reduce using rule 146 (TIPO -> character para int parc .)
    then            reduce using rule 146 (TIPO -> character para int parc .)
    end             reduce using rule 146 (TIPO -> character para int parc .)
    else            reduce using rule 146 (TIPO -> character para int parc .)
    when            reduce using rule 146 (TIPO -> character para int parc .)
    constraint      reduce using rule 146 (TIPO -> character para int parc .)
    unique          reduce using rule 146 (TIPO -> character para int parc .)
    check           reduce using rule 146 (TIPO -> character para int parc .)
    default         reduce using rule 146 (TIPO -> character para int parc .)
    null            reduce using rule 146 (TIPO -> character para int parc .)
    primary         reduce using rule 146 (TIPO -> character para int parc .)
    references      reduce using rule 146 (TIPO -> character para int parc .)
    asc             reduce using rule 146 (TIPO -> character para int parc .)
    desc            reduce using rule 146 (TIPO -> character para int parc .)


state 415

    (150) TIPO -> character varying para int . parc

    parc            shift and go to state 471


state 416

    (148) TIPO -> char para int parc .

    r_from          reduce using rule 148 (TIPO -> char para int parc .)
    coma            reduce using rule 148 (TIPO -> char para int parc .)
    where           reduce using rule 148 (TIPO -> char para int parc .)
    group           reduce using rule 148 (TIPO -> char para int parc .)
    having          reduce using rule 148 (TIPO -> char para int parc .)
    union           reduce using rule 148 (TIPO -> char para int parc .)
    intersect       reduce using rule 148 (TIPO -> char para int parc .)
    except          reduce using rule 148 (TIPO -> char para int parc .)
    order           reduce using rule 148 (TIPO -> char para int parc .)
    limit           reduce using rule 148 (TIPO -> char para int parc .)
    offset          reduce using rule 148 (TIPO -> char para int parc .)
    ptcoma          reduce using rule 148 (TIPO -> char para int parc .)
    mas             reduce using rule 148 (TIPO -> char para int parc .)
    menos           reduce using rule 148 (TIPO -> char para int parc .)
    multiplicacion  reduce using rule 148 (TIPO -> char para int parc .)
    division        reduce using rule 148 (TIPO -> char para int parc .)
    modulo          reduce using rule 148 (TIPO -> char para int parc .)
    elevado         reduce using rule 148 (TIPO -> char para int parc .)
    and             reduce using rule 148 (TIPO -> char para int parc .)
    or              reduce using rule 148 (TIPO -> char para int parc .)
    mayor           reduce using rule 148 (TIPO -> char para int parc .)
    menor           reduce using rule 148 (TIPO -> char para int parc .)
    mayor_igual     reduce using rule 148 (TIPO -> char para int parc .)
    menor_igual     reduce using rule 148 (TIPO -> char para int parc .)
    igual           reduce using rule 148 (TIPO -> char para int parc .)
    diferente1      reduce using rule 148 (TIPO -> char para int parc .)
    diferente2      reduce using rule 148 (TIPO -> char para int parc .)
    between         reduce using rule 148 (TIPO -> char para int parc .)
    is              reduce using rule 148 (TIPO -> char para int parc .)
    isnull          reduce using rule 148 (TIPO -> char para int parc .)
    notnull         reduce using rule 148 (TIPO -> char para int parc .)
    as              reduce using rule 148 (TIPO -> char para int parc .)
    cadenaString    reduce using rule 148 (TIPO -> char para int parc .)
    id              reduce using rule 148 (TIPO -> char para int parc .)
    cadena          reduce using rule 148 (TIPO -> char para int parc .)
    in              reduce using rule 148 (TIPO -> char para int parc .)
    not             reduce using rule 148 (TIPO -> char para int parc .)
    like            reduce using rule 148 (TIPO -> char para int parc .)
    parc            reduce using rule 148 (TIPO -> char para int parc .)
    then            reduce using rule 148 (TIPO -> char para int parc .)
    end             reduce using rule 148 (TIPO -> char para int parc .)
    else            reduce using rule 148 (TIPO -> char para int parc .)
    when            reduce using rule 148 (TIPO -> char para int parc .)
    constraint      reduce using rule 148 (TIPO -> char para int parc .)
    unique          reduce using rule 148 (TIPO -> char para int parc .)
    check           reduce using rule 148 (TIPO -> char para int parc .)
    default         reduce using rule 148 (TIPO -> char para int parc .)
    null            reduce using rule 148 (TIPO -> char para int parc .)
    primary         reduce using rule 148 (TIPO -> char para int parc .)
    references      reduce using rule 148 (TIPO -> char para int parc .)
    asc             reduce using rule 148 (TIPO -> char para int parc .)
    desc            reduce using rule 148 (TIPO -> char para int parc .)


state 417

    (149) TIPO -> time para int parc .
    (153) TIPO -> time para int parc . without time zone
    (154) TIPO -> time para int parc . with time zone

    r_from          reduce using rule 149 (TIPO -> time para int parc .)
    coma            reduce using rule 149 (TIPO -> time para int parc .)
    where           reduce using rule 149 (TIPO -> time para int parc .)
    group           reduce using rule 149 (TIPO -> time para int parc .)
    having          reduce using rule 149 (TIPO -> time para int parc .)
    union           reduce using rule 149 (TIPO -> time para int parc .)
    intersect       reduce using rule 149 (TIPO -> time para int parc .)
    except          reduce using rule 149 (TIPO -> time para int parc .)
    order           reduce using rule 149 (TIPO -> time para int parc .)
    limit           reduce using rule 149 (TIPO -> time para int parc .)
    offset          reduce using rule 149 (TIPO -> time para int parc .)
    ptcoma          reduce using rule 149 (TIPO -> time para int parc .)
    mas             reduce using rule 149 (TIPO -> time para int parc .)
    menos           reduce using rule 149 (TIPO -> time para int parc .)
    multiplicacion  reduce using rule 149 (TIPO -> time para int parc .)
    division        reduce using rule 149 (TIPO -> time para int parc .)
    modulo          reduce using rule 149 (TIPO -> time para int parc .)
    elevado         reduce using rule 149 (TIPO -> time para int parc .)
    and             reduce using rule 149 (TIPO -> time para int parc .)
    or              reduce using rule 149 (TIPO -> time para int parc .)
    mayor           reduce using rule 149 (TIPO -> time para int parc .)
    menor           reduce using rule 149 (TIPO -> time para int parc .)
    mayor_igual     reduce using rule 149 (TIPO -> time para int parc .)
    menor_igual     reduce using rule 149 (TIPO -> time para int parc .)
    igual           reduce using rule 149 (TIPO -> time para int parc .)
    diferente1      reduce using rule 149 (TIPO -> time para int parc .)
    diferente2      reduce using rule 149 (TIPO -> time para int parc .)
    between         reduce using rule 149 (TIPO -> time para int parc .)
    is              reduce using rule 149 (TIPO -> time para int parc .)
    isnull          reduce using rule 149 (TIPO -> time para int parc .)
    notnull         reduce using rule 149 (TIPO -> time para int parc .)
    as              reduce using rule 149 (TIPO -> time para int parc .)
    cadenaString    reduce using rule 149 (TIPO -> time para int parc .)
    id              reduce using rule 149 (TIPO -> time para int parc .)
    cadena          reduce using rule 149 (TIPO -> time para int parc .)
    in              reduce using rule 149 (TIPO -> time para int parc .)
    not             reduce using rule 149 (TIPO -> time para int parc .)
    like            reduce using rule 149 (TIPO -> time para int parc .)
    parc            reduce using rule 149 (TIPO -> time para int parc .)
    then            reduce using rule 149 (TIPO -> time para int parc .)
    end             reduce using rule 149 (TIPO -> time para int parc .)
    else            reduce using rule 149 (TIPO -> time para int parc .)
    when            reduce using rule 149 (TIPO -> time para int parc .)
    constraint      reduce using rule 149 (TIPO -> time para int parc .)
    unique          reduce using rule 149 (TIPO -> time para int parc .)
    check           reduce using rule 149 (TIPO -> time para int parc .)
    default         reduce using rule 149 (TIPO -> time para int parc .)
    null            reduce using rule 149 (TIPO -> time para int parc .)
    primary         reduce using rule 149 (TIPO -> time para int parc .)
    references      reduce using rule 149 (TIPO -> time para int parc .)
    asc             reduce using rule 149 (TIPO -> time para int parc .)
    desc            reduce using rule 149 (TIPO -> time para int parc .)
    without         shift and go to state 472
    with            shift and go to state 473


state 418

    (171) TIPO -> time without time zone .

    r_from          reduce using rule 171 (TIPO -> time without time zone .)
    coma            reduce using rule 171 (TIPO -> time without time zone .)
    where           reduce using rule 171 (TIPO -> time without time zone .)
    group           reduce using rule 171 (TIPO -> time without time zone .)
    having          reduce using rule 171 (TIPO -> time without time zone .)
    union           reduce using rule 171 (TIPO -> time without time zone .)
    intersect       reduce using rule 171 (TIPO -> time without time zone .)
    except          reduce using rule 171 (TIPO -> time without time zone .)
    order           reduce using rule 171 (TIPO -> time without time zone .)
    limit           reduce using rule 171 (TIPO -> time without time zone .)
    offset          reduce using rule 171 (TIPO -> time without time zone .)
    ptcoma          reduce using rule 171 (TIPO -> time without time zone .)
    mas             reduce using rule 171 (TIPO -> time without time zone .)
    menos           reduce using rule 171 (TIPO -> time without time zone .)
    multiplicacion  reduce using rule 171 (TIPO -> time without time zone .)
    division        reduce using rule 171 (TIPO -> time without time zone .)
    modulo          reduce using rule 171 (TIPO -> time without time zone .)
    elevado         reduce using rule 171 (TIPO -> time without time zone .)
    and             reduce using rule 171 (TIPO -> time without time zone .)
    or              reduce using rule 171 (TIPO -> time without time zone .)
    mayor           reduce using rule 171 (TIPO -> time without time zone .)
    menor           reduce using rule 171 (TIPO -> time without time zone .)
    mayor_igual     reduce using rule 171 (TIPO -> time without time zone .)
    menor_igual     reduce using rule 171 (TIPO -> time without time zone .)
    igual           reduce using rule 171 (TIPO -> time without time zone .)
    diferente1      reduce using rule 171 (TIPO -> time without time zone .)
    diferente2      reduce using rule 171 (TIPO -> time without time zone .)
    between         reduce using rule 171 (TIPO -> time without time zone .)
    is              reduce using rule 171 (TIPO -> time without time zone .)
    isnull          reduce using rule 171 (TIPO -> time without time zone .)
    notnull         reduce using rule 171 (TIPO -> time without time zone .)
    as              reduce using rule 171 (TIPO -> time without time zone .)
    cadenaString    reduce using rule 171 (TIPO -> time without time zone .)
    id              reduce using rule 171 (TIPO -> time without time zone .)
    cadena          reduce using rule 171 (TIPO -> time without time zone .)
    in              reduce using rule 171 (TIPO -> time without time zone .)
    not             reduce using rule 171 (TIPO -> time without time zone .)
    like            reduce using rule 171 (TIPO -> time without time zone .)
    parc            reduce using rule 171 (TIPO -> time without time zone .)
    then            reduce using rule 171 (TIPO -> time without time zone .)
    end             reduce using rule 171 (TIPO -> time without time zone .)
    else            reduce using rule 171 (TIPO -> time without time zone .)
    when            reduce using rule 171 (TIPO -> time without time zone .)
    constraint      reduce using rule 171 (TIPO -> time without time zone .)
    unique          reduce using rule 171 (TIPO -> time without time zone .)
    check           reduce using rule 171 (TIPO -> time without time zone .)
    default         reduce using rule 171 (TIPO -> time without time zone .)
    null            reduce using rule 171 (TIPO -> time without time zone .)
    primary         reduce using rule 171 (TIPO -> time without time zone .)
    references      reduce using rule 171 (TIPO -> time without time zone .)
    asc             reduce using rule 171 (TIPO -> time without time zone .)
    desc            reduce using rule 171 (TIPO -> time without time zone .)


state 419

    (172) TIPO -> time with time zone .

    r_from          reduce using rule 172 (TIPO -> time with time zone .)
    coma            reduce using rule 172 (TIPO -> time with time zone .)
    where           reduce using rule 172 (TIPO -> time with time zone .)
    group           reduce using rule 172 (TIPO -> time with time zone .)
    having          reduce using rule 172 (TIPO -> time with time zone .)
    union           reduce using rule 172 (TIPO -> time with time zone .)
    intersect       reduce using rule 172 (TIPO -> time with time zone .)
    except          reduce using rule 172 (TIPO -> time with time zone .)
    order           reduce using rule 172 (TIPO -> time with time zone .)
    limit           reduce using rule 172 (TIPO -> time with time zone .)
    offset          reduce using rule 172 (TIPO -> time with time zone .)
    ptcoma          reduce using rule 172 (TIPO -> time with time zone .)
    mas             reduce using rule 172 (TIPO -> time with time zone .)
    menos           reduce using rule 172 (TIPO -> time with time zone .)
    multiplicacion  reduce using rule 172 (TIPO -> time with time zone .)
    division        reduce using rule 172 (TIPO -> time with time zone .)
    modulo          reduce using rule 172 (TIPO -> time with time zone .)
    elevado         reduce using rule 172 (TIPO -> time with time zone .)
    and             reduce using rule 172 (TIPO -> time with time zone .)
    or              reduce using rule 172 (TIPO -> time with time zone .)
    mayor           reduce using rule 172 (TIPO -> time with time zone .)
    menor           reduce using rule 172 (TIPO -> time with time zone .)
    mayor_igual     reduce using rule 172 (TIPO -> time with time zone .)
    menor_igual     reduce using rule 172 (TIPO -> time with time zone .)
    igual           reduce using rule 172 (TIPO -> time with time zone .)
    diferente1      reduce using rule 172 (TIPO -> time with time zone .)
    diferente2      reduce using rule 172 (TIPO -> time with time zone .)
    between         reduce using rule 172 (TIPO -> time with time zone .)
    is              reduce using rule 172 (TIPO -> time with time zone .)
    isnull          reduce using rule 172 (TIPO -> time with time zone .)
    notnull         reduce using rule 172 (TIPO -> time with time zone .)
    as              reduce using rule 172 (TIPO -> time with time zone .)
    cadenaString    reduce using rule 172 (TIPO -> time with time zone .)
    id              reduce using rule 172 (TIPO -> time with time zone .)
    cadena          reduce using rule 172 (TIPO -> time with time zone .)
    in              reduce using rule 172 (TIPO -> time with time zone .)
    not             reduce using rule 172 (TIPO -> time with time zone .)
    like            reduce using rule 172 (TIPO -> time with time zone .)
    parc            reduce using rule 172 (TIPO -> time with time zone .)
    then            reduce using rule 172 (TIPO -> time with time zone .)
    end             reduce using rule 172 (TIPO -> time with time zone .)
    else            reduce using rule 172 (TIPO -> time with time zone .)
    when            reduce using rule 172 (TIPO -> time with time zone .)
    constraint      reduce using rule 172 (TIPO -> time with time zone .)
    unique          reduce using rule 172 (TIPO -> time with time zone .)
    check           reduce using rule 172 (TIPO -> time with time zone .)
    default         reduce using rule 172 (TIPO -> time with time zone .)
    null            reduce using rule 172 (TIPO -> time with time zone .)
    primary         reduce using rule 172 (TIPO -> time with time zone .)
    references      reduce using rule 172 (TIPO -> time with time zone .)
    asc             reduce using rule 172 (TIPO -> time with time zone .)
    desc            reduce using rule 172 (TIPO -> time with time zone .)


state 420

    (232) EXP -> extract para FIELDS r_from timestamp cadena . parc

    parc            shift and go to state 474


state 421

    (74) COLDEF -> id TIPO LOPCOLUMN .
    (75) LOPCOLUMN -> LOPCOLUMN . OPCOLUMN
    (77) OPCOLUMN -> . constraint id unique
    (78) OPCOLUMN -> . unique
    (79) OPCOLUMN -> . constraint id check para CONDCHECK parc
    (80) OPCOLUMN -> . check para CONDCHECK parc
    (81) OPCOLUMN -> . default EXP
    (82) OPCOLUMN -> . not null
    (83) OPCOLUMN -> . null
    (84) OPCOLUMN -> . primary key
    (85) OPCOLUMN -> . references id

    parc            reduce using rule 74 (COLDEF -> id TIPO LOPCOLUMN .)
    coma            reduce using rule 74 (COLDEF -> id TIPO LOPCOLUMN .)
    constraint      shift and go to state 423
    unique          shift and go to state 424
    check           shift and go to state 425
    default         shift and go to state 426
    not             shift and go to state 427
    null            shift and go to state 428
    primary         shift and go to state 429
    references      shift and go to state 430

    OPCOLUMN                       shift and go to state 475

state 422

    (76) LOPCOLUMN -> OPCOLUMN .

    constraint      reduce using rule 76 (LOPCOLUMN -> OPCOLUMN .)
    unique          reduce using rule 76 (LOPCOLUMN -> OPCOLUMN .)
    check           reduce using rule 76 (LOPCOLUMN -> OPCOLUMN .)
    default         reduce using rule 76 (LOPCOLUMN -> OPCOLUMN .)
    not             reduce using rule 76 (LOPCOLUMN -> OPCOLUMN .)
    null            reduce using rule 76 (LOPCOLUMN -> OPCOLUMN .)
    primary         reduce using rule 76 (LOPCOLUMN -> OPCOLUMN .)
    references      reduce using rule 76 (LOPCOLUMN -> OPCOLUMN .)
    parc            reduce using rule 76 (LOPCOLUMN -> OPCOLUMN .)
    coma            reduce using rule 76 (LOPCOLUMN -> OPCOLUMN .)


state 423

    (77) OPCOLUMN -> constraint . id unique
    (79) OPCOLUMN -> constraint . id check para CONDCHECK parc

    id              shift and go to state 476


state 424

    (78) OPCOLUMN -> unique .

    constraint      reduce using rule 78 (OPCOLUMN -> unique .)
    unique          reduce using rule 78 (OPCOLUMN -> unique .)
    check           reduce using rule 78 (OPCOLUMN -> unique .)
    default         reduce using rule 78 (OPCOLUMN -> unique .)
    not             reduce using rule 78 (OPCOLUMN -> unique .)
    null            reduce using rule 78 (OPCOLUMN -> unique .)
    primary         reduce using rule 78 (OPCOLUMN -> unique .)
    references      reduce using rule 78 (OPCOLUMN -> unique .)
    parc            reduce using rule 78 (OPCOLUMN -> unique .)
    coma            reduce using rule 78 (OPCOLUMN -> unique .)


state 425

    (80) OPCOLUMN -> check . para CONDCHECK parc

    para            shift and go to state 477


state 426

    (81) OPCOLUMN -> default . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 478
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 427

    (82) OPCOLUMN -> not . null

    null            shift and go to state 479


state 428

    (83) OPCOLUMN -> null .

    constraint      reduce using rule 83 (OPCOLUMN -> null .)
    unique          reduce using rule 83 (OPCOLUMN -> null .)
    check           reduce using rule 83 (OPCOLUMN -> null .)
    default         reduce using rule 83 (OPCOLUMN -> null .)
    not             reduce using rule 83 (OPCOLUMN -> null .)
    null            reduce using rule 83 (OPCOLUMN -> null .)
    primary         reduce using rule 83 (OPCOLUMN -> null .)
    references      reduce using rule 83 (OPCOLUMN -> null .)
    parc            reduce using rule 83 (OPCOLUMN -> null .)
    coma            reduce using rule 83 (OPCOLUMN -> null .)


state 429

    (84) OPCOLUMN -> primary . key

    key             shift and go to state 480


state 430

    (85) OPCOLUMN -> references . id

    id              shift and go to state 481


state 431

    (67) CREATETABLE -> create table id para LDEF parc ptcoma .

    use             reduce using rule 67 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    select          reduce using rule 67 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    create          reduce using rule 67 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    update          reduce using rule 67 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    delete          reduce using rule 67 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    alter           reduce using rule 67 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    drop            reduce using rule 67 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    insert          reduce using rule 67 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    case            reduce using rule 67 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    show            reduce using rule 67 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    $end            reduce using rule 67 (CREATETABLE -> create table id para LDEF parc ptcoma .)


state 432

    (68) CREATETABLE -> create table id para LDEF parc HERENCIA . ptcoma

    ptcoma          shift and go to state 482


state 433

    (97) HERENCIA -> inherits . para id parc

    para            shift and go to state 483


state 434

    (69) LDEF -> LDEF coma COLDEF .

    parc            reduce using rule 69 (LDEF -> LDEF coma COLDEF .)
    coma            reduce using rule 69 (LDEF -> LDEF coma COLDEF .)


state 435

    (72) COLDEF -> constraint id OPCONST .

    parc            reduce using rule 72 (COLDEF -> constraint id OPCONST .)
    coma            reduce using rule 72 (COLDEF -> constraint id OPCONST .)


state 436

    (86) OPCONST -> primary key para . LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 484
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 437

    (87) OPCONST -> foreign key para . LEXP parc references id para LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 485
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 438

    (88) OPCONST -> unique para LEXP . parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 486
    coma            shift and go to state 89


state 439

    (89) OPCONST -> check para CONDCHECK . parc

    parc            shift and go to state 487


state 440

    (90) CONDCHECK -> EXP . mayor EXP
    (91) CONDCHECK -> EXP . menor EXP
    (92) CONDCHECK -> EXP . mayor_igual EXP
    (93) CONDCHECK -> EXP . menor_igual EXP
    (94) CONDCHECK -> EXP . igual EXP
    (95) CONDCHECK -> EXP . diferente1 EXP
    (96) CONDCHECK -> EXP . diferente2 EXP
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    mayor           shift and go to state 488
    menor           shift and go to state 489
    mayor_igual     shift and go to state 490
    menor_igual     shift and go to state 491
    igual           shift and go to state 492
    diferente1      shift and go to state 493
    diferente2      shift and go to state 494
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    and             shift and go to state 97
    or              shift and go to state 98
    between         shift and go to state 106
    is              shift and go to state 107
    isnull          shift and go to state 109
    notnull         shift and go to state 110
    as              shift and go to state 111
    cadenaString    shift and go to state 112
    id              shift and go to state 113
    cadena          shift and go to state 114
    in              shift and go to state 115
    not             shift and go to state 108
    like            shift and go to state 116


state 441

    (98) CREATETYPE -> create type id as enum para LEXP . parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 495
    coma            shift and go to state 89


state 442

    (51) CREATEDB -> create RD if not exist id OPCCDB .

    ptcoma          reduce using rule 51 (CREATEDB -> create RD if not exist id OPCCDB .)


state 443

    (130) LCAMPOS -> LCAMPOS coma id igual . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 496
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 444

    (37) OP -> alter column id set . not null
    (38) OP -> alter column id set . null

    not             shift and go to state 497
    null            shift and go to state 498


state 445

    (46) alc -> alter column id type . TIPO
    (137) TIPO -> . interval cadena
    (138) TIPO -> . decimal para int coma int parc
    (139) TIPO -> . decimal para int parc
    (140) TIPO -> . decimal
    (141) TIPO -> . numeric para int coma int parc
    (142) TIPO -> . numeric para int parc
    (143) TIPO -> . numeric
    (144) TIPO -> . varchar para int parc
    (145) TIPO -> . timestamp para int parc
    (146) TIPO -> . character para int parc
    (147) TIPO -> . interval para int parc
    (148) TIPO -> . char para int parc
    (149) TIPO -> . time para int parc
    (150) TIPO -> . character varying para int parc
    (151) TIPO -> . timestamp para int parc without time zone
    (152) TIPO -> . timestamp para int parc with time zone
    (153) TIPO -> . time para int parc without time zone
    (154) TIPO -> . time para int parc with time zone
    (155) TIPO -> . interval para int parc cadena
    (156) TIPO -> . smallint
    (157) TIPO -> . integer
    (158) TIPO -> . r_int
    (159) TIPO -> . bigint
    (160) TIPO -> . real
    (161) TIPO -> . double precision
    (162) TIPO -> . money
    (163) TIPO -> . text
    (164) TIPO -> . timestamp
    (165) TIPO -> . date
    (166) TIPO -> . time
    (167) TIPO -> . interval
    (168) TIPO -> . boolean
    (169) TIPO -> . timestamp without time zone
    (170) TIPO -> . timestamp with time zone
    (171) TIPO -> . time without time zone
    (172) TIPO -> . time with time zone
    (173) TIPO -> . id

    interval        shift and go to state 193
    decimal         shift and go to state 194
    numeric         shift and go to state 195
    varchar         shift and go to state 196
    timestamp       shift and go to state 197
    character       shift and go to state 198
    char            shift and go to state 199
    time            shift and go to state 200
    smallint        shift and go to state 201
    integer         shift and go to state 202
    r_int           shift and go to state 203
    bigint          shift and go to state 204
    real            shift and go to state 205
    double          shift and go to state 206
    money           shift and go to state 207
    text            shift and go to state 208
    date            shift and go to state 209
    boolean         shift and go to state 210
    id              shift and go to state 211

    TIPO                           shift and go to state 499

state 446

    (32) OP -> add column id TIPO .

    ptcoma          reduce using rule 32 (OP -> add column id TIPO .)


state 447

    (33) OP -> add check para CONDCHECK . parc

    parc            shift and go to state 500


state 448

    (34) OP -> add constraint id unique . para id parc

    para            shift and go to state 501


state 449

    (36) OP -> add constraint id foreign . key para LEXP parc references id para LEXP parc

    key             shift and go to state 502


state 450

    (35) OP -> add foreign key para . LEXP parc references id para LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 503
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 451

    (42) OP -> rename column id to . id

    id              shift and go to state 504


state 452

    (46) alc -> alter column . id type TIPO

    id              shift and go to state 505


state 453

    (23) INSERT -> insert into id values para LEXP parc .

    ptcoma          reduce using rule 23 (INSERT -> insert into id values para LEXP parc .)


state 454

    (24) INSERT -> insert into id para LEXP parc values . para LEXP parc

    para            shift and go to state 506


state 455

    (99) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING . COMBINING ORDER LIMIT
    (113) COMBINING -> . union EXP
    (114) COMBINING -> . union all EXP
    (115) COMBINING -> . intersect EXP
    (116) COMBINING -> . intersect all EXP
    (117) COMBINING -> . except EXP
    (118) COMBINING -> . except all EXP
    (119) COMBINING -> .

  ! shift/reduce conflict for union resolved as shift
  ! shift/reduce conflict for intersect resolved as shift
  ! shift/reduce conflict for except resolved as shift
    union           shift and go to state 333
    intersect       shift and go to state 334
    except          shift and go to state 335
    r_from          reduce using rule 119 (COMBINING -> .)
    coma            reduce using rule 119 (COMBINING -> .)
    where           reduce using rule 119 (COMBINING -> .)
    group           reduce using rule 119 (COMBINING -> .)
    having          reduce using rule 119 (COMBINING -> .)
    order           reduce using rule 119 (COMBINING -> .)
    limit           reduce using rule 119 (COMBINING -> .)
    offset          reduce using rule 119 (COMBINING -> .)
    ptcoma          reduce using rule 119 (COMBINING -> .)
    mas             reduce using rule 119 (COMBINING -> .)
    menos           reduce using rule 119 (COMBINING -> .)
    multiplicacion  reduce using rule 119 (COMBINING -> .)
    division        reduce using rule 119 (COMBINING -> .)
    modulo          reduce using rule 119 (COMBINING -> .)
    elevado         reduce using rule 119 (COMBINING -> .)
    and             reduce using rule 119 (COMBINING -> .)
    or              reduce using rule 119 (COMBINING -> .)
    mayor           reduce using rule 119 (COMBINING -> .)
    menor           reduce using rule 119 (COMBINING -> .)
    mayor_igual     reduce using rule 119 (COMBINING -> .)
    menor_igual     reduce using rule 119 (COMBINING -> .)
    igual           reduce using rule 119 (COMBINING -> .)
    diferente1      reduce using rule 119 (COMBINING -> .)
    diferente2      reduce using rule 119 (COMBINING -> .)
    between         reduce using rule 119 (COMBINING -> .)
    is              reduce using rule 119 (COMBINING -> .)
    isnull          reduce using rule 119 (COMBINING -> .)
    notnull         reduce using rule 119 (COMBINING -> .)
    as              reduce using rule 119 (COMBINING -> .)
    cadenaString    reduce using rule 119 (COMBINING -> .)
    id              reduce using rule 119 (COMBINING -> .)
    cadena          reduce using rule 119 (COMBINING -> .)
    in              reduce using rule 119 (COMBINING -> .)
    not             reduce using rule 119 (COMBINING -> .)
    like            reduce using rule 119 (COMBINING -> .)
    parc            reduce using rule 119 (COMBINING -> .)
    then            reduce using rule 119 (COMBINING -> .)
    end             reduce using rule 119 (COMBINING -> .)
    else            reduce using rule 119 (COMBINING -> .)
    when            reduce using rule 119 (COMBINING -> .)
    constraint      reduce using rule 119 (COMBINING -> .)
    unique          reduce using rule 119 (COMBINING -> .)
    check           reduce using rule 119 (COMBINING -> .)
    default         reduce using rule 119 (COMBINING -> .)
    null            reduce using rule 119 (COMBINING -> .)
    primary         reduce using rule 119 (COMBINING -> .)
    references      reduce using rule 119 (COMBINING -> .)
    asc             reduce using rule 119 (COMBINING -> .)
    desc            reduce using rule 119 (COMBINING -> .)

  ! union           [ reduce using rule 119 (COMBINING -> .) ]
  ! intersect       [ reduce using rule 119 (COMBINING -> .) ]
  ! except          [ reduce using rule 119 (COMBINING -> .) ]

    COMBINING                      shift and go to state 507

state 456

    (100) SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING . ORDER LIMIT
    (124) ORDER -> . order by LEXP ORD
    (125) ORDER -> . order by LEXP
    (126) ORDER -> .

  ! shift/reduce conflict for order resolved as shift
    order           shift and go to state 394
    r_from          reduce using rule 126 (ORDER -> .)
    coma            reduce using rule 126 (ORDER -> .)
    where           reduce using rule 126 (ORDER -> .)
    group           reduce using rule 126 (ORDER -> .)
    having          reduce using rule 126 (ORDER -> .)
    union           reduce using rule 126 (ORDER -> .)
    intersect       reduce using rule 126 (ORDER -> .)
    except          reduce using rule 126 (ORDER -> .)
    limit           reduce using rule 126 (ORDER -> .)
    offset          reduce using rule 126 (ORDER -> .)
    ptcoma          reduce using rule 126 (ORDER -> .)
    mas             reduce using rule 126 (ORDER -> .)
    menos           reduce using rule 126 (ORDER -> .)
    multiplicacion  reduce using rule 126 (ORDER -> .)
    division        reduce using rule 126 (ORDER -> .)
    modulo          reduce using rule 126 (ORDER -> .)
    elevado         reduce using rule 126 (ORDER -> .)
    and             reduce using rule 126 (ORDER -> .)
    or              reduce using rule 126 (ORDER -> .)
    mayor           reduce using rule 126 (ORDER -> .)
    menor           reduce using rule 126 (ORDER -> .)
    mayor_igual     reduce using rule 126 (ORDER -> .)
    menor_igual     reduce using rule 126 (ORDER -> .)
    igual           reduce using rule 126 (ORDER -> .)
    diferente1      reduce using rule 126 (ORDER -> .)
    diferente2      reduce using rule 126 (ORDER -> .)
    between         reduce using rule 126 (ORDER -> .)
    is              reduce using rule 126 (ORDER -> .)
    isnull          reduce using rule 126 (ORDER -> .)
    notnull         reduce using rule 126 (ORDER -> .)
    as              reduce using rule 126 (ORDER -> .)
    cadenaString    reduce using rule 126 (ORDER -> .)
    id              reduce using rule 126 (ORDER -> .)
    cadena          reduce using rule 126 (ORDER -> .)
    in              reduce using rule 126 (ORDER -> .)
    not             reduce using rule 126 (ORDER -> .)
    like            reduce using rule 126 (ORDER -> .)
    parc            reduce using rule 126 (ORDER -> .)
    then            reduce using rule 126 (ORDER -> .)
    end             reduce using rule 126 (ORDER -> .)
    else            reduce using rule 126 (ORDER -> .)
    when            reduce using rule 126 (ORDER -> .)
    constraint      reduce using rule 126 (ORDER -> .)
    unique          reduce using rule 126 (ORDER -> .)
    check           reduce using rule 126 (ORDER -> .)
    default         reduce using rule 126 (ORDER -> .)
    null            reduce using rule 126 (ORDER -> .)
    primary         reduce using rule 126 (ORDER -> .)
    references      reduce using rule 126 (ORDER -> .)
    asc             reduce using rule 126 (ORDER -> .)
    desc            reduce using rule 126 (ORDER -> .)

  ! order           [ reduce using rule 126 (ORDER -> .) ]

    ORDER                          shift and go to state 508

state 457

    (101) SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .

    ptcoma          reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    r_from          reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    coma            reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    where           reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    group           reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    having          reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    union           reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    intersect       reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    except          reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    order           reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    limit           reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    offset          reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mas             reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menos           reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    multiplicacion  reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    division        reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    modulo          reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    elevado         reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    and             reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    or              reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor           reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor           reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor_igual     reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor_igual     reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    igual           reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente1      reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente2      reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    between         reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    is              reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    isnull          reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    notnull         reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    as              reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadenaString    reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    id              reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadena          reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    in              reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    not             reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    like            reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    parc            reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    then            reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    end             reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    else            reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    when            reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    constraint      reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    unique          reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    check           reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    default         reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    null            reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    primary         reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    references      reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    asc             reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    desc            reduce using rule 101 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)


state 458

    (102) LIMIT -> limit . int
    (103) LIMIT -> limit . all
    (105) LIMIT -> limit . int offset int
    (107) LIMIT -> limit . all offset int

    int             shift and go to state 509
    all             shift and go to state 510


state 459

    (104) LIMIT -> offset . int
    (106) LIMIT -> offset . int limit int
    (108) LIMIT -> offset . int limit all

    int             shift and go to state 511


state 460

    (124) ORDER -> order by . LEXP ORD
    (125) ORDER -> order by . LEXP
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 512
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 461

    (114) COMBINING -> union all EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    r_from          reduce using rule 114 (COMBINING -> union all EXP .)
    coma            reduce using rule 114 (COMBINING -> union all EXP .)
    where           reduce using rule 114 (COMBINING -> union all EXP .)
    group           reduce using rule 114 (COMBINING -> union all EXP .)
    having          reduce using rule 114 (COMBINING -> union all EXP .)
    union           reduce using rule 114 (COMBINING -> union all EXP .)
    intersect       reduce using rule 114 (COMBINING -> union all EXP .)
    except          reduce using rule 114 (COMBINING -> union all EXP .)
    order           reduce using rule 114 (COMBINING -> union all EXP .)
    limit           reduce using rule 114 (COMBINING -> union all EXP .)
    offset          reduce using rule 114 (COMBINING -> union all EXP .)
    ptcoma          reduce using rule 114 (COMBINING -> union all EXP .)
    parc            reduce using rule 114 (COMBINING -> union all EXP .)
    then            reduce using rule 114 (COMBINING -> union all EXP .)
    end             reduce using rule 114 (COMBINING -> union all EXP .)
    else            reduce using rule 114 (COMBINING -> union all EXP .)
    when            reduce using rule 114 (COMBINING -> union all EXP .)
    constraint      reduce using rule 114 (COMBINING -> union all EXP .)
    unique          reduce using rule 114 (COMBINING -> union all EXP .)
    check           reduce using rule 114 (COMBINING -> union all EXP .)
    default         reduce using rule 114 (COMBINING -> union all EXP .)
    null            reduce using rule 114 (COMBINING -> union all EXP .)
    primary         reduce using rule 114 (COMBINING -> union all EXP .)
    references      reduce using rule 114 (COMBINING -> union all EXP .)
    asc             reduce using rule 114 (COMBINING -> union all EXP .)
    desc            reduce using rule 114 (COMBINING -> union all EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    and             shift and go to state 97
    or              shift and go to state 98
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105
    between         shift and go to state 106
    is              shift and go to state 107
    isnull          shift and go to state 109
    notnull         shift and go to state 110
    as              shift and go to state 111
    cadenaString    shift and go to state 112
    id              shift and go to state 113
    cadena          shift and go to state 114
    in              shift and go to state 115
    not             shift and go to state 108
    like            shift and go to state 116

  ! mas             [ reduce using rule 114 (COMBINING -> union all EXP .) ]
  ! menos           [ reduce using rule 114 (COMBINING -> union all EXP .) ]
  ! multiplicacion  [ reduce using rule 114 (COMBINING -> union all EXP .) ]
  ! division        [ reduce using rule 114 (COMBINING -> union all EXP .) ]
  ! modulo          [ reduce using rule 114 (COMBINING -> union all EXP .) ]
  ! elevado         [ reduce using rule 114 (COMBINING -> union all EXP .) ]
  ! and             [ reduce using rule 114 (COMBINING -> union all EXP .) ]
  ! or              [ reduce using rule 114 (COMBINING -> union all EXP .) ]
  ! mayor           [ reduce using rule 114 (COMBINING -> union all EXP .) ]
  ! menor           [ reduce using rule 114 (COMBINING -> union all EXP .) ]
  ! mayor_igual     [ reduce using rule 114 (COMBINING -> union all EXP .) ]
  ! menor_igual     [ reduce using rule 114 (COMBINING -> union all EXP .) ]
  ! igual           [ reduce using rule 114 (COMBINING -> union all EXP .) ]
  ! diferente1      [ reduce using rule 114 (COMBINING -> union all EXP .) ]
  ! diferente2      [ reduce using rule 114 (COMBINING -> union all EXP .) ]
  ! between         [ reduce using rule 114 (COMBINING -> union all EXP .) ]
  ! is              [ reduce using rule 114 (COMBINING -> union all EXP .) ]
  ! isnull          [ reduce using rule 114 (COMBINING -> union all EXP .) ]
  ! notnull         [ reduce using rule 114 (COMBINING -> union all EXP .) ]
  ! as              [ reduce using rule 114 (COMBINING -> union all EXP .) ]
  ! cadenaString    [ reduce using rule 114 (COMBINING -> union all EXP .) ]
  ! id              [ reduce using rule 114 (COMBINING -> union all EXP .) ]
  ! cadena          [ reduce using rule 114 (COMBINING -> union all EXP .) ]
  ! in              [ reduce using rule 114 (COMBINING -> union all EXP .) ]
  ! not             [ reduce using rule 114 (COMBINING -> union all EXP .) ]
  ! like            [ reduce using rule 114 (COMBINING -> union all EXP .) ]


state 462

    (230) EXP -> all para . LEXP parc
    (225) EXP -> para . EXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 214
    EXP                            shift and go to state 513
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 463

    (116) COMBINING -> intersect all EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    r_from          reduce using rule 116 (COMBINING -> intersect all EXP .)
    coma            reduce using rule 116 (COMBINING -> intersect all EXP .)
    where           reduce using rule 116 (COMBINING -> intersect all EXP .)
    group           reduce using rule 116 (COMBINING -> intersect all EXP .)
    having          reduce using rule 116 (COMBINING -> intersect all EXP .)
    union           reduce using rule 116 (COMBINING -> intersect all EXP .)
    intersect       reduce using rule 116 (COMBINING -> intersect all EXP .)
    except          reduce using rule 116 (COMBINING -> intersect all EXP .)
    order           reduce using rule 116 (COMBINING -> intersect all EXP .)
    limit           reduce using rule 116 (COMBINING -> intersect all EXP .)
    offset          reduce using rule 116 (COMBINING -> intersect all EXP .)
    ptcoma          reduce using rule 116 (COMBINING -> intersect all EXP .)
    parc            reduce using rule 116 (COMBINING -> intersect all EXP .)
    then            reduce using rule 116 (COMBINING -> intersect all EXP .)
    end             reduce using rule 116 (COMBINING -> intersect all EXP .)
    else            reduce using rule 116 (COMBINING -> intersect all EXP .)
    when            reduce using rule 116 (COMBINING -> intersect all EXP .)
    constraint      reduce using rule 116 (COMBINING -> intersect all EXP .)
    unique          reduce using rule 116 (COMBINING -> intersect all EXP .)
    check           reduce using rule 116 (COMBINING -> intersect all EXP .)
    default         reduce using rule 116 (COMBINING -> intersect all EXP .)
    null            reduce using rule 116 (COMBINING -> intersect all EXP .)
    primary         reduce using rule 116 (COMBINING -> intersect all EXP .)
    references      reduce using rule 116 (COMBINING -> intersect all EXP .)
    asc             reduce using rule 116 (COMBINING -> intersect all EXP .)
    desc            reduce using rule 116 (COMBINING -> intersect all EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    and             shift and go to state 97
    or              shift and go to state 98
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105
    between         shift and go to state 106
    is              shift and go to state 107
    isnull          shift and go to state 109
    notnull         shift and go to state 110
    as              shift and go to state 111
    cadenaString    shift and go to state 112
    id              shift and go to state 113
    cadena          shift and go to state 114
    in              shift and go to state 115
    not             shift and go to state 108
    like            shift and go to state 116

  ! mas             [ reduce using rule 116 (COMBINING -> intersect all EXP .) ]
  ! menos           [ reduce using rule 116 (COMBINING -> intersect all EXP .) ]
  ! multiplicacion  [ reduce using rule 116 (COMBINING -> intersect all EXP .) ]
  ! division        [ reduce using rule 116 (COMBINING -> intersect all EXP .) ]
  ! modulo          [ reduce using rule 116 (COMBINING -> intersect all EXP .) ]
  ! elevado         [ reduce using rule 116 (COMBINING -> intersect all EXP .) ]
  ! and             [ reduce using rule 116 (COMBINING -> intersect all EXP .) ]
  ! or              [ reduce using rule 116 (COMBINING -> intersect all EXP .) ]
  ! mayor           [ reduce using rule 116 (COMBINING -> intersect all EXP .) ]
  ! menor           [ reduce using rule 116 (COMBINING -> intersect all EXP .) ]
  ! mayor_igual     [ reduce using rule 116 (COMBINING -> intersect all EXP .) ]
  ! menor_igual     [ reduce using rule 116 (COMBINING -> intersect all EXP .) ]
  ! igual           [ reduce using rule 116 (COMBINING -> intersect all EXP .) ]
  ! diferente1      [ reduce using rule 116 (COMBINING -> intersect all EXP .) ]
  ! diferente2      [ reduce using rule 116 (COMBINING -> intersect all EXP .) ]
  ! between         [ reduce using rule 116 (COMBINING -> intersect all EXP .) ]
  ! is              [ reduce using rule 116 (COMBINING -> intersect all EXP .) ]
  ! isnull          [ reduce using rule 116 (COMBINING -> intersect all EXP .) ]
  ! notnull         [ reduce using rule 116 (COMBINING -> intersect all EXP .) ]
  ! as              [ reduce using rule 116 (COMBINING -> intersect all EXP .) ]
  ! cadenaString    [ reduce using rule 116 (COMBINING -> intersect all EXP .) ]
  ! id              [ reduce using rule 116 (COMBINING -> intersect all EXP .) ]
  ! cadena          [ reduce using rule 116 (COMBINING -> intersect all EXP .) ]
  ! in              [ reduce using rule 116 (COMBINING -> intersect all EXP .) ]
  ! not             [ reduce using rule 116 (COMBINING -> intersect all EXP .) ]
  ! like            [ reduce using rule 116 (COMBINING -> intersect all EXP .) ]


state 464

    (118) COMBINING -> except all EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    r_from          reduce using rule 118 (COMBINING -> except all EXP .)
    coma            reduce using rule 118 (COMBINING -> except all EXP .)
    where           reduce using rule 118 (COMBINING -> except all EXP .)
    group           reduce using rule 118 (COMBINING -> except all EXP .)
    having          reduce using rule 118 (COMBINING -> except all EXP .)
    union           reduce using rule 118 (COMBINING -> except all EXP .)
    intersect       reduce using rule 118 (COMBINING -> except all EXP .)
    except          reduce using rule 118 (COMBINING -> except all EXP .)
    order           reduce using rule 118 (COMBINING -> except all EXP .)
    limit           reduce using rule 118 (COMBINING -> except all EXP .)
    offset          reduce using rule 118 (COMBINING -> except all EXP .)
    ptcoma          reduce using rule 118 (COMBINING -> except all EXP .)
    parc            reduce using rule 118 (COMBINING -> except all EXP .)
    then            reduce using rule 118 (COMBINING -> except all EXP .)
    end             reduce using rule 118 (COMBINING -> except all EXP .)
    else            reduce using rule 118 (COMBINING -> except all EXP .)
    when            reduce using rule 118 (COMBINING -> except all EXP .)
    constraint      reduce using rule 118 (COMBINING -> except all EXP .)
    unique          reduce using rule 118 (COMBINING -> except all EXP .)
    check           reduce using rule 118 (COMBINING -> except all EXP .)
    default         reduce using rule 118 (COMBINING -> except all EXP .)
    null            reduce using rule 118 (COMBINING -> except all EXP .)
    primary         reduce using rule 118 (COMBINING -> except all EXP .)
    references      reduce using rule 118 (COMBINING -> except all EXP .)
    asc             reduce using rule 118 (COMBINING -> except all EXP .)
    desc            reduce using rule 118 (COMBINING -> except all EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    and             shift and go to state 97
    or              shift and go to state 98
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105
    between         shift and go to state 106
    is              shift and go to state 107
    isnull          shift and go to state 109
    notnull         shift and go to state 110
    as              shift and go to state 111
    cadenaString    shift and go to state 112
    id              shift and go to state 113
    cadena          shift and go to state 114
    in              shift and go to state 115
    not             shift and go to state 108
    like            shift and go to state 116

  ! mas             [ reduce using rule 118 (COMBINING -> except all EXP .) ]
  ! menos           [ reduce using rule 118 (COMBINING -> except all EXP .) ]
  ! multiplicacion  [ reduce using rule 118 (COMBINING -> except all EXP .) ]
  ! division        [ reduce using rule 118 (COMBINING -> except all EXP .) ]
  ! modulo          [ reduce using rule 118 (COMBINING -> except all EXP .) ]
  ! elevado         [ reduce using rule 118 (COMBINING -> except all EXP .) ]
  ! and             [ reduce using rule 118 (COMBINING -> except all EXP .) ]
  ! or              [ reduce using rule 118 (COMBINING -> except all EXP .) ]
  ! mayor           [ reduce using rule 118 (COMBINING -> except all EXP .) ]
  ! menor           [ reduce using rule 118 (COMBINING -> except all EXP .) ]
  ! mayor_igual     [ reduce using rule 118 (COMBINING -> except all EXP .) ]
  ! menor_igual     [ reduce using rule 118 (COMBINING -> except all EXP .) ]
  ! igual           [ reduce using rule 118 (COMBINING -> except all EXP .) ]
  ! diferente1      [ reduce using rule 118 (COMBINING -> except all EXP .) ]
  ! diferente2      [ reduce using rule 118 (COMBINING -> except all EXP .) ]
  ! between         [ reduce using rule 118 (COMBINING -> except all EXP .) ]
  ! is              [ reduce using rule 118 (COMBINING -> except all EXP .) ]
  ! isnull          [ reduce using rule 118 (COMBINING -> except all EXP .) ]
  ! notnull         [ reduce using rule 118 (COMBINING -> except all EXP .) ]
  ! as              [ reduce using rule 118 (COMBINING -> except all EXP .) ]
  ! cadenaString    [ reduce using rule 118 (COMBINING -> except all EXP .) ]
  ! id              [ reduce using rule 118 (COMBINING -> except all EXP .) ]
  ! cadena          [ reduce using rule 118 (COMBINING -> except all EXP .) ]
  ! in              [ reduce using rule 118 (COMBINING -> except all EXP .) ]
  ! not             [ reduce using rule 118 (COMBINING -> except all EXP .) ]
  ! like            [ reduce using rule 118 (COMBINING -> except all EXP .) ]


state 465

    (134) EXIST -> not exist para SELECT parc .

    r_from          reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    coma            reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    where           reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    group           reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    having          reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    union           reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    intersect       reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    except          reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    order           reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    limit           reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    offset          reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    ptcoma          reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    mas             reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    menos           reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    multiplicacion  reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    division        reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    modulo          reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    elevado         reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    and             reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    or              reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    mayor           reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    menor           reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    mayor_igual     reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    menor_igual     reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    igual           reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    diferente1      reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    diferente2      reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    between         reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    is              reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    isnull          reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    notnull         reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    as              reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    cadenaString    reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    id              reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    cadena          reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    in              reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    not             reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    like            reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    parc            reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    then            reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    end             reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    else            reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    when            reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    constraint      reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    unique          reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    check           reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    default         reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    null            reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    primary         reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    references      reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    asc             reduce using rule 134 (EXIST -> not exist para SELECT parc .)
    desc            reduce using rule 134 (EXIST -> not exist para SELECT parc .)


state 466

    (155) TIPO -> interval para int parc cadena .

    r_from          reduce using rule 155 (TIPO -> interval para int parc cadena .)
    coma            reduce using rule 155 (TIPO -> interval para int parc cadena .)
    where           reduce using rule 155 (TIPO -> interval para int parc cadena .)
    group           reduce using rule 155 (TIPO -> interval para int parc cadena .)
    having          reduce using rule 155 (TIPO -> interval para int parc cadena .)
    union           reduce using rule 155 (TIPO -> interval para int parc cadena .)
    intersect       reduce using rule 155 (TIPO -> interval para int parc cadena .)
    except          reduce using rule 155 (TIPO -> interval para int parc cadena .)
    order           reduce using rule 155 (TIPO -> interval para int parc cadena .)
    limit           reduce using rule 155 (TIPO -> interval para int parc cadena .)
    offset          reduce using rule 155 (TIPO -> interval para int parc cadena .)
    ptcoma          reduce using rule 155 (TIPO -> interval para int parc cadena .)
    mas             reduce using rule 155 (TIPO -> interval para int parc cadena .)
    menos           reduce using rule 155 (TIPO -> interval para int parc cadena .)
    multiplicacion  reduce using rule 155 (TIPO -> interval para int parc cadena .)
    division        reduce using rule 155 (TIPO -> interval para int parc cadena .)
    modulo          reduce using rule 155 (TIPO -> interval para int parc cadena .)
    elevado         reduce using rule 155 (TIPO -> interval para int parc cadena .)
    and             reduce using rule 155 (TIPO -> interval para int parc cadena .)
    or              reduce using rule 155 (TIPO -> interval para int parc cadena .)
    mayor           reduce using rule 155 (TIPO -> interval para int parc cadena .)
    menor           reduce using rule 155 (TIPO -> interval para int parc cadena .)
    mayor_igual     reduce using rule 155 (TIPO -> interval para int parc cadena .)
    menor_igual     reduce using rule 155 (TIPO -> interval para int parc cadena .)
    igual           reduce using rule 155 (TIPO -> interval para int parc cadena .)
    diferente1      reduce using rule 155 (TIPO -> interval para int parc cadena .)
    diferente2      reduce using rule 155 (TIPO -> interval para int parc cadena .)
    between         reduce using rule 155 (TIPO -> interval para int parc cadena .)
    is              reduce using rule 155 (TIPO -> interval para int parc cadena .)
    isnull          reduce using rule 155 (TIPO -> interval para int parc cadena .)
    notnull         reduce using rule 155 (TIPO -> interval para int parc cadena .)
    as              reduce using rule 155 (TIPO -> interval para int parc cadena .)
    cadenaString    reduce using rule 155 (TIPO -> interval para int parc cadena .)
    id              reduce using rule 155 (TIPO -> interval para int parc cadena .)
    cadena          reduce using rule 155 (TIPO -> interval para int parc cadena .)
    in              reduce using rule 155 (TIPO -> interval para int parc cadena .)
    not             reduce using rule 155 (TIPO -> interval para int parc cadena .)
    like            reduce using rule 155 (TIPO -> interval para int parc cadena .)
    parc            reduce using rule 155 (TIPO -> interval para int parc cadena .)
    then            reduce using rule 155 (TIPO -> interval para int parc cadena .)
    end             reduce using rule 155 (TIPO -> interval para int parc cadena .)
    else            reduce using rule 155 (TIPO -> interval para int parc cadena .)
    when            reduce using rule 155 (TIPO -> interval para int parc cadena .)
    constraint      reduce using rule 155 (TIPO -> interval para int parc cadena .)
    unique          reduce using rule 155 (TIPO -> interval para int parc cadena .)
    check           reduce using rule 155 (TIPO -> interval para int parc cadena .)
    default         reduce using rule 155 (TIPO -> interval para int parc cadena .)
    null            reduce using rule 155 (TIPO -> interval para int parc cadena .)
    primary         reduce using rule 155 (TIPO -> interval para int parc cadena .)
    references      reduce using rule 155 (TIPO -> interval para int parc cadena .)
    asc             reduce using rule 155 (TIPO -> interval para int parc cadena .)
    desc            reduce using rule 155 (TIPO -> interval para int parc cadena .)


state 467

    (138) TIPO -> decimal para int coma int . parc

    parc            shift and go to state 514


state 468

    (141) TIPO -> numeric para int coma int . parc

    parc            shift and go to state 515


state 469

    (151) TIPO -> timestamp para int parc without . time zone

    time            shift and go to state 516


state 470

    (152) TIPO -> timestamp para int parc with . time zone

    time            shift and go to state 517


state 471

    (150) TIPO -> character varying para int parc .

    r_from          reduce using rule 150 (TIPO -> character varying para int parc .)
    coma            reduce using rule 150 (TIPO -> character varying para int parc .)
    where           reduce using rule 150 (TIPO -> character varying para int parc .)
    group           reduce using rule 150 (TIPO -> character varying para int parc .)
    having          reduce using rule 150 (TIPO -> character varying para int parc .)
    union           reduce using rule 150 (TIPO -> character varying para int parc .)
    intersect       reduce using rule 150 (TIPO -> character varying para int parc .)
    except          reduce using rule 150 (TIPO -> character varying para int parc .)
    order           reduce using rule 150 (TIPO -> character varying para int parc .)
    limit           reduce using rule 150 (TIPO -> character varying para int parc .)
    offset          reduce using rule 150 (TIPO -> character varying para int parc .)
    ptcoma          reduce using rule 150 (TIPO -> character varying para int parc .)
    mas             reduce using rule 150 (TIPO -> character varying para int parc .)
    menos           reduce using rule 150 (TIPO -> character varying para int parc .)
    multiplicacion  reduce using rule 150 (TIPO -> character varying para int parc .)
    division        reduce using rule 150 (TIPO -> character varying para int parc .)
    modulo          reduce using rule 150 (TIPO -> character varying para int parc .)
    elevado         reduce using rule 150 (TIPO -> character varying para int parc .)
    and             reduce using rule 150 (TIPO -> character varying para int parc .)
    or              reduce using rule 150 (TIPO -> character varying para int parc .)
    mayor           reduce using rule 150 (TIPO -> character varying para int parc .)
    menor           reduce using rule 150 (TIPO -> character varying para int parc .)
    mayor_igual     reduce using rule 150 (TIPO -> character varying para int parc .)
    menor_igual     reduce using rule 150 (TIPO -> character varying para int parc .)
    igual           reduce using rule 150 (TIPO -> character varying para int parc .)
    diferente1      reduce using rule 150 (TIPO -> character varying para int parc .)
    diferente2      reduce using rule 150 (TIPO -> character varying para int parc .)
    between         reduce using rule 150 (TIPO -> character varying para int parc .)
    is              reduce using rule 150 (TIPO -> character varying para int parc .)
    isnull          reduce using rule 150 (TIPO -> character varying para int parc .)
    notnull         reduce using rule 150 (TIPO -> character varying para int parc .)
    as              reduce using rule 150 (TIPO -> character varying para int parc .)
    cadenaString    reduce using rule 150 (TIPO -> character varying para int parc .)
    id              reduce using rule 150 (TIPO -> character varying para int parc .)
    cadena          reduce using rule 150 (TIPO -> character varying para int parc .)
    in              reduce using rule 150 (TIPO -> character varying para int parc .)
    not             reduce using rule 150 (TIPO -> character varying para int parc .)
    like            reduce using rule 150 (TIPO -> character varying para int parc .)
    parc            reduce using rule 150 (TIPO -> character varying para int parc .)
    then            reduce using rule 150 (TIPO -> character varying para int parc .)
    end             reduce using rule 150 (TIPO -> character varying para int parc .)
    else            reduce using rule 150 (TIPO -> character varying para int parc .)
    when            reduce using rule 150 (TIPO -> character varying para int parc .)
    constraint      reduce using rule 150 (TIPO -> character varying para int parc .)
    unique          reduce using rule 150 (TIPO -> character varying para int parc .)
    check           reduce using rule 150 (TIPO -> character varying para int parc .)
    default         reduce using rule 150 (TIPO -> character varying para int parc .)
    null            reduce using rule 150 (TIPO -> character varying para int parc .)
    primary         reduce using rule 150 (TIPO -> character varying para int parc .)
    references      reduce using rule 150 (TIPO -> character varying para int parc .)
    asc             reduce using rule 150 (TIPO -> character varying para int parc .)
    desc            reduce using rule 150 (TIPO -> character varying para int parc .)


state 472

    (153) TIPO -> time para int parc without . time zone

    time            shift and go to state 518


state 473

    (154) TIPO -> time para int parc with . time zone

    time            shift and go to state 519


state 474

    (232) EXP -> extract para FIELDS r_from timestamp cadena parc .

    r_from          reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    coma            reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    where           reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    group           reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    having          reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    union           reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    intersect       reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    except          reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    order           reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    limit           reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    offset          reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    ptcoma          reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    mas             reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    menos           reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    multiplicacion  reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    division        reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    modulo          reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    elevado         reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    and             reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    or              reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    mayor           reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    menor           reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    mayor_igual     reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    menor_igual     reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    igual           reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    diferente1      reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    diferente2      reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    between         reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    is              reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    isnull          reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    notnull         reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    as              reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    cadenaString    reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    id              reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    cadena          reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    in              reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    not             reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    like            reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    parc            reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    then            reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    end             reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    else            reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    when            reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    constraint      reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    unique          reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    check           reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    default         reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    null            reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    primary         reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    references      reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    asc             reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    desc            reduce using rule 232 (EXP -> extract para FIELDS r_from timestamp cadena parc .)


state 475

    (75) LOPCOLUMN -> LOPCOLUMN OPCOLUMN .

    constraint      reduce using rule 75 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    unique          reduce using rule 75 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    check           reduce using rule 75 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    default         reduce using rule 75 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    not             reduce using rule 75 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    null            reduce using rule 75 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    primary         reduce using rule 75 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    references      reduce using rule 75 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    parc            reduce using rule 75 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    coma            reduce using rule 75 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)


state 476

    (77) OPCOLUMN -> constraint id . unique
    (79) OPCOLUMN -> constraint id . check para CONDCHECK parc

    unique          shift and go to state 520
    check           shift and go to state 521


state 477

    (80) OPCOLUMN -> check para . CONDCHECK parc
    (90) CONDCHECK -> . EXP mayor EXP
    (91) CONDCHECK -> . EXP menor EXP
    (92) CONDCHECK -> . EXP mayor_igual EXP
    (93) CONDCHECK -> . EXP menor_igual EXP
    (94) CONDCHECK -> . EXP igual EXP
    (95) CONDCHECK -> . EXP diferente1 EXP
    (96) CONDCHECK -> . EXP diferente2 EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    CONDCHECK                      shift and go to state 522
    EXP                            shift and go to state 440
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 478

    (81) OPCOLUMN -> default EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

  ! shift/reduce conflict for not resolved as shift
    constraint      reduce using rule 81 (OPCOLUMN -> default EXP .)
    unique          reduce using rule 81 (OPCOLUMN -> default EXP .)
    check           reduce using rule 81 (OPCOLUMN -> default EXP .)
    default         reduce using rule 81 (OPCOLUMN -> default EXP .)
    null            reduce using rule 81 (OPCOLUMN -> default EXP .)
    primary         reduce using rule 81 (OPCOLUMN -> default EXP .)
    references      reduce using rule 81 (OPCOLUMN -> default EXP .)
    parc            reduce using rule 81 (OPCOLUMN -> default EXP .)
    coma            reduce using rule 81 (OPCOLUMN -> default EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    and             shift and go to state 97
    or              shift and go to state 98
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105
    between         shift and go to state 106
    is              shift and go to state 107
    isnull          shift and go to state 109
    notnull         shift and go to state 110
    as              shift and go to state 111
    cadenaString    shift and go to state 112
    id              shift and go to state 113
    cadena          shift and go to state 114
    in              shift and go to state 115
    not             shift and go to state 108
    like            shift and go to state 116

  ! not             [ reduce using rule 81 (OPCOLUMN -> default EXP .) ]


state 479

    (82) OPCOLUMN -> not null .

    constraint      reduce using rule 82 (OPCOLUMN -> not null .)
    unique          reduce using rule 82 (OPCOLUMN -> not null .)
    check           reduce using rule 82 (OPCOLUMN -> not null .)
    default         reduce using rule 82 (OPCOLUMN -> not null .)
    not             reduce using rule 82 (OPCOLUMN -> not null .)
    null            reduce using rule 82 (OPCOLUMN -> not null .)
    primary         reduce using rule 82 (OPCOLUMN -> not null .)
    references      reduce using rule 82 (OPCOLUMN -> not null .)
    parc            reduce using rule 82 (OPCOLUMN -> not null .)
    coma            reduce using rule 82 (OPCOLUMN -> not null .)


state 480

    (84) OPCOLUMN -> primary key .

    constraint      reduce using rule 84 (OPCOLUMN -> primary key .)
    unique          reduce using rule 84 (OPCOLUMN -> primary key .)
    check           reduce using rule 84 (OPCOLUMN -> primary key .)
    default         reduce using rule 84 (OPCOLUMN -> primary key .)
    not             reduce using rule 84 (OPCOLUMN -> primary key .)
    null            reduce using rule 84 (OPCOLUMN -> primary key .)
    primary         reduce using rule 84 (OPCOLUMN -> primary key .)
    references      reduce using rule 84 (OPCOLUMN -> primary key .)
    parc            reduce using rule 84 (OPCOLUMN -> primary key .)
    coma            reduce using rule 84 (OPCOLUMN -> primary key .)


state 481

    (85) OPCOLUMN -> references id .

    constraint      reduce using rule 85 (OPCOLUMN -> references id .)
    unique          reduce using rule 85 (OPCOLUMN -> references id .)
    check           reduce using rule 85 (OPCOLUMN -> references id .)
    default         reduce using rule 85 (OPCOLUMN -> references id .)
    not             reduce using rule 85 (OPCOLUMN -> references id .)
    null            reduce using rule 85 (OPCOLUMN -> references id .)
    primary         reduce using rule 85 (OPCOLUMN -> references id .)
    references      reduce using rule 85 (OPCOLUMN -> references id .)
    parc            reduce using rule 85 (OPCOLUMN -> references id .)
    coma            reduce using rule 85 (OPCOLUMN -> references id .)


state 482

    (68) CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .

    use             reduce using rule 68 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    select          reduce using rule 68 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    create          reduce using rule 68 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    update          reduce using rule 68 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    delete          reduce using rule 68 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    alter           reduce using rule 68 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    drop            reduce using rule 68 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    insert          reduce using rule 68 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    case            reduce using rule 68 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    show            reduce using rule 68 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    $end            reduce using rule 68 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)


state 483

    (97) HERENCIA -> inherits para . id parc

    id              shift and go to state 523


state 484

    (86) OPCONST -> primary key para LEXP . parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 524
    coma            shift and go to state 89


state 485

    (87) OPCONST -> foreign key para LEXP . parc references id para LEXP parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 525
    coma            shift and go to state 89


state 486

    (88) OPCONST -> unique para LEXP parc .

    parc            reduce using rule 88 (OPCONST -> unique para LEXP parc .)
    coma            reduce using rule 88 (OPCONST -> unique para LEXP parc .)


state 487

    (89) OPCONST -> check para CONDCHECK parc .

    parc            reduce using rule 89 (OPCONST -> check para CONDCHECK parc .)
    coma            reduce using rule 89 (OPCONST -> check para CONDCHECK parc .)


state 488

    (90) CONDCHECK -> EXP mayor . EXP
    (188) EXP -> EXP mayor . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 526
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 489

    (91) CONDCHECK -> EXP menor . EXP
    (189) EXP -> EXP menor . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 527
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 490

    (92) CONDCHECK -> EXP mayor_igual . EXP
    (190) EXP -> EXP mayor_igual . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 528
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 491

    (93) CONDCHECK -> EXP menor_igual . EXP
    (191) EXP -> EXP menor_igual . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 529
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 492

    (94) CONDCHECK -> EXP igual . EXP
    (192) EXP -> EXP igual . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 530
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 493

    (95) CONDCHECK -> EXP diferente1 . EXP
    (193) EXP -> EXP diferente1 . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 531
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 494

    (96) CONDCHECK -> EXP diferente2 . EXP
    (194) EXP -> EXP diferente2 . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    EXP                            shift and go to state 532
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 495

    (98) CREATETYPE -> create type id as enum para LEXP parc .

    ptcoma          reduce using rule 98 (CREATETYPE -> create type id as enum para LEXP parc .)


state 496

    (130) LCAMPOS -> LCAMPOS coma id igual EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    where           reduce using rule 130 (LCAMPOS -> LCAMPOS coma id igual EXP .)
    coma            reduce using rule 130 (LCAMPOS -> LCAMPOS coma id igual EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    and             shift and go to state 97
    or              shift and go to state 98
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105
    between         shift and go to state 106
    is              shift and go to state 107
    isnull          shift and go to state 109
    notnull         shift and go to state 110
    as              shift and go to state 111
    cadenaString    shift and go to state 112
    id              shift and go to state 113
    cadena          shift and go to state 114
    in              shift and go to state 115
    not             shift and go to state 108
    like            shift and go to state 116


state 497

    (37) OP -> alter column id set not . null

    null            shift and go to state 533


state 498

    (38) OP -> alter column id set null .

    ptcoma          reduce using rule 38 (OP -> alter column id set null .)


state 499

    (46) alc -> alter column id type TIPO .

    coma            reduce using rule 46 (alc -> alter column id type TIPO .)
    ptcoma          reduce using rule 46 (alc -> alter column id type TIPO .)


state 500

    (33) OP -> add check para CONDCHECK parc .

    ptcoma          reduce using rule 33 (OP -> add check para CONDCHECK parc .)


state 501

    (34) OP -> add constraint id unique para . id parc

    id              shift and go to state 534


state 502

    (36) OP -> add constraint id foreign key . para LEXP parc references id para LEXP parc

    para            shift and go to state 535


state 503

    (35) OP -> add foreign key para LEXP . parc references id para LEXP parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 536
    coma            shift and go to state 89


state 504

    (42) OP -> rename column id to id .

    ptcoma          reduce using rule 42 (OP -> rename column id to id .)


state 505

    (46) alc -> alter column id . type TIPO

    type            shift and go to state 445


state 506

    (24) INSERT -> insert into id para LEXP parc values para . LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 537
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 507

    (99) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING . ORDER LIMIT
    (124) ORDER -> . order by LEXP ORD
    (125) ORDER -> . order by LEXP
    (126) ORDER -> .

  ! shift/reduce conflict for order resolved as shift
    order           shift and go to state 394
    r_from          reduce using rule 126 (ORDER -> .)
    coma            reduce using rule 126 (ORDER -> .)
    where           reduce using rule 126 (ORDER -> .)
    group           reduce using rule 126 (ORDER -> .)
    having          reduce using rule 126 (ORDER -> .)
    union           reduce using rule 126 (ORDER -> .)
    intersect       reduce using rule 126 (ORDER -> .)
    except          reduce using rule 126 (ORDER -> .)
    limit           reduce using rule 126 (ORDER -> .)
    offset          reduce using rule 126 (ORDER -> .)
    ptcoma          reduce using rule 126 (ORDER -> .)
    mas             reduce using rule 126 (ORDER -> .)
    menos           reduce using rule 126 (ORDER -> .)
    multiplicacion  reduce using rule 126 (ORDER -> .)
    division        reduce using rule 126 (ORDER -> .)
    modulo          reduce using rule 126 (ORDER -> .)
    elevado         reduce using rule 126 (ORDER -> .)
    and             reduce using rule 126 (ORDER -> .)
    or              reduce using rule 126 (ORDER -> .)
    mayor           reduce using rule 126 (ORDER -> .)
    menor           reduce using rule 126 (ORDER -> .)
    mayor_igual     reduce using rule 126 (ORDER -> .)
    menor_igual     reduce using rule 126 (ORDER -> .)
    igual           reduce using rule 126 (ORDER -> .)
    diferente1      reduce using rule 126 (ORDER -> .)
    diferente2      reduce using rule 126 (ORDER -> .)
    between         reduce using rule 126 (ORDER -> .)
    is              reduce using rule 126 (ORDER -> .)
    isnull          reduce using rule 126 (ORDER -> .)
    notnull         reduce using rule 126 (ORDER -> .)
    as              reduce using rule 126 (ORDER -> .)
    cadenaString    reduce using rule 126 (ORDER -> .)
    id              reduce using rule 126 (ORDER -> .)
    cadena          reduce using rule 126 (ORDER -> .)
    in              reduce using rule 126 (ORDER -> .)
    not             reduce using rule 126 (ORDER -> .)
    like            reduce using rule 126 (ORDER -> .)
    parc            reduce using rule 126 (ORDER -> .)
    then            reduce using rule 126 (ORDER -> .)
    end             reduce using rule 126 (ORDER -> .)
    else            reduce using rule 126 (ORDER -> .)
    when            reduce using rule 126 (ORDER -> .)
    constraint      reduce using rule 126 (ORDER -> .)
    unique          reduce using rule 126 (ORDER -> .)
    check           reduce using rule 126 (ORDER -> .)
    default         reduce using rule 126 (ORDER -> .)
    null            reduce using rule 126 (ORDER -> .)
    primary         reduce using rule 126 (ORDER -> .)
    references      reduce using rule 126 (ORDER -> .)
    asc             reduce using rule 126 (ORDER -> .)
    desc            reduce using rule 126 (ORDER -> .)

  ! order           [ reduce using rule 126 (ORDER -> .) ]

    ORDER                          shift and go to state 538

state 508

    (100) SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER . LIMIT
    (102) LIMIT -> . limit int
    (103) LIMIT -> . limit all
    (104) LIMIT -> . offset int
    (105) LIMIT -> . limit int offset int
    (106) LIMIT -> . offset int limit int
    (107) LIMIT -> . limit all offset int
    (108) LIMIT -> . offset int limit all
    (109) LIMIT -> .

  ! shift/reduce conflict for limit resolved as shift
  ! shift/reduce conflict for offset resolved as shift
    limit           shift and go to state 458
    offset          shift and go to state 459
    ptcoma          reduce using rule 109 (LIMIT -> .)
    r_from          reduce using rule 109 (LIMIT -> .)
    coma            reduce using rule 109 (LIMIT -> .)
    where           reduce using rule 109 (LIMIT -> .)
    group           reduce using rule 109 (LIMIT -> .)
    having          reduce using rule 109 (LIMIT -> .)
    union           reduce using rule 109 (LIMIT -> .)
    intersect       reduce using rule 109 (LIMIT -> .)
    except          reduce using rule 109 (LIMIT -> .)
    order           reduce using rule 109 (LIMIT -> .)
    mas             reduce using rule 109 (LIMIT -> .)
    menos           reduce using rule 109 (LIMIT -> .)
    multiplicacion  reduce using rule 109 (LIMIT -> .)
    division        reduce using rule 109 (LIMIT -> .)
    modulo          reduce using rule 109 (LIMIT -> .)
    elevado         reduce using rule 109 (LIMIT -> .)
    and             reduce using rule 109 (LIMIT -> .)
    or              reduce using rule 109 (LIMIT -> .)
    mayor           reduce using rule 109 (LIMIT -> .)
    menor           reduce using rule 109 (LIMIT -> .)
    mayor_igual     reduce using rule 109 (LIMIT -> .)
    menor_igual     reduce using rule 109 (LIMIT -> .)
    igual           reduce using rule 109 (LIMIT -> .)
    diferente1      reduce using rule 109 (LIMIT -> .)
    diferente2      reduce using rule 109 (LIMIT -> .)
    between         reduce using rule 109 (LIMIT -> .)
    is              reduce using rule 109 (LIMIT -> .)
    isnull          reduce using rule 109 (LIMIT -> .)
    notnull         reduce using rule 109 (LIMIT -> .)
    as              reduce using rule 109 (LIMIT -> .)
    cadenaString    reduce using rule 109 (LIMIT -> .)
    id              reduce using rule 109 (LIMIT -> .)
    cadena          reduce using rule 109 (LIMIT -> .)
    in              reduce using rule 109 (LIMIT -> .)
    not             reduce using rule 109 (LIMIT -> .)
    like            reduce using rule 109 (LIMIT -> .)
    parc            reduce using rule 109 (LIMIT -> .)
    then            reduce using rule 109 (LIMIT -> .)
    end             reduce using rule 109 (LIMIT -> .)
    else            reduce using rule 109 (LIMIT -> .)
    when            reduce using rule 109 (LIMIT -> .)
    constraint      reduce using rule 109 (LIMIT -> .)
    unique          reduce using rule 109 (LIMIT -> .)
    check           reduce using rule 109 (LIMIT -> .)
    default         reduce using rule 109 (LIMIT -> .)
    null            reduce using rule 109 (LIMIT -> .)
    primary         reduce using rule 109 (LIMIT -> .)
    references      reduce using rule 109 (LIMIT -> .)
    asc             reduce using rule 109 (LIMIT -> .)
    desc            reduce using rule 109 (LIMIT -> .)

  ! limit           [ reduce using rule 109 (LIMIT -> .) ]
  ! offset          [ reduce using rule 109 (LIMIT -> .) ]

    LIMIT                          shift and go to state 539

state 509

    (102) LIMIT -> limit int .
    (105) LIMIT -> limit int . offset int

  ! shift/reduce conflict for offset resolved as shift
    ptcoma          reduce using rule 102 (LIMIT -> limit int .)
    r_from          reduce using rule 102 (LIMIT -> limit int .)
    coma            reduce using rule 102 (LIMIT -> limit int .)
    where           reduce using rule 102 (LIMIT -> limit int .)
    group           reduce using rule 102 (LIMIT -> limit int .)
    having          reduce using rule 102 (LIMIT -> limit int .)
    union           reduce using rule 102 (LIMIT -> limit int .)
    intersect       reduce using rule 102 (LIMIT -> limit int .)
    except          reduce using rule 102 (LIMIT -> limit int .)
    order           reduce using rule 102 (LIMIT -> limit int .)
    limit           reduce using rule 102 (LIMIT -> limit int .)
    mas             reduce using rule 102 (LIMIT -> limit int .)
    menos           reduce using rule 102 (LIMIT -> limit int .)
    multiplicacion  reduce using rule 102 (LIMIT -> limit int .)
    division        reduce using rule 102 (LIMIT -> limit int .)
    modulo          reduce using rule 102 (LIMIT -> limit int .)
    elevado         reduce using rule 102 (LIMIT -> limit int .)
    and             reduce using rule 102 (LIMIT -> limit int .)
    or              reduce using rule 102 (LIMIT -> limit int .)
    mayor           reduce using rule 102 (LIMIT -> limit int .)
    menor           reduce using rule 102 (LIMIT -> limit int .)
    mayor_igual     reduce using rule 102 (LIMIT -> limit int .)
    menor_igual     reduce using rule 102 (LIMIT -> limit int .)
    igual           reduce using rule 102 (LIMIT -> limit int .)
    diferente1      reduce using rule 102 (LIMIT -> limit int .)
    diferente2      reduce using rule 102 (LIMIT -> limit int .)
    between         reduce using rule 102 (LIMIT -> limit int .)
    is              reduce using rule 102 (LIMIT -> limit int .)
    isnull          reduce using rule 102 (LIMIT -> limit int .)
    notnull         reduce using rule 102 (LIMIT -> limit int .)
    as              reduce using rule 102 (LIMIT -> limit int .)
    cadenaString    reduce using rule 102 (LIMIT -> limit int .)
    id              reduce using rule 102 (LIMIT -> limit int .)
    cadena          reduce using rule 102 (LIMIT -> limit int .)
    in              reduce using rule 102 (LIMIT -> limit int .)
    not             reduce using rule 102 (LIMIT -> limit int .)
    like            reduce using rule 102 (LIMIT -> limit int .)
    parc            reduce using rule 102 (LIMIT -> limit int .)
    then            reduce using rule 102 (LIMIT -> limit int .)
    end             reduce using rule 102 (LIMIT -> limit int .)
    else            reduce using rule 102 (LIMIT -> limit int .)
    when            reduce using rule 102 (LIMIT -> limit int .)
    constraint      reduce using rule 102 (LIMIT -> limit int .)
    unique          reduce using rule 102 (LIMIT -> limit int .)
    check           reduce using rule 102 (LIMIT -> limit int .)
    default         reduce using rule 102 (LIMIT -> limit int .)
    null            reduce using rule 102 (LIMIT -> limit int .)
    primary         reduce using rule 102 (LIMIT -> limit int .)
    references      reduce using rule 102 (LIMIT -> limit int .)
    asc             reduce using rule 102 (LIMIT -> limit int .)
    desc            reduce using rule 102 (LIMIT -> limit int .)
    offset          shift and go to state 540

  ! offset          [ reduce using rule 102 (LIMIT -> limit int .) ]


state 510

    (103) LIMIT -> limit all .
    (107) LIMIT -> limit all . offset int

  ! shift/reduce conflict for offset resolved as shift
    ptcoma          reduce using rule 103 (LIMIT -> limit all .)
    r_from          reduce using rule 103 (LIMIT -> limit all .)
    coma            reduce using rule 103 (LIMIT -> limit all .)
    where           reduce using rule 103 (LIMIT -> limit all .)
    group           reduce using rule 103 (LIMIT -> limit all .)
    having          reduce using rule 103 (LIMIT -> limit all .)
    union           reduce using rule 103 (LIMIT -> limit all .)
    intersect       reduce using rule 103 (LIMIT -> limit all .)
    except          reduce using rule 103 (LIMIT -> limit all .)
    order           reduce using rule 103 (LIMIT -> limit all .)
    limit           reduce using rule 103 (LIMIT -> limit all .)
    mas             reduce using rule 103 (LIMIT -> limit all .)
    menos           reduce using rule 103 (LIMIT -> limit all .)
    multiplicacion  reduce using rule 103 (LIMIT -> limit all .)
    division        reduce using rule 103 (LIMIT -> limit all .)
    modulo          reduce using rule 103 (LIMIT -> limit all .)
    elevado         reduce using rule 103 (LIMIT -> limit all .)
    and             reduce using rule 103 (LIMIT -> limit all .)
    or              reduce using rule 103 (LIMIT -> limit all .)
    mayor           reduce using rule 103 (LIMIT -> limit all .)
    menor           reduce using rule 103 (LIMIT -> limit all .)
    mayor_igual     reduce using rule 103 (LIMIT -> limit all .)
    menor_igual     reduce using rule 103 (LIMIT -> limit all .)
    igual           reduce using rule 103 (LIMIT -> limit all .)
    diferente1      reduce using rule 103 (LIMIT -> limit all .)
    diferente2      reduce using rule 103 (LIMIT -> limit all .)
    between         reduce using rule 103 (LIMIT -> limit all .)
    is              reduce using rule 103 (LIMIT -> limit all .)
    isnull          reduce using rule 103 (LIMIT -> limit all .)
    notnull         reduce using rule 103 (LIMIT -> limit all .)
    as              reduce using rule 103 (LIMIT -> limit all .)
    cadenaString    reduce using rule 103 (LIMIT -> limit all .)
    id              reduce using rule 103 (LIMIT -> limit all .)
    cadena          reduce using rule 103 (LIMIT -> limit all .)
    in              reduce using rule 103 (LIMIT -> limit all .)
    not             reduce using rule 103 (LIMIT -> limit all .)
    like            reduce using rule 103 (LIMIT -> limit all .)
    parc            reduce using rule 103 (LIMIT -> limit all .)
    then            reduce using rule 103 (LIMIT -> limit all .)
    end             reduce using rule 103 (LIMIT -> limit all .)
    else            reduce using rule 103 (LIMIT -> limit all .)
    when            reduce using rule 103 (LIMIT -> limit all .)
    constraint      reduce using rule 103 (LIMIT -> limit all .)
    unique          reduce using rule 103 (LIMIT -> limit all .)
    check           reduce using rule 103 (LIMIT -> limit all .)
    default         reduce using rule 103 (LIMIT -> limit all .)
    null            reduce using rule 103 (LIMIT -> limit all .)
    primary         reduce using rule 103 (LIMIT -> limit all .)
    references      reduce using rule 103 (LIMIT -> limit all .)
    asc             reduce using rule 103 (LIMIT -> limit all .)
    desc            reduce using rule 103 (LIMIT -> limit all .)
    offset          shift and go to state 541

  ! offset          [ reduce using rule 103 (LIMIT -> limit all .) ]


state 511

    (104) LIMIT -> offset int .
    (106) LIMIT -> offset int . limit int
    (108) LIMIT -> offset int . limit all

  ! shift/reduce conflict for limit resolved as shift
    ptcoma          reduce using rule 104 (LIMIT -> offset int .)
    r_from          reduce using rule 104 (LIMIT -> offset int .)
    coma            reduce using rule 104 (LIMIT -> offset int .)
    where           reduce using rule 104 (LIMIT -> offset int .)
    group           reduce using rule 104 (LIMIT -> offset int .)
    having          reduce using rule 104 (LIMIT -> offset int .)
    union           reduce using rule 104 (LIMIT -> offset int .)
    intersect       reduce using rule 104 (LIMIT -> offset int .)
    except          reduce using rule 104 (LIMIT -> offset int .)
    order           reduce using rule 104 (LIMIT -> offset int .)
    offset          reduce using rule 104 (LIMIT -> offset int .)
    mas             reduce using rule 104 (LIMIT -> offset int .)
    menos           reduce using rule 104 (LIMIT -> offset int .)
    multiplicacion  reduce using rule 104 (LIMIT -> offset int .)
    division        reduce using rule 104 (LIMIT -> offset int .)
    modulo          reduce using rule 104 (LIMIT -> offset int .)
    elevado         reduce using rule 104 (LIMIT -> offset int .)
    and             reduce using rule 104 (LIMIT -> offset int .)
    or              reduce using rule 104 (LIMIT -> offset int .)
    mayor           reduce using rule 104 (LIMIT -> offset int .)
    menor           reduce using rule 104 (LIMIT -> offset int .)
    mayor_igual     reduce using rule 104 (LIMIT -> offset int .)
    menor_igual     reduce using rule 104 (LIMIT -> offset int .)
    igual           reduce using rule 104 (LIMIT -> offset int .)
    diferente1      reduce using rule 104 (LIMIT -> offset int .)
    diferente2      reduce using rule 104 (LIMIT -> offset int .)
    between         reduce using rule 104 (LIMIT -> offset int .)
    is              reduce using rule 104 (LIMIT -> offset int .)
    isnull          reduce using rule 104 (LIMIT -> offset int .)
    notnull         reduce using rule 104 (LIMIT -> offset int .)
    as              reduce using rule 104 (LIMIT -> offset int .)
    cadenaString    reduce using rule 104 (LIMIT -> offset int .)
    id              reduce using rule 104 (LIMIT -> offset int .)
    cadena          reduce using rule 104 (LIMIT -> offset int .)
    in              reduce using rule 104 (LIMIT -> offset int .)
    not             reduce using rule 104 (LIMIT -> offset int .)
    like            reduce using rule 104 (LIMIT -> offset int .)
    parc            reduce using rule 104 (LIMIT -> offset int .)
    then            reduce using rule 104 (LIMIT -> offset int .)
    end             reduce using rule 104 (LIMIT -> offset int .)
    else            reduce using rule 104 (LIMIT -> offset int .)
    when            reduce using rule 104 (LIMIT -> offset int .)
    constraint      reduce using rule 104 (LIMIT -> offset int .)
    unique          reduce using rule 104 (LIMIT -> offset int .)
    check           reduce using rule 104 (LIMIT -> offset int .)
    default         reduce using rule 104 (LIMIT -> offset int .)
    null            reduce using rule 104 (LIMIT -> offset int .)
    primary         reduce using rule 104 (LIMIT -> offset int .)
    references      reduce using rule 104 (LIMIT -> offset int .)
    asc             reduce using rule 104 (LIMIT -> offset int .)
    desc            reduce using rule 104 (LIMIT -> offset int .)
    limit           shift and go to state 542

  ! limit           [ reduce using rule 104 (LIMIT -> offset int .) ]


state 512

    (124) ORDER -> order by LEXP . ORD
    (125) ORDER -> order by LEXP .
    (135) LEXP -> LEXP . coma EXP
    (127) ORD -> . asc
    (128) ORD -> . desc

  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for asc resolved as shift
  ! shift/reduce conflict for desc resolved as shift
    r_from          reduce using rule 125 (ORDER -> order by LEXP .)
    where           reduce using rule 125 (ORDER -> order by LEXP .)
    group           reduce using rule 125 (ORDER -> order by LEXP .)
    having          reduce using rule 125 (ORDER -> order by LEXP .)
    union           reduce using rule 125 (ORDER -> order by LEXP .)
    intersect       reduce using rule 125 (ORDER -> order by LEXP .)
    except          reduce using rule 125 (ORDER -> order by LEXP .)
    order           reduce using rule 125 (ORDER -> order by LEXP .)
    limit           reduce using rule 125 (ORDER -> order by LEXP .)
    offset          reduce using rule 125 (ORDER -> order by LEXP .)
    ptcoma          reduce using rule 125 (ORDER -> order by LEXP .)
    mas             reduce using rule 125 (ORDER -> order by LEXP .)
    menos           reduce using rule 125 (ORDER -> order by LEXP .)
    multiplicacion  reduce using rule 125 (ORDER -> order by LEXP .)
    division        reduce using rule 125 (ORDER -> order by LEXP .)
    modulo          reduce using rule 125 (ORDER -> order by LEXP .)
    elevado         reduce using rule 125 (ORDER -> order by LEXP .)
    and             reduce using rule 125 (ORDER -> order by LEXP .)
    or              reduce using rule 125 (ORDER -> order by LEXP .)
    mayor           reduce using rule 125 (ORDER -> order by LEXP .)
    menor           reduce using rule 125 (ORDER -> order by LEXP .)
    mayor_igual     reduce using rule 125 (ORDER -> order by LEXP .)
    menor_igual     reduce using rule 125 (ORDER -> order by LEXP .)
    igual           reduce using rule 125 (ORDER -> order by LEXP .)
    diferente1      reduce using rule 125 (ORDER -> order by LEXP .)
    diferente2      reduce using rule 125 (ORDER -> order by LEXP .)
    between         reduce using rule 125 (ORDER -> order by LEXP .)
    is              reduce using rule 125 (ORDER -> order by LEXP .)
    isnull          reduce using rule 125 (ORDER -> order by LEXP .)
    notnull         reduce using rule 125 (ORDER -> order by LEXP .)
    as              reduce using rule 125 (ORDER -> order by LEXP .)
    cadenaString    reduce using rule 125 (ORDER -> order by LEXP .)
    id              reduce using rule 125 (ORDER -> order by LEXP .)
    cadena          reduce using rule 125 (ORDER -> order by LEXP .)
    in              reduce using rule 125 (ORDER -> order by LEXP .)
    not             reduce using rule 125 (ORDER -> order by LEXP .)
    like            reduce using rule 125 (ORDER -> order by LEXP .)
    parc            reduce using rule 125 (ORDER -> order by LEXP .)
    then            reduce using rule 125 (ORDER -> order by LEXP .)
    end             reduce using rule 125 (ORDER -> order by LEXP .)
    else            reduce using rule 125 (ORDER -> order by LEXP .)
    when            reduce using rule 125 (ORDER -> order by LEXP .)
    constraint      reduce using rule 125 (ORDER -> order by LEXP .)
    unique          reduce using rule 125 (ORDER -> order by LEXP .)
    check           reduce using rule 125 (ORDER -> order by LEXP .)
    default         reduce using rule 125 (ORDER -> order by LEXP .)
    null            reduce using rule 125 (ORDER -> order by LEXP .)
    primary         reduce using rule 125 (ORDER -> order by LEXP .)
    references      reduce using rule 125 (ORDER -> order by LEXP .)
    coma            shift and go to state 89
    asc             shift and go to state 544
    desc            shift and go to state 545

  ! coma            [ reduce using rule 125 (ORDER -> order by LEXP .) ]
  ! asc             [ reduce using rule 125 (ORDER -> order by LEXP .) ]
  ! desc            [ reduce using rule 125 (ORDER -> order by LEXP .) ]

    ORD                            shift and go to state 543

state 513

    (225) EXP -> para EXP . parc
    (136) LEXP -> EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

  ! shift/reduce conflict for parc resolved as shift
    parc            shift and go to state 212
    coma            reduce using rule 136 (LEXP -> EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96
    and             shift and go to state 97
    or              shift and go to state 98
    mayor           shift and go to state 99
    menor           shift and go to state 100
    mayor_igual     shift and go to state 101
    menor_igual     shift and go to state 102
    igual           shift and go to state 103
    diferente1      shift and go to state 104
    diferente2      shift and go to state 105
    between         shift and go to state 106
    is              shift and go to state 107
    isnull          shift and go to state 109
    notnull         shift and go to state 110
    as              shift and go to state 111
    cadenaString    shift and go to state 112
    id              shift and go to state 113
    cadena          shift and go to state 114
    in              shift and go to state 115
    not             shift and go to state 108
    like            shift and go to state 116

  ! parc            [ reduce using rule 136 (LEXP -> EXP .) ]


state 514

    (138) TIPO -> decimal para int coma int parc .

    r_from          reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    coma            reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    where           reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    group           reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    having          reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    union           reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    intersect       reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    except          reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    order           reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    limit           reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    offset          reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    ptcoma          reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    mas             reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    menos           reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    multiplicacion  reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    division        reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    modulo          reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    elevado         reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    and             reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    or              reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    mayor           reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    menor           reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    mayor_igual     reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    menor_igual     reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    igual           reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    diferente1      reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    diferente2      reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    between         reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    is              reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    isnull          reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    notnull         reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    as              reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    cadenaString    reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    id              reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    cadena          reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    in              reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    not             reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    like            reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    parc            reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    then            reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    end             reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    else            reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    when            reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    constraint      reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    unique          reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    check           reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    default         reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    null            reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    primary         reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    references      reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    asc             reduce using rule 138 (TIPO -> decimal para int coma int parc .)
    desc            reduce using rule 138 (TIPO -> decimal para int coma int parc .)


state 515

    (141) TIPO -> numeric para int coma int parc .

    r_from          reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    coma            reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    where           reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    group           reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    having          reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    union           reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    intersect       reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    except          reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    order           reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    limit           reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    offset          reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    ptcoma          reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    mas             reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    menos           reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    multiplicacion  reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    division        reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    modulo          reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    elevado         reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    and             reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    or              reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    mayor           reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    menor           reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    mayor_igual     reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    menor_igual     reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    igual           reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    diferente1      reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    diferente2      reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    between         reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    is              reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    isnull          reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    notnull         reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    as              reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    cadenaString    reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    id              reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    cadena          reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    in              reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    not             reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    like            reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    parc            reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    then            reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    end             reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    else            reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    when            reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    constraint      reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    unique          reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    check           reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    default         reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    null            reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    primary         reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    references      reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    asc             reduce using rule 141 (TIPO -> numeric para int coma int parc .)
    desc            reduce using rule 141 (TIPO -> numeric para int coma int parc .)


state 516

    (151) TIPO -> timestamp para int parc without time . zone

    zone            shift and go to state 546


state 517

    (152) TIPO -> timestamp para int parc with time . zone

    zone            shift and go to state 547


state 518

    (153) TIPO -> time para int parc without time . zone

    zone            shift and go to state 548


state 519

    (154) TIPO -> time para int parc with time . zone

    zone            shift and go to state 549


state 520

    (77) OPCOLUMN -> constraint id unique .

    constraint      reduce using rule 77 (OPCOLUMN -> constraint id unique .)
    unique          reduce using rule 77 (OPCOLUMN -> constraint id unique .)
    check           reduce using rule 77 (OPCOLUMN -> constraint id unique .)
    default         reduce using rule 77 (OPCOLUMN -> constraint id unique .)
    not             reduce using rule 77 (OPCOLUMN -> constraint id unique .)
    null            reduce using rule 77 (OPCOLUMN -> constraint id unique .)
    primary         reduce using rule 77 (OPCOLUMN -> constraint id unique .)
    references      reduce using rule 77 (OPCOLUMN -> constraint id unique .)
    parc            reduce using rule 77 (OPCOLUMN -> constraint id unique .)
    coma            reduce using rule 77 (OPCOLUMN -> constraint id unique .)


state 521

    (79) OPCOLUMN -> constraint id check . para CONDCHECK parc

    para            shift and go to state 550


state 522

    (80) OPCOLUMN -> check para CONDCHECK . parc

    parc            shift and go to state 551


state 523

    (97) HERENCIA -> inherits para id . parc

    parc            shift and go to state 552


state 524

    (86) OPCONST -> primary key para LEXP parc .

    parc            reduce using rule 86 (OPCONST -> primary key para LEXP parc .)
    coma            reduce using rule 86 (OPCONST -> primary key para LEXP parc .)


state 525

    (87) OPCONST -> foreign key para LEXP parc . references id para LEXP parc

    references      shift and go to state 553


state 526

    (90) CONDCHECK -> EXP mayor EXP .
    (188) EXP -> EXP mayor EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    parc            reduce using rule 90 (CONDCHECK -> EXP mayor EXP .)
    mayor           reduce using rule 188 (EXP -> EXP mayor EXP .)
    menor           reduce using rule 188 (EXP -> EXP mayor EXP .)
    mayor_igual     reduce using rule 188 (EXP -> EXP mayor EXP .)
    menor_igual     reduce using rule 188 (EXP -> EXP mayor EXP .)
    igual           reduce using rule 188 (EXP -> EXP mayor EXP .)
    diferente1      reduce using rule 188 (EXP -> EXP mayor EXP .)
    diferente2      reduce using rule 188 (EXP -> EXP mayor EXP .)
    and             reduce using rule 188 (EXP -> EXP mayor EXP .)
    or              reduce using rule 188 (EXP -> EXP mayor EXP .)
    between         reduce using rule 188 (EXP -> EXP mayor EXP .)
    is              reduce using rule 188 (EXP -> EXP mayor EXP .)
    isnull          reduce using rule 188 (EXP -> EXP mayor EXP .)
    notnull         reduce using rule 188 (EXP -> EXP mayor EXP .)
    as              reduce using rule 188 (EXP -> EXP mayor EXP .)
    cadenaString    reduce using rule 188 (EXP -> EXP mayor EXP .)
    id              reduce using rule 188 (EXP -> EXP mayor EXP .)
    cadena          reduce using rule 188 (EXP -> EXP mayor EXP .)
    in              reduce using rule 188 (EXP -> EXP mayor EXP .)
    not             reduce using rule 188 (EXP -> EXP mayor EXP .)
    like            reduce using rule 188 (EXP -> EXP mayor EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96

  ! mas             [ reduce using rule 188 (EXP -> EXP mayor EXP .) ]
  ! menos           [ reduce using rule 188 (EXP -> EXP mayor EXP .) ]
  ! multiplicacion  [ reduce using rule 188 (EXP -> EXP mayor EXP .) ]
  ! division        [ reduce using rule 188 (EXP -> EXP mayor EXP .) ]
  ! modulo          [ reduce using rule 188 (EXP -> EXP mayor EXP .) ]
  ! elevado         [ reduce using rule 188 (EXP -> EXP mayor EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]
  ! as              [ shift and go to state 111 ]
  ! cadenaString    [ shift and go to state 112 ]
  ! id              [ shift and go to state 113 ]
  ! cadena          [ shift and go to state 114 ]
  ! in              [ shift and go to state 115 ]
  ! not             [ shift and go to state 108 ]
  ! like            [ shift and go to state 116 ]


state 527

    (91) CONDCHECK -> EXP menor EXP .
    (189) EXP -> EXP menor EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    parc            reduce using rule 91 (CONDCHECK -> EXP menor EXP .)
    mayor           reduce using rule 189 (EXP -> EXP menor EXP .)
    menor           reduce using rule 189 (EXP -> EXP menor EXP .)
    mayor_igual     reduce using rule 189 (EXP -> EXP menor EXP .)
    menor_igual     reduce using rule 189 (EXP -> EXP menor EXP .)
    igual           reduce using rule 189 (EXP -> EXP menor EXP .)
    diferente1      reduce using rule 189 (EXP -> EXP menor EXP .)
    diferente2      reduce using rule 189 (EXP -> EXP menor EXP .)
    and             reduce using rule 189 (EXP -> EXP menor EXP .)
    or              reduce using rule 189 (EXP -> EXP menor EXP .)
    between         reduce using rule 189 (EXP -> EXP menor EXP .)
    is              reduce using rule 189 (EXP -> EXP menor EXP .)
    isnull          reduce using rule 189 (EXP -> EXP menor EXP .)
    notnull         reduce using rule 189 (EXP -> EXP menor EXP .)
    as              reduce using rule 189 (EXP -> EXP menor EXP .)
    cadenaString    reduce using rule 189 (EXP -> EXP menor EXP .)
    id              reduce using rule 189 (EXP -> EXP menor EXP .)
    cadena          reduce using rule 189 (EXP -> EXP menor EXP .)
    in              reduce using rule 189 (EXP -> EXP menor EXP .)
    not             reduce using rule 189 (EXP -> EXP menor EXP .)
    like            reduce using rule 189 (EXP -> EXP menor EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96

  ! mas             [ reduce using rule 189 (EXP -> EXP menor EXP .) ]
  ! menos           [ reduce using rule 189 (EXP -> EXP menor EXP .) ]
  ! multiplicacion  [ reduce using rule 189 (EXP -> EXP menor EXP .) ]
  ! division        [ reduce using rule 189 (EXP -> EXP menor EXP .) ]
  ! modulo          [ reduce using rule 189 (EXP -> EXP menor EXP .) ]
  ! elevado         [ reduce using rule 189 (EXP -> EXP menor EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]
  ! as              [ shift and go to state 111 ]
  ! cadenaString    [ shift and go to state 112 ]
  ! id              [ shift and go to state 113 ]
  ! cadena          [ shift and go to state 114 ]
  ! in              [ shift and go to state 115 ]
  ! not             [ shift and go to state 108 ]
  ! like            [ shift and go to state 116 ]


state 528

    (92) CONDCHECK -> EXP mayor_igual EXP .
    (190) EXP -> EXP mayor_igual EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    parc            reduce using rule 92 (CONDCHECK -> EXP mayor_igual EXP .)
    mayor           reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    menor           reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    mayor_igual     reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    menor_igual     reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    igual           reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    diferente1      reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    diferente2      reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    and             reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    or              reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    between         reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    is              reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    isnull          reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    notnull         reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    as              reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    cadenaString    reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    id              reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    cadena          reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    in              reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    not             reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    like            reduce using rule 190 (EXP -> EXP mayor_igual EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96

  ! mas             [ reduce using rule 190 (EXP -> EXP mayor_igual EXP .) ]
  ! menos           [ reduce using rule 190 (EXP -> EXP mayor_igual EXP .) ]
  ! multiplicacion  [ reduce using rule 190 (EXP -> EXP mayor_igual EXP .) ]
  ! division        [ reduce using rule 190 (EXP -> EXP mayor_igual EXP .) ]
  ! modulo          [ reduce using rule 190 (EXP -> EXP mayor_igual EXP .) ]
  ! elevado         [ reduce using rule 190 (EXP -> EXP mayor_igual EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]
  ! as              [ shift and go to state 111 ]
  ! cadenaString    [ shift and go to state 112 ]
  ! id              [ shift and go to state 113 ]
  ! cadena          [ shift and go to state 114 ]
  ! in              [ shift and go to state 115 ]
  ! not             [ shift and go to state 108 ]
  ! like            [ shift and go to state 116 ]


state 529

    (93) CONDCHECK -> EXP menor_igual EXP .
    (191) EXP -> EXP menor_igual EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    parc            reduce using rule 93 (CONDCHECK -> EXP menor_igual EXP .)
    mayor           reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    menor           reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    mayor_igual     reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    menor_igual     reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    igual           reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    diferente1      reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    diferente2      reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    and             reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    or              reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    between         reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    is              reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    isnull          reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    notnull         reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    as              reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    cadenaString    reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    id              reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    cadena          reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    in              reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    not             reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    like            reduce using rule 191 (EXP -> EXP menor_igual EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96

  ! mas             [ reduce using rule 191 (EXP -> EXP menor_igual EXP .) ]
  ! menos           [ reduce using rule 191 (EXP -> EXP menor_igual EXP .) ]
  ! multiplicacion  [ reduce using rule 191 (EXP -> EXP menor_igual EXP .) ]
  ! division        [ reduce using rule 191 (EXP -> EXP menor_igual EXP .) ]
  ! modulo          [ reduce using rule 191 (EXP -> EXP menor_igual EXP .) ]
  ! elevado         [ reduce using rule 191 (EXP -> EXP menor_igual EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]
  ! as              [ shift and go to state 111 ]
  ! cadenaString    [ shift and go to state 112 ]
  ! id              [ shift and go to state 113 ]
  ! cadena          [ shift and go to state 114 ]
  ! in              [ shift and go to state 115 ]
  ! not             [ shift and go to state 108 ]
  ! like            [ shift and go to state 116 ]


state 530

    (94) CONDCHECK -> EXP igual EXP .
    (192) EXP -> EXP igual EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    parc            reduce using rule 94 (CONDCHECK -> EXP igual EXP .)
    mayor           reduce using rule 192 (EXP -> EXP igual EXP .)
    menor           reduce using rule 192 (EXP -> EXP igual EXP .)
    mayor_igual     reduce using rule 192 (EXP -> EXP igual EXP .)
    menor_igual     reduce using rule 192 (EXP -> EXP igual EXP .)
    igual           reduce using rule 192 (EXP -> EXP igual EXP .)
    diferente1      reduce using rule 192 (EXP -> EXP igual EXP .)
    diferente2      reduce using rule 192 (EXP -> EXP igual EXP .)
    and             reduce using rule 192 (EXP -> EXP igual EXP .)
    or              reduce using rule 192 (EXP -> EXP igual EXP .)
    between         reduce using rule 192 (EXP -> EXP igual EXP .)
    is              reduce using rule 192 (EXP -> EXP igual EXP .)
    isnull          reduce using rule 192 (EXP -> EXP igual EXP .)
    notnull         reduce using rule 192 (EXP -> EXP igual EXP .)
    as              reduce using rule 192 (EXP -> EXP igual EXP .)
    cadenaString    reduce using rule 192 (EXP -> EXP igual EXP .)
    id              reduce using rule 192 (EXP -> EXP igual EXP .)
    cadena          reduce using rule 192 (EXP -> EXP igual EXP .)
    in              reduce using rule 192 (EXP -> EXP igual EXP .)
    not             reduce using rule 192 (EXP -> EXP igual EXP .)
    like            reduce using rule 192 (EXP -> EXP igual EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96

  ! mas             [ reduce using rule 192 (EXP -> EXP igual EXP .) ]
  ! menos           [ reduce using rule 192 (EXP -> EXP igual EXP .) ]
  ! multiplicacion  [ reduce using rule 192 (EXP -> EXP igual EXP .) ]
  ! division        [ reduce using rule 192 (EXP -> EXP igual EXP .) ]
  ! modulo          [ reduce using rule 192 (EXP -> EXP igual EXP .) ]
  ! elevado         [ reduce using rule 192 (EXP -> EXP igual EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]
  ! as              [ shift and go to state 111 ]
  ! cadenaString    [ shift and go to state 112 ]
  ! id              [ shift and go to state 113 ]
  ! cadena          [ shift and go to state 114 ]
  ! in              [ shift and go to state 115 ]
  ! not             [ shift and go to state 108 ]
  ! like            [ shift and go to state 116 ]


state 531

    (95) CONDCHECK -> EXP diferente1 EXP .
    (193) EXP -> EXP diferente1 EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    parc            reduce using rule 95 (CONDCHECK -> EXP diferente1 EXP .)
    mayor           reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    menor           reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    mayor_igual     reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    menor_igual     reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    igual           reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    diferente1      reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    diferente2      reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    and             reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    or              reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    between         reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    is              reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    isnull          reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    notnull         reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    as              reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    cadenaString    reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    id              reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    cadena          reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    in              reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    not             reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    like            reduce using rule 193 (EXP -> EXP diferente1 EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96

  ! mas             [ reduce using rule 193 (EXP -> EXP diferente1 EXP .) ]
  ! menos           [ reduce using rule 193 (EXP -> EXP diferente1 EXP .) ]
  ! multiplicacion  [ reduce using rule 193 (EXP -> EXP diferente1 EXP .) ]
  ! division        [ reduce using rule 193 (EXP -> EXP diferente1 EXP .) ]
  ! modulo          [ reduce using rule 193 (EXP -> EXP diferente1 EXP .) ]
  ! elevado         [ reduce using rule 193 (EXP -> EXP diferente1 EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]
  ! as              [ shift and go to state 111 ]
  ! cadenaString    [ shift and go to state 112 ]
  ! id              [ shift and go to state 113 ]
  ! cadena          [ shift and go to state 114 ]
  ! in              [ shift and go to state 115 ]
  ! not             [ shift and go to state 108 ]
  ! like            [ shift and go to state 116 ]


state 532

    (96) CONDCHECK -> EXP diferente2 EXP .
    (194) EXP -> EXP diferente2 EXP .
    (180) EXP -> EXP . mas EXP
    (181) EXP -> EXP . menos EXP
    (182) EXP -> EXP . multiplicacion EXP
    (183) EXP -> EXP . division EXP
    (184) EXP -> EXP . modulo EXP
    (185) EXP -> EXP . elevado EXP
    (186) EXP -> EXP . and EXP
    (187) EXP -> EXP . or EXP
    (188) EXP -> EXP . mayor EXP
    (189) EXP -> EXP . menor EXP
    (190) EXP -> EXP . mayor_igual EXP
    (191) EXP -> EXP . menor_igual EXP
    (192) EXP -> EXP . igual EXP
    (193) EXP -> EXP . diferente1 EXP
    (194) EXP -> EXP . diferente2 EXP
    (195) EXP -> EXP . between EXP
    (196) EXP -> EXP . is not null
    (197) EXP -> EXP . is null
    (198) EXP -> EXP . isnull
    (199) EXP -> EXP . notnull
    (200) EXP -> EXP . is true
    (201) EXP -> EXP . is not true
    (202) EXP -> EXP . is false
    (203) EXP -> EXP . is not false
    (204) EXP -> EXP . is unknown
    (205) EXP -> EXP . is not unknown
    (206) EXP -> EXP . as cadenaString
    (207) EXP -> EXP . cadenaString
    (208) EXP -> EXP . as id
    (209) EXP -> EXP . id
    (210) EXP -> EXP . as cadena
    (211) EXP -> EXP . cadena
    (215) EXP -> EXP . in para EXP parc
    (216) EXP -> EXP . not in para EXP parc
    (217) EXP -> EXP . not between EXP
    (218) EXP -> EXP . between symetric EXP
    (219) EXP -> EXP . not between symetric EXP
    (220) EXP -> EXP . is distinct r_from EXP
    (221) EXP -> EXP . is not distinct r_from EXP
    (222) EXP -> EXP . like cadena
    (223) EXP -> EXP . not like cadena

    parc            reduce using rule 96 (CONDCHECK -> EXP diferente2 EXP .)
    mayor           reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    menor           reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    mayor_igual     reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    menor_igual     reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    igual           reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    diferente1      reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    diferente2      reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    and             reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    or              reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    between         reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    is              reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    isnull          reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    notnull         reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    as              reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    cadenaString    reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    id              reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    cadena          reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    in              reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    not             reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    like            reduce using rule 194 (EXP -> EXP diferente2 EXP .)
    mas             shift and go to state 91
    menos           shift and go to state 92
    multiplicacion  shift and go to state 93
    division        shift and go to state 94
    modulo          shift and go to state 95
    elevado         shift and go to state 96

  ! mas             [ reduce using rule 194 (EXP -> EXP diferente2 EXP .) ]
  ! menos           [ reduce using rule 194 (EXP -> EXP diferente2 EXP .) ]
  ! multiplicacion  [ reduce using rule 194 (EXP -> EXP diferente2 EXP .) ]
  ! division        [ reduce using rule 194 (EXP -> EXP diferente2 EXP .) ]
  ! modulo          [ reduce using rule 194 (EXP -> EXP diferente2 EXP .) ]
  ! elevado         [ reduce using rule 194 (EXP -> EXP diferente2 EXP .) ]
  ! and             [ shift and go to state 97 ]
  ! or              [ shift and go to state 98 ]
  ! mayor           [ shift and go to state 99 ]
  ! menor           [ shift and go to state 100 ]
  ! mayor_igual     [ shift and go to state 101 ]
  ! menor_igual     [ shift and go to state 102 ]
  ! igual           [ shift and go to state 103 ]
  ! diferente1      [ shift and go to state 104 ]
  ! diferente2      [ shift and go to state 105 ]
  ! between         [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 109 ]
  ! notnull         [ shift and go to state 110 ]
  ! as              [ shift and go to state 111 ]
  ! cadenaString    [ shift and go to state 112 ]
  ! id              [ shift and go to state 113 ]
  ! cadena          [ shift and go to state 114 ]
  ! in              [ shift and go to state 115 ]
  ! not             [ shift and go to state 108 ]
  ! like            [ shift and go to state 116 ]


state 533

    (37) OP -> alter column id set not null .

    ptcoma          reduce using rule 37 (OP -> alter column id set not null .)


state 534

    (34) OP -> add constraint id unique para id . parc

    parc            shift and go to state 554


state 535

    (36) OP -> add constraint id foreign key para . LEXP parc references id para LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 555
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 536

    (35) OP -> add foreign key para LEXP parc . references id para LEXP parc

    references      shift and go to state 556


state 537

    (24) INSERT -> insert into id para LEXP parc values para LEXP . parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 557
    coma            shift and go to state 89


state 538

    (99) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER . LIMIT
    (102) LIMIT -> . limit int
    (103) LIMIT -> . limit all
    (104) LIMIT -> . offset int
    (105) LIMIT -> . limit int offset int
    (106) LIMIT -> . offset int limit int
    (107) LIMIT -> . limit all offset int
    (108) LIMIT -> . offset int limit all
    (109) LIMIT -> .

  ! shift/reduce conflict for limit resolved as shift
  ! shift/reduce conflict for offset resolved as shift
    limit           shift and go to state 458
    offset          shift and go to state 459
    ptcoma          reduce using rule 109 (LIMIT -> .)
    r_from          reduce using rule 109 (LIMIT -> .)
    coma            reduce using rule 109 (LIMIT -> .)
    where           reduce using rule 109 (LIMIT -> .)
    group           reduce using rule 109 (LIMIT -> .)
    having          reduce using rule 109 (LIMIT -> .)
    union           reduce using rule 109 (LIMIT -> .)
    intersect       reduce using rule 109 (LIMIT -> .)
    except          reduce using rule 109 (LIMIT -> .)
    order           reduce using rule 109 (LIMIT -> .)
    mas             reduce using rule 109 (LIMIT -> .)
    menos           reduce using rule 109 (LIMIT -> .)
    multiplicacion  reduce using rule 109 (LIMIT -> .)
    division        reduce using rule 109 (LIMIT -> .)
    modulo          reduce using rule 109 (LIMIT -> .)
    elevado         reduce using rule 109 (LIMIT -> .)
    and             reduce using rule 109 (LIMIT -> .)
    or              reduce using rule 109 (LIMIT -> .)
    mayor           reduce using rule 109 (LIMIT -> .)
    menor           reduce using rule 109 (LIMIT -> .)
    mayor_igual     reduce using rule 109 (LIMIT -> .)
    menor_igual     reduce using rule 109 (LIMIT -> .)
    igual           reduce using rule 109 (LIMIT -> .)
    diferente1      reduce using rule 109 (LIMIT -> .)
    diferente2      reduce using rule 109 (LIMIT -> .)
    between         reduce using rule 109 (LIMIT -> .)
    is              reduce using rule 109 (LIMIT -> .)
    isnull          reduce using rule 109 (LIMIT -> .)
    notnull         reduce using rule 109 (LIMIT -> .)
    as              reduce using rule 109 (LIMIT -> .)
    cadenaString    reduce using rule 109 (LIMIT -> .)
    id              reduce using rule 109 (LIMIT -> .)
    cadena          reduce using rule 109 (LIMIT -> .)
    in              reduce using rule 109 (LIMIT -> .)
    not             reduce using rule 109 (LIMIT -> .)
    like            reduce using rule 109 (LIMIT -> .)
    parc            reduce using rule 109 (LIMIT -> .)
    then            reduce using rule 109 (LIMIT -> .)
    end             reduce using rule 109 (LIMIT -> .)
    else            reduce using rule 109 (LIMIT -> .)
    when            reduce using rule 109 (LIMIT -> .)
    constraint      reduce using rule 109 (LIMIT -> .)
    unique          reduce using rule 109 (LIMIT -> .)
    check           reduce using rule 109 (LIMIT -> .)
    default         reduce using rule 109 (LIMIT -> .)
    null            reduce using rule 109 (LIMIT -> .)
    primary         reduce using rule 109 (LIMIT -> .)
    references      reduce using rule 109 (LIMIT -> .)
    asc             reduce using rule 109 (LIMIT -> .)
    desc            reduce using rule 109 (LIMIT -> .)

  ! limit           [ reduce using rule 109 (LIMIT -> .) ]
  ! offset          [ reduce using rule 109 (LIMIT -> .) ]

    LIMIT                          shift and go to state 558

state 539

    (100) SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .

    ptcoma          reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    r_from          reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    coma            reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    where           reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    group           reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    having          reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    union           reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    intersect       reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    except          reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    order           reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    limit           reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    offset          reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mas             reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menos           reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    multiplicacion  reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    division        reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    modulo          reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    elevado         reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    and             reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    or              reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor           reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor           reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor_igual     reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor_igual     reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    igual           reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente1      reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente2      reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    between         reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    is              reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    isnull          reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    notnull         reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    as              reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadenaString    reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    id              reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadena          reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    in              reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    not             reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    like            reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    parc            reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    then            reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    end             reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    else            reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    when            reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    constraint      reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    unique          reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    check           reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    default         reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    null            reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    primary         reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    references      reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    asc             reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    desc            reduce using rule 100 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)


state 540

    (105) LIMIT -> limit int offset . int

    int             shift and go to state 559


state 541

    (107) LIMIT -> limit all offset . int

    int             shift and go to state 560


state 542

    (106) LIMIT -> offset int limit . int
    (108) LIMIT -> offset int limit . all

    int             shift and go to state 561
    all             shift and go to state 562


state 543

    (124) ORDER -> order by LEXP ORD .

    r_from          reduce using rule 124 (ORDER -> order by LEXP ORD .)
    coma            reduce using rule 124 (ORDER -> order by LEXP ORD .)
    where           reduce using rule 124 (ORDER -> order by LEXP ORD .)
    group           reduce using rule 124 (ORDER -> order by LEXP ORD .)
    having          reduce using rule 124 (ORDER -> order by LEXP ORD .)
    union           reduce using rule 124 (ORDER -> order by LEXP ORD .)
    intersect       reduce using rule 124 (ORDER -> order by LEXP ORD .)
    except          reduce using rule 124 (ORDER -> order by LEXP ORD .)
    order           reduce using rule 124 (ORDER -> order by LEXP ORD .)
    limit           reduce using rule 124 (ORDER -> order by LEXP ORD .)
    offset          reduce using rule 124 (ORDER -> order by LEXP ORD .)
    ptcoma          reduce using rule 124 (ORDER -> order by LEXP ORD .)
    mas             reduce using rule 124 (ORDER -> order by LEXP ORD .)
    menos           reduce using rule 124 (ORDER -> order by LEXP ORD .)
    multiplicacion  reduce using rule 124 (ORDER -> order by LEXP ORD .)
    division        reduce using rule 124 (ORDER -> order by LEXP ORD .)
    modulo          reduce using rule 124 (ORDER -> order by LEXP ORD .)
    elevado         reduce using rule 124 (ORDER -> order by LEXP ORD .)
    and             reduce using rule 124 (ORDER -> order by LEXP ORD .)
    or              reduce using rule 124 (ORDER -> order by LEXP ORD .)
    mayor           reduce using rule 124 (ORDER -> order by LEXP ORD .)
    menor           reduce using rule 124 (ORDER -> order by LEXP ORD .)
    mayor_igual     reduce using rule 124 (ORDER -> order by LEXP ORD .)
    menor_igual     reduce using rule 124 (ORDER -> order by LEXP ORD .)
    igual           reduce using rule 124 (ORDER -> order by LEXP ORD .)
    diferente1      reduce using rule 124 (ORDER -> order by LEXP ORD .)
    diferente2      reduce using rule 124 (ORDER -> order by LEXP ORD .)
    between         reduce using rule 124 (ORDER -> order by LEXP ORD .)
    is              reduce using rule 124 (ORDER -> order by LEXP ORD .)
    isnull          reduce using rule 124 (ORDER -> order by LEXP ORD .)
    notnull         reduce using rule 124 (ORDER -> order by LEXP ORD .)
    as              reduce using rule 124 (ORDER -> order by LEXP ORD .)
    cadenaString    reduce using rule 124 (ORDER -> order by LEXP ORD .)
    id              reduce using rule 124 (ORDER -> order by LEXP ORD .)
    cadena          reduce using rule 124 (ORDER -> order by LEXP ORD .)
    in              reduce using rule 124 (ORDER -> order by LEXP ORD .)
    not             reduce using rule 124 (ORDER -> order by LEXP ORD .)
    like            reduce using rule 124 (ORDER -> order by LEXP ORD .)
    parc            reduce using rule 124 (ORDER -> order by LEXP ORD .)
    then            reduce using rule 124 (ORDER -> order by LEXP ORD .)
    end             reduce using rule 124 (ORDER -> order by LEXP ORD .)
    else            reduce using rule 124 (ORDER -> order by LEXP ORD .)
    when            reduce using rule 124 (ORDER -> order by LEXP ORD .)
    constraint      reduce using rule 124 (ORDER -> order by LEXP ORD .)
    unique          reduce using rule 124 (ORDER -> order by LEXP ORD .)
    check           reduce using rule 124 (ORDER -> order by LEXP ORD .)
    default         reduce using rule 124 (ORDER -> order by LEXP ORD .)
    null            reduce using rule 124 (ORDER -> order by LEXP ORD .)
    primary         reduce using rule 124 (ORDER -> order by LEXP ORD .)
    references      reduce using rule 124 (ORDER -> order by LEXP ORD .)
    asc             reduce using rule 124 (ORDER -> order by LEXP ORD .)
    desc            reduce using rule 124 (ORDER -> order by LEXP ORD .)


state 544

    (127) ORD -> asc .

    r_from          reduce using rule 127 (ORD -> asc .)
    coma            reduce using rule 127 (ORD -> asc .)
    where           reduce using rule 127 (ORD -> asc .)
    group           reduce using rule 127 (ORD -> asc .)
    having          reduce using rule 127 (ORD -> asc .)
    union           reduce using rule 127 (ORD -> asc .)
    intersect       reduce using rule 127 (ORD -> asc .)
    except          reduce using rule 127 (ORD -> asc .)
    order           reduce using rule 127 (ORD -> asc .)
    limit           reduce using rule 127 (ORD -> asc .)
    offset          reduce using rule 127 (ORD -> asc .)
    ptcoma          reduce using rule 127 (ORD -> asc .)
    mas             reduce using rule 127 (ORD -> asc .)
    menos           reduce using rule 127 (ORD -> asc .)
    multiplicacion  reduce using rule 127 (ORD -> asc .)
    division        reduce using rule 127 (ORD -> asc .)
    modulo          reduce using rule 127 (ORD -> asc .)
    elevado         reduce using rule 127 (ORD -> asc .)
    and             reduce using rule 127 (ORD -> asc .)
    or              reduce using rule 127 (ORD -> asc .)
    mayor           reduce using rule 127 (ORD -> asc .)
    menor           reduce using rule 127 (ORD -> asc .)
    mayor_igual     reduce using rule 127 (ORD -> asc .)
    menor_igual     reduce using rule 127 (ORD -> asc .)
    igual           reduce using rule 127 (ORD -> asc .)
    diferente1      reduce using rule 127 (ORD -> asc .)
    diferente2      reduce using rule 127 (ORD -> asc .)
    between         reduce using rule 127 (ORD -> asc .)
    is              reduce using rule 127 (ORD -> asc .)
    isnull          reduce using rule 127 (ORD -> asc .)
    notnull         reduce using rule 127 (ORD -> asc .)
    as              reduce using rule 127 (ORD -> asc .)
    cadenaString    reduce using rule 127 (ORD -> asc .)
    id              reduce using rule 127 (ORD -> asc .)
    cadena          reduce using rule 127 (ORD -> asc .)
    in              reduce using rule 127 (ORD -> asc .)
    not             reduce using rule 127 (ORD -> asc .)
    like            reduce using rule 127 (ORD -> asc .)
    parc            reduce using rule 127 (ORD -> asc .)
    then            reduce using rule 127 (ORD -> asc .)
    end             reduce using rule 127 (ORD -> asc .)
    else            reduce using rule 127 (ORD -> asc .)
    when            reduce using rule 127 (ORD -> asc .)
    constraint      reduce using rule 127 (ORD -> asc .)
    unique          reduce using rule 127 (ORD -> asc .)
    check           reduce using rule 127 (ORD -> asc .)
    default         reduce using rule 127 (ORD -> asc .)
    null            reduce using rule 127 (ORD -> asc .)
    primary         reduce using rule 127 (ORD -> asc .)
    references      reduce using rule 127 (ORD -> asc .)
    asc             reduce using rule 127 (ORD -> asc .)
    desc            reduce using rule 127 (ORD -> asc .)


state 545

    (128) ORD -> desc .

    r_from          reduce using rule 128 (ORD -> desc .)
    coma            reduce using rule 128 (ORD -> desc .)
    where           reduce using rule 128 (ORD -> desc .)
    group           reduce using rule 128 (ORD -> desc .)
    having          reduce using rule 128 (ORD -> desc .)
    union           reduce using rule 128 (ORD -> desc .)
    intersect       reduce using rule 128 (ORD -> desc .)
    except          reduce using rule 128 (ORD -> desc .)
    order           reduce using rule 128 (ORD -> desc .)
    limit           reduce using rule 128 (ORD -> desc .)
    offset          reduce using rule 128 (ORD -> desc .)
    ptcoma          reduce using rule 128 (ORD -> desc .)
    mas             reduce using rule 128 (ORD -> desc .)
    menos           reduce using rule 128 (ORD -> desc .)
    multiplicacion  reduce using rule 128 (ORD -> desc .)
    division        reduce using rule 128 (ORD -> desc .)
    modulo          reduce using rule 128 (ORD -> desc .)
    elevado         reduce using rule 128 (ORD -> desc .)
    and             reduce using rule 128 (ORD -> desc .)
    or              reduce using rule 128 (ORD -> desc .)
    mayor           reduce using rule 128 (ORD -> desc .)
    menor           reduce using rule 128 (ORD -> desc .)
    mayor_igual     reduce using rule 128 (ORD -> desc .)
    menor_igual     reduce using rule 128 (ORD -> desc .)
    igual           reduce using rule 128 (ORD -> desc .)
    diferente1      reduce using rule 128 (ORD -> desc .)
    diferente2      reduce using rule 128 (ORD -> desc .)
    between         reduce using rule 128 (ORD -> desc .)
    is              reduce using rule 128 (ORD -> desc .)
    isnull          reduce using rule 128 (ORD -> desc .)
    notnull         reduce using rule 128 (ORD -> desc .)
    as              reduce using rule 128 (ORD -> desc .)
    cadenaString    reduce using rule 128 (ORD -> desc .)
    id              reduce using rule 128 (ORD -> desc .)
    cadena          reduce using rule 128 (ORD -> desc .)
    in              reduce using rule 128 (ORD -> desc .)
    not             reduce using rule 128 (ORD -> desc .)
    like            reduce using rule 128 (ORD -> desc .)
    parc            reduce using rule 128 (ORD -> desc .)
    then            reduce using rule 128 (ORD -> desc .)
    end             reduce using rule 128 (ORD -> desc .)
    else            reduce using rule 128 (ORD -> desc .)
    when            reduce using rule 128 (ORD -> desc .)
    constraint      reduce using rule 128 (ORD -> desc .)
    unique          reduce using rule 128 (ORD -> desc .)
    check           reduce using rule 128 (ORD -> desc .)
    default         reduce using rule 128 (ORD -> desc .)
    null            reduce using rule 128 (ORD -> desc .)
    primary         reduce using rule 128 (ORD -> desc .)
    references      reduce using rule 128 (ORD -> desc .)
    asc             reduce using rule 128 (ORD -> desc .)
    desc            reduce using rule 128 (ORD -> desc .)


state 546

    (151) TIPO -> timestamp para int parc without time zone .

    r_from          reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    coma            reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    where           reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    group           reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    having          reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    union           reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    intersect       reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    except          reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    order           reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    limit           reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    offset          reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    ptcoma          reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    mas             reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    menos           reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    multiplicacion  reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    division        reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    modulo          reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    elevado         reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    and             reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    or              reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    mayor           reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    menor           reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    mayor_igual     reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    menor_igual     reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    igual           reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    diferente1      reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    diferente2      reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    between         reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    is              reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    isnull          reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    notnull         reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    as              reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    cadenaString    reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    id              reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    cadena          reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    in              reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    not             reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    like            reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    parc            reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    then            reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    end             reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    else            reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    when            reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    constraint      reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    unique          reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    check           reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    default         reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    null            reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    primary         reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    references      reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    asc             reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    desc            reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)


state 547

    (152) TIPO -> timestamp para int parc with time zone .

    r_from          reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    coma            reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    where           reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    group           reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    having          reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    union           reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    intersect       reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    except          reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    order           reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    limit           reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    offset          reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    ptcoma          reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    mas             reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    menos           reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    multiplicacion  reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    division        reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    modulo          reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    elevado         reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    and             reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    or              reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    mayor           reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    menor           reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    mayor_igual     reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    menor_igual     reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    igual           reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    diferente1      reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    diferente2      reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    between         reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    is              reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    isnull          reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    notnull         reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    as              reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    cadenaString    reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    id              reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    cadena          reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    in              reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    not             reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    like            reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    parc            reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    then            reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    end             reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    else            reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    when            reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    constraint      reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    unique          reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    check           reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    default         reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    null            reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    primary         reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    references      reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    asc             reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)
    desc            reduce using rule 152 (TIPO -> timestamp para int parc with time zone .)


state 548

    (153) TIPO -> time para int parc without time zone .

    r_from          reduce using rule 153 (TIPO -> time para int parc without time zone .)
    coma            reduce using rule 153 (TIPO -> time para int parc without time zone .)
    where           reduce using rule 153 (TIPO -> time para int parc without time zone .)
    group           reduce using rule 153 (TIPO -> time para int parc without time zone .)
    having          reduce using rule 153 (TIPO -> time para int parc without time zone .)
    union           reduce using rule 153 (TIPO -> time para int parc without time zone .)
    intersect       reduce using rule 153 (TIPO -> time para int parc without time zone .)
    except          reduce using rule 153 (TIPO -> time para int parc without time zone .)
    order           reduce using rule 153 (TIPO -> time para int parc without time zone .)
    limit           reduce using rule 153 (TIPO -> time para int parc without time zone .)
    offset          reduce using rule 153 (TIPO -> time para int parc without time zone .)
    ptcoma          reduce using rule 153 (TIPO -> time para int parc without time zone .)
    mas             reduce using rule 153 (TIPO -> time para int parc without time zone .)
    menos           reduce using rule 153 (TIPO -> time para int parc without time zone .)
    multiplicacion  reduce using rule 153 (TIPO -> time para int parc without time zone .)
    division        reduce using rule 153 (TIPO -> time para int parc without time zone .)
    modulo          reduce using rule 153 (TIPO -> time para int parc without time zone .)
    elevado         reduce using rule 153 (TIPO -> time para int parc without time zone .)
    and             reduce using rule 153 (TIPO -> time para int parc without time zone .)
    or              reduce using rule 153 (TIPO -> time para int parc without time zone .)
    mayor           reduce using rule 153 (TIPO -> time para int parc without time zone .)
    menor           reduce using rule 153 (TIPO -> time para int parc without time zone .)
    mayor_igual     reduce using rule 153 (TIPO -> time para int parc without time zone .)
    menor_igual     reduce using rule 153 (TIPO -> time para int parc without time zone .)
    igual           reduce using rule 153 (TIPO -> time para int parc without time zone .)
    diferente1      reduce using rule 153 (TIPO -> time para int parc without time zone .)
    diferente2      reduce using rule 153 (TIPO -> time para int parc without time zone .)
    between         reduce using rule 153 (TIPO -> time para int parc without time zone .)
    is              reduce using rule 153 (TIPO -> time para int parc without time zone .)
    isnull          reduce using rule 153 (TIPO -> time para int parc without time zone .)
    notnull         reduce using rule 153 (TIPO -> time para int parc without time zone .)
    as              reduce using rule 153 (TIPO -> time para int parc without time zone .)
    cadenaString    reduce using rule 153 (TIPO -> time para int parc without time zone .)
    id              reduce using rule 153 (TIPO -> time para int parc without time zone .)
    cadena          reduce using rule 153 (TIPO -> time para int parc without time zone .)
    in              reduce using rule 153 (TIPO -> time para int parc without time zone .)
    not             reduce using rule 153 (TIPO -> time para int parc without time zone .)
    like            reduce using rule 153 (TIPO -> time para int parc without time zone .)
    parc            reduce using rule 153 (TIPO -> time para int parc without time zone .)
    then            reduce using rule 153 (TIPO -> time para int parc without time zone .)
    end             reduce using rule 153 (TIPO -> time para int parc without time zone .)
    else            reduce using rule 153 (TIPO -> time para int parc without time zone .)
    when            reduce using rule 153 (TIPO -> time para int parc without time zone .)
    constraint      reduce using rule 153 (TIPO -> time para int parc without time zone .)
    unique          reduce using rule 153 (TIPO -> time para int parc without time zone .)
    check           reduce using rule 153 (TIPO -> time para int parc without time zone .)
    default         reduce using rule 153 (TIPO -> time para int parc without time zone .)
    null            reduce using rule 153 (TIPO -> time para int parc without time zone .)
    primary         reduce using rule 153 (TIPO -> time para int parc without time zone .)
    references      reduce using rule 153 (TIPO -> time para int parc without time zone .)
    asc             reduce using rule 153 (TIPO -> time para int parc without time zone .)
    desc            reduce using rule 153 (TIPO -> time para int parc without time zone .)


state 549

    (154) TIPO -> time para int parc with time zone .

    r_from          reduce using rule 154 (TIPO -> time para int parc with time zone .)
    coma            reduce using rule 154 (TIPO -> time para int parc with time zone .)
    where           reduce using rule 154 (TIPO -> time para int parc with time zone .)
    group           reduce using rule 154 (TIPO -> time para int parc with time zone .)
    having          reduce using rule 154 (TIPO -> time para int parc with time zone .)
    union           reduce using rule 154 (TIPO -> time para int parc with time zone .)
    intersect       reduce using rule 154 (TIPO -> time para int parc with time zone .)
    except          reduce using rule 154 (TIPO -> time para int parc with time zone .)
    order           reduce using rule 154 (TIPO -> time para int parc with time zone .)
    limit           reduce using rule 154 (TIPO -> time para int parc with time zone .)
    offset          reduce using rule 154 (TIPO -> time para int parc with time zone .)
    ptcoma          reduce using rule 154 (TIPO -> time para int parc with time zone .)
    mas             reduce using rule 154 (TIPO -> time para int parc with time zone .)
    menos           reduce using rule 154 (TIPO -> time para int parc with time zone .)
    multiplicacion  reduce using rule 154 (TIPO -> time para int parc with time zone .)
    division        reduce using rule 154 (TIPO -> time para int parc with time zone .)
    modulo          reduce using rule 154 (TIPO -> time para int parc with time zone .)
    elevado         reduce using rule 154 (TIPO -> time para int parc with time zone .)
    and             reduce using rule 154 (TIPO -> time para int parc with time zone .)
    or              reduce using rule 154 (TIPO -> time para int parc with time zone .)
    mayor           reduce using rule 154 (TIPO -> time para int parc with time zone .)
    menor           reduce using rule 154 (TIPO -> time para int parc with time zone .)
    mayor_igual     reduce using rule 154 (TIPO -> time para int parc with time zone .)
    menor_igual     reduce using rule 154 (TIPO -> time para int parc with time zone .)
    igual           reduce using rule 154 (TIPO -> time para int parc with time zone .)
    diferente1      reduce using rule 154 (TIPO -> time para int parc with time zone .)
    diferente2      reduce using rule 154 (TIPO -> time para int parc with time zone .)
    between         reduce using rule 154 (TIPO -> time para int parc with time zone .)
    is              reduce using rule 154 (TIPO -> time para int parc with time zone .)
    isnull          reduce using rule 154 (TIPO -> time para int parc with time zone .)
    notnull         reduce using rule 154 (TIPO -> time para int parc with time zone .)
    as              reduce using rule 154 (TIPO -> time para int parc with time zone .)
    cadenaString    reduce using rule 154 (TIPO -> time para int parc with time zone .)
    id              reduce using rule 154 (TIPO -> time para int parc with time zone .)
    cadena          reduce using rule 154 (TIPO -> time para int parc with time zone .)
    in              reduce using rule 154 (TIPO -> time para int parc with time zone .)
    not             reduce using rule 154 (TIPO -> time para int parc with time zone .)
    like            reduce using rule 154 (TIPO -> time para int parc with time zone .)
    parc            reduce using rule 154 (TIPO -> time para int parc with time zone .)
    then            reduce using rule 154 (TIPO -> time para int parc with time zone .)
    end             reduce using rule 154 (TIPO -> time para int parc with time zone .)
    else            reduce using rule 154 (TIPO -> time para int parc with time zone .)
    when            reduce using rule 154 (TIPO -> time para int parc with time zone .)
    constraint      reduce using rule 154 (TIPO -> time para int parc with time zone .)
    unique          reduce using rule 154 (TIPO -> time para int parc with time zone .)
    check           reduce using rule 154 (TIPO -> time para int parc with time zone .)
    default         reduce using rule 154 (TIPO -> time para int parc with time zone .)
    null            reduce using rule 154 (TIPO -> time para int parc with time zone .)
    primary         reduce using rule 154 (TIPO -> time para int parc with time zone .)
    references      reduce using rule 154 (TIPO -> time para int parc with time zone .)
    asc             reduce using rule 154 (TIPO -> time para int parc with time zone .)
    desc            reduce using rule 154 (TIPO -> time para int parc with time zone .)


state 550

    (79) OPCOLUMN -> constraint id check para . CONDCHECK parc
    (90) CONDCHECK -> . EXP mayor EXP
    (91) CONDCHECK -> . EXP menor EXP
    (92) CONDCHECK -> . EXP mayor_igual EXP
    (93) CONDCHECK -> . EXP menor_igual EXP
    (94) CONDCHECK -> . EXP igual EXP
    (95) CONDCHECK -> . EXP diferente1 EXP
    (96) CONDCHECK -> . EXP diferente2 EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    CONDCHECK                      shift and go to state 563
    EXP                            shift and go to state 440
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 551

    (80) OPCOLUMN -> check para CONDCHECK parc .

    constraint      reduce using rule 80 (OPCOLUMN -> check para CONDCHECK parc .)
    unique          reduce using rule 80 (OPCOLUMN -> check para CONDCHECK parc .)
    check           reduce using rule 80 (OPCOLUMN -> check para CONDCHECK parc .)
    default         reduce using rule 80 (OPCOLUMN -> check para CONDCHECK parc .)
    not             reduce using rule 80 (OPCOLUMN -> check para CONDCHECK parc .)
    null            reduce using rule 80 (OPCOLUMN -> check para CONDCHECK parc .)
    primary         reduce using rule 80 (OPCOLUMN -> check para CONDCHECK parc .)
    references      reduce using rule 80 (OPCOLUMN -> check para CONDCHECK parc .)
    parc            reduce using rule 80 (OPCOLUMN -> check para CONDCHECK parc .)
    coma            reduce using rule 80 (OPCOLUMN -> check para CONDCHECK parc .)


state 552

    (97) HERENCIA -> inherits para id parc .

    ptcoma          reduce using rule 97 (HERENCIA -> inherits para id parc .)


state 553

    (87) OPCONST -> foreign key para LEXP parc references . id para LEXP parc

    id              shift and go to state 564


state 554

    (34) OP -> add constraint id unique para id parc .

    ptcoma          reduce using rule 34 (OP -> add constraint id unique para id parc .)


state 555

    (36) OP -> add constraint id foreign key para LEXP . parc references id para LEXP parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 565
    coma            shift and go to state 89


state 556

    (35) OP -> add foreign key para LEXP parc references . id para LEXP parc

    id              shift and go to state 566


state 557

    (24) INSERT -> insert into id para LEXP parc values para LEXP parc .

    ptcoma          reduce using rule 24 (INSERT -> insert into id para LEXP parc values para LEXP parc .)


state 558

    (99) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .

    ptcoma          reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    r_from          reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    coma            reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    where           reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    group           reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    having          reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    union           reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    intersect       reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    except          reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    order           reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    limit           reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    offset          reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mas             reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menos           reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    multiplicacion  reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    division        reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    modulo          reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    elevado         reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    and             reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    or              reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor           reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor           reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor_igual     reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor_igual     reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    igual           reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente1      reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente2      reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    between         reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    is              reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    isnull          reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    notnull         reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    as              reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadenaString    reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    id              reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadena          reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    in              reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    not             reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    like            reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    parc            reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    then            reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    end             reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    else            reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    when            reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    constraint      reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    unique          reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    check           reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    default         reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    null            reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    primary         reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    references      reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    asc             reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    desc            reduce using rule 99 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)


state 559

    (105) LIMIT -> limit int offset int .

    ptcoma          reduce using rule 105 (LIMIT -> limit int offset int .)
    r_from          reduce using rule 105 (LIMIT -> limit int offset int .)
    coma            reduce using rule 105 (LIMIT -> limit int offset int .)
    where           reduce using rule 105 (LIMIT -> limit int offset int .)
    group           reduce using rule 105 (LIMIT -> limit int offset int .)
    having          reduce using rule 105 (LIMIT -> limit int offset int .)
    union           reduce using rule 105 (LIMIT -> limit int offset int .)
    intersect       reduce using rule 105 (LIMIT -> limit int offset int .)
    except          reduce using rule 105 (LIMIT -> limit int offset int .)
    order           reduce using rule 105 (LIMIT -> limit int offset int .)
    limit           reduce using rule 105 (LIMIT -> limit int offset int .)
    offset          reduce using rule 105 (LIMIT -> limit int offset int .)
    mas             reduce using rule 105 (LIMIT -> limit int offset int .)
    menos           reduce using rule 105 (LIMIT -> limit int offset int .)
    multiplicacion  reduce using rule 105 (LIMIT -> limit int offset int .)
    division        reduce using rule 105 (LIMIT -> limit int offset int .)
    modulo          reduce using rule 105 (LIMIT -> limit int offset int .)
    elevado         reduce using rule 105 (LIMIT -> limit int offset int .)
    and             reduce using rule 105 (LIMIT -> limit int offset int .)
    or              reduce using rule 105 (LIMIT -> limit int offset int .)
    mayor           reduce using rule 105 (LIMIT -> limit int offset int .)
    menor           reduce using rule 105 (LIMIT -> limit int offset int .)
    mayor_igual     reduce using rule 105 (LIMIT -> limit int offset int .)
    menor_igual     reduce using rule 105 (LIMIT -> limit int offset int .)
    igual           reduce using rule 105 (LIMIT -> limit int offset int .)
    diferente1      reduce using rule 105 (LIMIT -> limit int offset int .)
    diferente2      reduce using rule 105 (LIMIT -> limit int offset int .)
    between         reduce using rule 105 (LIMIT -> limit int offset int .)
    is              reduce using rule 105 (LIMIT -> limit int offset int .)
    isnull          reduce using rule 105 (LIMIT -> limit int offset int .)
    notnull         reduce using rule 105 (LIMIT -> limit int offset int .)
    as              reduce using rule 105 (LIMIT -> limit int offset int .)
    cadenaString    reduce using rule 105 (LIMIT -> limit int offset int .)
    id              reduce using rule 105 (LIMIT -> limit int offset int .)
    cadena          reduce using rule 105 (LIMIT -> limit int offset int .)
    in              reduce using rule 105 (LIMIT -> limit int offset int .)
    not             reduce using rule 105 (LIMIT -> limit int offset int .)
    like            reduce using rule 105 (LIMIT -> limit int offset int .)
    parc            reduce using rule 105 (LIMIT -> limit int offset int .)
    then            reduce using rule 105 (LIMIT -> limit int offset int .)
    end             reduce using rule 105 (LIMIT -> limit int offset int .)
    else            reduce using rule 105 (LIMIT -> limit int offset int .)
    when            reduce using rule 105 (LIMIT -> limit int offset int .)
    constraint      reduce using rule 105 (LIMIT -> limit int offset int .)
    unique          reduce using rule 105 (LIMIT -> limit int offset int .)
    check           reduce using rule 105 (LIMIT -> limit int offset int .)
    default         reduce using rule 105 (LIMIT -> limit int offset int .)
    null            reduce using rule 105 (LIMIT -> limit int offset int .)
    primary         reduce using rule 105 (LIMIT -> limit int offset int .)
    references      reduce using rule 105 (LIMIT -> limit int offset int .)
    asc             reduce using rule 105 (LIMIT -> limit int offset int .)
    desc            reduce using rule 105 (LIMIT -> limit int offset int .)


state 560

    (107) LIMIT -> limit all offset int .

    ptcoma          reduce using rule 107 (LIMIT -> limit all offset int .)
    r_from          reduce using rule 107 (LIMIT -> limit all offset int .)
    coma            reduce using rule 107 (LIMIT -> limit all offset int .)
    where           reduce using rule 107 (LIMIT -> limit all offset int .)
    group           reduce using rule 107 (LIMIT -> limit all offset int .)
    having          reduce using rule 107 (LIMIT -> limit all offset int .)
    union           reduce using rule 107 (LIMIT -> limit all offset int .)
    intersect       reduce using rule 107 (LIMIT -> limit all offset int .)
    except          reduce using rule 107 (LIMIT -> limit all offset int .)
    order           reduce using rule 107 (LIMIT -> limit all offset int .)
    limit           reduce using rule 107 (LIMIT -> limit all offset int .)
    offset          reduce using rule 107 (LIMIT -> limit all offset int .)
    mas             reduce using rule 107 (LIMIT -> limit all offset int .)
    menos           reduce using rule 107 (LIMIT -> limit all offset int .)
    multiplicacion  reduce using rule 107 (LIMIT -> limit all offset int .)
    division        reduce using rule 107 (LIMIT -> limit all offset int .)
    modulo          reduce using rule 107 (LIMIT -> limit all offset int .)
    elevado         reduce using rule 107 (LIMIT -> limit all offset int .)
    and             reduce using rule 107 (LIMIT -> limit all offset int .)
    or              reduce using rule 107 (LIMIT -> limit all offset int .)
    mayor           reduce using rule 107 (LIMIT -> limit all offset int .)
    menor           reduce using rule 107 (LIMIT -> limit all offset int .)
    mayor_igual     reduce using rule 107 (LIMIT -> limit all offset int .)
    menor_igual     reduce using rule 107 (LIMIT -> limit all offset int .)
    igual           reduce using rule 107 (LIMIT -> limit all offset int .)
    diferente1      reduce using rule 107 (LIMIT -> limit all offset int .)
    diferente2      reduce using rule 107 (LIMIT -> limit all offset int .)
    between         reduce using rule 107 (LIMIT -> limit all offset int .)
    is              reduce using rule 107 (LIMIT -> limit all offset int .)
    isnull          reduce using rule 107 (LIMIT -> limit all offset int .)
    notnull         reduce using rule 107 (LIMIT -> limit all offset int .)
    as              reduce using rule 107 (LIMIT -> limit all offset int .)
    cadenaString    reduce using rule 107 (LIMIT -> limit all offset int .)
    id              reduce using rule 107 (LIMIT -> limit all offset int .)
    cadena          reduce using rule 107 (LIMIT -> limit all offset int .)
    in              reduce using rule 107 (LIMIT -> limit all offset int .)
    not             reduce using rule 107 (LIMIT -> limit all offset int .)
    like            reduce using rule 107 (LIMIT -> limit all offset int .)
    parc            reduce using rule 107 (LIMIT -> limit all offset int .)
    then            reduce using rule 107 (LIMIT -> limit all offset int .)
    end             reduce using rule 107 (LIMIT -> limit all offset int .)
    else            reduce using rule 107 (LIMIT -> limit all offset int .)
    when            reduce using rule 107 (LIMIT -> limit all offset int .)
    constraint      reduce using rule 107 (LIMIT -> limit all offset int .)
    unique          reduce using rule 107 (LIMIT -> limit all offset int .)
    check           reduce using rule 107 (LIMIT -> limit all offset int .)
    default         reduce using rule 107 (LIMIT -> limit all offset int .)
    null            reduce using rule 107 (LIMIT -> limit all offset int .)
    primary         reduce using rule 107 (LIMIT -> limit all offset int .)
    references      reduce using rule 107 (LIMIT -> limit all offset int .)
    asc             reduce using rule 107 (LIMIT -> limit all offset int .)
    desc            reduce using rule 107 (LIMIT -> limit all offset int .)


state 561

    (106) LIMIT -> offset int limit int .

    ptcoma          reduce using rule 106 (LIMIT -> offset int limit int .)
    r_from          reduce using rule 106 (LIMIT -> offset int limit int .)
    coma            reduce using rule 106 (LIMIT -> offset int limit int .)
    where           reduce using rule 106 (LIMIT -> offset int limit int .)
    group           reduce using rule 106 (LIMIT -> offset int limit int .)
    having          reduce using rule 106 (LIMIT -> offset int limit int .)
    union           reduce using rule 106 (LIMIT -> offset int limit int .)
    intersect       reduce using rule 106 (LIMIT -> offset int limit int .)
    except          reduce using rule 106 (LIMIT -> offset int limit int .)
    order           reduce using rule 106 (LIMIT -> offset int limit int .)
    limit           reduce using rule 106 (LIMIT -> offset int limit int .)
    offset          reduce using rule 106 (LIMIT -> offset int limit int .)
    mas             reduce using rule 106 (LIMIT -> offset int limit int .)
    menos           reduce using rule 106 (LIMIT -> offset int limit int .)
    multiplicacion  reduce using rule 106 (LIMIT -> offset int limit int .)
    division        reduce using rule 106 (LIMIT -> offset int limit int .)
    modulo          reduce using rule 106 (LIMIT -> offset int limit int .)
    elevado         reduce using rule 106 (LIMIT -> offset int limit int .)
    and             reduce using rule 106 (LIMIT -> offset int limit int .)
    or              reduce using rule 106 (LIMIT -> offset int limit int .)
    mayor           reduce using rule 106 (LIMIT -> offset int limit int .)
    menor           reduce using rule 106 (LIMIT -> offset int limit int .)
    mayor_igual     reduce using rule 106 (LIMIT -> offset int limit int .)
    menor_igual     reduce using rule 106 (LIMIT -> offset int limit int .)
    igual           reduce using rule 106 (LIMIT -> offset int limit int .)
    diferente1      reduce using rule 106 (LIMIT -> offset int limit int .)
    diferente2      reduce using rule 106 (LIMIT -> offset int limit int .)
    between         reduce using rule 106 (LIMIT -> offset int limit int .)
    is              reduce using rule 106 (LIMIT -> offset int limit int .)
    isnull          reduce using rule 106 (LIMIT -> offset int limit int .)
    notnull         reduce using rule 106 (LIMIT -> offset int limit int .)
    as              reduce using rule 106 (LIMIT -> offset int limit int .)
    cadenaString    reduce using rule 106 (LIMIT -> offset int limit int .)
    id              reduce using rule 106 (LIMIT -> offset int limit int .)
    cadena          reduce using rule 106 (LIMIT -> offset int limit int .)
    in              reduce using rule 106 (LIMIT -> offset int limit int .)
    not             reduce using rule 106 (LIMIT -> offset int limit int .)
    like            reduce using rule 106 (LIMIT -> offset int limit int .)
    parc            reduce using rule 106 (LIMIT -> offset int limit int .)
    then            reduce using rule 106 (LIMIT -> offset int limit int .)
    end             reduce using rule 106 (LIMIT -> offset int limit int .)
    else            reduce using rule 106 (LIMIT -> offset int limit int .)
    when            reduce using rule 106 (LIMIT -> offset int limit int .)
    constraint      reduce using rule 106 (LIMIT -> offset int limit int .)
    unique          reduce using rule 106 (LIMIT -> offset int limit int .)
    check           reduce using rule 106 (LIMIT -> offset int limit int .)
    default         reduce using rule 106 (LIMIT -> offset int limit int .)
    null            reduce using rule 106 (LIMIT -> offset int limit int .)
    primary         reduce using rule 106 (LIMIT -> offset int limit int .)
    references      reduce using rule 106 (LIMIT -> offset int limit int .)
    asc             reduce using rule 106 (LIMIT -> offset int limit int .)
    desc            reduce using rule 106 (LIMIT -> offset int limit int .)


state 562

    (108) LIMIT -> offset int limit all .

    ptcoma          reduce using rule 108 (LIMIT -> offset int limit all .)
    r_from          reduce using rule 108 (LIMIT -> offset int limit all .)
    coma            reduce using rule 108 (LIMIT -> offset int limit all .)
    where           reduce using rule 108 (LIMIT -> offset int limit all .)
    group           reduce using rule 108 (LIMIT -> offset int limit all .)
    having          reduce using rule 108 (LIMIT -> offset int limit all .)
    union           reduce using rule 108 (LIMIT -> offset int limit all .)
    intersect       reduce using rule 108 (LIMIT -> offset int limit all .)
    except          reduce using rule 108 (LIMIT -> offset int limit all .)
    order           reduce using rule 108 (LIMIT -> offset int limit all .)
    limit           reduce using rule 108 (LIMIT -> offset int limit all .)
    offset          reduce using rule 108 (LIMIT -> offset int limit all .)
    mas             reduce using rule 108 (LIMIT -> offset int limit all .)
    menos           reduce using rule 108 (LIMIT -> offset int limit all .)
    multiplicacion  reduce using rule 108 (LIMIT -> offset int limit all .)
    division        reduce using rule 108 (LIMIT -> offset int limit all .)
    modulo          reduce using rule 108 (LIMIT -> offset int limit all .)
    elevado         reduce using rule 108 (LIMIT -> offset int limit all .)
    and             reduce using rule 108 (LIMIT -> offset int limit all .)
    or              reduce using rule 108 (LIMIT -> offset int limit all .)
    mayor           reduce using rule 108 (LIMIT -> offset int limit all .)
    menor           reduce using rule 108 (LIMIT -> offset int limit all .)
    mayor_igual     reduce using rule 108 (LIMIT -> offset int limit all .)
    menor_igual     reduce using rule 108 (LIMIT -> offset int limit all .)
    igual           reduce using rule 108 (LIMIT -> offset int limit all .)
    diferente1      reduce using rule 108 (LIMIT -> offset int limit all .)
    diferente2      reduce using rule 108 (LIMIT -> offset int limit all .)
    between         reduce using rule 108 (LIMIT -> offset int limit all .)
    is              reduce using rule 108 (LIMIT -> offset int limit all .)
    isnull          reduce using rule 108 (LIMIT -> offset int limit all .)
    notnull         reduce using rule 108 (LIMIT -> offset int limit all .)
    as              reduce using rule 108 (LIMIT -> offset int limit all .)
    cadenaString    reduce using rule 108 (LIMIT -> offset int limit all .)
    id              reduce using rule 108 (LIMIT -> offset int limit all .)
    cadena          reduce using rule 108 (LIMIT -> offset int limit all .)
    in              reduce using rule 108 (LIMIT -> offset int limit all .)
    not             reduce using rule 108 (LIMIT -> offset int limit all .)
    like            reduce using rule 108 (LIMIT -> offset int limit all .)
    parc            reduce using rule 108 (LIMIT -> offset int limit all .)
    then            reduce using rule 108 (LIMIT -> offset int limit all .)
    end             reduce using rule 108 (LIMIT -> offset int limit all .)
    else            reduce using rule 108 (LIMIT -> offset int limit all .)
    when            reduce using rule 108 (LIMIT -> offset int limit all .)
    constraint      reduce using rule 108 (LIMIT -> offset int limit all .)
    unique          reduce using rule 108 (LIMIT -> offset int limit all .)
    check           reduce using rule 108 (LIMIT -> offset int limit all .)
    default         reduce using rule 108 (LIMIT -> offset int limit all .)
    null            reduce using rule 108 (LIMIT -> offset int limit all .)
    primary         reduce using rule 108 (LIMIT -> offset int limit all .)
    references      reduce using rule 108 (LIMIT -> offset int limit all .)
    asc             reduce using rule 108 (LIMIT -> offset int limit all .)
    desc            reduce using rule 108 (LIMIT -> offset int limit all .)


state 563

    (79) OPCOLUMN -> constraint id check para CONDCHECK . parc

    parc            shift and go to state 567


state 564

    (87) OPCONST -> foreign key para LEXP parc references id . para LEXP parc

    para            shift and go to state 568


state 565

    (36) OP -> add constraint id foreign key para LEXP parc . references id para LEXP parc

    references      shift and go to state 569


state 566

    (35) OP -> add foreign key para LEXP parc references id . para LEXP parc

    para            shift and go to state 570


state 567

    (79) OPCOLUMN -> constraint id check para CONDCHECK parc .

    constraint      reduce using rule 79 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    unique          reduce using rule 79 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    check           reduce using rule 79 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    default         reduce using rule 79 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    not             reduce using rule 79 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    null            reduce using rule 79 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    primary         reduce using rule 79 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    references      reduce using rule 79 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    parc            reduce using rule 79 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    coma            reduce using rule 79 (OPCOLUMN -> constraint id check para CONDCHECK parc .)


state 568

    (87) OPCONST -> foreign key para LEXP parc references id para . LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 571
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 569

    (36) OP -> add constraint id foreign key para LEXP parc references . id para LEXP parc

    id              shift and go to state 572


state 570

    (35) OP -> add foreign key para LEXP parc references id para . LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 573
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 571

    (87) OPCONST -> foreign key para LEXP parc references id para LEXP . parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 574
    coma            shift and go to state 89


state 572

    (36) OP -> add constraint id foreign key para LEXP parc references id . para LEXP parc

    para            shift and go to state 575


state 573

    (35) OP -> add foreign key para LEXP parc references id para LEXP . parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 576
    coma            shift and go to state 89


state 574

    (87) OPCONST -> foreign key para LEXP parc references id para LEXP parc .

    parc            reduce using rule 87 (OPCONST -> foreign key para LEXP parc references id para LEXP parc .)
    coma            reduce using rule 87 (OPCONST -> foreign key para LEXP parc references id para LEXP parc .)


state 575

    (36) OP -> add constraint id foreign key para LEXP parc references id para . LEXP parc
    (135) LEXP -> . LEXP coma EXP
    (136) LEXP -> . EXP
    (180) EXP -> . EXP mas EXP
    (181) EXP -> . EXP menos EXP
    (182) EXP -> . EXP multiplicacion EXP
    (183) EXP -> . EXP division EXP
    (184) EXP -> . EXP modulo EXP
    (185) EXP -> . EXP elevado EXP
    (186) EXP -> . EXP and EXP
    (187) EXP -> . EXP or EXP
    (188) EXP -> . EXP mayor EXP
    (189) EXP -> . EXP menor EXP
    (190) EXP -> . EXP mayor_igual EXP
    (191) EXP -> . EXP menor_igual EXP
    (192) EXP -> . EXP igual EXP
    (193) EXP -> . EXP diferente1 EXP
    (194) EXP -> . EXP diferente2 EXP
    (195) EXP -> . EXP between EXP
    (196) EXP -> . EXP is not null
    (197) EXP -> . EXP is null
    (198) EXP -> . EXP isnull
    (199) EXP -> . EXP notnull
    (200) EXP -> . EXP is true
    (201) EXP -> . EXP is not true
    (202) EXP -> . EXP is false
    (203) EXP -> . EXP is not false
    (204) EXP -> . EXP is unknown
    (205) EXP -> . EXP is not unknown
    (206) EXP -> . EXP as cadenaString
    (207) EXP -> . EXP cadenaString
    (208) EXP -> . EXP as id
    (209) EXP -> . EXP id
    (210) EXP -> . EXP as cadena
    (211) EXP -> . EXP cadena
    (212) EXP -> . mas EXP
    (213) EXP -> . menos EXP
    (214) EXP -> . not EXP
    (215) EXP -> . EXP in para EXP parc
    (216) EXP -> . EXP not in para EXP parc
    (217) EXP -> . EXP not between EXP
    (218) EXP -> . EXP between symetric EXP
    (219) EXP -> . EXP not between symetric EXP
    (220) EXP -> . EXP is distinct r_from EXP
    (221) EXP -> . EXP is not distinct r_from EXP
    (222) EXP -> . EXP like cadena
    (223) EXP -> . EXP not like cadena
    (224) EXP -> . SELECT
    (225) EXP -> . para EXP parc
    (226) EXP -> . CASE
    (227) EXP -> . id para LEXP parc
    (228) EXP -> . id para parc
    (229) EXP -> . any para LEXP parc
    (230) EXP -> . all para LEXP parc
    (231) EXP -> . some para LEXP parc
    (232) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (233) EXP -> . int
    (234) EXP -> . decimales
    (235) EXP -> . cadena
    (236) EXP -> . cadenaString
    (237) EXP -> . true
    (238) EXP -> . false
    (239) EXP -> . id
    (240) EXP -> . multiplicacion
    (241) EXP -> . null
    (242) EXP -> . current_time
    (243) EXP -> . current_date
    (244) EXP -> . timestamp cadena
    (245) EXP -> . interval cadena
    (246) EXP -> . cadena as TIPO
    (247) EXP -> . default
    (248) EXP -> . idPunto
    (99) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (100) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (101) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (17) CASE -> . case LISTAWHEN ELSE end
    (18) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 44
    para            shift and go to state 51
    id              shift and go to state 49
    any             shift and go to state 54
    all             shift and go to state 55
    some            shift and go to state 56
    extract         shift and go to state 57
    int             shift and go to state 59
    decimales       shift and go to state 60
    cadena          shift and go to state 50
    cadenaString    shift and go to state 48
    true            shift and go to state 46
    false           shift and go to state 47
    multiplicacion  shift and go to state 43
    null            shift and go to state 45
    current_time    shift and go to state 61
    current_date    shift and go to state 62
    timestamp       shift and go to state 58
    interval        shift and go to state 63
    default         shift and go to state 64
    idPunto         shift and go to state 65
    select          shift and go to state 17
    case            shift and go to state 24

    LEXP                           shift and go to state 577
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 52
    CASE                           shift and go to state 53

state 576

    (35) OP -> add foreign key para LEXP parc references id para LEXP parc .

    ptcoma          reduce using rule 35 (OP -> add foreign key para LEXP parc references id para LEXP parc .)


state 577

    (36) OP -> add constraint id foreign key para LEXP parc references id para LEXP . parc
    (135) LEXP -> LEXP . coma EXP

    parc            shift and go to state 578
    coma            shift and go to state 89


state 578

    (36) OP -> add constraint id foreign key para LEXP parc references id para LEXP parc .

    ptcoma          reduce using rule 36 (OP -> add constraint id foreign key para LEXP parc references id para LEXP parc .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for r_from in state 39 resolved as shift
WARNING: shift/reduce conflict for coma in state 39 resolved as shift
WARNING: shift/reduce conflict for where in state 39 resolved as shift
WARNING: shift/reduce conflict for mas in state 40 resolved as shift
WARNING: shift/reduce conflict for menos in state 40 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 40 resolved as shift
WARNING: shift/reduce conflict for division in state 40 resolved as shift
WARNING: shift/reduce conflict for modulo in state 40 resolved as shift
WARNING: shift/reduce conflict for elevado in state 40 resolved as shift
WARNING: shift/reduce conflict for and in state 40 resolved as shift
WARNING: shift/reduce conflict for or in state 40 resolved as shift
WARNING: shift/reduce conflict for mayor in state 40 resolved as shift
WARNING: shift/reduce conflict for menor in state 40 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 40 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 40 resolved as shift
WARNING: shift/reduce conflict for igual in state 40 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 40 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 40 resolved as shift
WARNING: shift/reduce conflict for between in state 40 resolved as shift
WARNING: shift/reduce conflict for is in state 40 resolved as shift
WARNING: shift/reduce conflict for isnull in state 40 resolved as shift
WARNING: shift/reduce conflict for notnull in state 40 resolved as shift
WARNING: shift/reduce conflict for as in state 40 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 40 resolved as shift
WARNING: shift/reduce conflict for id in state 40 resolved as shift
WARNING: shift/reduce conflict for cadena in state 40 resolved as shift
WARNING: shift/reduce conflict for in in state 40 resolved as shift
WARNING: shift/reduce conflict for not in state 40 resolved as shift
WARNING: shift/reduce conflict for like in state 40 resolved as shift
WARNING: shift/reduce conflict for as in state 50 resolved as shift
WARNING: shift/reduce conflict for group in state 88 resolved as shift
WARNING: shift/reduce conflict for coma in state 151 resolved as shift
WARNING: shift/reduce conflict for where in state 151 resolved as shift
WARNING: shift/reduce conflict for having in state 152 resolved as shift
WARNING: shift/reduce conflict for mas in state 154 resolved as shift
WARNING: shift/reduce conflict for menos in state 154 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 154 resolved as shift
WARNING: shift/reduce conflict for division in state 154 resolved as shift
WARNING: shift/reduce conflict for modulo in state 154 resolved as shift
WARNING: shift/reduce conflict for elevado in state 154 resolved as shift
WARNING: shift/reduce conflict for and in state 154 resolved as shift
WARNING: shift/reduce conflict for or in state 154 resolved as shift
WARNING: shift/reduce conflict for mayor in state 154 resolved as shift
WARNING: shift/reduce conflict for menor in state 154 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 154 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 154 resolved as shift
WARNING: shift/reduce conflict for igual in state 154 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 154 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 154 resolved as shift
WARNING: shift/reduce conflict for between in state 154 resolved as shift
WARNING: shift/reduce conflict for is in state 154 resolved as shift
WARNING: shift/reduce conflict for isnull in state 154 resolved as shift
WARNING: shift/reduce conflict for notnull in state 154 resolved as shift
WARNING: shift/reduce conflict for as in state 154 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 154 resolved as shift
WARNING: shift/reduce conflict for id in state 154 resolved as shift
WARNING: shift/reduce conflict for cadena in state 154 resolved as shift
WARNING: shift/reduce conflict for in in state 154 resolved as shift
WARNING: shift/reduce conflict for not in state 154 resolved as shift
WARNING: shift/reduce conflict for like in state 154 resolved as shift
WARNING: shift/reduce conflict for mas in state 155 resolved as shift
WARNING: shift/reduce conflict for menos in state 155 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 155 resolved as shift
WARNING: shift/reduce conflict for division in state 155 resolved as shift
WARNING: shift/reduce conflict for modulo in state 155 resolved as shift
WARNING: shift/reduce conflict for elevado in state 155 resolved as shift
WARNING: shift/reduce conflict for and in state 155 resolved as shift
WARNING: shift/reduce conflict for or in state 155 resolved as shift
WARNING: shift/reduce conflict for mayor in state 155 resolved as shift
WARNING: shift/reduce conflict for menor in state 155 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 155 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 155 resolved as shift
WARNING: shift/reduce conflict for igual in state 155 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 155 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 155 resolved as shift
WARNING: shift/reduce conflict for between in state 155 resolved as shift
WARNING: shift/reduce conflict for is in state 155 resolved as shift
WARNING: shift/reduce conflict for isnull in state 155 resolved as shift
WARNING: shift/reduce conflict for notnull in state 155 resolved as shift
WARNING: shift/reduce conflict for as in state 155 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 155 resolved as shift
WARNING: shift/reduce conflict for id in state 155 resolved as shift
WARNING: shift/reduce conflict for cadena in state 155 resolved as shift
WARNING: shift/reduce conflict for in in state 155 resolved as shift
WARNING: shift/reduce conflict for not in state 155 resolved as shift
WARNING: shift/reduce conflict for like in state 155 resolved as shift
WARNING: shift/reduce conflict for cadena in state 193 resolved as shift
WARNING: shift/reduce conflict for coma in state 253 resolved as shift
WARNING: shift/reduce conflict for where in state 253 resolved as shift
WARNING: shift/reduce conflict for group in state 254 resolved as shift
WARNING: shift/reduce conflict for union in state 255 resolved as shift
WARNING: shift/reduce conflict for intersect in state 255 resolved as shift
WARNING: shift/reduce conflict for except in state 255 resolved as shift
WARNING: shift/reduce conflict for group in state 330 resolved as shift
WARNING: shift/reduce conflict for having in state 331 resolved as shift
WARNING: shift/reduce conflict for order in state 332 resolved as shift
WARNING: shift/reduce conflict for mas in state 336 resolved as shift
WARNING: shift/reduce conflict for menos in state 336 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 336 resolved as shift
WARNING: shift/reduce conflict for division in state 336 resolved as shift
WARNING: shift/reduce conflict for modulo in state 336 resolved as shift
WARNING: shift/reduce conflict for elevado in state 336 resolved as shift
WARNING: shift/reduce conflict for and in state 336 resolved as shift
WARNING: shift/reduce conflict for or in state 336 resolved as shift
WARNING: shift/reduce conflict for mayor in state 336 resolved as shift
WARNING: shift/reduce conflict for menor in state 336 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 336 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 336 resolved as shift
WARNING: shift/reduce conflict for igual in state 336 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 336 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 336 resolved as shift
WARNING: shift/reduce conflict for between in state 336 resolved as shift
WARNING: shift/reduce conflict for is in state 336 resolved as shift
WARNING: shift/reduce conflict for isnull in state 336 resolved as shift
WARNING: shift/reduce conflict for notnull in state 336 resolved as shift
WARNING: shift/reduce conflict for as in state 336 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 336 resolved as shift
WARNING: shift/reduce conflict for id in state 336 resolved as shift
WARNING: shift/reduce conflict for cadena in state 336 resolved as shift
WARNING: shift/reduce conflict for in in state 336 resolved as shift
WARNING: shift/reduce conflict for not in state 336 resolved as shift
WARNING: shift/reduce conflict for like in state 336 resolved as shift
WARNING: shift/reduce conflict for coma in state 337 resolved as shift
WARNING: shift/reduce conflict for having in state 391 resolved as shift
WARNING: shift/reduce conflict for union in state 392 resolved as shift
WARNING: shift/reduce conflict for intersect in state 392 resolved as shift
WARNING: shift/reduce conflict for except in state 392 resolved as shift
WARNING: shift/reduce conflict for limit in state 393 resolved as shift
WARNING: shift/reduce conflict for offset in state 393 resolved as shift
WARNING: shift/reduce conflict for mas in state 395 resolved as shift
WARNING: shift/reduce conflict for menos in state 395 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 395 resolved as shift
WARNING: shift/reduce conflict for division in state 395 resolved as shift
WARNING: shift/reduce conflict for modulo in state 395 resolved as shift
WARNING: shift/reduce conflict for elevado in state 395 resolved as shift
WARNING: shift/reduce conflict for and in state 395 resolved as shift
WARNING: shift/reduce conflict for or in state 395 resolved as shift
WARNING: shift/reduce conflict for mayor in state 395 resolved as shift
WARNING: shift/reduce conflict for menor in state 395 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 395 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 395 resolved as shift
WARNING: shift/reduce conflict for igual in state 395 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 395 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 395 resolved as shift
WARNING: shift/reduce conflict for between in state 395 resolved as shift
WARNING: shift/reduce conflict for is in state 395 resolved as shift
WARNING: shift/reduce conflict for isnull in state 395 resolved as shift
WARNING: shift/reduce conflict for notnull in state 395 resolved as shift
WARNING: shift/reduce conflict for as in state 395 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 395 resolved as shift
WARNING: shift/reduce conflict for id in state 395 resolved as shift
WARNING: shift/reduce conflict for cadena in state 395 resolved as shift
WARNING: shift/reduce conflict for in in state 395 resolved as shift
WARNING: shift/reduce conflict for not in state 395 resolved as shift
WARNING: shift/reduce conflict for like in state 395 resolved as shift
WARNING: shift/reduce conflict for mas in state 397 resolved as shift
WARNING: shift/reduce conflict for menos in state 397 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 397 resolved as shift
WARNING: shift/reduce conflict for division in state 397 resolved as shift
WARNING: shift/reduce conflict for modulo in state 397 resolved as shift
WARNING: shift/reduce conflict for elevado in state 397 resolved as shift
WARNING: shift/reduce conflict for and in state 397 resolved as shift
WARNING: shift/reduce conflict for or in state 397 resolved as shift
WARNING: shift/reduce conflict for mayor in state 397 resolved as shift
WARNING: shift/reduce conflict for menor in state 397 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 397 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 397 resolved as shift
WARNING: shift/reduce conflict for igual in state 397 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 397 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 397 resolved as shift
WARNING: shift/reduce conflict for between in state 397 resolved as shift
WARNING: shift/reduce conflict for is in state 397 resolved as shift
WARNING: shift/reduce conflict for isnull in state 397 resolved as shift
WARNING: shift/reduce conflict for notnull in state 397 resolved as shift
WARNING: shift/reduce conflict for as in state 397 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 397 resolved as shift
WARNING: shift/reduce conflict for id in state 397 resolved as shift
WARNING: shift/reduce conflict for cadena in state 397 resolved as shift
WARNING: shift/reduce conflict for in in state 397 resolved as shift
WARNING: shift/reduce conflict for not in state 397 resolved as shift
WARNING: shift/reduce conflict for like in state 397 resolved as shift
WARNING: shift/reduce conflict for mas in state 399 resolved as shift
WARNING: shift/reduce conflict for menos in state 399 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 399 resolved as shift
WARNING: shift/reduce conflict for division in state 399 resolved as shift
WARNING: shift/reduce conflict for modulo in state 399 resolved as shift
WARNING: shift/reduce conflict for elevado in state 399 resolved as shift
WARNING: shift/reduce conflict for and in state 399 resolved as shift
WARNING: shift/reduce conflict for or in state 399 resolved as shift
WARNING: shift/reduce conflict for mayor in state 399 resolved as shift
WARNING: shift/reduce conflict for menor in state 399 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 399 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 399 resolved as shift
WARNING: shift/reduce conflict for igual in state 399 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 399 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 399 resolved as shift
WARNING: shift/reduce conflict for between in state 399 resolved as shift
WARNING: shift/reduce conflict for is in state 399 resolved as shift
WARNING: shift/reduce conflict for isnull in state 399 resolved as shift
WARNING: shift/reduce conflict for notnull in state 399 resolved as shift
WARNING: shift/reduce conflict for as in state 399 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 399 resolved as shift
WARNING: shift/reduce conflict for id in state 399 resolved as shift
WARNING: shift/reduce conflict for cadena in state 399 resolved as shift
WARNING: shift/reduce conflict for in in state 399 resolved as shift
WARNING: shift/reduce conflict for not in state 399 resolved as shift
WARNING: shift/reduce conflict for like in state 399 resolved as shift
WARNING: shift/reduce conflict for cadena in state 405 resolved as shift
WARNING: shift/reduce conflict for union in state 455 resolved as shift
WARNING: shift/reduce conflict for intersect in state 455 resolved as shift
WARNING: shift/reduce conflict for except in state 455 resolved as shift
WARNING: shift/reduce conflict for order in state 456 resolved as shift
WARNING: shift/reduce conflict for mas in state 461 resolved as shift
WARNING: shift/reduce conflict for menos in state 461 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 461 resolved as shift
WARNING: shift/reduce conflict for division in state 461 resolved as shift
WARNING: shift/reduce conflict for modulo in state 461 resolved as shift
WARNING: shift/reduce conflict for elevado in state 461 resolved as shift
WARNING: shift/reduce conflict for and in state 461 resolved as shift
WARNING: shift/reduce conflict for or in state 461 resolved as shift
WARNING: shift/reduce conflict for mayor in state 461 resolved as shift
WARNING: shift/reduce conflict for menor in state 461 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 461 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 461 resolved as shift
WARNING: shift/reduce conflict for igual in state 461 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 461 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 461 resolved as shift
WARNING: shift/reduce conflict for between in state 461 resolved as shift
WARNING: shift/reduce conflict for is in state 461 resolved as shift
WARNING: shift/reduce conflict for isnull in state 461 resolved as shift
WARNING: shift/reduce conflict for notnull in state 461 resolved as shift
WARNING: shift/reduce conflict for as in state 461 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 461 resolved as shift
WARNING: shift/reduce conflict for id in state 461 resolved as shift
WARNING: shift/reduce conflict for cadena in state 461 resolved as shift
WARNING: shift/reduce conflict for in in state 461 resolved as shift
WARNING: shift/reduce conflict for not in state 461 resolved as shift
WARNING: shift/reduce conflict for like in state 461 resolved as shift
WARNING: shift/reduce conflict for mas in state 463 resolved as shift
WARNING: shift/reduce conflict for menos in state 463 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 463 resolved as shift
WARNING: shift/reduce conflict for division in state 463 resolved as shift
WARNING: shift/reduce conflict for modulo in state 463 resolved as shift
WARNING: shift/reduce conflict for elevado in state 463 resolved as shift
WARNING: shift/reduce conflict for and in state 463 resolved as shift
WARNING: shift/reduce conflict for or in state 463 resolved as shift
WARNING: shift/reduce conflict for mayor in state 463 resolved as shift
WARNING: shift/reduce conflict for menor in state 463 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 463 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 463 resolved as shift
WARNING: shift/reduce conflict for igual in state 463 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 463 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 463 resolved as shift
WARNING: shift/reduce conflict for between in state 463 resolved as shift
WARNING: shift/reduce conflict for is in state 463 resolved as shift
WARNING: shift/reduce conflict for isnull in state 463 resolved as shift
WARNING: shift/reduce conflict for notnull in state 463 resolved as shift
WARNING: shift/reduce conflict for as in state 463 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 463 resolved as shift
WARNING: shift/reduce conflict for id in state 463 resolved as shift
WARNING: shift/reduce conflict for cadena in state 463 resolved as shift
WARNING: shift/reduce conflict for in in state 463 resolved as shift
WARNING: shift/reduce conflict for not in state 463 resolved as shift
WARNING: shift/reduce conflict for like in state 463 resolved as shift
WARNING: shift/reduce conflict for mas in state 464 resolved as shift
WARNING: shift/reduce conflict for menos in state 464 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 464 resolved as shift
WARNING: shift/reduce conflict for division in state 464 resolved as shift
WARNING: shift/reduce conflict for modulo in state 464 resolved as shift
WARNING: shift/reduce conflict for elevado in state 464 resolved as shift
WARNING: shift/reduce conflict for and in state 464 resolved as shift
WARNING: shift/reduce conflict for or in state 464 resolved as shift
WARNING: shift/reduce conflict for mayor in state 464 resolved as shift
WARNING: shift/reduce conflict for menor in state 464 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 464 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 464 resolved as shift
WARNING: shift/reduce conflict for igual in state 464 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 464 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 464 resolved as shift
WARNING: shift/reduce conflict for between in state 464 resolved as shift
WARNING: shift/reduce conflict for is in state 464 resolved as shift
WARNING: shift/reduce conflict for isnull in state 464 resolved as shift
WARNING: shift/reduce conflict for notnull in state 464 resolved as shift
WARNING: shift/reduce conflict for as in state 464 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 464 resolved as shift
WARNING: shift/reduce conflict for id in state 464 resolved as shift
WARNING: shift/reduce conflict for cadena in state 464 resolved as shift
WARNING: shift/reduce conflict for in in state 464 resolved as shift
WARNING: shift/reduce conflict for not in state 464 resolved as shift
WARNING: shift/reduce conflict for like in state 464 resolved as shift
WARNING: shift/reduce conflict for not in state 478 resolved as shift
WARNING: shift/reduce conflict for order in state 507 resolved as shift
WARNING: shift/reduce conflict for limit in state 508 resolved as shift
WARNING: shift/reduce conflict for offset in state 508 resolved as shift
WARNING: shift/reduce conflict for offset in state 509 resolved as shift
WARNING: shift/reduce conflict for offset in state 510 resolved as shift
WARNING: shift/reduce conflict for limit in state 511 resolved as shift
WARNING: shift/reduce conflict for coma in state 512 resolved as shift
WARNING: shift/reduce conflict for asc in state 512 resolved as shift
WARNING: shift/reduce conflict for desc in state 512 resolved as shift
WARNING: shift/reduce conflict for parc in state 513 resolved as shift
WARNING: shift/reduce conflict for limit in state 538 resolved as shift
WARNING: shift/reduce conflict for offset in state 538 resolved as shift
