Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> SELECT ptcoma
Rule 5     instruccion -> CREATETABLE
Rule 6     instruccion -> UPDATE ptcoma
Rule 7     instruccion -> DELETE ptcoma
Rule 8     instruccion -> ALTER ptcoma
Rule 9     instruccion -> DROP ptcoma
Rule 10    instruccion -> INSERT ptcoma
Rule 11    instruccion -> CREATETYPE ptcoma
Rule 12    instruccion -> CASE
Rule 13    instruccion -> CREATEDB ptcoma
Rule 14    instruccion -> SHOWDB ptcoma
Rule 15    CASE -> case LISTAWHEN ELSE end
Rule 16    CASE -> case LISTAWHEN end
Rule 17    LISTAWHEN -> LISTAWHEN WHEN
Rule 18    LISTAWHEN -> WHEN
Rule 19    WHEN -> when LEXP then LEXP
Rule 20    ELSE -> else LEXP
Rule 21    INSERT -> insert into id values para LEXP parc
Rule 22    DROP -> drop table id
Rule 23    DROP -> drop databases if exist id
Rule 24    DROP -> drop databases id
Rule 25    ALTER -> alter databases id RO
Rule 26    ALTER -> altertable
Rule 27    RO -> rename to id
Rule 28    RO -> owner to id
Rule 29    altertable -> alter table id OP
Rule 30    OP -> add ADD
Rule 31    OP -> drop column ALTERDROP
Rule 32    OP -> alter column id set not null
Rule 33    OP -> alter column id set null
Rule 34    OP -> listaalc
Rule 35    OP -> drop ALTERDROP
Rule 36    OP -> rename column id to id
Rule 37    listaalc -> listaalc coma alc
Rule 38    listaalc -> alc
Rule 39    alc -> alter column id type TIPO
Rule 40    ALTERDROP -> constraint id
Rule 41    ALTERDROP -> column LEXP
Rule 42    ALTERDROP -> check id
Rule 43    ADD -> column id TIPO
Rule 44    ADD -> check para LEXP parc
Rule 45    ADD -> constraint id unique para id parc
Rule 46    ADD -> foreign key para id parc references id para id parc
Rule 47    SHOWDB -> show databases
Rule 48    CREATEDB -> create RD if not exist id
Rule 49    CREATEDB -> create RD if not exist id OPCCDB
Rule 50    CREATEDB -> create RD id
Rule 51    CREATEDB -> create RD id OPCCDB
Rule 52    OPCCDB -> PROPIETARIO
Rule 53    OPCCDB -> MODO
Rule 54    OPCCDB -> PROPIETARIO MODO
Rule 55    RD -> or replace databases
Rule 56    RD -> databases
Rule 57    PROPIETARIO -> owner igual id
Rule 58    PROPIETARIO -> owner id
Rule 59    MODO -> mode igual int
Rule 60    MODO -> mode int
Rule 61    CREATETABLE -> create table id para LDEF parc ptcoma
Rule 62    CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma
Rule 63    LDEF -> LDEF coma COLDEF
Rule 64    LDEF -> COLDEF
Rule 65    COLDEF -> OPCONST
Rule 66    COLDEF -> constraint id OPCONST
Rule 67    COLDEF -> id TIPO
Rule 68    COLDEF -> id TIPO LOPCOLUMN
Rule 69    LOPCOLUMN -> LOPCOLUMN OPCOLUMN
Rule 70    LOPCOLUMN -> OPCOLUMN
Rule 71    OPCOLUMN -> constraint id unique
Rule 72    OPCOLUMN -> constraint id check para EXP parc
Rule 73    OPCOLUMN -> default EXP
Rule 74    OPCOLUMN -> PNULL
Rule 75    OPCOLUMN -> primary key
Rule 76    OPCOLUMN -> references id
Rule 77    PNULL -> not null
Rule 78    PNULL -> null
Rule 79    OPCONST -> primary key para LEXP parc
Rule 80    OPCONST -> foreign key para LEXP parc references table para LEXP parc
Rule 81    OPCONST -> unique para LEXP parc
Rule 82    OPCONST -> check para LEXP parc
Rule 83    HERENCIA -> inherits para LEXP parc
Rule 84    CREATETYPE -> create type id as enum para LEXP parc
Rule 85    SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
Rule 86    SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
Rule 87    SELECT -> select LSELECT LIMIT COMBINING
Rule 88    LIMIT -> limit int
Rule 89    LIMIT -> limit all
Rule 90    LIMIT -> offset int
Rule 91    LIMIT -> limit int offset int
Rule 92    LIMIT -> offset int limit int
Rule 93    LIMIT -> limit all offset int
Rule 94    LIMIT -> offset int limit all
Rule 95    LIMIT -> <empty>
Rule 96    LSELECT -> LEXP
Rule 97    LSELECT -> LEXP id
Rule 98    LSELECT -> LEXP as id
Rule 99    LSELECT -> multiplicacion
Rule 100   LFROM -> LFROM coma FROM
Rule 101   LFROM -> FROM
Rule 102   FROM -> LEXP
Rule 103   FROM -> LEXP as id
Rule 104   FROM -> LEXP id
Rule 105   FROM -> multiplicacion
Rule 106   WHERE -> where LEXP
Rule 107   WHERE -> where EXIST
Rule 108   WHERE -> union LEXP
Rule 109   WHERE -> union all LEXP
Rule 110   WHERE -> <empty>
Rule 111   COMBINING -> union LEXP
Rule 112   COMBINING -> union all LEXP
Rule 113   COMBINING -> intersect LEXP
Rule 114   COMBINING -> intersect all LEXP
Rule 115   COMBINING -> except LEXP
Rule 116   COMBINING -> except all LEXP
Rule 117   COMBINING -> <empty>
Rule 118   GROUP -> group by LEXP
Rule 119   GROUP -> <empty>
Rule 120   HAVING -> having LEXP
Rule 121   HAVING -> <empty>
Rule 122   ORDER -> order by LEXP ORD
Rule 123   ORDER -> order by LEXP
Rule 124   ORDER -> <empty>
Rule 125   ORD -> asc
Rule 126   ORD -> desc
Rule 127   UPDATE -> update id set LCAMPOS where LEXP
Rule 128   LCAMPOS -> LCAMPOS id igual EXP
Rule 129   LCAMPOS -> id igual EXP
Rule 130   LCAMPOS -> id igual default
Rule 131   DELETE -> delete r_from id where LEXP
Rule 132   DELETE -> delete r_from id
Rule 133   EXIST -> exist para SELECT parc
Rule 134   LEXP -> LEXP coma EXP
Rule 135   LEXP -> EXP
Rule 136   TIPO -> smallint
Rule 137   TIPO -> integer
Rule 138   TIPO -> bigint
Rule 139   TIPO -> decimal para LEXP parc
Rule 140   TIPO -> numeric para LEXP parc
Rule 141   TIPO -> real
Rule 142   TIPO -> double precision
Rule 143   TIPO -> money
Rule 144   TIPO -> character varying para int parc
Rule 145   TIPO -> varchar para int parc
Rule 146   TIPO -> character para int parc
Rule 147   TIPO -> char para int parc
Rule 148   TIPO -> text
Rule 149   TIPO -> timestamp
Rule 150   TIPO -> timestamp without time zone
Rule 151   TIPO -> timestamp para int parc without time zone
Rule 152   TIPO -> timestamp with time zone
Rule 153   TIPO -> timestamp para int parc with time zone
Rule 154   TIPO -> timestamp para int parc
Rule 155   TIPO -> date
Rule 156   TIPO -> time
Rule 157   TIPO -> time without time zone
Rule 158   TIPO -> time para int parc without time zone
Rule 159   TIPO -> time with time zone
Rule 160   TIPO -> time para int parc with time zone
Rule 161   TIPO -> time para int parc
Rule 162   TIPO -> interval
Rule 163   TIPO -> interval para int parc
Rule 164   TIPO -> interval cadena
Rule 165   TIPO -> interval para int parc cadena
Rule 166   TIPO -> boolean
Rule 167   FIELDS -> year
Rule 168   FIELDS -> month
Rule 169   FIELDS -> day
Rule 170   FIELDS -> hour
Rule 171   FIELDS -> minute
Rule 172   FIELDS -> second
Rule 173   EXP -> EXP mas EXP
Rule 174   EXP -> EXP menos EXP
Rule 175   EXP -> EXP multiplicacion EXP
Rule 176   EXP -> EXP division EXP
Rule 177   EXP -> EXP modulo EXP
Rule 178   EXP -> EXP elevado EXP
Rule 179   EXP -> EXP and EXP
Rule 180   EXP -> EXP or EXP
Rule 181   EXP -> EXP mayor EXP
Rule 182   EXP -> EXP menor EXP
Rule 183   EXP -> EXP mayor_igual EXP
Rule 184   EXP -> EXP menor_igual EXP
Rule 185   EXP -> EXP igual EXP
Rule 186   EXP -> EXP diferente1 EXP
Rule 187   EXP -> EXP diferente2 EXP
Rule 188   EXP -> EXP punto EXP
Rule 189   EXP -> mas EXP
Rule 190   EXP -> menos EXP
Rule 191   EXP -> not EXP
Rule 192   EXP -> para EXP parc
Rule 193   EXP -> int
Rule 194   EXP -> decimales
Rule 195   EXP -> cadena
Rule 196   EXP -> true
Rule 197   EXP -> false
Rule 198   EXP -> id
Rule 199   EXP -> PNULL
Rule 200   EXP -> SELECT
Rule 201   EXP -> PREDICADOS
Rule 202   EXP -> id para parc
Rule 203   EXP -> id para LEXP parc
Rule 204   EXP -> extract para FIELDS r_from timestamp cadena parc
Rule 205   EXP -> current_time
Rule 206   EXP -> current_date
Rule 207   EXP -> timestamp cadena
Rule 208   EXP -> interval cadena
Rule 209   EXP -> CASE
Rule 210   EXP -> cadena like cadena
Rule 211   EXP -> cadena not like cadena
Rule 212   EXP -> any para LEXP parc
Rule 213   EXP -> all para LEXP parc
Rule 214   EXP -> some para LEXP parc
Rule 215   PREDICADOS -> EXP between EXP
Rule 216   PREDICADOS -> EXP in para LEXP parc
Rule 217   PREDICADOS -> EXP not in para LEXP parc
Rule 218   PREDICADOS -> EXP not between EXP
Rule 219   PREDICADOS -> EXP between symetric EXP
Rule 220   PREDICADOS -> EXP not between symetric EXP
Rule 221   PREDICADOS -> EXP is distinct r_from EXP
Rule 222   PREDICADOS -> EXP is not distinct r_from EXP
Rule 223   PREDICADOS -> EXP is PNULL
Rule 224   PREDICADOS -> EXP isnull
Rule 225   PREDICADOS -> EXP notnull
Rule 226   PREDICADOS -> EXP is true
Rule 227   PREDICADOS -> EXP is not true
Rule 228   PREDICADOS -> EXP is false
Rule 229   PREDICADOS -> EXP is not false
Rule 230   PREDICADOS -> EXP is unknown
Rule 231   PREDICADOS -> EXP is not unknown

Terminals, with rules where they appear

add                  : 30
all                  : 89 93 94 109 112 114 116 213
alter                : 25 29 32 33 39
and                  : 179
any                  : 212
as                   : 84 98 103
asc                  : 125
between              : 215 218 219 220
bigint               : 138
boolean              : 166
by                   : 118 122 123
cadena               : 164 165 195 204 207 208 210 210 211 211
case                 : 15 16
char                 : 147
character            : 144 146
check                : 42 44 72 82
column               : 31 32 33 36 39 41 43
coma                 : 37 63 100 134
constraint           : 40 45 66 71 72
create               : 48 49 50 51 61 62 84
current_date         : 206
current_time         : 205
databases            : 23 24 25 47 55 56
date                 : 155
day                  : 169
decimal              : 139
decimales            : 194
default              : 73 130
delete               : 131 132
desc                 : 126
diferente1           : 186
diferente2           : 187
distinct             : 85 221 222
division             : 176
double               : 142
drop                 : 22 23 24 31 35
elevado              : 178
else                 : 20
end                  : 15 16
enum                 : 84
error                : 
except               : 115 116
exist                : 23 48 49 133
extract              : 204
false                : 197 228 229
foreign              : 46 80
group                : 118
having               : 120
hour                 : 170
id                   : 21 22 23 24 25 27 28 29 32 33 36 36 39 40 42 43 45 45 46 46 46 48 49 50 51 57 58 61 62 66 67 68 71 72 76 84 97 98 103 104 127 128 129 130 131 132 198 202 203
if                   : 23 48 49
igual                : 57 59 128 129 130 185
in                   : 216 217
inherits             : 83
insert               : 21
int                  : 59 60 88 90 91 91 92 92 93 94 144 145 146 147 151 153 154 158 160 161 163 165 193
integer              : 137
intersect            : 113 114
interval             : 162 163 164 165 208
into                 : 21
is                   : 221 222 223 226 227 228 229 230 231
isnull               : 224
key                  : 46 75 79 80
like                 : 210 211
limit                : 88 89 91 92 93 94
mas                  : 173 189
mayor                : 181
mayor_igual          : 183
menor                : 182
menor_igual          : 184
menos                : 174 190
minute               : 171
mode                 : 59 60
modulo               : 177
money                : 143
month                : 168
multiplicacion       : 99 105 175
not                  : 32 48 49 77 191 211 217 218 220 222 227 229 231
notnull              : 225
null                 : 32 33 77 78
numeric              : 140
offset               : 90 91 92 93 94
or                   : 55 180
order                : 122 123
owner                : 28 57 58
para                 : 21 44 45 46 46 61 62 72 79 80 80 81 82 83 84 133 139 140 144 145 146 147 151 153 154 158 160 161 163 165 192 202 203 204 212 213 214 216 217
parc                 : 21 44 45 46 46 61 62 72 79 80 80 81 82 83 84 133 139 140 144 145 146 147 151 153 154 158 160 161 163 165 192 202 203 204 212 213 214 216 217
precision            : 142
primary              : 75 79
ptcoma               : 4 6 7 8 9 10 11 13 14 61 62
punto                : 188
r_from               : 85 86 131 132 204 221 222
real                 : 141
references           : 46 76 80
rename               : 27 36
replace              : 55
second               : 172
select               : 85 86 87
set                  : 32 33 127
show                 : 47
smallint             : 136
some                 : 214
symetric             : 219 220
table                : 22 29 61 62 80
text                 : 148
then                 : 19
time                 : 150 151 152 153 156 157 157 158 158 159 159 160 160 161
timestamp            : 149 150 151 152 153 154 204 207
to                   : 27 28 36
true                 : 196 226 227
type                 : 39 84
union                : 108 109 111 112
unique               : 45 71 81
unknown              : 230 231
update               : 127
values               : 21
varchar              : 145
varying              : 144
when                 : 19
where                : 106 107 127 131
with                 : 152 153 159 160
without              : 150 151 157 158
year                 : 167
zone                 : 150 151 152 153 157 158 159 160

Nonterminals, with rules where they appear

ADD                  : 30
ALTER                : 8
ALTERDROP            : 31 35
CASE                 : 12 209
COLDEF               : 63 64
COMBINING            : 85 86 87
CREATEDB             : 13
CREATETABLE          : 5
CREATETYPE           : 11
DELETE               : 7
DROP                 : 9
ELSE                 : 15
EXIST                : 107
EXP                  : 72 73 128 129 134 135 173 173 174 174 175 175 176 176 177 177 178 178 179 179 180 180 181 181 182 182 183 183 184 184 185 185 186 186 187 187 188 188 189 190 191 192 215 215 216 217 218 218 219 219 220 220 221 221 222 222 223 224 225 226 227 228 229 230 231
FIELDS               : 204
FROM                 : 100 101
GROUP                : 85 86
HAVING               : 85 86
HERENCIA             : 62
INSERT               : 10
LCAMPOS              : 127 128
LDEF                 : 61 62 63
LEXP                 : 19 19 20 21 41 44 79 80 80 81 82 83 84 96 97 98 102 103 104 106 108 109 111 112 113 114 115 116 118 120 122 123 127 131 134 139 140 203 212 213 214 216 217
LFROM                : 85 86 100
LIMIT                : 85 86 87
LISTAWHEN            : 15 16 17
LOPCOLUMN            : 68 69
LSELECT              : 85 86 87
MODO                 : 53 54
OP                   : 29
OPCCDB               : 49 51
OPCOLUMN             : 69 70
OPCONST              : 65 66
ORD                  : 122
ORDER                : 85 86
PNULL                : 74 199 223
PREDICADOS           : 201
PROPIETARIO          : 52 54
RD                   : 48 49 50 51
RO                   : 25
SELECT               : 4 133 200
SHOWDB               : 14
TIPO                 : 39 43 67 68
UPDATE               : 6
WHEN                 : 17 18
WHERE                : 85 86
alc                  : 37 38
altertable           : 26
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2
listaalc             : 34 37

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . SELECT ptcoma
    (5) instruccion -> . CREATETABLE
    (6) instruccion -> . UPDATE ptcoma
    (7) instruccion -> . DELETE ptcoma
    (8) instruccion -> . ALTER ptcoma
    (9) instruccion -> . DROP ptcoma
    (10) instruccion -> . INSERT ptcoma
    (11) instruccion -> . CREATETYPE ptcoma
    (12) instruccion -> . CASE
    (13) instruccion -> . CREATEDB ptcoma
    (14) instruccion -> . SHOWDB ptcoma
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (61) CREATETABLE -> . create table id para LDEF parc ptcoma
    (62) CREATETABLE -> . create table id para LDEF parc HERENCIA ptcoma
    (127) UPDATE -> . update id set LCAMPOS where LEXP
    (131) DELETE -> . delete r_from id where LEXP
    (132) DELETE -> . delete r_from id
    (25) ALTER -> . alter databases id RO
    (26) ALTER -> . altertable
    (22) DROP -> . drop table id
    (23) DROP -> . drop databases if exist id
    (24) DROP -> . drop databases id
    (21) INSERT -> . insert into id values para LEXP parc
    (84) CREATETYPE -> . create type id as enum para LEXP parc
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end
    (48) CREATEDB -> . create RD if not exist id
    (49) CREATEDB -> . create RD if not exist id OPCCDB
    (50) CREATEDB -> . create RD id
    (51) CREATEDB -> . create RD id OPCCDB
    (47) SHOWDB -> . show databases
    (29) altertable -> . alter table id OP

    select          shift and go to state 15
    create          shift and go to state 16
    update          shift and go to state 17
    delete          shift and go to state 18
    alter           shift and go to state 19
    drop            shift and go to state 21
    insert          shift and go to state 22
    case            shift and go to state 23
    show            shift and go to state 24

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    SELECT                         shift and go to state 4
    CREATETABLE                    shift and go to state 5
    UPDATE                         shift and go to state 6
    DELETE                         shift and go to state 7
    ALTER                          shift and go to state 8
    DROP                           shift and go to state 9
    INSERT                         shift and go to state 10
    CREATETYPE                     shift and go to state 11
    CASE                           shift and go to state 12
    CREATEDB                       shift and go to state 13
    SHOWDB                         shift and go to state 14
    altertable                     shift and go to state 20

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . SELECT ptcoma
    (5) instruccion -> . CREATETABLE
    (6) instruccion -> . UPDATE ptcoma
    (7) instruccion -> . DELETE ptcoma
    (8) instruccion -> . ALTER ptcoma
    (9) instruccion -> . DROP ptcoma
    (10) instruccion -> . INSERT ptcoma
    (11) instruccion -> . CREATETYPE ptcoma
    (12) instruccion -> . CASE
    (13) instruccion -> . CREATEDB ptcoma
    (14) instruccion -> . SHOWDB ptcoma
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (61) CREATETABLE -> . create table id para LDEF parc ptcoma
    (62) CREATETABLE -> . create table id para LDEF parc HERENCIA ptcoma
    (127) UPDATE -> . update id set LCAMPOS where LEXP
    (131) DELETE -> . delete r_from id where LEXP
    (132) DELETE -> . delete r_from id
    (25) ALTER -> . alter databases id RO
    (26) ALTER -> . altertable
    (22) DROP -> . drop table id
    (23) DROP -> . drop databases if exist id
    (24) DROP -> . drop databases id
    (21) INSERT -> . insert into id values para LEXP parc
    (84) CREATETYPE -> . create type id as enum para LEXP parc
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end
    (48) CREATEDB -> . create RD if not exist id
    (49) CREATEDB -> . create RD if not exist id OPCCDB
    (50) CREATEDB -> . create RD id
    (51) CREATEDB -> . create RD id OPCCDB
    (47) SHOWDB -> . show databases
    (29) altertable -> . alter table id OP

    $end            reduce using rule 1 (init -> instrucciones .)
    select          shift and go to state 15
    create          shift and go to state 16
    update          shift and go to state 17
    delete          shift and go to state 18
    alter           shift and go to state 19
    drop            shift and go to state 21
    insert          shift and go to state 22
    case            shift and go to state 23
    show            shift and go to state 24

    instruccion                    shift and go to state 25
    SELECT                         shift and go to state 4
    CREATETABLE                    shift and go to state 5
    UPDATE                         shift and go to state 6
    DELETE                         shift and go to state 7
    ALTER                          shift and go to state 8
    DROP                           shift and go to state 9
    INSERT                         shift and go to state 10
    CREATETYPE                     shift and go to state 11
    CASE                           shift and go to state 12
    CREATEDB                       shift and go to state 13
    SHOWDB                         shift and go to state 14
    altertable                     shift and go to state 20

state 3

    (3) instrucciones -> instruccion .

    select          reduce using rule 3 (instrucciones -> instruccion .)
    create          reduce using rule 3 (instrucciones -> instruccion .)
    update          reduce using rule 3 (instrucciones -> instruccion .)
    delete          reduce using rule 3 (instrucciones -> instruccion .)
    alter           reduce using rule 3 (instrucciones -> instruccion .)
    drop            reduce using rule 3 (instrucciones -> instruccion .)
    insert          reduce using rule 3 (instrucciones -> instruccion .)
    case            reduce using rule 3 (instrucciones -> instruccion .)
    show            reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> SELECT . ptcoma

    ptcoma          shift and go to state 26


state 5

    (5) instruccion -> CREATETABLE .

    select          reduce using rule 5 (instruccion -> CREATETABLE .)
    create          reduce using rule 5 (instruccion -> CREATETABLE .)
    update          reduce using rule 5 (instruccion -> CREATETABLE .)
    delete          reduce using rule 5 (instruccion -> CREATETABLE .)
    alter           reduce using rule 5 (instruccion -> CREATETABLE .)
    drop            reduce using rule 5 (instruccion -> CREATETABLE .)
    insert          reduce using rule 5 (instruccion -> CREATETABLE .)
    case            reduce using rule 5 (instruccion -> CREATETABLE .)
    show            reduce using rule 5 (instruccion -> CREATETABLE .)
    $end            reduce using rule 5 (instruccion -> CREATETABLE .)


state 6

    (6) instruccion -> UPDATE . ptcoma

    ptcoma          shift and go to state 27


state 7

    (7) instruccion -> DELETE . ptcoma

    ptcoma          shift and go to state 28


state 8

    (8) instruccion -> ALTER . ptcoma

    ptcoma          shift and go to state 29


state 9

    (9) instruccion -> DROP . ptcoma

    ptcoma          shift and go to state 30


state 10

    (10) instruccion -> INSERT . ptcoma

    ptcoma          shift and go to state 31


state 11

    (11) instruccion -> CREATETYPE . ptcoma

    ptcoma          shift and go to state 32


state 12

    (12) instruccion -> CASE .

    select          reduce using rule 12 (instruccion -> CASE .)
    create          reduce using rule 12 (instruccion -> CASE .)
    update          reduce using rule 12 (instruccion -> CASE .)
    delete          reduce using rule 12 (instruccion -> CASE .)
    alter           reduce using rule 12 (instruccion -> CASE .)
    drop            reduce using rule 12 (instruccion -> CASE .)
    insert          reduce using rule 12 (instruccion -> CASE .)
    case            reduce using rule 12 (instruccion -> CASE .)
    show            reduce using rule 12 (instruccion -> CASE .)
    $end            reduce using rule 12 (instruccion -> CASE .)


state 13

    (13) instruccion -> CREATEDB . ptcoma

    ptcoma          shift and go to state 33


state 14

    (14) instruccion -> SHOWDB . ptcoma

    ptcoma          shift and go to state 34


state 15

    (85) SELECT -> select . distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> select . LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> select . LSELECT LIMIT COMBINING
    (96) LSELECT -> . LEXP
    (97) LSELECT -> . LEXP id
    (98) LSELECT -> . LEXP as id
    (99) LSELECT -> . multiplicacion
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    distinct        shift and go to state 35
    multiplicacion  shift and go to state 39
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LSELECT                        shift and go to state 36
    LEXP                           shift and go to state 37
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 16

    (61) CREATETABLE -> create . table id para LDEF parc ptcoma
    (62) CREATETABLE -> create . table id para LDEF parc HERENCIA ptcoma
    (84) CREATETYPE -> create . type id as enum para LEXP parc
    (48) CREATEDB -> create . RD if not exist id
    (49) CREATEDB -> create . RD if not exist id OPCCDB
    (50) CREATEDB -> create . RD id
    (51) CREATEDB -> create . RD id OPCCDB
    (55) RD -> . or replace databases
    (56) RD -> . databases

    table           shift and go to state 63
    type            shift and go to state 64
    or              shift and go to state 66
    databases       shift and go to state 67

    RD                             shift and go to state 65

state 17

    (127) UPDATE -> update . id set LCAMPOS where LEXP

    id              shift and go to state 68


state 18

    (131) DELETE -> delete . r_from id where LEXP
    (132) DELETE -> delete . r_from id

    r_from          shift and go to state 69


state 19

    (25) ALTER -> alter . databases id RO
    (29) altertable -> alter . table id OP

    databases       shift and go to state 70
    table           shift and go to state 71


state 20

    (26) ALTER -> altertable .

    ptcoma          reduce using rule 26 (ALTER -> altertable .)


state 21

    (22) DROP -> drop . table id
    (23) DROP -> drop . databases if exist id
    (24) DROP -> drop . databases id

    table           shift and go to state 72
    databases       shift and go to state 73


state 22

    (21) INSERT -> insert . into id values para LEXP parc

    into            shift and go to state 74


state 23

    (15) CASE -> case . LISTAWHEN ELSE end
    (16) CASE -> case . LISTAWHEN end
    (17) LISTAWHEN -> . LISTAWHEN WHEN
    (18) LISTAWHEN -> . WHEN
    (19) WHEN -> . when LEXP then LEXP

    when            shift and go to state 77

    LISTAWHEN                      shift and go to state 75
    WHEN                           shift and go to state 76

state 24

    (47) SHOWDB -> show . databases

    databases       shift and go to state 78


state 25

    (2) instrucciones -> instrucciones instruccion .

    select          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    create          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    update          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    delete          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    alter           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    drop            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    insert          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    case            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    show            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 26

    (4) instruccion -> SELECT ptcoma .

    select          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    create          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    update          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    delete          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    alter           reduce using rule 4 (instruccion -> SELECT ptcoma .)
    drop            reduce using rule 4 (instruccion -> SELECT ptcoma .)
    insert          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    case            reduce using rule 4 (instruccion -> SELECT ptcoma .)
    show            reduce using rule 4 (instruccion -> SELECT ptcoma .)
    $end            reduce using rule 4 (instruccion -> SELECT ptcoma .)


state 27

    (6) instruccion -> UPDATE ptcoma .

    select          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    create          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    update          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    delete          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    alter           reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    drop            reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    insert          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    case            reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    show            reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    $end            reduce using rule 6 (instruccion -> UPDATE ptcoma .)


state 28

    (7) instruccion -> DELETE ptcoma .

    select          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    create          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    update          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    delete          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    alter           reduce using rule 7 (instruccion -> DELETE ptcoma .)
    drop            reduce using rule 7 (instruccion -> DELETE ptcoma .)
    insert          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    case            reduce using rule 7 (instruccion -> DELETE ptcoma .)
    show            reduce using rule 7 (instruccion -> DELETE ptcoma .)
    $end            reduce using rule 7 (instruccion -> DELETE ptcoma .)


state 29

    (8) instruccion -> ALTER ptcoma .

    select          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    create          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    update          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    delete          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    alter           reduce using rule 8 (instruccion -> ALTER ptcoma .)
    drop            reduce using rule 8 (instruccion -> ALTER ptcoma .)
    insert          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    case            reduce using rule 8 (instruccion -> ALTER ptcoma .)
    show            reduce using rule 8 (instruccion -> ALTER ptcoma .)
    $end            reduce using rule 8 (instruccion -> ALTER ptcoma .)


state 30

    (9) instruccion -> DROP ptcoma .

    select          reduce using rule 9 (instruccion -> DROP ptcoma .)
    create          reduce using rule 9 (instruccion -> DROP ptcoma .)
    update          reduce using rule 9 (instruccion -> DROP ptcoma .)
    delete          reduce using rule 9 (instruccion -> DROP ptcoma .)
    alter           reduce using rule 9 (instruccion -> DROP ptcoma .)
    drop            reduce using rule 9 (instruccion -> DROP ptcoma .)
    insert          reduce using rule 9 (instruccion -> DROP ptcoma .)
    case            reduce using rule 9 (instruccion -> DROP ptcoma .)
    show            reduce using rule 9 (instruccion -> DROP ptcoma .)
    $end            reduce using rule 9 (instruccion -> DROP ptcoma .)


state 31

    (10) instruccion -> INSERT ptcoma .

    select          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    create          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    update          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    delete          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    alter           reduce using rule 10 (instruccion -> INSERT ptcoma .)
    drop            reduce using rule 10 (instruccion -> INSERT ptcoma .)
    insert          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    case            reduce using rule 10 (instruccion -> INSERT ptcoma .)
    show            reduce using rule 10 (instruccion -> INSERT ptcoma .)
    $end            reduce using rule 10 (instruccion -> INSERT ptcoma .)


state 32

    (11) instruccion -> CREATETYPE ptcoma .

    select          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    create          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    update          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    delete          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    alter           reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    drop            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    insert          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    case            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    show            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    $end            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)


state 33

    (13) instruccion -> CREATEDB ptcoma .

    select          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    create          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    update          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    delete          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    alter           reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    drop            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    insert          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    case            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    show            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    $end            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)


state 34

    (14) instruccion -> SHOWDB ptcoma .

    select          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    create          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    update          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    delete          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    alter           reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    drop            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    insert          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    case            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    show            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    $end            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)


state 35

    (85) SELECT -> select distinct . LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (96) LSELECT -> . LEXP
    (97) LSELECT -> . LEXP id
    (98) LSELECT -> . LEXP as id
    (99) LSELECT -> . multiplicacion
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    multiplicacion  shift and go to state 39
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LSELECT                        shift and go to state 79
    LEXP                           shift and go to state 37
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 36

    (86) SELECT -> select LSELECT . r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> select LSELECT . LIMIT COMBINING
    (88) LIMIT -> . limit int
    (89) LIMIT -> . limit all
    (90) LIMIT -> . offset int
    (91) LIMIT -> . limit int offset int
    (92) LIMIT -> . offset int limit int
    (93) LIMIT -> . limit all offset int
    (94) LIMIT -> . offset int limit all
    (95) LIMIT -> .

  ! shift/reduce conflict for r_from resolved as shift
  ! shift/reduce conflict for limit resolved as shift
  ! shift/reduce conflict for offset resolved as shift
    r_from          shift and go to state 80
    limit           shift and go to state 82
    offset          shift and go to state 83
    union           reduce using rule 95 (LIMIT -> .)
    intersect       reduce using rule 95 (LIMIT -> .)
    except          reduce using rule 95 (LIMIT -> .)
    ptcoma          reduce using rule 95 (LIMIT -> .)
    mas             reduce using rule 95 (LIMIT -> .)
    menos           reduce using rule 95 (LIMIT -> .)
    multiplicacion  reduce using rule 95 (LIMIT -> .)
    division        reduce using rule 95 (LIMIT -> .)
    modulo          reduce using rule 95 (LIMIT -> .)
    elevado         reduce using rule 95 (LIMIT -> .)
    and             reduce using rule 95 (LIMIT -> .)
    or              reduce using rule 95 (LIMIT -> .)
    mayor           reduce using rule 95 (LIMIT -> .)
    menor           reduce using rule 95 (LIMIT -> .)
    mayor_igual     reduce using rule 95 (LIMIT -> .)
    menor_igual     reduce using rule 95 (LIMIT -> .)
    igual           reduce using rule 95 (LIMIT -> .)
    diferente1      reduce using rule 95 (LIMIT -> .)
    diferente2      reduce using rule 95 (LIMIT -> .)
    punto           reduce using rule 95 (LIMIT -> .)
    between         reduce using rule 95 (LIMIT -> .)
    in              reduce using rule 95 (LIMIT -> .)
    not             reduce using rule 95 (LIMIT -> .)
    is              reduce using rule 95 (LIMIT -> .)
    isnull          reduce using rule 95 (LIMIT -> .)
    notnull         reduce using rule 95 (LIMIT -> .)
    id              reduce using rule 95 (LIMIT -> .)
    as              reduce using rule 95 (LIMIT -> .)
    coma            reduce using rule 95 (LIMIT -> .)
    parc            reduce using rule 95 (LIMIT -> .)
    then            reduce using rule 95 (LIMIT -> .)
    where           reduce using rule 95 (LIMIT -> .)
    group           reduce using rule 95 (LIMIT -> .)
    having          reduce using rule 95 (LIMIT -> .)
    order           reduce using rule 95 (LIMIT -> .)
    end             reduce using rule 95 (LIMIT -> .)
    else            reduce using rule 95 (LIMIT -> .)
    when            reduce using rule 95 (LIMIT -> .)
    constraint      reduce using rule 95 (LIMIT -> .)
    default         reduce using rule 95 (LIMIT -> .)
    primary         reduce using rule 95 (LIMIT -> .)
    references      reduce using rule 95 (LIMIT -> .)
    null            reduce using rule 95 (LIMIT -> .)
    asc             reduce using rule 95 (LIMIT -> .)
    desc            reduce using rule 95 (LIMIT -> .)

  ! r_from          [ reduce using rule 95 (LIMIT -> .) ]
  ! limit           [ reduce using rule 95 (LIMIT -> .) ]
  ! offset          [ reduce using rule 95 (LIMIT -> .) ]

    LIMIT                          shift and go to state 81

state 37

    (96) LSELECT -> LEXP .
    (97) LSELECT -> LEXP . id
    (98) LSELECT -> LEXP . as id
    (134) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 96 (LSELECT -> LEXP .)
    limit           reduce using rule 96 (LSELECT -> LEXP .)
    offset          reduce using rule 96 (LSELECT -> LEXP .)
    union           reduce using rule 96 (LSELECT -> LEXP .)
    intersect       reduce using rule 96 (LSELECT -> LEXP .)
    except          reduce using rule 96 (LSELECT -> LEXP .)
    ptcoma          reduce using rule 96 (LSELECT -> LEXP .)
    mas             reduce using rule 96 (LSELECT -> LEXP .)
    menos           reduce using rule 96 (LSELECT -> LEXP .)
    multiplicacion  reduce using rule 96 (LSELECT -> LEXP .)
    division        reduce using rule 96 (LSELECT -> LEXP .)
    modulo          reduce using rule 96 (LSELECT -> LEXP .)
    elevado         reduce using rule 96 (LSELECT -> LEXP .)
    and             reduce using rule 96 (LSELECT -> LEXP .)
    or              reduce using rule 96 (LSELECT -> LEXP .)
    mayor           reduce using rule 96 (LSELECT -> LEXP .)
    menor           reduce using rule 96 (LSELECT -> LEXP .)
    mayor_igual     reduce using rule 96 (LSELECT -> LEXP .)
    menor_igual     reduce using rule 96 (LSELECT -> LEXP .)
    igual           reduce using rule 96 (LSELECT -> LEXP .)
    diferente1      reduce using rule 96 (LSELECT -> LEXP .)
    diferente2      reduce using rule 96 (LSELECT -> LEXP .)
    punto           reduce using rule 96 (LSELECT -> LEXP .)
    between         reduce using rule 96 (LSELECT -> LEXP .)
    in              reduce using rule 96 (LSELECT -> LEXP .)
    not             reduce using rule 96 (LSELECT -> LEXP .)
    is              reduce using rule 96 (LSELECT -> LEXP .)
    isnull          reduce using rule 96 (LSELECT -> LEXP .)
    notnull         reduce using rule 96 (LSELECT -> LEXP .)
    parc            reduce using rule 96 (LSELECT -> LEXP .)
    then            reduce using rule 96 (LSELECT -> LEXP .)
    where           reduce using rule 96 (LSELECT -> LEXP .)
    group           reduce using rule 96 (LSELECT -> LEXP .)
    having          reduce using rule 96 (LSELECT -> LEXP .)
    order           reduce using rule 96 (LSELECT -> LEXP .)
    end             reduce using rule 96 (LSELECT -> LEXP .)
    else            reduce using rule 96 (LSELECT -> LEXP .)
    when            reduce using rule 96 (LSELECT -> LEXP .)
    constraint      reduce using rule 96 (LSELECT -> LEXP .)
    default         reduce using rule 96 (LSELECT -> LEXP .)
    primary         reduce using rule 96 (LSELECT -> LEXP .)
    references      reduce using rule 96 (LSELECT -> LEXP .)
    null            reduce using rule 96 (LSELECT -> LEXP .)
    asc             reduce using rule 96 (LSELECT -> LEXP .)
    desc            reduce using rule 96 (LSELECT -> LEXP .)
    id              shift and go to state 84
    as              shift and go to state 85
    coma            shift and go to state 86

  ! id              [ reduce using rule 96 (LSELECT -> LEXP .) ]
  ! as              [ reduce using rule 96 (LSELECT -> LEXP .) ]
  ! coma            [ reduce using rule 96 (LSELECT -> LEXP .) ]


state 38

    (198) EXP -> id .
    (202) EXP -> id . para parc
    (203) EXP -> id . para LEXP parc

    r_from          reduce using rule 198 (EXP -> id .)
    limit           reduce using rule 198 (EXP -> id .)
    offset          reduce using rule 198 (EXP -> id .)
    union           reduce using rule 198 (EXP -> id .)
    intersect       reduce using rule 198 (EXP -> id .)
    except          reduce using rule 198 (EXP -> id .)
    ptcoma          reduce using rule 198 (EXP -> id .)
    mas             reduce using rule 198 (EXP -> id .)
    menos           reduce using rule 198 (EXP -> id .)
    multiplicacion  reduce using rule 198 (EXP -> id .)
    division        reduce using rule 198 (EXP -> id .)
    modulo          reduce using rule 198 (EXP -> id .)
    elevado         reduce using rule 198 (EXP -> id .)
    and             reduce using rule 198 (EXP -> id .)
    or              reduce using rule 198 (EXP -> id .)
    mayor           reduce using rule 198 (EXP -> id .)
    menor           reduce using rule 198 (EXP -> id .)
    mayor_igual     reduce using rule 198 (EXP -> id .)
    menor_igual     reduce using rule 198 (EXP -> id .)
    igual           reduce using rule 198 (EXP -> id .)
    diferente1      reduce using rule 198 (EXP -> id .)
    diferente2      reduce using rule 198 (EXP -> id .)
    punto           reduce using rule 198 (EXP -> id .)
    between         reduce using rule 198 (EXP -> id .)
    in              reduce using rule 198 (EXP -> id .)
    not             reduce using rule 198 (EXP -> id .)
    is              reduce using rule 198 (EXP -> id .)
    isnull          reduce using rule 198 (EXP -> id .)
    notnull         reduce using rule 198 (EXP -> id .)
    id              reduce using rule 198 (EXP -> id .)
    as              reduce using rule 198 (EXP -> id .)
    coma            reduce using rule 198 (EXP -> id .)
    parc            reduce using rule 198 (EXP -> id .)
    then            reduce using rule 198 (EXP -> id .)
    where           reduce using rule 198 (EXP -> id .)
    group           reduce using rule 198 (EXP -> id .)
    having          reduce using rule 198 (EXP -> id .)
    order           reduce using rule 198 (EXP -> id .)
    end             reduce using rule 198 (EXP -> id .)
    else            reduce using rule 198 (EXP -> id .)
    when            reduce using rule 198 (EXP -> id .)
    constraint      reduce using rule 198 (EXP -> id .)
    default         reduce using rule 198 (EXP -> id .)
    primary         reduce using rule 198 (EXP -> id .)
    references      reduce using rule 198 (EXP -> id .)
    null            reduce using rule 198 (EXP -> id .)
    asc             reduce using rule 198 (EXP -> id .)
    desc            reduce using rule 198 (EXP -> id .)
    para            shift and go to state 87


state 39

    (99) LSELECT -> multiplicacion .

    r_from          reduce using rule 99 (LSELECT -> multiplicacion .)
    limit           reduce using rule 99 (LSELECT -> multiplicacion .)
    offset          reduce using rule 99 (LSELECT -> multiplicacion .)
    union           reduce using rule 99 (LSELECT -> multiplicacion .)
    intersect       reduce using rule 99 (LSELECT -> multiplicacion .)
    except          reduce using rule 99 (LSELECT -> multiplicacion .)
    ptcoma          reduce using rule 99 (LSELECT -> multiplicacion .)
    mas             reduce using rule 99 (LSELECT -> multiplicacion .)
    menos           reduce using rule 99 (LSELECT -> multiplicacion .)
    multiplicacion  reduce using rule 99 (LSELECT -> multiplicacion .)
    division        reduce using rule 99 (LSELECT -> multiplicacion .)
    modulo          reduce using rule 99 (LSELECT -> multiplicacion .)
    elevado         reduce using rule 99 (LSELECT -> multiplicacion .)
    and             reduce using rule 99 (LSELECT -> multiplicacion .)
    or              reduce using rule 99 (LSELECT -> multiplicacion .)
    mayor           reduce using rule 99 (LSELECT -> multiplicacion .)
    menor           reduce using rule 99 (LSELECT -> multiplicacion .)
    mayor_igual     reduce using rule 99 (LSELECT -> multiplicacion .)
    menor_igual     reduce using rule 99 (LSELECT -> multiplicacion .)
    igual           reduce using rule 99 (LSELECT -> multiplicacion .)
    diferente1      reduce using rule 99 (LSELECT -> multiplicacion .)
    diferente2      reduce using rule 99 (LSELECT -> multiplicacion .)
    punto           reduce using rule 99 (LSELECT -> multiplicacion .)
    between         reduce using rule 99 (LSELECT -> multiplicacion .)
    in              reduce using rule 99 (LSELECT -> multiplicacion .)
    not             reduce using rule 99 (LSELECT -> multiplicacion .)
    is              reduce using rule 99 (LSELECT -> multiplicacion .)
    isnull          reduce using rule 99 (LSELECT -> multiplicacion .)
    notnull         reduce using rule 99 (LSELECT -> multiplicacion .)
    id              reduce using rule 99 (LSELECT -> multiplicacion .)
    as              reduce using rule 99 (LSELECT -> multiplicacion .)
    coma            reduce using rule 99 (LSELECT -> multiplicacion .)
    parc            reduce using rule 99 (LSELECT -> multiplicacion .)
    then            reduce using rule 99 (LSELECT -> multiplicacion .)
    where           reduce using rule 99 (LSELECT -> multiplicacion .)
    group           reduce using rule 99 (LSELECT -> multiplicacion .)
    having          reduce using rule 99 (LSELECT -> multiplicacion .)
    order           reduce using rule 99 (LSELECT -> multiplicacion .)
    end             reduce using rule 99 (LSELECT -> multiplicacion .)
    else            reduce using rule 99 (LSELECT -> multiplicacion .)
    when            reduce using rule 99 (LSELECT -> multiplicacion .)
    constraint      reduce using rule 99 (LSELECT -> multiplicacion .)
    default         reduce using rule 99 (LSELECT -> multiplicacion .)
    primary         reduce using rule 99 (LSELECT -> multiplicacion .)
    references      reduce using rule 99 (LSELECT -> multiplicacion .)
    null            reduce using rule 99 (LSELECT -> multiplicacion .)
    asc             reduce using rule 99 (LSELECT -> multiplicacion .)
    desc            reduce using rule 99 (LSELECT -> multiplicacion .)


state 40

    (135) LEXP -> EXP .
    (173) EXP -> EXP . mas EXP
    (174) EXP -> EXP . menos EXP
    (175) EXP -> EXP . multiplicacion EXP
    (176) EXP -> EXP . division EXP
    (177) EXP -> EXP . modulo EXP
    (178) EXP -> EXP . elevado EXP
    (179) EXP -> EXP . and EXP
    (180) EXP -> EXP . or EXP
    (181) EXP -> EXP . mayor EXP
    (182) EXP -> EXP . menor EXP
    (183) EXP -> EXP . mayor_igual EXP
    (184) EXP -> EXP . menor_igual EXP
    (185) EXP -> EXP . igual EXP
    (186) EXP -> EXP . diferente1 EXP
    (187) EXP -> EXP . diferente2 EXP
    (188) EXP -> EXP . punto EXP
    (215) PREDICADOS -> EXP . between EXP
    (216) PREDICADOS -> EXP . in para LEXP parc
    (217) PREDICADOS -> EXP . not in para LEXP parc
    (218) PREDICADOS -> EXP . not between EXP
    (219) PREDICADOS -> EXP . between symetric EXP
    (220) PREDICADOS -> EXP . not between symetric EXP
    (221) PREDICADOS -> EXP . is distinct r_from EXP
    (222) PREDICADOS -> EXP . is not distinct r_from EXP
    (223) PREDICADOS -> EXP . is PNULL
    (224) PREDICADOS -> EXP . isnull
    (225) PREDICADOS -> EXP . notnull
    (226) PREDICADOS -> EXP . is true
    (227) PREDICADOS -> EXP . is not true
    (228) PREDICADOS -> EXP . is false
    (229) PREDICADOS -> EXP . is not false
    (230) PREDICADOS -> EXP . is unknown
    (231) PREDICADOS -> EXP . is not unknown

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for punto resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
    r_from          reduce using rule 135 (LEXP -> EXP .)
    limit           reduce using rule 135 (LEXP -> EXP .)
    offset          reduce using rule 135 (LEXP -> EXP .)
    union           reduce using rule 135 (LEXP -> EXP .)
    intersect       reduce using rule 135 (LEXP -> EXP .)
    except          reduce using rule 135 (LEXP -> EXP .)
    ptcoma          reduce using rule 135 (LEXP -> EXP .)
    id              reduce using rule 135 (LEXP -> EXP .)
    as              reduce using rule 135 (LEXP -> EXP .)
    coma            reduce using rule 135 (LEXP -> EXP .)
    parc            reduce using rule 135 (LEXP -> EXP .)
    then            reduce using rule 135 (LEXP -> EXP .)
    where           reduce using rule 135 (LEXP -> EXP .)
    group           reduce using rule 135 (LEXP -> EXP .)
    having          reduce using rule 135 (LEXP -> EXP .)
    order           reduce using rule 135 (LEXP -> EXP .)
    end             reduce using rule 135 (LEXP -> EXP .)
    else            reduce using rule 135 (LEXP -> EXP .)
    when            reduce using rule 135 (LEXP -> EXP .)
    constraint      reduce using rule 135 (LEXP -> EXP .)
    default         reduce using rule 135 (LEXP -> EXP .)
    primary         reduce using rule 135 (LEXP -> EXP .)
    references      reduce using rule 135 (LEXP -> EXP .)
    null            reduce using rule 135 (LEXP -> EXP .)
    asc             reduce using rule 135 (LEXP -> EXP .)
    desc            reduce using rule 135 (LEXP -> EXP .)
    mas             shift and go to state 88
    menos           shift and go to state 89
    multiplicacion  shift and go to state 90
    division        shift and go to state 91
    modulo          shift and go to state 92
    elevado         shift and go to state 93
    and             shift and go to state 94
    or              shift and go to state 95
    mayor           shift and go to state 96
    menor           shift and go to state 97
    mayor_igual     shift and go to state 98
    menor_igual     shift and go to state 99
    igual           shift and go to state 100
    diferente1      shift and go to state 101
    diferente2      shift and go to state 102
    punto           shift and go to state 103
    between         shift and go to state 104
    in              shift and go to state 105
    not             shift and go to state 106
    is              shift and go to state 107
    isnull          shift and go to state 108
    notnull         shift and go to state 109

  ! mas             [ reduce using rule 135 (LEXP -> EXP .) ]
  ! menos           [ reduce using rule 135 (LEXP -> EXP .) ]
  ! multiplicacion  [ reduce using rule 135 (LEXP -> EXP .) ]
  ! division        [ reduce using rule 135 (LEXP -> EXP .) ]
  ! modulo          [ reduce using rule 135 (LEXP -> EXP .) ]
  ! elevado         [ reduce using rule 135 (LEXP -> EXP .) ]
  ! and             [ reduce using rule 135 (LEXP -> EXP .) ]
  ! or              [ reduce using rule 135 (LEXP -> EXP .) ]
  ! mayor           [ reduce using rule 135 (LEXP -> EXP .) ]
  ! menor           [ reduce using rule 135 (LEXP -> EXP .) ]
  ! mayor_igual     [ reduce using rule 135 (LEXP -> EXP .) ]
  ! menor_igual     [ reduce using rule 135 (LEXP -> EXP .) ]
  ! igual           [ reduce using rule 135 (LEXP -> EXP .) ]
  ! diferente1      [ reduce using rule 135 (LEXP -> EXP .) ]
  ! diferente2      [ reduce using rule 135 (LEXP -> EXP .) ]
  ! punto           [ reduce using rule 135 (LEXP -> EXP .) ]
  ! between         [ reduce using rule 135 (LEXP -> EXP .) ]
  ! in              [ reduce using rule 135 (LEXP -> EXP .) ]
  ! not             [ reduce using rule 135 (LEXP -> EXP .) ]
  ! is              [ reduce using rule 135 (LEXP -> EXP .) ]
  ! isnull          [ reduce using rule 135 (LEXP -> EXP .) ]
  ! notnull         [ reduce using rule 135 (LEXP -> EXP .) ]


state 41

    (189) EXP -> mas . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 110
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 42

    (190) EXP -> menos . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 111
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 43

    (191) EXP -> not . EXP
    (77) PNULL -> not . null
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    null            shift and go to state 113
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 112
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 44

    (192) EXP -> para . EXP parc
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 114
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 45

    (193) EXP -> int .

    r_from          reduce using rule 193 (EXP -> int .)
    limit           reduce using rule 193 (EXP -> int .)
    offset          reduce using rule 193 (EXP -> int .)
    union           reduce using rule 193 (EXP -> int .)
    intersect       reduce using rule 193 (EXP -> int .)
    except          reduce using rule 193 (EXP -> int .)
    ptcoma          reduce using rule 193 (EXP -> int .)
    mas             reduce using rule 193 (EXP -> int .)
    menos           reduce using rule 193 (EXP -> int .)
    multiplicacion  reduce using rule 193 (EXP -> int .)
    division        reduce using rule 193 (EXP -> int .)
    modulo          reduce using rule 193 (EXP -> int .)
    elevado         reduce using rule 193 (EXP -> int .)
    and             reduce using rule 193 (EXP -> int .)
    or              reduce using rule 193 (EXP -> int .)
    mayor           reduce using rule 193 (EXP -> int .)
    menor           reduce using rule 193 (EXP -> int .)
    mayor_igual     reduce using rule 193 (EXP -> int .)
    menor_igual     reduce using rule 193 (EXP -> int .)
    igual           reduce using rule 193 (EXP -> int .)
    diferente1      reduce using rule 193 (EXP -> int .)
    diferente2      reduce using rule 193 (EXP -> int .)
    punto           reduce using rule 193 (EXP -> int .)
    between         reduce using rule 193 (EXP -> int .)
    in              reduce using rule 193 (EXP -> int .)
    not             reduce using rule 193 (EXP -> int .)
    is              reduce using rule 193 (EXP -> int .)
    isnull          reduce using rule 193 (EXP -> int .)
    notnull         reduce using rule 193 (EXP -> int .)
    id              reduce using rule 193 (EXP -> int .)
    as              reduce using rule 193 (EXP -> int .)
    coma            reduce using rule 193 (EXP -> int .)
    parc            reduce using rule 193 (EXP -> int .)
    then            reduce using rule 193 (EXP -> int .)
    where           reduce using rule 193 (EXP -> int .)
    group           reduce using rule 193 (EXP -> int .)
    having          reduce using rule 193 (EXP -> int .)
    order           reduce using rule 193 (EXP -> int .)
    end             reduce using rule 193 (EXP -> int .)
    else            reduce using rule 193 (EXP -> int .)
    when            reduce using rule 193 (EXP -> int .)
    constraint      reduce using rule 193 (EXP -> int .)
    default         reduce using rule 193 (EXP -> int .)
    primary         reduce using rule 193 (EXP -> int .)
    references      reduce using rule 193 (EXP -> int .)
    null            reduce using rule 193 (EXP -> int .)
    asc             reduce using rule 193 (EXP -> int .)
    desc            reduce using rule 193 (EXP -> int .)


state 46

    (194) EXP -> decimales .

    r_from          reduce using rule 194 (EXP -> decimales .)
    limit           reduce using rule 194 (EXP -> decimales .)
    offset          reduce using rule 194 (EXP -> decimales .)
    union           reduce using rule 194 (EXP -> decimales .)
    intersect       reduce using rule 194 (EXP -> decimales .)
    except          reduce using rule 194 (EXP -> decimales .)
    ptcoma          reduce using rule 194 (EXP -> decimales .)
    mas             reduce using rule 194 (EXP -> decimales .)
    menos           reduce using rule 194 (EXP -> decimales .)
    multiplicacion  reduce using rule 194 (EXP -> decimales .)
    division        reduce using rule 194 (EXP -> decimales .)
    modulo          reduce using rule 194 (EXP -> decimales .)
    elevado         reduce using rule 194 (EXP -> decimales .)
    and             reduce using rule 194 (EXP -> decimales .)
    or              reduce using rule 194 (EXP -> decimales .)
    mayor           reduce using rule 194 (EXP -> decimales .)
    menor           reduce using rule 194 (EXP -> decimales .)
    mayor_igual     reduce using rule 194 (EXP -> decimales .)
    menor_igual     reduce using rule 194 (EXP -> decimales .)
    igual           reduce using rule 194 (EXP -> decimales .)
    diferente1      reduce using rule 194 (EXP -> decimales .)
    diferente2      reduce using rule 194 (EXP -> decimales .)
    punto           reduce using rule 194 (EXP -> decimales .)
    between         reduce using rule 194 (EXP -> decimales .)
    in              reduce using rule 194 (EXP -> decimales .)
    not             reduce using rule 194 (EXP -> decimales .)
    is              reduce using rule 194 (EXP -> decimales .)
    isnull          reduce using rule 194 (EXP -> decimales .)
    notnull         reduce using rule 194 (EXP -> decimales .)
    id              reduce using rule 194 (EXP -> decimales .)
    as              reduce using rule 194 (EXP -> decimales .)
    coma            reduce using rule 194 (EXP -> decimales .)
    parc            reduce using rule 194 (EXP -> decimales .)
    then            reduce using rule 194 (EXP -> decimales .)
    where           reduce using rule 194 (EXP -> decimales .)
    group           reduce using rule 194 (EXP -> decimales .)
    having          reduce using rule 194 (EXP -> decimales .)
    order           reduce using rule 194 (EXP -> decimales .)
    end             reduce using rule 194 (EXP -> decimales .)
    else            reduce using rule 194 (EXP -> decimales .)
    when            reduce using rule 194 (EXP -> decimales .)
    constraint      reduce using rule 194 (EXP -> decimales .)
    default         reduce using rule 194 (EXP -> decimales .)
    primary         reduce using rule 194 (EXP -> decimales .)
    references      reduce using rule 194 (EXP -> decimales .)
    null            reduce using rule 194 (EXP -> decimales .)
    asc             reduce using rule 194 (EXP -> decimales .)
    desc            reduce using rule 194 (EXP -> decimales .)


state 47

    (195) EXP -> cadena .
    (210) EXP -> cadena . like cadena
    (211) EXP -> cadena . not like cadena

  ! shift/reduce conflict for not resolved as shift
    r_from          reduce using rule 195 (EXP -> cadena .)
    limit           reduce using rule 195 (EXP -> cadena .)
    offset          reduce using rule 195 (EXP -> cadena .)
    union           reduce using rule 195 (EXP -> cadena .)
    intersect       reduce using rule 195 (EXP -> cadena .)
    except          reduce using rule 195 (EXP -> cadena .)
    ptcoma          reduce using rule 195 (EXP -> cadena .)
    mas             reduce using rule 195 (EXP -> cadena .)
    menos           reduce using rule 195 (EXP -> cadena .)
    multiplicacion  reduce using rule 195 (EXP -> cadena .)
    division        reduce using rule 195 (EXP -> cadena .)
    modulo          reduce using rule 195 (EXP -> cadena .)
    elevado         reduce using rule 195 (EXP -> cadena .)
    and             reduce using rule 195 (EXP -> cadena .)
    or              reduce using rule 195 (EXP -> cadena .)
    mayor           reduce using rule 195 (EXP -> cadena .)
    menor           reduce using rule 195 (EXP -> cadena .)
    mayor_igual     reduce using rule 195 (EXP -> cadena .)
    menor_igual     reduce using rule 195 (EXP -> cadena .)
    igual           reduce using rule 195 (EXP -> cadena .)
    diferente1      reduce using rule 195 (EXP -> cadena .)
    diferente2      reduce using rule 195 (EXP -> cadena .)
    punto           reduce using rule 195 (EXP -> cadena .)
    between         reduce using rule 195 (EXP -> cadena .)
    in              reduce using rule 195 (EXP -> cadena .)
    is              reduce using rule 195 (EXP -> cadena .)
    isnull          reduce using rule 195 (EXP -> cadena .)
    notnull         reduce using rule 195 (EXP -> cadena .)
    id              reduce using rule 195 (EXP -> cadena .)
    as              reduce using rule 195 (EXP -> cadena .)
    coma            reduce using rule 195 (EXP -> cadena .)
    parc            reduce using rule 195 (EXP -> cadena .)
    then            reduce using rule 195 (EXP -> cadena .)
    where           reduce using rule 195 (EXP -> cadena .)
    group           reduce using rule 195 (EXP -> cadena .)
    having          reduce using rule 195 (EXP -> cadena .)
    order           reduce using rule 195 (EXP -> cadena .)
    end             reduce using rule 195 (EXP -> cadena .)
    else            reduce using rule 195 (EXP -> cadena .)
    when            reduce using rule 195 (EXP -> cadena .)
    constraint      reduce using rule 195 (EXP -> cadena .)
    default         reduce using rule 195 (EXP -> cadena .)
    primary         reduce using rule 195 (EXP -> cadena .)
    references      reduce using rule 195 (EXP -> cadena .)
    null            reduce using rule 195 (EXP -> cadena .)
    asc             reduce using rule 195 (EXP -> cadena .)
    desc            reduce using rule 195 (EXP -> cadena .)
    like            shift and go to state 115
    not             shift and go to state 116

  ! not             [ reduce using rule 195 (EXP -> cadena .) ]


state 48

    (196) EXP -> true .

    r_from          reduce using rule 196 (EXP -> true .)
    limit           reduce using rule 196 (EXP -> true .)
    offset          reduce using rule 196 (EXP -> true .)
    union           reduce using rule 196 (EXP -> true .)
    intersect       reduce using rule 196 (EXP -> true .)
    except          reduce using rule 196 (EXP -> true .)
    ptcoma          reduce using rule 196 (EXP -> true .)
    mas             reduce using rule 196 (EXP -> true .)
    menos           reduce using rule 196 (EXP -> true .)
    multiplicacion  reduce using rule 196 (EXP -> true .)
    division        reduce using rule 196 (EXP -> true .)
    modulo          reduce using rule 196 (EXP -> true .)
    elevado         reduce using rule 196 (EXP -> true .)
    and             reduce using rule 196 (EXP -> true .)
    or              reduce using rule 196 (EXP -> true .)
    mayor           reduce using rule 196 (EXP -> true .)
    menor           reduce using rule 196 (EXP -> true .)
    mayor_igual     reduce using rule 196 (EXP -> true .)
    menor_igual     reduce using rule 196 (EXP -> true .)
    igual           reduce using rule 196 (EXP -> true .)
    diferente1      reduce using rule 196 (EXP -> true .)
    diferente2      reduce using rule 196 (EXP -> true .)
    punto           reduce using rule 196 (EXP -> true .)
    between         reduce using rule 196 (EXP -> true .)
    in              reduce using rule 196 (EXP -> true .)
    not             reduce using rule 196 (EXP -> true .)
    is              reduce using rule 196 (EXP -> true .)
    isnull          reduce using rule 196 (EXP -> true .)
    notnull         reduce using rule 196 (EXP -> true .)
    id              reduce using rule 196 (EXP -> true .)
    as              reduce using rule 196 (EXP -> true .)
    coma            reduce using rule 196 (EXP -> true .)
    parc            reduce using rule 196 (EXP -> true .)
    then            reduce using rule 196 (EXP -> true .)
    where           reduce using rule 196 (EXP -> true .)
    group           reduce using rule 196 (EXP -> true .)
    having          reduce using rule 196 (EXP -> true .)
    order           reduce using rule 196 (EXP -> true .)
    end             reduce using rule 196 (EXP -> true .)
    else            reduce using rule 196 (EXP -> true .)
    when            reduce using rule 196 (EXP -> true .)
    constraint      reduce using rule 196 (EXP -> true .)
    default         reduce using rule 196 (EXP -> true .)
    primary         reduce using rule 196 (EXP -> true .)
    references      reduce using rule 196 (EXP -> true .)
    null            reduce using rule 196 (EXP -> true .)
    asc             reduce using rule 196 (EXP -> true .)
    desc            reduce using rule 196 (EXP -> true .)


state 49

    (197) EXP -> false .

    r_from          reduce using rule 197 (EXP -> false .)
    limit           reduce using rule 197 (EXP -> false .)
    offset          reduce using rule 197 (EXP -> false .)
    union           reduce using rule 197 (EXP -> false .)
    intersect       reduce using rule 197 (EXP -> false .)
    except          reduce using rule 197 (EXP -> false .)
    ptcoma          reduce using rule 197 (EXP -> false .)
    mas             reduce using rule 197 (EXP -> false .)
    menos           reduce using rule 197 (EXP -> false .)
    multiplicacion  reduce using rule 197 (EXP -> false .)
    division        reduce using rule 197 (EXP -> false .)
    modulo          reduce using rule 197 (EXP -> false .)
    elevado         reduce using rule 197 (EXP -> false .)
    and             reduce using rule 197 (EXP -> false .)
    or              reduce using rule 197 (EXP -> false .)
    mayor           reduce using rule 197 (EXP -> false .)
    menor           reduce using rule 197 (EXP -> false .)
    mayor_igual     reduce using rule 197 (EXP -> false .)
    menor_igual     reduce using rule 197 (EXP -> false .)
    igual           reduce using rule 197 (EXP -> false .)
    diferente1      reduce using rule 197 (EXP -> false .)
    diferente2      reduce using rule 197 (EXP -> false .)
    punto           reduce using rule 197 (EXP -> false .)
    between         reduce using rule 197 (EXP -> false .)
    in              reduce using rule 197 (EXP -> false .)
    not             reduce using rule 197 (EXP -> false .)
    is              reduce using rule 197 (EXP -> false .)
    isnull          reduce using rule 197 (EXP -> false .)
    notnull         reduce using rule 197 (EXP -> false .)
    id              reduce using rule 197 (EXP -> false .)
    as              reduce using rule 197 (EXP -> false .)
    coma            reduce using rule 197 (EXP -> false .)
    parc            reduce using rule 197 (EXP -> false .)
    then            reduce using rule 197 (EXP -> false .)
    where           reduce using rule 197 (EXP -> false .)
    group           reduce using rule 197 (EXP -> false .)
    having          reduce using rule 197 (EXP -> false .)
    order           reduce using rule 197 (EXP -> false .)
    end             reduce using rule 197 (EXP -> false .)
    else            reduce using rule 197 (EXP -> false .)
    when            reduce using rule 197 (EXP -> false .)
    constraint      reduce using rule 197 (EXP -> false .)
    default         reduce using rule 197 (EXP -> false .)
    primary         reduce using rule 197 (EXP -> false .)
    references      reduce using rule 197 (EXP -> false .)
    null            reduce using rule 197 (EXP -> false .)
    asc             reduce using rule 197 (EXP -> false .)
    desc            reduce using rule 197 (EXP -> false .)


state 50

    (199) EXP -> PNULL .

    r_from          reduce using rule 199 (EXP -> PNULL .)
    limit           reduce using rule 199 (EXP -> PNULL .)
    offset          reduce using rule 199 (EXP -> PNULL .)
    union           reduce using rule 199 (EXP -> PNULL .)
    intersect       reduce using rule 199 (EXP -> PNULL .)
    except          reduce using rule 199 (EXP -> PNULL .)
    ptcoma          reduce using rule 199 (EXP -> PNULL .)
    mas             reduce using rule 199 (EXP -> PNULL .)
    menos           reduce using rule 199 (EXP -> PNULL .)
    multiplicacion  reduce using rule 199 (EXP -> PNULL .)
    division        reduce using rule 199 (EXP -> PNULL .)
    modulo          reduce using rule 199 (EXP -> PNULL .)
    elevado         reduce using rule 199 (EXP -> PNULL .)
    and             reduce using rule 199 (EXP -> PNULL .)
    or              reduce using rule 199 (EXP -> PNULL .)
    mayor           reduce using rule 199 (EXP -> PNULL .)
    menor           reduce using rule 199 (EXP -> PNULL .)
    mayor_igual     reduce using rule 199 (EXP -> PNULL .)
    menor_igual     reduce using rule 199 (EXP -> PNULL .)
    igual           reduce using rule 199 (EXP -> PNULL .)
    diferente1      reduce using rule 199 (EXP -> PNULL .)
    diferente2      reduce using rule 199 (EXP -> PNULL .)
    punto           reduce using rule 199 (EXP -> PNULL .)
    between         reduce using rule 199 (EXP -> PNULL .)
    in              reduce using rule 199 (EXP -> PNULL .)
    not             reduce using rule 199 (EXP -> PNULL .)
    is              reduce using rule 199 (EXP -> PNULL .)
    isnull          reduce using rule 199 (EXP -> PNULL .)
    notnull         reduce using rule 199 (EXP -> PNULL .)
    id              reduce using rule 199 (EXP -> PNULL .)
    as              reduce using rule 199 (EXP -> PNULL .)
    coma            reduce using rule 199 (EXP -> PNULL .)
    parc            reduce using rule 199 (EXP -> PNULL .)
    then            reduce using rule 199 (EXP -> PNULL .)
    where           reduce using rule 199 (EXP -> PNULL .)
    group           reduce using rule 199 (EXP -> PNULL .)
    having          reduce using rule 199 (EXP -> PNULL .)
    order           reduce using rule 199 (EXP -> PNULL .)
    end             reduce using rule 199 (EXP -> PNULL .)
    else            reduce using rule 199 (EXP -> PNULL .)
    when            reduce using rule 199 (EXP -> PNULL .)
    constraint      reduce using rule 199 (EXP -> PNULL .)
    default         reduce using rule 199 (EXP -> PNULL .)
    primary         reduce using rule 199 (EXP -> PNULL .)
    references      reduce using rule 199 (EXP -> PNULL .)
    null            reduce using rule 199 (EXP -> PNULL .)
    asc             reduce using rule 199 (EXP -> PNULL .)
    desc            reduce using rule 199 (EXP -> PNULL .)


state 51

    (200) EXP -> SELECT .

    r_from          reduce using rule 200 (EXP -> SELECT .)
    limit           reduce using rule 200 (EXP -> SELECT .)
    offset          reduce using rule 200 (EXP -> SELECT .)
    union           reduce using rule 200 (EXP -> SELECT .)
    intersect       reduce using rule 200 (EXP -> SELECT .)
    except          reduce using rule 200 (EXP -> SELECT .)
    ptcoma          reduce using rule 200 (EXP -> SELECT .)
    mas             reduce using rule 200 (EXP -> SELECT .)
    menos           reduce using rule 200 (EXP -> SELECT .)
    multiplicacion  reduce using rule 200 (EXP -> SELECT .)
    division        reduce using rule 200 (EXP -> SELECT .)
    modulo          reduce using rule 200 (EXP -> SELECT .)
    elevado         reduce using rule 200 (EXP -> SELECT .)
    and             reduce using rule 200 (EXP -> SELECT .)
    or              reduce using rule 200 (EXP -> SELECT .)
    mayor           reduce using rule 200 (EXP -> SELECT .)
    menor           reduce using rule 200 (EXP -> SELECT .)
    mayor_igual     reduce using rule 200 (EXP -> SELECT .)
    menor_igual     reduce using rule 200 (EXP -> SELECT .)
    igual           reduce using rule 200 (EXP -> SELECT .)
    diferente1      reduce using rule 200 (EXP -> SELECT .)
    diferente2      reduce using rule 200 (EXP -> SELECT .)
    punto           reduce using rule 200 (EXP -> SELECT .)
    between         reduce using rule 200 (EXP -> SELECT .)
    in              reduce using rule 200 (EXP -> SELECT .)
    not             reduce using rule 200 (EXP -> SELECT .)
    is              reduce using rule 200 (EXP -> SELECT .)
    isnull          reduce using rule 200 (EXP -> SELECT .)
    notnull         reduce using rule 200 (EXP -> SELECT .)
    id              reduce using rule 200 (EXP -> SELECT .)
    as              reduce using rule 200 (EXP -> SELECT .)
    coma            reduce using rule 200 (EXP -> SELECT .)
    parc            reduce using rule 200 (EXP -> SELECT .)
    then            reduce using rule 200 (EXP -> SELECT .)
    where           reduce using rule 200 (EXP -> SELECT .)
    group           reduce using rule 200 (EXP -> SELECT .)
    having          reduce using rule 200 (EXP -> SELECT .)
    order           reduce using rule 200 (EXP -> SELECT .)
    end             reduce using rule 200 (EXP -> SELECT .)
    else            reduce using rule 200 (EXP -> SELECT .)
    when            reduce using rule 200 (EXP -> SELECT .)
    constraint      reduce using rule 200 (EXP -> SELECT .)
    default         reduce using rule 200 (EXP -> SELECT .)
    primary         reduce using rule 200 (EXP -> SELECT .)
    references      reduce using rule 200 (EXP -> SELECT .)
    null            reduce using rule 200 (EXP -> SELECT .)
    asc             reduce using rule 200 (EXP -> SELECT .)
    desc            reduce using rule 200 (EXP -> SELECT .)


state 52

    (201) EXP -> PREDICADOS .

    r_from          reduce using rule 201 (EXP -> PREDICADOS .)
    limit           reduce using rule 201 (EXP -> PREDICADOS .)
    offset          reduce using rule 201 (EXP -> PREDICADOS .)
    union           reduce using rule 201 (EXP -> PREDICADOS .)
    intersect       reduce using rule 201 (EXP -> PREDICADOS .)
    except          reduce using rule 201 (EXP -> PREDICADOS .)
    ptcoma          reduce using rule 201 (EXP -> PREDICADOS .)
    mas             reduce using rule 201 (EXP -> PREDICADOS .)
    menos           reduce using rule 201 (EXP -> PREDICADOS .)
    multiplicacion  reduce using rule 201 (EXP -> PREDICADOS .)
    division        reduce using rule 201 (EXP -> PREDICADOS .)
    modulo          reduce using rule 201 (EXP -> PREDICADOS .)
    elevado         reduce using rule 201 (EXP -> PREDICADOS .)
    and             reduce using rule 201 (EXP -> PREDICADOS .)
    or              reduce using rule 201 (EXP -> PREDICADOS .)
    mayor           reduce using rule 201 (EXP -> PREDICADOS .)
    menor           reduce using rule 201 (EXP -> PREDICADOS .)
    mayor_igual     reduce using rule 201 (EXP -> PREDICADOS .)
    menor_igual     reduce using rule 201 (EXP -> PREDICADOS .)
    igual           reduce using rule 201 (EXP -> PREDICADOS .)
    diferente1      reduce using rule 201 (EXP -> PREDICADOS .)
    diferente2      reduce using rule 201 (EXP -> PREDICADOS .)
    punto           reduce using rule 201 (EXP -> PREDICADOS .)
    between         reduce using rule 201 (EXP -> PREDICADOS .)
    in              reduce using rule 201 (EXP -> PREDICADOS .)
    not             reduce using rule 201 (EXP -> PREDICADOS .)
    is              reduce using rule 201 (EXP -> PREDICADOS .)
    isnull          reduce using rule 201 (EXP -> PREDICADOS .)
    notnull         reduce using rule 201 (EXP -> PREDICADOS .)
    id              reduce using rule 201 (EXP -> PREDICADOS .)
    as              reduce using rule 201 (EXP -> PREDICADOS .)
    coma            reduce using rule 201 (EXP -> PREDICADOS .)
    parc            reduce using rule 201 (EXP -> PREDICADOS .)
    then            reduce using rule 201 (EXP -> PREDICADOS .)
    where           reduce using rule 201 (EXP -> PREDICADOS .)
    group           reduce using rule 201 (EXP -> PREDICADOS .)
    having          reduce using rule 201 (EXP -> PREDICADOS .)
    order           reduce using rule 201 (EXP -> PREDICADOS .)
    end             reduce using rule 201 (EXP -> PREDICADOS .)
    else            reduce using rule 201 (EXP -> PREDICADOS .)
    when            reduce using rule 201 (EXP -> PREDICADOS .)
    constraint      reduce using rule 201 (EXP -> PREDICADOS .)
    default         reduce using rule 201 (EXP -> PREDICADOS .)
    primary         reduce using rule 201 (EXP -> PREDICADOS .)
    references      reduce using rule 201 (EXP -> PREDICADOS .)
    null            reduce using rule 201 (EXP -> PREDICADOS .)
    asc             reduce using rule 201 (EXP -> PREDICADOS .)
    desc            reduce using rule 201 (EXP -> PREDICADOS .)


state 53

    (204) EXP -> extract . para FIELDS r_from timestamp cadena parc

    para            shift and go to state 117


state 54

    (207) EXP -> timestamp . cadena

    cadena          shift and go to state 118


state 55

    (205) EXP -> current_time .

    r_from          reduce using rule 205 (EXP -> current_time .)
    limit           reduce using rule 205 (EXP -> current_time .)
    offset          reduce using rule 205 (EXP -> current_time .)
    union           reduce using rule 205 (EXP -> current_time .)
    intersect       reduce using rule 205 (EXP -> current_time .)
    except          reduce using rule 205 (EXP -> current_time .)
    ptcoma          reduce using rule 205 (EXP -> current_time .)
    mas             reduce using rule 205 (EXP -> current_time .)
    menos           reduce using rule 205 (EXP -> current_time .)
    multiplicacion  reduce using rule 205 (EXP -> current_time .)
    division        reduce using rule 205 (EXP -> current_time .)
    modulo          reduce using rule 205 (EXP -> current_time .)
    elevado         reduce using rule 205 (EXP -> current_time .)
    and             reduce using rule 205 (EXP -> current_time .)
    or              reduce using rule 205 (EXP -> current_time .)
    mayor           reduce using rule 205 (EXP -> current_time .)
    menor           reduce using rule 205 (EXP -> current_time .)
    mayor_igual     reduce using rule 205 (EXP -> current_time .)
    menor_igual     reduce using rule 205 (EXP -> current_time .)
    igual           reduce using rule 205 (EXP -> current_time .)
    diferente1      reduce using rule 205 (EXP -> current_time .)
    diferente2      reduce using rule 205 (EXP -> current_time .)
    punto           reduce using rule 205 (EXP -> current_time .)
    between         reduce using rule 205 (EXP -> current_time .)
    in              reduce using rule 205 (EXP -> current_time .)
    not             reduce using rule 205 (EXP -> current_time .)
    is              reduce using rule 205 (EXP -> current_time .)
    isnull          reduce using rule 205 (EXP -> current_time .)
    notnull         reduce using rule 205 (EXP -> current_time .)
    id              reduce using rule 205 (EXP -> current_time .)
    as              reduce using rule 205 (EXP -> current_time .)
    coma            reduce using rule 205 (EXP -> current_time .)
    parc            reduce using rule 205 (EXP -> current_time .)
    then            reduce using rule 205 (EXP -> current_time .)
    where           reduce using rule 205 (EXP -> current_time .)
    group           reduce using rule 205 (EXP -> current_time .)
    having          reduce using rule 205 (EXP -> current_time .)
    order           reduce using rule 205 (EXP -> current_time .)
    end             reduce using rule 205 (EXP -> current_time .)
    else            reduce using rule 205 (EXP -> current_time .)
    when            reduce using rule 205 (EXP -> current_time .)
    constraint      reduce using rule 205 (EXP -> current_time .)
    default         reduce using rule 205 (EXP -> current_time .)
    primary         reduce using rule 205 (EXP -> current_time .)
    references      reduce using rule 205 (EXP -> current_time .)
    null            reduce using rule 205 (EXP -> current_time .)
    asc             reduce using rule 205 (EXP -> current_time .)
    desc            reduce using rule 205 (EXP -> current_time .)


state 56

    (206) EXP -> current_date .

    r_from          reduce using rule 206 (EXP -> current_date .)
    limit           reduce using rule 206 (EXP -> current_date .)
    offset          reduce using rule 206 (EXP -> current_date .)
    union           reduce using rule 206 (EXP -> current_date .)
    intersect       reduce using rule 206 (EXP -> current_date .)
    except          reduce using rule 206 (EXP -> current_date .)
    ptcoma          reduce using rule 206 (EXP -> current_date .)
    mas             reduce using rule 206 (EXP -> current_date .)
    menos           reduce using rule 206 (EXP -> current_date .)
    multiplicacion  reduce using rule 206 (EXP -> current_date .)
    division        reduce using rule 206 (EXP -> current_date .)
    modulo          reduce using rule 206 (EXP -> current_date .)
    elevado         reduce using rule 206 (EXP -> current_date .)
    and             reduce using rule 206 (EXP -> current_date .)
    or              reduce using rule 206 (EXP -> current_date .)
    mayor           reduce using rule 206 (EXP -> current_date .)
    menor           reduce using rule 206 (EXP -> current_date .)
    mayor_igual     reduce using rule 206 (EXP -> current_date .)
    menor_igual     reduce using rule 206 (EXP -> current_date .)
    igual           reduce using rule 206 (EXP -> current_date .)
    diferente1      reduce using rule 206 (EXP -> current_date .)
    diferente2      reduce using rule 206 (EXP -> current_date .)
    punto           reduce using rule 206 (EXP -> current_date .)
    between         reduce using rule 206 (EXP -> current_date .)
    in              reduce using rule 206 (EXP -> current_date .)
    not             reduce using rule 206 (EXP -> current_date .)
    is              reduce using rule 206 (EXP -> current_date .)
    isnull          reduce using rule 206 (EXP -> current_date .)
    notnull         reduce using rule 206 (EXP -> current_date .)
    id              reduce using rule 206 (EXP -> current_date .)
    as              reduce using rule 206 (EXP -> current_date .)
    coma            reduce using rule 206 (EXP -> current_date .)
    parc            reduce using rule 206 (EXP -> current_date .)
    then            reduce using rule 206 (EXP -> current_date .)
    where           reduce using rule 206 (EXP -> current_date .)
    group           reduce using rule 206 (EXP -> current_date .)
    having          reduce using rule 206 (EXP -> current_date .)
    order           reduce using rule 206 (EXP -> current_date .)
    end             reduce using rule 206 (EXP -> current_date .)
    else            reduce using rule 206 (EXP -> current_date .)
    when            reduce using rule 206 (EXP -> current_date .)
    constraint      reduce using rule 206 (EXP -> current_date .)
    default         reduce using rule 206 (EXP -> current_date .)
    primary         reduce using rule 206 (EXP -> current_date .)
    references      reduce using rule 206 (EXP -> current_date .)
    null            reduce using rule 206 (EXP -> current_date .)
    asc             reduce using rule 206 (EXP -> current_date .)
    desc            reduce using rule 206 (EXP -> current_date .)


state 57

    (208) EXP -> interval . cadena

    cadena          shift and go to state 119


state 58

    (209) EXP -> CASE .

    r_from          reduce using rule 209 (EXP -> CASE .)
    limit           reduce using rule 209 (EXP -> CASE .)
    offset          reduce using rule 209 (EXP -> CASE .)
    union           reduce using rule 209 (EXP -> CASE .)
    intersect       reduce using rule 209 (EXP -> CASE .)
    except          reduce using rule 209 (EXP -> CASE .)
    ptcoma          reduce using rule 209 (EXP -> CASE .)
    mas             reduce using rule 209 (EXP -> CASE .)
    menos           reduce using rule 209 (EXP -> CASE .)
    multiplicacion  reduce using rule 209 (EXP -> CASE .)
    division        reduce using rule 209 (EXP -> CASE .)
    modulo          reduce using rule 209 (EXP -> CASE .)
    elevado         reduce using rule 209 (EXP -> CASE .)
    and             reduce using rule 209 (EXP -> CASE .)
    or              reduce using rule 209 (EXP -> CASE .)
    mayor           reduce using rule 209 (EXP -> CASE .)
    menor           reduce using rule 209 (EXP -> CASE .)
    mayor_igual     reduce using rule 209 (EXP -> CASE .)
    menor_igual     reduce using rule 209 (EXP -> CASE .)
    igual           reduce using rule 209 (EXP -> CASE .)
    diferente1      reduce using rule 209 (EXP -> CASE .)
    diferente2      reduce using rule 209 (EXP -> CASE .)
    punto           reduce using rule 209 (EXP -> CASE .)
    between         reduce using rule 209 (EXP -> CASE .)
    in              reduce using rule 209 (EXP -> CASE .)
    not             reduce using rule 209 (EXP -> CASE .)
    is              reduce using rule 209 (EXP -> CASE .)
    isnull          reduce using rule 209 (EXP -> CASE .)
    notnull         reduce using rule 209 (EXP -> CASE .)
    id              reduce using rule 209 (EXP -> CASE .)
    as              reduce using rule 209 (EXP -> CASE .)
    coma            reduce using rule 209 (EXP -> CASE .)
    parc            reduce using rule 209 (EXP -> CASE .)
    then            reduce using rule 209 (EXP -> CASE .)
    where           reduce using rule 209 (EXP -> CASE .)
    group           reduce using rule 209 (EXP -> CASE .)
    having          reduce using rule 209 (EXP -> CASE .)
    order           reduce using rule 209 (EXP -> CASE .)
    end             reduce using rule 209 (EXP -> CASE .)
    else            reduce using rule 209 (EXP -> CASE .)
    when            reduce using rule 209 (EXP -> CASE .)
    constraint      reduce using rule 209 (EXP -> CASE .)
    default         reduce using rule 209 (EXP -> CASE .)
    primary         reduce using rule 209 (EXP -> CASE .)
    references      reduce using rule 209 (EXP -> CASE .)
    null            reduce using rule 209 (EXP -> CASE .)
    asc             reduce using rule 209 (EXP -> CASE .)
    desc            reduce using rule 209 (EXP -> CASE .)


state 59

    (212) EXP -> any . para LEXP parc

    para            shift and go to state 120


state 60

    (213) EXP -> all . para LEXP parc

    para            shift and go to state 121


state 61

    (214) EXP -> some . para LEXP parc

    para            shift and go to state 122


state 62

    (78) PNULL -> null .

    r_from          reduce using rule 78 (PNULL -> null .)
    limit           reduce using rule 78 (PNULL -> null .)
    offset          reduce using rule 78 (PNULL -> null .)
    union           reduce using rule 78 (PNULL -> null .)
    intersect       reduce using rule 78 (PNULL -> null .)
    except          reduce using rule 78 (PNULL -> null .)
    ptcoma          reduce using rule 78 (PNULL -> null .)
    mas             reduce using rule 78 (PNULL -> null .)
    menos           reduce using rule 78 (PNULL -> null .)
    multiplicacion  reduce using rule 78 (PNULL -> null .)
    division        reduce using rule 78 (PNULL -> null .)
    modulo          reduce using rule 78 (PNULL -> null .)
    elevado         reduce using rule 78 (PNULL -> null .)
    and             reduce using rule 78 (PNULL -> null .)
    or              reduce using rule 78 (PNULL -> null .)
    mayor           reduce using rule 78 (PNULL -> null .)
    menor           reduce using rule 78 (PNULL -> null .)
    mayor_igual     reduce using rule 78 (PNULL -> null .)
    menor_igual     reduce using rule 78 (PNULL -> null .)
    igual           reduce using rule 78 (PNULL -> null .)
    diferente1      reduce using rule 78 (PNULL -> null .)
    diferente2      reduce using rule 78 (PNULL -> null .)
    punto           reduce using rule 78 (PNULL -> null .)
    between         reduce using rule 78 (PNULL -> null .)
    in              reduce using rule 78 (PNULL -> null .)
    not             reduce using rule 78 (PNULL -> null .)
    is              reduce using rule 78 (PNULL -> null .)
    isnull          reduce using rule 78 (PNULL -> null .)
    notnull         reduce using rule 78 (PNULL -> null .)
    id              reduce using rule 78 (PNULL -> null .)
    as              reduce using rule 78 (PNULL -> null .)
    coma            reduce using rule 78 (PNULL -> null .)
    parc            reduce using rule 78 (PNULL -> null .)
    then            reduce using rule 78 (PNULL -> null .)
    where           reduce using rule 78 (PNULL -> null .)
    group           reduce using rule 78 (PNULL -> null .)
    having          reduce using rule 78 (PNULL -> null .)
    order           reduce using rule 78 (PNULL -> null .)
    end             reduce using rule 78 (PNULL -> null .)
    else            reduce using rule 78 (PNULL -> null .)
    when            reduce using rule 78 (PNULL -> null .)
    constraint      reduce using rule 78 (PNULL -> null .)
    default         reduce using rule 78 (PNULL -> null .)
    primary         reduce using rule 78 (PNULL -> null .)
    references      reduce using rule 78 (PNULL -> null .)
    null            reduce using rule 78 (PNULL -> null .)
    asc             reduce using rule 78 (PNULL -> null .)
    desc            reduce using rule 78 (PNULL -> null .)


state 63

    (61) CREATETABLE -> create table . id para LDEF parc ptcoma
    (62) CREATETABLE -> create table . id para LDEF parc HERENCIA ptcoma

    id              shift and go to state 123


state 64

    (84) CREATETYPE -> create type . id as enum para LEXP parc

    id              shift and go to state 124


state 65

    (48) CREATEDB -> create RD . if not exist id
    (49) CREATEDB -> create RD . if not exist id OPCCDB
    (50) CREATEDB -> create RD . id
    (51) CREATEDB -> create RD . id OPCCDB

    if              shift and go to state 125
    id              shift and go to state 126


state 66

    (55) RD -> or . replace databases

    replace         shift and go to state 127


state 67

    (56) RD -> databases .

    if              reduce using rule 56 (RD -> databases .)
    id              reduce using rule 56 (RD -> databases .)


state 68

    (127) UPDATE -> update id . set LCAMPOS where LEXP

    set             shift and go to state 128


state 69

    (131) DELETE -> delete r_from . id where LEXP
    (132) DELETE -> delete r_from . id

    id              shift and go to state 129


state 70

    (25) ALTER -> alter databases . id RO

    id              shift and go to state 130


state 71

    (29) altertable -> alter table . id OP

    id              shift and go to state 131


state 72

    (22) DROP -> drop table . id

    id              shift and go to state 132


state 73

    (23) DROP -> drop databases . if exist id
    (24) DROP -> drop databases . id

    if              shift and go to state 133
    id              shift and go to state 134


state 74

    (21) INSERT -> insert into . id values para LEXP parc

    id              shift and go to state 135


state 75

    (15) CASE -> case LISTAWHEN . ELSE end
    (16) CASE -> case LISTAWHEN . end
    (17) LISTAWHEN -> LISTAWHEN . WHEN
    (20) ELSE -> . else LEXP
    (19) WHEN -> . when LEXP then LEXP

    end             shift and go to state 137
    else            shift and go to state 139
    when            shift and go to state 77

    ELSE                           shift and go to state 136
    WHEN                           shift and go to state 138

state 76

    (18) LISTAWHEN -> WHEN .

    end             reduce using rule 18 (LISTAWHEN -> WHEN .)
    else            reduce using rule 18 (LISTAWHEN -> WHEN .)
    when            reduce using rule 18 (LISTAWHEN -> WHEN .)


state 77

    (19) WHEN -> when . LEXP then LEXP
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 140
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 78

    (47) SHOWDB -> show databases .

    ptcoma          reduce using rule 47 (SHOWDB -> show databases .)


state 79

    (85) SELECT -> select distinct LSELECT . r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING

    r_from          shift and go to state 141


state 80

    (86) SELECT -> select LSELECT r_from . LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (100) LFROM -> . LFROM coma FROM
    (101) LFROM -> . FROM
    (102) FROM -> . LEXP
    (103) FROM -> . LEXP as id
    (104) FROM -> . LEXP id
    (105) FROM -> . multiplicacion
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    multiplicacion  shift and go to state 145
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LFROM                          shift and go to state 142
    FROM                           shift and go to state 143
    LEXP                           shift and go to state 144
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 81

    (87) SELECT -> select LSELECT LIMIT . COMBINING
    (111) COMBINING -> . union LEXP
    (112) COMBINING -> . union all LEXP
    (113) COMBINING -> . intersect LEXP
    (114) COMBINING -> . intersect all LEXP
    (115) COMBINING -> . except LEXP
    (116) COMBINING -> . except all LEXP
    (117) COMBINING -> .

  ! shift/reduce conflict for union resolved as shift
  ! shift/reduce conflict for intersect resolved as shift
  ! shift/reduce conflict for except resolved as shift
    union           shift and go to state 147
    intersect       shift and go to state 148
    except          shift and go to state 149
    r_from          reduce using rule 117 (COMBINING -> .)
    limit           reduce using rule 117 (COMBINING -> .)
    offset          reduce using rule 117 (COMBINING -> .)
    ptcoma          reduce using rule 117 (COMBINING -> .)
    mas             reduce using rule 117 (COMBINING -> .)
    menos           reduce using rule 117 (COMBINING -> .)
    multiplicacion  reduce using rule 117 (COMBINING -> .)
    division        reduce using rule 117 (COMBINING -> .)
    modulo          reduce using rule 117 (COMBINING -> .)
    elevado         reduce using rule 117 (COMBINING -> .)
    and             reduce using rule 117 (COMBINING -> .)
    or              reduce using rule 117 (COMBINING -> .)
    mayor           reduce using rule 117 (COMBINING -> .)
    menor           reduce using rule 117 (COMBINING -> .)
    mayor_igual     reduce using rule 117 (COMBINING -> .)
    menor_igual     reduce using rule 117 (COMBINING -> .)
    igual           reduce using rule 117 (COMBINING -> .)
    diferente1      reduce using rule 117 (COMBINING -> .)
    diferente2      reduce using rule 117 (COMBINING -> .)
    punto           reduce using rule 117 (COMBINING -> .)
    between         reduce using rule 117 (COMBINING -> .)
    in              reduce using rule 117 (COMBINING -> .)
    not             reduce using rule 117 (COMBINING -> .)
    is              reduce using rule 117 (COMBINING -> .)
    isnull          reduce using rule 117 (COMBINING -> .)
    notnull         reduce using rule 117 (COMBINING -> .)
    id              reduce using rule 117 (COMBINING -> .)
    as              reduce using rule 117 (COMBINING -> .)
    coma            reduce using rule 117 (COMBINING -> .)
    parc            reduce using rule 117 (COMBINING -> .)
    then            reduce using rule 117 (COMBINING -> .)
    where           reduce using rule 117 (COMBINING -> .)
    group           reduce using rule 117 (COMBINING -> .)
    having          reduce using rule 117 (COMBINING -> .)
    order           reduce using rule 117 (COMBINING -> .)
    end             reduce using rule 117 (COMBINING -> .)
    else            reduce using rule 117 (COMBINING -> .)
    when            reduce using rule 117 (COMBINING -> .)
    constraint      reduce using rule 117 (COMBINING -> .)
    default         reduce using rule 117 (COMBINING -> .)
    primary         reduce using rule 117 (COMBINING -> .)
    references      reduce using rule 117 (COMBINING -> .)
    null            reduce using rule 117 (COMBINING -> .)
    asc             reduce using rule 117 (COMBINING -> .)
    desc            reduce using rule 117 (COMBINING -> .)

  ! union           [ reduce using rule 117 (COMBINING -> .) ]
  ! intersect       [ reduce using rule 117 (COMBINING -> .) ]
  ! except          [ reduce using rule 117 (COMBINING -> .) ]

    COMBINING                      shift and go to state 146

state 82

    (88) LIMIT -> limit . int
    (89) LIMIT -> limit . all
    (91) LIMIT -> limit . int offset int
    (93) LIMIT -> limit . all offset int

    int             shift and go to state 150
    all             shift and go to state 151


state 83

    (90) LIMIT -> offset . int
    (92) LIMIT -> offset . int limit int
    (94) LIMIT -> offset . int limit all

    int             shift and go to state 152


state 84

    (97) LSELECT -> LEXP id .

    r_from          reduce using rule 97 (LSELECT -> LEXP id .)
    limit           reduce using rule 97 (LSELECT -> LEXP id .)
    offset          reduce using rule 97 (LSELECT -> LEXP id .)
    union           reduce using rule 97 (LSELECT -> LEXP id .)
    intersect       reduce using rule 97 (LSELECT -> LEXP id .)
    except          reduce using rule 97 (LSELECT -> LEXP id .)
    ptcoma          reduce using rule 97 (LSELECT -> LEXP id .)
    mas             reduce using rule 97 (LSELECT -> LEXP id .)
    menos           reduce using rule 97 (LSELECT -> LEXP id .)
    multiplicacion  reduce using rule 97 (LSELECT -> LEXP id .)
    division        reduce using rule 97 (LSELECT -> LEXP id .)
    modulo          reduce using rule 97 (LSELECT -> LEXP id .)
    elevado         reduce using rule 97 (LSELECT -> LEXP id .)
    and             reduce using rule 97 (LSELECT -> LEXP id .)
    or              reduce using rule 97 (LSELECT -> LEXP id .)
    mayor           reduce using rule 97 (LSELECT -> LEXP id .)
    menor           reduce using rule 97 (LSELECT -> LEXP id .)
    mayor_igual     reduce using rule 97 (LSELECT -> LEXP id .)
    menor_igual     reduce using rule 97 (LSELECT -> LEXP id .)
    igual           reduce using rule 97 (LSELECT -> LEXP id .)
    diferente1      reduce using rule 97 (LSELECT -> LEXP id .)
    diferente2      reduce using rule 97 (LSELECT -> LEXP id .)
    punto           reduce using rule 97 (LSELECT -> LEXP id .)
    between         reduce using rule 97 (LSELECT -> LEXP id .)
    in              reduce using rule 97 (LSELECT -> LEXP id .)
    not             reduce using rule 97 (LSELECT -> LEXP id .)
    is              reduce using rule 97 (LSELECT -> LEXP id .)
    isnull          reduce using rule 97 (LSELECT -> LEXP id .)
    notnull         reduce using rule 97 (LSELECT -> LEXP id .)
    id              reduce using rule 97 (LSELECT -> LEXP id .)
    as              reduce using rule 97 (LSELECT -> LEXP id .)
    coma            reduce using rule 97 (LSELECT -> LEXP id .)
    parc            reduce using rule 97 (LSELECT -> LEXP id .)
    then            reduce using rule 97 (LSELECT -> LEXP id .)
    where           reduce using rule 97 (LSELECT -> LEXP id .)
    group           reduce using rule 97 (LSELECT -> LEXP id .)
    having          reduce using rule 97 (LSELECT -> LEXP id .)
    order           reduce using rule 97 (LSELECT -> LEXP id .)
    end             reduce using rule 97 (LSELECT -> LEXP id .)
    else            reduce using rule 97 (LSELECT -> LEXP id .)
    when            reduce using rule 97 (LSELECT -> LEXP id .)
    constraint      reduce using rule 97 (LSELECT -> LEXP id .)
    default         reduce using rule 97 (LSELECT -> LEXP id .)
    primary         reduce using rule 97 (LSELECT -> LEXP id .)
    references      reduce using rule 97 (LSELECT -> LEXP id .)
    null            reduce using rule 97 (LSELECT -> LEXP id .)
    asc             reduce using rule 97 (LSELECT -> LEXP id .)
    desc            reduce using rule 97 (LSELECT -> LEXP id .)


state 85

    (98) LSELECT -> LEXP as . id

    id              shift and go to state 153


state 86

    (134) LEXP -> LEXP coma . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 154
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 87

    (202) EXP -> id para . parc
    (203) EXP -> id para . LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    parc            shift and go to state 155
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 156
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 88

    (173) EXP -> EXP mas . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 157
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 89

    (174) EXP -> EXP menos . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 158
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 90

    (175) EXP -> EXP multiplicacion . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 159
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 91

    (176) EXP -> EXP division . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 160
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 92

    (177) EXP -> EXP modulo . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 161
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 93

    (178) EXP -> EXP elevado . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 162
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 94

    (179) EXP -> EXP and . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 163
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 95

    (180) EXP -> EXP or . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 164
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 96

    (181) EXP -> EXP mayor . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 165
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 97

    (182) EXP -> EXP menor . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 166
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 98

    (183) EXP -> EXP mayor_igual . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 167
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 99

    (184) EXP -> EXP menor_igual . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 168
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 100

    (185) EXP -> EXP igual . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 169
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 101

    (186) EXP -> EXP diferente1 . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 170
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 102

    (187) EXP -> EXP diferente2 . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 171
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 103

    (188) EXP -> EXP punto . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 172
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 104

    (215) PREDICADOS -> EXP between . EXP
    (219) PREDICADOS -> EXP between . symetric EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    symetric        shift and go to state 174
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 173
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 105

    (216) PREDICADOS -> EXP in . para LEXP parc

    para            shift and go to state 175


state 106

    (217) PREDICADOS -> EXP not . in para LEXP parc
    (218) PREDICADOS -> EXP not . between EXP
    (220) PREDICADOS -> EXP not . between symetric EXP

    in              shift and go to state 176
    between         shift and go to state 177


state 107

    (221) PREDICADOS -> EXP is . distinct r_from EXP
    (222) PREDICADOS -> EXP is . not distinct r_from EXP
    (223) PREDICADOS -> EXP is . PNULL
    (226) PREDICADOS -> EXP is . true
    (227) PREDICADOS -> EXP is . not true
    (228) PREDICADOS -> EXP is . false
    (229) PREDICADOS -> EXP is . not false
    (230) PREDICADOS -> EXP is . unknown
    (231) PREDICADOS -> EXP is . not unknown
    (77) PNULL -> . not null
    (78) PNULL -> . null

    distinct        shift and go to state 178
    not             shift and go to state 179
    true            shift and go to state 181
    false           shift and go to state 182
    unknown         shift and go to state 183
    null            shift and go to state 62

    PNULL                          shift and go to state 180

state 108

    (224) PREDICADOS -> EXP isnull .

    r_from          reduce using rule 224 (PREDICADOS -> EXP isnull .)
    limit           reduce using rule 224 (PREDICADOS -> EXP isnull .)
    offset          reduce using rule 224 (PREDICADOS -> EXP isnull .)
    union           reduce using rule 224 (PREDICADOS -> EXP isnull .)
    intersect       reduce using rule 224 (PREDICADOS -> EXP isnull .)
    except          reduce using rule 224 (PREDICADOS -> EXP isnull .)
    ptcoma          reduce using rule 224 (PREDICADOS -> EXP isnull .)
    mas             reduce using rule 224 (PREDICADOS -> EXP isnull .)
    menos           reduce using rule 224 (PREDICADOS -> EXP isnull .)
    multiplicacion  reduce using rule 224 (PREDICADOS -> EXP isnull .)
    division        reduce using rule 224 (PREDICADOS -> EXP isnull .)
    modulo          reduce using rule 224 (PREDICADOS -> EXP isnull .)
    elevado         reduce using rule 224 (PREDICADOS -> EXP isnull .)
    and             reduce using rule 224 (PREDICADOS -> EXP isnull .)
    or              reduce using rule 224 (PREDICADOS -> EXP isnull .)
    mayor           reduce using rule 224 (PREDICADOS -> EXP isnull .)
    menor           reduce using rule 224 (PREDICADOS -> EXP isnull .)
    mayor_igual     reduce using rule 224 (PREDICADOS -> EXP isnull .)
    menor_igual     reduce using rule 224 (PREDICADOS -> EXP isnull .)
    igual           reduce using rule 224 (PREDICADOS -> EXP isnull .)
    diferente1      reduce using rule 224 (PREDICADOS -> EXP isnull .)
    diferente2      reduce using rule 224 (PREDICADOS -> EXP isnull .)
    punto           reduce using rule 224 (PREDICADOS -> EXP isnull .)
    between         reduce using rule 224 (PREDICADOS -> EXP isnull .)
    in              reduce using rule 224 (PREDICADOS -> EXP isnull .)
    not             reduce using rule 224 (PREDICADOS -> EXP isnull .)
    is              reduce using rule 224 (PREDICADOS -> EXP isnull .)
    isnull          reduce using rule 224 (PREDICADOS -> EXP isnull .)
    notnull         reduce using rule 224 (PREDICADOS -> EXP isnull .)
    id              reduce using rule 224 (PREDICADOS -> EXP isnull .)
    as              reduce using rule 224 (PREDICADOS -> EXP isnull .)
    coma            reduce using rule 224 (PREDICADOS -> EXP isnull .)
    parc            reduce using rule 224 (PREDICADOS -> EXP isnull .)
    then            reduce using rule 224 (PREDICADOS -> EXP isnull .)
    where           reduce using rule 224 (PREDICADOS -> EXP isnull .)
    group           reduce using rule 224 (PREDICADOS -> EXP isnull .)
    having          reduce using rule 224 (PREDICADOS -> EXP isnull .)
    order           reduce using rule 224 (PREDICADOS -> EXP isnull .)
    end             reduce using rule 224 (PREDICADOS -> EXP isnull .)
    else            reduce using rule 224 (PREDICADOS -> EXP isnull .)
    when            reduce using rule 224 (PREDICADOS -> EXP isnull .)
    constraint      reduce using rule 224 (PREDICADOS -> EXP isnull .)
    default         reduce using rule 224 (PREDICADOS -> EXP isnull .)
    primary         reduce using rule 224 (PREDICADOS -> EXP isnull .)
    references      reduce using rule 224 (PREDICADOS -> EXP isnull .)
    null            reduce using rule 224 (PREDICADOS -> EXP isnull .)
    asc             reduce using rule 224 (PREDICADOS -> EXP isnull .)
    desc            reduce using rule 224 (PREDICADOS -> EXP isnull .)


state 109

    (225) PREDICADOS -> EXP notnull .

    r_from          reduce using rule 225 (PREDICADOS -> EXP notnull .)
    limit           reduce using rule 225 (PREDICADOS -> EXP notnull .)
    offset          reduce using rule 225 (PREDICADOS -> EXP notnull .)
    union           reduce using rule 225 (PREDICADOS -> EXP notnull .)
    intersect       reduce using rule 225 (PREDICADOS -> EXP notnull .)
    except          reduce using rule 225 (PREDICADOS -> EXP notnull .)
    ptcoma          reduce using rule 225 (PREDICADOS -> EXP notnull .)
    mas             reduce using rule 225 (PREDICADOS -> EXP notnull .)
    menos           reduce using rule 225 (PREDICADOS -> EXP notnull .)
    multiplicacion  reduce using rule 225 (PREDICADOS -> EXP notnull .)
    division        reduce using rule 225 (PREDICADOS -> EXP notnull .)
    modulo          reduce using rule 225 (PREDICADOS -> EXP notnull .)
    elevado         reduce using rule 225 (PREDICADOS -> EXP notnull .)
    and             reduce using rule 225 (PREDICADOS -> EXP notnull .)
    or              reduce using rule 225 (PREDICADOS -> EXP notnull .)
    mayor           reduce using rule 225 (PREDICADOS -> EXP notnull .)
    menor           reduce using rule 225 (PREDICADOS -> EXP notnull .)
    mayor_igual     reduce using rule 225 (PREDICADOS -> EXP notnull .)
    menor_igual     reduce using rule 225 (PREDICADOS -> EXP notnull .)
    igual           reduce using rule 225 (PREDICADOS -> EXP notnull .)
    diferente1      reduce using rule 225 (PREDICADOS -> EXP notnull .)
    diferente2      reduce using rule 225 (PREDICADOS -> EXP notnull .)
    punto           reduce using rule 225 (PREDICADOS -> EXP notnull .)
    between         reduce using rule 225 (PREDICADOS -> EXP notnull .)
    in              reduce using rule 225 (PREDICADOS -> EXP notnull .)
    not             reduce using rule 225 (PREDICADOS -> EXP notnull .)
    is              reduce using rule 225 (PREDICADOS -> EXP notnull .)
    isnull          reduce using rule 225 (PREDICADOS -> EXP notnull .)
    notnull         reduce using rule 225 (PREDICADOS -> EXP notnull .)
    id              reduce using rule 225 (PREDICADOS -> EXP notnull .)
    as              reduce using rule 225 (PREDICADOS -> EXP notnull .)
    coma            reduce using rule 225 (PREDICADOS -> EXP notnull .)
    parc            reduce using rule 225 (PREDICADOS -> EXP notnull .)
    then            reduce using rule 225 (PREDICADOS -> EXP notnull .)
    where           reduce using rule 225 (PREDICADOS -> EXP notnull .)
    group           reduce using rule 225 (PREDICADOS -> EXP notnull .)
    having          reduce using rule 225 (PREDICADOS -> EXP notnull .)
    order           reduce using rule 225 (PREDICADOS -> EXP notnull .)
    end             reduce using rule 225 (PREDICADOS -> EXP notnull .)
    else            reduce using rule 225 (PREDICADOS -> EXP notnull .)
    when            reduce using rule 225 (PREDICADOS -> EXP notnull .)
    constraint      reduce using rule 225 (PREDICADOS -> EXP notnull .)
    default         reduce using rule 225 (PREDICADOS -> EXP notnull .)
    primary         reduce using rule 225 (PREDICADOS -> EXP notnull .)
    references      reduce using rule 225 (PREDICADOS -> EXP notnull .)
    null            reduce using rule 225 (PREDICADOS -> EXP notnull .)
    asc             reduce using rule 225 (PREDICADOS -> EXP notnull .)
    desc            reduce using rule 225 (PREDICADOS -> EXP notnull .)


state 110

    (189) EXP -> mas EXP .
    (173) EXP -> EXP . mas EXP
    (174) EXP -> EXP . menos EXP
    (175) EXP -> EXP . multiplicacion EXP
    (176) EXP -> EXP . division EXP
    (177) EXP -> EXP . modulo EXP
    (178) EXP -> EXP . elevado EXP
    (179) EXP -> EXP . and EXP
    (180) EXP -> EXP . or EXP
    (181) EXP -> EXP . mayor EXP
    (182) EXP -> EXP . menor EXP
    (183) EXP -> EXP . mayor_igual EXP
    (184) EXP -> EXP . menor_igual EXP
    (185) EXP -> EXP . igual EXP
    (186) EXP -> EXP . diferente1 EXP
    (187) EXP -> EXP . diferente2 EXP
    (188) EXP -> EXP . punto EXP
    (215) PREDICADOS -> EXP . between EXP
    (216) PREDICADOS -> EXP . in para LEXP parc
    (217) PREDICADOS -> EXP . not in para LEXP parc
    (218) PREDICADOS -> EXP . not between EXP
    (219) PREDICADOS -> EXP . between symetric EXP
    (220) PREDICADOS -> EXP . not between symetric EXP
    (221) PREDICADOS -> EXP . is distinct r_from EXP
    (222) PREDICADOS -> EXP . is not distinct r_from EXP
    (223) PREDICADOS -> EXP . is PNULL
    (224) PREDICADOS -> EXP . isnull
    (225) PREDICADOS -> EXP . notnull
    (226) PREDICADOS -> EXP . is true
    (227) PREDICADOS -> EXP . is not true
    (228) PREDICADOS -> EXP . is false
    (229) PREDICADOS -> EXP . is not false
    (230) PREDICADOS -> EXP . is unknown
    (231) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 189 (EXP -> mas EXP .)
    limit           reduce using rule 189 (EXP -> mas EXP .)
    offset          reduce using rule 189 (EXP -> mas EXP .)
    union           reduce using rule 189 (EXP -> mas EXP .)
    intersect       reduce using rule 189 (EXP -> mas EXP .)
    except          reduce using rule 189 (EXP -> mas EXP .)
    ptcoma          reduce using rule 189 (EXP -> mas EXP .)
    punto           reduce using rule 189 (EXP -> mas EXP .)
    between         reduce using rule 189 (EXP -> mas EXP .)
    in              reduce using rule 189 (EXP -> mas EXP .)
    is              reduce using rule 189 (EXP -> mas EXP .)
    isnull          reduce using rule 189 (EXP -> mas EXP .)
    notnull         reduce using rule 189 (EXP -> mas EXP .)
    id              reduce using rule 189 (EXP -> mas EXP .)
    as              reduce using rule 189 (EXP -> mas EXP .)
    coma            reduce using rule 189 (EXP -> mas EXP .)
    parc            reduce using rule 189 (EXP -> mas EXP .)
    then            reduce using rule 189 (EXP -> mas EXP .)
    where           reduce using rule 189 (EXP -> mas EXP .)
    group           reduce using rule 189 (EXP -> mas EXP .)
    having          reduce using rule 189 (EXP -> mas EXP .)
    order           reduce using rule 189 (EXP -> mas EXP .)
    end             reduce using rule 189 (EXP -> mas EXP .)
    else            reduce using rule 189 (EXP -> mas EXP .)
    when            reduce using rule 189 (EXP -> mas EXP .)
    constraint      reduce using rule 189 (EXP -> mas EXP .)
    default         reduce using rule 189 (EXP -> mas EXP .)
    primary         reduce using rule 189 (EXP -> mas EXP .)
    references      reduce using rule 189 (EXP -> mas EXP .)
    null            reduce using rule 189 (EXP -> mas EXP .)
    asc             reduce using rule 189 (EXP -> mas EXP .)
    desc            reduce using rule 189 (EXP -> mas EXP .)
    mas             shift and go to state 88
    menos           shift and go to state 89
    multiplicacion  shift and go to state 90
    division        shift and go to state 91
    modulo          shift and go to state 92
    elevado         shift and go to state 93
    and             shift and go to state 94
    or              shift and go to state 95
    mayor           shift and go to state 96
    menor           shift and go to state 97
    mayor_igual     shift and go to state 98
    menor_igual     shift and go to state 99
    igual           shift and go to state 100
    diferente1      shift and go to state 101
    diferente2      shift and go to state 102
    not             shift and go to state 106

  ! mas             [ reduce using rule 189 (EXP -> mas EXP .) ]
  ! menos           [ reduce using rule 189 (EXP -> mas EXP .) ]
  ! multiplicacion  [ reduce using rule 189 (EXP -> mas EXP .) ]
  ! division        [ reduce using rule 189 (EXP -> mas EXP .) ]
  ! modulo          [ reduce using rule 189 (EXP -> mas EXP .) ]
  ! elevado         [ reduce using rule 189 (EXP -> mas EXP .) ]
  ! and             [ reduce using rule 189 (EXP -> mas EXP .) ]
  ! or              [ reduce using rule 189 (EXP -> mas EXP .) ]
  ! mayor           [ reduce using rule 189 (EXP -> mas EXP .) ]
  ! menor           [ reduce using rule 189 (EXP -> mas EXP .) ]
  ! mayor_igual     [ reduce using rule 189 (EXP -> mas EXP .) ]
  ! menor_igual     [ reduce using rule 189 (EXP -> mas EXP .) ]
  ! igual           [ reduce using rule 189 (EXP -> mas EXP .) ]
  ! diferente1      [ reduce using rule 189 (EXP -> mas EXP .) ]
  ! diferente2      [ reduce using rule 189 (EXP -> mas EXP .) ]
  ! not             [ reduce using rule 189 (EXP -> mas EXP .) ]
  ! punto           [ shift and go to state 103 ]
  ! between         [ shift and go to state 104 ]
  ! in              [ shift and go to state 105 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 108 ]
  ! notnull         [ shift and go to state 109 ]


state 111

    (190) EXP -> menos EXP .
    (173) EXP -> EXP . mas EXP
    (174) EXP -> EXP . menos EXP
    (175) EXP -> EXP . multiplicacion EXP
    (176) EXP -> EXP . division EXP
    (177) EXP -> EXP . modulo EXP
    (178) EXP -> EXP . elevado EXP
    (179) EXP -> EXP . and EXP
    (180) EXP -> EXP . or EXP
    (181) EXP -> EXP . mayor EXP
    (182) EXP -> EXP . menor EXP
    (183) EXP -> EXP . mayor_igual EXP
    (184) EXP -> EXP . menor_igual EXP
    (185) EXP -> EXP . igual EXP
    (186) EXP -> EXP . diferente1 EXP
    (187) EXP -> EXP . diferente2 EXP
    (188) EXP -> EXP . punto EXP
    (215) PREDICADOS -> EXP . between EXP
    (216) PREDICADOS -> EXP . in para LEXP parc
    (217) PREDICADOS -> EXP . not in para LEXP parc
    (218) PREDICADOS -> EXP . not between EXP
    (219) PREDICADOS -> EXP . between symetric EXP
    (220) PREDICADOS -> EXP . not between symetric EXP
    (221) PREDICADOS -> EXP . is distinct r_from EXP
    (222) PREDICADOS -> EXP . is not distinct r_from EXP
    (223) PREDICADOS -> EXP . is PNULL
    (224) PREDICADOS -> EXP . isnull
    (225) PREDICADOS -> EXP . notnull
    (226) PREDICADOS -> EXP . is true
    (227) PREDICADOS -> EXP . is not true
    (228) PREDICADOS -> EXP . is false
    (229) PREDICADOS -> EXP . is not false
    (230) PREDICADOS -> EXP . is unknown
    (231) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 190 (EXP -> menos EXP .)
    limit           reduce using rule 190 (EXP -> menos EXP .)
    offset          reduce using rule 190 (EXP -> menos EXP .)
    union           reduce using rule 190 (EXP -> menos EXP .)
    intersect       reduce using rule 190 (EXP -> menos EXP .)
    except          reduce using rule 190 (EXP -> menos EXP .)
    ptcoma          reduce using rule 190 (EXP -> menos EXP .)
    punto           reduce using rule 190 (EXP -> menos EXP .)
    between         reduce using rule 190 (EXP -> menos EXP .)
    in              reduce using rule 190 (EXP -> menos EXP .)
    is              reduce using rule 190 (EXP -> menos EXP .)
    isnull          reduce using rule 190 (EXP -> menos EXP .)
    notnull         reduce using rule 190 (EXP -> menos EXP .)
    id              reduce using rule 190 (EXP -> menos EXP .)
    as              reduce using rule 190 (EXP -> menos EXP .)
    coma            reduce using rule 190 (EXP -> menos EXP .)
    parc            reduce using rule 190 (EXP -> menos EXP .)
    then            reduce using rule 190 (EXP -> menos EXP .)
    where           reduce using rule 190 (EXP -> menos EXP .)
    group           reduce using rule 190 (EXP -> menos EXP .)
    having          reduce using rule 190 (EXP -> menos EXP .)
    order           reduce using rule 190 (EXP -> menos EXP .)
    end             reduce using rule 190 (EXP -> menos EXP .)
    else            reduce using rule 190 (EXP -> menos EXP .)
    when            reduce using rule 190 (EXP -> menos EXP .)
    constraint      reduce using rule 190 (EXP -> menos EXP .)
    default         reduce using rule 190 (EXP -> menos EXP .)
    primary         reduce using rule 190 (EXP -> menos EXP .)
    references      reduce using rule 190 (EXP -> menos EXP .)
    null            reduce using rule 190 (EXP -> menos EXP .)
    asc             reduce using rule 190 (EXP -> menos EXP .)
    desc            reduce using rule 190 (EXP -> menos EXP .)
    mas             shift and go to state 88
    menos           shift and go to state 89
    multiplicacion  shift and go to state 90
    division        shift and go to state 91
    modulo          shift and go to state 92
    elevado         shift and go to state 93
    and             shift and go to state 94
    or              shift and go to state 95
    mayor           shift and go to state 96
    menor           shift and go to state 97
    mayor_igual     shift and go to state 98
    menor_igual     shift and go to state 99
    igual           shift and go to state 100
    diferente1      shift and go to state 101
    diferente2      shift and go to state 102
    not             shift and go to state 106

  ! mas             [ reduce using rule 190 (EXP -> menos EXP .) ]
  ! menos           [ reduce using rule 190 (EXP -> menos EXP .) ]
  ! multiplicacion  [ reduce using rule 190 (EXP -> menos EXP .) ]
  ! division        [ reduce using rule 190 (EXP -> menos EXP .) ]
  ! modulo          [ reduce using rule 190 (EXP -> menos EXP .) ]
  ! elevado         [ reduce using rule 190 (EXP -> menos EXP .) ]
  ! and             [ reduce using rule 190 (EXP -> menos EXP .) ]
  ! or              [ reduce using rule 190 (EXP -> menos EXP .) ]
  ! mayor           [ reduce using rule 190 (EXP -> menos EXP .) ]
  ! menor           [ reduce using rule 190 (EXP -> menos EXP .) ]
  ! mayor_igual     [ reduce using rule 190 (EXP -> menos EXP .) ]
  ! menor_igual     [ reduce using rule 190 (EXP -> menos EXP .) ]
  ! igual           [ reduce using rule 190 (EXP -> menos EXP .) ]
  ! diferente1      [ reduce using rule 190 (EXP -> menos EXP .) ]
  ! diferente2      [ reduce using rule 190 (EXP -> menos EXP .) ]
  ! not             [ reduce using rule 190 (EXP -> menos EXP .) ]
  ! punto           [ shift and go to state 103 ]
  ! between         [ shift and go to state 104 ]
  ! in              [ shift and go to state 105 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 108 ]
  ! notnull         [ shift and go to state 109 ]


state 112

    (191) EXP -> not EXP .
    (173) EXP -> EXP . mas EXP
    (174) EXP -> EXP . menos EXP
    (175) EXP -> EXP . multiplicacion EXP
    (176) EXP -> EXP . division EXP
    (177) EXP -> EXP . modulo EXP
    (178) EXP -> EXP . elevado EXP
    (179) EXP -> EXP . and EXP
    (180) EXP -> EXP . or EXP
    (181) EXP -> EXP . mayor EXP
    (182) EXP -> EXP . menor EXP
    (183) EXP -> EXP . mayor_igual EXP
    (184) EXP -> EXP . menor_igual EXP
    (185) EXP -> EXP . igual EXP
    (186) EXP -> EXP . diferente1 EXP
    (187) EXP -> EXP . diferente2 EXP
    (188) EXP -> EXP . punto EXP
    (215) PREDICADOS -> EXP . between EXP
    (216) PREDICADOS -> EXP . in para LEXP parc
    (217) PREDICADOS -> EXP . not in para LEXP parc
    (218) PREDICADOS -> EXP . not between EXP
    (219) PREDICADOS -> EXP . between symetric EXP
    (220) PREDICADOS -> EXP . not between symetric EXP
    (221) PREDICADOS -> EXP . is distinct r_from EXP
    (222) PREDICADOS -> EXP . is not distinct r_from EXP
    (223) PREDICADOS -> EXP . is PNULL
    (224) PREDICADOS -> EXP . isnull
    (225) PREDICADOS -> EXP . notnull
    (226) PREDICADOS -> EXP . is true
    (227) PREDICADOS -> EXP . is not true
    (228) PREDICADOS -> EXP . is false
    (229) PREDICADOS -> EXP . is not false
    (230) PREDICADOS -> EXP . is unknown
    (231) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 191 (EXP -> not EXP .)
    limit           reduce using rule 191 (EXP -> not EXP .)
    offset          reduce using rule 191 (EXP -> not EXP .)
    union           reduce using rule 191 (EXP -> not EXP .)
    intersect       reduce using rule 191 (EXP -> not EXP .)
    except          reduce using rule 191 (EXP -> not EXP .)
    ptcoma          reduce using rule 191 (EXP -> not EXP .)
    mas             reduce using rule 191 (EXP -> not EXP .)
    menos           reduce using rule 191 (EXP -> not EXP .)
    multiplicacion  reduce using rule 191 (EXP -> not EXP .)
    division        reduce using rule 191 (EXP -> not EXP .)
    modulo          reduce using rule 191 (EXP -> not EXP .)
    elevado         reduce using rule 191 (EXP -> not EXP .)
    mayor           reduce using rule 191 (EXP -> not EXP .)
    menor           reduce using rule 191 (EXP -> not EXP .)
    mayor_igual     reduce using rule 191 (EXP -> not EXP .)
    menor_igual     reduce using rule 191 (EXP -> not EXP .)
    igual           reduce using rule 191 (EXP -> not EXP .)
    diferente1      reduce using rule 191 (EXP -> not EXP .)
    diferente2      reduce using rule 191 (EXP -> not EXP .)
    punto           reduce using rule 191 (EXP -> not EXP .)
    between         reduce using rule 191 (EXP -> not EXP .)
    in              reduce using rule 191 (EXP -> not EXP .)
    is              reduce using rule 191 (EXP -> not EXP .)
    isnull          reduce using rule 191 (EXP -> not EXP .)
    notnull         reduce using rule 191 (EXP -> not EXP .)
    id              reduce using rule 191 (EXP -> not EXP .)
    as              reduce using rule 191 (EXP -> not EXP .)
    coma            reduce using rule 191 (EXP -> not EXP .)
    parc            reduce using rule 191 (EXP -> not EXP .)
    then            reduce using rule 191 (EXP -> not EXP .)
    where           reduce using rule 191 (EXP -> not EXP .)
    group           reduce using rule 191 (EXP -> not EXP .)
    having          reduce using rule 191 (EXP -> not EXP .)
    order           reduce using rule 191 (EXP -> not EXP .)
    end             reduce using rule 191 (EXP -> not EXP .)
    else            reduce using rule 191 (EXP -> not EXP .)
    when            reduce using rule 191 (EXP -> not EXP .)
    constraint      reduce using rule 191 (EXP -> not EXP .)
    default         reduce using rule 191 (EXP -> not EXP .)
    primary         reduce using rule 191 (EXP -> not EXP .)
    references      reduce using rule 191 (EXP -> not EXP .)
    null            reduce using rule 191 (EXP -> not EXP .)
    asc             reduce using rule 191 (EXP -> not EXP .)
    desc            reduce using rule 191 (EXP -> not EXP .)
    and             shift and go to state 94
    or              shift and go to state 95
    not             shift and go to state 106

  ! and             [ reduce using rule 191 (EXP -> not EXP .) ]
  ! or              [ reduce using rule 191 (EXP -> not EXP .) ]
  ! not             [ reduce using rule 191 (EXP -> not EXP .) ]
  ! mas             [ shift and go to state 88 ]
  ! menos           [ shift and go to state 89 ]
  ! multiplicacion  [ shift and go to state 90 ]
  ! division        [ shift and go to state 91 ]
  ! modulo          [ shift and go to state 92 ]
  ! elevado         [ shift and go to state 93 ]
  ! mayor           [ shift and go to state 96 ]
  ! menor           [ shift and go to state 97 ]
  ! mayor_igual     [ shift and go to state 98 ]
  ! menor_igual     [ shift and go to state 99 ]
  ! igual           [ shift and go to state 100 ]
  ! diferente1      [ shift and go to state 101 ]
  ! diferente2      [ shift and go to state 102 ]
  ! punto           [ shift and go to state 103 ]
  ! between         [ shift and go to state 104 ]
  ! in              [ shift and go to state 105 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 108 ]
  ! notnull         [ shift and go to state 109 ]


state 113

    (77) PNULL -> not null .
    (78) PNULL -> null .

  ! reduce/reduce conflict for r_from resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for limit resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for offset resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for union resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for intersect resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for except resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for ptcoma resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for mas resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for menos resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for multiplicacion resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for division resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for modulo resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for elevado resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for and resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for or resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for mayor resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for menor resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for mayor_igual resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for menor_igual resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for igual resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for diferente1 resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for diferente2 resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for punto resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for between resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for in resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for not resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for is resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for isnull resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for notnull resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for id resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for as resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for coma resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for parc resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for then resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for where resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for group resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for having resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for order resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for end resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for else resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for when resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for constraint resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for default resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for primary resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for references resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for null resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for asc resolved using rule 77 (PNULL -> not null .)
  ! reduce/reduce conflict for desc resolved using rule 77 (PNULL -> not null .)
    r_from          reduce using rule 77 (PNULL -> not null .)
    limit           reduce using rule 77 (PNULL -> not null .)
    offset          reduce using rule 77 (PNULL -> not null .)
    union           reduce using rule 77 (PNULL -> not null .)
    intersect       reduce using rule 77 (PNULL -> not null .)
    except          reduce using rule 77 (PNULL -> not null .)
    ptcoma          reduce using rule 77 (PNULL -> not null .)
    mas             reduce using rule 77 (PNULL -> not null .)
    menos           reduce using rule 77 (PNULL -> not null .)
    multiplicacion  reduce using rule 77 (PNULL -> not null .)
    division        reduce using rule 77 (PNULL -> not null .)
    modulo          reduce using rule 77 (PNULL -> not null .)
    elevado         reduce using rule 77 (PNULL -> not null .)
    and             reduce using rule 77 (PNULL -> not null .)
    or              reduce using rule 77 (PNULL -> not null .)
    mayor           reduce using rule 77 (PNULL -> not null .)
    menor           reduce using rule 77 (PNULL -> not null .)
    mayor_igual     reduce using rule 77 (PNULL -> not null .)
    menor_igual     reduce using rule 77 (PNULL -> not null .)
    igual           reduce using rule 77 (PNULL -> not null .)
    diferente1      reduce using rule 77 (PNULL -> not null .)
    diferente2      reduce using rule 77 (PNULL -> not null .)
    punto           reduce using rule 77 (PNULL -> not null .)
    between         reduce using rule 77 (PNULL -> not null .)
    in              reduce using rule 77 (PNULL -> not null .)
    not             reduce using rule 77 (PNULL -> not null .)
    is              reduce using rule 77 (PNULL -> not null .)
    isnull          reduce using rule 77 (PNULL -> not null .)
    notnull         reduce using rule 77 (PNULL -> not null .)
    id              reduce using rule 77 (PNULL -> not null .)
    as              reduce using rule 77 (PNULL -> not null .)
    coma            reduce using rule 77 (PNULL -> not null .)
    parc            reduce using rule 77 (PNULL -> not null .)
    then            reduce using rule 77 (PNULL -> not null .)
    where           reduce using rule 77 (PNULL -> not null .)
    group           reduce using rule 77 (PNULL -> not null .)
    having          reduce using rule 77 (PNULL -> not null .)
    order           reduce using rule 77 (PNULL -> not null .)
    end             reduce using rule 77 (PNULL -> not null .)
    else            reduce using rule 77 (PNULL -> not null .)
    when            reduce using rule 77 (PNULL -> not null .)
    constraint      reduce using rule 77 (PNULL -> not null .)
    default         reduce using rule 77 (PNULL -> not null .)
    primary         reduce using rule 77 (PNULL -> not null .)
    references      reduce using rule 77 (PNULL -> not null .)
    null            reduce using rule 77 (PNULL -> not null .)
    asc             reduce using rule 77 (PNULL -> not null .)
    desc            reduce using rule 77 (PNULL -> not null .)

  ! r_from          [ reduce using rule 78 (PNULL -> null .) ]
  ! limit           [ reduce using rule 78 (PNULL -> null .) ]
  ! offset          [ reduce using rule 78 (PNULL -> null .) ]
  ! union           [ reduce using rule 78 (PNULL -> null .) ]
  ! intersect       [ reduce using rule 78 (PNULL -> null .) ]
  ! except          [ reduce using rule 78 (PNULL -> null .) ]
  ! ptcoma          [ reduce using rule 78 (PNULL -> null .) ]
  ! mas             [ reduce using rule 78 (PNULL -> null .) ]
  ! menos           [ reduce using rule 78 (PNULL -> null .) ]
  ! multiplicacion  [ reduce using rule 78 (PNULL -> null .) ]
  ! division        [ reduce using rule 78 (PNULL -> null .) ]
  ! modulo          [ reduce using rule 78 (PNULL -> null .) ]
  ! elevado         [ reduce using rule 78 (PNULL -> null .) ]
  ! and             [ reduce using rule 78 (PNULL -> null .) ]
  ! or              [ reduce using rule 78 (PNULL -> null .) ]
  ! mayor           [ reduce using rule 78 (PNULL -> null .) ]
  ! menor           [ reduce using rule 78 (PNULL -> null .) ]
  ! mayor_igual     [ reduce using rule 78 (PNULL -> null .) ]
  ! menor_igual     [ reduce using rule 78 (PNULL -> null .) ]
  ! igual           [ reduce using rule 78 (PNULL -> null .) ]
  ! diferente1      [ reduce using rule 78 (PNULL -> null .) ]
  ! diferente2      [ reduce using rule 78 (PNULL -> null .) ]
  ! punto           [ reduce using rule 78 (PNULL -> null .) ]
  ! between         [ reduce using rule 78 (PNULL -> null .) ]
  ! in              [ reduce using rule 78 (PNULL -> null .) ]
  ! not             [ reduce using rule 78 (PNULL -> null .) ]
  ! is              [ reduce using rule 78 (PNULL -> null .) ]
  ! isnull          [ reduce using rule 78 (PNULL -> null .) ]
  ! notnull         [ reduce using rule 78 (PNULL -> null .) ]
  ! id              [ reduce using rule 78 (PNULL -> null .) ]
  ! as              [ reduce using rule 78 (PNULL -> null .) ]
  ! coma            [ reduce using rule 78 (PNULL -> null .) ]
  ! parc            [ reduce using rule 78 (PNULL -> null .) ]
  ! then            [ reduce using rule 78 (PNULL -> null .) ]
  ! where           [ reduce using rule 78 (PNULL -> null .) ]
  ! group           [ reduce using rule 78 (PNULL -> null .) ]
  ! having          [ reduce using rule 78 (PNULL -> null .) ]
  ! order           [ reduce using rule 78 (PNULL -> null .) ]
  ! end             [ reduce using rule 78 (PNULL -> null .) ]
  ! else            [ reduce using rule 78 (PNULL -> null .) ]
  ! when            [ reduce using rule 78 (PNULL -> null .) ]
  ! constraint      [ reduce using rule 78 (PNULL -> null .) ]
  ! default         [ reduce using rule 78 (PNULL -> null .) ]
  ! primary         [ reduce using rule 78 (PNULL -> null .) ]
  ! references      [ reduce using rule 78 (PNULL -> null .) ]
  ! null            [ reduce using rule 78 (PNULL -> null .) ]
  ! asc             [ reduce using rule 78 (PNULL -> null .) ]
  ! desc            [ reduce using rule 78 (PNULL -> null .) ]


state 114

    (192) EXP -> para EXP . parc
    (173) EXP -> EXP . mas EXP
    (174) EXP -> EXP . menos EXP
    (175) EXP -> EXP . multiplicacion EXP
    (176) EXP -> EXP . division EXP
    (177) EXP -> EXP . modulo EXP
    (178) EXP -> EXP . elevado EXP
    (179) EXP -> EXP . and EXP
    (180) EXP -> EXP . or EXP
    (181) EXP -> EXP . mayor EXP
    (182) EXP -> EXP . menor EXP
    (183) EXP -> EXP . mayor_igual EXP
    (184) EXP -> EXP . menor_igual EXP
    (185) EXP -> EXP . igual EXP
    (186) EXP -> EXP . diferente1 EXP
    (187) EXP -> EXP . diferente2 EXP
    (188) EXP -> EXP . punto EXP
    (215) PREDICADOS -> EXP . between EXP
    (216) PREDICADOS -> EXP . in para LEXP parc
    (217) PREDICADOS -> EXP . not in para LEXP parc
    (218) PREDICADOS -> EXP . not between EXP
    (219) PREDICADOS -> EXP . between symetric EXP
    (220) PREDICADOS -> EXP . not between symetric EXP
    (221) PREDICADOS -> EXP . is distinct r_from EXP
    (222) PREDICADOS -> EXP . is not distinct r_from EXP
    (223) PREDICADOS -> EXP . is PNULL
    (224) PREDICADOS -> EXP . isnull
    (225) PREDICADOS -> EXP . notnull
    (226) PREDICADOS -> EXP . is true
    (227) PREDICADOS -> EXP . is not true
    (228) PREDICADOS -> EXP . is false
    (229) PREDICADOS -> EXP . is not false
    (230) PREDICADOS -> EXP . is unknown
    (231) PREDICADOS -> EXP . is not unknown

    parc            shift and go to state 184
    mas             shift and go to state 88
    menos           shift and go to state 89
    multiplicacion  shift and go to state 90
    division        shift and go to state 91
    modulo          shift and go to state 92
    elevado         shift and go to state 93
    and             shift and go to state 94
    or              shift and go to state 95
    mayor           shift and go to state 96
    menor           shift and go to state 97
    mayor_igual     shift and go to state 98
    menor_igual     shift and go to state 99
    igual           shift and go to state 100
    diferente1      shift and go to state 101
    diferente2      shift and go to state 102
    punto           shift and go to state 103
    between         shift and go to state 104
    in              shift and go to state 105
    not             shift and go to state 106
    is              shift and go to state 107
    isnull          shift and go to state 108
    notnull         shift and go to state 109


state 115

    (210) EXP -> cadena like . cadena

    cadena          shift and go to state 185


state 116

    (211) EXP -> cadena not . like cadena

    like            shift and go to state 186


state 117

    (204) EXP -> extract para . FIELDS r_from timestamp cadena parc
    (167) FIELDS -> . year
    (168) FIELDS -> . month
    (169) FIELDS -> . day
    (170) FIELDS -> . hour
    (171) FIELDS -> . minute
    (172) FIELDS -> . second

    year            shift and go to state 188
    month           shift and go to state 189
    day             shift and go to state 190
    hour            shift and go to state 191
    minute          shift and go to state 192
    second          shift and go to state 193

    FIELDS                         shift and go to state 187

state 118

    (207) EXP -> timestamp cadena .

    r_from          reduce using rule 207 (EXP -> timestamp cadena .)
    limit           reduce using rule 207 (EXP -> timestamp cadena .)
    offset          reduce using rule 207 (EXP -> timestamp cadena .)
    union           reduce using rule 207 (EXP -> timestamp cadena .)
    intersect       reduce using rule 207 (EXP -> timestamp cadena .)
    except          reduce using rule 207 (EXP -> timestamp cadena .)
    ptcoma          reduce using rule 207 (EXP -> timestamp cadena .)
    mas             reduce using rule 207 (EXP -> timestamp cadena .)
    menos           reduce using rule 207 (EXP -> timestamp cadena .)
    multiplicacion  reduce using rule 207 (EXP -> timestamp cadena .)
    division        reduce using rule 207 (EXP -> timestamp cadena .)
    modulo          reduce using rule 207 (EXP -> timestamp cadena .)
    elevado         reduce using rule 207 (EXP -> timestamp cadena .)
    and             reduce using rule 207 (EXP -> timestamp cadena .)
    or              reduce using rule 207 (EXP -> timestamp cadena .)
    mayor           reduce using rule 207 (EXP -> timestamp cadena .)
    menor           reduce using rule 207 (EXP -> timestamp cadena .)
    mayor_igual     reduce using rule 207 (EXP -> timestamp cadena .)
    menor_igual     reduce using rule 207 (EXP -> timestamp cadena .)
    igual           reduce using rule 207 (EXP -> timestamp cadena .)
    diferente1      reduce using rule 207 (EXP -> timestamp cadena .)
    diferente2      reduce using rule 207 (EXP -> timestamp cadena .)
    punto           reduce using rule 207 (EXP -> timestamp cadena .)
    between         reduce using rule 207 (EXP -> timestamp cadena .)
    in              reduce using rule 207 (EXP -> timestamp cadena .)
    not             reduce using rule 207 (EXP -> timestamp cadena .)
    is              reduce using rule 207 (EXP -> timestamp cadena .)
    isnull          reduce using rule 207 (EXP -> timestamp cadena .)
    notnull         reduce using rule 207 (EXP -> timestamp cadena .)
    id              reduce using rule 207 (EXP -> timestamp cadena .)
    as              reduce using rule 207 (EXP -> timestamp cadena .)
    coma            reduce using rule 207 (EXP -> timestamp cadena .)
    parc            reduce using rule 207 (EXP -> timestamp cadena .)
    then            reduce using rule 207 (EXP -> timestamp cadena .)
    where           reduce using rule 207 (EXP -> timestamp cadena .)
    group           reduce using rule 207 (EXP -> timestamp cadena .)
    having          reduce using rule 207 (EXP -> timestamp cadena .)
    order           reduce using rule 207 (EXP -> timestamp cadena .)
    end             reduce using rule 207 (EXP -> timestamp cadena .)
    else            reduce using rule 207 (EXP -> timestamp cadena .)
    when            reduce using rule 207 (EXP -> timestamp cadena .)
    constraint      reduce using rule 207 (EXP -> timestamp cadena .)
    default         reduce using rule 207 (EXP -> timestamp cadena .)
    primary         reduce using rule 207 (EXP -> timestamp cadena .)
    references      reduce using rule 207 (EXP -> timestamp cadena .)
    null            reduce using rule 207 (EXP -> timestamp cadena .)
    asc             reduce using rule 207 (EXP -> timestamp cadena .)
    desc            reduce using rule 207 (EXP -> timestamp cadena .)


state 119

    (208) EXP -> interval cadena .

    r_from          reduce using rule 208 (EXP -> interval cadena .)
    limit           reduce using rule 208 (EXP -> interval cadena .)
    offset          reduce using rule 208 (EXP -> interval cadena .)
    union           reduce using rule 208 (EXP -> interval cadena .)
    intersect       reduce using rule 208 (EXP -> interval cadena .)
    except          reduce using rule 208 (EXP -> interval cadena .)
    ptcoma          reduce using rule 208 (EXP -> interval cadena .)
    mas             reduce using rule 208 (EXP -> interval cadena .)
    menos           reduce using rule 208 (EXP -> interval cadena .)
    multiplicacion  reduce using rule 208 (EXP -> interval cadena .)
    division        reduce using rule 208 (EXP -> interval cadena .)
    modulo          reduce using rule 208 (EXP -> interval cadena .)
    elevado         reduce using rule 208 (EXP -> interval cadena .)
    and             reduce using rule 208 (EXP -> interval cadena .)
    or              reduce using rule 208 (EXP -> interval cadena .)
    mayor           reduce using rule 208 (EXP -> interval cadena .)
    menor           reduce using rule 208 (EXP -> interval cadena .)
    mayor_igual     reduce using rule 208 (EXP -> interval cadena .)
    menor_igual     reduce using rule 208 (EXP -> interval cadena .)
    igual           reduce using rule 208 (EXP -> interval cadena .)
    diferente1      reduce using rule 208 (EXP -> interval cadena .)
    diferente2      reduce using rule 208 (EXP -> interval cadena .)
    punto           reduce using rule 208 (EXP -> interval cadena .)
    between         reduce using rule 208 (EXP -> interval cadena .)
    in              reduce using rule 208 (EXP -> interval cadena .)
    not             reduce using rule 208 (EXP -> interval cadena .)
    is              reduce using rule 208 (EXP -> interval cadena .)
    isnull          reduce using rule 208 (EXP -> interval cadena .)
    notnull         reduce using rule 208 (EXP -> interval cadena .)
    id              reduce using rule 208 (EXP -> interval cadena .)
    as              reduce using rule 208 (EXP -> interval cadena .)
    coma            reduce using rule 208 (EXP -> interval cadena .)
    parc            reduce using rule 208 (EXP -> interval cadena .)
    then            reduce using rule 208 (EXP -> interval cadena .)
    where           reduce using rule 208 (EXP -> interval cadena .)
    group           reduce using rule 208 (EXP -> interval cadena .)
    having          reduce using rule 208 (EXP -> interval cadena .)
    order           reduce using rule 208 (EXP -> interval cadena .)
    end             reduce using rule 208 (EXP -> interval cadena .)
    else            reduce using rule 208 (EXP -> interval cadena .)
    when            reduce using rule 208 (EXP -> interval cadena .)
    constraint      reduce using rule 208 (EXP -> interval cadena .)
    default         reduce using rule 208 (EXP -> interval cadena .)
    primary         reduce using rule 208 (EXP -> interval cadena .)
    references      reduce using rule 208 (EXP -> interval cadena .)
    null            reduce using rule 208 (EXP -> interval cadena .)
    asc             reduce using rule 208 (EXP -> interval cadena .)
    desc            reduce using rule 208 (EXP -> interval cadena .)


state 120

    (212) EXP -> any para . LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 194
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 121

    (213) EXP -> all para . LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 195
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 122

    (214) EXP -> some para . LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 196
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 123

    (61) CREATETABLE -> create table id . para LDEF parc ptcoma
    (62) CREATETABLE -> create table id . para LDEF parc HERENCIA ptcoma

    para            shift and go to state 197


state 124

    (84) CREATETYPE -> create type id . as enum para LEXP parc

    as              shift and go to state 198


state 125

    (48) CREATEDB -> create RD if . not exist id
    (49) CREATEDB -> create RD if . not exist id OPCCDB

    not             shift and go to state 199


state 126

    (50) CREATEDB -> create RD id .
    (51) CREATEDB -> create RD id . OPCCDB
    (52) OPCCDB -> . PROPIETARIO
    (53) OPCCDB -> . MODO
    (54) OPCCDB -> . PROPIETARIO MODO
    (57) PROPIETARIO -> . owner igual id
    (58) PROPIETARIO -> . owner id
    (59) MODO -> . mode igual int
    (60) MODO -> . mode int

    ptcoma          reduce using rule 50 (CREATEDB -> create RD id .)
    owner           shift and go to state 203
    mode            shift and go to state 204

    OPCCDB                         shift and go to state 200
    PROPIETARIO                    shift and go to state 201
    MODO                           shift and go to state 202

state 127

    (55) RD -> or replace . databases

    databases       shift and go to state 205


state 128

    (127) UPDATE -> update id set . LCAMPOS where LEXP
    (128) LCAMPOS -> . LCAMPOS id igual EXP
    (129) LCAMPOS -> . id igual EXP
    (130) LCAMPOS -> . id igual default

    id              shift and go to state 206

    LCAMPOS                        shift and go to state 207

state 129

    (131) DELETE -> delete r_from id . where LEXP
    (132) DELETE -> delete r_from id .

    where           shift and go to state 208
    ptcoma          reduce using rule 132 (DELETE -> delete r_from id .)


state 130

    (25) ALTER -> alter databases id . RO
    (27) RO -> . rename to id
    (28) RO -> . owner to id

    rename          shift and go to state 210
    owner           shift and go to state 211

    RO                             shift and go to state 209

state 131

    (29) altertable -> alter table id . OP
    (30) OP -> . add ADD
    (31) OP -> . drop column ALTERDROP
    (32) OP -> . alter column id set not null
    (33) OP -> . alter column id set null
    (34) OP -> . listaalc
    (35) OP -> . drop ALTERDROP
    (36) OP -> . rename column id to id
    (37) listaalc -> . listaalc coma alc
    (38) listaalc -> . alc
    (39) alc -> . alter column id type TIPO

    add             shift and go to state 214
    drop            shift and go to state 215
    alter           shift and go to state 212
    rename          shift and go to state 217

    OP                             shift and go to state 213
    listaalc                       shift and go to state 216
    alc                            shift and go to state 218

state 132

    (22) DROP -> drop table id .

    ptcoma          reduce using rule 22 (DROP -> drop table id .)


state 133

    (23) DROP -> drop databases if . exist id

    exist           shift and go to state 219


state 134

    (24) DROP -> drop databases id .

    ptcoma          reduce using rule 24 (DROP -> drop databases id .)


state 135

    (21) INSERT -> insert into id . values para LEXP parc

    values          shift and go to state 220


state 136

    (15) CASE -> case LISTAWHEN ELSE . end

    end             shift and go to state 221


state 137

    (16) CASE -> case LISTAWHEN end .

    select          reduce using rule 16 (CASE -> case LISTAWHEN end .)
    create          reduce using rule 16 (CASE -> case LISTAWHEN end .)
    update          reduce using rule 16 (CASE -> case LISTAWHEN end .)
    delete          reduce using rule 16 (CASE -> case LISTAWHEN end .)
    alter           reduce using rule 16 (CASE -> case LISTAWHEN end .)
    drop            reduce using rule 16 (CASE -> case LISTAWHEN end .)
    insert          reduce using rule 16 (CASE -> case LISTAWHEN end .)
    case            reduce using rule 16 (CASE -> case LISTAWHEN end .)
    show            reduce using rule 16 (CASE -> case LISTAWHEN end .)
    $end            reduce using rule 16 (CASE -> case LISTAWHEN end .)
    r_from          reduce using rule 16 (CASE -> case LISTAWHEN end .)
    limit           reduce using rule 16 (CASE -> case LISTAWHEN end .)
    offset          reduce using rule 16 (CASE -> case LISTAWHEN end .)
    union           reduce using rule 16 (CASE -> case LISTAWHEN end .)
    intersect       reduce using rule 16 (CASE -> case LISTAWHEN end .)
    except          reduce using rule 16 (CASE -> case LISTAWHEN end .)
    ptcoma          reduce using rule 16 (CASE -> case LISTAWHEN end .)
    mas             reduce using rule 16 (CASE -> case LISTAWHEN end .)
    menos           reduce using rule 16 (CASE -> case LISTAWHEN end .)
    multiplicacion  reduce using rule 16 (CASE -> case LISTAWHEN end .)
    division        reduce using rule 16 (CASE -> case LISTAWHEN end .)
    modulo          reduce using rule 16 (CASE -> case LISTAWHEN end .)
    elevado         reduce using rule 16 (CASE -> case LISTAWHEN end .)
    and             reduce using rule 16 (CASE -> case LISTAWHEN end .)
    or              reduce using rule 16 (CASE -> case LISTAWHEN end .)
    mayor           reduce using rule 16 (CASE -> case LISTAWHEN end .)
    menor           reduce using rule 16 (CASE -> case LISTAWHEN end .)
    mayor_igual     reduce using rule 16 (CASE -> case LISTAWHEN end .)
    menor_igual     reduce using rule 16 (CASE -> case LISTAWHEN end .)
    igual           reduce using rule 16 (CASE -> case LISTAWHEN end .)
    diferente1      reduce using rule 16 (CASE -> case LISTAWHEN end .)
    diferente2      reduce using rule 16 (CASE -> case LISTAWHEN end .)
    punto           reduce using rule 16 (CASE -> case LISTAWHEN end .)
    between         reduce using rule 16 (CASE -> case LISTAWHEN end .)
    in              reduce using rule 16 (CASE -> case LISTAWHEN end .)
    not             reduce using rule 16 (CASE -> case LISTAWHEN end .)
    is              reduce using rule 16 (CASE -> case LISTAWHEN end .)
    isnull          reduce using rule 16 (CASE -> case LISTAWHEN end .)
    notnull         reduce using rule 16 (CASE -> case LISTAWHEN end .)
    id              reduce using rule 16 (CASE -> case LISTAWHEN end .)
    as              reduce using rule 16 (CASE -> case LISTAWHEN end .)
    coma            reduce using rule 16 (CASE -> case LISTAWHEN end .)
    parc            reduce using rule 16 (CASE -> case LISTAWHEN end .)
    then            reduce using rule 16 (CASE -> case LISTAWHEN end .)
    where           reduce using rule 16 (CASE -> case LISTAWHEN end .)
    group           reduce using rule 16 (CASE -> case LISTAWHEN end .)
    having          reduce using rule 16 (CASE -> case LISTAWHEN end .)
    order           reduce using rule 16 (CASE -> case LISTAWHEN end .)
    end             reduce using rule 16 (CASE -> case LISTAWHEN end .)
    else            reduce using rule 16 (CASE -> case LISTAWHEN end .)
    when            reduce using rule 16 (CASE -> case LISTAWHEN end .)
    constraint      reduce using rule 16 (CASE -> case LISTAWHEN end .)
    default         reduce using rule 16 (CASE -> case LISTAWHEN end .)
    primary         reduce using rule 16 (CASE -> case LISTAWHEN end .)
    references      reduce using rule 16 (CASE -> case LISTAWHEN end .)
    null            reduce using rule 16 (CASE -> case LISTAWHEN end .)
    asc             reduce using rule 16 (CASE -> case LISTAWHEN end .)
    desc            reduce using rule 16 (CASE -> case LISTAWHEN end .)


state 138

    (17) LISTAWHEN -> LISTAWHEN WHEN .

    end             reduce using rule 17 (LISTAWHEN -> LISTAWHEN WHEN .)
    else            reduce using rule 17 (LISTAWHEN -> LISTAWHEN WHEN .)
    when            reduce using rule 17 (LISTAWHEN -> LISTAWHEN WHEN .)


state 139

    (20) ELSE -> else . LEXP
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 222
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 140

    (19) WHEN -> when LEXP . then LEXP
    (134) LEXP -> LEXP . coma EXP

    then            shift and go to state 223
    coma            shift and go to state 86


state 141

    (85) SELECT -> select distinct LSELECT r_from . LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (100) LFROM -> . LFROM coma FROM
    (101) LFROM -> . FROM
    (102) FROM -> . LEXP
    (103) FROM -> . LEXP as id
    (104) FROM -> . LEXP id
    (105) FROM -> . multiplicacion
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    multiplicacion  shift and go to state 145
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LFROM                          shift and go to state 224
    FROM                           shift and go to state 143
    LEXP                           shift and go to state 144
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 142

    (86) SELECT -> select LSELECT r_from LFROM . WHERE GROUP HAVING ORDER LIMIT COMBINING
    (100) LFROM -> LFROM . coma FROM
    (106) WHERE -> . where LEXP
    (107) WHERE -> . where EXIST
    (108) WHERE -> . union LEXP
    (109) WHERE -> . union all LEXP
    (110) WHERE -> .

  ! shift/reduce conflict for union resolved as shift
  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for where resolved as shift
    coma            shift and go to state 226
    where           shift and go to state 227
    union           shift and go to state 228
    r_from          reduce using rule 110 (WHERE -> .)
    limit           reduce using rule 110 (WHERE -> .)
    offset          reduce using rule 110 (WHERE -> .)
    intersect       reduce using rule 110 (WHERE -> .)
    except          reduce using rule 110 (WHERE -> .)
    ptcoma          reduce using rule 110 (WHERE -> .)
    mas             reduce using rule 110 (WHERE -> .)
    menos           reduce using rule 110 (WHERE -> .)
    multiplicacion  reduce using rule 110 (WHERE -> .)
    division        reduce using rule 110 (WHERE -> .)
    modulo          reduce using rule 110 (WHERE -> .)
    elevado         reduce using rule 110 (WHERE -> .)
    and             reduce using rule 110 (WHERE -> .)
    or              reduce using rule 110 (WHERE -> .)
    mayor           reduce using rule 110 (WHERE -> .)
    menor           reduce using rule 110 (WHERE -> .)
    mayor_igual     reduce using rule 110 (WHERE -> .)
    menor_igual     reduce using rule 110 (WHERE -> .)
    igual           reduce using rule 110 (WHERE -> .)
    diferente1      reduce using rule 110 (WHERE -> .)
    diferente2      reduce using rule 110 (WHERE -> .)
    punto           reduce using rule 110 (WHERE -> .)
    between         reduce using rule 110 (WHERE -> .)
    in              reduce using rule 110 (WHERE -> .)
    not             reduce using rule 110 (WHERE -> .)
    is              reduce using rule 110 (WHERE -> .)
    isnull          reduce using rule 110 (WHERE -> .)
    notnull         reduce using rule 110 (WHERE -> .)
    id              reduce using rule 110 (WHERE -> .)
    as              reduce using rule 110 (WHERE -> .)
    parc            reduce using rule 110 (WHERE -> .)
    then            reduce using rule 110 (WHERE -> .)
    group           reduce using rule 110 (WHERE -> .)
    having          reduce using rule 110 (WHERE -> .)
    order           reduce using rule 110 (WHERE -> .)
    end             reduce using rule 110 (WHERE -> .)
    else            reduce using rule 110 (WHERE -> .)
    when            reduce using rule 110 (WHERE -> .)
    constraint      reduce using rule 110 (WHERE -> .)
    default         reduce using rule 110 (WHERE -> .)
    primary         reduce using rule 110 (WHERE -> .)
    references      reduce using rule 110 (WHERE -> .)
    null            reduce using rule 110 (WHERE -> .)
    asc             reduce using rule 110 (WHERE -> .)
    desc            reduce using rule 110 (WHERE -> .)

  ! union           [ reduce using rule 110 (WHERE -> .) ]
  ! coma            [ reduce using rule 110 (WHERE -> .) ]
  ! where           [ reduce using rule 110 (WHERE -> .) ]

    WHERE                          shift and go to state 225

state 143

    (101) LFROM -> FROM .

    r_from          reduce using rule 101 (LFROM -> FROM .)
    limit           reduce using rule 101 (LFROM -> FROM .)
    offset          reduce using rule 101 (LFROM -> FROM .)
    union           reduce using rule 101 (LFROM -> FROM .)
    intersect       reduce using rule 101 (LFROM -> FROM .)
    except          reduce using rule 101 (LFROM -> FROM .)
    ptcoma          reduce using rule 101 (LFROM -> FROM .)
    mas             reduce using rule 101 (LFROM -> FROM .)
    menos           reduce using rule 101 (LFROM -> FROM .)
    multiplicacion  reduce using rule 101 (LFROM -> FROM .)
    division        reduce using rule 101 (LFROM -> FROM .)
    modulo          reduce using rule 101 (LFROM -> FROM .)
    elevado         reduce using rule 101 (LFROM -> FROM .)
    and             reduce using rule 101 (LFROM -> FROM .)
    or              reduce using rule 101 (LFROM -> FROM .)
    mayor           reduce using rule 101 (LFROM -> FROM .)
    menor           reduce using rule 101 (LFROM -> FROM .)
    mayor_igual     reduce using rule 101 (LFROM -> FROM .)
    menor_igual     reduce using rule 101 (LFROM -> FROM .)
    igual           reduce using rule 101 (LFROM -> FROM .)
    diferente1      reduce using rule 101 (LFROM -> FROM .)
    diferente2      reduce using rule 101 (LFROM -> FROM .)
    punto           reduce using rule 101 (LFROM -> FROM .)
    between         reduce using rule 101 (LFROM -> FROM .)
    in              reduce using rule 101 (LFROM -> FROM .)
    not             reduce using rule 101 (LFROM -> FROM .)
    is              reduce using rule 101 (LFROM -> FROM .)
    isnull          reduce using rule 101 (LFROM -> FROM .)
    notnull         reduce using rule 101 (LFROM -> FROM .)
    id              reduce using rule 101 (LFROM -> FROM .)
    as              reduce using rule 101 (LFROM -> FROM .)
    coma            reduce using rule 101 (LFROM -> FROM .)
    parc            reduce using rule 101 (LFROM -> FROM .)
    then            reduce using rule 101 (LFROM -> FROM .)
    where           reduce using rule 101 (LFROM -> FROM .)
    group           reduce using rule 101 (LFROM -> FROM .)
    having          reduce using rule 101 (LFROM -> FROM .)
    order           reduce using rule 101 (LFROM -> FROM .)
    end             reduce using rule 101 (LFROM -> FROM .)
    else            reduce using rule 101 (LFROM -> FROM .)
    when            reduce using rule 101 (LFROM -> FROM .)
    constraint      reduce using rule 101 (LFROM -> FROM .)
    default         reduce using rule 101 (LFROM -> FROM .)
    primary         reduce using rule 101 (LFROM -> FROM .)
    references      reduce using rule 101 (LFROM -> FROM .)
    null            reduce using rule 101 (LFROM -> FROM .)
    asc             reduce using rule 101 (LFROM -> FROM .)
    desc            reduce using rule 101 (LFROM -> FROM .)


state 144

    (102) FROM -> LEXP .
    (103) FROM -> LEXP . as id
    (104) FROM -> LEXP . id
    (134) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 102 (FROM -> LEXP .)
    limit           reduce using rule 102 (FROM -> LEXP .)
    offset          reduce using rule 102 (FROM -> LEXP .)
    union           reduce using rule 102 (FROM -> LEXP .)
    intersect       reduce using rule 102 (FROM -> LEXP .)
    except          reduce using rule 102 (FROM -> LEXP .)
    ptcoma          reduce using rule 102 (FROM -> LEXP .)
    mas             reduce using rule 102 (FROM -> LEXP .)
    menos           reduce using rule 102 (FROM -> LEXP .)
    multiplicacion  reduce using rule 102 (FROM -> LEXP .)
    division        reduce using rule 102 (FROM -> LEXP .)
    modulo          reduce using rule 102 (FROM -> LEXP .)
    elevado         reduce using rule 102 (FROM -> LEXP .)
    and             reduce using rule 102 (FROM -> LEXP .)
    or              reduce using rule 102 (FROM -> LEXP .)
    mayor           reduce using rule 102 (FROM -> LEXP .)
    menor           reduce using rule 102 (FROM -> LEXP .)
    mayor_igual     reduce using rule 102 (FROM -> LEXP .)
    menor_igual     reduce using rule 102 (FROM -> LEXP .)
    igual           reduce using rule 102 (FROM -> LEXP .)
    diferente1      reduce using rule 102 (FROM -> LEXP .)
    diferente2      reduce using rule 102 (FROM -> LEXP .)
    punto           reduce using rule 102 (FROM -> LEXP .)
    between         reduce using rule 102 (FROM -> LEXP .)
    in              reduce using rule 102 (FROM -> LEXP .)
    not             reduce using rule 102 (FROM -> LEXP .)
    is              reduce using rule 102 (FROM -> LEXP .)
    isnull          reduce using rule 102 (FROM -> LEXP .)
    notnull         reduce using rule 102 (FROM -> LEXP .)
    parc            reduce using rule 102 (FROM -> LEXP .)
    then            reduce using rule 102 (FROM -> LEXP .)
    where           reduce using rule 102 (FROM -> LEXP .)
    group           reduce using rule 102 (FROM -> LEXP .)
    having          reduce using rule 102 (FROM -> LEXP .)
    order           reduce using rule 102 (FROM -> LEXP .)
    end             reduce using rule 102 (FROM -> LEXP .)
    else            reduce using rule 102 (FROM -> LEXP .)
    when            reduce using rule 102 (FROM -> LEXP .)
    constraint      reduce using rule 102 (FROM -> LEXP .)
    default         reduce using rule 102 (FROM -> LEXP .)
    primary         reduce using rule 102 (FROM -> LEXP .)
    references      reduce using rule 102 (FROM -> LEXP .)
    null            reduce using rule 102 (FROM -> LEXP .)
    asc             reduce using rule 102 (FROM -> LEXP .)
    desc            reduce using rule 102 (FROM -> LEXP .)
    as              shift and go to state 229
    id              shift and go to state 230
    coma            shift and go to state 86

  ! id              [ reduce using rule 102 (FROM -> LEXP .) ]
  ! as              [ reduce using rule 102 (FROM -> LEXP .) ]
  ! coma            [ reduce using rule 102 (FROM -> LEXP .) ]


state 145

    (105) FROM -> multiplicacion .

    r_from          reduce using rule 105 (FROM -> multiplicacion .)
    limit           reduce using rule 105 (FROM -> multiplicacion .)
    offset          reduce using rule 105 (FROM -> multiplicacion .)
    union           reduce using rule 105 (FROM -> multiplicacion .)
    intersect       reduce using rule 105 (FROM -> multiplicacion .)
    except          reduce using rule 105 (FROM -> multiplicacion .)
    ptcoma          reduce using rule 105 (FROM -> multiplicacion .)
    mas             reduce using rule 105 (FROM -> multiplicacion .)
    menos           reduce using rule 105 (FROM -> multiplicacion .)
    multiplicacion  reduce using rule 105 (FROM -> multiplicacion .)
    division        reduce using rule 105 (FROM -> multiplicacion .)
    modulo          reduce using rule 105 (FROM -> multiplicacion .)
    elevado         reduce using rule 105 (FROM -> multiplicacion .)
    and             reduce using rule 105 (FROM -> multiplicacion .)
    or              reduce using rule 105 (FROM -> multiplicacion .)
    mayor           reduce using rule 105 (FROM -> multiplicacion .)
    menor           reduce using rule 105 (FROM -> multiplicacion .)
    mayor_igual     reduce using rule 105 (FROM -> multiplicacion .)
    menor_igual     reduce using rule 105 (FROM -> multiplicacion .)
    igual           reduce using rule 105 (FROM -> multiplicacion .)
    diferente1      reduce using rule 105 (FROM -> multiplicacion .)
    diferente2      reduce using rule 105 (FROM -> multiplicacion .)
    punto           reduce using rule 105 (FROM -> multiplicacion .)
    between         reduce using rule 105 (FROM -> multiplicacion .)
    in              reduce using rule 105 (FROM -> multiplicacion .)
    not             reduce using rule 105 (FROM -> multiplicacion .)
    is              reduce using rule 105 (FROM -> multiplicacion .)
    isnull          reduce using rule 105 (FROM -> multiplicacion .)
    notnull         reduce using rule 105 (FROM -> multiplicacion .)
    id              reduce using rule 105 (FROM -> multiplicacion .)
    as              reduce using rule 105 (FROM -> multiplicacion .)
    coma            reduce using rule 105 (FROM -> multiplicacion .)
    parc            reduce using rule 105 (FROM -> multiplicacion .)
    then            reduce using rule 105 (FROM -> multiplicacion .)
    where           reduce using rule 105 (FROM -> multiplicacion .)
    group           reduce using rule 105 (FROM -> multiplicacion .)
    having          reduce using rule 105 (FROM -> multiplicacion .)
    order           reduce using rule 105 (FROM -> multiplicacion .)
    end             reduce using rule 105 (FROM -> multiplicacion .)
    else            reduce using rule 105 (FROM -> multiplicacion .)
    when            reduce using rule 105 (FROM -> multiplicacion .)
    constraint      reduce using rule 105 (FROM -> multiplicacion .)
    default         reduce using rule 105 (FROM -> multiplicacion .)
    primary         reduce using rule 105 (FROM -> multiplicacion .)
    references      reduce using rule 105 (FROM -> multiplicacion .)
    null            reduce using rule 105 (FROM -> multiplicacion .)
    asc             reduce using rule 105 (FROM -> multiplicacion .)
    desc            reduce using rule 105 (FROM -> multiplicacion .)


state 146

    (87) SELECT -> select LSELECT LIMIT COMBINING .

    ptcoma          reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    r_from          reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    limit           reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    offset          reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    union           reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    intersect       reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    except          reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    mas             reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    menos           reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    multiplicacion  reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    division        reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    modulo          reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    elevado         reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    and             reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    or              reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    mayor           reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    menor           reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    mayor_igual     reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    menor_igual     reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    igual           reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    diferente1      reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    diferente2      reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    punto           reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    between         reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    in              reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    not             reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    is              reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    isnull          reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    notnull         reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    id              reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    as              reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    coma            reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    parc            reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    then            reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    where           reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    group           reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    having          reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    order           reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    end             reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    else            reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    when            reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    constraint      reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    default         reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    primary         reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    references      reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    null            reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    asc             reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)
    desc            reduce using rule 87 (SELECT -> select LSELECT LIMIT COMBINING .)


state 147

    (111) COMBINING -> union . LEXP
    (112) COMBINING -> union . all LEXP
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    all             shift and go to state 232
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 231
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 148

    (113) COMBINING -> intersect . LEXP
    (114) COMBINING -> intersect . all LEXP
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    all             shift and go to state 234
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 233
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 149

    (115) COMBINING -> except . LEXP
    (116) COMBINING -> except . all LEXP
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    all             shift and go to state 236
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 235
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 150

    (88) LIMIT -> limit int .
    (91) LIMIT -> limit int . offset int

  ! shift/reduce conflict for offset resolved as shift
    union           reduce using rule 88 (LIMIT -> limit int .)
    intersect       reduce using rule 88 (LIMIT -> limit int .)
    except          reduce using rule 88 (LIMIT -> limit int .)
    ptcoma          reduce using rule 88 (LIMIT -> limit int .)
    r_from          reduce using rule 88 (LIMIT -> limit int .)
    limit           reduce using rule 88 (LIMIT -> limit int .)
    mas             reduce using rule 88 (LIMIT -> limit int .)
    menos           reduce using rule 88 (LIMIT -> limit int .)
    multiplicacion  reduce using rule 88 (LIMIT -> limit int .)
    division        reduce using rule 88 (LIMIT -> limit int .)
    modulo          reduce using rule 88 (LIMIT -> limit int .)
    elevado         reduce using rule 88 (LIMIT -> limit int .)
    and             reduce using rule 88 (LIMIT -> limit int .)
    or              reduce using rule 88 (LIMIT -> limit int .)
    mayor           reduce using rule 88 (LIMIT -> limit int .)
    menor           reduce using rule 88 (LIMIT -> limit int .)
    mayor_igual     reduce using rule 88 (LIMIT -> limit int .)
    menor_igual     reduce using rule 88 (LIMIT -> limit int .)
    igual           reduce using rule 88 (LIMIT -> limit int .)
    diferente1      reduce using rule 88 (LIMIT -> limit int .)
    diferente2      reduce using rule 88 (LIMIT -> limit int .)
    punto           reduce using rule 88 (LIMIT -> limit int .)
    between         reduce using rule 88 (LIMIT -> limit int .)
    in              reduce using rule 88 (LIMIT -> limit int .)
    not             reduce using rule 88 (LIMIT -> limit int .)
    is              reduce using rule 88 (LIMIT -> limit int .)
    isnull          reduce using rule 88 (LIMIT -> limit int .)
    notnull         reduce using rule 88 (LIMIT -> limit int .)
    id              reduce using rule 88 (LIMIT -> limit int .)
    as              reduce using rule 88 (LIMIT -> limit int .)
    coma            reduce using rule 88 (LIMIT -> limit int .)
    parc            reduce using rule 88 (LIMIT -> limit int .)
    then            reduce using rule 88 (LIMIT -> limit int .)
    where           reduce using rule 88 (LIMIT -> limit int .)
    group           reduce using rule 88 (LIMIT -> limit int .)
    having          reduce using rule 88 (LIMIT -> limit int .)
    order           reduce using rule 88 (LIMIT -> limit int .)
    end             reduce using rule 88 (LIMIT -> limit int .)
    else            reduce using rule 88 (LIMIT -> limit int .)
    when            reduce using rule 88 (LIMIT -> limit int .)
    constraint      reduce using rule 88 (LIMIT -> limit int .)
    default         reduce using rule 88 (LIMIT -> limit int .)
    primary         reduce using rule 88 (LIMIT -> limit int .)
    references      reduce using rule 88 (LIMIT -> limit int .)
    null            reduce using rule 88 (LIMIT -> limit int .)
    asc             reduce using rule 88 (LIMIT -> limit int .)
    desc            reduce using rule 88 (LIMIT -> limit int .)
    offset          shift and go to state 237

  ! offset          [ reduce using rule 88 (LIMIT -> limit int .) ]


state 151

    (89) LIMIT -> limit all .
    (93) LIMIT -> limit all . offset int

  ! shift/reduce conflict for offset resolved as shift
    union           reduce using rule 89 (LIMIT -> limit all .)
    intersect       reduce using rule 89 (LIMIT -> limit all .)
    except          reduce using rule 89 (LIMIT -> limit all .)
    ptcoma          reduce using rule 89 (LIMIT -> limit all .)
    r_from          reduce using rule 89 (LIMIT -> limit all .)
    limit           reduce using rule 89 (LIMIT -> limit all .)
    mas             reduce using rule 89 (LIMIT -> limit all .)
    menos           reduce using rule 89 (LIMIT -> limit all .)
    multiplicacion  reduce using rule 89 (LIMIT -> limit all .)
    division        reduce using rule 89 (LIMIT -> limit all .)
    modulo          reduce using rule 89 (LIMIT -> limit all .)
    elevado         reduce using rule 89 (LIMIT -> limit all .)
    and             reduce using rule 89 (LIMIT -> limit all .)
    or              reduce using rule 89 (LIMIT -> limit all .)
    mayor           reduce using rule 89 (LIMIT -> limit all .)
    menor           reduce using rule 89 (LIMIT -> limit all .)
    mayor_igual     reduce using rule 89 (LIMIT -> limit all .)
    menor_igual     reduce using rule 89 (LIMIT -> limit all .)
    igual           reduce using rule 89 (LIMIT -> limit all .)
    diferente1      reduce using rule 89 (LIMIT -> limit all .)
    diferente2      reduce using rule 89 (LIMIT -> limit all .)
    punto           reduce using rule 89 (LIMIT -> limit all .)
    between         reduce using rule 89 (LIMIT -> limit all .)
    in              reduce using rule 89 (LIMIT -> limit all .)
    not             reduce using rule 89 (LIMIT -> limit all .)
    is              reduce using rule 89 (LIMIT -> limit all .)
    isnull          reduce using rule 89 (LIMIT -> limit all .)
    notnull         reduce using rule 89 (LIMIT -> limit all .)
    id              reduce using rule 89 (LIMIT -> limit all .)
    as              reduce using rule 89 (LIMIT -> limit all .)
    coma            reduce using rule 89 (LIMIT -> limit all .)
    parc            reduce using rule 89 (LIMIT -> limit all .)
    then            reduce using rule 89 (LIMIT -> limit all .)
    where           reduce using rule 89 (LIMIT -> limit all .)
    group           reduce using rule 89 (LIMIT -> limit all .)
    having          reduce using rule 89 (LIMIT -> limit all .)
    order           reduce using rule 89 (LIMIT -> limit all .)
    end             reduce using rule 89 (LIMIT -> limit all .)
    else            reduce using rule 89 (LIMIT -> limit all .)
    when            reduce using rule 89 (LIMIT -> limit all .)
    constraint      reduce using rule 89 (LIMIT -> limit all .)
    default         reduce using rule 89 (LIMIT -> limit all .)
    primary         reduce using rule 89 (LIMIT -> limit all .)
    references      reduce using rule 89 (LIMIT -> limit all .)
    null            reduce using rule 89 (LIMIT -> limit all .)
    asc             reduce using rule 89 (LIMIT -> limit all .)
    desc            reduce using rule 89 (LIMIT -> limit all .)
    offset          shift and go to state 238

  ! offset          [ reduce using rule 89 (LIMIT -> limit all .) ]


state 152

    (90) LIMIT -> offset int .
    (92) LIMIT -> offset int . limit int
    (94) LIMIT -> offset int . limit all

  ! shift/reduce conflict for limit resolved as shift
    union           reduce using rule 90 (LIMIT -> offset int .)
    intersect       reduce using rule 90 (LIMIT -> offset int .)
    except          reduce using rule 90 (LIMIT -> offset int .)
    ptcoma          reduce using rule 90 (LIMIT -> offset int .)
    r_from          reduce using rule 90 (LIMIT -> offset int .)
    offset          reduce using rule 90 (LIMIT -> offset int .)
    mas             reduce using rule 90 (LIMIT -> offset int .)
    menos           reduce using rule 90 (LIMIT -> offset int .)
    multiplicacion  reduce using rule 90 (LIMIT -> offset int .)
    division        reduce using rule 90 (LIMIT -> offset int .)
    modulo          reduce using rule 90 (LIMIT -> offset int .)
    elevado         reduce using rule 90 (LIMIT -> offset int .)
    and             reduce using rule 90 (LIMIT -> offset int .)
    or              reduce using rule 90 (LIMIT -> offset int .)
    mayor           reduce using rule 90 (LIMIT -> offset int .)
    menor           reduce using rule 90 (LIMIT -> offset int .)
    mayor_igual     reduce using rule 90 (LIMIT -> offset int .)
    menor_igual     reduce using rule 90 (LIMIT -> offset int .)
    igual           reduce using rule 90 (LIMIT -> offset int .)
    diferente1      reduce using rule 90 (LIMIT -> offset int .)
    diferente2      reduce using rule 90 (LIMIT -> offset int .)
    punto           reduce using rule 90 (LIMIT -> offset int .)
    between         reduce using rule 90 (LIMIT -> offset int .)
    in              reduce using rule 90 (LIMIT -> offset int .)
    not             reduce using rule 90 (LIMIT -> offset int .)
    is              reduce using rule 90 (LIMIT -> offset int .)
    isnull          reduce using rule 90 (LIMIT -> offset int .)
    notnull         reduce using rule 90 (LIMIT -> offset int .)
    id              reduce using rule 90 (LIMIT -> offset int .)
    as              reduce using rule 90 (LIMIT -> offset int .)
    coma            reduce using rule 90 (LIMIT -> offset int .)
    parc            reduce using rule 90 (LIMIT -> offset int .)
    then            reduce using rule 90 (LIMIT -> offset int .)
    where           reduce using rule 90 (LIMIT -> offset int .)
    group           reduce using rule 90 (LIMIT -> offset int .)
    having          reduce using rule 90 (LIMIT -> offset int .)
    order           reduce using rule 90 (LIMIT -> offset int .)
    end             reduce using rule 90 (LIMIT -> offset int .)
    else            reduce using rule 90 (LIMIT -> offset int .)
    when            reduce using rule 90 (LIMIT -> offset int .)
    constraint      reduce using rule 90 (LIMIT -> offset int .)
    default         reduce using rule 90 (LIMIT -> offset int .)
    primary         reduce using rule 90 (LIMIT -> offset int .)
    references      reduce using rule 90 (LIMIT -> offset int .)
    null            reduce using rule 90 (LIMIT -> offset int .)
    asc             reduce using rule 90 (LIMIT -> offset int .)
    desc            reduce using rule 90 (LIMIT -> offset int .)
    limit           shift and go to state 239

  ! limit           [ reduce using rule 90 (LIMIT -> offset int .) ]


state 153

    (98) LSELECT -> LEXP as id .

    r_from          reduce using rule 98 (LSELECT -> LEXP as id .)
    limit           reduce using rule 98 (LSELECT -> LEXP as id .)
    offset          reduce using rule 98 (LSELECT -> LEXP as id .)
    union           reduce using rule 98 (LSELECT -> LEXP as id .)
    intersect       reduce using rule 98 (LSELECT -> LEXP as id .)
    except          reduce using rule 98 (LSELECT -> LEXP as id .)
    ptcoma          reduce using rule 98 (LSELECT -> LEXP as id .)
    mas             reduce using rule 98 (LSELECT -> LEXP as id .)
    menos           reduce using rule 98 (LSELECT -> LEXP as id .)
    multiplicacion  reduce using rule 98 (LSELECT -> LEXP as id .)
    division        reduce using rule 98 (LSELECT -> LEXP as id .)
    modulo          reduce using rule 98 (LSELECT -> LEXP as id .)
    elevado         reduce using rule 98 (LSELECT -> LEXP as id .)
    and             reduce using rule 98 (LSELECT -> LEXP as id .)
    or              reduce using rule 98 (LSELECT -> LEXP as id .)
    mayor           reduce using rule 98 (LSELECT -> LEXP as id .)
    menor           reduce using rule 98 (LSELECT -> LEXP as id .)
    mayor_igual     reduce using rule 98 (LSELECT -> LEXP as id .)
    menor_igual     reduce using rule 98 (LSELECT -> LEXP as id .)
    igual           reduce using rule 98 (LSELECT -> LEXP as id .)
    diferente1      reduce using rule 98 (LSELECT -> LEXP as id .)
    diferente2      reduce using rule 98 (LSELECT -> LEXP as id .)
    punto           reduce using rule 98 (LSELECT -> LEXP as id .)
    between         reduce using rule 98 (LSELECT -> LEXP as id .)
    in              reduce using rule 98 (LSELECT -> LEXP as id .)
    not             reduce using rule 98 (LSELECT -> LEXP as id .)
    is              reduce using rule 98 (LSELECT -> LEXP as id .)
    isnull          reduce using rule 98 (LSELECT -> LEXP as id .)
    notnull         reduce using rule 98 (LSELECT -> LEXP as id .)
    id              reduce using rule 98 (LSELECT -> LEXP as id .)
    as              reduce using rule 98 (LSELECT -> LEXP as id .)
    coma            reduce using rule 98 (LSELECT -> LEXP as id .)
    parc            reduce using rule 98 (LSELECT -> LEXP as id .)
    then            reduce using rule 98 (LSELECT -> LEXP as id .)
    where           reduce using rule 98 (LSELECT -> LEXP as id .)
    group           reduce using rule 98 (LSELECT -> LEXP as id .)
    having          reduce using rule 98 (LSELECT -> LEXP as id .)
    order           reduce using rule 98 (LSELECT -> LEXP as id .)
    end             reduce using rule 98 (LSELECT -> LEXP as id .)
    else            reduce using rule 98 (LSELECT -> LEXP as id .)
    when            reduce using rule 98 (LSELECT -> LEXP as id .)
    constraint      reduce using rule 98 (LSELECT -> LEXP as id .)
    default         reduce using rule 98 (LSELECT -> LEXP as id .)
    primary         reduce using rule 98 (LSELECT -> LEXP as id .)
    references      reduce using rule 98 (LSELECT -> LEXP as id .)
    null            reduce using rule 98 (LSELECT -> LEXP as id .)
    asc             reduce using rule 98 (LSELECT -> LEXP as id .)
    desc            reduce using rule 98 (LSELECT -> LEXP as id .)


state 154

    (134) LEXP -> LEXP coma EXP .
    (173) EXP -> EXP . mas EXP
    (174) EXP -> EXP . menos EXP
    (175) EXP -> EXP . multiplicacion EXP
    (176) EXP -> EXP . division EXP
    (177) EXP -> EXP . modulo EXP
    (178) EXP -> EXP . elevado EXP
    (179) EXP -> EXP . and EXP
    (180) EXP -> EXP . or EXP
    (181) EXP -> EXP . mayor EXP
    (182) EXP -> EXP . menor EXP
    (183) EXP -> EXP . mayor_igual EXP
    (184) EXP -> EXP . menor_igual EXP
    (185) EXP -> EXP . igual EXP
    (186) EXP -> EXP . diferente1 EXP
    (187) EXP -> EXP . diferente2 EXP
    (188) EXP -> EXP . punto EXP
    (215) PREDICADOS -> EXP . between EXP
    (216) PREDICADOS -> EXP . in para LEXP parc
    (217) PREDICADOS -> EXP . not in para LEXP parc
    (218) PREDICADOS -> EXP . not between EXP
    (219) PREDICADOS -> EXP . between symetric EXP
    (220) PREDICADOS -> EXP . not between symetric EXP
    (221) PREDICADOS -> EXP . is distinct r_from EXP
    (222) PREDICADOS -> EXP . is not distinct r_from EXP
    (223) PREDICADOS -> EXP . is PNULL
    (224) PREDICADOS -> EXP . isnull
    (225) PREDICADOS -> EXP . notnull
    (226) PREDICADOS -> EXP . is true
    (227) PREDICADOS -> EXP . is not true
    (228) PREDICADOS -> EXP . is false
    (229) PREDICADOS -> EXP . is not false
    (230) PREDICADOS -> EXP . is unknown
    (231) PREDICADOS -> EXP . is not unknown

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for punto resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
    r_from          reduce using rule 134 (LEXP -> LEXP coma EXP .)
    limit           reduce using rule 134 (LEXP -> LEXP coma EXP .)
    offset          reduce using rule 134 (LEXP -> LEXP coma EXP .)
    union           reduce using rule 134 (LEXP -> LEXP coma EXP .)
    intersect       reduce using rule 134 (LEXP -> LEXP coma EXP .)
    except          reduce using rule 134 (LEXP -> LEXP coma EXP .)
    ptcoma          reduce using rule 134 (LEXP -> LEXP coma EXP .)
    id              reduce using rule 134 (LEXP -> LEXP coma EXP .)
    as              reduce using rule 134 (LEXP -> LEXP coma EXP .)
    coma            reduce using rule 134 (LEXP -> LEXP coma EXP .)
    parc            reduce using rule 134 (LEXP -> LEXP coma EXP .)
    then            reduce using rule 134 (LEXP -> LEXP coma EXP .)
    where           reduce using rule 134 (LEXP -> LEXP coma EXP .)
    group           reduce using rule 134 (LEXP -> LEXP coma EXP .)
    having          reduce using rule 134 (LEXP -> LEXP coma EXP .)
    order           reduce using rule 134 (LEXP -> LEXP coma EXP .)
    end             reduce using rule 134 (LEXP -> LEXP coma EXP .)
    else            reduce using rule 134 (LEXP -> LEXP coma EXP .)
    when            reduce using rule 134 (LEXP -> LEXP coma EXP .)
    constraint      reduce using rule 134 (LEXP -> LEXP coma EXP .)
    default         reduce using rule 134 (LEXP -> LEXP coma EXP .)
    primary         reduce using rule 134 (LEXP -> LEXP coma EXP .)
    references      reduce using rule 134 (LEXP -> LEXP coma EXP .)
    null            reduce using rule 134 (LEXP -> LEXP coma EXP .)
    asc             reduce using rule 134 (LEXP -> LEXP coma EXP .)
    desc            reduce using rule 134 (LEXP -> LEXP coma EXP .)
    mas             shift and go to state 88
    menos           shift and go to state 89
    multiplicacion  shift and go to state 90
    division        shift and go to state 91
    modulo          shift and go to state 92
    elevado         shift and go to state 93
    and             shift and go to state 94
    or              shift and go to state 95
    mayor           shift and go to state 96
    menor           shift and go to state 97
    mayor_igual     shift and go to state 98
    menor_igual     shift and go to state 99
    igual           shift and go to state 100
    diferente1      shift and go to state 101
    diferente2      shift and go to state 102
    punto           shift and go to state 103
    between         shift and go to state 104
    in              shift and go to state 105
    not             shift and go to state 106
    is              shift and go to state 107
    isnull          shift and go to state 108
    notnull         shift and go to state 109

  ! mas             [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! menos           [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! multiplicacion  [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! division        [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! modulo          [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! elevado         [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! and             [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! or              [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! mayor           [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! menor           [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! mayor_igual     [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! menor_igual     [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! igual           [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! diferente1      [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! diferente2      [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! punto           [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! between         [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! in              [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! not             [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! is              [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! isnull          [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! notnull         [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]


state 155

    (202) EXP -> id para parc .

    r_from          reduce using rule 202 (EXP -> id para parc .)
    limit           reduce using rule 202 (EXP -> id para parc .)
    offset          reduce using rule 202 (EXP -> id para parc .)
    union           reduce using rule 202 (EXP -> id para parc .)
    intersect       reduce using rule 202 (EXP -> id para parc .)
    except          reduce using rule 202 (EXP -> id para parc .)
    ptcoma          reduce using rule 202 (EXP -> id para parc .)
    mas             reduce using rule 202 (EXP -> id para parc .)
    menos           reduce using rule 202 (EXP -> id para parc .)
    multiplicacion  reduce using rule 202 (EXP -> id para parc .)
    division        reduce using rule 202 (EXP -> id para parc .)
    modulo          reduce using rule 202 (EXP -> id para parc .)
    elevado         reduce using rule 202 (EXP -> id para parc .)
    and             reduce using rule 202 (EXP -> id para parc .)
    or              reduce using rule 202 (EXP -> id para parc .)
    mayor           reduce using rule 202 (EXP -> id para parc .)
    menor           reduce using rule 202 (EXP -> id para parc .)
    mayor_igual     reduce using rule 202 (EXP -> id para parc .)
    menor_igual     reduce using rule 202 (EXP -> id para parc .)
    igual           reduce using rule 202 (EXP -> id para parc .)
    diferente1      reduce using rule 202 (EXP -> id para parc .)
    diferente2      reduce using rule 202 (EXP -> id para parc .)
    punto           reduce using rule 202 (EXP -> id para parc .)
    between         reduce using rule 202 (EXP -> id para parc .)
    in              reduce using rule 202 (EXP -> id para parc .)
    not             reduce using rule 202 (EXP -> id para parc .)
    is              reduce using rule 202 (EXP -> id para parc .)
    isnull          reduce using rule 202 (EXP -> id para parc .)
    notnull         reduce using rule 202 (EXP -> id para parc .)
    id              reduce using rule 202 (EXP -> id para parc .)
    as              reduce using rule 202 (EXP -> id para parc .)
    coma            reduce using rule 202 (EXP -> id para parc .)
    parc            reduce using rule 202 (EXP -> id para parc .)
    then            reduce using rule 202 (EXP -> id para parc .)
    where           reduce using rule 202 (EXP -> id para parc .)
    group           reduce using rule 202 (EXP -> id para parc .)
    having          reduce using rule 202 (EXP -> id para parc .)
    order           reduce using rule 202 (EXP -> id para parc .)
    end             reduce using rule 202 (EXP -> id para parc .)
    else            reduce using rule 202 (EXP -> id para parc .)
    when            reduce using rule 202 (EXP -> id para parc .)
    constraint      reduce using rule 202 (EXP -> id para parc .)
    default         reduce using rule 202 (EXP -> id para parc .)
    primary         reduce using rule 202 (EXP -> id para parc .)
    references      reduce using rule 202 (EXP -> id para parc .)
    null            reduce using rule 202 (EXP -> id para parc .)
    asc             reduce using rule 202 (EXP -> id para parc .)
    desc            reduce using rule 202 (EXP -> id para parc .)


state 156

    (203) EXP -> id para LEXP . parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 240
    coma            shift and go to state 86


state 157

    (173) EXP -> EXP mas EXP .
    (173) EXP -> EXP . mas EXP
    (174) EXP -> EXP . menos EXP
    (175) EXP -> EXP . multiplicacion EXP
    (176) EXP -> EXP . division EXP
    (177) EXP -> EXP . modulo EXP
    (178) EXP -> EXP . elevado EXP
    (179) EXP -> EXP . and EXP
    (180) EXP -> EXP . or EXP
    (181) EXP -> EXP . mayor EXP
    (182) EXP -> EXP . menor EXP
    (183) EXP -> EXP . mayor_igual EXP
    (184) EXP -> EXP . menor_igual EXP
    (185) EXP -> EXP . igual EXP
    (186) EXP -> EXP . diferente1 EXP
    (187) EXP -> EXP . diferente2 EXP
    (188) EXP -> EXP . punto EXP
    (215) PREDICADOS -> EXP . between EXP
    (216) PREDICADOS -> EXP . in para LEXP parc
    (217) PREDICADOS -> EXP . not in para LEXP parc
    (218) PREDICADOS -> EXP . not between EXP
    (219) PREDICADOS -> EXP . between symetric EXP
    (220) PREDICADOS -> EXP . not between symetric EXP
    (221) PREDICADOS -> EXP . is distinct r_from EXP
    (222) PREDICADOS -> EXP . is not distinct r_from EXP
    (223) PREDICADOS -> EXP . is PNULL
    (224) PREDICADOS -> EXP . isnull
    (225) PREDICADOS -> EXP . notnull
    (226) PREDICADOS -> EXP . is true
    (227) PREDICADOS -> EXP . is not true
    (228) PREDICADOS -> EXP . is false
    (229) PREDICADOS -> EXP . is not false
    (230) PREDICADOS -> EXP . is unknown
    (231) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 173 (EXP -> EXP mas EXP .)
    limit           reduce using rule 173 (EXP -> EXP mas EXP .)
    offset          reduce using rule 173 (EXP -> EXP mas EXP .)
    union           reduce using rule 173 (EXP -> EXP mas EXP .)
    intersect       reduce using rule 173 (EXP -> EXP mas EXP .)
    except          reduce using rule 173 (EXP -> EXP mas EXP .)
    ptcoma          reduce using rule 173 (EXP -> EXP mas EXP .)
    mas             reduce using rule 173 (EXP -> EXP mas EXP .)
    menos           reduce using rule 173 (EXP -> EXP mas EXP .)
    multiplicacion  reduce using rule 173 (EXP -> EXP mas EXP .)
    division        reduce using rule 173 (EXP -> EXP mas EXP .)
    modulo          reduce using rule 173 (EXP -> EXP mas EXP .)
    elevado         reduce using rule 173 (EXP -> EXP mas EXP .)
    punto           reduce using rule 173 (EXP -> EXP mas EXP .)
    between         reduce using rule 173 (EXP -> EXP mas EXP .)
    in              reduce using rule 173 (EXP -> EXP mas EXP .)
    is              reduce using rule 173 (EXP -> EXP mas EXP .)
    isnull          reduce using rule 173 (EXP -> EXP mas EXP .)
    notnull         reduce using rule 173 (EXP -> EXP mas EXP .)
    id              reduce using rule 173 (EXP -> EXP mas EXP .)
    as              reduce using rule 173 (EXP -> EXP mas EXP .)
    coma            reduce using rule 173 (EXP -> EXP mas EXP .)
    parc            reduce using rule 173 (EXP -> EXP mas EXP .)
    then            reduce using rule 173 (EXP -> EXP mas EXP .)
    where           reduce using rule 173 (EXP -> EXP mas EXP .)
    group           reduce using rule 173 (EXP -> EXP mas EXP .)
    having          reduce using rule 173 (EXP -> EXP mas EXP .)
    order           reduce using rule 173 (EXP -> EXP mas EXP .)
    end             reduce using rule 173 (EXP -> EXP mas EXP .)
    else            reduce using rule 173 (EXP -> EXP mas EXP .)
    when            reduce using rule 173 (EXP -> EXP mas EXP .)
    constraint      reduce using rule 173 (EXP -> EXP mas EXP .)
    default         reduce using rule 173 (EXP -> EXP mas EXP .)
    primary         reduce using rule 173 (EXP -> EXP mas EXP .)
    references      reduce using rule 173 (EXP -> EXP mas EXP .)
    null            reduce using rule 173 (EXP -> EXP mas EXP .)
    asc             reduce using rule 173 (EXP -> EXP mas EXP .)
    desc            reduce using rule 173 (EXP -> EXP mas EXP .)
    and             shift and go to state 94
    or              shift and go to state 95
    mayor           shift and go to state 96
    menor           shift and go to state 97
    mayor_igual     shift and go to state 98
    menor_igual     shift and go to state 99
    igual           shift and go to state 100
    diferente1      shift and go to state 101
    diferente2      shift and go to state 102
    not             shift and go to state 106

  ! and             [ reduce using rule 173 (EXP -> EXP mas EXP .) ]
  ! or              [ reduce using rule 173 (EXP -> EXP mas EXP .) ]
  ! mayor           [ reduce using rule 173 (EXP -> EXP mas EXP .) ]
  ! menor           [ reduce using rule 173 (EXP -> EXP mas EXP .) ]
  ! mayor_igual     [ reduce using rule 173 (EXP -> EXP mas EXP .) ]
  ! menor_igual     [ reduce using rule 173 (EXP -> EXP mas EXP .) ]
  ! igual           [ reduce using rule 173 (EXP -> EXP mas EXP .) ]
  ! diferente1      [ reduce using rule 173 (EXP -> EXP mas EXP .) ]
  ! diferente2      [ reduce using rule 173 (EXP -> EXP mas EXP .) ]
  ! not             [ reduce using rule 173 (EXP -> EXP mas EXP .) ]
  ! mas             [ shift and go to state 88 ]
  ! menos           [ shift and go to state 89 ]
  ! multiplicacion  [ shift and go to state 90 ]
  ! division        [ shift and go to state 91 ]
  ! modulo          [ shift and go to state 92 ]
  ! elevado         [ shift and go to state 93 ]
  ! punto           [ shift and go to state 103 ]
  ! between         [ shift and go to state 104 ]
  ! in              [ shift and go to state 105 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 108 ]
  ! notnull         [ shift and go to state 109 ]


state 158

    (174) EXP -> EXP menos EXP .
    (173) EXP -> EXP . mas EXP
    (174) EXP -> EXP . menos EXP
    (175) EXP -> EXP . multiplicacion EXP
    (176) EXP -> EXP . division EXP
    (177) EXP -> EXP . modulo EXP
    (178) EXP -> EXP . elevado EXP
    (179) EXP -> EXP . and EXP
    (180) EXP -> EXP . or EXP
    (181) EXP -> EXP . mayor EXP
    (182) EXP -> EXP . menor EXP
    (183) EXP -> EXP . mayor_igual EXP
    (184) EXP -> EXP . menor_igual EXP
    (185) EXP -> EXP . igual EXP
    (186) EXP -> EXP . diferente1 EXP
    (187) EXP -> EXP . diferente2 EXP
    (188) EXP -> EXP . punto EXP
    (215) PREDICADOS -> EXP . between EXP
    (216) PREDICADOS -> EXP . in para LEXP parc
    (217) PREDICADOS -> EXP . not in para LEXP parc
    (218) PREDICADOS -> EXP . not between EXP
    (219) PREDICADOS -> EXP . between symetric EXP
    (220) PREDICADOS -> EXP . not between symetric EXP
    (221) PREDICADOS -> EXP . is distinct r_from EXP
    (222) PREDICADOS -> EXP . is not distinct r_from EXP
    (223) PREDICADOS -> EXP . is PNULL
    (224) PREDICADOS -> EXP . isnull
    (225) PREDICADOS -> EXP . notnull
    (226) PREDICADOS -> EXP . is true
    (227) PREDICADOS -> EXP . is not true
    (228) PREDICADOS -> EXP . is false
    (229) PREDICADOS -> EXP . is not false
    (230) PREDICADOS -> EXP . is unknown
    (231) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 174 (EXP -> EXP menos EXP .)
    limit           reduce using rule 174 (EXP -> EXP menos EXP .)
    offset          reduce using rule 174 (EXP -> EXP menos EXP .)
    union           reduce using rule 174 (EXP -> EXP menos EXP .)
    intersect       reduce using rule 174 (EXP -> EXP menos EXP .)
    except          reduce using rule 174 (EXP -> EXP menos EXP .)
    ptcoma          reduce using rule 174 (EXP -> EXP menos EXP .)
    mas             reduce using rule 174 (EXP -> EXP menos EXP .)
    menos           reduce using rule 174 (EXP -> EXP menos EXP .)
    multiplicacion  reduce using rule 174 (EXP -> EXP menos EXP .)
    division        reduce using rule 174 (EXP -> EXP menos EXP .)
    modulo          reduce using rule 174 (EXP -> EXP menos EXP .)
    elevado         reduce using rule 174 (EXP -> EXP menos EXP .)
    punto           reduce using rule 174 (EXP -> EXP menos EXP .)
    between         reduce using rule 174 (EXP -> EXP menos EXP .)
    in              reduce using rule 174 (EXP -> EXP menos EXP .)
    is              reduce using rule 174 (EXP -> EXP menos EXP .)
    isnull          reduce using rule 174 (EXP -> EXP menos EXP .)
    notnull         reduce using rule 174 (EXP -> EXP menos EXP .)
    id              reduce using rule 174 (EXP -> EXP menos EXP .)
    as              reduce using rule 174 (EXP -> EXP menos EXP .)
    coma            reduce using rule 174 (EXP -> EXP menos EXP .)
    parc            reduce using rule 174 (EXP -> EXP menos EXP .)
    then            reduce using rule 174 (EXP -> EXP menos EXP .)
    where           reduce using rule 174 (EXP -> EXP menos EXP .)
    group           reduce using rule 174 (EXP -> EXP menos EXP .)
    having          reduce using rule 174 (EXP -> EXP menos EXP .)
    order           reduce using rule 174 (EXP -> EXP menos EXP .)
    end             reduce using rule 174 (EXP -> EXP menos EXP .)
    else            reduce using rule 174 (EXP -> EXP menos EXP .)
    when            reduce using rule 174 (EXP -> EXP menos EXP .)
    constraint      reduce using rule 174 (EXP -> EXP menos EXP .)
    default         reduce using rule 174 (EXP -> EXP menos EXP .)
    primary         reduce using rule 174 (EXP -> EXP menos EXP .)
    references      reduce using rule 174 (EXP -> EXP menos EXP .)
    null            reduce using rule 174 (EXP -> EXP menos EXP .)
    asc             reduce using rule 174 (EXP -> EXP menos EXP .)
    desc            reduce using rule 174 (EXP -> EXP menos EXP .)
    and             shift and go to state 94
    or              shift and go to state 95
    mayor           shift and go to state 96
    menor           shift and go to state 97
    mayor_igual     shift and go to state 98
    menor_igual     shift and go to state 99
    igual           shift and go to state 100
    diferente1      shift and go to state 101
    diferente2      shift and go to state 102
    not             shift and go to state 106

  ! and             [ reduce using rule 174 (EXP -> EXP menos EXP .) ]
  ! or              [ reduce using rule 174 (EXP -> EXP menos EXP .) ]
  ! mayor           [ reduce using rule 174 (EXP -> EXP menos EXP .) ]
  ! menor           [ reduce using rule 174 (EXP -> EXP menos EXP .) ]
  ! mayor_igual     [ reduce using rule 174 (EXP -> EXP menos EXP .) ]
  ! menor_igual     [ reduce using rule 174 (EXP -> EXP menos EXP .) ]
  ! igual           [ reduce using rule 174 (EXP -> EXP menos EXP .) ]
  ! diferente1      [ reduce using rule 174 (EXP -> EXP menos EXP .) ]
  ! diferente2      [ reduce using rule 174 (EXP -> EXP menos EXP .) ]
  ! not             [ reduce using rule 174 (EXP -> EXP menos EXP .) ]
  ! mas             [ shift and go to state 88 ]
  ! menos           [ shift and go to state 89 ]
  ! multiplicacion  [ shift and go to state 90 ]
  ! division        [ shift and go to state 91 ]
  ! modulo          [ shift and go to state 92 ]
  ! elevado         [ shift and go to state 93 ]
  ! punto           [ shift and go to state 103 ]
  ! between         [ shift and go to state 104 ]
  ! in              [ shift and go to state 105 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 108 ]
  ! notnull         [ shift and go to state 109 ]


state 159

    (175) EXP -> EXP multiplicacion EXP .
    (173) EXP -> EXP . mas EXP
    (174) EXP -> EXP . menos EXP
    (175) EXP -> EXP . multiplicacion EXP
    (176) EXP -> EXP . division EXP
    (177) EXP -> EXP . modulo EXP
    (178) EXP -> EXP . elevado EXP
    (179) EXP -> EXP . and EXP
    (180) EXP -> EXP . or EXP
    (181) EXP -> EXP . mayor EXP
    (182) EXP -> EXP . menor EXP
    (183) EXP -> EXP . mayor_igual EXP
    (184) EXP -> EXP . menor_igual EXP
    (185) EXP -> EXP . igual EXP
    (186) EXP -> EXP . diferente1 EXP
    (187) EXP -> EXP . diferente2 EXP
    (188) EXP -> EXP . punto EXP
    (215) PREDICADOS -> EXP . between EXP
    (216) PREDICADOS -> EXP . in para LEXP parc
    (217) PREDICADOS -> EXP . not in para LEXP parc
    (218) PREDICADOS -> EXP . not between EXP
    (219) PREDICADOS -> EXP . between symetric EXP
    (220) PREDICADOS -> EXP . not between symetric EXP
    (221) PREDICADOS -> EXP . is distinct r_from EXP
    (222) PREDICADOS -> EXP . is not distinct r_from EXP
    (223) PREDICADOS -> EXP . is PNULL
    (224) PREDICADOS -> EXP . isnull
    (225) PREDICADOS -> EXP . notnull
    (226) PREDICADOS -> EXP . is true
    (227) PREDICADOS -> EXP . is not true
    (228) PREDICADOS -> EXP . is false
    (229) PREDICADOS -> EXP . is not false
    (230) PREDICADOS -> EXP . is unknown
    (231) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    limit           reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    offset          reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    union           reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    intersect       reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    except          reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    ptcoma          reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    multiplicacion  reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    division        reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    modulo          reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    elevado         reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    punto           reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    between         reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    in              reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    is              reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    isnull          reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    notnull         reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    id              reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    as              reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    coma            reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    parc            reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    then            reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    where           reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    group           reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    having          reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    order           reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    end             reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    else            reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    when            reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    constraint      reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    default         reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    primary         reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    references      reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    null            reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    asc             reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    desc            reduce using rule 175 (EXP -> EXP multiplicacion EXP .)
    mas             shift and go to state 88
    menos           shift and go to state 89
    and             shift and go to state 94
    or              shift and go to state 95
    mayor           shift and go to state 96
    menor           shift and go to state 97
    mayor_igual     shift and go to state 98
    menor_igual     shift and go to state 99
    igual           shift and go to state 100
    diferente1      shift and go to state 101
    diferente2      shift and go to state 102
    not             shift and go to state 106

  ! mas             [ reduce using rule 175 (EXP -> EXP multiplicacion EXP .) ]
  ! menos           [ reduce using rule 175 (EXP -> EXP multiplicacion EXP .) ]
  ! and             [ reduce using rule 175 (EXP -> EXP multiplicacion EXP .) ]
  ! or              [ reduce using rule 175 (EXP -> EXP multiplicacion EXP .) ]
  ! mayor           [ reduce using rule 175 (EXP -> EXP multiplicacion EXP .) ]
  ! menor           [ reduce using rule 175 (EXP -> EXP multiplicacion EXP .) ]
  ! mayor_igual     [ reduce using rule 175 (EXP -> EXP multiplicacion EXP .) ]
  ! menor_igual     [ reduce using rule 175 (EXP -> EXP multiplicacion EXP .) ]
  ! igual           [ reduce using rule 175 (EXP -> EXP multiplicacion EXP .) ]
  ! diferente1      [ reduce using rule 175 (EXP -> EXP multiplicacion EXP .) ]
  ! diferente2      [ reduce using rule 175 (EXP -> EXP multiplicacion EXP .) ]
  ! not             [ reduce using rule 175 (EXP -> EXP multiplicacion EXP .) ]
  ! multiplicacion  [ shift and go to state 90 ]
  ! division        [ shift and go to state 91 ]
  ! modulo          [ shift and go to state 92 ]
  ! elevado         [ shift and go to state 93 ]
  ! punto           [ shift and go to state 103 ]
  ! between         [ shift and go to state 104 ]
  ! in              [ shift and go to state 105 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 108 ]
  ! notnull         [ shift and go to state 109 ]


state 160

    (176) EXP -> EXP division EXP .
    (173) EXP -> EXP . mas EXP
    (174) EXP -> EXP . menos EXP
    (175) EXP -> EXP . multiplicacion EXP
    (176) EXP -> EXP . division EXP
    (177) EXP -> EXP . modulo EXP
    (178) EXP -> EXP . elevado EXP
    (179) EXP -> EXP . and EXP
    (180) EXP -> EXP . or EXP
    (181) EXP -> EXP . mayor EXP
    (182) EXP -> EXP . menor EXP
    (183) EXP -> EXP . mayor_igual EXP
    (184) EXP -> EXP . menor_igual EXP
    (185) EXP -> EXP . igual EXP
    (186) EXP -> EXP . diferente1 EXP
    (187) EXP -> EXP . diferente2 EXP
    (188) EXP -> EXP . punto EXP
    (215) PREDICADOS -> EXP . between EXP
    (216) PREDICADOS -> EXP . in para LEXP parc
    (217) PREDICADOS -> EXP . not in para LEXP parc
    (218) PREDICADOS -> EXP . not between EXP
    (219) PREDICADOS -> EXP . between symetric EXP
    (220) PREDICADOS -> EXP . not between symetric EXP
    (221) PREDICADOS -> EXP . is distinct r_from EXP
    (222) PREDICADOS -> EXP . is not distinct r_from EXP
    (223) PREDICADOS -> EXP . is PNULL
    (224) PREDICADOS -> EXP . isnull
    (225) PREDICADOS -> EXP . notnull
    (226) PREDICADOS -> EXP . is true
    (227) PREDICADOS -> EXP . is not true
    (228) PREDICADOS -> EXP . is false
    (229) PREDICADOS -> EXP . is not false
    (230) PREDICADOS -> EXP . is unknown
    (231) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 176 (EXP -> EXP division EXP .)
    limit           reduce using rule 176 (EXP -> EXP division EXP .)
    offset          reduce using rule 176 (EXP -> EXP division EXP .)
    union           reduce using rule 176 (EXP -> EXP division EXP .)
    intersect       reduce using rule 176 (EXP -> EXP division EXP .)
    except          reduce using rule 176 (EXP -> EXP division EXP .)
    ptcoma          reduce using rule 176 (EXP -> EXP division EXP .)
    multiplicacion  reduce using rule 176 (EXP -> EXP division EXP .)
    division        reduce using rule 176 (EXP -> EXP division EXP .)
    modulo          reduce using rule 176 (EXP -> EXP division EXP .)
    elevado         reduce using rule 176 (EXP -> EXP division EXP .)
    punto           reduce using rule 176 (EXP -> EXP division EXP .)
    between         reduce using rule 176 (EXP -> EXP division EXP .)
    in              reduce using rule 176 (EXP -> EXP division EXP .)
    is              reduce using rule 176 (EXP -> EXP division EXP .)
    isnull          reduce using rule 176 (EXP -> EXP division EXP .)
    notnull         reduce using rule 176 (EXP -> EXP division EXP .)
    id              reduce using rule 176 (EXP -> EXP division EXP .)
    as              reduce using rule 176 (EXP -> EXP division EXP .)
    coma            reduce using rule 176 (EXP -> EXP division EXP .)
    parc            reduce using rule 176 (EXP -> EXP division EXP .)
    then            reduce using rule 176 (EXP -> EXP division EXP .)
    where           reduce using rule 176 (EXP -> EXP division EXP .)
    group           reduce using rule 176 (EXP -> EXP division EXP .)
    having          reduce using rule 176 (EXP -> EXP division EXP .)
    order           reduce using rule 176 (EXP -> EXP division EXP .)
    end             reduce using rule 176 (EXP -> EXP division EXP .)
    else            reduce using rule 176 (EXP -> EXP division EXP .)
    when            reduce using rule 176 (EXP -> EXP division EXP .)
    constraint      reduce using rule 176 (EXP -> EXP division EXP .)
    default         reduce using rule 176 (EXP -> EXP division EXP .)
    primary         reduce using rule 176 (EXP -> EXP division EXP .)
    references      reduce using rule 176 (EXP -> EXP division EXP .)
    null            reduce using rule 176 (EXP -> EXP division EXP .)
    asc             reduce using rule 176 (EXP -> EXP division EXP .)
    desc            reduce using rule 176 (EXP -> EXP division EXP .)
    mas             shift and go to state 88
    menos           shift and go to state 89
    and             shift and go to state 94
    or              shift and go to state 95
    mayor           shift and go to state 96
    menor           shift and go to state 97
    mayor_igual     shift and go to state 98
    menor_igual     shift and go to state 99
    igual           shift and go to state 100
    diferente1      shift and go to state 101
    diferente2      shift and go to state 102
    not             shift and go to state 106

  ! mas             [ reduce using rule 176 (EXP -> EXP division EXP .) ]
  ! menos           [ reduce using rule 176 (EXP -> EXP division EXP .) ]
  ! and             [ reduce using rule 176 (EXP -> EXP division EXP .) ]
  ! or              [ reduce using rule 176 (EXP -> EXP division EXP .) ]
  ! mayor           [ reduce using rule 176 (EXP -> EXP division EXP .) ]
  ! menor           [ reduce using rule 176 (EXP -> EXP division EXP .) ]
  ! mayor_igual     [ reduce using rule 176 (EXP -> EXP division EXP .) ]
  ! menor_igual     [ reduce using rule 176 (EXP -> EXP division EXP .) ]
  ! igual           [ reduce using rule 176 (EXP -> EXP division EXP .) ]
  ! diferente1      [ reduce using rule 176 (EXP -> EXP division EXP .) ]
  ! diferente2      [ reduce using rule 176 (EXP -> EXP division EXP .) ]
  ! not             [ reduce using rule 176 (EXP -> EXP division EXP .) ]
  ! multiplicacion  [ shift and go to state 90 ]
  ! division        [ shift and go to state 91 ]
  ! modulo          [ shift and go to state 92 ]
  ! elevado         [ shift and go to state 93 ]
  ! punto           [ shift and go to state 103 ]
  ! between         [ shift and go to state 104 ]
  ! in              [ shift and go to state 105 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 108 ]
  ! notnull         [ shift and go to state 109 ]


state 161

    (177) EXP -> EXP modulo EXP .
    (173) EXP -> EXP . mas EXP
    (174) EXP -> EXP . menos EXP
    (175) EXP -> EXP . multiplicacion EXP
    (176) EXP -> EXP . division EXP
    (177) EXP -> EXP . modulo EXP
    (178) EXP -> EXP . elevado EXP
    (179) EXP -> EXP . and EXP
    (180) EXP -> EXP . or EXP
    (181) EXP -> EXP . mayor EXP
    (182) EXP -> EXP . menor EXP
    (183) EXP -> EXP . mayor_igual EXP
    (184) EXP -> EXP . menor_igual EXP
    (185) EXP -> EXP . igual EXP
    (186) EXP -> EXP . diferente1 EXP
    (187) EXP -> EXP . diferente2 EXP
    (188) EXP -> EXP . punto EXP
    (215) PREDICADOS -> EXP . between EXP
    (216) PREDICADOS -> EXP . in para LEXP parc
    (217) PREDICADOS -> EXP . not in para LEXP parc
    (218) PREDICADOS -> EXP . not between EXP
    (219) PREDICADOS -> EXP . between symetric EXP
    (220) PREDICADOS -> EXP . not between symetric EXP
    (221) PREDICADOS -> EXP . is distinct r_from EXP
    (222) PREDICADOS -> EXP . is not distinct r_from EXP
    (223) PREDICADOS -> EXP . is PNULL
    (224) PREDICADOS -> EXP . isnull
    (225) PREDICADOS -> EXP . notnull
    (226) PREDICADOS -> EXP . is true
    (227) PREDICADOS -> EXP . is not true
    (228) PREDICADOS -> EXP . is false
    (229) PREDICADOS -> EXP . is not false
    (230) PREDICADOS -> EXP . is unknown
    (231) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 177 (EXP -> EXP modulo EXP .)
    limit           reduce using rule 177 (EXP -> EXP modulo EXP .)
    offset          reduce using rule 177 (EXP -> EXP modulo EXP .)
    union           reduce using rule 177 (EXP -> EXP modulo EXP .)
    intersect       reduce using rule 177 (EXP -> EXP modulo EXP .)
    except          reduce using rule 177 (EXP -> EXP modulo EXP .)
    ptcoma          reduce using rule 177 (EXP -> EXP modulo EXP .)
    multiplicacion  reduce using rule 177 (EXP -> EXP modulo EXP .)
    division        reduce using rule 177 (EXP -> EXP modulo EXP .)
    modulo          reduce using rule 177 (EXP -> EXP modulo EXP .)
    elevado         reduce using rule 177 (EXP -> EXP modulo EXP .)
    punto           reduce using rule 177 (EXP -> EXP modulo EXP .)
    between         reduce using rule 177 (EXP -> EXP modulo EXP .)
    in              reduce using rule 177 (EXP -> EXP modulo EXP .)
    is              reduce using rule 177 (EXP -> EXP modulo EXP .)
    isnull          reduce using rule 177 (EXP -> EXP modulo EXP .)
    notnull         reduce using rule 177 (EXP -> EXP modulo EXP .)
    id              reduce using rule 177 (EXP -> EXP modulo EXP .)
    as              reduce using rule 177 (EXP -> EXP modulo EXP .)
    coma            reduce using rule 177 (EXP -> EXP modulo EXP .)
    parc            reduce using rule 177 (EXP -> EXP modulo EXP .)
    then            reduce using rule 177 (EXP -> EXP modulo EXP .)
    where           reduce using rule 177 (EXP -> EXP modulo EXP .)
    group           reduce using rule 177 (EXP -> EXP modulo EXP .)
    having          reduce using rule 177 (EXP -> EXP modulo EXP .)
    order           reduce using rule 177 (EXP -> EXP modulo EXP .)
    end             reduce using rule 177 (EXP -> EXP modulo EXP .)
    else            reduce using rule 177 (EXP -> EXP modulo EXP .)
    when            reduce using rule 177 (EXP -> EXP modulo EXP .)
    constraint      reduce using rule 177 (EXP -> EXP modulo EXP .)
    default         reduce using rule 177 (EXP -> EXP modulo EXP .)
    primary         reduce using rule 177 (EXP -> EXP modulo EXP .)
    references      reduce using rule 177 (EXP -> EXP modulo EXP .)
    null            reduce using rule 177 (EXP -> EXP modulo EXP .)
    asc             reduce using rule 177 (EXP -> EXP modulo EXP .)
    desc            reduce using rule 177 (EXP -> EXP modulo EXP .)
    mas             shift and go to state 88
    menos           shift and go to state 89
    and             shift and go to state 94
    or              shift and go to state 95
    mayor           shift and go to state 96
    menor           shift and go to state 97
    mayor_igual     shift and go to state 98
    menor_igual     shift and go to state 99
    igual           shift and go to state 100
    diferente1      shift and go to state 101
    diferente2      shift and go to state 102
    not             shift and go to state 106

  ! mas             [ reduce using rule 177 (EXP -> EXP modulo EXP .) ]
  ! menos           [ reduce using rule 177 (EXP -> EXP modulo EXP .) ]
  ! and             [ reduce using rule 177 (EXP -> EXP modulo EXP .) ]
  ! or              [ reduce using rule 177 (EXP -> EXP modulo EXP .) ]
  ! mayor           [ reduce using rule 177 (EXP -> EXP modulo EXP .) ]
  ! menor           [ reduce using rule 177 (EXP -> EXP modulo EXP .) ]
  ! mayor_igual     [ reduce using rule 177 (EXP -> EXP modulo EXP .) ]
  ! menor_igual     [ reduce using rule 177 (EXP -> EXP modulo EXP .) ]
  ! igual           [ reduce using rule 177 (EXP -> EXP modulo EXP .) ]
  ! diferente1      [ reduce using rule 177 (EXP -> EXP modulo EXP .) ]
  ! diferente2      [ reduce using rule 177 (EXP -> EXP modulo EXP .) ]
  ! not             [ reduce using rule 177 (EXP -> EXP modulo EXP .) ]
  ! multiplicacion  [ shift and go to state 90 ]
  ! division        [ shift and go to state 91 ]
  ! modulo          [ shift and go to state 92 ]
  ! elevado         [ shift and go to state 93 ]
  ! punto           [ shift and go to state 103 ]
  ! between         [ shift and go to state 104 ]
  ! in              [ shift and go to state 105 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 108 ]
  ! notnull         [ shift and go to state 109 ]


state 162

    (178) EXP -> EXP elevado EXP .
    (173) EXP -> EXP . mas EXP
    (174) EXP -> EXP . menos EXP
    (175) EXP -> EXP . multiplicacion EXP
    (176) EXP -> EXP . division EXP
    (177) EXP -> EXP . modulo EXP
    (178) EXP -> EXP . elevado EXP
    (179) EXP -> EXP . and EXP
    (180) EXP -> EXP . or EXP
    (181) EXP -> EXP . mayor EXP
    (182) EXP -> EXP . menor EXP
    (183) EXP -> EXP . mayor_igual EXP
    (184) EXP -> EXP . menor_igual EXP
    (185) EXP -> EXP . igual EXP
    (186) EXP -> EXP . diferente1 EXP
    (187) EXP -> EXP . diferente2 EXP
    (188) EXP -> EXP . punto EXP
    (215) PREDICADOS -> EXP . between EXP
    (216) PREDICADOS -> EXP . in para LEXP parc
    (217) PREDICADOS -> EXP . not in para LEXP parc
    (218) PREDICADOS -> EXP . not between EXP
    (219) PREDICADOS -> EXP . between symetric EXP
    (220) PREDICADOS -> EXP . not between symetric EXP
    (221) PREDICADOS -> EXP . is distinct r_from EXP
    (222) PREDICADOS -> EXP . is not distinct r_from EXP
    (223) PREDICADOS -> EXP . is PNULL
    (224) PREDICADOS -> EXP . isnull
    (225) PREDICADOS -> EXP . notnull
    (226) PREDICADOS -> EXP . is true
    (227) PREDICADOS -> EXP . is not true
    (228) PREDICADOS -> EXP . is false
    (229) PREDICADOS -> EXP . is not false
    (230) PREDICADOS -> EXP . is unknown
    (231) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 178 (EXP -> EXP elevado EXP .)
    limit           reduce using rule 178 (EXP -> EXP elevado EXP .)
    offset          reduce using rule 178 (EXP -> EXP elevado EXP .)
    union           reduce using rule 178 (EXP -> EXP elevado EXP .)
    intersect       reduce using rule 178 (EXP -> EXP elevado EXP .)
    except          reduce using rule 178 (EXP -> EXP elevado EXP .)
    ptcoma          reduce using rule 178 (EXP -> EXP elevado EXP .)
    elevado         reduce using rule 178 (EXP -> EXP elevado EXP .)
    punto           reduce using rule 178 (EXP -> EXP elevado EXP .)
    between         reduce using rule 178 (EXP -> EXP elevado EXP .)
    in              reduce using rule 178 (EXP -> EXP elevado EXP .)
    is              reduce using rule 178 (EXP -> EXP elevado EXP .)
    isnull          reduce using rule 178 (EXP -> EXP elevado EXP .)
    notnull         reduce using rule 178 (EXP -> EXP elevado EXP .)
    id              reduce using rule 178 (EXP -> EXP elevado EXP .)
    as              reduce using rule 178 (EXP -> EXP elevado EXP .)
    coma            reduce using rule 178 (EXP -> EXP elevado EXP .)
    parc            reduce using rule 178 (EXP -> EXP elevado EXP .)
    then            reduce using rule 178 (EXP -> EXP elevado EXP .)
    where           reduce using rule 178 (EXP -> EXP elevado EXP .)
    group           reduce using rule 178 (EXP -> EXP elevado EXP .)
    having          reduce using rule 178 (EXP -> EXP elevado EXP .)
    order           reduce using rule 178 (EXP -> EXP elevado EXP .)
    end             reduce using rule 178 (EXP -> EXP elevado EXP .)
    else            reduce using rule 178 (EXP -> EXP elevado EXP .)
    when            reduce using rule 178 (EXP -> EXP elevado EXP .)
    constraint      reduce using rule 178 (EXP -> EXP elevado EXP .)
    default         reduce using rule 178 (EXP -> EXP elevado EXP .)
    primary         reduce using rule 178 (EXP -> EXP elevado EXP .)
    references      reduce using rule 178 (EXP -> EXP elevado EXP .)
    null            reduce using rule 178 (EXP -> EXP elevado EXP .)
    asc             reduce using rule 178 (EXP -> EXP elevado EXP .)
    desc            reduce using rule 178 (EXP -> EXP elevado EXP .)
    mas             shift and go to state 88
    menos           shift and go to state 89
    multiplicacion  shift and go to state 90
    division        shift and go to state 91
    modulo          shift and go to state 92
    and             shift and go to state 94
    or              shift and go to state 95
    mayor           shift and go to state 96
    menor           shift and go to state 97
    mayor_igual     shift and go to state 98
    menor_igual     shift and go to state 99
    igual           shift and go to state 100
    diferente1      shift and go to state 101
    diferente2      shift and go to state 102
    not             shift and go to state 106

  ! mas             [ reduce using rule 178 (EXP -> EXP elevado EXP .) ]
  ! menos           [ reduce using rule 178 (EXP -> EXP elevado EXP .) ]
  ! multiplicacion  [ reduce using rule 178 (EXP -> EXP elevado EXP .) ]
  ! division        [ reduce using rule 178 (EXP -> EXP elevado EXP .) ]
  ! modulo          [ reduce using rule 178 (EXP -> EXP elevado EXP .) ]
  ! and             [ reduce using rule 178 (EXP -> EXP elevado EXP .) ]
  ! or              [ reduce using rule 178 (EXP -> EXP elevado EXP .) ]
  ! mayor           [ reduce using rule 178 (EXP -> EXP elevado EXP .) ]
  ! menor           [ reduce using rule 178 (EXP -> EXP elevado EXP .) ]
  ! mayor_igual     [ reduce using rule 178 (EXP -> EXP elevado EXP .) ]
  ! menor_igual     [ reduce using rule 178 (EXP -> EXP elevado EXP .) ]
  ! igual           [ reduce using rule 178 (EXP -> EXP elevado EXP .) ]
  ! diferente1      [ reduce using rule 178 (EXP -> EXP elevado EXP .) ]
  ! diferente2      [ reduce using rule 178 (EXP -> EXP elevado EXP .) ]
  ! not             [ reduce using rule 178 (EXP -> EXP elevado EXP .) ]
  ! elevado         [ shift and go to state 93 ]
  ! punto           [ shift and go to state 103 ]
  ! between         [ shift and go to state 104 ]
  ! in              [ shift and go to state 105 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 108 ]
  ! notnull         [ shift and go to state 109 ]


state 163

    (179) EXP -> EXP and EXP .
    (173) EXP -> EXP . mas EXP
    (174) EXP -> EXP . menos EXP
    (175) EXP -> EXP . multiplicacion EXP
    (176) EXP -> EXP . division EXP
    (177) EXP -> EXP . modulo EXP
    (178) EXP -> EXP . elevado EXP
    (179) EXP -> EXP . and EXP
    (180) EXP -> EXP . or EXP
    (181) EXP -> EXP . mayor EXP
    (182) EXP -> EXP . menor EXP
    (183) EXP -> EXP . mayor_igual EXP
    (184) EXP -> EXP . menor_igual EXP
    (185) EXP -> EXP . igual EXP
    (186) EXP -> EXP . diferente1 EXP
    (187) EXP -> EXP . diferente2 EXP
    (188) EXP -> EXP . punto EXP
    (215) PREDICADOS -> EXP . between EXP
    (216) PREDICADOS -> EXP . in para LEXP parc
    (217) PREDICADOS -> EXP . not in para LEXP parc
    (218) PREDICADOS -> EXP . not between EXP
    (219) PREDICADOS -> EXP . between symetric EXP
    (220) PREDICADOS -> EXP . not between symetric EXP
    (221) PREDICADOS -> EXP . is distinct r_from EXP
    (222) PREDICADOS -> EXP . is not distinct r_from EXP
    (223) PREDICADOS -> EXP . is PNULL
    (224) PREDICADOS -> EXP . isnull
    (225) PREDICADOS -> EXP . notnull
    (226) PREDICADOS -> EXP . is true
    (227) PREDICADOS -> EXP . is not true
    (228) PREDICADOS -> EXP . is false
    (229) PREDICADOS -> EXP . is not false
    (230) PREDICADOS -> EXP . is unknown
    (231) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 179 (EXP -> EXP and EXP .)
    limit           reduce using rule 179 (EXP -> EXP and EXP .)
    offset          reduce using rule 179 (EXP -> EXP and EXP .)
    union           reduce using rule 179 (EXP -> EXP and EXP .)
    intersect       reduce using rule 179 (EXP -> EXP and EXP .)
    except          reduce using rule 179 (EXP -> EXP and EXP .)
    ptcoma          reduce using rule 179 (EXP -> EXP and EXP .)
    mas             reduce using rule 179 (EXP -> EXP and EXP .)
    menos           reduce using rule 179 (EXP -> EXP and EXP .)
    multiplicacion  reduce using rule 179 (EXP -> EXP and EXP .)
    division        reduce using rule 179 (EXP -> EXP and EXP .)
    modulo          reduce using rule 179 (EXP -> EXP and EXP .)
    elevado         reduce using rule 179 (EXP -> EXP and EXP .)
    and             reduce using rule 179 (EXP -> EXP and EXP .)
    mayor           reduce using rule 179 (EXP -> EXP and EXP .)
    menor           reduce using rule 179 (EXP -> EXP and EXP .)
    mayor_igual     reduce using rule 179 (EXP -> EXP and EXP .)
    menor_igual     reduce using rule 179 (EXP -> EXP and EXP .)
    igual           reduce using rule 179 (EXP -> EXP and EXP .)
    diferente1      reduce using rule 179 (EXP -> EXP and EXP .)
    diferente2      reduce using rule 179 (EXP -> EXP and EXP .)
    punto           reduce using rule 179 (EXP -> EXP and EXP .)
    between         reduce using rule 179 (EXP -> EXP and EXP .)
    in              reduce using rule 179 (EXP -> EXP and EXP .)
    not             reduce using rule 179 (EXP -> EXP and EXP .)
    is              reduce using rule 179 (EXP -> EXP and EXP .)
    isnull          reduce using rule 179 (EXP -> EXP and EXP .)
    notnull         reduce using rule 179 (EXP -> EXP and EXP .)
    id              reduce using rule 179 (EXP -> EXP and EXP .)
    as              reduce using rule 179 (EXP -> EXP and EXP .)
    coma            reduce using rule 179 (EXP -> EXP and EXP .)
    parc            reduce using rule 179 (EXP -> EXP and EXP .)
    then            reduce using rule 179 (EXP -> EXP and EXP .)
    where           reduce using rule 179 (EXP -> EXP and EXP .)
    group           reduce using rule 179 (EXP -> EXP and EXP .)
    having          reduce using rule 179 (EXP -> EXP and EXP .)
    order           reduce using rule 179 (EXP -> EXP and EXP .)
    end             reduce using rule 179 (EXP -> EXP and EXP .)
    else            reduce using rule 179 (EXP -> EXP and EXP .)
    when            reduce using rule 179 (EXP -> EXP and EXP .)
    constraint      reduce using rule 179 (EXP -> EXP and EXP .)
    default         reduce using rule 179 (EXP -> EXP and EXP .)
    primary         reduce using rule 179 (EXP -> EXP and EXP .)
    references      reduce using rule 179 (EXP -> EXP and EXP .)
    null            reduce using rule 179 (EXP -> EXP and EXP .)
    asc             reduce using rule 179 (EXP -> EXP and EXP .)
    desc            reduce using rule 179 (EXP -> EXP and EXP .)
    or              shift and go to state 95

  ! or              [ reduce using rule 179 (EXP -> EXP and EXP .) ]
  ! mas             [ shift and go to state 88 ]
  ! menos           [ shift and go to state 89 ]
  ! multiplicacion  [ shift and go to state 90 ]
  ! division        [ shift and go to state 91 ]
  ! modulo          [ shift and go to state 92 ]
  ! elevado         [ shift and go to state 93 ]
  ! and             [ shift and go to state 94 ]
  ! mayor           [ shift and go to state 96 ]
  ! menor           [ shift and go to state 97 ]
  ! mayor_igual     [ shift and go to state 98 ]
  ! menor_igual     [ shift and go to state 99 ]
  ! igual           [ shift and go to state 100 ]
  ! diferente1      [ shift and go to state 101 ]
  ! diferente2      [ shift and go to state 102 ]
  ! punto           [ shift and go to state 103 ]
  ! between         [ shift and go to state 104 ]
  ! in              [ shift and go to state 105 ]
  ! not             [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 108 ]
  ! notnull         [ shift and go to state 109 ]


state 164

    (180) EXP -> EXP or EXP .
    (173) EXP -> EXP . mas EXP
    (174) EXP -> EXP . menos EXP
    (175) EXP -> EXP . multiplicacion EXP
    (176) EXP -> EXP . division EXP
    (177) EXP -> EXP . modulo EXP
    (178) EXP -> EXP . elevado EXP
    (179) EXP -> EXP . and EXP
    (180) EXP -> EXP . or EXP
    (181) EXP -> EXP . mayor EXP
    (182) EXP -> EXP . menor EXP
    (183) EXP -> EXP . mayor_igual EXP
    (184) EXP -> EXP . menor_igual EXP
    (185) EXP -> EXP . igual EXP
    (186) EXP -> EXP . diferente1 EXP
    (187) EXP -> EXP . diferente2 EXP
    (188) EXP -> EXP . punto EXP
    (215) PREDICADOS -> EXP . between EXP
    (216) PREDICADOS -> EXP . in para LEXP parc
    (217) PREDICADOS -> EXP . not in para LEXP parc
    (218) PREDICADOS -> EXP . not between EXP
    (219) PREDICADOS -> EXP . between symetric EXP
    (220) PREDICADOS -> EXP . not between symetric EXP
    (221) PREDICADOS -> EXP . is distinct r_from EXP
    (222) PREDICADOS -> EXP . is not distinct r_from EXP
    (223) PREDICADOS -> EXP . is PNULL
    (224) PREDICADOS -> EXP . isnull
    (225) PREDICADOS -> EXP . notnull
    (226) PREDICADOS -> EXP . is true
    (227) PREDICADOS -> EXP . is not true
    (228) PREDICADOS -> EXP . is false
    (229) PREDICADOS -> EXP . is not false
    (230) PREDICADOS -> EXP . is unknown
    (231) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 180 (EXP -> EXP or EXP .)
    limit           reduce using rule 180 (EXP -> EXP or EXP .)
    offset          reduce using rule 180 (EXP -> EXP or EXP .)
    union           reduce using rule 180 (EXP -> EXP or EXP .)
    intersect       reduce using rule 180 (EXP -> EXP or EXP .)
    except          reduce using rule 180 (EXP -> EXP or EXP .)
    ptcoma          reduce using rule 180 (EXP -> EXP or EXP .)
    mas             reduce using rule 180 (EXP -> EXP or EXP .)
    menos           reduce using rule 180 (EXP -> EXP or EXP .)
    multiplicacion  reduce using rule 180 (EXP -> EXP or EXP .)
    division        reduce using rule 180 (EXP -> EXP or EXP .)
    modulo          reduce using rule 180 (EXP -> EXP or EXP .)
    elevado         reduce using rule 180 (EXP -> EXP or EXP .)
    and             reduce using rule 180 (EXP -> EXP or EXP .)
    or              reduce using rule 180 (EXP -> EXP or EXP .)
    mayor           reduce using rule 180 (EXP -> EXP or EXP .)
    menor           reduce using rule 180 (EXP -> EXP or EXP .)
    mayor_igual     reduce using rule 180 (EXP -> EXP or EXP .)
    menor_igual     reduce using rule 180 (EXP -> EXP or EXP .)
    igual           reduce using rule 180 (EXP -> EXP or EXP .)
    diferente1      reduce using rule 180 (EXP -> EXP or EXP .)
    diferente2      reduce using rule 180 (EXP -> EXP or EXP .)
    punto           reduce using rule 180 (EXP -> EXP or EXP .)
    between         reduce using rule 180 (EXP -> EXP or EXP .)
    in              reduce using rule 180 (EXP -> EXP or EXP .)
    not             reduce using rule 180 (EXP -> EXP or EXP .)
    is              reduce using rule 180 (EXP -> EXP or EXP .)
    isnull          reduce using rule 180 (EXP -> EXP or EXP .)
    notnull         reduce using rule 180 (EXP -> EXP or EXP .)
    id              reduce using rule 180 (EXP -> EXP or EXP .)
    as              reduce using rule 180 (EXP -> EXP or EXP .)
    coma            reduce using rule 180 (EXP -> EXP or EXP .)
    parc            reduce using rule 180 (EXP -> EXP or EXP .)
    then            reduce using rule 180 (EXP -> EXP or EXP .)
    where           reduce using rule 180 (EXP -> EXP or EXP .)
    group           reduce using rule 180 (EXP -> EXP or EXP .)
    having          reduce using rule 180 (EXP -> EXP or EXP .)
    order           reduce using rule 180 (EXP -> EXP or EXP .)
    end             reduce using rule 180 (EXP -> EXP or EXP .)
    else            reduce using rule 180 (EXP -> EXP or EXP .)
    when            reduce using rule 180 (EXP -> EXP or EXP .)
    constraint      reduce using rule 180 (EXP -> EXP or EXP .)
    default         reduce using rule 180 (EXP -> EXP or EXP .)
    primary         reduce using rule 180 (EXP -> EXP or EXP .)
    references      reduce using rule 180 (EXP -> EXP or EXP .)
    null            reduce using rule 180 (EXP -> EXP or EXP .)
    asc             reduce using rule 180 (EXP -> EXP or EXP .)
    desc            reduce using rule 180 (EXP -> EXP or EXP .)

  ! mas             [ shift and go to state 88 ]
  ! menos           [ shift and go to state 89 ]
  ! multiplicacion  [ shift and go to state 90 ]
  ! division        [ shift and go to state 91 ]
  ! modulo          [ shift and go to state 92 ]
  ! elevado         [ shift and go to state 93 ]
  ! and             [ shift and go to state 94 ]
  ! or              [ shift and go to state 95 ]
  ! mayor           [ shift and go to state 96 ]
  ! menor           [ shift and go to state 97 ]
  ! mayor_igual     [ shift and go to state 98 ]
  ! menor_igual     [ shift and go to state 99 ]
  ! igual           [ shift and go to state 100 ]
  ! diferente1      [ shift and go to state 101 ]
  ! diferente2      [ shift and go to state 102 ]
  ! punto           [ shift and go to state 103 ]
  ! between         [ shift and go to state 104 ]
  ! in              [ shift and go to state 105 ]
  ! not             [ shift and go to state 106 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 108 ]
  ! notnull         [ shift and go to state 109 ]


state 165

    (181) EXP -> EXP mayor EXP .
    (173) EXP -> EXP . mas EXP
    (174) EXP -> EXP . menos EXP
    (175) EXP -> EXP . multiplicacion EXP
    (176) EXP -> EXP . division EXP
    (177) EXP -> EXP . modulo EXP
    (178) EXP -> EXP . elevado EXP
    (179) EXP -> EXP . and EXP
    (180) EXP -> EXP . or EXP
    (181) EXP -> EXP . mayor EXP
    (182) EXP -> EXP . menor EXP
    (183) EXP -> EXP . mayor_igual EXP
    (184) EXP -> EXP . menor_igual EXP
    (185) EXP -> EXP . igual EXP
    (186) EXP -> EXP . diferente1 EXP
    (187) EXP -> EXP . diferente2 EXP
    (188) EXP -> EXP . punto EXP
    (215) PREDICADOS -> EXP . between EXP
    (216) PREDICADOS -> EXP . in para LEXP parc
    (217) PREDICADOS -> EXP . not in para LEXP parc
    (218) PREDICADOS -> EXP . not between EXP
    (219) PREDICADOS -> EXP . between symetric EXP
    (220) PREDICADOS -> EXP . not between symetric EXP
    (221) PREDICADOS -> EXP . is distinct r_from EXP
    (222) PREDICADOS -> EXP . is not distinct r_from EXP
    (223) PREDICADOS -> EXP . is PNULL
    (224) PREDICADOS -> EXP . isnull
    (225) PREDICADOS -> EXP . notnull
    (226) PREDICADOS -> EXP . is true
    (227) PREDICADOS -> EXP . is not true
    (228) PREDICADOS -> EXP . is false
    (229) PREDICADOS -> EXP . is not false
    (230) PREDICADOS -> EXP . is unknown
    (231) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 181 (EXP -> EXP mayor EXP .)
    limit           reduce using rule 181 (EXP -> EXP mayor EXP .)
    offset          reduce using rule 181 (EXP -> EXP mayor EXP .)
    union           reduce using rule 181 (EXP -> EXP mayor EXP .)
    intersect       reduce using rule 181 (EXP -> EXP mayor EXP .)
    except          reduce using rule 181 (EXP -> EXP mayor EXP .)
    ptcoma          reduce using rule 181 (EXP -> EXP mayor EXP .)
    mas             reduce using rule 181 (EXP -> EXP mayor EXP .)
    menos           reduce using rule 181 (EXP -> EXP mayor EXP .)
    multiplicacion  reduce using rule 181 (EXP -> EXP mayor EXP .)
    division        reduce using rule 181 (EXP -> EXP mayor EXP .)
    modulo          reduce using rule 181 (EXP -> EXP mayor EXP .)
    elevado         reduce using rule 181 (EXP -> EXP mayor EXP .)
    mayor           reduce using rule 181 (EXP -> EXP mayor EXP .)
    menor           reduce using rule 181 (EXP -> EXP mayor EXP .)
    mayor_igual     reduce using rule 181 (EXP -> EXP mayor EXP .)
    menor_igual     reduce using rule 181 (EXP -> EXP mayor EXP .)
    igual           reduce using rule 181 (EXP -> EXP mayor EXP .)
    diferente1      reduce using rule 181 (EXP -> EXP mayor EXP .)
    diferente2      reduce using rule 181 (EXP -> EXP mayor EXP .)
    punto           reduce using rule 181 (EXP -> EXP mayor EXP .)
    between         reduce using rule 181 (EXP -> EXP mayor EXP .)
    in              reduce using rule 181 (EXP -> EXP mayor EXP .)
    is              reduce using rule 181 (EXP -> EXP mayor EXP .)
    isnull          reduce using rule 181 (EXP -> EXP mayor EXP .)
    notnull         reduce using rule 181 (EXP -> EXP mayor EXP .)
    id              reduce using rule 181 (EXP -> EXP mayor EXP .)
    as              reduce using rule 181 (EXP -> EXP mayor EXP .)
    coma            reduce using rule 181 (EXP -> EXP mayor EXP .)
    parc            reduce using rule 181 (EXP -> EXP mayor EXP .)
    then            reduce using rule 181 (EXP -> EXP mayor EXP .)
    where           reduce using rule 181 (EXP -> EXP mayor EXP .)
    group           reduce using rule 181 (EXP -> EXP mayor EXP .)
    having          reduce using rule 181 (EXP -> EXP mayor EXP .)
    order           reduce using rule 181 (EXP -> EXP mayor EXP .)
    end             reduce using rule 181 (EXP -> EXP mayor EXP .)
    else            reduce using rule 181 (EXP -> EXP mayor EXP .)
    when            reduce using rule 181 (EXP -> EXP mayor EXP .)
    constraint      reduce using rule 181 (EXP -> EXP mayor EXP .)
    default         reduce using rule 181 (EXP -> EXP mayor EXP .)
    primary         reduce using rule 181 (EXP -> EXP mayor EXP .)
    references      reduce using rule 181 (EXP -> EXP mayor EXP .)
    null            reduce using rule 181 (EXP -> EXP mayor EXP .)
    asc             reduce using rule 181 (EXP -> EXP mayor EXP .)
    desc            reduce using rule 181 (EXP -> EXP mayor EXP .)
    and             shift and go to state 94
    or              shift and go to state 95
    not             shift and go to state 106

  ! and             [ reduce using rule 181 (EXP -> EXP mayor EXP .) ]
  ! or              [ reduce using rule 181 (EXP -> EXP mayor EXP .) ]
  ! not             [ reduce using rule 181 (EXP -> EXP mayor EXP .) ]
  ! mas             [ shift and go to state 88 ]
  ! menos           [ shift and go to state 89 ]
  ! multiplicacion  [ shift and go to state 90 ]
  ! division        [ shift and go to state 91 ]
  ! modulo          [ shift and go to state 92 ]
  ! elevado         [ shift and go to state 93 ]
  ! mayor           [ shift and go to state 96 ]
  ! menor           [ shift and go to state 97 ]
  ! mayor_igual     [ shift and go to state 98 ]
  ! menor_igual     [ shift and go to state 99 ]
  ! igual           [ shift and go to state 100 ]
  ! diferente1      [ shift and go to state 101 ]
  ! diferente2      [ shift and go to state 102 ]
  ! punto           [ shift and go to state 103 ]
  ! between         [ shift and go to state 104 ]
  ! in              [ shift and go to state 105 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 108 ]
  ! notnull         [ shift and go to state 109 ]


state 166

    (182) EXP -> EXP menor EXP .
    (173) EXP -> EXP . mas EXP
    (174) EXP -> EXP . menos EXP
    (175) EXP -> EXP . multiplicacion EXP
    (176) EXP -> EXP . division EXP
    (177) EXP -> EXP . modulo EXP
    (178) EXP -> EXP . elevado EXP
    (179) EXP -> EXP . and EXP
    (180) EXP -> EXP . or EXP
    (181) EXP -> EXP . mayor EXP
    (182) EXP -> EXP . menor EXP
    (183) EXP -> EXP . mayor_igual EXP
    (184) EXP -> EXP . menor_igual EXP
    (185) EXP -> EXP . igual EXP
    (186) EXP -> EXP . diferente1 EXP
    (187) EXP -> EXP . diferente2 EXP
    (188) EXP -> EXP . punto EXP
    (215) PREDICADOS -> EXP . between EXP
    (216) PREDICADOS -> EXP . in para LEXP parc
    (217) PREDICADOS -> EXP . not in para LEXP parc
    (218) PREDICADOS -> EXP . not between EXP
    (219) PREDICADOS -> EXP . between symetric EXP
    (220) PREDICADOS -> EXP . not between symetric EXP
    (221) PREDICADOS -> EXP . is distinct r_from EXP
    (222) PREDICADOS -> EXP . is not distinct r_from EXP
    (223) PREDICADOS -> EXP . is PNULL
    (224) PREDICADOS -> EXP . isnull
    (225) PREDICADOS -> EXP . notnull
    (226) PREDICADOS -> EXP . is true
    (227) PREDICADOS -> EXP . is not true
    (228) PREDICADOS -> EXP . is false
    (229) PREDICADOS -> EXP . is not false
    (230) PREDICADOS -> EXP . is unknown
    (231) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 182 (EXP -> EXP menor EXP .)
    limit           reduce using rule 182 (EXP -> EXP menor EXP .)
    offset          reduce using rule 182 (EXP -> EXP menor EXP .)
    union           reduce using rule 182 (EXP -> EXP menor EXP .)
    intersect       reduce using rule 182 (EXP -> EXP menor EXP .)
    except          reduce using rule 182 (EXP -> EXP menor EXP .)
    ptcoma          reduce using rule 182 (EXP -> EXP menor EXP .)
    mas             reduce using rule 182 (EXP -> EXP menor EXP .)
    menos           reduce using rule 182 (EXP -> EXP menor EXP .)
    multiplicacion  reduce using rule 182 (EXP -> EXP menor EXP .)
    division        reduce using rule 182 (EXP -> EXP menor EXP .)
    modulo          reduce using rule 182 (EXP -> EXP menor EXP .)
    elevado         reduce using rule 182 (EXP -> EXP menor EXP .)
    mayor           reduce using rule 182 (EXP -> EXP menor EXP .)
    menor           reduce using rule 182 (EXP -> EXP menor EXP .)
    mayor_igual     reduce using rule 182 (EXP -> EXP menor EXP .)
    menor_igual     reduce using rule 182 (EXP -> EXP menor EXP .)
    igual           reduce using rule 182 (EXP -> EXP menor EXP .)
    diferente1      reduce using rule 182 (EXP -> EXP menor EXP .)
    diferente2      reduce using rule 182 (EXP -> EXP menor EXP .)
    punto           reduce using rule 182 (EXP -> EXP menor EXP .)
    between         reduce using rule 182 (EXP -> EXP menor EXP .)
    in              reduce using rule 182 (EXP -> EXP menor EXP .)
    is              reduce using rule 182 (EXP -> EXP menor EXP .)
    isnull          reduce using rule 182 (EXP -> EXP menor EXP .)
    notnull         reduce using rule 182 (EXP -> EXP menor EXP .)
    id              reduce using rule 182 (EXP -> EXP menor EXP .)
    as              reduce using rule 182 (EXP -> EXP menor EXP .)
    coma            reduce using rule 182 (EXP -> EXP menor EXP .)
    parc            reduce using rule 182 (EXP -> EXP menor EXP .)
    then            reduce using rule 182 (EXP -> EXP menor EXP .)
    where           reduce using rule 182 (EXP -> EXP menor EXP .)
    group           reduce using rule 182 (EXP -> EXP menor EXP .)
    having          reduce using rule 182 (EXP -> EXP menor EXP .)
    order           reduce using rule 182 (EXP -> EXP menor EXP .)
    end             reduce using rule 182 (EXP -> EXP menor EXP .)
    else            reduce using rule 182 (EXP -> EXP menor EXP .)
    when            reduce using rule 182 (EXP -> EXP menor EXP .)
    constraint      reduce using rule 182 (EXP -> EXP menor EXP .)
    default         reduce using rule 182 (EXP -> EXP menor EXP .)
    primary         reduce using rule 182 (EXP -> EXP menor EXP .)
    references      reduce using rule 182 (EXP -> EXP menor EXP .)
    null            reduce using rule 182 (EXP -> EXP menor EXP .)
    asc             reduce using rule 182 (EXP -> EXP menor EXP .)
    desc            reduce using rule 182 (EXP -> EXP menor EXP .)
    and             shift and go to state 94
    or              shift and go to state 95
    not             shift and go to state 106

  ! and             [ reduce using rule 182 (EXP -> EXP menor EXP .) ]
  ! or              [ reduce using rule 182 (EXP -> EXP menor EXP .) ]
  ! not             [ reduce using rule 182 (EXP -> EXP menor EXP .) ]
  ! mas             [ shift and go to state 88 ]
  ! menos           [ shift and go to state 89 ]
  ! multiplicacion  [ shift and go to state 90 ]
  ! division        [ shift and go to state 91 ]
  ! modulo          [ shift and go to state 92 ]
  ! elevado         [ shift and go to state 93 ]
  ! mayor           [ shift and go to state 96 ]
  ! menor           [ shift and go to state 97 ]
  ! mayor_igual     [ shift and go to state 98 ]
  ! menor_igual     [ shift and go to state 99 ]
  ! igual           [ shift and go to state 100 ]
  ! diferente1      [ shift and go to state 101 ]
  ! diferente2      [ shift and go to state 102 ]
  ! punto           [ shift and go to state 103 ]
  ! between         [ shift and go to state 104 ]
  ! in              [ shift and go to state 105 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 108 ]
  ! notnull         [ shift and go to state 109 ]


state 167

    (183) EXP -> EXP mayor_igual EXP .
    (173) EXP -> EXP . mas EXP
    (174) EXP -> EXP . menos EXP
    (175) EXP -> EXP . multiplicacion EXP
    (176) EXP -> EXP . division EXP
    (177) EXP -> EXP . modulo EXP
    (178) EXP -> EXP . elevado EXP
    (179) EXP -> EXP . and EXP
    (180) EXP -> EXP . or EXP
    (181) EXP -> EXP . mayor EXP
    (182) EXP -> EXP . menor EXP
    (183) EXP -> EXP . mayor_igual EXP
    (184) EXP -> EXP . menor_igual EXP
    (185) EXP -> EXP . igual EXP
    (186) EXP -> EXP . diferente1 EXP
    (187) EXP -> EXP . diferente2 EXP
    (188) EXP -> EXP . punto EXP
    (215) PREDICADOS -> EXP . between EXP
    (216) PREDICADOS -> EXP . in para LEXP parc
    (217) PREDICADOS -> EXP . not in para LEXP parc
    (218) PREDICADOS -> EXP . not between EXP
    (219) PREDICADOS -> EXP . between symetric EXP
    (220) PREDICADOS -> EXP . not between symetric EXP
    (221) PREDICADOS -> EXP . is distinct r_from EXP
    (222) PREDICADOS -> EXP . is not distinct r_from EXP
    (223) PREDICADOS -> EXP . is PNULL
    (224) PREDICADOS -> EXP . isnull
    (225) PREDICADOS -> EXP . notnull
    (226) PREDICADOS -> EXP . is true
    (227) PREDICADOS -> EXP . is not true
    (228) PREDICADOS -> EXP . is false
    (229) PREDICADOS -> EXP . is not false
    (230) PREDICADOS -> EXP . is unknown
    (231) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    limit           reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    offset          reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    union           reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    intersect       reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    except          reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    ptcoma          reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    mas             reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    menos           reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    multiplicacion  reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    division        reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    modulo          reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    elevado         reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    mayor           reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    menor           reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    mayor_igual     reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    menor_igual     reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    igual           reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    diferente1      reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    diferente2      reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    punto           reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    between         reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    in              reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    is              reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    isnull          reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    notnull         reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    id              reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    as              reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    coma            reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    parc            reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    then            reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    where           reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    group           reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    having          reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    order           reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    end             reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    else            reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    when            reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    constraint      reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    default         reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    primary         reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    references      reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    null            reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    asc             reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    desc            reduce using rule 183 (EXP -> EXP mayor_igual EXP .)
    and             shift and go to state 94
    or              shift and go to state 95
    not             shift and go to state 106

  ! and             [ reduce using rule 183 (EXP -> EXP mayor_igual EXP .) ]
  ! or              [ reduce using rule 183 (EXP -> EXP mayor_igual EXP .) ]
  ! not             [ reduce using rule 183 (EXP -> EXP mayor_igual EXP .) ]
  ! mas             [ shift and go to state 88 ]
  ! menos           [ shift and go to state 89 ]
  ! multiplicacion  [ shift and go to state 90 ]
  ! division        [ shift and go to state 91 ]
  ! modulo          [ shift and go to state 92 ]
  ! elevado         [ shift and go to state 93 ]
  ! mayor           [ shift and go to state 96 ]
  ! menor           [ shift and go to state 97 ]
  ! mayor_igual     [ shift and go to state 98 ]
  ! menor_igual     [ shift and go to state 99 ]
  ! igual           [ shift and go to state 100 ]
  ! diferente1      [ shift and go to state 101 ]
  ! diferente2      [ shift and go to state 102 ]
  ! punto           [ shift and go to state 103 ]
  ! between         [ shift and go to state 104 ]
  ! in              [ shift and go to state 105 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 108 ]
  ! notnull         [ shift and go to state 109 ]


state 168

    (184) EXP -> EXP menor_igual EXP .
    (173) EXP -> EXP . mas EXP
    (174) EXP -> EXP . menos EXP
    (175) EXP -> EXP . multiplicacion EXP
    (176) EXP -> EXP . division EXP
    (177) EXP -> EXP . modulo EXP
    (178) EXP -> EXP . elevado EXP
    (179) EXP -> EXP . and EXP
    (180) EXP -> EXP . or EXP
    (181) EXP -> EXP . mayor EXP
    (182) EXP -> EXP . menor EXP
    (183) EXP -> EXP . mayor_igual EXP
    (184) EXP -> EXP . menor_igual EXP
    (185) EXP -> EXP . igual EXP
    (186) EXP -> EXP . diferente1 EXP
    (187) EXP -> EXP . diferente2 EXP
    (188) EXP -> EXP . punto EXP
    (215) PREDICADOS -> EXP . between EXP
    (216) PREDICADOS -> EXP . in para LEXP parc
    (217) PREDICADOS -> EXP . not in para LEXP parc
    (218) PREDICADOS -> EXP . not between EXP
    (219) PREDICADOS -> EXP . between symetric EXP
    (220) PREDICADOS -> EXP . not between symetric EXP
    (221) PREDICADOS -> EXP . is distinct r_from EXP
    (222) PREDICADOS -> EXP . is not distinct r_from EXP
    (223) PREDICADOS -> EXP . is PNULL
    (224) PREDICADOS -> EXP . isnull
    (225) PREDICADOS -> EXP . notnull
    (226) PREDICADOS -> EXP . is true
    (227) PREDICADOS -> EXP . is not true
    (228) PREDICADOS -> EXP . is false
    (229) PREDICADOS -> EXP . is not false
    (230) PREDICADOS -> EXP . is unknown
    (231) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    limit           reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    offset          reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    union           reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    intersect       reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    except          reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    ptcoma          reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    mas             reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    menos           reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    multiplicacion  reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    division        reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    modulo          reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    elevado         reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    mayor           reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    menor           reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    mayor_igual     reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    menor_igual     reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    igual           reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    diferente1      reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    diferente2      reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    punto           reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    between         reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    in              reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    is              reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    isnull          reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    notnull         reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    id              reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    as              reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    coma            reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    parc            reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    then            reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    where           reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    group           reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    having          reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    order           reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    end             reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    else            reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    when            reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    constraint      reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    default         reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    primary         reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    references      reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    null            reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    asc             reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    desc            reduce using rule 184 (EXP -> EXP menor_igual EXP .)
    and             shift and go to state 94
    or              shift and go to state 95
    not             shift and go to state 106

  ! and             [ reduce using rule 184 (EXP -> EXP menor_igual EXP .) ]
  ! or              [ reduce using rule 184 (EXP -> EXP menor_igual EXP .) ]
  ! not             [ reduce using rule 184 (EXP -> EXP menor_igual EXP .) ]
  ! mas             [ shift and go to state 88 ]
  ! menos           [ shift and go to state 89 ]
  ! multiplicacion  [ shift and go to state 90 ]
  ! division        [ shift and go to state 91 ]
  ! modulo          [ shift and go to state 92 ]
  ! elevado         [ shift and go to state 93 ]
  ! mayor           [ shift and go to state 96 ]
  ! menor           [ shift and go to state 97 ]
  ! mayor_igual     [ shift and go to state 98 ]
  ! menor_igual     [ shift and go to state 99 ]
  ! igual           [ shift and go to state 100 ]
  ! diferente1      [ shift and go to state 101 ]
  ! diferente2      [ shift and go to state 102 ]
  ! punto           [ shift and go to state 103 ]
  ! between         [ shift and go to state 104 ]
  ! in              [ shift and go to state 105 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 108 ]
  ! notnull         [ shift and go to state 109 ]


state 169

    (185) EXP -> EXP igual EXP .
    (173) EXP -> EXP . mas EXP
    (174) EXP -> EXP . menos EXP
    (175) EXP -> EXP . multiplicacion EXP
    (176) EXP -> EXP . division EXP
    (177) EXP -> EXP . modulo EXP
    (178) EXP -> EXP . elevado EXP
    (179) EXP -> EXP . and EXP
    (180) EXP -> EXP . or EXP
    (181) EXP -> EXP . mayor EXP
    (182) EXP -> EXP . menor EXP
    (183) EXP -> EXP . mayor_igual EXP
    (184) EXP -> EXP . menor_igual EXP
    (185) EXP -> EXP . igual EXP
    (186) EXP -> EXP . diferente1 EXP
    (187) EXP -> EXP . diferente2 EXP
    (188) EXP -> EXP . punto EXP
    (215) PREDICADOS -> EXP . between EXP
    (216) PREDICADOS -> EXP . in para LEXP parc
    (217) PREDICADOS -> EXP . not in para LEXP parc
    (218) PREDICADOS -> EXP . not between EXP
    (219) PREDICADOS -> EXP . between symetric EXP
    (220) PREDICADOS -> EXP . not between symetric EXP
    (221) PREDICADOS -> EXP . is distinct r_from EXP
    (222) PREDICADOS -> EXP . is not distinct r_from EXP
    (223) PREDICADOS -> EXP . is PNULL
    (224) PREDICADOS -> EXP . isnull
    (225) PREDICADOS -> EXP . notnull
    (226) PREDICADOS -> EXP . is true
    (227) PREDICADOS -> EXP . is not true
    (228) PREDICADOS -> EXP . is false
    (229) PREDICADOS -> EXP . is not false
    (230) PREDICADOS -> EXP . is unknown
    (231) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 185 (EXP -> EXP igual EXP .)
    limit           reduce using rule 185 (EXP -> EXP igual EXP .)
    offset          reduce using rule 185 (EXP -> EXP igual EXP .)
    union           reduce using rule 185 (EXP -> EXP igual EXP .)
    intersect       reduce using rule 185 (EXP -> EXP igual EXP .)
    except          reduce using rule 185 (EXP -> EXP igual EXP .)
    ptcoma          reduce using rule 185 (EXP -> EXP igual EXP .)
    mas             reduce using rule 185 (EXP -> EXP igual EXP .)
    menos           reduce using rule 185 (EXP -> EXP igual EXP .)
    multiplicacion  reduce using rule 185 (EXP -> EXP igual EXP .)
    division        reduce using rule 185 (EXP -> EXP igual EXP .)
    modulo          reduce using rule 185 (EXP -> EXP igual EXP .)
    elevado         reduce using rule 185 (EXP -> EXP igual EXP .)
    mayor           reduce using rule 185 (EXP -> EXP igual EXP .)
    menor           reduce using rule 185 (EXP -> EXP igual EXP .)
    mayor_igual     reduce using rule 185 (EXP -> EXP igual EXP .)
    menor_igual     reduce using rule 185 (EXP -> EXP igual EXP .)
    igual           reduce using rule 185 (EXP -> EXP igual EXP .)
    diferente1      reduce using rule 185 (EXP -> EXP igual EXP .)
    diferente2      reduce using rule 185 (EXP -> EXP igual EXP .)
    punto           reduce using rule 185 (EXP -> EXP igual EXP .)
    between         reduce using rule 185 (EXP -> EXP igual EXP .)
    in              reduce using rule 185 (EXP -> EXP igual EXP .)
    is              reduce using rule 185 (EXP -> EXP igual EXP .)
    isnull          reduce using rule 185 (EXP -> EXP igual EXP .)
    notnull         reduce using rule 185 (EXP -> EXP igual EXP .)
    id              reduce using rule 185 (EXP -> EXP igual EXP .)
    as              reduce using rule 185 (EXP -> EXP igual EXP .)
    coma            reduce using rule 185 (EXP -> EXP igual EXP .)
    parc            reduce using rule 185 (EXP -> EXP igual EXP .)
    then            reduce using rule 185 (EXP -> EXP igual EXP .)
    where           reduce using rule 185 (EXP -> EXP igual EXP .)
    group           reduce using rule 185 (EXP -> EXP igual EXP .)
    having          reduce using rule 185 (EXP -> EXP igual EXP .)
    order           reduce using rule 185 (EXP -> EXP igual EXP .)
    end             reduce using rule 185 (EXP -> EXP igual EXP .)
    else            reduce using rule 185 (EXP -> EXP igual EXP .)
    when            reduce using rule 185 (EXP -> EXP igual EXP .)
    constraint      reduce using rule 185 (EXP -> EXP igual EXP .)
    default         reduce using rule 185 (EXP -> EXP igual EXP .)
    primary         reduce using rule 185 (EXP -> EXP igual EXP .)
    references      reduce using rule 185 (EXP -> EXP igual EXP .)
    null            reduce using rule 185 (EXP -> EXP igual EXP .)
    asc             reduce using rule 185 (EXP -> EXP igual EXP .)
    desc            reduce using rule 185 (EXP -> EXP igual EXP .)
    and             shift and go to state 94
    or              shift and go to state 95
    not             shift and go to state 106

  ! and             [ reduce using rule 185 (EXP -> EXP igual EXP .) ]
  ! or              [ reduce using rule 185 (EXP -> EXP igual EXP .) ]
  ! not             [ reduce using rule 185 (EXP -> EXP igual EXP .) ]
  ! mas             [ shift and go to state 88 ]
  ! menos           [ shift and go to state 89 ]
  ! multiplicacion  [ shift and go to state 90 ]
  ! division        [ shift and go to state 91 ]
  ! modulo          [ shift and go to state 92 ]
  ! elevado         [ shift and go to state 93 ]
  ! mayor           [ shift and go to state 96 ]
  ! menor           [ shift and go to state 97 ]
  ! mayor_igual     [ shift and go to state 98 ]
  ! menor_igual     [ shift and go to state 99 ]
  ! igual           [ shift and go to state 100 ]
  ! diferente1      [ shift and go to state 101 ]
  ! diferente2      [ shift and go to state 102 ]
  ! punto           [ shift and go to state 103 ]
  ! between         [ shift and go to state 104 ]
  ! in              [ shift and go to state 105 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 108 ]
  ! notnull         [ shift and go to state 109 ]


state 170

    (186) EXP -> EXP diferente1 EXP .
    (173) EXP -> EXP . mas EXP
    (174) EXP -> EXP . menos EXP
    (175) EXP -> EXP . multiplicacion EXP
    (176) EXP -> EXP . division EXP
    (177) EXP -> EXP . modulo EXP
    (178) EXP -> EXP . elevado EXP
    (179) EXP -> EXP . and EXP
    (180) EXP -> EXP . or EXP
    (181) EXP -> EXP . mayor EXP
    (182) EXP -> EXP . menor EXP
    (183) EXP -> EXP . mayor_igual EXP
    (184) EXP -> EXP . menor_igual EXP
    (185) EXP -> EXP . igual EXP
    (186) EXP -> EXP . diferente1 EXP
    (187) EXP -> EXP . diferente2 EXP
    (188) EXP -> EXP . punto EXP
    (215) PREDICADOS -> EXP . between EXP
    (216) PREDICADOS -> EXP . in para LEXP parc
    (217) PREDICADOS -> EXP . not in para LEXP parc
    (218) PREDICADOS -> EXP . not between EXP
    (219) PREDICADOS -> EXP . between symetric EXP
    (220) PREDICADOS -> EXP . not between symetric EXP
    (221) PREDICADOS -> EXP . is distinct r_from EXP
    (222) PREDICADOS -> EXP . is not distinct r_from EXP
    (223) PREDICADOS -> EXP . is PNULL
    (224) PREDICADOS -> EXP . isnull
    (225) PREDICADOS -> EXP . notnull
    (226) PREDICADOS -> EXP . is true
    (227) PREDICADOS -> EXP . is not true
    (228) PREDICADOS -> EXP . is false
    (229) PREDICADOS -> EXP . is not false
    (230) PREDICADOS -> EXP . is unknown
    (231) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    limit           reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    offset          reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    union           reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    intersect       reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    except          reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    ptcoma          reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    mas             reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    menos           reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    multiplicacion  reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    division        reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    modulo          reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    elevado         reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    mayor           reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    menor           reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    mayor_igual     reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    menor_igual     reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    igual           reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    diferente1      reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    diferente2      reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    punto           reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    between         reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    in              reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    is              reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    isnull          reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    notnull         reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    id              reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    as              reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    coma            reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    parc            reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    then            reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    where           reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    group           reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    having          reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    order           reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    end             reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    else            reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    when            reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    constraint      reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    default         reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    primary         reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    references      reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    null            reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    asc             reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    desc            reduce using rule 186 (EXP -> EXP diferente1 EXP .)
    and             shift and go to state 94
    or              shift and go to state 95
    not             shift and go to state 106

  ! and             [ reduce using rule 186 (EXP -> EXP diferente1 EXP .) ]
  ! or              [ reduce using rule 186 (EXP -> EXP diferente1 EXP .) ]
  ! not             [ reduce using rule 186 (EXP -> EXP diferente1 EXP .) ]
  ! mas             [ shift and go to state 88 ]
  ! menos           [ shift and go to state 89 ]
  ! multiplicacion  [ shift and go to state 90 ]
  ! division        [ shift and go to state 91 ]
  ! modulo          [ shift and go to state 92 ]
  ! elevado         [ shift and go to state 93 ]
  ! mayor           [ shift and go to state 96 ]
  ! menor           [ shift and go to state 97 ]
  ! mayor_igual     [ shift and go to state 98 ]
  ! menor_igual     [ shift and go to state 99 ]
  ! igual           [ shift and go to state 100 ]
  ! diferente1      [ shift and go to state 101 ]
  ! diferente2      [ shift and go to state 102 ]
  ! punto           [ shift and go to state 103 ]
  ! between         [ shift and go to state 104 ]
  ! in              [ shift and go to state 105 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 108 ]
  ! notnull         [ shift and go to state 109 ]


state 171

    (187) EXP -> EXP diferente2 EXP .
    (173) EXP -> EXP . mas EXP
    (174) EXP -> EXP . menos EXP
    (175) EXP -> EXP . multiplicacion EXP
    (176) EXP -> EXP . division EXP
    (177) EXP -> EXP . modulo EXP
    (178) EXP -> EXP . elevado EXP
    (179) EXP -> EXP . and EXP
    (180) EXP -> EXP . or EXP
    (181) EXP -> EXP . mayor EXP
    (182) EXP -> EXP . menor EXP
    (183) EXP -> EXP . mayor_igual EXP
    (184) EXP -> EXP . menor_igual EXP
    (185) EXP -> EXP . igual EXP
    (186) EXP -> EXP . diferente1 EXP
    (187) EXP -> EXP . diferente2 EXP
    (188) EXP -> EXP . punto EXP
    (215) PREDICADOS -> EXP . between EXP
    (216) PREDICADOS -> EXP . in para LEXP parc
    (217) PREDICADOS -> EXP . not in para LEXP parc
    (218) PREDICADOS -> EXP . not between EXP
    (219) PREDICADOS -> EXP . between symetric EXP
    (220) PREDICADOS -> EXP . not between symetric EXP
    (221) PREDICADOS -> EXP . is distinct r_from EXP
    (222) PREDICADOS -> EXP . is not distinct r_from EXP
    (223) PREDICADOS -> EXP . is PNULL
    (224) PREDICADOS -> EXP . isnull
    (225) PREDICADOS -> EXP . notnull
    (226) PREDICADOS -> EXP . is true
    (227) PREDICADOS -> EXP . is not true
    (228) PREDICADOS -> EXP . is false
    (229) PREDICADOS -> EXP . is not false
    (230) PREDICADOS -> EXP . is unknown
    (231) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    limit           reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    offset          reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    union           reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    intersect       reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    except          reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    ptcoma          reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    mas             reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    menos           reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    multiplicacion  reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    division        reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    modulo          reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    elevado         reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    mayor           reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    menor           reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    mayor_igual     reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    menor_igual     reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    igual           reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    diferente1      reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    diferente2      reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    punto           reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    between         reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    in              reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    is              reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    isnull          reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    notnull         reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    id              reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    as              reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    coma            reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    parc            reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    then            reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    where           reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    group           reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    having          reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    order           reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    end             reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    else            reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    when            reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    constraint      reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    default         reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    primary         reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    references      reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    null            reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    asc             reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    desc            reduce using rule 187 (EXP -> EXP diferente2 EXP .)
    and             shift and go to state 94
    or              shift and go to state 95
    not             shift and go to state 106

  ! and             [ reduce using rule 187 (EXP -> EXP diferente2 EXP .) ]
  ! or              [ reduce using rule 187 (EXP -> EXP diferente2 EXP .) ]
  ! not             [ reduce using rule 187 (EXP -> EXP diferente2 EXP .) ]
  ! mas             [ shift and go to state 88 ]
  ! menos           [ shift and go to state 89 ]
  ! multiplicacion  [ shift and go to state 90 ]
  ! division        [ shift and go to state 91 ]
  ! modulo          [ shift and go to state 92 ]
  ! elevado         [ shift and go to state 93 ]
  ! mayor           [ shift and go to state 96 ]
  ! menor           [ shift and go to state 97 ]
  ! mayor_igual     [ shift and go to state 98 ]
  ! menor_igual     [ shift and go to state 99 ]
  ! igual           [ shift and go to state 100 ]
  ! diferente1      [ shift and go to state 101 ]
  ! diferente2      [ shift and go to state 102 ]
  ! punto           [ shift and go to state 103 ]
  ! between         [ shift and go to state 104 ]
  ! in              [ shift and go to state 105 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 108 ]
  ! notnull         [ shift and go to state 109 ]


state 172

    (188) EXP -> EXP punto EXP .
    (173) EXP -> EXP . mas EXP
    (174) EXP -> EXP . menos EXP
    (175) EXP -> EXP . multiplicacion EXP
    (176) EXP -> EXP . division EXP
    (177) EXP -> EXP . modulo EXP
    (178) EXP -> EXP . elevado EXP
    (179) EXP -> EXP . and EXP
    (180) EXP -> EXP . or EXP
    (181) EXP -> EXP . mayor EXP
    (182) EXP -> EXP . menor EXP
    (183) EXP -> EXP . mayor_igual EXP
    (184) EXP -> EXP . menor_igual EXP
    (185) EXP -> EXP . igual EXP
    (186) EXP -> EXP . diferente1 EXP
    (187) EXP -> EXP . diferente2 EXP
    (188) EXP -> EXP . punto EXP
    (215) PREDICADOS -> EXP . between EXP
    (216) PREDICADOS -> EXP . in para LEXP parc
    (217) PREDICADOS -> EXP . not in para LEXP parc
    (218) PREDICADOS -> EXP . not between EXP
    (219) PREDICADOS -> EXP . between symetric EXP
    (220) PREDICADOS -> EXP . not between symetric EXP
    (221) PREDICADOS -> EXP . is distinct r_from EXP
    (222) PREDICADOS -> EXP . is not distinct r_from EXP
    (223) PREDICADOS -> EXP . is PNULL
    (224) PREDICADOS -> EXP . isnull
    (225) PREDICADOS -> EXP . notnull
    (226) PREDICADOS -> EXP . is true
    (227) PREDICADOS -> EXP . is not true
    (228) PREDICADOS -> EXP . is false
    (229) PREDICADOS -> EXP . is not false
    (230) PREDICADOS -> EXP . is unknown
    (231) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 188 (EXP -> EXP punto EXP .)
    limit           reduce using rule 188 (EXP -> EXP punto EXP .)
    offset          reduce using rule 188 (EXP -> EXP punto EXP .)
    union           reduce using rule 188 (EXP -> EXP punto EXP .)
    intersect       reduce using rule 188 (EXP -> EXP punto EXP .)
    except          reduce using rule 188 (EXP -> EXP punto EXP .)
    ptcoma          reduce using rule 188 (EXP -> EXP punto EXP .)
    punto           reduce using rule 188 (EXP -> EXP punto EXP .)
    between         reduce using rule 188 (EXP -> EXP punto EXP .)
    in              reduce using rule 188 (EXP -> EXP punto EXP .)
    is              reduce using rule 188 (EXP -> EXP punto EXP .)
    isnull          reduce using rule 188 (EXP -> EXP punto EXP .)
    notnull         reduce using rule 188 (EXP -> EXP punto EXP .)
    id              reduce using rule 188 (EXP -> EXP punto EXP .)
    as              reduce using rule 188 (EXP -> EXP punto EXP .)
    coma            reduce using rule 188 (EXP -> EXP punto EXP .)
    parc            reduce using rule 188 (EXP -> EXP punto EXP .)
    then            reduce using rule 188 (EXP -> EXP punto EXP .)
    where           reduce using rule 188 (EXP -> EXP punto EXP .)
    group           reduce using rule 188 (EXP -> EXP punto EXP .)
    having          reduce using rule 188 (EXP -> EXP punto EXP .)
    order           reduce using rule 188 (EXP -> EXP punto EXP .)
    end             reduce using rule 188 (EXP -> EXP punto EXP .)
    else            reduce using rule 188 (EXP -> EXP punto EXP .)
    when            reduce using rule 188 (EXP -> EXP punto EXP .)
    constraint      reduce using rule 188 (EXP -> EXP punto EXP .)
    default         reduce using rule 188 (EXP -> EXP punto EXP .)
    primary         reduce using rule 188 (EXP -> EXP punto EXP .)
    references      reduce using rule 188 (EXP -> EXP punto EXP .)
    null            reduce using rule 188 (EXP -> EXP punto EXP .)
    asc             reduce using rule 188 (EXP -> EXP punto EXP .)
    desc            reduce using rule 188 (EXP -> EXP punto EXP .)
    mas             shift and go to state 88
    menos           shift and go to state 89
    multiplicacion  shift and go to state 90
    division        shift and go to state 91
    modulo          shift and go to state 92
    elevado         shift and go to state 93
    and             shift and go to state 94
    or              shift and go to state 95
    mayor           shift and go to state 96
    menor           shift and go to state 97
    mayor_igual     shift and go to state 98
    menor_igual     shift and go to state 99
    igual           shift and go to state 100
    diferente1      shift and go to state 101
    diferente2      shift and go to state 102
    not             shift and go to state 106

  ! mas             [ reduce using rule 188 (EXP -> EXP punto EXP .) ]
  ! menos           [ reduce using rule 188 (EXP -> EXP punto EXP .) ]
  ! multiplicacion  [ reduce using rule 188 (EXP -> EXP punto EXP .) ]
  ! division        [ reduce using rule 188 (EXP -> EXP punto EXP .) ]
  ! modulo          [ reduce using rule 188 (EXP -> EXP punto EXP .) ]
  ! elevado         [ reduce using rule 188 (EXP -> EXP punto EXP .) ]
  ! and             [ reduce using rule 188 (EXP -> EXP punto EXP .) ]
  ! or              [ reduce using rule 188 (EXP -> EXP punto EXP .) ]
  ! mayor           [ reduce using rule 188 (EXP -> EXP punto EXP .) ]
  ! menor           [ reduce using rule 188 (EXP -> EXP punto EXP .) ]
  ! mayor_igual     [ reduce using rule 188 (EXP -> EXP punto EXP .) ]
  ! menor_igual     [ reduce using rule 188 (EXP -> EXP punto EXP .) ]
  ! igual           [ reduce using rule 188 (EXP -> EXP punto EXP .) ]
  ! diferente1      [ reduce using rule 188 (EXP -> EXP punto EXP .) ]
  ! diferente2      [ reduce using rule 188 (EXP -> EXP punto EXP .) ]
  ! not             [ reduce using rule 188 (EXP -> EXP punto EXP .) ]
  ! punto           [ shift and go to state 103 ]
  ! between         [ shift and go to state 104 ]
  ! in              [ shift and go to state 105 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 108 ]
  ! notnull         [ shift and go to state 109 ]


state 173

    (215) PREDICADOS -> EXP between EXP .
    (173) EXP -> EXP . mas EXP
    (174) EXP -> EXP . menos EXP
    (175) EXP -> EXP . multiplicacion EXP
    (176) EXP -> EXP . division EXP
    (177) EXP -> EXP . modulo EXP
    (178) EXP -> EXP . elevado EXP
    (179) EXP -> EXP . and EXP
    (180) EXP -> EXP . or EXP
    (181) EXP -> EXP . mayor EXP
    (182) EXP -> EXP . menor EXP
    (183) EXP -> EXP . mayor_igual EXP
    (184) EXP -> EXP . menor_igual EXP
    (185) EXP -> EXP . igual EXP
    (186) EXP -> EXP . diferente1 EXP
    (187) EXP -> EXP . diferente2 EXP
    (188) EXP -> EXP . punto EXP
    (215) PREDICADOS -> EXP . between EXP
    (216) PREDICADOS -> EXP . in para LEXP parc
    (217) PREDICADOS -> EXP . not in para LEXP parc
    (218) PREDICADOS -> EXP . not between EXP
    (219) PREDICADOS -> EXP . between symetric EXP
    (220) PREDICADOS -> EXP . not between symetric EXP
    (221) PREDICADOS -> EXP . is distinct r_from EXP
    (222) PREDICADOS -> EXP . is not distinct r_from EXP
    (223) PREDICADOS -> EXP . is PNULL
    (224) PREDICADOS -> EXP . isnull
    (225) PREDICADOS -> EXP . notnull
    (226) PREDICADOS -> EXP . is true
    (227) PREDICADOS -> EXP . is not true
    (228) PREDICADOS -> EXP . is false
    (229) PREDICADOS -> EXP . is not false
    (230) PREDICADOS -> EXP . is unknown
    (231) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    limit           reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    offset          reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    union           reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    intersect       reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    except          reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    ptcoma          reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    mas             reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    menos           reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    multiplicacion  reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    division        reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    modulo          reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    elevado         reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    mayor           reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    menor           reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    mayor_igual     reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    menor_igual     reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    igual           reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    diferente1      reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    diferente2      reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    punto           reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    between         reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    in              reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    is              reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    isnull          reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    notnull         reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    id              reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    as              reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    coma            reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    parc            reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    then            reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    where           reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    group           reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    having          reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    order           reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    end             reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    else            reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    when            reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    constraint      reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    default         reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    primary         reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    references      reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    null            reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    asc             reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    desc            reduce using rule 215 (PREDICADOS -> EXP between EXP .)
    and             shift and go to state 94
    or              shift and go to state 95
    not             shift and go to state 106

  ! and             [ reduce using rule 215 (PREDICADOS -> EXP between EXP .) ]
  ! or              [ reduce using rule 215 (PREDICADOS -> EXP between EXP .) ]
  ! not             [ reduce using rule 215 (PREDICADOS -> EXP between EXP .) ]
  ! mas             [ shift and go to state 88 ]
  ! menos           [ shift and go to state 89 ]
  ! multiplicacion  [ shift and go to state 90 ]
  ! division        [ shift and go to state 91 ]
  ! modulo          [ shift and go to state 92 ]
  ! elevado         [ shift and go to state 93 ]
  ! mayor           [ shift and go to state 96 ]
  ! menor           [ shift and go to state 97 ]
  ! mayor_igual     [ shift and go to state 98 ]
  ! menor_igual     [ shift and go to state 99 ]
  ! igual           [ shift and go to state 100 ]
  ! diferente1      [ shift and go to state 101 ]
  ! diferente2      [ shift and go to state 102 ]
  ! punto           [ shift and go to state 103 ]
  ! between         [ shift and go to state 104 ]
  ! in              [ shift and go to state 105 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 108 ]
  ! notnull         [ shift and go to state 109 ]


state 174

    (219) PREDICADOS -> EXP between symetric . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 241
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 175

    (216) PREDICADOS -> EXP in para . LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 40
    LEXP                           shift and go to state 242
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 176

    (217) PREDICADOS -> EXP not in . para LEXP parc

    para            shift and go to state 243


state 177

    (218) PREDICADOS -> EXP not between . EXP
    (220) PREDICADOS -> EXP not between . symetric EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    symetric        shift and go to state 245
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 244
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 178

    (221) PREDICADOS -> EXP is distinct . r_from EXP

    r_from          shift and go to state 246


state 179

    (222) PREDICADOS -> EXP is not . distinct r_from EXP
    (227) PREDICADOS -> EXP is not . true
    (229) PREDICADOS -> EXP is not . false
    (231) PREDICADOS -> EXP is not . unknown
    (77) PNULL -> not . null

    distinct        shift and go to state 247
    true            shift and go to state 248
    false           shift and go to state 249
    unknown         shift and go to state 250
    null            shift and go to state 251


state 180

    (223) PREDICADOS -> EXP is PNULL .

    r_from          reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    limit           reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    offset          reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    union           reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    intersect       reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    except          reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    ptcoma          reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    mas             reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    menos           reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    multiplicacion  reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    division        reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    modulo          reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    elevado         reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    and             reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    or              reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    mayor           reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    menor           reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    mayor_igual     reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    menor_igual     reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    igual           reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    diferente1      reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    diferente2      reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    punto           reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    between         reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    in              reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    not             reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    is              reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    isnull          reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    notnull         reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    id              reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    as              reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    coma            reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    parc            reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    then            reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    where           reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    group           reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    having          reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    order           reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    end             reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    else            reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    when            reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    constraint      reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    default         reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    primary         reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    references      reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    null            reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    asc             reduce using rule 223 (PREDICADOS -> EXP is PNULL .)
    desc            reduce using rule 223 (PREDICADOS -> EXP is PNULL .)


state 181

    (226) PREDICADOS -> EXP is true .

    r_from          reduce using rule 226 (PREDICADOS -> EXP is true .)
    limit           reduce using rule 226 (PREDICADOS -> EXP is true .)
    offset          reduce using rule 226 (PREDICADOS -> EXP is true .)
    union           reduce using rule 226 (PREDICADOS -> EXP is true .)
    intersect       reduce using rule 226 (PREDICADOS -> EXP is true .)
    except          reduce using rule 226 (PREDICADOS -> EXP is true .)
    ptcoma          reduce using rule 226 (PREDICADOS -> EXP is true .)
    mas             reduce using rule 226 (PREDICADOS -> EXP is true .)
    menos           reduce using rule 226 (PREDICADOS -> EXP is true .)
    multiplicacion  reduce using rule 226 (PREDICADOS -> EXP is true .)
    division        reduce using rule 226 (PREDICADOS -> EXP is true .)
    modulo          reduce using rule 226 (PREDICADOS -> EXP is true .)
    elevado         reduce using rule 226 (PREDICADOS -> EXP is true .)
    and             reduce using rule 226 (PREDICADOS -> EXP is true .)
    or              reduce using rule 226 (PREDICADOS -> EXP is true .)
    mayor           reduce using rule 226 (PREDICADOS -> EXP is true .)
    menor           reduce using rule 226 (PREDICADOS -> EXP is true .)
    mayor_igual     reduce using rule 226 (PREDICADOS -> EXP is true .)
    menor_igual     reduce using rule 226 (PREDICADOS -> EXP is true .)
    igual           reduce using rule 226 (PREDICADOS -> EXP is true .)
    diferente1      reduce using rule 226 (PREDICADOS -> EXP is true .)
    diferente2      reduce using rule 226 (PREDICADOS -> EXP is true .)
    punto           reduce using rule 226 (PREDICADOS -> EXP is true .)
    between         reduce using rule 226 (PREDICADOS -> EXP is true .)
    in              reduce using rule 226 (PREDICADOS -> EXP is true .)
    not             reduce using rule 226 (PREDICADOS -> EXP is true .)
    is              reduce using rule 226 (PREDICADOS -> EXP is true .)
    isnull          reduce using rule 226 (PREDICADOS -> EXP is true .)
    notnull         reduce using rule 226 (PREDICADOS -> EXP is true .)
    id              reduce using rule 226 (PREDICADOS -> EXP is true .)
    as              reduce using rule 226 (PREDICADOS -> EXP is true .)
    coma            reduce using rule 226 (PREDICADOS -> EXP is true .)
    parc            reduce using rule 226 (PREDICADOS -> EXP is true .)
    then            reduce using rule 226 (PREDICADOS -> EXP is true .)
    where           reduce using rule 226 (PREDICADOS -> EXP is true .)
    group           reduce using rule 226 (PREDICADOS -> EXP is true .)
    having          reduce using rule 226 (PREDICADOS -> EXP is true .)
    order           reduce using rule 226 (PREDICADOS -> EXP is true .)
    end             reduce using rule 226 (PREDICADOS -> EXP is true .)
    else            reduce using rule 226 (PREDICADOS -> EXP is true .)
    when            reduce using rule 226 (PREDICADOS -> EXP is true .)
    constraint      reduce using rule 226 (PREDICADOS -> EXP is true .)
    default         reduce using rule 226 (PREDICADOS -> EXP is true .)
    primary         reduce using rule 226 (PREDICADOS -> EXP is true .)
    references      reduce using rule 226 (PREDICADOS -> EXP is true .)
    null            reduce using rule 226 (PREDICADOS -> EXP is true .)
    asc             reduce using rule 226 (PREDICADOS -> EXP is true .)
    desc            reduce using rule 226 (PREDICADOS -> EXP is true .)


state 182

    (228) PREDICADOS -> EXP is false .

    r_from          reduce using rule 228 (PREDICADOS -> EXP is false .)
    limit           reduce using rule 228 (PREDICADOS -> EXP is false .)
    offset          reduce using rule 228 (PREDICADOS -> EXP is false .)
    union           reduce using rule 228 (PREDICADOS -> EXP is false .)
    intersect       reduce using rule 228 (PREDICADOS -> EXP is false .)
    except          reduce using rule 228 (PREDICADOS -> EXP is false .)
    ptcoma          reduce using rule 228 (PREDICADOS -> EXP is false .)
    mas             reduce using rule 228 (PREDICADOS -> EXP is false .)
    menos           reduce using rule 228 (PREDICADOS -> EXP is false .)
    multiplicacion  reduce using rule 228 (PREDICADOS -> EXP is false .)
    division        reduce using rule 228 (PREDICADOS -> EXP is false .)
    modulo          reduce using rule 228 (PREDICADOS -> EXP is false .)
    elevado         reduce using rule 228 (PREDICADOS -> EXP is false .)
    and             reduce using rule 228 (PREDICADOS -> EXP is false .)
    or              reduce using rule 228 (PREDICADOS -> EXP is false .)
    mayor           reduce using rule 228 (PREDICADOS -> EXP is false .)
    menor           reduce using rule 228 (PREDICADOS -> EXP is false .)
    mayor_igual     reduce using rule 228 (PREDICADOS -> EXP is false .)
    menor_igual     reduce using rule 228 (PREDICADOS -> EXP is false .)
    igual           reduce using rule 228 (PREDICADOS -> EXP is false .)
    diferente1      reduce using rule 228 (PREDICADOS -> EXP is false .)
    diferente2      reduce using rule 228 (PREDICADOS -> EXP is false .)
    punto           reduce using rule 228 (PREDICADOS -> EXP is false .)
    between         reduce using rule 228 (PREDICADOS -> EXP is false .)
    in              reduce using rule 228 (PREDICADOS -> EXP is false .)
    not             reduce using rule 228 (PREDICADOS -> EXP is false .)
    is              reduce using rule 228 (PREDICADOS -> EXP is false .)
    isnull          reduce using rule 228 (PREDICADOS -> EXP is false .)
    notnull         reduce using rule 228 (PREDICADOS -> EXP is false .)
    id              reduce using rule 228 (PREDICADOS -> EXP is false .)
    as              reduce using rule 228 (PREDICADOS -> EXP is false .)
    coma            reduce using rule 228 (PREDICADOS -> EXP is false .)
    parc            reduce using rule 228 (PREDICADOS -> EXP is false .)
    then            reduce using rule 228 (PREDICADOS -> EXP is false .)
    where           reduce using rule 228 (PREDICADOS -> EXP is false .)
    group           reduce using rule 228 (PREDICADOS -> EXP is false .)
    having          reduce using rule 228 (PREDICADOS -> EXP is false .)
    order           reduce using rule 228 (PREDICADOS -> EXP is false .)
    end             reduce using rule 228 (PREDICADOS -> EXP is false .)
    else            reduce using rule 228 (PREDICADOS -> EXP is false .)
    when            reduce using rule 228 (PREDICADOS -> EXP is false .)
    constraint      reduce using rule 228 (PREDICADOS -> EXP is false .)
    default         reduce using rule 228 (PREDICADOS -> EXP is false .)
    primary         reduce using rule 228 (PREDICADOS -> EXP is false .)
    references      reduce using rule 228 (PREDICADOS -> EXP is false .)
    null            reduce using rule 228 (PREDICADOS -> EXP is false .)
    asc             reduce using rule 228 (PREDICADOS -> EXP is false .)
    desc            reduce using rule 228 (PREDICADOS -> EXP is false .)


state 183

    (230) PREDICADOS -> EXP is unknown .

    r_from          reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    limit           reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    offset          reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    union           reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    intersect       reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    except          reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    ptcoma          reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    mas             reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    menos           reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    multiplicacion  reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    division        reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    modulo          reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    elevado         reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    and             reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    or              reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    mayor           reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    menor           reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    mayor_igual     reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    menor_igual     reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    igual           reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    diferente1      reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    diferente2      reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    punto           reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    between         reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    in              reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    not             reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    is              reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    isnull          reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    notnull         reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    id              reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    as              reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    coma            reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    parc            reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    then            reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    where           reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    group           reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    having          reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    order           reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    end             reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    else            reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    when            reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    constraint      reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    default         reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    primary         reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    references      reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    null            reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    asc             reduce using rule 230 (PREDICADOS -> EXP is unknown .)
    desc            reduce using rule 230 (PREDICADOS -> EXP is unknown .)


state 184

    (192) EXP -> para EXP parc .

    r_from          reduce using rule 192 (EXP -> para EXP parc .)
    limit           reduce using rule 192 (EXP -> para EXP parc .)
    offset          reduce using rule 192 (EXP -> para EXP parc .)
    union           reduce using rule 192 (EXP -> para EXP parc .)
    intersect       reduce using rule 192 (EXP -> para EXP parc .)
    except          reduce using rule 192 (EXP -> para EXP parc .)
    ptcoma          reduce using rule 192 (EXP -> para EXP parc .)
    mas             reduce using rule 192 (EXP -> para EXP parc .)
    menos           reduce using rule 192 (EXP -> para EXP parc .)
    multiplicacion  reduce using rule 192 (EXP -> para EXP parc .)
    division        reduce using rule 192 (EXP -> para EXP parc .)
    modulo          reduce using rule 192 (EXP -> para EXP parc .)
    elevado         reduce using rule 192 (EXP -> para EXP parc .)
    and             reduce using rule 192 (EXP -> para EXP parc .)
    or              reduce using rule 192 (EXP -> para EXP parc .)
    mayor           reduce using rule 192 (EXP -> para EXP parc .)
    menor           reduce using rule 192 (EXP -> para EXP parc .)
    mayor_igual     reduce using rule 192 (EXP -> para EXP parc .)
    menor_igual     reduce using rule 192 (EXP -> para EXP parc .)
    igual           reduce using rule 192 (EXP -> para EXP parc .)
    diferente1      reduce using rule 192 (EXP -> para EXP parc .)
    diferente2      reduce using rule 192 (EXP -> para EXP parc .)
    punto           reduce using rule 192 (EXP -> para EXP parc .)
    between         reduce using rule 192 (EXP -> para EXP parc .)
    in              reduce using rule 192 (EXP -> para EXP parc .)
    not             reduce using rule 192 (EXP -> para EXP parc .)
    is              reduce using rule 192 (EXP -> para EXP parc .)
    isnull          reduce using rule 192 (EXP -> para EXP parc .)
    notnull         reduce using rule 192 (EXP -> para EXP parc .)
    id              reduce using rule 192 (EXP -> para EXP parc .)
    as              reduce using rule 192 (EXP -> para EXP parc .)
    coma            reduce using rule 192 (EXP -> para EXP parc .)
    parc            reduce using rule 192 (EXP -> para EXP parc .)
    then            reduce using rule 192 (EXP -> para EXP parc .)
    where           reduce using rule 192 (EXP -> para EXP parc .)
    group           reduce using rule 192 (EXP -> para EXP parc .)
    having          reduce using rule 192 (EXP -> para EXP parc .)
    order           reduce using rule 192 (EXP -> para EXP parc .)
    end             reduce using rule 192 (EXP -> para EXP parc .)
    else            reduce using rule 192 (EXP -> para EXP parc .)
    when            reduce using rule 192 (EXP -> para EXP parc .)
    constraint      reduce using rule 192 (EXP -> para EXP parc .)
    default         reduce using rule 192 (EXP -> para EXP parc .)
    primary         reduce using rule 192 (EXP -> para EXP parc .)
    references      reduce using rule 192 (EXP -> para EXP parc .)
    null            reduce using rule 192 (EXP -> para EXP parc .)
    asc             reduce using rule 192 (EXP -> para EXP parc .)
    desc            reduce using rule 192 (EXP -> para EXP parc .)


state 185

    (210) EXP -> cadena like cadena .

    r_from          reduce using rule 210 (EXP -> cadena like cadena .)
    limit           reduce using rule 210 (EXP -> cadena like cadena .)
    offset          reduce using rule 210 (EXP -> cadena like cadena .)
    union           reduce using rule 210 (EXP -> cadena like cadena .)
    intersect       reduce using rule 210 (EXP -> cadena like cadena .)
    except          reduce using rule 210 (EXP -> cadena like cadena .)
    ptcoma          reduce using rule 210 (EXP -> cadena like cadena .)
    mas             reduce using rule 210 (EXP -> cadena like cadena .)
    menos           reduce using rule 210 (EXP -> cadena like cadena .)
    multiplicacion  reduce using rule 210 (EXP -> cadena like cadena .)
    division        reduce using rule 210 (EXP -> cadena like cadena .)
    modulo          reduce using rule 210 (EXP -> cadena like cadena .)
    elevado         reduce using rule 210 (EXP -> cadena like cadena .)
    and             reduce using rule 210 (EXP -> cadena like cadena .)
    or              reduce using rule 210 (EXP -> cadena like cadena .)
    mayor           reduce using rule 210 (EXP -> cadena like cadena .)
    menor           reduce using rule 210 (EXP -> cadena like cadena .)
    mayor_igual     reduce using rule 210 (EXP -> cadena like cadena .)
    menor_igual     reduce using rule 210 (EXP -> cadena like cadena .)
    igual           reduce using rule 210 (EXP -> cadena like cadena .)
    diferente1      reduce using rule 210 (EXP -> cadena like cadena .)
    diferente2      reduce using rule 210 (EXP -> cadena like cadena .)
    punto           reduce using rule 210 (EXP -> cadena like cadena .)
    between         reduce using rule 210 (EXP -> cadena like cadena .)
    in              reduce using rule 210 (EXP -> cadena like cadena .)
    not             reduce using rule 210 (EXP -> cadena like cadena .)
    is              reduce using rule 210 (EXP -> cadena like cadena .)
    isnull          reduce using rule 210 (EXP -> cadena like cadena .)
    notnull         reduce using rule 210 (EXP -> cadena like cadena .)
    id              reduce using rule 210 (EXP -> cadena like cadena .)
    as              reduce using rule 210 (EXP -> cadena like cadena .)
    coma            reduce using rule 210 (EXP -> cadena like cadena .)
    parc            reduce using rule 210 (EXP -> cadena like cadena .)
    then            reduce using rule 210 (EXP -> cadena like cadena .)
    where           reduce using rule 210 (EXP -> cadena like cadena .)
    group           reduce using rule 210 (EXP -> cadena like cadena .)
    having          reduce using rule 210 (EXP -> cadena like cadena .)
    order           reduce using rule 210 (EXP -> cadena like cadena .)
    end             reduce using rule 210 (EXP -> cadena like cadena .)
    else            reduce using rule 210 (EXP -> cadena like cadena .)
    when            reduce using rule 210 (EXP -> cadena like cadena .)
    constraint      reduce using rule 210 (EXP -> cadena like cadena .)
    default         reduce using rule 210 (EXP -> cadena like cadena .)
    primary         reduce using rule 210 (EXP -> cadena like cadena .)
    references      reduce using rule 210 (EXP -> cadena like cadena .)
    null            reduce using rule 210 (EXP -> cadena like cadena .)
    asc             reduce using rule 210 (EXP -> cadena like cadena .)
    desc            reduce using rule 210 (EXP -> cadena like cadena .)


state 186

    (211) EXP -> cadena not like . cadena

    cadena          shift and go to state 252


state 187

    (204) EXP -> extract para FIELDS . r_from timestamp cadena parc

    r_from          shift and go to state 253


state 188

    (167) FIELDS -> year .

    r_from          reduce using rule 167 (FIELDS -> year .)


state 189

    (168) FIELDS -> month .

    r_from          reduce using rule 168 (FIELDS -> month .)


state 190

    (169) FIELDS -> day .

    r_from          reduce using rule 169 (FIELDS -> day .)


state 191

    (170) FIELDS -> hour .

    r_from          reduce using rule 170 (FIELDS -> hour .)


state 192

    (171) FIELDS -> minute .

    r_from          reduce using rule 171 (FIELDS -> minute .)


state 193

    (172) FIELDS -> second .

    r_from          reduce using rule 172 (FIELDS -> second .)


state 194

    (212) EXP -> any para LEXP . parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 254
    coma            shift and go to state 86


state 195

    (213) EXP -> all para LEXP . parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 255
    coma            shift and go to state 86


state 196

    (214) EXP -> some para LEXP . parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 256
    coma            shift and go to state 86


state 197

    (61) CREATETABLE -> create table id para . LDEF parc ptcoma
    (62) CREATETABLE -> create table id para . LDEF parc HERENCIA ptcoma
    (63) LDEF -> . LDEF coma COLDEF
    (64) LDEF -> . COLDEF
    (65) COLDEF -> . OPCONST
    (66) COLDEF -> . constraint id OPCONST
    (67) COLDEF -> . id TIPO
    (68) COLDEF -> . id TIPO LOPCOLUMN
    (79) OPCONST -> . primary key para LEXP parc
    (80) OPCONST -> . foreign key para LEXP parc references table para LEXP parc
    (81) OPCONST -> . unique para LEXP parc
    (82) OPCONST -> . check para LEXP parc

    constraint      shift and go to state 261
    id              shift and go to state 257
    primary         shift and go to state 262
    foreign         shift and go to state 263
    unique          shift and go to state 264
    check           shift and go to state 265

    LDEF                           shift and go to state 258
    COLDEF                         shift and go to state 259
    OPCONST                        shift and go to state 260

state 198

    (84) CREATETYPE -> create type id as . enum para LEXP parc

    enum            shift and go to state 266


state 199

    (48) CREATEDB -> create RD if not . exist id
    (49) CREATEDB -> create RD if not . exist id OPCCDB

    exist           shift and go to state 267


state 200

    (51) CREATEDB -> create RD id OPCCDB .

    ptcoma          reduce using rule 51 (CREATEDB -> create RD id OPCCDB .)


state 201

    (52) OPCCDB -> PROPIETARIO .
    (54) OPCCDB -> PROPIETARIO . MODO
    (59) MODO -> . mode igual int
    (60) MODO -> . mode int

    ptcoma          reduce using rule 52 (OPCCDB -> PROPIETARIO .)
    mode            shift and go to state 204

    MODO                           shift and go to state 268

state 202

    (53) OPCCDB -> MODO .

    ptcoma          reduce using rule 53 (OPCCDB -> MODO .)


state 203

    (57) PROPIETARIO -> owner . igual id
    (58) PROPIETARIO -> owner . id

    igual           shift and go to state 269
    id              shift and go to state 270


state 204

    (59) MODO -> mode . igual int
    (60) MODO -> mode . int

    igual           shift and go to state 271
    int             shift and go to state 272


state 205

    (55) RD -> or replace databases .

    if              reduce using rule 55 (RD -> or replace databases .)
    id              reduce using rule 55 (RD -> or replace databases .)


state 206

    (129) LCAMPOS -> id . igual EXP
    (130) LCAMPOS -> id . igual default

    igual           shift and go to state 273


state 207

    (127) UPDATE -> update id set LCAMPOS . where LEXP
    (128) LCAMPOS -> LCAMPOS . id igual EXP

    where           shift and go to state 275
    id              shift and go to state 274


state 208

    (131) DELETE -> delete r_from id where . LEXP
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 276
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 209

    (25) ALTER -> alter databases id RO .

    ptcoma          reduce using rule 25 (ALTER -> alter databases id RO .)


state 210

    (27) RO -> rename . to id

    to              shift and go to state 277


state 211

    (28) RO -> owner . to id

    to              shift and go to state 278


state 212

    (32) OP -> alter . column id set not null
    (33) OP -> alter . column id set null
    (39) alc -> alter . column id type TIPO

    column          shift and go to state 279


state 213

    (29) altertable -> alter table id OP .

    ptcoma          reduce using rule 29 (altertable -> alter table id OP .)


state 214

    (30) OP -> add . ADD
    (43) ADD -> . column id TIPO
    (44) ADD -> . check para LEXP parc
    (45) ADD -> . constraint id unique para id parc
    (46) ADD -> . foreign key para id parc references id para id parc

    column          shift and go to state 281
    check           shift and go to state 282
    constraint      shift and go to state 283
    foreign         shift and go to state 284

    ADD                            shift and go to state 280

state 215

    (31) OP -> drop . column ALTERDROP
    (35) OP -> drop . ALTERDROP
    (40) ALTERDROP -> . constraint id
    (41) ALTERDROP -> . column LEXP
    (42) ALTERDROP -> . check id

    column          shift and go to state 285
    constraint      shift and go to state 287
    check           shift and go to state 288

    ALTERDROP                      shift and go to state 286

state 216

    (34) OP -> listaalc .
    (37) listaalc -> listaalc . coma alc

    ptcoma          reduce using rule 34 (OP -> listaalc .)
    coma            shift and go to state 289


state 217

    (36) OP -> rename . column id to id

    column          shift and go to state 290


state 218

    (38) listaalc -> alc .

    coma            reduce using rule 38 (listaalc -> alc .)
    ptcoma          reduce using rule 38 (listaalc -> alc .)


state 219

    (23) DROP -> drop databases if exist . id

    id              shift and go to state 291


state 220

    (21) INSERT -> insert into id values . para LEXP parc

    para            shift and go to state 292


state 221

    (15) CASE -> case LISTAWHEN ELSE end .

    select          reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    create          reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    update          reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    delete          reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    alter           reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    drop            reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    insert          reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    case            reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    show            reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    $end            reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    r_from          reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    limit           reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    offset          reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    union           reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    intersect       reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    except          reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    ptcoma          reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    mas             reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    menos           reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    multiplicacion  reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    division        reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    modulo          reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    elevado         reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    and             reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    or              reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    mayor           reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    menor           reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    mayor_igual     reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    menor_igual     reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    igual           reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    diferente1      reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    diferente2      reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    punto           reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    between         reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    in              reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    not             reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    is              reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    isnull          reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    notnull         reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    id              reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    as              reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    coma            reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    parc            reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    then            reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    where           reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    group           reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    having          reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    order           reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    end             reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    else            reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    when            reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    constraint      reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    default         reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    primary         reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    references      reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    null            reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    asc             reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)
    desc            reduce using rule 15 (CASE -> case LISTAWHEN ELSE end .)


state 222

    (20) ELSE -> else LEXP .
    (134) LEXP -> LEXP . coma EXP

    end             reduce using rule 20 (ELSE -> else LEXP .)
    coma            shift and go to state 86


state 223

    (19) WHEN -> when LEXP then . LEXP
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 293
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 224

    (85) SELECT -> select distinct LSELECT r_from LFROM . WHERE GROUP HAVING ORDER LIMIT COMBINING
    (100) LFROM -> LFROM . coma FROM
    (106) WHERE -> . where LEXP
    (107) WHERE -> . where EXIST
    (108) WHERE -> . union LEXP
    (109) WHERE -> . union all LEXP
    (110) WHERE -> .

  ! shift/reduce conflict for union resolved as shift
  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for where resolved as shift
    coma            shift and go to state 226
    where           shift and go to state 227
    union           shift and go to state 228
    r_from          reduce using rule 110 (WHERE -> .)
    limit           reduce using rule 110 (WHERE -> .)
    offset          reduce using rule 110 (WHERE -> .)
    intersect       reduce using rule 110 (WHERE -> .)
    except          reduce using rule 110 (WHERE -> .)
    ptcoma          reduce using rule 110 (WHERE -> .)
    mas             reduce using rule 110 (WHERE -> .)
    menos           reduce using rule 110 (WHERE -> .)
    multiplicacion  reduce using rule 110 (WHERE -> .)
    division        reduce using rule 110 (WHERE -> .)
    modulo          reduce using rule 110 (WHERE -> .)
    elevado         reduce using rule 110 (WHERE -> .)
    and             reduce using rule 110 (WHERE -> .)
    or              reduce using rule 110 (WHERE -> .)
    mayor           reduce using rule 110 (WHERE -> .)
    menor           reduce using rule 110 (WHERE -> .)
    mayor_igual     reduce using rule 110 (WHERE -> .)
    menor_igual     reduce using rule 110 (WHERE -> .)
    igual           reduce using rule 110 (WHERE -> .)
    diferente1      reduce using rule 110 (WHERE -> .)
    diferente2      reduce using rule 110 (WHERE -> .)
    punto           reduce using rule 110 (WHERE -> .)
    between         reduce using rule 110 (WHERE -> .)
    in              reduce using rule 110 (WHERE -> .)
    not             reduce using rule 110 (WHERE -> .)
    is              reduce using rule 110 (WHERE -> .)
    isnull          reduce using rule 110 (WHERE -> .)
    notnull         reduce using rule 110 (WHERE -> .)
    id              reduce using rule 110 (WHERE -> .)
    as              reduce using rule 110 (WHERE -> .)
    parc            reduce using rule 110 (WHERE -> .)
    then            reduce using rule 110 (WHERE -> .)
    group           reduce using rule 110 (WHERE -> .)
    having          reduce using rule 110 (WHERE -> .)
    order           reduce using rule 110 (WHERE -> .)
    end             reduce using rule 110 (WHERE -> .)
    else            reduce using rule 110 (WHERE -> .)
    when            reduce using rule 110 (WHERE -> .)
    constraint      reduce using rule 110 (WHERE -> .)
    default         reduce using rule 110 (WHERE -> .)
    primary         reduce using rule 110 (WHERE -> .)
    references      reduce using rule 110 (WHERE -> .)
    null            reduce using rule 110 (WHERE -> .)
    asc             reduce using rule 110 (WHERE -> .)
    desc            reduce using rule 110 (WHERE -> .)

  ! union           [ reduce using rule 110 (WHERE -> .) ]
  ! coma            [ reduce using rule 110 (WHERE -> .) ]
  ! where           [ reduce using rule 110 (WHERE -> .) ]

    WHERE                          shift and go to state 294

state 225

    (86) SELECT -> select LSELECT r_from LFROM WHERE . GROUP HAVING ORDER LIMIT COMBINING
    (118) GROUP -> . group by LEXP
    (119) GROUP -> .

  ! shift/reduce conflict for group resolved as shift
    group           shift and go to state 296
    r_from          reduce using rule 119 (GROUP -> .)
    limit           reduce using rule 119 (GROUP -> .)
    offset          reduce using rule 119 (GROUP -> .)
    union           reduce using rule 119 (GROUP -> .)
    intersect       reduce using rule 119 (GROUP -> .)
    except          reduce using rule 119 (GROUP -> .)
    ptcoma          reduce using rule 119 (GROUP -> .)
    mas             reduce using rule 119 (GROUP -> .)
    menos           reduce using rule 119 (GROUP -> .)
    multiplicacion  reduce using rule 119 (GROUP -> .)
    division        reduce using rule 119 (GROUP -> .)
    modulo          reduce using rule 119 (GROUP -> .)
    elevado         reduce using rule 119 (GROUP -> .)
    and             reduce using rule 119 (GROUP -> .)
    or              reduce using rule 119 (GROUP -> .)
    mayor           reduce using rule 119 (GROUP -> .)
    menor           reduce using rule 119 (GROUP -> .)
    mayor_igual     reduce using rule 119 (GROUP -> .)
    menor_igual     reduce using rule 119 (GROUP -> .)
    igual           reduce using rule 119 (GROUP -> .)
    diferente1      reduce using rule 119 (GROUP -> .)
    diferente2      reduce using rule 119 (GROUP -> .)
    punto           reduce using rule 119 (GROUP -> .)
    between         reduce using rule 119 (GROUP -> .)
    in              reduce using rule 119 (GROUP -> .)
    not             reduce using rule 119 (GROUP -> .)
    is              reduce using rule 119 (GROUP -> .)
    isnull          reduce using rule 119 (GROUP -> .)
    notnull         reduce using rule 119 (GROUP -> .)
    id              reduce using rule 119 (GROUP -> .)
    as              reduce using rule 119 (GROUP -> .)
    coma            reduce using rule 119 (GROUP -> .)
    parc            reduce using rule 119 (GROUP -> .)
    then            reduce using rule 119 (GROUP -> .)
    where           reduce using rule 119 (GROUP -> .)
    having          reduce using rule 119 (GROUP -> .)
    order           reduce using rule 119 (GROUP -> .)
    end             reduce using rule 119 (GROUP -> .)
    else            reduce using rule 119 (GROUP -> .)
    when            reduce using rule 119 (GROUP -> .)
    constraint      reduce using rule 119 (GROUP -> .)
    default         reduce using rule 119 (GROUP -> .)
    primary         reduce using rule 119 (GROUP -> .)
    references      reduce using rule 119 (GROUP -> .)
    null            reduce using rule 119 (GROUP -> .)
    asc             reduce using rule 119 (GROUP -> .)
    desc            reduce using rule 119 (GROUP -> .)

  ! group           [ reduce using rule 119 (GROUP -> .) ]

    GROUP                          shift and go to state 295

state 226

    (100) LFROM -> LFROM coma . FROM
    (102) FROM -> . LEXP
    (103) FROM -> . LEXP as id
    (104) FROM -> . LEXP id
    (105) FROM -> . multiplicacion
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    multiplicacion  shift and go to state 145
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    FROM                           shift and go to state 297
    LEXP                           shift and go to state 144
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 227

    (106) WHERE -> where . LEXP
    (107) WHERE -> where . EXIST
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (133) EXIST -> . exist para SELECT parc
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    exist           shift and go to state 300
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 298
    EXIST                          shift and go to state 299
    EXP                            shift and go to state 40
    SELECT                         shift and go to state 51
    PNULL                          shift and go to state 50
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 228

    (108) WHERE -> union . LEXP
    (109) WHERE -> union . all LEXP
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    all             shift and go to state 302
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 301
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 229

    (103) FROM -> LEXP as . id

    id              shift and go to state 303


state 230

    (104) FROM -> LEXP id .

    r_from          reduce using rule 104 (FROM -> LEXP id .)
    limit           reduce using rule 104 (FROM -> LEXP id .)
    offset          reduce using rule 104 (FROM -> LEXP id .)
    union           reduce using rule 104 (FROM -> LEXP id .)
    intersect       reduce using rule 104 (FROM -> LEXP id .)
    except          reduce using rule 104 (FROM -> LEXP id .)
    ptcoma          reduce using rule 104 (FROM -> LEXP id .)
    mas             reduce using rule 104 (FROM -> LEXP id .)
    menos           reduce using rule 104 (FROM -> LEXP id .)
    multiplicacion  reduce using rule 104 (FROM -> LEXP id .)
    division        reduce using rule 104 (FROM -> LEXP id .)
    modulo          reduce using rule 104 (FROM -> LEXP id .)
    elevado         reduce using rule 104 (FROM -> LEXP id .)
    and             reduce using rule 104 (FROM -> LEXP id .)
    or              reduce using rule 104 (FROM -> LEXP id .)
    mayor           reduce using rule 104 (FROM -> LEXP id .)
    menor           reduce using rule 104 (FROM -> LEXP id .)
    mayor_igual     reduce using rule 104 (FROM -> LEXP id .)
    menor_igual     reduce using rule 104 (FROM -> LEXP id .)
    igual           reduce using rule 104 (FROM -> LEXP id .)
    diferente1      reduce using rule 104 (FROM -> LEXP id .)
    diferente2      reduce using rule 104 (FROM -> LEXP id .)
    punto           reduce using rule 104 (FROM -> LEXP id .)
    between         reduce using rule 104 (FROM -> LEXP id .)
    in              reduce using rule 104 (FROM -> LEXP id .)
    not             reduce using rule 104 (FROM -> LEXP id .)
    is              reduce using rule 104 (FROM -> LEXP id .)
    isnull          reduce using rule 104 (FROM -> LEXP id .)
    notnull         reduce using rule 104 (FROM -> LEXP id .)
    id              reduce using rule 104 (FROM -> LEXP id .)
    as              reduce using rule 104 (FROM -> LEXP id .)
    coma            reduce using rule 104 (FROM -> LEXP id .)
    parc            reduce using rule 104 (FROM -> LEXP id .)
    then            reduce using rule 104 (FROM -> LEXP id .)
    where           reduce using rule 104 (FROM -> LEXP id .)
    group           reduce using rule 104 (FROM -> LEXP id .)
    having          reduce using rule 104 (FROM -> LEXP id .)
    order           reduce using rule 104 (FROM -> LEXP id .)
    end             reduce using rule 104 (FROM -> LEXP id .)
    else            reduce using rule 104 (FROM -> LEXP id .)
    when            reduce using rule 104 (FROM -> LEXP id .)
    constraint      reduce using rule 104 (FROM -> LEXP id .)
    default         reduce using rule 104 (FROM -> LEXP id .)
    primary         reduce using rule 104 (FROM -> LEXP id .)
    references      reduce using rule 104 (FROM -> LEXP id .)
    null            reduce using rule 104 (FROM -> LEXP id .)
    asc             reduce using rule 104 (FROM -> LEXP id .)
    desc            reduce using rule 104 (FROM -> LEXP id .)


state 231

    (111) COMBINING -> union LEXP .
    (134) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 111 (COMBINING -> union LEXP .)
    limit           reduce using rule 111 (COMBINING -> union LEXP .)
    offset          reduce using rule 111 (COMBINING -> union LEXP .)
    union           reduce using rule 111 (COMBINING -> union LEXP .)
    intersect       reduce using rule 111 (COMBINING -> union LEXP .)
    except          reduce using rule 111 (COMBINING -> union LEXP .)
    ptcoma          reduce using rule 111 (COMBINING -> union LEXP .)
    mas             reduce using rule 111 (COMBINING -> union LEXP .)
    menos           reduce using rule 111 (COMBINING -> union LEXP .)
    multiplicacion  reduce using rule 111 (COMBINING -> union LEXP .)
    division        reduce using rule 111 (COMBINING -> union LEXP .)
    modulo          reduce using rule 111 (COMBINING -> union LEXP .)
    elevado         reduce using rule 111 (COMBINING -> union LEXP .)
    and             reduce using rule 111 (COMBINING -> union LEXP .)
    or              reduce using rule 111 (COMBINING -> union LEXP .)
    mayor           reduce using rule 111 (COMBINING -> union LEXP .)
    menor           reduce using rule 111 (COMBINING -> union LEXP .)
    mayor_igual     reduce using rule 111 (COMBINING -> union LEXP .)
    menor_igual     reduce using rule 111 (COMBINING -> union LEXP .)
    igual           reduce using rule 111 (COMBINING -> union LEXP .)
    diferente1      reduce using rule 111 (COMBINING -> union LEXP .)
    diferente2      reduce using rule 111 (COMBINING -> union LEXP .)
    punto           reduce using rule 111 (COMBINING -> union LEXP .)
    between         reduce using rule 111 (COMBINING -> union LEXP .)
    in              reduce using rule 111 (COMBINING -> union LEXP .)
    not             reduce using rule 111 (COMBINING -> union LEXP .)
    is              reduce using rule 111 (COMBINING -> union LEXP .)
    isnull          reduce using rule 111 (COMBINING -> union LEXP .)
    notnull         reduce using rule 111 (COMBINING -> union LEXP .)
    id              reduce using rule 111 (COMBINING -> union LEXP .)
    as              reduce using rule 111 (COMBINING -> union LEXP .)
    parc            reduce using rule 111 (COMBINING -> union LEXP .)
    then            reduce using rule 111 (COMBINING -> union LEXP .)
    where           reduce using rule 111 (COMBINING -> union LEXP .)
    group           reduce using rule 111 (COMBINING -> union LEXP .)
    having          reduce using rule 111 (COMBINING -> union LEXP .)
    order           reduce using rule 111 (COMBINING -> union LEXP .)
    end             reduce using rule 111 (COMBINING -> union LEXP .)
    else            reduce using rule 111 (COMBINING -> union LEXP .)
    when            reduce using rule 111 (COMBINING -> union LEXP .)
    constraint      reduce using rule 111 (COMBINING -> union LEXP .)
    default         reduce using rule 111 (COMBINING -> union LEXP .)
    primary         reduce using rule 111 (COMBINING -> union LEXP .)
    references      reduce using rule 111 (COMBINING -> union LEXP .)
    null            reduce using rule 111 (COMBINING -> union LEXP .)
    asc             reduce using rule 111 (COMBINING -> union LEXP .)
    desc            reduce using rule 111 (COMBINING -> union LEXP .)
    coma            shift and go to state 86

  ! coma            [ reduce using rule 111 (COMBINING -> union LEXP .) ]


state 232

    (112) COMBINING -> union all . LEXP
    (213) EXP -> all . para LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    para            shift and go to state 305
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 304
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 233

    (113) COMBINING -> intersect LEXP .
    (134) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 113 (COMBINING -> intersect LEXP .)
    limit           reduce using rule 113 (COMBINING -> intersect LEXP .)
    offset          reduce using rule 113 (COMBINING -> intersect LEXP .)
    union           reduce using rule 113 (COMBINING -> intersect LEXP .)
    intersect       reduce using rule 113 (COMBINING -> intersect LEXP .)
    except          reduce using rule 113 (COMBINING -> intersect LEXP .)
    ptcoma          reduce using rule 113 (COMBINING -> intersect LEXP .)
    mas             reduce using rule 113 (COMBINING -> intersect LEXP .)
    menos           reduce using rule 113 (COMBINING -> intersect LEXP .)
    multiplicacion  reduce using rule 113 (COMBINING -> intersect LEXP .)
    division        reduce using rule 113 (COMBINING -> intersect LEXP .)
    modulo          reduce using rule 113 (COMBINING -> intersect LEXP .)
    elevado         reduce using rule 113 (COMBINING -> intersect LEXP .)
    and             reduce using rule 113 (COMBINING -> intersect LEXP .)
    or              reduce using rule 113 (COMBINING -> intersect LEXP .)
    mayor           reduce using rule 113 (COMBINING -> intersect LEXP .)
    menor           reduce using rule 113 (COMBINING -> intersect LEXP .)
    mayor_igual     reduce using rule 113 (COMBINING -> intersect LEXP .)
    menor_igual     reduce using rule 113 (COMBINING -> intersect LEXP .)
    igual           reduce using rule 113 (COMBINING -> intersect LEXP .)
    diferente1      reduce using rule 113 (COMBINING -> intersect LEXP .)
    diferente2      reduce using rule 113 (COMBINING -> intersect LEXP .)
    punto           reduce using rule 113 (COMBINING -> intersect LEXP .)
    between         reduce using rule 113 (COMBINING -> intersect LEXP .)
    in              reduce using rule 113 (COMBINING -> intersect LEXP .)
    not             reduce using rule 113 (COMBINING -> intersect LEXP .)
    is              reduce using rule 113 (COMBINING -> intersect LEXP .)
    isnull          reduce using rule 113 (COMBINING -> intersect LEXP .)
    notnull         reduce using rule 113 (COMBINING -> intersect LEXP .)
    id              reduce using rule 113 (COMBINING -> intersect LEXP .)
    as              reduce using rule 113 (COMBINING -> intersect LEXP .)
    parc            reduce using rule 113 (COMBINING -> intersect LEXP .)
    then            reduce using rule 113 (COMBINING -> intersect LEXP .)
    where           reduce using rule 113 (COMBINING -> intersect LEXP .)
    group           reduce using rule 113 (COMBINING -> intersect LEXP .)
    having          reduce using rule 113 (COMBINING -> intersect LEXP .)
    order           reduce using rule 113 (COMBINING -> intersect LEXP .)
    end             reduce using rule 113 (COMBINING -> intersect LEXP .)
    else            reduce using rule 113 (COMBINING -> intersect LEXP .)
    when            reduce using rule 113 (COMBINING -> intersect LEXP .)
    constraint      reduce using rule 113 (COMBINING -> intersect LEXP .)
    default         reduce using rule 113 (COMBINING -> intersect LEXP .)
    primary         reduce using rule 113 (COMBINING -> intersect LEXP .)
    references      reduce using rule 113 (COMBINING -> intersect LEXP .)
    null            reduce using rule 113 (COMBINING -> intersect LEXP .)
    asc             reduce using rule 113 (COMBINING -> intersect LEXP .)
    desc            reduce using rule 113 (COMBINING -> intersect LEXP .)
    coma            shift and go to state 86

  ! coma            [ reduce using rule 113 (COMBINING -> intersect LEXP .) ]


state 234

    (114) COMBINING -> intersect all . LEXP
    (213) EXP -> all . para LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    para            shift and go to state 305
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 306
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 235

    (115) COMBINING -> except LEXP .
    (134) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 115 (COMBINING -> except LEXP .)
    limit           reduce using rule 115 (COMBINING -> except LEXP .)
    offset          reduce using rule 115 (COMBINING -> except LEXP .)
    union           reduce using rule 115 (COMBINING -> except LEXP .)
    intersect       reduce using rule 115 (COMBINING -> except LEXP .)
    except          reduce using rule 115 (COMBINING -> except LEXP .)
    ptcoma          reduce using rule 115 (COMBINING -> except LEXP .)
    mas             reduce using rule 115 (COMBINING -> except LEXP .)
    menos           reduce using rule 115 (COMBINING -> except LEXP .)
    multiplicacion  reduce using rule 115 (COMBINING -> except LEXP .)
    division        reduce using rule 115 (COMBINING -> except LEXP .)
    modulo          reduce using rule 115 (COMBINING -> except LEXP .)
    elevado         reduce using rule 115 (COMBINING -> except LEXP .)
    and             reduce using rule 115 (COMBINING -> except LEXP .)
    or              reduce using rule 115 (COMBINING -> except LEXP .)
    mayor           reduce using rule 115 (COMBINING -> except LEXP .)
    menor           reduce using rule 115 (COMBINING -> except LEXP .)
    mayor_igual     reduce using rule 115 (COMBINING -> except LEXP .)
    menor_igual     reduce using rule 115 (COMBINING -> except LEXP .)
    igual           reduce using rule 115 (COMBINING -> except LEXP .)
    diferente1      reduce using rule 115 (COMBINING -> except LEXP .)
    diferente2      reduce using rule 115 (COMBINING -> except LEXP .)
    punto           reduce using rule 115 (COMBINING -> except LEXP .)
    between         reduce using rule 115 (COMBINING -> except LEXP .)
    in              reduce using rule 115 (COMBINING -> except LEXP .)
    not             reduce using rule 115 (COMBINING -> except LEXP .)
    is              reduce using rule 115 (COMBINING -> except LEXP .)
    isnull          reduce using rule 115 (COMBINING -> except LEXP .)
    notnull         reduce using rule 115 (COMBINING -> except LEXP .)
    id              reduce using rule 115 (COMBINING -> except LEXP .)
    as              reduce using rule 115 (COMBINING -> except LEXP .)
    parc            reduce using rule 115 (COMBINING -> except LEXP .)
    then            reduce using rule 115 (COMBINING -> except LEXP .)
    where           reduce using rule 115 (COMBINING -> except LEXP .)
    group           reduce using rule 115 (COMBINING -> except LEXP .)
    having          reduce using rule 115 (COMBINING -> except LEXP .)
    order           reduce using rule 115 (COMBINING -> except LEXP .)
    end             reduce using rule 115 (COMBINING -> except LEXP .)
    else            reduce using rule 115 (COMBINING -> except LEXP .)
    when            reduce using rule 115 (COMBINING -> except LEXP .)
    constraint      reduce using rule 115 (COMBINING -> except LEXP .)
    default         reduce using rule 115 (COMBINING -> except LEXP .)
    primary         reduce using rule 115 (COMBINING -> except LEXP .)
    references      reduce using rule 115 (COMBINING -> except LEXP .)
    null            reduce using rule 115 (COMBINING -> except LEXP .)
    asc             reduce using rule 115 (COMBINING -> except LEXP .)
    desc            reduce using rule 115 (COMBINING -> except LEXP .)
    coma            shift and go to state 86

  ! coma            [ reduce using rule 115 (COMBINING -> except LEXP .) ]


state 236

    (116) COMBINING -> except all . LEXP
    (213) EXP -> all . para LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    para            shift and go to state 305
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 307
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 237

    (91) LIMIT -> limit int offset . int

    int             shift and go to state 308


state 238

    (93) LIMIT -> limit all offset . int

    int             shift and go to state 309


state 239

    (92) LIMIT -> offset int limit . int
    (94) LIMIT -> offset int limit . all

    int             shift and go to state 310
    all             shift and go to state 311


state 240

    (203) EXP -> id para LEXP parc .

    r_from          reduce using rule 203 (EXP -> id para LEXP parc .)
    limit           reduce using rule 203 (EXP -> id para LEXP parc .)
    offset          reduce using rule 203 (EXP -> id para LEXP parc .)
    union           reduce using rule 203 (EXP -> id para LEXP parc .)
    intersect       reduce using rule 203 (EXP -> id para LEXP parc .)
    except          reduce using rule 203 (EXP -> id para LEXP parc .)
    ptcoma          reduce using rule 203 (EXP -> id para LEXP parc .)
    mas             reduce using rule 203 (EXP -> id para LEXP parc .)
    menos           reduce using rule 203 (EXP -> id para LEXP parc .)
    multiplicacion  reduce using rule 203 (EXP -> id para LEXP parc .)
    division        reduce using rule 203 (EXP -> id para LEXP parc .)
    modulo          reduce using rule 203 (EXP -> id para LEXP parc .)
    elevado         reduce using rule 203 (EXP -> id para LEXP parc .)
    and             reduce using rule 203 (EXP -> id para LEXP parc .)
    or              reduce using rule 203 (EXP -> id para LEXP parc .)
    mayor           reduce using rule 203 (EXP -> id para LEXP parc .)
    menor           reduce using rule 203 (EXP -> id para LEXP parc .)
    mayor_igual     reduce using rule 203 (EXP -> id para LEXP parc .)
    menor_igual     reduce using rule 203 (EXP -> id para LEXP parc .)
    igual           reduce using rule 203 (EXP -> id para LEXP parc .)
    diferente1      reduce using rule 203 (EXP -> id para LEXP parc .)
    diferente2      reduce using rule 203 (EXP -> id para LEXP parc .)
    punto           reduce using rule 203 (EXP -> id para LEXP parc .)
    between         reduce using rule 203 (EXP -> id para LEXP parc .)
    in              reduce using rule 203 (EXP -> id para LEXP parc .)
    not             reduce using rule 203 (EXP -> id para LEXP parc .)
    is              reduce using rule 203 (EXP -> id para LEXP parc .)
    isnull          reduce using rule 203 (EXP -> id para LEXP parc .)
    notnull         reduce using rule 203 (EXP -> id para LEXP parc .)
    id              reduce using rule 203 (EXP -> id para LEXP parc .)
    as              reduce using rule 203 (EXP -> id para LEXP parc .)
    coma            reduce using rule 203 (EXP -> id para LEXP parc .)
    parc            reduce using rule 203 (EXP -> id para LEXP parc .)
    then            reduce using rule 203 (EXP -> id para LEXP parc .)
    where           reduce using rule 203 (EXP -> id para LEXP parc .)
    group           reduce using rule 203 (EXP -> id para LEXP parc .)
    having          reduce using rule 203 (EXP -> id para LEXP parc .)
    order           reduce using rule 203 (EXP -> id para LEXP parc .)
    end             reduce using rule 203 (EXP -> id para LEXP parc .)
    else            reduce using rule 203 (EXP -> id para LEXP parc .)
    when            reduce using rule 203 (EXP -> id para LEXP parc .)
    constraint      reduce using rule 203 (EXP -> id para LEXP parc .)
    default         reduce using rule 203 (EXP -> id para LEXP parc .)
    primary         reduce using rule 203 (EXP -> id para LEXP parc .)
    references      reduce using rule 203 (EXP -> id para LEXP parc .)
    null            reduce using rule 203 (EXP -> id para LEXP parc .)
    asc             reduce using rule 203 (EXP -> id para LEXP parc .)
    desc            reduce using rule 203 (EXP -> id para LEXP parc .)


state 241

    (219) PREDICADOS -> EXP between symetric EXP .
    (173) EXP -> EXP . mas EXP
    (174) EXP -> EXP . menos EXP
    (175) EXP -> EXP . multiplicacion EXP
    (176) EXP -> EXP . division EXP
    (177) EXP -> EXP . modulo EXP
    (178) EXP -> EXP . elevado EXP
    (179) EXP -> EXP . and EXP
    (180) EXP -> EXP . or EXP
    (181) EXP -> EXP . mayor EXP
    (182) EXP -> EXP . menor EXP
    (183) EXP -> EXP . mayor_igual EXP
    (184) EXP -> EXP . menor_igual EXP
    (185) EXP -> EXP . igual EXP
    (186) EXP -> EXP . diferente1 EXP
    (187) EXP -> EXP . diferente2 EXP
    (188) EXP -> EXP . punto EXP
    (215) PREDICADOS -> EXP . between EXP
    (216) PREDICADOS -> EXP . in para LEXP parc
    (217) PREDICADOS -> EXP . not in para LEXP parc
    (218) PREDICADOS -> EXP . not between EXP
    (219) PREDICADOS -> EXP . between symetric EXP
    (220) PREDICADOS -> EXP . not between symetric EXP
    (221) PREDICADOS -> EXP . is distinct r_from EXP
    (222) PREDICADOS -> EXP . is not distinct r_from EXP
    (223) PREDICADOS -> EXP . is PNULL
    (224) PREDICADOS -> EXP . isnull
    (225) PREDICADOS -> EXP . notnull
    (226) PREDICADOS -> EXP . is true
    (227) PREDICADOS -> EXP . is not true
    (228) PREDICADOS -> EXP . is false
    (229) PREDICADOS -> EXP . is not false
    (230) PREDICADOS -> EXP . is unknown
    (231) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    limit           reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    offset          reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    union           reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    intersect       reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    except          reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    ptcoma          reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    mas             reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    menos           reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    multiplicacion  reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    division        reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    modulo          reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    elevado         reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    mayor           reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    menor           reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    mayor_igual     reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    menor_igual     reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    igual           reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    diferente1      reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    diferente2      reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    punto           reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    between         reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    in              reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    is              reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    isnull          reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    notnull         reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    id              reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    as              reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    coma            reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    parc            reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    then            reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    where           reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    group           reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    having          reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    order           reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    end             reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    else            reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    when            reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    constraint      reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    default         reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    primary         reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    references      reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    null            reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    asc             reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    desc            reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .)
    and             shift and go to state 94
    or              shift and go to state 95
    not             shift and go to state 106

  ! and             [ reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .) ]
  ! or              [ reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .) ]
  ! not             [ reduce using rule 219 (PREDICADOS -> EXP between symetric EXP .) ]
  ! mas             [ shift and go to state 88 ]
  ! menos           [ shift and go to state 89 ]
  ! multiplicacion  [ shift and go to state 90 ]
  ! division        [ shift and go to state 91 ]
  ! modulo          [ shift and go to state 92 ]
  ! elevado         [ shift and go to state 93 ]
  ! mayor           [ shift and go to state 96 ]
  ! menor           [ shift and go to state 97 ]
  ! mayor_igual     [ shift and go to state 98 ]
  ! menor_igual     [ shift and go to state 99 ]
  ! igual           [ shift and go to state 100 ]
  ! diferente1      [ shift and go to state 101 ]
  ! diferente2      [ shift and go to state 102 ]
  ! punto           [ shift and go to state 103 ]
  ! between         [ shift and go to state 104 ]
  ! in              [ shift and go to state 105 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 108 ]
  ! notnull         [ shift and go to state 109 ]


state 242

    (216) PREDICADOS -> EXP in para LEXP . parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 312
    coma            shift and go to state 86


state 243

    (217) PREDICADOS -> EXP not in para . LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 40
    LEXP                           shift and go to state 313
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 244

    (218) PREDICADOS -> EXP not between EXP .
    (173) EXP -> EXP . mas EXP
    (174) EXP -> EXP . menos EXP
    (175) EXP -> EXP . multiplicacion EXP
    (176) EXP -> EXP . division EXP
    (177) EXP -> EXP . modulo EXP
    (178) EXP -> EXP . elevado EXP
    (179) EXP -> EXP . and EXP
    (180) EXP -> EXP . or EXP
    (181) EXP -> EXP . mayor EXP
    (182) EXP -> EXP . menor EXP
    (183) EXP -> EXP . mayor_igual EXP
    (184) EXP -> EXP . menor_igual EXP
    (185) EXP -> EXP . igual EXP
    (186) EXP -> EXP . diferente1 EXP
    (187) EXP -> EXP . diferente2 EXP
    (188) EXP -> EXP . punto EXP
    (215) PREDICADOS -> EXP . between EXP
    (216) PREDICADOS -> EXP . in para LEXP parc
    (217) PREDICADOS -> EXP . not in para LEXP parc
    (218) PREDICADOS -> EXP . not between EXP
    (219) PREDICADOS -> EXP . between symetric EXP
    (220) PREDICADOS -> EXP . not between symetric EXP
    (221) PREDICADOS -> EXP . is distinct r_from EXP
    (222) PREDICADOS -> EXP . is not distinct r_from EXP
    (223) PREDICADOS -> EXP . is PNULL
    (224) PREDICADOS -> EXP . isnull
    (225) PREDICADOS -> EXP . notnull
    (226) PREDICADOS -> EXP . is true
    (227) PREDICADOS -> EXP . is not true
    (228) PREDICADOS -> EXP . is false
    (229) PREDICADOS -> EXP . is not false
    (230) PREDICADOS -> EXP . is unknown
    (231) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    limit           reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    offset          reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    union           reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    intersect       reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    except          reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    ptcoma          reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    mas             reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    menos           reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    multiplicacion  reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    division        reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    modulo          reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    elevado         reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    mayor           reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    menor           reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    mayor_igual     reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    menor_igual     reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    igual           reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    diferente1      reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    diferente2      reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    punto           reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    between         reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    in              reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    is              reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    isnull          reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    notnull         reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    id              reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    as              reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    coma            reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    parc            reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    then            reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    where           reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    group           reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    having          reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    order           reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    end             reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    else            reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    when            reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    constraint      reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    default         reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    primary         reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    references      reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    null            reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    asc             reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    desc            reduce using rule 218 (PREDICADOS -> EXP not between EXP .)
    and             shift and go to state 94
    or              shift and go to state 95
    not             shift and go to state 106

  ! and             [ reduce using rule 218 (PREDICADOS -> EXP not between EXP .) ]
  ! or              [ reduce using rule 218 (PREDICADOS -> EXP not between EXP .) ]
  ! not             [ reduce using rule 218 (PREDICADOS -> EXP not between EXP .) ]
  ! mas             [ shift and go to state 88 ]
  ! menos           [ shift and go to state 89 ]
  ! multiplicacion  [ shift and go to state 90 ]
  ! division        [ shift and go to state 91 ]
  ! modulo          [ shift and go to state 92 ]
  ! elevado         [ shift and go to state 93 ]
  ! mayor           [ shift and go to state 96 ]
  ! menor           [ shift and go to state 97 ]
  ! mayor_igual     [ shift and go to state 98 ]
  ! menor_igual     [ shift and go to state 99 ]
  ! igual           [ shift and go to state 100 ]
  ! diferente1      [ shift and go to state 101 ]
  ! diferente2      [ shift and go to state 102 ]
  ! punto           [ shift and go to state 103 ]
  ! between         [ shift and go to state 104 ]
  ! in              [ shift and go to state 105 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 108 ]
  ! notnull         [ shift and go to state 109 ]


state 245

    (220) PREDICADOS -> EXP not between symetric . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 314
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 246

    (221) PREDICADOS -> EXP is distinct r_from . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 315
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 247

    (222) PREDICADOS -> EXP is not distinct . r_from EXP

    r_from          shift and go to state 316


state 248

    (227) PREDICADOS -> EXP is not true .

    r_from          reduce using rule 227 (PREDICADOS -> EXP is not true .)
    limit           reduce using rule 227 (PREDICADOS -> EXP is not true .)
    offset          reduce using rule 227 (PREDICADOS -> EXP is not true .)
    union           reduce using rule 227 (PREDICADOS -> EXP is not true .)
    intersect       reduce using rule 227 (PREDICADOS -> EXP is not true .)
    except          reduce using rule 227 (PREDICADOS -> EXP is not true .)
    ptcoma          reduce using rule 227 (PREDICADOS -> EXP is not true .)
    mas             reduce using rule 227 (PREDICADOS -> EXP is not true .)
    menos           reduce using rule 227 (PREDICADOS -> EXP is not true .)
    multiplicacion  reduce using rule 227 (PREDICADOS -> EXP is not true .)
    division        reduce using rule 227 (PREDICADOS -> EXP is not true .)
    modulo          reduce using rule 227 (PREDICADOS -> EXP is not true .)
    elevado         reduce using rule 227 (PREDICADOS -> EXP is not true .)
    and             reduce using rule 227 (PREDICADOS -> EXP is not true .)
    or              reduce using rule 227 (PREDICADOS -> EXP is not true .)
    mayor           reduce using rule 227 (PREDICADOS -> EXP is not true .)
    menor           reduce using rule 227 (PREDICADOS -> EXP is not true .)
    mayor_igual     reduce using rule 227 (PREDICADOS -> EXP is not true .)
    menor_igual     reduce using rule 227 (PREDICADOS -> EXP is not true .)
    igual           reduce using rule 227 (PREDICADOS -> EXP is not true .)
    diferente1      reduce using rule 227 (PREDICADOS -> EXP is not true .)
    diferente2      reduce using rule 227 (PREDICADOS -> EXP is not true .)
    punto           reduce using rule 227 (PREDICADOS -> EXP is not true .)
    between         reduce using rule 227 (PREDICADOS -> EXP is not true .)
    in              reduce using rule 227 (PREDICADOS -> EXP is not true .)
    not             reduce using rule 227 (PREDICADOS -> EXP is not true .)
    is              reduce using rule 227 (PREDICADOS -> EXP is not true .)
    isnull          reduce using rule 227 (PREDICADOS -> EXP is not true .)
    notnull         reduce using rule 227 (PREDICADOS -> EXP is not true .)
    id              reduce using rule 227 (PREDICADOS -> EXP is not true .)
    as              reduce using rule 227 (PREDICADOS -> EXP is not true .)
    coma            reduce using rule 227 (PREDICADOS -> EXP is not true .)
    parc            reduce using rule 227 (PREDICADOS -> EXP is not true .)
    then            reduce using rule 227 (PREDICADOS -> EXP is not true .)
    where           reduce using rule 227 (PREDICADOS -> EXP is not true .)
    group           reduce using rule 227 (PREDICADOS -> EXP is not true .)
    having          reduce using rule 227 (PREDICADOS -> EXP is not true .)
    order           reduce using rule 227 (PREDICADOS -> EXP is not true .)
    end             reduce using rule 227 (PREDICADOS -> EXP is not true .)
    else            reduce using rule 227 (PREDICADOS -> EXP is not true .)
    when            reduce using rule 227 (PREDICADOS -> EXP is not true .)
    constraint      reduce using rule 227 (PREDICADOS -> EXP is not true .)
    default         reduce using rule 227 (PREDICADOS -> EXP is not true .)
    primary         reduce using rule 227 (PREDICADOS -> EXP is not true .)
    references      reduce using rule 227 (PREDICADOS -> EXP is not true .)
    null            reduce using rule 227 (PREDICADOS -> EXP is not true .)
    asc             reduce using rule 227 (PREDICADOS -> EXP is not true .)
    desc            reduce using rule 227 (PREDICADOS -> EXP is not true .)


state 249

    (229) PREDICADOS -> EXP is not false .

    r_from          reduce using rule 229 (PREDICADOS -> EXP is not false .)
    limit           reduce using rule 229 (PREDICADOS -> EXP is not false .)
    offset          reduce using rule 229 (PREDICADOS -> EXP is not false .)
    union           reduce using rule 229 (PREDICADOS -> EXP is not false .)
    intersect       reduce using rule 229 (PREDICADOS -> EXP is not false .)
    except          reduce using rule 229 (PREDICADOS -> EXP is not false .)
    ptcoma          reduce using rule 229 (PREDICADOS -> EXP is not false .)
    mas             reduce using rule 229 (PREDICADOS -> EXP is not false .)
    menos           reduce using rule 229 (PREDICADOS -> EXP is not false .)
    multiplicacion  reduce using rule 229 (PREDICADOS -> EXP is not false .)
    division        reduce using rule 229 (PREDICADOS -> EXP is not false .)
    modulo          reduce using rule 229 (PREDICADOS -> EXP is not false .)
    elevado         reduce using rule 229 (PREDICADOS -> EXP is not false .)
    and             reduce using rule 229 (PREDICADOS -> EXP is not false .)
    or              reduce using rule 229 (PREDICADOS -> EXP is not false .)
    mayor           reduce using rule 229 (PREDICADOS -> EXP is not false .)
    menor           reduce using rule 229 (PREDICADOS -> EXP is not false .)
    mayor_igual     reduce using rule 229 (PREDICADOS -> EXP is not false .)
    menor_igual     reduce using rule 229 (PREDICADOS -> EXP is not false .)
    igual           reduce using rule 229 (PREDICADOS -> EXP is not false .)
    diferente1      reduce using rule 229 (PREDICADOS -> EXP is not false .)
    diferente2      reduce using rule 229 (PREDICADOS -> EXP is not false .)
    punto           reduce using rule 229 (PREDICADOS -> EXP is not false .)
    between         reduce using rule 229 (PREDICADOS -> EXP is not false .)
    in              reduce using rule 229 (PREDICADOS -> EXP is not false .)
    not             reduce using rule 229 (PREDICADOS -> EXP is not false .)
    is              reduce using rule 229 (PREDICADOS -> EXP is not false .)
    isnull          reduce using rule 229 (PREDICADOS -> EXP is not false .)
    notnull         reduce using rule 229 (PREDICADOS -> EXP is not false .)
    id              reduce using rule 229 (PREDICADOS -> EXP is not false .)
    as              reduce using rule 229 (PREDICADOS -> EXP is not false .)
    coma            reduce using rule 229 (PREDICADOS -> EXP is not false .)
    parc            reduce using rule 229 (PREDICADOS -> EXP is not false .)
    then            reduce using rule 229 (PREDICADOS -> EXP is not false .)
    where           reduce using rule 229 (PREDICADOS -> EXP is not false .)
    group           reduce using rule 229 (PREDICADOS -> EXP is not false .)
    having          reduce using rule 229 (PREDICADOS -> EXP is not false .)
    order           reduce using rule 229 (PREDICADOS -> EXP is not false .)
    end             reduce using rule 229 (PREDICADOS -> EXP is not false .)
    else            reduce using rule 229 (PREDICADOS -> EXP is not false .)
    when            reduce using rule 229 (PREDICADOS -> EXP is not false .)
    constraint      reduce using rule 229 (PREDICADOS -> EXP is not false .)
    default         reduce using rule 229 (PREDICADOS -> EXP is not false .)
    primary         reduce using rule 229 (PREDICADOS -> EXP is not false .)
    references      reduce using rule 229 (PREDICADOS -> EXP is not false .)
    null            reduce using rule 229 (PREDICADOS -> EXP is not false .)
    asc             reduce using rule 229 (PREDICADOS -> EXP is not false .)
    desc            reduce using rule 229 (PREDICADOS -> EXP is not false .)


state 250

    (231) PREDICADOS -> EXP is not unknown .

    r_from          reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    limit           reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    offset          reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    union           reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    intersect       reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    except          reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    ptcoma          reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    mas             reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    menos           reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    multiplicacion  reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    division        reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    modulo          reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    elevado         reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    and             reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    or              reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    mayor           reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    menor           reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    mayor_igual     reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    menor_igual     reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    igual           reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    diferente1      reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    diferente2      reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    punto           reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    between         reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    in              reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    not             reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    is              reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    isnull          reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    notnull         reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    id              reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    as              reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    coma            reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    parc            reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    then            reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    where           reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    group           reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    having          reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    order           reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    end             reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    else            reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    when            reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    constraint      reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    default         reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    primary         reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    references      reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    null            reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    asc             reduce using rule 231 (PREDICADOS -> EXP is not unknown .)
    desc            reduce using rule 231 (PREDICADOS -> EXP is not unknown .)


state 251

    (77) PNULL -> not null .

    r_from          reduce using rule 77 (PNULL -> not null .)
    limit           reduce using rule 77 (PNULL -> not null .)
    offset          reduce using rule 77 (PNULL -> not null .)
    union           reduce using rule 77 (PNULL -> not null .)
    intersect       reduce using rule 77 (PNULL -> not null .)
    except          reduce using rule 77 (PNULL -> not null .)
    ptcoma          reduce using rule 77 (PNULL -> not null .)
    mas             reduce using rule 77 (PNULL -> not null .)
    menos           reduce using rule 77 (PNULL -> not null .)
    multiplicacion  reduce using rule 77 (PNULL -> not null .)
    division        reduce using rule 77 (PNULL -> not null .)
    modulo          reduce using rule 77 (PNULL -> not null .)
    elevado         reduce using rule 77 (PNULL -> not null .)
    and             reduce using rule 77 (PNULL -> not null .)
    or              reduce using rule 77 (PNULL -> not null .)
    mayor           reduce using rule 77 (PNULL -> not null .)
    menor           reduce using rule 77 (PNULL -> not null .)
    mayor_igual     reduce using rule 77 (PNULL -> not null .)
    menor_igual     reduce using rule 77 (PNULL -> not null .)
    igual           reduce using rule 77 (PNULL -> not null .)
    diferente1      reduce using rule 77 (PNULL -> not null .)
    diferente2      reduce using rule 77 (PNULL -> not null .)
    punto           reduce using rule 77 (PNULL -> not null .)
    between         reduce using rule 77 (PNULL -> not null .)
    in              reduce using rule 77 (PNULL -> not null .)
    not             reduce using rule 77 (PNULL -> not null .)
    is              reduce using rule 77 (PNULL -> not null .)
    isnull          reduce using rule 77 (PNULL -> not null .)
    notnull         reduce using rule 77 (PNULL -> not null .)
    id              reduce using rule 77 (PNULL -> not null .)
    as              reduce using rule 77 (PNULL -> not null .)
    coma            reduce using rule 77 (PNULL -> not null .)
    parc            reduce using rule 77 (PNULL -> not null .)
    then            reduce using rule 77 (PNULL -> not null .)
    where           reduce using rule 77 (PNULL -> not null .)
    group           reduce using rule 77 (PNULL -> not null .)
    having          reduce using rule 77 (PNULL -> not null .)
    order           reduce using rule 77 (PNULL -> not null .)
    end             reduce using rule 77 (PNULL -> not null .)
    else            reduce using rule 77 (PNULL -> not null .)
    when            reduce using rule 77 (PNULL -> not null .)
    constraint      reduce using rule 77 (PNULL -> not null .)
    default         reduce using rule 77 (PNULL -> not null .)
    primary         reduce using rule 77 (PNULL -> not null .)
    references      reduce using rule 77 (PNULL -> not null .)
    null            reduce using rule 77 (PNULL -> not null .)
    asc             reduce using rule 77 (PNULL -> not null .)
    desc            reduce using rule 77 (PNULL -> not null .)


state 252

    (211) EXP -> cadena not like cadena .

    r_from          reduce using rule 211 (EXP -> cadena not like cadena .)
    limit           reduce using rule 211 (EXP -> cadena not like cadena .)
    offset          reduce using rule 211 (EXP -> cadena not like cadena .)
    union           reduce using rule 211 (EXP -> cadena not like cadena .)
    intersect       reduce using rule 211 (EXP -> cadena not like cadena .)
    except          reduce using rule 211 (EXP -> cadena not like cadena .)
    ptcoma          reduce using rule 211 (EXP -> cadena not like cadena .)
    mas             reduce using rule 211 (EXP -> cadena not like cadena .)
    menos           reduce using rule 211 (EXP -> cadena not like cadena .)
    multiplicacion  reduce using rule 211 (EXP -> cadena not like cadena .)
    division        reduce using rule 211 (EXP -> cadena not like cadena .)
    modulo          reduce using rule 211 (EXP -> cadena not like cadena .)
    elevado         reduce using rule 211 (EXP -> cadena not like cadena .)
    and             reduce using rule 211 (EXP -> cadena not like cadena .)
    or              reduce using rule 211 (EXP -> cadena not like cadena .)
    mayor           reduce using rule 211 (EXP -> cadena not like cadena .)
    menor           reduce using rule 211 (EXP -> cadena not like cadena .)
    mayor_igual     reduce using rule 211 (EXP -> cadena not like cadena .)
    menor_igual     reduce using rule 211 (EXP -> cadena not like cadena .)
    igual           reduce using rule 211 (EXP -> cadena not like cadena .)
    diferente1      reduce using rule 211 (EXP -> cadena not like cadena .)
    diferente2      reduce using rule 211 (EXP -> cadena not like cadena .)
    punto           reduce using rule 211 (EXP -> cadena not like cadena .)
    between         reduce using rule 211 (EXP -> cadena not like cadena .)
    in              reduce using rule 211 (EXP -> cadena not like cadena .)
    not             reduce using rule 211 (EXP -> cadena not like cadena .)
    is              reduce using rule 211 (EXP -> cadena not like cadena .)
    isnull          reduce using rule 211 (EXP -> cadena not like cadena .)
    notnull         reduce using rule 211 (EXP -> cadena not like cadena .)
    id              reduce using rule 211 (EXP -> cadena not like cadena .)
    as              reduce using rule 211 (EXP -> cadena not like cadena .)
    coma            reduce using rule 211 (EXP -> cadena not like cadena .)
    parc            reduce using rule 211 (EXP -> cadena not like cadena .)
    then            reduce using rule 211 (EXP -> cadena not like cadena .)
    where           reduce using rule 211 (EXP -> cadena not like cadena .)
    group           reduce using rule 211 (EXP -> cadena not like cadena .)
    having          reduce using rule 211 (EXP -> cadena not like cadena .)
    order           reduce using rule 211 (EXP -> cadena not like cadena .)
    end             reduce using rule 211 (EXP -> cadena not like cadena .)
    else            reduce using rule 211 (EXP -> cadena not like cadena .)
    when            reduce using rule 211 (EXP -> cadena not like cadena .)
    constraint      reduce using rule 211 (EXP -> cadena not like cadena .)
    default         reduce using rule 211 (EXP -> cadena not like cadena .)
    primary         reduce using rule 211 (EXP -> cadena not like cadena .)
    references      reduce using rule 211 (EXP -> cadena not like cadena .)
    null            reduce using rule 211 (EXP -> cadena not like cadena .)
    asc             reduce using rule 211 (EXP -> cadena not like cadena .)
    desc            reduce using rule 211 (EXP -> cadena not like cadena .)


state 253

    (204) EXP -> extract para FIELDS r_from . timestamp cadena parc

    timestamp       shift and go to state 317


state 254

    (212) EXP -> any para LEXP parc .

    r_from          reduce using rule 212 (EXP -> any para LEXP parc .)
    limit           reduce using rule 212 (EXP -> any para LEXP parc .)
    offset          reduce using rule 212 (EXP -> any para LEXP parc .)
    union           reduce using rule 212 (EXP -> any para LEXP parc .)
    intersect       reduce using rule 212 (EXP -> any para LEXP parc .)
    except          reduce using rule 212 (EXP -> any para LEXP parc .)
    ptcoma          reduce using rule 212 (EXP -> any para LEXP parc .)
    mas             reduce using rule 212 (EXP -> any para LEXP parc .)
    menos           reduce using rule 212 (EXP -> any para LEXP parc .)
    multiplicacion  reduce using rule 212 (EXP -> any para LEXP parc .)
    division        reduce using rule 212 (EXP -> any para LEXP parc .)
    modulo          reduce using rule 212 (EXP -> any para LEXP parc .)
    elevado         reduce using rule 212 (EXP -> any para LEXP parc .)
    and             reduce using rule 212 (EXP -> any para LEXP parc .)
    or              reduce using rule 212 (EXP -> any para LEXP parc .)
    mayor           reduce using rule 212 (EXP -> any para LEXP parc .)
    menor           reduce using rule 212 (EXP -> any para LEXP parc .)
    mayor_igual     reduce using rule 212 (EXP -> any para LEXP parc .)
    menor_igual     reduce using rule 212 (EXP -> any para LEXP parc .)
    igual           reduce using rule 212 (EXP -> any para LEXP parc .)
    diferente1      reduce using rule 212 (EXP -> any para LEXP parc .)
    diferente2      reduce using rule 212 (EXP -> any para LEXP parc .)
    punto           reduce using rule 212 (EXP -> any para LEXP parc .)
    between         reduce using rule 212 (EXP -> any para LEXP parc .)
    in              reduce using rule 212 (EXP -> any para LEXP parc .)
    not             reduce using rule 212 (EXP -> any para LEXP parc .)
    is              reduce using rule 212 (EXP -> any para LEXP parc .)
    isnull          reduce using rule 212 (EXP -> any para LEXP parc .)
    notnull         reduce using rule 212 (EXP -> any para LEXP parc .)
    id              reduce using rule 212 (EXP -> any para LEXP parc .)
    as              reduce using rule 212 (EXP -> any para LEXP parc .)
    coma            reduce using rule 212 (EXP -> any para LEXP parc .)
    parc            reduce using rule 212 (EXP -> any para LEXP parc .)
    then            reduce using rule 212 (EXP -> any para LEXP parc .)
    where           reduce using rule 212 (EXP -> any para LEXP parc .)
    group           reduce using rule 212 (EXP -> any para LEXP parc .)
    having          reduce using rule 212 (EXP -> any para LEXP parc .)
    order           reduce using rule 212 (EXP -> any para LEXP parc .)
    end             reduce using rule 212 (EXP -> any para LEXP parc .)
    else            reduce using rule 212 (EXP -> any para LEXP parc .)
    when            reduce using rule 212 (EXP -> any para LEXP parc .)
    constraint      reduce using rule 212 (EXP -> any para LEXP parc .)
    default         reduce using rule 212 (EXP -> any para LEXP parc .)
    primary         reduce using rule 212 (EXP -> any para LEXP parc .)
    references      reduce using rule 212 (EXP -> any para LEXP parc .)
    null            reduce using rule 212 (EXP -> any para LEXP parc .)
    asc             reduce using rule 212 (EXP -> any para LEXP parc .)
    desc            reduce using rule 212 (EXP -> any para LEXP parc .)


state 255

    (213) EXP -> all para LEXP parc .

    r_from          reduce using rule 213 (EXP -> all para LEXP parc .)
    limit           reduce using rule 213 (EXP -> all para LEXP parc .)
    offset          reduce using rule 213 (EXP -> all para LEXP parc .)
    union           reduce using rule 213 (EXP -> all para LEXP parc .)
    intersect       reduce using rule 213 (EXP -> all para LEXP parc .)
    except          reduce using rule 213 (EXP -> all para LEXP parc .)
    ptcoma          reduce using rule 213 (EXP -> all para LEXP parc .)
    mas             reduce using rule 213 (EXP -> all para LEXP parc .)
    menos           reduce using rule 213 (EXP -> all para LEXP parc .)
    multiplicacion  reduce using rule 213 (EXP -> all para LEXP parc .)
    division        reduce using rule 213 (EXP -> all para LEXP parc .)
    modulo          reduce using rule 213 (EXP -> all para LEXP parc .)
    elevado         reduce using rule 213 (EXP -> all para LEXP parc .)
    and             reduce using rule 213 (EXP -> all para LEXP parc .)
    or              reduce using rule 213 (EXP -> all para LEXP parc .)
    mayor           reduce using rule 213 (EXP -> all para LEXP parc .)
    menor           reduce using rule 213 (EXP -> all para LEXP parc .)
    mayor_igual     reduce using rule 213 (EXP -> all para LEXP parc .)
    menor_igual     reduce using rule 213 (EXP -> all para LEXP parc .)
    igual           reduce using rule 213 (EXP -> all para LEXP parc .)
    diferente1      reduce using rule 213 (EXP -> all para LEXP parc .)
    diferente2      reduce using rule 213 (EXP -> all para LEXP parc .)
    punto           reduce using rule 213 (EXP -> all para LEXP parc .)
    between         reduce using rule 213 (EXP -> all para LEXP parc .)
    in              reduce using rule 213 (EXP -> all para LEXP parc .)
    not             reduce using rule 213 (EXP -> all para LEXP parc .)
    is              reduce using rule 213 (EXP -> all para LEXP parc .)
    isnull          reduce using rule 213 (EXP -> all para LEXP parc .)
    notnull         reduce using rule 213 (EXP -> all para LEXP parc .)
    id              reduce using rule 213 (EXP -> all para LEXP parc .)
    as              reduce using rule 213 (EXP -> all para LEXP parc .)
    coma            reduce using rule 213 (EXP -> all para LEXP parc .)
    parc            reduce using rule 213 (EXP -> all para LEXP parc .)
    then            reduce using rule 213 (EXP -> all para LEXP parc .)
    where           reduce using rule 213 (EXP -> all para LEXP parc .)
    group           reduce using rule 213 (EXP -> all para LEXP parc .)
    having          reduce using rule 213 (EXP -> all para LEXP parc .)
    order           reduce using rule 213 (EXP -> all para LEXP parc .)
    end             reduce using rule 213 (EXP -> all para LEXP parc .)
    else            reduce using rule 213 (EXP -> all para LEXP parc .)
    when            reduce using rule 213 (EXP -> all para LEXP parc .)
    constraint      reduce using rule 213 (EXP -> all para LEXP parc .)
    default         reduce using rule 213 (EXP -> all para LEXP parc .)
    primary         reduce using rule 213 (EXP -> all para LEXP parc .)
    references      reduce using rule 213 (EXP -> all para LEXP parc .)
    null            reduce using rule 213 (EXP -> all para LEXP parc .)
    asc             reduce using rule 213 (EXP -> all para LEXP parc .)
    desc            reduce using rule 213 (EXP -> all para LEXP parc .)


state 256

    (214) EXP -> some para LEXP parc .

    r_from          reduce using rule 214 (EXP -> some para LEXP parc .)
    limit           reduce using rule 214 (EXP -> some para LEXP parc .)
    offset          reduce using rule 214 (EXP -> some para LEXP parc .)
    union           reduce using rule 214 (EXP -> some para LEXP parc .)
    intersect       reduce using rule 214 (EXP -> some para LEXP parc .)
    except          reduce using rule 214 (EXP -> some para LEXP parc .)
    ptcoma          reduce using rule 214 (EXP -> some para LEXP parc .)
    mas             reduce using rule 214 (EXP -> some para LEXP parc .)
    menos           reduce using rule 214 (EXP -> some para LEXP parc .)
    multiplicacion  reduce using rule 214 (EXP -> some para LEXP parc .)
    division        reduce using rule 214 (EXP -> some para LEXP parc .)
    modulo          reduce using rule 214 (EXP -> some para LEXP parc .)
    elevado         reduce using rule 214 (EXP -> some para LEXP parc .)
    and             reduce using rule 214 (EXP -> some para LEXP parc .)
    or              reduce using rule 214 (EXP -> some para LEXP parc .)
    mayor           reduce using rule 214 (EXP -> some para LEXP parc .)
    menor           reduce using rule 214 (EXP -> some para LEXP parc .)
    mayor_igual     reduce using rule 214 (EXP -> some para LEXP parc .)
    menor_igual     reduce using rule 214 (EXP -> some para LEXP parc .)
    igual           reduce using rule 214 (EXP -> some para LEXP parc .)
    diferente1      reduce using rule 214 (EXP -> some para LEXP parc .)
    diferente2      reduce using rule 214 (EXP -> some para LEXP parc .)
    punto           reduce using rule 214 (EXP -> some para LEXP parc .)
    between         reduce using rule 214 (EXP -> some para LEXP parc .)
    in              reduce using rule 214 (EXP -> some para LEXP parc .)
    not             reduce using rule 214 (EXP -> some para LEXP parc .)
    is              reduce using rule 214 (EXP -> some para LEXP parc .)
    isnull          reduce using rule 214 (EXP -> some para LEXP parc .)
    notnull         reduce using rule 214 (EXP -> some para LEXP parc .)
    id              reduce using rule 214 (EXP -> some para LEXP parc .)
    as              reduce using rule 214 (EXP -> some para LEXP parc .)
    coma            reduce using rule 214 (EXP -> some para LEXP parc .)
    parc            reduce using rule 214 (EXP -> some para LEXP parc .)
    then            reduce using rule 214 (EXP -> some para LEXP parc .)
    where           reduce using rule 214 (EXP -> some para LEXP parc .)
    group           reduce using rule 214 (EXP -> some para LEXP parc .)
    having          reduce using rule 214 (EXP -> some para LEXP parc .)
    order           reduce using rule 214 (EXP -> some para LEXP parc .)
    end             reduce using rule 214 (EXP -> some para LEXP parc .)
    else            reduce using rule 214 (EXP -> some para LEXP parc .)
    when            reduce using rule 214 (EXP -> some para LEXP parc .)
    constraint      reduce using rule 214 (EXP -> some para LEXP parc .)
    default         reduce using rule 214 (EXP -> some para LEXP parc .)
    primary         reduce using rule 214 (EXP -> some para LEXP parc .)
    references      reduce using rule 214 (EXP -> some para LEXP parc .)
    null            reduce using rule 214 (EXP -> some para LEXP parc .)
    asc             reduce using rule 214 (EXP -> some para LEXP parc .)
    desc            reduce using rule 214 (EXP -> some para LEXP parc .)


state 257

    (67) COLDEF -> id . TIPO
    (68) COLDEF -> id . TIPO LOPCOLUMN
    (136) TIPO -> . smallint
    (137) TIPO -> . integer
    (138) TIPO -> . bigint
    (139) TIPO -> . decimal para LEXP parc
    (140) TIPO -> . numeric para LEXP parc
    (141) TIPO -> . real
    (142) TIPO -> . double precision
    (143) TIPO -> . money
    (144) TIPO -> . character varying para int parc
    (145) TIPO -> . varchar para int parc
    (146) TIPO -> . character para int parc
    (147) TIPO -> . char para int parc
    (148) TIPO -> . text
    (149) TIPO -> . timestamp
    (150) TIPO -> . timestamp without time zone
    (151) TIPO -> . timestamp para int parc without time zone
    (152) TIPO -> . timestamp with time zone
    (153) TIPO -> . timestamp para int parc with time zone
    (154) TIPO -> . timestamp para int parc
    (155) TIPO -> . date
    (156) TIPO -> . time
    (157) TIPO -> . time without time zone
    (158) TIPO -> . time para int parc without time zone
    (159) TIPO -> . time with time zone
    (160) TIPO -> . time para int parc with time zone
    (161) TIPO -> . time para int parc
    (162) TIPO -> . interval
    (163) TIPO -> . interval para int parc
    (164) TIPO -> . interval cadena
    (165) TIPO -> . interval para int parc cadena
    (166) TIPO -> . boolean

    smallint        shift and go to state 319
    integer         shift and go to state 320
    bigint          shift and go to state 321
    decimal         shift and go to state 322
    numeric         shift and go to state 323
    real            shift and go to state 324
    double          shift and go to state 325
    money           shift and go to state 326
    character       shift and go to state 327
    varchar         shift and go to state 328
    char            shift and go to state 329
    text            shift and go to state 330
    timestamp       shift and go to state 331
    date            shift and go to state 333
    time            shift and go to state 332
    interval        shift and go to state 334
    boolean         shift and go to state 335

    TIPO                           shift and go to state 318

state 258

    (61) CREATETABLE -> create table id para LDEF . parc ptcoma
    (62) CREATETABLE -> create table id para LDEF . parc HERENCIA ptcoma
    (63) LDEF -> LDEF . coma COLDEF

    parc            shift and go to state 336
    coma            shift and go to state 337


state 259

    (64) LDEF -> COLDEF .

    parc            reduce using rule 64 (LDEF -> COLDEF .)
    coma            reduce using rule 64 (LDEF -> COLDEF .)


state 260

    (65) COLDEF -> OPCONST .

    parc            reduce using rule 65 (COLDEF -> OPCONST .)
    coma            reduce using rule 65 (COLDEF -> OPCONST .)


state 261

    (66) COLDEF -> constraint . id OPCONST

    id              shift and go to state 338


state 262

    (79) OPCONST -> primary . key para LEXP parc

    key             shift and go to state 339


state 263

    (80) OPCONST -> foreign . key para LEXP parc references table para LEXP parc

    key             shift and go to state 340


state 264

    (81) OPCONST -> unique . para LEXP parc

    para            shift and go to state 341


state 265

    (82) OPCONST -> check . para LEXP parc

    para            shift and go to state 342


state 266

    (84) CREATETYPE -> create type id as enum . para LEXP parc

    para            shift and go to state 343


state 267

    (48) CREATEDB -> create RD if not exist . id
    (49) CREATEDB -> create RD if not exist . id OPCCDB

    id              shift and go to state 344


state 268

    (54) OPCCDB -> PROPIETARIO MODO .

    ptcoma          reduce using rule 54 (OPCCDB -> PROPIETARIO MODO .)


state 269

    (57) PROPIETARIO -> owner igual . id

    id              shift and go to state 345


state 270

    (58) PROPIETARIO -> owner id .

    mode            reduce using rule 58 (PROPIETARIO -> owner id .)
    ptcoma          reduce using rule 58 (PROPIETARIO -> owner id .)


state 271

    (59) MODO -> mode igual . int

    int             shift and go to state 346


state 272

    (60) MODO -> mode int .

    ptcoma          reduce using rule 60 (MODO -> mode int .)


state 273

    (129) LCAMPOS -> id igual . EXP
    (130) LCAMPOS -> id igual . default
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    default         shift and go to state 348
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 347
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 274

    (128) LCAMPOS -> LCAMPOS id . igual EXP

    igual           shift and go to state 349


state 275

    (127) UPDATE -> update id set LCAMPOS where . LEXP
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 350
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 276

    (131) DELETE -> delete r_from id where LEXP .
    (134) LEXP -> LEXP . coma EXP

    ptcoma          reduce using rule 131 (DELETE -> delete r_from id where LEXP .)
    coma            shift and go to state 86


state 277

    (27) RO -> rename to . id

    id              shift and go to state 351


state 278

    (28) RO -> owner to . id

    id              shift and go to state 352


state 279

    (32) OP -> alter column . id set not null
    (33) OP -> alter column . id set null
    (39) alc -> alter column . id type TIPO

    id              shift and go to state 353


state 280

    (30) OP -> add ADD .

    ptcoma          reduce using rule 30 (OP -> add ADD .)


state 281

    (43) ADD -> column . id TIPO

    id              shift and go to state 354


state 282

    (44) ADD -> check . para LEXP parc

    para            shift and go to state 355


state 283

    (45) ADD -> constraint . id unique para id parc

    id              shift and go to state 356


state 284

    (46) ADD -> foreign . key para id parc references id para id parc

    key             shift and go to state 357


state 285

    (31) OP -> drop column . ALTERDROP
    (41) ALTERDROP -> column . LEXP
    (40) ALTERDROP -> . constraint id
    (41) ALTERDROP -> . column LEXP
    (42) ALTERDROP -> . check id
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    constraint      shift and go to state 287
    column          shift and go to state 358
    check           shift and go to state 288
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    ALTERDROP                      shift and go to state 359
    LEXP                           shift and go to state 360
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 286

    (35) OP -> drop ALTERDROP .

    ptcoma          reduce using rule 35 (OP -> drop ALTERDROP .)


state 287

    (40) ALTERDROP -> constraint . id

    id              shift and go to state 361


state 288

    (42) ALTERDROP -> check . id

    id              shift and go to state 362


state 289

    (37) listaalc -> listaalc coma . alc
    (39) alc -> . alter column id type TIPO

    alter           shift and go to state 364

    alc                            shift and go to state 363

state 290

    (36) OP -> rename column . id to id

    id              shift and go to state 365


state 291

    (23) DROP -> drop databases if exist id .

    ptcoma          reduce using rule 23 (DROP -> drop databases if exist id .)


state 292

    (21) INSERT -> insert into id values para . LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 366
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 293

    (19) WHEN -> when LEXP then LEXP .
    (134) LEXP -> LEXP . coma EXP

    end             reduce using rule 19 (WHEN -> when LEXP then LEXP .)
    else            reduce using rule 19 (WHEN -> when LEXP then LEXP .)
    when            reduce using rule 19 (WHEN -> when LEXP then LEXP .)
    coma            shift and go to state 86


state 294

    (85) SELECT -> select distinct LSELECT r_from LFROM WHERE . GROUP HAVING ORDER LIMIT COMBINING
    (118) GROUP -> . group by LEXP
    (119) GROUP -> .

  ! shift/reduce conflict for group resolved as shift
    group           shift and go to state 296
    r_from          reduce using rule 119 (GROUP -> .)
    limit           reduce using rule 119 (GROUP -> .)
    offset          reduce using rule 119 (GROUP -> .)
    union           reduce using rule 119 (GROUP -> .)
    intersect       reduce using rule 119 (GROUP -> .)
    except          reduce using rule 119 (GROUP -> .)
    ptcoma          reduce using rule 119 (GROUP -> .)
    mas             reduce using rule 119 (GROUP -> .)
    menos           reduce using rule 119 (GROUP -> .)
    multiplicacion  reduce using rule 119 (GROUP -> .)
    division        reduce using rule 119 (GROUP -> .)
    modulo          reduce using rule 119 (GROUP -> .)
    elevado         reduce using rule 119 (GROUP -> .)
    and             reduce using rule 119 (GROUP -> .)
    or              reduce using rule 119 (GROUP -> .)
    mayor           reduce using rule 119 (GROUP -> .)
    menor           reduce using rule 119 (GROUP -> .)
    mayor_igual     reduce using rule 119 (GROUP -> .)
    menor_igual     reduce using rule 119 (GROUP -> .)
    igual           reduce using rule 119 (GROUP -> .)
    diferente1      reduce using rule 119 (GROUP -> .)
    diferente2      reduce using rule 119 (GROUP -> .)
    punto           reduce using rule 119 (GROUP -> .)
    between         reduce using rule 119 (GROUP -> .)
    in              reduce using rule 119 (GROUP -> .)
    not             reduce using rule 119 (GROUP -> .)
    is              reduce using rule 119 (GROUP -> .)
    isnull          reduce using rule 119 (GROUP -> .)
    notnull         reduce using rule 119 (GROUP -> .)
    id              reduce using rule 119 (GROUP -> .)
    as              reduce using rule 119 (GROUP -> .)
    coma            reduce using rule 119 (GROUP -> .)
    parc            reduce using rule 119 (GROUP -> .)
    then            reduce using rule 119 (GROUP -> .)
    where           reduce using rule 119 (GROUP -> .)
    having          reduce using rule 119 (GROUP -> .)
    order           reduce using rule 119 (GROUP -> .)
    end             reduce using rule 119 (GROUP -> .)
    else            reduce using rule 119 (GROUP -> .)
    when            reduce using rule 119 (GROUP -> .)
    constraint      reduce using rule 119 (GROUP -> .)
    default         reduce using rule 119 (GROUP -> .)
    primary         reduce using rule 119 (GROUP -> .)
    references      reduce using rule 119 (GROUP -> .)
    null            reduce using rule 119 (GROUP -> .)
    asc             reduce using rule 119 (GROUP -> .)
    desc            reduce using rule 119 (GROUP -> .)

  ! group           [ reduce using rule 119 (GROUP -> .) ]

    GROUP                          shift and go to state 367

state 295

    (86) SELECT -> select LSELECT r_from LFROM WHERE GROUP . HAVING ORDER LIMIT COMBINING
    (120) HAVING -> . having LEXP
    (121) HAVING -> .

  ! shift/reduce conflict for having resolved as shift
    having          shift and go to state 369
    r_from          reduce using rule 121 (HAVING -> .)
    limit           reduce using rule 121 (HAVING -> .)
    offset          reduce using rule 121 (HAVING -> .)
    union           reduce using rule 121 (HAVING -> .)
    intersect       reduce using rule 121 (HAVING -> .)
    except          reduce using rule 121 (HAVING -> .)
    ptcoma          reduce using rule 121 (HAVING -> .)
    mas             reduce using rule 121 (HAVING -> .)
    menos           reduce using rule 121 (HAVING -> .)
    multiplicacion  reduce using rule 121 (HAVING -> .)
    division        reduce using rule 121 (HAVING -> .)
    modulo          reduce using rule 121 (HAVING -> .)
    elevado         reduce using rule 121 (HAVING -> .)
    and             reduce using rule 121 (HAVING -> .)
    or              reduce using rule 121 (HAVING -> .)
    mayor           reduce using rule 121 (HAVING -> .)
    menor           reduce using rule 121 (HAVING -> .)
    mayor_igual     reduce using rule 121 (HAVING -> .)
    menor_igual     reduce using rule 121 (HAVING -> .)
    igual           reduce using rule 121 (HAVING -> .)
    diferente1      reduce using rule 121 (HAVING -> .)
    diferente2      reduce using rule 121 (HAVING -> .)
    punto           reduce using rule 121 (HAVING -> .)
    between         reduce using rule 121 (HAVING -> .)
    in              reduce using rule 121 (HAVING -> .)
    not             reduce using rule 121 (HAVING -> .)
    is              reduce using rule 121 (HAVING -> .)
    isnull          reduce using rule 121 (HAVING -> .)
    notnull         reduce using rule 121 (HAVING -> .)
    id              reduce using rule 121 (HAVING -> .)
    as              reduce using rule 121 (HAVING -> .)
    coma            reduce using rule 121 (HAVING -> .)
    parc            reduce using rule 121 (HAVING -> .)
    then            reduce using rule 121 (HAVING -> .)
    where           reduce using rule 121 (HAVING -> .)
    group           reduce using rule 121 (HAVING -> .)
    order           reduce using rule 121 (HAVING -> .)
    end             reduce using rule 121 (HAVING -> .)
    else            reduce using rule 121 (HAVING -> .)
    when            reduce using rule 121 (HAVING -> .)
    constraint      reduce using rule 121 (HAVING -> .)
    default         reduce using rule 121 (HAVING -> .)
    primary         reduce using rule 121 (HAVING -> .)
    references      reduce using rule 121 (HAVING -> .)
    null            reduce using rule 121 (HAVING -> .)
    asc             reduce using rule 121 (HAVING -> .)
    desc            reduce using rule 121 (HAVING -> .)

  ! having          [ reduce using rule 121 (HAVING -> .) ]

    HAVING                         shift and go to state 368

state 296

    (118) GROUP -> group . by LEXP

    by              shift and go to state 370


state 297

    (100) LFROM -> LFROM coma FROM .

    r_from          reduce using rule 100 (LFROM -> LFROM coma FROM .)
    limit           reduce using rule 100 (LFROM -> LFROM coma FROM .)
    offset          reduce using rule 100 (LFROM -> LFROM coma FROM .)
    union           reduce using rule 100 (LFROM -> LFROM coma FROM .)
    intersect       reduce using rule 100 (LFROM -> LFROM coma FROM .)
    except          reduce using rule 100 (LFROM -> LFROM coma FROM .)
    ptcoma          reduce using rule 100 (LFROM -> LFROM coma FROM .)
    mas             reduce using rule 100 (LFROM -> LFROM coma FROM .)
    menos           reduce using rule 100 (LFROM -> LFROM coma FROM .)
    multiplicacion  reduce using rule 100 (LFROM -> LFROM coma FROM .)
    division        reduce using rule 100 (LFROM -> LFROM coma FROM .)
    modulo          reduce using rule 100 (LFROM -> LFROM coma FROM .)
    elevado         reduce using rule 100 (LFROM -> LFROM coma FROM .)
    and             reduce using rule 100 (LFROM -> LFROM coma FROM .)
    or              reduce using rule 100 (LFROM -> LFROM coma FROM .)
    mayor           reduce using rule 100 (LFROM -> LFROM coma FROM .)
    menor           reduce using rule 100 (LFROM -> LFROM coma FROM .)
    mayor_igual     reduce using rule 100 (LFROM -> LFROM coma FROM .)
    menor_igual     reduce using rule 100 (LFROM -> LFROM coma FROM .)
    igual           reduce using rule 100 (LFROM -> LFROM coma FROM .)
    diferente1      reduce using rule 100 (LFROM -> LFROM coma FROM .)
    diferente2      reduce using rule 100 (LFROM -> LFROM coma FROM .)
    punto           reduce using rule 100 (LFROM -> LFROM coma FROM .)
    between         reduce using rule 100 (LFROM -> LFROM coma FROM .)
    in              reduce using rule 100 (LFROM -> LFROM coma FROM .)
    not             reduce using rule 100 (LFROM -> LFROM coma FROM .)
    is              reduce using rule 100 (LFROM -> LFROM coma FROM .)
    isnull          reduce using rule 100 (LFROM -> LFROM coma FROM .)
    notnull         reduce using rule 100 (LFROM -> LFROM coma FROM .)
    id              reduce using rule 100 (LFROM -> LFROM coma FROM .)
    as              reduce using rule 100 (LFROM -> LFROM coma FROM .)
    coma            reduce using rule 100 (LFROM -> LFROM coma FROM .)
    parc            reduce using rule 100 (LFROM -> LFROM coma FROM .)
    then            reduce using rule 100 (LFROM -> LFROM coma FROM .)
    where           reduce using rule 100 (LFROM -> LFROM coma FROM .)
    group           reduce using rule 100 (LFROM -> LFROM coma FROM .)
    having          reduce using rule 100 (LFROM -> LFROM coma FROM .)
    order           reduce using rule 100 (LFROM -> LFROM coma FROM .)
    end             reduce using rule 100 (LFROM -> LFROM coma FROM .)
    else            reduce using rule 100 (LFROM -> LFROM coma FROM .)
    when            reduce using rule 100 (LFROM -> LFROM coma FROM .)
    constraint      reduce using rule 100 (LFROM -> LFROM coma FROM .)
    default         reduce using rule 100 (LFROM -> LFROM coma FROM .)
    primary         reduce using rule 100 (LFROM -> LFROM coma FROM .)
    references      reduce using rule 100 (LFROM -> LFROM coma FROM .)
    null            reduce using rule 100 (LFROM -> LFROM coma FROM .)
    asc             reduce using rule 100 (LFROM -> LFROM coma FROM .)
    desc            reduce using rule 100 (LFROM -> LFROM coma FROM .)


state 298

    (106) WHERE -> where LEXP .
    (134) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 106 (WHERE -> where LEXP .)
    limit           reduce using rule 106 (WHERE -> where LEXP .)
    offset          reduce using rule 106 (WHERE -> where LEXP .)
    union           reduce using rule 106 (WHERE -> where LEXP .)
    intersect       reduce using rule 106 (WHERE -> where LEXP .)
    except          reduce using rule 106 (WHERE -> where LEXP .)
    ptcoma          reduce using rule 106 (WHERE -> where LEXP .)
    mas             reduce using rule 106 (WHERE -> where LEXP .)
    menos           reduce using rule 106 (WHERE -> where LEXP .)
    multiplicacion  reduce using rule 106 (WHERE -> where LEXP .)
    division        reduce using rule 106 (WHERE -> where LEXP .)
    modulo          reduce using rule 106 (WHERE -> where LEXP .)
    elevado         reduce using rule 106 (WHERE -> where LEXP .)
    and             reduce using rule 106 (WHERE -> where LEXP .)
    or              reduce using rule 106 (WHERE -> where LEXP .)
    mayor           reduce using rule 106 (WHERE -> where LEXP .)
    menor           reduce using rule 106 (WHERE -> where LEXP .)
    mayor_igual     reduce using rule 106 (WHERE -> where LEXP .)
    menor_igual     reduce using rule 106 (WHERE -> where LEXP .)
    igual           reduce using rule 106 (WHERE -> where LEXP .)
    diferente1      reduce using rule 106 (WHERE -> where LEXP .)
    diferente2      reduce using rule 106 (WHERE -> where LEXP .)
    punto           reduce using rule 106 (WHERE -> where LEXP .)
    between         reduce using rule 106 (WHERE -> where LEXP .)
    in              reduce using rule 106 (WHERE -> where LEXP .)
    not             reduce using rule 106 (WHERE -> where LEXP .)
    is              reduce using rule 106 (WHERE -> where LEXP .)
    isnull          reduce using rule 106 (WHERE -> where LEXP .)
    notnull         reduce using rule 106 (WHERE -> where LEXP .)
    id              reduce using rule 106 (WHERE -> where LEXP .)
    as              reduce using rule 106 (WHERE -> where LEXP .)
    parc            reduce using rule 106 (WHERE -> where LEXP .)
    then            reduce using rule 106 (WHERE -> where LEXP .)
    where           reduce using rule 106 (WHERE -> where LEXP .)
    group           reduce using rule 106 (WHERE -> where LEXP .)
    having          reduce using rule 106 (WHERE -> where LEXP .)
    order           reduce using rule 106 (WHERE -> where LEXP .)
    end             reduce using rule 106 (WHERE -> where LEXP .)
    else            reduce using rule 106 (WHERE -> where LEXP .)
    when            reduce using rule 106 (WHERE -> where LEXP .)
    constraint      reduce using rule 106 (WHERE -> where LEXP .)
    default         reduce using rule 106 (WHERE -> where LEXP .)
    primary         reduce using rule 106 (WHERE -> where LEXP .)
    references      reduce using rule 106 (WHERE -> where LEXP .)
    null            reduce using rule 106 (WHERE -> where LEXP .)
    asc             reduce using rule 106 (WHERE -> where LEXP .)
    desc            reduce using rule 106 (WHERE -> where LEXP .)
    coma            shift and go to state 86

  ! coma            [ reduce using rule 106 (WHERE -> where LEXP .) ]


state 299

    (107) WHERE -> where EXIST .

    r_from          reduce using rule 107 (WHERE -> where EXIST .)
    limit           reduce using rule 107 (WHERE -> where EXIST .)
    offset          reduce using rule 107 (WHERE -> where EXIST .)
    union           reduce using rule 107 (WHERE -> where EXIST .)
    intersect       reduce using rule 107 (WHERE -> where EXIST .)
    except          reduce using rule 107 (WHERE -> where EXIST .)
    ptcoma          reduce using rule 107 (WHERE -> where EXIST .)
    mas             reduce using rule 107 (WHERE -> where EXIST .)
    menos           reduce using rule 107 (WHERE -> where EXIST .)
    multiplicacion  reduce using rule 107 (WHERE -> where EXIST .)
    division        reduce using rule 107 (WHERE -> where EXIST .)
    modulo          reduce using rule 107 (WHERE -> where EXIST .)
    elevado         reduce using rule 107 (WHERE -> where EXIST .)
    and             reduce using rule 107 (WHERE -> where EXIST .)
    or              reduce using rule 107 (WHERE -> where EXIST .)
    mayor           reduce using rule 107 (WHERE -> where EXIST .)
    menor           reduce using rule 107 (WHERE -> where EXIST .)
    mayor_igual     reduce using rule 107 (WHERE -> where EXIST .)
    menor_igual     reduce using rule 107 (WHERE -> where EXIST .)
    igual           reduce using rule 107 (WHERE -> where EXIST .)
    diferente1      reduce using rule 107 (WHERE -> where EXIST .)
    diferente2      reduce using rule 107 (WHERE -> where EXIST .)
    punto           reduce using rule 107 (WHERE -> where EXIST .)
    between         reduce using rule 107 (WHERE -> where EXIST .)
    in              reduce using rule 107 (WHERE -> where EXIST .)
    not             reduce using rule 107 (WHERE -> where EXIST .)
    is              reduce using rule 107 (WHERE -> where EXIST .)
    isnull          reduce using rule 107 (WHERE -> where EXIST .)
    notnull         reduce using rule 107 (WHERE -> where EXIST .)
    id              reduce using rule 107 (WHERE -> where EXIST .)
    as              reduce using rule 107 (WHERE -> where EXIST .)
    coma            reduce using rule 107 (WHERE -> where EXIST .)
    parc            reduce using rule 107 (WHERE -> where EXIST .)
    then            reduce using rule 107 (WHERE -> where EXIST .)
    where           reduce using rule 107 (WHERE -> where EXIST .)
    group           reduce using rule 107 (WHERE -> where EXIST .)
    having          reduce using rule 107 (WHERE -> where EXIST .)
    order           reduce using rule 107 (WHERE -> where EXIST .)
    end             reduce using rule 107 (WHERE -> where EXIST .)
    else            reduce using rule 107 (WHERE -> where EXIST .)
    when            reduce using rule 107 (WHERE -> where EXIST .)
    constraint      reduce using rule 107 (WHERE -> where EXIST .)
    default         reduce using rule 107 (WHERE -> where EXIST .)
    primary         reduce using rule 107 (WHERE -> where EXIST .)
    references      reduce using rule 107 (WHERE -> where EXIST .)
    null            reduce using rule 107 (WHERE -> where EXIST .)
    asc             reduce using rule 107 (WHERE -> where EXIST .)
    desc            reduce using rule 107 (WHERE -> where EXIST .)


state 300

    (133) EXIST -> exist . para SELECT parc

    para            shift and go to state 371


state 301

    (108) WHERE -> union LEXP .
    (134) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 108 (WHERE -> union LEXP .)
    limit           reduce using rule 108 (WHERE -> union LEXP .)
    offset          reduce using rule 108 (WHERE -> union LEXP .)
    union           reduce using rule 108 (WHERE -> union LEXP .)
    intersect       reduce using rule 108 (WHERE -> union LEXP .)
    except          reduce using rule 108 (WHERE -> union LEXP .)
    ptcoma          reduce using rule 108 (WHERE -> union LEXP .)
    mas             reduce using rule 108 (WHERE -> union LEXP .)
    menos           reduce using rule 108 (WHERE -> union LEXP .)
    multiplicacion  reduce using rule 108 (WHERE -> union LEXP .)
    division        reduce using rule 108 (WHERE -> union LEXP .)
    modulo          reduce using rule 108 (WHERE -> union LEXP .)
    elevado         reduce using rule 108 (WHERE -> union LEXP .)
    and             reduce using rule 108 (WHERE -> union LEXP .)
    or              reduce using rule 108 (WHERE -> union LEXP .)
    mayor           reduce using rule 108 (WHERE -> union LEXP .)
    menor           reduce using rule 108 (WHERE -> union LEXP .)
    mayor_igual     reduce using rule 108 (WHERE -> union LEXP .)
    menor_igual     reduce using rule 108 (WHERE -> union LEXP .)
    igual           reduce using rule 108 (WHERE -> union LEXP .)
    diferente1      reduce using rule 108 (WHERE -> union LEXP .)
    diferente2      reduce using rule 108 (WHERE -> union LEXP .)
    punto           reduce using rule 108 (WHERE -> union LEXP .)
    between         reduce using rule 108 (WHERE -> union LEXP .)
    in              reduce using rule 108 (WHERE -> union LEXP .)
    not             reduce using rule 108 (WHERE -> union LEXP .)
    is              reduce using rule 108 (WHERE -> union LEXP .)
    isnull          reduce using rule 108 (WHERE -> union LEXP .)
    notnull         reduce using rule 108 (WHERE -> union LEXP .)
    id              reduce using rule 108 (WHERE -> union LEXP .)
    as              reduce using rule 108 (WHERE -> union LEXP .)
    parc            reduce using rule 108 (WHERE -> union LEXP .)
    then            reduce using rule 108 (WHERE -> union LEXP .)
    where           reduce using rule 108 (WHERE -> union LEXP .)
    group           reduce using rule 108 (WHERE -> union LEXP .)
    having          reduce using rule 108 (WHERE -> union LEXP .)
    order           reduce using rule 108 (WHERE -> union LEXP .)
    end             reduce using rule 108 (WHERE -> union LEXP .)
    else            reduce using rule 108 (WHERE -> union LEXP .)
    when            reduce using rule 108 (WHERE -> union LEXP .)
    constraint      reduce using rule 108 (WHERE -> union LEXP .)
    default         reduce using rule 108 (WHERE -> union LEXP .)
    primary         reduce using rule 108 (WHERE -> union LEXP .)
    references      reduce using rule 108 (WHERE -> union LEXP .)
    null            reduce using rule 108 (WHERE -> union LEXP .)
    asc             reduce using rule 108 (WHERE -> union LEXP .)
    desc            reduce using rule 108 (WHERE -> union LEXP .)
    coma            shift and go to state 86

  ! coma            [ reduce using rule 108 (WHERE -> union LEXP .) ]


state 302

    (109) WHERE -> union all . LEXP
    (213) EXP -> all . para LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    para            shift and go to state 305
    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 372
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 303

    (103) FROM -> LEXP as id .

    r_from          reduce using rule 103 (FROM -> LEXP as id .)
    limit           reduce using rule 103 (FROM -> LEXP as id .)
    offset          reduce using rule 103 (FROM -> LEXP as id .)
    union           reduce using rule 103 (FROM -> LEXP as id .)
    intersect       reduce using rule 103 (FROM -> LEXP as id .)
    except          reduce using rule 103 (FROM -> LEXP as id .)
    ptcoma          reduce using rule 103 (FROM -> LEXP as id .)
    mas             reduce using rule 103 (FROM -> LEXP as id .)
    menos           reduce using rule 103 (FROM -> LEXP as id .)
    multiplicacion  reduce using rule 103 (FROM -> LEXP as id .)
    division        reduce using rule 103 (FROM -> LEXP as id .)
    modulo          reduce using rule 103 (FROM -> LEXP as id .)
    elevado         reduce using rule 103 (FROM -> LEXP as id .)
    and             reduce using rule 103 (FROM -> LEXP as id .)
    or              reduce using rule 103 (FROM -> LEXP as id .)
    mayor           reduce using rule 103 (FROM -> LEXP as id .)
    menor           reduce using rule 103 (FROM -> LEXP as id .)
    mayor_igual     reduce using rule 103 (FROM -> LEXP as id .)
    menor_igual     reduce using rule 103 (FROM -> LEXP as id .)
    igual           reduce using rule 103 (FROM -> LEXP as id .)
    diferente1      reduce using rule 103 (FROM -> LEXP as id .)
    diferente2      reduce using rule 103 (FROM -> LEXP as id .)
    punto           reduce using rule 103 (FROM -> LEXP as id .)
    between         reduce using rule 103 (FROM -> LEXP as id .)
    in              reduce using rule 103 (FROM -> LEXP as id .)
    not             reduce using rule 103 (FROM -> LEXP as id .)
    is              reduce using rule 103 (FROM -> LEXP as id .)
    isnull          reduce using rule 103 (FROM -> LEXP as id .)
    notnull         reduce using rule 103 (FROM -> LEXP as id .)
    id              reduce using rule 103 (FROM -> LEXP as id .)
    as              reduce using rule 103 (FROM -> LEXP as id .)
    coma            reduce using rule 103 (FROM -> LEXP as id .)
    parc            reduce using rule 103 (FROM -> LEXP as id .)
    then            reduce using rule 103 (FROM -> LEXP as id .)
    where           reduce using rule 103 (FROM -> LEXP as id .)
    group           reduce using rule 103 (FROM -> LEXP as id .)
    having          reduce using rule 103 (FROM -> LEXP as id .)
    order           reduce using rule 103 (FROM -> LEXP as id .)
    end             reduce using rule 103 (FROM -> LEXP as id .)
    else            reduce using rule 103 (FROM -> LEXP as id .)
    when            reduce using rule 103 (FROM -> LEXP as id .)
    constraint      reduce using rule 103 (FROM -> LEXP as id .)
    default         reduce using rule 103 (FROM -> LEXP as id .)
    primary         reduce using rule 103 (FROM -> LEXP as id .)
    references      reduce using rule 103 (FROM -> LEXP as id .)
    null            reduce using rule 103 (FROM -> LEXP as id .)
    asc             reduce using rule 103 (FROM -> LEXP as id .)
    desc            reduce using rule 103 (FROM -> LEXP as id .)


state 304

    (112) COMBINING -> union all LEXP .
    (134) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 112 (COMBINING -> union all LEXP .)
    limit           reduce using rule 112 (COMBINING -> union all LEXP .)
    offset          reduce using rule 112 (COMBINING -> union all LEXP .)
    union           reduce using rule 112 (COMBINING -> union all LEXP .)
    intersect       reduce using rule 112 (COMBINING -> union all LEXP .)
    except          reduce using rule 112 (COMBINING -> union all LEXP .)
    ptcoma          reduce using rule 112 (COMBINING -> union all LEXP .)
    mas             reduce using rule 112 (COMBINING -> union all LEXP .)
    menos           reduce using rule 112 (COMBINING -> union all LEXP .)
    multiplicacion  reduce using rule 112 (COMBINING -> union all LEXP .)
    division        reduce using rule 112 (COMBINING -> union all LEXP .)
    modulo          reduce using rule 112 (COMBINING -> union all LEXP .)
    elevado         reduce using rule 112 (COMBINING -> union all LEXP .)
    and             reduce using rule 112 (COMBINING -> union all LEXP .)
    or              reduce using rule 112 (COMBINING -> union all LEXP .)
    mayor           reduce using rule 112 (COMBINING -> union all LEXP .)
    menor           reduce using rule 112 (COMBINING -> union all LEXP .)
    mayor_igual     reduce using rule 112 (COMBINING -> union all LEXP .)
    menor_igual     reduce using rule 112 (COMBINING -> union all LEXP .)
    igual           reduce using rule 112 (COMBINING -> union all LEXP .)
    diferente1      reduce using rule 112 (COMBINING -> union all LEXP .)
    diferente2      reduce using rule 112 (COMBINING -> union all LEXP .)
    punto           reduce using rule 112 (COMBINING -> union all LEXP .)
    between         reduce using rule 112 (COMBINING -> union all LEXP .)
    in              reduce using rule 112 (COMBINING -> union all LEXP .)
    not             reduce using rule 112 (COMBINING -> union all LEXP .)
    is              reduce using rule 112 (COMBINING -> union all LEXP .)
    isnull          reduce using rule 112 (COMBINING -> union all LEXP .)
    notnull         reduce using rule 112 (COMBINING -> union all LEXP .)
    id              reduce using rule 112 (COMBINING -> union all LEXP .)
    as              reduce using rule 112 (COMBINING -> union all LEXP .)
    parc            reduce using rule 112 (COMBINING -> union all LEXP .)
    then            reduce using rule 112 (COMBINING -> union all LEXP .)
    where           reduce using rule 112 (COMBINING -> union all LEXP .)
    group           reduce using rule 112 (COMBINING -> union all LEXP .)
    having          reduce using rule 112 (COMBINING -> union all LEXP .)
    order           reduce using rule 112 (COMBINING -> union all LEXP .)
    end             reduce using rule 112 (COMBINING -> union all LEXP .)
    else            reduce using rule 112 (COMBINING -> union all LEXP .)
    when            reduce using rule 112 (COMBINING -> union all LEXP .)
    constraint      reduce using rule 112 (COMBINING -> union all LEXP .)
    default         reduce using rule 112 (COMBINING -> union all LEXP .)
    primary         reduce using rule 112 (COMBINING -> union all LEXP .)
    references      reduce using rule 112 (COMBINING -> union all LEXP .)
    null            reduce using rule 112 (COMBINING -> union all LEXP .)
    asc             reduce using rule 112 (COMBINING -> union all LEXP .)
    desc            reduce using rule 112 (COMBINING -> union all LEXP .)
    coma            shift and go to state 86

  ! coma            [ reduce using rule 112 (COMBINING -> union all LEXP .) ]


state 305

    (213) EXP -> all para . LEXP parc
    (192) EXP -> para . EXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 195
    EXP                            shift and go to state 373
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 306

    (114) COMBINING -> intersect all LEXP .
    (134) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 114 (COMBINING -> intersect all LEXP .)
    limit           reduce using rule 114 (COMBINING -> intersect all LEXP .)
    offset          reduce using rule 114 (COMBINING -> intersect all LEXP .)
    union           reduce using rule 114 (COMBINING -> intersect all LEXP .)
    intersect       reduce using rule 114 (COMBINING -> intersect all LEXP .)
    except          reduce using rule 114 (COMBINING -> intersect all LEXP .)
    ptcoma          reduce using rule 114 (COMBINING -> intersect all LEXP .)
    mas             reduce using rule 114 (COMBINING -> intersect all LEXP .)
    menos           reduce using rule 114 (COMBINING -> intersect all LEXP .)
    multiplicacion  reduce using rule 114 (COMBINING -> intersect all LEXP .)
    division        reduce using rule 114 (COMBINING -> intersect all LEXP .)
    modulo          reduce using rule 114 (COMBINING -> intersect all LEXP .)
    elevado         reduce using rule 114 (COMBINING -> intersect all LEXP .)
    and             reduce using rule 114 (COMBINING -> intersect all LEXP .)
    or              reduce using rule 114 (COMBINING -> intersect all LEXP .)
    mayor           reduce using rule 114 (COMBINING -> intersect all LEXP .)
    menor           reduce using rule 114 (COMBINING -> intersect all LEXP .)
    mayor_igual     reduce using rule 114 (COMBINING -> intersect all LEXP .)
    menor_igual     reduce using rule 114 (COMBINING -> intersect all LEXP .)
    igual           reduce using rule 114 (COMBINING -> intersect all LEXP .)
    diferente1      reduce using rule 114 (COMBINING -> intersect all LEXP .)
    diferente2      reduce using rule 114 (COMBINING -> intersect all LEXP .)
    punto           reduce using rule 114 (COMBINING -> intersect all LEXP .)
    between         reduce using rule 114 (COMBINING -> intersect all LEXP .)
    in              reduce using rule 114 (COMBINING -> intersect all LEXP .)
    not             reduce using rule 114 (COMBINING -> intersect all LEXP .)
    is              reduce using rule 114 (COMBINING -> intersect all LEXP .)
    isnull          reduce using rule 114 (COMBINING -> intersect all LEXP .)
    notnull         reduce using rule 114 (COMBINING -> intersect all LEXP .)
    id              reduce using rule 114 (COMBINING -> intersect all LEXP .)
    as              reduce using rule 114 (COMBINING -> intersect all LEXP .)
    parc            reduce using rule 114 (COMBINING -> intersect all LEXP .)
    then            reduce using rule 114 (COMBINING -> intersect all LEXP .)
    where           reduce using rule 114 (COMBINING -> intersect all LEXP .)
    group           reduce using rule 114 (COMBINING -> intersect all LEXP .)
    having          reduce using rule 114 (COMBINING -> intersect all LEXP .)
    order           reduce using rule 114 (COMBINING -> intersect all LEXP .)
    end             reduce using rule 114 (COMBINING -> intersect all LEXP .)
    else            reduce using rule 114 (COMBINING -> intersect all LEXP .)
    when            reduce using rule 114 (COMBINING -> intersect all LEXP .)
    constraint      reduce using rule 114 (COMBINING -> intersect all LEXP .)
    default         reduce using rule 114 (COMBINING -> intersect all LEXP .)
    primary         reduce using rule 114 (COMBINING -> intersect all LEXP .)
    references      reduce using rule 114 (COMBINING -> intersect all LEXP .)
    null            reduce using rule 114 (COMBINING -> intersect all LEXP .)
    asc             reduce using rule 114 (COMBINING -> intersect all LEXP .)
    desc            reduce using rule 114 (COMBINING -> intersect all LEXP .)
    coma            shift and go to state 86

  ! coma            [ reduce using rule 114 (COMBINING -> intersect all LEXP .) ]


state 307

    (116) COMBINING -> except all LEXP .
    (134) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 116 (COMBINING -> except all LEXP .)
    limit           reduce using rule 116 (COMBINING -> except all LEXP .)
    offset          reduce using rule 116 (COMBINING -> except all LEXP .)
    union           reduce using rule 116 (COMBINING -> except all LEXP .)
    intersect       reduce using rule 116 (COMBINING -> except all LEXP .)
    except          reduce using rule 116 (COMBINING -> except all LEXP .)
    ptcoma          reduce using rule 116 (COMBINING -> except all LEXP .)
    mas             reduce using rule 116 (COMBINING -> except all LEXP .)
    menos           reduce using rule 116 (COMBINING -> except all LEXP .)
    multiplicacion  reduce using rule 116 (COMBINING -> except all LEXP .)
    division        reduce using rule 116 (COMBINING -> except all LEXP .)
    modulo          reduce using rule 116 (COMBINING -> except all LEXP .)
    elevado         reduce using rule 116 (COMBINING -> except all LEXP .)
    and             reduce using rule 116 (COMBINING -> except all LEXP .)
    or              reduce using rule 116 (COMBINING -> except all LEXP .)
    mayor           reduce using rule 116 (COMBINING -> except all LEXP .)
    menor           reduce using rule 116 (COMBINING -> except all LEXP .)
    mayor_igual     reduce using rule 116 (COMBINING -> except all LEXP .)
    menor_igual     reduce using rule 116 (COMBINING -> except all LEXP .)
    igual           reduce using rule 116 (COMBINING -> except all LEXP .)
    diferente1      reduce using rule 116 (COMBINING -> except all LEXP .)
    diferente2      reduce using rule 116 (COMBINING -> except all LEXP .)
    punto           reduce using rule 116 (COMBINING -> except all LEXP .)
    between         reduce using rule 116 (COMBINING -> except all LEXP .)
    in              reduce using rule 116 (COMBINING -> except all LEXP .)
    not             reduce using rule 116 (COMBINING -> except all LEXP .)
    is              reduce using rule 116 (COMBINING -> except all LEXP .)
    isnull          reduce using rule 116 (COMBINING -> except all LEXP .)
    notnull         reduce using rule 116 (COMBINING -> except all LEXP .)
    id              reduce using rule 116 (COMBINING -> except all LEXP .)
    as              reduce using rule 116 (COMBINING -> except all LEXP .)
    parc            reduce using rule 116 (COMBINING -> except all LEXP .)
    then            reduce using rule 116 (COMBINING -> except all LEXP .)
    where           reduce using rule 116 (COMBINING -> except all LEXP .)
    group           reduce using rule 116 (COMBINING -> except all LEXP .)
    having          reduce using rule 116 (COMBINING -> except all LEXP .)
    order           reduce using rule 116 (COMBINING -> except all LEXP .)
    end             reduce using rule 116 (COMBINING -> except all LEXP .)
    else            reduce using rule 116 (COMBINING -> except all LEXP .)
    when            reduce using rule 116 (COMBINING -> except all LEXP .)
    constraint      reduce using rule 116 (COMBINING -> except all LEXP .)
    default         reduce using rule 116 (COMBINING -> except all LEXP .)
    primary         reduce using rule 116 (COMBINING -> except all LEXP .)
    references      reduce using rule 116 (COMBINING -> except all LEXP .)
    null            reduce using rule 116 (COMBINING -> except all LEXP .)
    asc             reduce using rule 116 (COMBINING -> except all LEXP .)
    desc            reduce using rule 116 (COMBINING -> except all LEXP .)
    coma            shift and go to state 86

  ! coma            [ reduce using rule 116 (COMBINING -> except all LEXP .) ]


state 308

    (91) LIMIT -> limit int offset int .

    union           reduce using rule 91 (LIMIT -> limit int offset int .)
    intersect       reduce using rule 91 (LIMIT -> limit int offset int .)
    except          reduce using rule 91 (LIMIT -> limit int offset int .)
    ptcoma          reduce using rule 91 (LIMIT -> limit int offset int .)
    r_from          reduce using rule 91 (LIMIT -> limit int offset int .)
    limit           reduce using rule 91 (LIMIT -> limit int offset int .)
    offset          reduce using rule 91 (LIMIT -> limit int offset int .)
    mas             reduce using rule 91 (LIMIT -> limit int offset int .)
    menos           reduce using rule 91 (LIMIT -> limit int offset int .)
    multiplicacion  reduce using rule 91 (LIMIT -> limit int offset int .)
    division        reduce using rule 91 (LIMIT -> limit int offset int .)
    modulo          reduce using rule 91 (LIMIT -> limit int offset int .)
    elevado         reduce using rule 91 (LIMIT -> limit int offset int .)
    and             reduce using rule 91 (LIMIT -> limit int offset int .)
    or              reduce using rule 91 (LIMIT -> limit int offset int .)
    mayor           reduce using rule 91 (LIMIT -> limit int offset int .)
    menor           reduce using rule 91 (LIMIT -> limit int offset int .)
    mayor_igual     reduce using rule 91 (LIMIT -> limit int offset int .)
    menor_igual     reduce using rule 91 (LIMIT -> limit int offset int .)
    igual           reduce using rule 91 (LIMIT -> limit int offset int .)
    diferente1      reduce using rule 91 (LIMIT -> limit int offset int .)
    diferente2      reduce using rule 91 (LIMIT -> limit int offset int .)
    punto           reduce using rule 91 (LIMIT -> limit int offset int .)
    between         reduce using rule 91 (LIMIT -> limit int offset int .)
    in              reduce using rule 91 (LIMIT -> limit int offset int .)
    not             reduce using rule 91 (LIMIT -> limit int offset int .)
    is              reduce using rule 91 (LIMIT -> limit int offset int .)
    isnull          reduce using rule 91 (LIMIT -> limit int offset int .)
    notnull         reduce using rule 91 (LIMIT -> limit int offset int .)
    id              reduce using rule 91 (LIMIT -> limit int offset int .)
    as              reduce using rule 91 (LIMIT -> limit int offset int .)
    coma            reduce using rule 91 (LIMIT -> limit int offset int .)
    parc            reduce using rule 91 (LIMIT -> limit int offset int .)
    then            reduce using rule 91 (LIMIT -> limit int offset int .)
    where           reduce using rule 91 (LIMIT -> limit int offset int .)
    group           reduce using rule 91 (LIMIT -> limit int offset int .)
    having          reduce using rule 91 (LIMIT -> limit int offset int .)
    order           reduce using rule 91 (LIMIT -> limit int offset int .)
    end             reduce using rule 91 (LIMIT -> limit int offset int .)
    else            reduce using rule 91 (LIMIT -> limit int offset int .)
    when            reduce using rule 91 (LIMIT -> limit int offset int .)
    constraint      reduce using rule 91 (LIMIT -> limit int offset int .)
    default         reduce using rule 91 (LIMIT -> limit int offset int .)
    primary         reduce using rule 91 (LIMIT -> limit int offset int .)
    references      reduce using rule 91 (LIMIT -> limit int offset int .)
    null            reduce using rule 91 (LIMIT -> limit int offset int .)
    asc             reduce using rule 91 (LIMIT -> limit int offset int .)
    desc            reduce using rule 91 (LIMIT -> limit int offset int .)


state 309

    (93) LIMIT -> limit all offset int .

    union           reduce using rule 93 (LIMIT -> limit all offset int .)
    intersect       reduce using rule 93 (LIMIT -> limit all offset int .)
    except          reduce using rule 93 (LIMIT -> limit all offset int .)
    ptcoma          reduce using rule 93 (LIMIT -> limit all offset int .)
    r_from          reduce using rule 93 (LIMIT -> limit all offset int .)
    limit           reduce using rule 93 (LIMIT -> limit all offset int .)
    offset          reduce using rule 93 (LIMIT -> limit all offset int .)
    mas             reduce using rule 93 (LIMIT -> limit all offset int .)
    menos           reduce using rule 93 (LIMIT -> limit all offset int .)
    multiplicacion  reduce using rule 93 (LIMIT -> limit all offset int .)
    division        reduce using rule 93 (LIMIT -> limit all offset int .)
    modulo          reduce using rule 93 (LIMIT -> limit all offset int .)
    elevado         reduce using rule 93 (LIMIT -> limit all offset int .)
    and             reduce using rule 93 (LIMIT -> limit all offset int .)
    or              reduce using rule 93 (LIMIT -> limit all offset int .)
    mayor           reduce using rule 93 (LIMIT -> limit all offset int .)
    menor           reduce using rule 93 (LIMIT -> limit all offset int .)
    mayor_igual     reduce using rule 93 (LIMIT -> limit all offset int .)
    menor_igual     reduce using rule 93 (LIMIT -> limit all offset int .)
    igual           reduce using rule 93 (LIMIT -> limit all offset int .)
    diferente1      reduce using rule 93 (LIMIT -> limit all offset int .)
    diferente2      reduce using rule 93 (LIMIT -> limit all offset int .)
    punto           reduce using rule 93 (LIMIT -> limit all offset int .)
    between         reduce using rule 93 (LIMIT -> limit all offset int .)
    in              reduce using rule 93 (LIMIT -> limit all offset int .)
    not             reduce using rule 93 (LIMIT -> limit all offset int .)
    is              reduce using rule 93 (LIMIT -> limit all offset int .)
    isnull          reduce using rule 93 (LIMIT -> limit all offset int .)
    notnull         reduce using rule 93 (LIMIT -> limit all offset int .)
    id              reduce using rule 93 (LIMIT -> limit all offset int .)
    as              reduce using rule 93 (LIMIT -> limit all offset int .)
    coma            reduce using rule 93 (LIMIT -> limit all offset int .)
    parc            reduce using rule 93 (LIMIT -> limit all offset int .)
    then            reduce using rule 93 (LIMIT -> limit all offset int .)
    where           reduce using rule 93 (LIMIT -> limit all offset int .)
    group           reduce using rule 93 (LIMIT -> limit all offset int .)
    having          reduce using rule 93 (LIMIT -> limit all offset int .)
    order           reduce using rule 93 (LIMIT -> limit all offset int .)
    end             reduce using rule 93 (LIMIT -> limit all offset int .)
    else            reduce using rule 93 (LIMIT -> limit all offset int .)
    when            reduce using rule 93 (LIMIT -> limit all offset int .)
    constraint      reduce using rule 93 (LIMIT -> limit all offset int .)
    default         reduce using rule 93 (LIMIT -> limit all offset int .)
    primary         reduce using rule 93 (LIMIT -> limit all offset int .)
    references      reduce using rule 93 (LIMIT -> limit all offset int .)
    null            reduce using rule 93 (LIMIT -> limit all offset int .)
    asc             reduce using rule 93 (LIMIT -> limit all offset int .)
    desc            reduce using rule 93 (LIMIT -> limit all offset int .)


state 310

    (92) LIMIT -> offset int limit int .

    union           reduce using rule 92 (LIMIT -> offset int limit int .)
    intersect       reduce using rule 92 (LIMIT -> offset int limit int .)
    except          reduce using rule 92 (LIMIT -> offset int limit int .)
    ptcoma          reduce using rule 92 (LIMIT -> offset int limit int .)
    r_from          reduce using rule 92 (LIMIT -> offset int limit int .)
    limit           reduce using rule 92 (LIMIT -> offset int limit int .)
    offset          reduce using rule 92 (LIMIT -> offset int limit int .)
    mas             reduce using rule 92 (LIMIT -> offset int limit int .)
    menos           reduce using rule 92 (LIMIT -> offset int limit int .)
    multiplicacion  reduce using rule 92 (LIMIT -> offset int limit int .)
    division        reduce using rule 92 (LIMIT -> offset int limit int .)
    modulo          reduce using rule 92 (LIMIT -> offset int limit int .)
    elevado         reduce using rule 92 (LIMIT -> offset int limit int .)
    and             reduce using rule 92 (LIMIT -> offset int limit int .)
    or              reduce using rule 92 (LIMIT -> offset int limit int .)
    mayor           reduce using rule 92 (LIMIT -> offset int limit int .)
    menor           reduce using rule 92 (LIMIT -> offset int limit int .)
    mayor_igual     reduce using rule 92 (LIMIT -> offset int limit int .)
    menor_igual     reduce using rule 92 (LIMIT -> offset int limit int .)
    igual           reduce using rule 92 (LIMIT -> offset int limit int .)
    diferente1      reduce using rule 92 (LIMIT -> offset int limit int .)
    diferente2      reduce using rule 92 (LIMIT -> offset int limit int .)
    punto           reduce using rule 92 (LIMIT -> offset int limit int .)
    between         reduce using rule 92 (LIMIT -> offset int limit int .)
    in              reduce using rule 92 (LIMIT -> offset int limit int .)
    not             reduce using rule 92 (LIMIT -> offset int limit int .)
    is              reduce using rule 92 (LIMIT -> offset int limit int .)
    isnull          reduce using rule 92 (LIMIT -> offset int limit int .)
    notnull         reduce using rule 92 (LIMIT -> offset int limit int .)
    id              reduce using rule 92 (LIMIT -> offset int limit int .)
    as              reduce using rule 92 (LIMIT -> offset int limit int .)
    coma            reduce using rule 92 (LIMIT -> offset int limit int .)
    parc            reduce using rule 92 (LIMIT -> offset int limit int .)
    then            reduce using rule 92 (LIMIT -> offset int limit int .)
    where           reduce using rule 92 (LIMIT -> offset int limit int .)
    group           reduce using rule 92 (LIMIT -> offset int limit int .)
    having          reduce using rule 92 (LIMIT -> offset int limit int .)
    order           reduce using rule 92 (LIMIT -> offset int limit int .)
    end             reduce using rule 92 (LIMIT -> offset int limit int .)
    else            reduce using rule 92 (LIMIT -> offset int limit int .)
    when            reduce using rule 92 (LIMIT -> offset int limit int .)
    constraint      reduce using rule 92 (LIMIT -> offset int limit int .)
    default         reduce using rule 92 (LIMIT -> offset int limit int .)
    primary         reduce using rule 92 (LIMIT -> offset int limit int .)
    references      reduce using rule 92 (LIMIT -> offset int limit int .)
    null            reduce using rule 92 (LIMIT -> offset int limit int .)
    asc             reduce using rule 92 (LIMIT -> offset int limit int .)
    desc            reduce using rule 92 (LIMIT -> offset int limit int .)


state 311

    (94) LIMIT -> offset int limit all .

    union           reduce using rule 94 (LIMIT -> offset int limit all .)
    intersect       reduce using rule 94 (LIMIT -> offset int limit all .)
    except          reduce using rule 94 (LIMIT -> offset int limit all .)
    ptcoma          reduce using rule 94 (LIMIT -> offset int limit all .)
    r_from          reduce using rule 94 (LIMIT -> offset int limit all .)
    limit           reduce using rule 94 (LIMIT -> offset int limit all .)
    offset          reduce using rule 94 (LIMIT -> offset int limit all .)
    mas             reduce using rule 94 (LIMIT -> offset int limit all .)
    menos           reduce using rule 94 (LIMIT -> offset int limit all .)
    multiplicacion  reduce using rule 94 (LIMIT -> offset int limit all .)
    division        reduce using rule 94 (LIMIT -> offset int limit all .)
    modulo          reduce using rule 94 (LIMIT -> offset int limit all .)
    elevado         reduce using rule 94 (LIMIT -> offset int limit all .)
    and             reduce using rule 94 (LIMIT -> offset int limit all .)
    or              reduce using rule 94 (LIMIT -> offset int limit all .)
    mayor           reduce using rule 94 (LIMIT -> offset int limit all .)
    menor           reduce using rule 94 (LIMIT -> offset int limit all .)
    mayor_igual     reduce using rule 94 (LIMIT -> offset int limit all .)
    menor_igual     reduce using rule 94 (LIMIT -> offset int limit all .)
    igual           reduce using rule 94 (LIMIT -> offset int limit all .)
    diferente1      reduce using rule 94 (LIMIT -> offset int limit all .)
    diferente2      reduce using rule 94 (LIMIT -> offset int limit all .)
    punto           reduce using rule 94 (LIMIT -> offset int limit all .)
    between         reduce using rule 94 (LIMIT -> offset int limit all .)
    in              reduce using rule 94 (LIMIT -> offset int limit all .)
    not             reduce using rule 94 (LIMIT -> offset int limit all .)
    is              reduce using rule 94 (LIMIT -> offset int limit all .)
    isnull          reduce using rule 94 (LIMIT -> offset int limit all .)
    notnull         reduce using rule 94 (LIMIT -> offset int limit all .)
    id              reduce using rule 94 (LIMIT -> offset int limit all .)
    as              reduce using rule 94 (LIMIT -> offset int limit all .)
    coma            reduce using rule 94 (LIMIT -> offset int limit all .)
    parc            reduce using rule 94 (LIMIT -> offset int limit all .)
    then            reduce using rule 94 (LIMIT -> offset int limit all .)
    where           reduce using rule 94 (LIMIT -> offset int limit all .)
    group           reduce using rule 94 (LIMIT -> offset int limit all .)
    having          reduce using rule 94 (LIMIT -> offset int limit all .)
    order           reduce using rule 94 (LIMIT -> offset int limit all .)
    end             reduce using rule 94 (LIMIT -> offset int limit all .)
    else            reduce using rule 94 (LIMIT -> offset int limit all .)
    when            reduce using rule 94 (LIMIT -> offset int limit all .)
    constraint      reduce using rule 94 (LIMIT -> offset int limit all .)
    default         reduce using rule 94 (LIMIT -> offset int limit all .)
    primary         reduce using rule 94 (LIMIT -> offset int limit all .)
    references      reduce using rule 94 (LIMIT -> offset int limit all .)
    null            reduce using rule 94 (LIMIT -> offset int limit all .)
    asc             reduce using rule 94 (LIMIT -> offset int limit all .)
    desc            reduce using rule 94 (LIMIT -> offset int limit all .)


state 312

    (216) PREDICADOS -> EXP in para LEXP parc .

    r_from          reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    limit           reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    offset          reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    union           reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    intersect       reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    except          reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    ptcoma          reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    mas             reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    menos           reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    multiplicacion  reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    division        reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    modulo          reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    elevado         reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    and             reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    or              reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    mayor           reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    menor           reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    mayor_igual     reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    menor_igual     reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    igual           reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    diferente1      reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    diferente2      reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    punto           reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    between         reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    in              reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    not             reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    is              reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    isnull          reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    notnull         reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    id              reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    as              reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    coma            reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    parc            reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    then            reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    where           reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    group           reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    having          reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    order           reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    end             reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    else            reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    when            reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    constraint      reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    default         reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    primary         reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    references      reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    null            reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    asc             reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)
    desc            reduce using rule 216 (PREDICADOS -> EXP in para LEXP parc .)


state 313

    (217) PREDICADOS -> EXP not in para LEXP . parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 374
    coma            shift and go to state 86


state 314

    (220) PREDICADOS -> EXP not between symetric EXP .
    (173) EXP -> EXP . mas EXP
    (174) EXP -> EXP . menos EXP
    (175) EXP -> EXP . multiplicacion EXP
    (176) EXP -> EXP . division EXP
    (177) EXP -> EXP . modulo EXP
    (178) EXP -> EXP . elevado EXP
    (179) EXP -> EXP . and EXP
    (180) EXP -> EXP . or EXP
    (181) EXP -> EXP . mayor EXP
    (182) EXP -> EXP . menor EXP
    (183) EXP -> EXP . mayor_igual EXP
    (184) EXP -> EXP . menor_igual EXP
    (185) EXP -> EXP . igual EXP
    (186) EXP -> EXP . diferente1 EXP
    (187) EXP -> EXP . diferente2 EXP
    (188) EXP -> EXP . punto EXP
    (215) PREDICADOS -> EXP . between EXP
    (216) PREDICADOS -> EXP . in para LEXP parc
    (217) PREDICADOS -> EXP . not in para LEXP parc
    (218) PREDICADOS -> EXP . not between EXP
    (219) PREDICADOS -> EXP . between symetric EXP
    (220) PREDICADOS -> EXP . not between symetric EXP
    (221) PREDICADOS -> EXP . is distinct r_from EXP
    (222) PREDICADOS -> EXP . is not distinct r_from EXP
    (223) PREDICADOS -> EXP . is PNULL
    (224) PREDICADOS -> EXP . isnull
    (225) PREDICADOS -> EXP . notnull
    (226) PREDICADOS -> EXP . is true
    (227) PREDICADOS -> EXP . is not true
    (228) PREDICADOS -> EXP . is false
    (229) PREDICADOS -> EXP . is not false
    (230) PREDICADOS -> EXP . is unknown
    (231) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    limit           reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    offset          reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    union           reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    intersect       reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    except          reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    ptcoma          reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    mas             reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    menos           reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    multiplicacion  reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    division        reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    modulo          reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    elevado         reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    mayor           reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    menor           reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    mayor_igual     reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    menor_igual     reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    igual           reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    diferente1      reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    diferente2      reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    punto           reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    between         reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    in              reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    is              reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    isnull          reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    notnull         reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    id              reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    as              reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    coma            reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    parc            reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    then            reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    where           reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    group           reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    having          reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    order           reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    end             reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    else            reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    when            reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    constraint      reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    default         reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    primary         reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    references      reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    null            reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    asc             reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    desc            reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .)
    and             shift and go to state 94
    or              shift and go to state 95
    not             shift and go to state 106

  ! and             [ reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .) ]
  ! or              [ reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .) ]
  ! not             [ reduce using rule 220 (PREDICADOS -> EXP not between symetric EXP .) ]
  ! mas             [ shift and go to state 88 ]
  ! menos           [ shift and go to state 89 ]
  ! multiplicacion  [ shift and go to state 90 ]
  ! division        [ shift and go to state 91 ]
  ! modulo          [ shift and go to state 92 ]
  ! elevado         [ shift and go to state 93 ]
  ! mayor           [ shift and go to state 96 ]
  ! menor           [ shift and go to state 97 ]
  ! mayor_igual     [ shift and go to state 98 ]
  ! menor_igual     [ shift and go to state 99 ]
  ! igual           [ shift and go to state 100 ]
  ! diferente1      [ shift and go to state 101 ]
  ! diferente2      [ shift and go to state 102 ]
  ! punto           [ shift and go to state 103 ]
  ! between         [ shift and go to state 104 ]
  ! in              [ shift and go to state 105 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 108 ]
  ! notnull         [ shift and go to state 109 ]


state 315

    (221) PREDICADOS -> EXP is distinct r_from EXP .
    (173) EXP -> EXP . mas EXP
    (174) EXP -> EXP . menos EXP
    (175) EXP -> EXP . multiplicacion EXP
    (176) EXP -> EXP . division EXP
    (177) EXP -> EXP . modulo EXP
    (178) EXP -> EXP . elevado EXP
    (179) EXP -> EXP . and EXP
    (180) EXP -> EXP . or EXP
    (181) EXP -> EXP . mayor EXP
    (182) EXP -> EXP . menor EXP
    (183) EXP -> EXP . mayor_igual EXP
    (184) EXP -> EXP . menor_igual EXP
    (185) EXP -> EXP . igual EXP
    (186) EXP -> EXP . diferente1 EXP
    (187) EXP -> EXP . diferente2 EXP
    (188) EXP -> EXP . punto EXP
    (215) PREDICADOS -> EXP . between EXP
    (216) PREDICADOS -> EXP . in para LEXP parc
    (217) PREDICADOS -> EXP . not in para LEXP parc
    (218) PREDICADOS -> EXP . not between EXP
    (219) PREDICADOS -> EXP . between symetric EXP
    (220) PREDICADOS -> EXP . not between symetric EXP
    (221) PREDICADOS -> EXP . is distinct r_from EXP
    (222) PREDICADOS -> EXP . is not distinct r_from EXP
    (223) PREDICADOS -> EXP . is PNULL
    (224) PREDICADOS -> EXP . isnull
    (225) PREDICADOS -> EXP . notnull
    (226) PREDICADOS -> EXP . is true
    (227) PREDICADOS -> EXP . is not true
    (228) PREDICADOS -> EXP . is false
    (229) PREDICADOS -> EXP . is not false
    (230) PREDICADOS -> EXP . is unknown
    (231) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    limit           reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    offset          reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    union           reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    intersect       reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    except          reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    ptcoma          reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    mas             reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    menos           reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    multiplicacion  reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    division        reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    modulo          reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    elevado         reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    mayor           reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    menor           reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    mayor_igual     reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    menor_igual     reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    igual           reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    diferente1      reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    diferente2      reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    punto           reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    between         reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    in              reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    is              reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    isnull          reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    notnull         reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    id              reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    as              reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    coma            reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    parc            reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    then            reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    where           reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    group           reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    having          reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    order           reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    end             reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    else            reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    when            reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    constraint      reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    default         reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    primary         reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    references      reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    null            reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    asc             reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    desc            reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .)
    and             shift and go to state 94
    or              shift and go to state 95
    not             shift and go to state 106

  ! and             [ reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .) ]
  ! or              [ reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .) ]
  ! not             [ reduce using rule 221 (PREDICADOS -> EXP is distinct r_from EXP .) ]
  ! mas             [ shift and go to state 88 ]
  ! menos           [ shift and go to state 89 ]
  ! multiplicacion  [ shift and go to state 90 ]
  ! division        [ shift and go to state 91 ]
  ! modulo          [ shift and go to state 92 ]
  ! elevado         [ shift and go to state 93 ]
  ! mayor           [ shift and go to state 96 ]
  ! menor           [ shift and go to state 97 ]
  ! mayor_igual     [ shift and go to state 98 ]
  ! menor_igual     [ shift and go to state 99 ]
  ! igual           [ shift and go to state 100 ]
  ! diferente1      [ shift and go to state 101 ]
  ! diferente2      [ shift and go to state 102 ]
  ! punto           [ shift and go to state 103 ]
  ! between         [ shift and go to state 104 ]
  ! in              [ shift and go to state 105 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 108 ]
  ! notnull         [ shift and go to state 109 ]


state 316

    (222) PREDICADOS -> EXP is not distinct r_from . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 375
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 317

    (204) EXP -> extract para FIELDS r_from timestamp . cadena parc

    cadena          shift and go to state 376


state 318

    (67) COLDEF -> id TIPO .
    (68) COLDEF -> id TIPO . LOPCOLUMN
    (69) LOPCOLUMN -> . LOPCOLUMN OPCOLUMN
    (70) LOPCOLUMN -> . OPCOLUMN
    (71) OPCOLUMN -> . constraint id unique
    (72) OPCOLUMN -> . constraint id check para EXP parc
    (73) OPCOLUMN -> . default EXP
    (74) OPCOLUMN -> . PNULL
    (75) OPCOLUMN -> . primary key
    (76) OPCOLUMN -> . references id
    (77) PNULL -> . not null
    (78) PNULL -> . null

    parc            reduce using rule 67 (COLDEF -> id TIPO .)
    coma            reduce using rule 67 (COLDEF -> id TIPO .)
    constraint      shift and go to state 379
    default         shift and go to state 380
    primary         shift and go to state 382
    references      shift and go to state 383
    not             shift and go to state 384
    null            shift and go to state 62

    LOPCOLUMN                      shift and go to state 377
    OPCOLUMN                       shift and go to state 378
    PNULL                          shift and go to state 381

state 319

    (136) TIPO -> smallint .

    constraint      reduce using rule 136 (TIPO -> smallint .)
    default         reduce using rule 136 (TIPO -> smallint .)
    primary         reduce using rule 136 (TIPO -> smallint .)
    references      reduce using rule 136 (TIPO -> smallint .)
    not             reduce using rule 136 (TIPO -> smallint .)
    null            reduce using rule 136 (TIPO -> smallint .)
    parc            reduce using rule 136 (TIPO -> smallint .)
    coma            reduce using rule 136 (TIPO -> smallint .)
    ptcoma          reduce using rule 136 (TIPO -> smallint .)


state 320

    (137) TIPO -> integer .

    constraint      reduce using rule 137 (TIPO -> integer .)
    default         reduce using rule 137 (TIPO -> integer .)
    primary         reduce using rule 137 (TIPO -> integer .)
    references      reduce using rule 137 (TIPO -> integer .)
    not             reduce using rule 137 (TIPO -> integer .)
    null            reduce using rule 137 (TIPO -> integer .)
    parc            reduce using rule 137 (TIPO -> integer .)
    coma            reduce using rule 137 (TIPO -> integer .)
    ptcoma          reduce using rule 137 (TIPO -> integer .)


state 321

    (138) TIPO -> bigint .

    constraint      reduce using rule 138 (TIPO -> bigint .)
    default         reduce using rule 138 (TIPO -> bigint .)
    primary         reduce using rule 138 (TIPO -> bigint .)
    references      reduce using rule 138 (TIPO -> bigint .)
    not             reduce using rule 138 (TIPO -> bigint .)
    null            reduce using rule 138 (TIPO -> bigint .)
    parc            reduce using rule 138 (TIPO -> bigint .)
    coma            reduce using rule 138 (TIPO -> bigint .)
    ptcoma          reduce using rule 138 (TIPO -> bigint .)


state 322

    (139) TIPO -> decimal . para LEXP parc

    para            shift and go to state 385


state 323

    (140) TIPO -> numeric . para LEXP parc

    para            shift and go to state 386


state 324

    (141) TIPO -> real .

    constraint      reduce using rule 141 (TIPO -> real .)
    default         reduce using rule 141 (TIPO -> real .)
    primary         reduce using rule 141 (TIPO -> real .)
    references      reduce using rule 141 (TIPO -> real .)
    not             reduce using rule 141 (TIPO -> real .)
    null            reduce using rule 141 (TIPO -> real .)
    parc            reduce using rule 141 (TIPO -> real .)
    coma            reduce using rule 141 (TIPO -> real .)
    ptcoma          reduce using rule 141 (TIPO -> real .)


state 325

    (142) TIPO -> double . precision

    precision       shift and go to state 387


state 326

    (143) TIPO -> money .

    constraint      reduce using rule 143 (TIPO -> money .)
    default         reduce using rule 143 (TIPO -> money .)
    primary         reduce using rule 143 (TIPO -> money .)
    references      reduce using rule 143 (TIPO -> money .)
    not             reduce using rule 143 (TIPO -> money .)
    null            reduce using rule 143 (TIPO -> money .)
    parc            reduce using rule 143 (TIPO -> money .)
    coma            reduce using rule 143 (TIPO -> money .)
    ptcoma          reduce using rule 143 (TIPO -> money .)


state 327

    (144) TIPO -> character . varying para int parc
    (146) TIPO -> character . para int parc

    varying         shift and go to state 388
    para            shift and go to state 389


state 328

    (145) TIPO -> varchar . para int parc

    para            shift and go to state 390


state 329

    (147) TIPO -> char . para int parc

    para            shift and go to state 391


state 330

    (148) TIPO -> text .

    constraint      reduce using rule 148 (TIPO -> text .)
    default         reduce using rule 148 (TIPO -> text .)
    primary         reduce using rule 148 (TIPO -> text .)
    references      reduce using rule 148 (TIPO -> text .)
    not             reduce using rule 148 (TIPO -> text .)
    null            reduce using rule 148 (TIPO -> text .)
    parc            reduce using rule 148 (TIPO -> text .)
    coma            reduce using rule 148 (TIPO -> text .)
    ptcoma          reduce using rule 148 (TIPO -> text .)


state 331

    (149) TIPO -> timestamp .
    (150) TIPO -> timestamp . without time zone
    (151) TIPO -> timestamp . para int parc without time zone
    (152) TIPO -> timestamp . with time zone
    (153) TIPO -> timestamp . para int parc with time zone
    (154) TIPO -> timestamp . para int parc

    constraint      reduce using rule 149 (TIPO -> timestamp .)
    default         reduce using rule 149 (TIPO -> timestamp .)
    primary         reduce using rule 149 (TIPO -> timestamp .)
    references      reduce using rule 149 (TIPO -> timestamp .)
    not             reduce using rule 149 (TIPO -> timestamp .)
    null            reduce using rule 149 (TIPO -> timestamp .)
    parc            reduce using rule 149 (TIPO -> timestamp .)
    coma            reduce using rule 149 (TIPO -> timestamp .)
    ptcoma          reduce using rule 149 (TIPO -> timestamp .)
    without         shift and go to state 392
    para            shift and go to state 393
    with            shift and go to state 394


state 332

    (156) TIPO -> time .
    (157) TIPO -> time . without time zone
    (158) TIPO -> time . para int parc without time zone
    (159) TIPO -> time . with time zone
    (160) TIPO -> time . para int parc with time zone
    (161) TIPO -> time . para int parc

    constraint      reduce using rule 156 (TIPO -> time .)
    default         reduce using rule 156 (TIPO -> time .)
    primary         reduce using rule 156 (TIPO -> time .)
    references      reduce using rule 156 (TIPO -> time .)
    not             reduce using rule 156 (TIPO -> time .)
    null            reduce using rule 156 (TIPO -> time .)
    parc            reduce using rule 156 (TIPO -> time .)
    coma            reduce using rule 156 (TIPO -> time .)
    ptcoma          reduce using rule 156 (TIPO -> time .)
    without         shift and go to state 395
    para            shift and go to state 396
    with            shift and go to state 397


state 333

    (155) TIPO -> date .

    constraint      reduce using rule 155 (TIPO -> date .)
    default         reduce using rule 155 (TIPO -> date .)
    primary         reduce using rule 155 (TIPO -> date .)
    references      reduce using rule 155 (TIPO -> date .)
    not             reduce using rule 155 (TIPO -> date .)
    null            reduce using rule 155 (TIPO -> date .)
    parc            reduce using rule 155 (TIPO -> date .)
    coma            reduce using rule 155 (TIPO -> date .)
    ptcoma          reduce using rule 155 (TIPO -> date .)


state 334

    (162) TIPO -> interval .
    (163) TIPO -> interval . para int parc
    (164) TIPO -> interval . cadena
    (165) TIPO -> interval . para int parc cadena

    constraint      reduce using rule 162 (TIPO -> interval .)
    default         reduce using rule 162 (TIPO -> interval .)
    primary         reduce using rule 162 (TIPO -> interval .)
    references      reduce using rule 162 (TIPO -> interval .)
    not             reduce using rule 162 (TIPO -> interval .)
    null            reduce using rule 162 (TIPO -> interval .)
    parc            reduce using rule 162 (TIPO -> interval .)
    coma            reduce using rule 162 (TIPO -> interval .)
    ptcoma          reduce using rule 162 (TIPO -> interval .)
    para            shift and go to state 398
    cadena          shift and go to state 399


state 335

    (166) TIPO -> boolean .

    constraint      reduce using rule 166 (TIPO -> boolean .)
    default         reduce using rule 166 (TIPO -> boolean .)
    primary         reduce using rule 166 (TIPO -> boolean .)
    references      reduce using rule 166 (TIPO -> boolean .)
    not             reduce using rule 166 (TIPO -> boolean .)
    null            reduce using rule 166 (TIPO -> boolean .)
    parc            reduce using rule 166 (TIPO -> boolean .)
    coma            reduce using rule 166 (TIPO -> boolean .)
    ptcoma          reduce using rule 166 (TIPO -> boolean .)


state 336

    (61) CREATETABLE -> create table id para LDEF parc . ptcoma
    (62) CREATETABLE -> create table id para LDEF parc . HERENCIA ptcoma
    (83) HERENCIA -> . inherits para LEXP parc

    ptcoma          shift and go to state 400
    inherits        shift and go to state 402

    HERENCIA                       shift and go to state 401

state 337

    (63) LDEF -> LDEF coma . COLDEF
    (65) COLDEF -> . OPCONST
    (66) COLDEF -> . constraint id OPCONST
    (67) COLDEF -> . id TIPO
    (68) COLDEF -> . id TIPO LOPCOLUMN
    (79) OPCONST -> . primary key para LEXP parc
    (80) OPCONST -> . foreign key para LEXP parc references table para LEXP parc
    (81) OPCONST -> . unique para LEXP parc
    (82) OPCONST -> . check para LEXP parc

    constraint      shift and go to state 261
    id              shift and go to state 257
    primary         shift and go to state 262
    foreign         shift and go to state 263
    unique          shift and go to state 264
    check           shift and go to state 265

    COLDEF                         shift and go to state 403
    OPCONST                        shift and go to state 260

state 338

    (66) COLDEF -> constraint id . OPCONST
    (79) OPCONST -> . primary key para LEXP parc
    (80) OPCONST -> . foreign key para LEXP parc references table para LEXP parc
    (81) OPCONST -> . unique para LEXP parc
    (82) OPCONST -> . check para LEXP parc

    primary         shift and go to state 262
    foreign         shift and go to state 263
    unique          shift and go to state 264
    check           shift and go to state 265

    OPCONST                        shift and go to state 404

state 339

    (79) OPCONST -> primary key . para LEXP parc

    para            shift and go to state 405


state 340

    (80) OPCONST -> foreign key . para LEXP parc references table para LEXP parc

    para            shift and go to state 406


state 341

    (81) OPCONST -> unique para . LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 407
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 342

    (82) OPCONST -> check para . LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 408
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 343

    (84) CREATETYPE -> create type id as enum para . LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 409
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 344

    (48) CREATEDB -> create RD if not exist id .
    (49) CREATEDB -> create RD if not exist id . OPCCDB
    (52) OPCCDB -> . PROPIETARIO
    (53) OPCCDB -> . MODO
    (54) OPCCDB -> . PROPIETARIO MODO
    (57) PROPIETARIO -> . owner igual id
    (58) PROPIETARIO -> . owner id
    (59) MODO -> . mode igual int
    (60) MODO -> . mode int

    ptcoma          reduce using rule 48 (CREATEDB -> create RD if not exist id .)
    owner           shift and go to state 203
    mode            shift and go to state 204

    OPCCDB                         shift and go to state 410
    PROPIETARIO                    shift and go to state 201
    MODO                           shift and go to state 202

state 345

    (57) PROPIETARIO -> owner igual id .

    mode            reduce using rule 57 (PROPIETARIO -> owner igual id .)
    ptcoma          reduce using rule 57 (PROPIETARIO -> owner igual id .)


state 346

    (59) MODO -> mode igual int .

    ptcoma          reduce using rule 59 (MODO -> mode igual int .)


state 347

    (129) LCAMPOS -> id igual EXP .
    (173) EXP -> EXP . mas EXP
    (174) EXP -> EXP . menos EXP
    (175) EXP -> EXP . multiplicacion EXP
    (176) EXP -> EXP . division EXP
    (177) EXP -> EXP . modulo EXP
    (178) EXP -> EXP . elevado EXP
    (179) EXP -> EXP . and EXP
    (180) EXP -> EXP . or EXP
    (181) EXP -> EXP . mayor EXP
    (182) EXP -> EXP . menor EXP
    (183) EXP -> EXP . mayor_igual EXP
    (184) EXP -> EXP . menor_igual EXP
    (185) EXP -> EXP . igual EXP
    (186) EXP -> EXP . diferente1 EXP
    (187) EXP -> EXP . diferente2 EXP
    (188) EXP -> EXP . punto EXP
    (215) PREDICADOS -> EXP . between EXP
    (216) PREDICADOS -> EXP . in para LEXP parc
    (217) PREDICADOS -> EXP . not in para LEXP parc
    (218) PREDICADOS -> EXP . not between EXP
    (219) PREDICADOS -> EXP . between symetric EXP
    (220) PREDICADOS -> EXP . not between symetric EXP
    (221) PREDICADOS -> EXP . is distinct r_from EXP
    (222) PREDICADOS -> EXP . is not distinct r_from EXP
    (223) PREDICADOS -> EXP . is PNULL
    (224) PREDICADOS -> EXP . isnull
    (225) PREDICADOS -> EXP . notnull
    (226) PREDICADOS -> EXP . is true
    (227) PREDICADOS -> EXP . is not true
    (228) PREDICADOS -> EXP . is false
    (229) PREDICADOS -> EXP . is not false
    (230) PREDICADOS -> EXP . is unknown
    (231) PREDICADOS -> EXP . is not unknown

    where           reduce using rule 129 (LCAMPOS -> id igual EXP .)
    id              reduce using rule 129 (LCAMPOS -> id igual EXP .)
    mas             shift and go to state 88
    menos           shift and go to state 89
    multiplicacion  shift and go to state 90
    division        shift and go to state 91
    modulo          shift and go to state 92
    elevado         shift and go to state 93
    and             shift and go to state 94
    or              shift and go to state 95
    mayor           shift and go to state 96
    menor           shift and go to state 97
    mayor_igual     shift and go to state 98
    menor_igual     shift and go to state 99
    igual           shift and go to state 100
    diferente1      shift and go to state 101
    diferente2      shift and go to state 102
    punto           shift and go to state 103
    between         shift and go to state 104
    in              shift and go to state 105
    not             shift and go to state 106
    is              shift and go to state 107
    isnull          shift and go to state 108
    notnull         shift and go to state 109


state 348

    (130) LCAMPOS -> id igual default .

    where           reduce using rule 130 (LCAMPOS -> id igual default .)
    id              reduce using rule 130 (LCAMPOS -> id igual default .)


state 349

    (128) LCAMPOS -> LCAMPOS id igual . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 411
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 350

    (127) UPDATE -> update id set LCAMPOS where LEXP .
    (134) LEXP -> LEXP . coma EXP

    ptcoma          reduce using rule 127 (UPDATE -> update id set LCAMPOS where LEXP .)
    coma            shift and go to state 86


state 351

    (27) RO -> rename to id .

    ptcoma          reduce using rule 27 (RO -> rename to id .)


state 352

    (28) RO -> owner to id .

    ptcoma          reduce using rule 28 (RO -> owner to id .)


state 353

    (32) OP -> alter column id . set not null
    (33) OP -> alter column id . set null
    (39) alc -> alter column id . type TIPO

    set             shift and go to state 412
    type            shift and go to state 413


state 354

    (43) ADD -> column id . TIPO
    (136) TIPO -> . smallint
    (137) TIPO -> . integer
    (138) TIPO -> . bigint
    (139) TIPO -> . decimal para LEXP parc
    (140) TIPO -> . numeric para LEXP parc
    (141) TIPO -> . real
    (142) TIPO -> . double precision
    (143) TIPO -> . money
    (144) TIPO -> . character varying para int parc
    (145) TIPO -> . varchar para int parc
    (146) TIPO -> . character para int parc
    (147) TIPO -> . char para int parc
    (148) TIPO -> . text
    (149) TIPO -> . timestamp
    (150) TIPO -> . timestamp without time zone
    (151) TIPO -> . timestamp para int parc without time zone
    (152) TIPO -> . timestamp with time zone
    (153) TIPO -> . timestamp para int parc with time zone
    (154) TIPO -> . timestamp para int parc
    (155) TIPO -> . date
    (156) TIPO -> . time
    (157) TIPO -> . time without time zone
    (158) TIPO -> . time para int parc without time zone
    (159) TIPO -> . time with time zone
    (160) TIPO -> . time para int parc with time zone
    (161) TIPO -> . time para int parc
    (162) TIPO -> . interval
    (163) TIPO -> . interval para int parc
    (164) TIPO -> . interval cadena
    (165) TIPO -> . interval para int parc cadena
    (166) TIPO -> . boolean

    smallint        shift and go to state 319
    integer         shift and go to state 320
    bigint          shift and go to state 321
    decimal         shift and go to state 322
    numeric         shift and go to state 323
    real            shift and go to state 324
    double          shift and go to state 325
    money           shift and go to state 326
    character       shift and go to state 327
    varchar         shift and go to state 328
    char            shift and go to state 329
    text            shift and go to state 330
    timestamp       shift and go to state 331
    date            shift and go to state 333
    time            shift and go to state 332
    interval        shift and go to state 334
    boolean         shift and go to state 335

    TIPO                           shift and go to state 414

state 355

    (44) ADD -> check para . LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 415
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 356

    (45) ADD -> constraint id . unique para id parc

    unique          shift and go to state 416


state 357

    (46) ADD -> foreign key . para id parc references id para id parc

    para            shift and go to state 417


state 358

    (41) ALTERDROP -> column . LEXP
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 360
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 359

    (31) OP -> drop column ALTERDROP .

    ptcoma          reduce using rule 31 (OP -> drop column ALTERDROP .)


state 360

    (41) ALTERDROP -> column LEXP .
    (134) LEXP -> LEXP . coma EXP

    ptcoma          reduce using rule 41 (ALTERDROP -> column LEXP .)
    coma            shift and go to state 86


state 361

    (40) ALTERDROP -> constraint id .

    ptcoma          reduce using rule 40 (ALTERDROP -> constraint id .)


state 362

    (42) ALTERDROP -> check id .

    ptcoma          reduce using rule 42 (ALTERDROP -> check id .)


state 363

    (37) listaalc -> listaalc coma alc .

    coma            reduce using rule 37 (listaalc -> listaalc coma alc .)
    ptcoma          reduce using rule 37 (listaalc -> listaalc coma alc .)


state 364

    (39) alc -> alter . column id type TIPO

    column          shift and go to state 418


state 365

    (36) OP -> rename column id . to id

    to              shift and go to state 419


state 366

    (21) INSERT -> insert into id values para LEXP . parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 420
    coma            shift and go to state 86


state 367

    (85) SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP . HAVING ORDER LIMIT COMBINING
    (120) HAVING -> . having LEXP
    (121) HAVING -> .

  ! shift/reduce conflict for having resolved as shift
    having          shift and go to state 369
    r_from          reduce using rule 121 (HAVING -> .)
    limit           reduce using rule 121 (HAVING -> .)
    offset          reduce using rule 121 (HAVING -> .)
    union           reduce using rule 121 (HAVING -> .)
    intersect       reduce using rule 121 (HAVING -> .)
    except          reduce using rule 121 (HAVING -> .)
    ptcoma          reduce using rule 121 (HAVING -> .)
    mas             reduce using rule 121 (HAVING -> .)
    menos           reduce using rule 121 (HAVING -> .)
    multiplicacion  reduce using rule 121 (HAVING -> .)
    division        reduce using rule 121 (HAVING -> .)
    modulo          reduce using rule 121 (HAVING -> .)
    elevado         reduce using rule 121 (HAVING -> .)
    and             reduce using rule 121 (HAVING -> .)
    or              reduce using rule 121 (HAVING -> .)
    mayor           reduce using rule 121 (HAVING -> .)
    menor           reduce using rule 121 (HAVING -> .)
    mayor_igual     reduce using rule 121 (HAVING -> .)
    menor_igual     reduce using rule 121 (HAVING -> .)
    igual           reduce using rule 121 (HAVING -> .)
    diferente1      reduce using rule 121 (HAVING -> .)
    diferente2      reduce using rule 121 (HAVING -> .)
    punto           reduce using rule 121 (HAVING -> .)
    between         reduce using rule 121 (HAVING -> .)
    in              reduce using rule 121 (HAVING -> .)
    not             reduce using rule 121 (HAVING -> .)
    is              reduce using rule 121 (HAVING -> .)
    isnull          reduce using rule 121 (HAVING -> .)
    notnull         reduce using rule 121 (HAVING -> .)
    id              reduce using rule 121 (HAVING -> .)
    as              reduce using rule 121 (HAVING -> .)
    coma            reduce using rule 121 (HAVING -> .)
    parc            reduce using rule 121 (HAVING -> .)
    then            reduce using rule 121 (HAVING -> .)
    where           reduce using rule 121 (HAVING -> .)
    group           reduce using rule 121 (HAVING -> .)
    order           reduce using rule 121 (HAVING -> .)
    end             reduce using rule 121 (HAVING -> .)
    else            reduce using rule 121 (HAVING -> .)
    when            reduce using rule 121 (HAVING -> .)
    constraint      reduce using rule 121 (HAVING -> .)
    default         reduce using rule 121 (HAVING -> .)
    primary         reduce using rule 121 (HAVING -> .)
    references      reduce using rule 121 (HAVING -> .)
    null            reduce using rule 121 (HAVING -> .)
    asc             reduce using rule 121 (HAVING -> .)
    desc            reduce using rule 121 (HAVING -> .)

  ! having          [ reduce using rule 121 (HAVING -> .) ]

    HAVING                         shift and go to state 421

state 368

    (86) SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING . ORDER LIMIT COMBINING
    (122) ORDER -> . order by LEXP ORD
    (123) ORDER -> . order by LEXP
    (124) ORDER -> .

  ! shift/reduce conflict for order resolved as shift
    order           shift and go to state 423
    r_from          reduce using rule 124 (ORDER -> .)
    limit           reduce using rule 124 (ORDER -> .)
    offset          reduce using rule 124 (ORDER -> .)
    union           reduce using rule 124 (ORDER -> .)
    intersect       reduce using rule 124 (ORDER -> .)
    except          reduce using rule 124 (ORDER -> .)
    ptcoma          reduce using rule 124 (ORDER -> .)
    mas             reduce using rule 124 (ORDER -> .)
    menos           reduce using rule 124 (ORDER -> .)
    multiplicacion  reduce using rule 124 (ORDER -> .)
    division        reduce using rule 124 (ORDER -> .)
    modulo          reduce using rule 124 (ORDER -> .)
    elevado         reduce using rule 124 (ORDER -> .)
    and             reduce using rule 124 (ORDER -> .)
    or              reduce using rule 124 (ORDER -> .)
    mayor           reduce using rule 124 (ORDER -> .)
    menor           reduce using rule 124 (ORDER -> .)
    mayor_igual     reduce using rule 124 (ORDER -> .)
    menor_igual     reduce using rule 124 (ORDER -> .)
    igual           reduce using rule 124 (ORDER -> .)
    diferente1      reduce using rule 124 (ORDER -> .)
    diferente2      reduce using rule 124 (ORDER -> .)
    punto           reduce using rule 124 (ORDER -> .)
    between         reduce using rule 124 (ORDER -> .)
    in              reduce using rule 124 (ORDER -> .)
    not             reduce using rule 124 (ORDER -> .)
    is              reduce using rule 124 (ORDER -> .)
    isnull          reduce using rule 124 (ORDER -> .)
    notnull         reduce using rule 124 (ORDER -> .)
    id              reduce using rule 124 (ORDER -> .)
    as              reduce using rule 124 (ORDER -> .)
    coma            reduce using rule 124 (ORDER -> .)
    parc            reduce using rule 124 (ORDER -> .)
    then            reduce using rule 124 (ORDER -> .)
    where           reduce using rule 124 (ORDER -> .)
    group           reduce using rule 124 (ORDER -> .)
    having          reduce using rule 124 (ORDER -> .)
    end             reduce using rule 124 (ORDER -> .)
    else            reduce using rule 124 (ORDER -> .)
    when            reduce using rule 124 (ORDER -> .)
    constraint      reduce using rule 124 (ORDER -> .)
    default         reduce using rule 124 (ORDER -> .)
    primary         reduce using rule 124 (ORDER -> .)
    references      reduce using rule 124 (ORDER -> .)
    null            reduce using rule 124 (ORDER -> .)
    asc             reduce using rule 124 (ORDER -> .)
    desc            reduce using rule 124 (ORDER -> .)

  ! order           [ reduce using rule 124 (ORDER -> .) ]

    ORDER                          shift and go to state 422

state 369

    (120) HAVING -> having . LEXP
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 424
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 370

    (118) GROUP -> group by . LEXP
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 425
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 371

    (133) EXIST -> exist para . SELECT parc
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING

    select          shift and go to state 15

    SELECT                         shift and go to state 426

state 372

    (109) WHERE -> union all LEXP .
    (134) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 109 (WHERE -> union all LEXP .)
    limit           reduce using rule 109 (WHERE -> union all LEXP .)
    offset          reduce using rule 109 (WHERE -> union all LEXP .)
    union           reduce using rule 109 (WHERE -> union all LEXP .)
    intersect       reduce using rule 109 (WHERE -> union all LEXP .)
    except          reduce using rule 109 (WHERE -> union all LEXP .)
    ptcoma          reduce using rule 109 (WHERE -> union all LEXP .)
    mas             reduce using rule 109 (WHERE -> union all LEXP .)
    menos           reduce using rule 109 (WHERE -> union all LEXP .)
    multiplicacion  reduce using rule 109 (WHERE -> union all LEXP .)
    division        reduce using rule 109 (WHERE -> union all LEXP .)
    modulo          reduce using rule 109 (WHERE -> union all LEXP .)
    elevado         reduce using rule 109 (WHERE -> union all LEXP .)
    and             reduce using rule 109 (WHERE -> union all LEXP .)
    or              reduce using rule 109 (WHERE -> union all LEXP .)
    mayor           reduce using rule 109 (WHERE -> union all LEXP .)
    menor           reduce using rule 109 (WHERE -> union all LEXP .)
    mayor_igual     reduce using rule 109 (WHERE -> union all LEXP .)
    menor_igual     reduce using rule 109 (WHERE -> union all LEXP .)
    igual           reduce using rule 109 (WHERE -> union all LEXP .)
    diferente1      reduce using rule 109 (WHERE -> union all LEXP .)
    diferente2      reduce using rule 109 (WHERE -> union all LEXP .)
    punto           reduce using rule 109 (WHERE -> union all LEXP .)
    between         reduce using rule 109 (WHERE -> union all LEXP .)
    in              reduce using rule 109 (WHERE -> union all LEXP .)
    not             reduce using rule 109 (WHERE -> union all LEXP .)
    is              reduce using rule 109 (WHERE -> union all LEXP .)
    isnull          reduce using rule 109 (WHERE -> union all LEXP .)
    notnull         reduce using rule 109 (WHERE -> union all LEXP .)
    id              reduce using rule 109 (WHERE -> union all LEXP .)
    as              reduce using rule 109 (WHERE -> union all LEXP .)
    parc            reduce using rule 109 (WHERE -> union all LEXP .)
    then            reduce using rule 109 (WHERE -> union all LEXP .)
    where           reduce using rule 109 (WHERE -> union all LEXP .)
    group           reduce using rule 109 (WHERE -> union all LEXP .)
    having          reduce using rule 109 (WHERE -> union all LEXP .)
    order           reduce using rule 109 (WHERE -> union all LEXP .)
    end             reduce using rule 109 (WHERE -> union all LEXP .)
    else            reduce using rule 109 (WHERE -> union all LEXP .)
    when            reduce using rule 109 (WHERE -> union all LEXP .)
    constraint      reduce using rule 109 (WHERE -> union all LEXP .)
    default         reduce using rule 109 (WHERE -> union all LEXP .)
    primary         reduce using rule 109 (WHERE -> union all LEXP .)
    references      reduce using rule 109 (WHERE -> union all LEXP .)
    null            reduce using rule 109 (WHERE -> union all LEXP .)
    asc             reduce using rule 109 (WHERE -> union all LEXP .)
    desc            reduce using rule 109 (WHERE -> union all LEXP .)
    coma            shift and go to state 86

  ! coma            [ reduce using rule 109 (WHERE -> union all LEXP .) ]


state 373

    (192) EXP -> para EXP . parc
    (135) LEXP -> EXP .
    (173) EXP -> EXP . mas EXP
    (174) EXP -> EXP . menos EXP
    (175) EXP -> EXP . multiplicacion EXP
    (176) EXP -> EXP . division EXP
    (177) EXP -> EXP . modulo EXP
    (178) EXP -> EXP . elevado EXP
    (179) EXP -> EXP . and EXP
    (180) EXP -> EXP . or EXP
    (181) EXP -> EXP . mayor EXP
    (182) EXP -> EXP . menor EXP
    (183) EXP -> EXP . mayor_igual EXP
    (184) EXP -> EXP . menor_igual EXP
    (185) EXP -> EXP . igual EXP
    (186) EXP -> EXP . diferente1 EXP
    (187) EXP -> EXP . diferente2 EXP
    (188) EXP -> EXP . punto EXP
    (215) PREDICADOS -> EXP . between EXP
    (216) PREDICADOS -> EXP . in para LEXP parc
    (217) PREDICADOS -> EXP . not in para LEXP parc
    (218) PREDICADOS -> EXP . not between EXP
    (219) PREDICADOS -> EXP . between symetric EXP
    (220) PREDICADOS -> EXP . not between symetric EXP
    (221) PREDICADOS -> EXP . is distinct r_from EXP
    (222) PREDICADOS -> EXP . is not distinct r_from EXP
    (223) PREDICADOS -> EXP . is PNULL
    (224) PREDICADOS -> EXP . isnull
    (225) PREDICADOS -> EXP . notnull
    (226) PREDICADOS -> EXP . is true
    (227) PREDICADOS -> EXP . is not true
    (228) PREDICADOS -> EXP . is false
    (229) PREDICADOS -> EXP . is not false
    (230) PREDICADOS -> EXP . is unknown
    (231) PREDICADOS -> EXP . is not unknown

  ! shift/reduce conflict for parc resolved as shift
    parc            shift and go to state 184
    coma            reduce using rule 135 (LEXP -> EXP .)
    mas             shift and go to state 88
    menos           shift and go to state 89
    multiplicacion  shift and go to state 90
    division        shift and go to state 91
    modulo          shift and go to state 92
    elevado         shift and go to state 93
    and             shift and go to state 94
    or              shift and go to state 95
    mayor           shift and go to state 96
    menor           shift and go to state 97
    mayor_igual     shift and go to state 98
    menor_igual     shift and go to state 99
    igual           shift and go to state 100
    diferente1      shift and go to state 101
    diferente2      shift and go to state 102
    punto           shift and go to state 103
    between         shift and go to state 104
    in              shift and go to state 105
    not             shift and go to state 106
    is              shift and go to state 107
    isnull          shift and go to state 108
    notnull         shift and go to state 109

  ! parc            [ reduce using rule 135 (LEXP -> EXP .) ]


state 374

    (217) PREDICADOS -> EXP not in para LEXP parc .

    r_from          reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    limit           reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    offset          reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    union           reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    intersect       reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    except          reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    ptcoma          reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    mas             reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    menos           reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    multiplicacion  reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    division        reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    modulo          reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    elevado         reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    and             reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    or              reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    mayor           reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    menor           reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    mayor_igual     reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    menor_igual     reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    igual           reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    diferente1      reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    diferente2      reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    punto           reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    between         reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    in              reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    not             reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    is              reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    isnull          reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    notnull         reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    id              reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    as              reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    coma            reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    parc            reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    then            reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    where           reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    group           reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    having          reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    order           reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    end             reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    else            reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    when            reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    constraint      reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    default         reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    primary         reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    references      reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    null            reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    asc             reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)
    desc            reduce using rule 217 (PREDICADOS -> EXP not in para LEXP parc .)


state 375

    (222) PREDICADOS -> EXP is not distinct r_from EXP .
    (173) EXP -> EXP . mas EXP
    (174) EXP -> EXP . menos EXP
    (175) EXP -> EXP . multiplicacion EXP
    (176) EXP -> EXP . division EXP
    (177) EXP -> EXP . modulo EXP
    (178) EXP -> EXP . elevado EXP
    (179) EXP -> EXP . and EXP
    (180) EXP -> EXP . or EXP
    (181) EXP -> EXP . mayor EXP
    (182) EXP -> EXP . menor EXP
    (183) EXP -> EXP . mayor_igual EXP
    (184) EXP -> EXP . menor_igual EXP
    (185) EXP -> EXP . igual EXP
    (186) EXP -> EXP . diferente1 EXP
    (187) EXP -> EXP . diferente2 EXP
    (188) EXP -> EXP . punto EXP
    (215) PREDICADOS -> EXP . between EXP
    (216) PREDICADOS -> EXP . in para LEXP parc
    (217) PREDICADOS -> EXP . not in para LEXP parc
    (218) PREDICADOS -> EXP . not between EXP
    (219) PREDICADOS -> EXP . between symetric EXP
    (220) PREDICADOS -> EXP . not between symetric EXP
    (221) PREDICADOS -> EXP . is distinct r_from EXP
    (222) PREDICADOS -> EXP . is not distinct r_from EXP
    (223) PREDICADOS -> EXP . is PNULL
    (224) PREDICADOS -> EXP . isnull
    (225) PREDICADOS -> EXP . notnull
    (226) PREDICADOS -> EXP . is true
    (227) PREDICADOS -> EXP . is not true
    (228) PREDICADOS -> EXP . is false
    (229) PREDICADOS -> EXP . is not false
    (230) PREDICADOS -> EXP . is unknown
    (231) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    limit           reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    offset          reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    union           reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    intersect       reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    except          reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    ptcoma          reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    mas             reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    menos           reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    multiplicacion  reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    division        reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    modulo          reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    elevado         reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    mayor           reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    menor           reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    mayor_igual     reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    menor_igual     reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    igual           reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    diferente1      reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    diferente2      reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    punto           reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    between         reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    in              reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    is              reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    isnull          reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    notnull         reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    id              reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    as              reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    coma            reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    parc            reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    then            reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    where           reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    group           reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    having          reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    order           reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    end             reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    else            reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    when            reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    constraint      reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    default         reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    primary         reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    references      reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    null            reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    asc             reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    desc            reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .)
    and             shift and go to state 94
    or              shift and go to state 95
    not             shift and go to state 106

  ! and             [ reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .) ]
  ! or              [ reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .) ]
  ! not             [ reduce using rule 222 (PREDICADOS -> EXP is not distinct r_from EXP .) ]
  ! mas             [ shift and go to state 88 ]
  ! menos           [ shift and go to state 89 ]
  ! multiplicacion  [ shift and go to state 90 ]
  ! division        [ shift and go to state 91 ]
  ! modulo          [ shift and go to state 92 ]
  ! elevado         [ shift and go to state 93 ]
  ! mayor           [ shift and go to state 96 ]
  ! menor           [ shift and go to state 97 ]
  ! mayor_igual     [ shift and go to state 98 ]
  ! menor_igual     [ shift and go to state 99 ]
  ! igual           [ shift and go to state 100 ]
  ! diferente1      [ shift and go to state 101 ]
  ! diferente2      [ shift and go to state 102 ]
  ! punto           [ shift and go to state 103 ]
  ! between         [ shift and go to state 104 ]
  ! in              [ shift and go to state 105 ]
  ! is              [ shift and go to state 107 ]
  ! isnull          [ shift and go to state 108 ]
  ! notnull         [ shift and go to state 109 ]


state 376

    (204) EXP -> extract para FIELDS r_from timestamp cadena . parc

    parc            shift and go to state 427


state 377

    (68) COLDEF -> id TIPO LOPCOLUMN .
    (69) LOPCOLUMN -> LOPCOLUMN . OPCOLUMN
    (71) OPCOLUMN -> . constraint id unique
    (72) OPCOLUMN -> . constraint id check para EXP parc
    (73) OPCOLUMN -> . default EXP
    (74) OPCOLUMN -> . PNULL
    (75) OPCOLUMN -> . primary key
    (76) OPCOLUMN -> . references id
    (77) PNULL -> . not null
    (78) PNULL -> . null

    parc            reduce using rule 68 (COLDEF -> id TIPO LOPCOLUMN .)
    coma            reduce using rule 68 (COLDEF -> id TIPO LOPCOLUMN .)
    constraint      shift and go to state 379
    default         shift and go to state 380
    primary         shift and go to state 382
    references      shift and go to state 383
    not             shift and go to state 384
    null            shift and go to state 62

    OPCOLUMN                       shift and go to state 428
    PNULL                          shift and go to state 381

state 378

    (70) LOPCOLUMN -> OPCOLUMN .

    constraint      reduce using rule 70 (LOPCOLUMN -> OPCOLUMN .)
    default         reduce using rule 70 (LOPCOLUMN -> OPCOLUMN .)
    primary         reduce using rule 70 (LOPCOLUMN -> OPCOLUMN .)
    references      reduce using rule 70 (LOPCOLUMN -> OPCOLUMN .)
    not             reduce using rule 70 (LOPCOLUMN -> OPCOLUMN .)
    null            reduce using rule 70 (LOPCOLUMN -> OPCOLUMN .)
    parc            reduce using rule 70 (LOPCOLUMN -> OPCOLUMN .)
    coma            reduce using rule 70 (LOPCOLUMN -> OPCOLUMN .)


state 379

    (71) OPCOLUMN -> constraint . id unique
    (72) OPCOLUMN -> constraint . id check para EXP parc

    id              shift and go to state 429


state 380

    (73) OPCOLUMN -> default . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 430
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 381

    (74) OPCOLUMN -> PNULL .

    constraint      reduce using rule 74 (OPCOLUMN -> PNULL .)
    default         reduce using rule 74 (OPCOLUMN -> PNULL .)
    primary         reduce using rule 74 (OPCOLUMN -> PNULL .)
    references      reduce using rule 74 (OPCOLUMN -> PNULL .)
    not             reduce using rule 74 (OPCOLUMN -> PNULL .)
    null            reduce using rule 74 (OPCOLUMN -> PNULL .)
    parc            reduce using rule 74 (OPCOLUMN -> PNULL .)
    coma            reduce using rule 74 (OPCOLUMN -> PNULL .)


state 382

    (75) OPCOLUMN -> primary . key

    key             shift and go to state 431


state 383

    (76) OPCOLUMN -> references . id

    id              shift and go to state 432


state 384

    (77) PNULL -> not . null

    null            shift and go to state 251


state 385

    (139) TIPO -> decimal para . LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 433
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 386

    (140) TIPO -> numeric para . LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 434
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 387

    (142) TIPO -> double precision .

    constraint      reduce using rule 142 (TIPO -> double precision .)
    default         reduce using rule 142 (TIPO -> double precision .)
    primary         reduce using rule 142 (TIPO -> double precision .)
    references      reduce using rule 142 (TIPO -> double precision .)
    not             reduce using rule 142 (TIPO -> double precision .)
    null            reduce using rule 142 (TIPO -> double precision .)
    parc            reduce using rule 142 (TIPO -> double precision .)
    coma            reduce using rule 142 (TIPO -> double precision .)
    ptcoma          reduce using rule 142 (TIPO -> double precision .)


state 388

    (144) TIPO -> character varying . para int parc

    para            shift and go to state 435


state 389

    (146) TIPO -> character para . int parc

    int             shift and go to state 436


state 390

    (145) TIPO -> varchar para . int parc

    int             shift and go to state 437


state 391

    (147) TIPO -> char para . int parc

    int             shift and go to state 438


state 392

    (150) TIPO -> timestamp without . time zone

    time            shift and go to state 439


state 393

    (151) TIPO -> timestamp para . int parc without time zone
    (153) TIPO -> timestamp para . int parc with time zone
    (154) TIPO -> timestamp para . int parc

    int             shift and go to state 440


state 394

    (152) TIPO -> timestamp with . time zone

    time            shift and go to state 441


state 395

    (157) TIPO -> time without . time zone

    time            shift and go to state 442


state 396

    (158) TIPO -> time para . int parc without time zone
    (160) TIPO -> time para . int parc with time zone
    (161) TIPO -> time para . int parc

    int             shift and go to state 443


state 397

    (159) TIPO -> time with . time zone

    time            shift and go to state 444


state 398

    (163) TIPO -> interval para . int parc
    (165) TIPO -> interval para . int parc cadena

    int             shift and go to state 445


state 399

    (164) TIPO -> interval cadena .

    constraint      reduce using rule 164 (TIPO -> interval cadena .)
    default         reduce using rule 164 (TIPO -> interval cadena .)
    primary         reduce using rule 164 (TIPO -> interval cadena .)
    references      reduce using rule 164 (TIPO -> interval cadena .)
    not             reduce using rule 164 (TIPO -> interval cadena .)
    null            reduce using rule 164 (TIPO -> interval cadena .)
    parc            reduce using rule 164 (TIPO -> interval cadena .)
    coma            reduce using rule 164 (TIPO -> interval cadena .)
    ptcoma          reduce using rule 164 (TIPO -> interval cadena .)


state 400

    (61) CREATETABLE -> create table id para LDEF parc ptcoma .

    select          reduce using rule 61 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    create          reduce using rule 61 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    update          reduce using rule 61 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    delete          reduce using rule 61 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    alter           reduce using rule 61 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    drop            reduce using rule 61 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    insert          reduce using rule 61 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    case            reduce using rule 61 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    show            reduce using rule 61 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    $end            reduce using rule 61 (CREATETABLE -> create table id para LDEF parc ptcoma .)


state 401

    (62) CREATETABLE -> create table id para LDEF parc HERENCIA . ptcoma

    ptcoma          shift and go to state 446


state 402

    (83) HERENCIA -> inherits . para LEXP parc

    para            shift and go to state 447


state 403

    (63) LDEF -> LDEF coma COLDEF .

    parc            reduce using rule 63 (LDEF -> LDEF coma COLDEF .)
    coma            reduce using rule 63 (LDEF -> LDEF coma COLDEF .)


state 404

    (66) COLDEF -> constraint id OPCONST .

    parc            reduce using rule 66 (COLDEF -> constraint id OPCONST .)
    coma            reduce using rule 66 (COLDEF -> constraint id OPCONST .)


state 405

    (79) OPCONST -> primary key para . LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 448
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 406

    (80) OPCONST -> foreign key para . LEXP parc references table para LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 449
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 407

    (81) OPCONST -> unique para LEXP . parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 450
    coma            shift and go to state 86


state 408

    (82) OPCONST -> check para LEXP . parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 451
    coma            shift and go to state 86


state 409

    (84) CREATETYPE -> create type id as enum para LEXP . parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 452
    coma            shift and go to state 86


state 410

    (49) CREATEDB -> create RD if not exist id OPCCDB .

    ptcoma          reduce using rule 49 (CREATEDB -> create RD if not exist id OPCCDB .)


state 411

    (128) LCAMPOS -> LCAMPOS id igual EXP .
    (173) EXP -> EXP . mas EXP
    (174) EXP -> EXP . menos EXP
    (175) EXP -> EXP . multiplicacion EXP
    (176) EXP -> EXP . division EXP
    (177) EXP -> EXP . modulo EXP
    (178) EXP -> EXP . elevado EXP
    (179) EXP -> EXP . and EXP
    (180) EXP -> EXP . or EXP
    (181) EXP -> EXP . mayor EXP
    (182) EXP -> EXP . menor EXP
    (183) EXP -> EXP . mayor_igual EXP
    (184) EXP -> EXP . menor_igual EXP
    (185) EXP -> EXP . igual EXP
    (186) EXP -> EXP . diferente1 EXP
    (187) EXP -> EXP . diferente2 EXP
    (188) EXP -> EXP . punto EXP
    (215) PREDICADOS -> EXP . between EXP
    (216) PREDICADOS -> EXP . in para LEXP parc
    (217) PREDICADOS -> EXP . not in para LEXP parc
    (218) PREDICADOS -> EXP . not between EXP
    (219) PREDICADOS -> EXP . between symetric EXP
    (220) PREDICADOS -> EXP . not between symetric EXP
    (221) PREDICADOS -> EXP . is distinct r_from EXP
    (222) PREDICADOS -> EXP . is not distinct r_from EXP
    (223) PREDICADOS -> EXP . is PNULL
    (224) PREDICADOS -> EXP . isnull
    (225) PREDICADOS -> EXP . notnull
    (226) PREDICADOS -> EXP . is true
    (227) PREDICADOS -> EXP . is not true
    (228) PREDICADOS -> EXP . is false
    (229) PREDICADOS -> EXP . is not false
    (230) PREDICADOS -> EXP . is unknown
    (231) PREDICADOS -> EXP . is not unknown

    where           reduce using rule 128 (LCAMPOS -> LCAMPOS id igual EXP .)
    id              reduce using rule 128 (LCAMPOS -> LCAMPOS id igual EXP .)
    mas             shift and go to state 88
    menos           shift and go to state 89
    multiplicacion  shift and go to state 90
    division        shift and go to state 91
    modulo          shift and go to state 92
    elevado         shift and go to state 93
    and             shift and go to state 94
    or              shift and go to state 95
    mayor           shift and go to state 96
    menor           shift and go to state 97
    mayor_igual     shift and go to state 98
    menor_igual     shift and go to state 99
    igual           shift and go to state 100
    diferente1      shift and go to state 101
    diferente2      shift and go to state 102
    punto           shift and go to state 103
    between         shift and go to state 104
    in              shift and go to state 105
    not             shift and go to state 106
    is              shift and go to state 107
    isnull          shift and go to state 108
    notnull         shift and go to state 109


state 412

    (32) OP -> alter column id set . not null
    (33) OP -> alter column id set . null

    not             shift and go to state 453
    null            shift and go to state 454


state 413

    (39) alc -> alter column id type . TIPO
    (136) TIPO -> . smallint
    (137) TIPO -> . integer
    (138) TIPO -> . bigint
    (139) TIPO -> . decimal para LEXP parc
    (140) TIPO -> . numeric para LEXP parc
    (141) TIPO -> . real
    (142) TIPO -> . double precision
    (143) TIPO -> . money
    (144) TIPO -> . character varying para int parc
    (145) TIPO -> . varchar para int parc
    (146) TIPO -> . character para int parc
    (147) TIPO -> . char para int parc
    (148) TIPO -> . text
    (149) TIPO -> . timestamp
    (150) TIPO -> . timestamp without time zone
    (151) TIPO -> . timestamp para int parc without time zone
    (152) TIPO -> . timestamp with time zone
    (153) TIPO -> . timestamp para int parc with time zone
    (154) TIPO -> . timestamp para int parc
    (155) TIPO -> . date
    (156) TIPO -> . time
    (157) TIPO -> . time without time zone
    (158) TIPO -> . time para int parc without time zone
    (159) TIPO -> . time with time zone
    (160) TIPO -> . time para int parc with time zone
    (161) TIPO -> . time para int parc
    (162) TIPO -> . interval
    (163) TIPO -> . interval para int parc
    (164) TIPO -> . interval cadena
    (165) TIPO -> . interval para int parc cadena
    (166) TIPO -> . boolean

    smallint        shift and go to state 319
    integer         shift and go to state 320
    bigint          shift and go to state 321
    decimal         shift and go to state 322
    numeric         shift and go to state 323
    real            shift and go to state 324
    double          shift and go to state 325
    money           shift and go to state 326
    character       shift and go to state 327
    varchar         shift and go to state 328
    char            shift and go to state 329
    text            shift and go to state 330
    timestamp       shift and go to state 331
    date            shift and go to state 333
    time            shift and go to state 332
    interval        shift and go to state 334
    boolean         shift and go to state 335

    TIPO                           shift and go to state 455

state 414

    (43) ADD -> column id TIPO .

    ptcoma          reduce using rule 43 (ADD -> column id TIPO .)


state 415

    (44) ADD -> check para LEXP . parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 456
    coma            shift and go to state 86


state 416

    (45) ADD -> constraint id unique . para id parc

    para            shift and go to state 457


state 417

    (46) ADD -> foreign key para . id parc references id para id parc

    id              shift and go to state 458


state 418

    (39) alc -> alter column . id type TIPO

    id              shift and go to state 459


state 419

    (36) OP -> rename column id to . id

    id              shift and go to state 460


state 420

    (21) INSERT -> insert into id values para LEXP parc .

    ptcoma          reduce using rule 21 (INSERT -> insert into id values para LEXP parc .)


state 421

    (85) SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING . ORDER LIMIT COMBINING
    (122) ORDER -> . order by LEXP ORD
    (123) ORDER -> . order by LEXP
    (124) ORDER -> .

  ! shift/reduce conflict for order resolved as shift
    order           shift and go to state 423
    r_from          reduce using rule 124 (ORDER -> .)
    limit           reduce using rule 124 (ORDER -> .)
    offset          reduce using rule 124 (ORDER -> .)
    union           reduce using rule 124 (ORDER -> .)
    intersect       reduce using rule 124 (ORDER -> .)
    except          reduce using rule 124 (ORDER -> .)
    ptcoma          reduce using rule 124 (ORDER -> .)
    mas             reduce using rule 124 (ORDER -> .)
    menos           reduce using rule 124 (ORDER -> .)
    multiplicacion  reduce using rule 124 (ORDER -> .)
    division        reduce using rule 124 (ORDER -> .)
    modulo          reduce using rule 124 (ORDER -> .)
    elevado         reduce using rule 124 (ORDER -> .)
    and             reduce using rule 124 (ORDER -> .)
    or              reduce using rule 124 (ORDER -> .)
    mayor           reduce using rule 124 (ORDER -> .)
    menor           reduce using rule 124 (ORDER -> .)
    mayor_igual     reduce using rule 124 (ORDER -> .)
    menor_igual     reduce using rule 124 (ORDER -> .)
    igual           reduce using rule 124 (ORDER -> .)
    diferente1      reduce using rule 124 (ORDER -> .)
    diferente2      reduce using rule 124 (ORDER -> .)
    punto           reduce using rule 124 (ORDER -> .)
    between         reduce using rule 124 (ORDER -> .)
    in              reduce using rule 124 (ORDER -> .)
    not             reduce using rule 124 (ORDER -> .)
    is              reduce using rule 124 (ORDER -> .)
    isnull          reduce using rule 124 (ORDER -> .)
    notnull         reduce using rule 124 (ORDER -> .)
    id              reduce using rule 124 (ORDER -> .)
    as              reduce using rule 124 (ORDER -> .)
    coma            reduce using rule 124 (ORDER -> .)
    parc            reduce using rule 124 (ORDER -> .)
    then            reduce using rule 124 (ORDER -> .)
    where           reduce using rule 124 (ORDER -> .)
    group           reduce using rule 124 (ORDER -> .)
    having          reduce using rule 124 (ORDER -> .)
    end             reduce using rule 124 (ORDER -> .)
    else            reduce using rule 124 (ORDER -> .)
    when            reduce using rule 124 (ORDER -> .)
    constraint      reduce using rule 124 (ORDER -> .)
    default         reduce using rule 124 (ORDER -> .)
    primary         reduce using rule 124 (ORDER -> .)
    references      reduce using rule 124 (ORDER -> .)
    null            reduce using rule 124 (ORDER -> .)
    asc             reduce using rule 124 (ORDER -> .)
    desc            reduce using rule 124 (ORDER -> .)

  ! order           [ reduce using rule 124 (ORDER -> .) ]

    ORDER                          shift and go to state 461

state 422

    (86) SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER . LIMIT COMBINING
    (88) LIMIT -> . limit int
    (89) LIMIT -> . limit all
    (90) LIMIT -> . offset int
    (91) LIMIT -> . limit int offset int
    (92) LIMIT -> . offset int limit int
    (93) LIMIT -> . limit all offset int
    (94) LIMIT -> . offset int limit all
    (95) LIMIT -> .

  ! shift/reduce conflict for limit resolved as shift
  ! shift/reduce conflict for offset resolved as shift
    limit           shift and go to state 82
    offset          shift and go to state 83
    union           reduce using rule 95 (LIMIT -> .)
    intersect       reduce using rule 95 (LIMIT -> .)
    except          reduce using rule 95 (LIMIT -> .)
    ptcoma          reduce using rule 95 (LIMIT -> .)
    r_from          reduce using rule 95 (LIMIT -> .)
    mas             reduce using rule 95 (LIMIT -> .)
    menos           reduce using rule 95 (LIMIT -> .)
    multiplicacion  reduce using rule 95 (LIMIT -> .)
    division        reduce using rule 95 (LIMIT -> .)
    modulo          reduce using rule 95 (LIMIT -> .)
    elevado         reduce using rule 95 (LIMIT -> .)
    and             reduce using rule 95 (LIMIT -> .)
    or              reduce using rule 95 (LIMIT -> .)
    mayor           reduce using rule 95 (LIMIT -> .)
    menor           reduce using rule 95 (LIMIT -> .)
    mayor_igual     reduce using rule 95 (LIMIT -> .)
    menor_igual     reduce using rule 95 (LIMIT -> .)
    igual           reduce using rule 95 (LIMIT -> .)
    diferente1      reduce using rule 95 (LIMIT -> .)
    diferente2      reduce using rule 95 (LIMIT -> .)
    punto           reduce using rule 95 (LIMIT -> .)
    between         reduce using rule 95 (LIMIT -> .)
    in              reduce using rule 95 (LIMIT -> .)
    not             reduce using rule 95 (LIMIT -> .)
    is              reduce using rule 95 (LIMIT -> .)
    isnull          reduce using rule 95 (LIMIT -> .)
    notnull         reduce using rule 95 (LIMIT -> .)
    id              reduce using rule 95 (LIMIT -> .)
    as              reduce using rule 95 (LIMIT -> .)
    coma            reduce using rule 95 (LIMIT -> .)
    parc            reduce using rule 95 (LIMIT -> .)
    then            reduce using rule 95 (LIMIT -> .)
    where           reduce using rule 95 (LIMIT -> .)
    group           reduce using rule 95 (LIMIT -> .)
    having          reduce using rule 95 (LIMIT -> .)
    order           reduce using rule 95 (LIMIT -> .)
    end             reduce using rule 95 (LIMIT -> .)
    else            reduce using rule 95 (LIMIT -> .)
    when            reduce using rule 95 (LIMIT -> .)
    constraint      reduce using rule 95 (LIMIT -> .)
    default         reduce using rule 95 (LIMIT -> .)
    primary         reduce using rule 95 (LIMIT -> .)
    references      reduce using rule 95 (LIMIT -> .)
    null            reduce using rule 95 (LIMIT -> .)
    asc             reduce using rule 95 (LIMIT -> .)
    desc            reduce using rule 95 (LIMIT -> .)

  ! limit           [ reduce using rule 95 (LIMIT -> .) ]
  ! offset          [ reduce using rule 95 (LIMIT -> .) ]

    LIMIT                          shift and go to state 462

state 423

    (122) ORDER -> order . by LEXP ORD
    (123) ORDER -> order . by LEXP

    by              shift and go to state 463


state 424

    (120) HAVING -> having LEXP .
    (134) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 120 (HAVING -> having LEXP .)
    limit           reduce using rule 120 (HAVING -> having LEXP .)
    offset          reduce using rule 120 (HAVING -> having LEXP .)
    union           reduce using rule 120 (HAVING -> having LEXP .)
    intersect       reduce using rule 120 (HAVING -> having LEXP .)
    except          reduce using rule 120 (HAVING -> having LEXP .)
    ptcoma          reduce using rule 120 (HAVING -> having LEXP .)
    mas             reduce using rule 120 (HAVING -> having LEXP .)
    menos           reduce using rule 120 (HAVING -> having LEXP .)
    multiplicacion  reduce using rule 120 (HAVING -> having LEXP .)
    division        reduce using rule 120 (HAVING -> having LEXP .)
    modulo          reduce using rule 120 (HAVING -> having LEXP .)
    elevado         reduce using rule 120 (HAVING -> having LEXP .)
    and             reduce using rule 120 (HAVING -> having LEXP .)
    or              reduce using rule 120 (HAVING -> having LEXP .)
    mayor           reduce using rule 120 (HAVING -> having LEXP .)
    menor           reduce using rule 120 (HAVING -> having LEXP .)
    mayor_igual     reduce using rule 120 (HAVING -> having LEXP .)
    menor_igual     reduce using rule 120 (HAVING -> having LEXP .)
    igual           reduce using rule 120 (HAVING -> having LEXP .)
    diferente1      reduce using rule 120 (HAVING -> having LEXP .)
    diferente2      reduce using rule 120 (HAVING -> having LEXP .)
    punto           reduce using rule 120 (HAVING -> having LEXP .)
    between         reduce using rule 120 (HAVING -> having LEXP .)
    in              reduce using rule 120 (HAVING -> having LEXP .)
    not             reduce using rule 120 (HAVING -> having LEXP .)
    is              reduce using rule 120 (HAVING -> having LEXP .)
    isnull          reduce using rule 120 (HAVING -> having LEXP .)
    notnull         reduce using rule 120 (HAVING -> having LEXP .)
    id              reduce using rule 120 (HAVING -> having LEXP .)
    as              reduce using rule 120 (HAVING -> having LEXP .)
    parc            reduce using rule 120 (HAVING -> having LEXP .)
    then            reduce using rule 120 (HAVING -> having LEXP .)
    where           reduce using rule 120 (HAVING -> having LEXP .)
    group           reduce using rule 120 (HAVING -> having LEXP .)
    having          reduce using rule 120 (HAVING -> having LEXP .)
    order           reduce using rule 120 (HAVING -> having LEXP .)
    end             reduce using rule 120 (HAVING -> having LEXP .)
    else            reduce using rule 120 (HAVING -> having LEXP .)
    when            reduce using rule 120 (HAVING -> having LEXP .)
    constraint      reduce using rule 120 (HAVING -> having LEXP .)
    default         reduce using rule 120 (HAVING -> having LEXP .)
    primary         reduce using rule 120 (HAVING -> having LEXP .)
    references      reduce using rule 120 (HAVING -> having LEXP .)
    null            reduce using rule 120 (HAVING -> having LEXP .)
    asc             reduce using rule 120 (HAVING -> having LEXP .)
    desc            reduce using rule 120 (HAVING -> having LEXP .)
    coma            shift and go to state 86

  ! coma            [ reduce using rule 120 (HAVING -> having LEXP .) ]


state 425

    (118) GROUP -> group by LEXP .
    (134) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 118 (GROUP -> group by LEXP .)
    limit           reduce using rule 118 (GROUP -> group by LEXP .)
    offset          reduce using rule 118 (GROUP -> group by LEXP .)
    union           reduce using rule 118 (GROUP -> group by LEXP .)
    intersect       reduce using rule 118 (GROUP -> group by LEXP .)
    except          reduce using rule 118 (GROUP -> group by LEXP .)
    ptcoma          reduce using rule 118 (GROUP -> group by LEXP .)
    mas             reduce using rule 118 (GROUP -> group by LEXP .)
    menos           reduce using rule 118 (GROUP -> group by LEXP .)
    multiplicacion  reduce using rule 118 (GROUP -> group by LEXP .)
    division        reduce using rule 118 (GROUP -> group by LEXP .)
    modulo          reduce using rule 118 (GROUP -> group by LEXP .)
    elevado         reduce using rule 118 (GROUP -> group by LEXP .)
    and             reduce using rule 118 (GROUP -> group by LEXP .)
    or              reduce using rule 118 (GROUP -> group by LEXP .)
    mayor           reduce using rule 118 (GROUP -> group by LEXP .)
    menor           reduce using rule 118 (GROUP -> group by LEXP .)
    mayor_igual     reduce using rule 118 (GROUP -> group by LEXP .)
    menor_igual     reduce using rule 118 (GROUP -> group by LEXP .)
    igual           reduce using rule 118 (GROUP -> group by LEXP .)
    diferente1      reduce using rule 118 (GROUP -> group by LEXP .)
    diferente2      reduce using rule 118 (GROUP -> group by LEXP .)
    punto           reduce using rule 118 (GROUP -> group by LEXP .)
    between         reduce using rule 118 (GROUP -> group by LEXP .)
    in              reduce using rule 118 (GROUP -> group by LEXP .)
    not             reduce using rule 118 (GROUP -> group by LEXP .)
    is              reduce using rule 118 (GROUP -> group by LEXP .)
    isnull          reduce using rule 118 (GROUP -> group by LEXP .)
    notnull         reduce using rule 118 (GROUP -> group by LEXP .)
    id              reduce using rule 118 (GROUP -> group by LEXP .)
    as              reduce using rule 118 (GROUP -> group by LEXP .)
    parc            reduce using rule 118 (GROUP -> group by LEXP .)
    then            reduce using rule 118 (GROUP -> group by LEXP .)
    where           reduce using rule 118 (GROUP -> group by LEXP .)
    group           reduce using rule 118 (GROUP -> group by LEXP .)
    having          reduce using rule 118 (GROUP -> group by LEXP .)
    order           reduce using rule 118 (GROUP -> group by LEXP .)
    end             reduce using rule 118 (GROUP -> group by LEXP .)
    else            reduce using rule 118 (GROUP -> group by LEXP .)
    when            reduce using rule 118 (GROUP -> group by LEXP .)
    constraint      reduce using rule 118 (GROUP -> group by LEXP .)
    default         reduce using rule 118 (GROUP -> group by LEXP .)
    primary         reduce using rule 118 (GROUP -> group by LEXP .)
    references      reduce using rule 118 (GROUP -> group by LEXP .)
    null            reduce using rule 118 (GROUP -> group by LEXP .)
    asc             reduce using rule 118 (GROUP -> group by LEXP .)
    desc            reduce using rule 118 (GROUP -> group by LEXP .)
    coma            shift and go to state 86

  ! coma            [ reduce using rule 118 (GROUP -> group by LEXP .) ]


state 426

    (133) EXIST -> exist para SELECT . parc

    parc            shift and go to state 464


state 427

    (204) EXP -> extract para FIELDS r_from timestamp cadena parc .

    r_from          reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    limit           reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    offset          reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    union           reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    intersect       reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    except          reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    ptcoma          reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    mas             reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    menos           reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    multiplicacion  reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    division        reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    modulo          reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    elevado         reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    and             reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    or              reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    mayor           reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    menor           reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    mayor_igual     reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    menor_igual     reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    igual           reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    diferente1      reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    diferente2      reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    punto           reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    between         reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    in              reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    not             reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    is              reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    isnull          reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    notnull         reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    id              reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    as              reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    coma            reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    parc            reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    then            reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    where           reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    group           reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    having          reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    order           reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    end             reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    else            reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    when            reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    constraint      reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    default         reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    primary         reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    references      reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    null            reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    asc             reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    desc            reduce using rule 204 (EXP -> extract para FIELDS r_from timestamp cadena parc .)


state 428

    (69) LOPCOLUMN -> LOPCOLUMN OPCOLUMN .

    constraint      reduce using rule 69 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    default         reduce using rule 69 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    primary         reduce using rule 69 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    references      reduce using rule 69 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    not             reduce using rule 69 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    null            reduce using rule 69 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    parc            reduce using rule 69 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    coma            reduce using rule 69 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)


state 429

    (71) OPCOLUMN -> constraint id . unique
    (72) OPCOLUMN -> constraint id . check para EXP parc

    unique          shift and go to state 465
    check           shift and go to state 466


state 430

    (73) OPCOLUMN -> default EXP .
    (173) EXP -> EXP . mas EXP
    (174) EXP -> EXP . menos EXP
    (175) EXP -> EXP . multiplicacion EXP
    (176) EXP -> EXP . division EXP
    (177) EXP -> EXP . modulo EXP
    (178) EXP -> EXP . elevado EXP
    (179) EXP -> EXP . and EXP
    (180) EXP -> EXP . or EXP
    (181) EXP -> EXP . mayor EXP
    (182) EXP -> EXP . menor EXP
    (183) EXP -> EXP . mayor_igual EXP
    (184) EXP -> EXP . menor_igual EXP
    (185) EXP -> EXP . igual EXP
    (186) EXP -> EXP . diferente1 EXP
    (187) EXP -> EXP . diferente2 EXP
    (188) EXP -> EXP . punto EXP
    (215) PREDICADOS -> EXP . between EXP
    (216) PREDICADOS -> EXP . in para LEXP parc
    (217) PREDICADOS -> EXP . not in para LEXP parc
    (218) PREDICADOS -> EXP . not between EXP
    (219) PREDICADOS -> EXP . between symetric EXP
    (220) PREDICADOS -> EXP . not between symetric EXP
    (221) PREDICADOS -> EXP . is distinct r_from EXP
    (222) PREDICADOS -> EXP . is not distinct r_from EXP
    (223) PREDICADOS -> EXP . is PNULL
    (224) PREDICADOS -> EXP . isnull
    (225) PREDICADOS -> EXP . notnull
    (226) PREDICADOS -> EXP . is true
    (227) PREDICADOS -> EXP . is not true
    (228) PREDICADOS -> EXP . is false
    (229) PREDICADOS -> EXP . is not false
    (230) PREDICADOS -> EXP . is unknown
    (231) PREDICADOS -> EXP . is not unknown

  ! shift/reduce conflict for not resolved as shift
    constraint      reduce using rule 73 (OPCOLUMN -> default EXP .)
    default         reduce using rule 73 (OPCOLUMN -> default EXP .)
    primary         reduce using rule 73 (OPCOLUMN -> default EXP .)
    references      reduce using rule 73 (OPCOLUMN -> default EXP .)
    null            reduce using rule 73 (OPCOLUMN -> default EXP .)
    parc            reduce using rule 73 (OPCOLUMN -> default EXP .)
    coma            reduce using rule 73 (OPCOLUMN -> default EXP .)
    mas             shift and go to state 88
    menos           shift and go to state 89
    multiplicacion  shift and go to state 90
    division        shift and go to state 91
    modulo          shift and go to state 92
    elevado         shift and go to state 93
    and             shift and go to state 94
    or              shift and go to state 95
    mayor           shift and go to state 96
    menor           shift and go to state 97
    mayor_igual     shift and go to state 98
    menor_igual     shift and go to state 99
    igual           shift and go to state 100
    diferente1      shift and go to state 101
    diferente2      shift and go to state 102
    punto           shift and go to state 103
    between         shift and go to state 104
    in              shift and go to state 105
    not             shift and go to state 106
    is              shift and go to state 107
    isnull          shift and go to state 108
    notnull         shift and go to state 109

  ! not             [ reduce using rule 73 (OPCOLUMN -> default EXP .) ]


state 431

    (75) OPCOLUMN -> primary key .

    constraint      reduce using rule 75 (OPCOLUMN -> primary key .)
    default         reduce using rule 75 (OPCOLUMN -> primary key .)
    primary         reduce using rule 75 (OPCOLUMN -> primary key .)
    references      reduce using rule 75 (OPCOLUMN -> primary key .)
    not             reduce using rule 75 (OPCOLUMN -> primary key .)
    null            reduce using rule 75 (OPCOLUMN -> primary key .)
    parc            reduce using rule 75 (OPCOLUMN -> primary key .)
    coma            reduce using rule 75 (OPCOLUMN -> primary key .)


state 432

    (76) OPCOLUMN -> references id .

    constraint      reduce using rule 76 (OPCOLUMN -> references id .)
    default         reduce using rule 76 (OPCOLUMN -> references id .)
    primary         reduce using rule 76 (OPCOLUMN -> references id .)
    references      reduce using rule 76 (OPCOLUMN -> references id .)
    not             reduce using rule 76 (OPCOLUMN -> references id .)
    null            reduce using rule 76 (OPCOLUMN -> references id .)
    parc            reduce using rule 76 (OPCOLUMN -> references id .)
    coma            reduce using rule 76 (OPCOLUMN -> references id .)


state 433

    (139) TIPO -> decimal para LEXP . parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 467
    coma            shift and go to state 86


state 434

    (140) TIPO -> numeric para LEXP . parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 468
    coma            shift and go to state 86


state 435

    (144) TIPO -> character varying para . int parc

    int             shift and go to state 469


state 436

    (146) TIPO -> character para int . parc

    parc            shift and go to state 470


state 437

    (145) TIPO -> varchar para int . parc

    parc            shift and go to state 471


state 438

    (147) TIPO -> char para int . parc

    parc            shift and go to state 472


state 439

    (150) TIPO -> timestamp without time . zone

    zone            shift and go to state 473


state 440

    (151) TIPO -> timestamp para int . parc without time zone
    (153) TIPO -> timestamp para int . parc with time zone
    (154) TIPO -> timestamp para int . parc

    parc            shift and go to state 474


state 441

    (152) TIPO -> timestamp with time . zone

    zone            shift and go to state 475


state 442

    (157) TIPO -> time without time . zone

    zone            shift and go to state 476


state 443

    (158) TIPO -> time para int . parc without time zone
    (160) TIPO -> time para int . parc with time zone
    (161) TIPO -> time para int . parc

    parc            shift and go to state 477


state 444

    (159) TIPO -> time with time . zone

    zone            shift and go to state 478


state 445

    (163) TIPO -> interval para int . parc
    (165) TIPO -> interval para int . parc cadena

    parc            shift and go to state 479


state 446

    (62) CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .

    select          reduce using rule 62 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    create          reduce using rule 62 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    update          reduce using rule 62 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    delete          reduce using rule 62 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    alter           reduce using rule 62 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    drop            reduce using rule 62 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    insert          reduce using rule 62 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    case            reduce using rule 62 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    show            reduce using rule 62 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    $end            reduce using rule 62 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)


state 447

    (83) HERENCIA -> inherits para . LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 480
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 448

    (79) OPCONST -> primary key para LEXP . parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 481
    coma            shift and go to state 86


state 449

    (80) OPCONST -> foreign key para LEXP . parc references table para LEXP parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 482
    coma            shift and go to state 86


state 450

    (81) OPCONST -> unique para LEXP parc .

    parc            reduce using rule 81 (OPCONST -> unique para LEXP parc .)
    coma            reduce using rule 81 (OPCONST -> unique para LEXP parc .)


state 451

    (82) OPCONST -> check para LEXP parc .

    parc            reduce using rule 82 (OPCONST -> check para LEXP parc .)
    coma            reduce using rule 82 (OPCONST -> check para LEXP parc .)


state 452

    (84) CREATETYPE -> create type id as enum para LEXP parc .

    ptcoma          reduce using rule 84 (CREATETYPE -> create type id as enum para LEXP parc .)


state 453

    (32) OP -> alter column id set not . null

    null            shift and go to state 483


state 454

    (33) OP -> alter column id set null .

    ptcoma          reduce using rule 33 (OP -> alter column id set null .)


state 455

    (39) alc -> alter column id type TIPO .

    coma            reduce using rule 39 (alc -> alter column id type TIPO .)
    ptcoma          reduce using rule 39 (alc -> alter column id type TIPO .)


state 456

    (44) ADD -> check para LEXP parc .

    ptcoma          reduce using rule 44 (ADD -> check para LEXP parc .)


state 457

    (45) ADD -> constraint id unique para . id parc

    id              shift and go to state 484


state 458

    (46) ADD -> foreign key para id . parc references id para id parc

    parc            shift and go to state 485


state 459

    (39) alc -> alter column id . type TIPO

    type            shift and go to state 413


state 460

    (36) OP -> rename column id to id .

    ptcoma          reduce using rule 36 (OP -> rename column id to id .)


state 461

    (85) SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER . LIMIT COMBINING
    (88) LIMIT -> . limit int
    (89) LIMIT -> . limit all
    (90) LIMIT -> . offset int
    (91) LIMIT -> . limit int offset int
    (92) LIMIT -> . offset int limit int
    (93) LIMIT -> . limit all offset int
    (94) LIMIT -> . offset int limit all
    (95) LIMIT -> .

  ! shift/reduce conflict for limit resolved as shift
  ! shift/reduce conflict for offset resolved as shift
    limit           shift and go to state 82
    offset          shift and go to state 83
    union           reduce using rule 95 (LIMIT -> .)
    intersect       reduce using rule 95 (LIMIT -> .)
    except          reduce using rule 95 (LIMIT -> .)
    ptcoma          reduce using rule 95 (LIMIT -> .)
    r_from          reduce using rule 95 (LIMIT -> .)
    mas             reduce using rule 95 (LIMIT -> .)
    menos           reduce using rule 95 (LIMIT -> .)
    multiplicacion  reduce using rule 95 (LIMIT -> .)
    division        reduce using rule 95 (LIMIT -> .)
    modulo          reduce using rule 95 (LIMIT -> .)
    elevado         reduce using rule 95 (LIMIT -> .)
    and             reduce using rule 95 (LIMIT -> .)
    or              reduce using rule 95 (LIMIT -> .)
    mayor           reduce using rule 95 (LIMIT -> .)
    menor           reduce using rule 95 (LIMIT -> .)
    mayor_igual     reduce using rule 95 (LIMIT -> .)
    menor_igual     reduce using rule 95 (LIMIT -> .)
    igual           reduce using rule 95 (LIMIT -> .)
    diferente1      reduce using rule 95 (LIMIT -> .)
    diferente2      reduce using rule 95 (LIMIT -> .)
    punto           reduce using rule 95 (LIMIT -> .)
    between         reduce using rule 95 (LIMIT -> .)
    in              reduce using rule 95 (LIMIT -> .)
    not             reduce using rule 95 (LIMIT -> .)
    is              reduce using rule 95 (LIMIT -> .)
    isnull          reduce using rule 95 (LIMIT -> .)
    notnull         reduce using rule 95 (LIMIT -> .)
    id              reduce using rule 95 (LIMIT -> .)
    as              reduce using rule 95 (LIMIT -> .)
    coma            reduce using rule 95 (LIMIT -> .)
    parc            reduce using rule 95 (LIMIT -> .)
    then            reduce using rule 95 (LIMIT -> .)
    where           reduce using rule 95 (LIMIT -> .)
    group           reduce using rule 95 (LIMIT -> .)
    having          reduce using rule 95 (LIMIT -> .)
    order           reduce using rule 95 (LIMIT -> .)
    end             reduce using rule 95 (LIMIT -> .)
    else            reduce using rule 95 (LIMIT -> .)
    when            reduce using rule 95 (LIMIT -> .)
    constraint      reduce using rule 95 (LIMIT -> .)
    default         reduce using rule 95 (LIMIT -> .)
    primary         reduce using rule 95 (LIMIT -> .)
    references      reduce using rule 95 (LIMIT -> .)
    null            reduce using rule 95 (LIMIT -> .)
    asc             reduce using rule 95 (LIMIT -> .)
    desc            reduce using rule 95 (LIMIT -> .)

  ! limit           [ reduce using rule 95 (LIMIT -> .) ]
  ! offset          [ reduce using rule 95 (LIMIT -> .) ]

    LIMIT                          shift and go to state 486

state 462

    (86) SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT . COMBINING
    (111) COMBINING -> . union LEXP
    (112) COMBINING -> . union all LEXP
    (113) COMBINING -> . intersect LEXP
    (114) COMBINING -> . intersect all LEXP
    (115) COMBINING -> . except LEXP
    (116) COMBINING -> . except all LEXP
    (117) COMBINING -> .

  ! shift/reduce conflict for union resolved as shift
  ! shift/reduce conflict for intersect resolved as shift
  ! shift/reduce conflict for except resolved as shift
    union           shift and go to state 147
    intersect       shift and go to state 148
    except          shift and go to state 149
    r_from          reduce using rule 117 (COMBINING -> .)
    limit           reduce using rule 117 (COMBINING -> .)
    offset          reduce using rule 117 (COMBINING -> .)
    ptcoma          reduce using rule 117 (COMBINING -> .)
    mas             reduce using rule 117 (COMBINING -> .)
    menos           reduce using rule 117 (COMBINING -> .)
    multiplicacion  reduce using rule 117 (COMBINING -> .)
    division        reduce using rule 117 (COMBINING -> .)
    modulo          reduce using rule 117 (COMBINING -> .)
    elevado         reduce using rule 117 (COMBINING -> .)
    and             reduce using rule 117 (COMBINING -> .)
    or              reduce using rule 117 (COMBINING -> .)
    mayor           reduce using rule 117 (COMBINING -> .)
    menor           reduce using rule 117 (COMBINING -> .)
    mayor_igual     reduce using rule 117 (COMBINING -> .)
    menor_igual     reduce using rule 117 (COMBINING -> .)
    igual           reduce using rule 117 (COMBINING -> .)
    diferente1      reduce using rule 117 (COMBINING -> .)
    diferente2      reduce using rule 117 (COMBINING -> .)
    punto           reduce using rule 117 (COMBINING -> .)
    between         reduce using rule 117 (COMBINING -> .)
    in              reduce using rule 117 (COMBINING -> .)
    not             reduce using rule 117 (COMBINING -> .)
    is              reduce using rule 117 (COMBINING -> .)
    isnull          reduce using rule 117 (COMBINING -> .)
    notnull         reduce using rule 117 (COMBINING -> .)
    id              reduce using rule 117 (COMBINING -> .)
    as              reduce using rule 117 (COMBINING -> .)
    coma            reduce using rule 117 (COMBINING -> .)
    parc            reduce using rule 117 (COMBINING -> .)
    then            reduce using rule 117 (COMBINING -> .)
    where           reduce using rule 117 (COMBINING -> .)
    group           reduce using rule 117 (COMBINING -> .)
    having          reduce using rule 117 (COMBINING -> .)
    order           reduce using rule 117 (COMBINING -> .)
    end             reduce using rule 117 (COMBINING -> .)
    else            reduce using rule 117 (COMBINING -> .)
    when            reduce using rule 117 (COMBINING -> .)
    constraint      reduce using rule 117 (COMBINING -> .)
    default         reduce using rule 117 (COMBINING -> .)
    primary         reduce using rule 117 (COMBINING -> .)
    references      reduce using rule 117 (COMBINING -> .)
    null            reduce using rule 117 (COMBINING -> .)
    asc             reduce using rule 117 (COMBINING -> .)
    desc            reduce using rule 117 (COMBINING -> .)

  ! union           [ reduce using rule 117 (COMBINING -> .) ]
  ! intersect       [ reduce using rule 117 (COMBINING -> .) ]
  ! except          [ reduce using rule 117 (COMBINING -> .) ]

    COMBINING                      shift and go to state 487

state 463

    (122) ORDER -> order by . LEXP ORD
    (123) ORDER -> order by . LEXP
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 488
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 464

    (133) EXIST -> exist para SELECT parc .

    r_from          reduce using rule 133 (EXIST -> exist para SELECT parc .)
    limit           reduce using rule 133 (EXIST -> exist para SELECT parc .)
    offset          reduce using rule 133 (EXIST -> exist para SELECT parc .)
    union           reduce using rule 133 (EXIST -> exist para SELECT parc .)
    intersect       reduce using rule 133 (EXIST -> exist para SELECT parc .)
    except          reduce using rule 133 (EXIST -> exist para SELECT parc .)
    ptcoma          reduce using rule 133 (EXIST -> exist para SELECT parc .)
    mas             reduce using rule 133 (EXIST -> exist para SELECT parc .)
    menos           reduce using rule 133 (EXIST -> exist para SELECT parc .)
    multiplicacion  reduce using rule 133 (EXIST -> exist para SELECT parc .)
    division        reduce using rule 133 (EXIST -> exist para SELECT parc .)
    modulo          reduce using rule 133 (EXIST -> exist para SELECT parc .)
    elevado         reduce using rule 133 (EXIST -> exist para SELECT parc .)
    and             reduce using rule 133 (EXIST -> exist para SELECT parc .)
    or              reduce using rule 133 (EXIST -> exist para SELECT parc .)
    mayor           reduce using rule 133 (EXIST -> exist para SELECT parc .)
    menor           reduce using rule 133 (EXIST -> exist para SELECT parc .)
    mayor_igual     reduce using rule 133 (EXIST -> exist para SELECT parc .)
    menor_igual     reduce using rule 133 (EXIST -> exist para SELECT parc .)
    igual           reduce using rule 133 (EXIST -> exist para SELECT parc .)
    diferente1      reduce using rule 133 (EXIST -> exist para SELECT parc .)
    diferente2      reduce using rule 133 (EXIST -> exist para SELECT parc .)
    punto           reduce using rule 133 (EXIST -> exist para SELECT parc .)
    between         reduce using rule 133 (EXIST -> exist para SELECT parc .)
    in              reduce using rule 133 (EXIST -> exist para SELECT parc .)
    not             reduce using rule 133 (EXIST -> exist para SELECT parc .)
    is              reduce using rule 133 (EXIST -> exist para SELECT parc .)
    isnull          reduce using rule 133 (EXIST -> exist para SELECT parc .)
    notnull         reduce using rule 133 (EXIST -> exist para SELECT parc .)
    id              reduce using rule 133 (EXIST -> exist para SELECT parc .)
    as              reduce using rule 133 (EXIST -> exist para SELECT parc .)
    coma            reduce using rule 133 (EXIST -> exist para SELECT parc .)
    parc            reduce using rule 133 (EXIST -> exist para SELECT parc .)
    then            reduce using rule 133 (EXIST -> exist para SELECT parc .)
    where           reduce using rule 133 (EXIST -> exist para SELECT parc .)
    group           reduce using rule 133 (EXIST -> exist para SELECT parc .)
    having          reduce using rule 133 (EXIST -> exist para SELECT parc .)
    order           reduce using rule 133 (EXIST -> exist para SELECT parc .)
    end             reduce using rule 133 (EXIST -> exist para SELECT parc .)
    else            reduce using rule 133 (EXIST -> exist para SELECT parc .)
    when            reduce using rule 133 (EXIST -> exist para SELECT parc .)
    constraint      reduce using rule 133 (EXIST -> exist para SELECT parc .)
    default         reduce using rule 133 (EXIST -> exist para SELECT parc .)
    primary         reduce using rule 133 (EXIST -> exist para SELECT parc .)
    references      reduce using rule 133 (EXIST -> exist para SELECT parc .)
    null            reduce using rule 133 (EXIST -> exist para SELECT parc .)
    asc             reduce using rule 133 (EXIST -> exist para SELECT parc .)
    desc            reduce using rule 133 (EXIST -> exist para SELECT parc .)


state 465

    (71) OPCOLUMN -> constraint id unique .

    constraint      reduce using rule 71 (OPCOLUMN -> constraint id unique .)
    default         reduce using rule 71 (OPCOLUMN -> constraint id unique .)
    primary         reduce using rule 71 (OPCOLUMN -> constraint id unique .)
    references      reduce using rule 71 (OPCOLUMN -> constraint id unique .)
    not             reduce using rule 71 (OPCOLUMN -> constraint id unique .)
    null            reduce using rule 71 (OPCOLUMN -> constraint id unique .)
    parc            reduce using rule 71 (OPCOLUMN -> constraint id unique .)
    coma            reduce using rule 71 (OPCOLUMN -> constraint id unique .)


state 466

    (72) OPCOLUMN -> constraint id check . para EXP parc

    para            shift and go to state 489


state 467

    (139) TIPO -> decimal para LEXP parc .

    constraint      reduce using rule 139 (TIPO -> decimal para LEXP parc .)
    default         reduce using rule 139 (TIPO -> decimal para LEXP parc .)
    primary         reduce using rule 139 (TIPO -> decimal para LEXP parc .)
    references      reduce using rule 139 (TIPO -> decimal para LEXP parc .)
    not             reduce using rule 139 (TIPO -> decimal para LEXP parc .)
    null            reduce using rule 139 (TIPO -> decimal para LEXP parc .)
    parc            reduce using rule 139 (TIPO -> decimal para LEXP parc .)
    coma            reduce using rule 139 (TIPO -> decimal para LEXP parc .)
    ptcoma          reduce using rule 139 (TIPO -> decimal para LEXP parc .)


state 468

    (140) TIPO -> numeric para LEXP parc .

    constraint      reduce using rule 140 (TIPO -> numeric para LEXP parc .)
    default         reduce using rule 140 (TIPO -> numeric para LEXP parc .)
    primary         reduce using rule 140 (TIPO -> numeric para LEXP parc .)
    references      reduce using rule 140 (TIPO -> numeric para LEXP parc .)
    not             reduce using rule 140 (TIPO -> numeric para LEXP parc .)
    null            reduce using rule 140 (TIPO -> numeric para LEXP parc .)
    parc            reduce using rule 140 (TIPO -> numeric para LEXP parc .)
    coma            reduce using rule 140 (TIPO -> numeric para LEXP parc .)
    ptcoma          reduce using rule 140 (TIPO -> numeric para LEXP parc .)


state 469

    (144) TIPO -> character varying para int . parc

    parc            shift and go to state 490


state 470

    (146) TIPO -> character para int parc .

    constraint      reduce using rule 146 (TIPO -> character para int parc .)
    default         reduce using rule 146 (TIPO -> character para int parc .)
    primary         reduce using rule 146 (TIPO -> character para int parc .)
    references      reduce using rule 146 (TIPO -> character para int parc .)
    not             reduce using rule 146 (TIPO -> character para int parc .)
    null            reduce using rule 146 (TIPO -> character para int parc .)
    parc            reduce using rule 146 (TIPO -> character para int parc .)
    coma            reduce using rule 146 (TIPO -> character para int parc .)
    ptcoma          reduce using rule 146 (TIPO -> character para int parc .)


state 471

    (145) TIPO -> varchar para int parc .

    constraint      reduce using rule 145 (TIPO -> varchar para int parc .)
    default         reduce using rule 145 (TIPO -> varchar para int parc .)
    primary         reduce using rule 145 (TIPO -> varchar para int parc .)
    references      reduce using rule 145 (TIPO -> varchar para int parc .)
    not             reduce using rule 145 (TIPO -> varchar para int parc .)
    null            reduce using rule 145 (TIPO -> varchar para int parc .)
    parc            reduce using rule 145 (TIPO -> varchar para int parc .)
    coma            reduce using rule 145 (TIPO -> varchar para int parc .)
    ptcoma          reduce using rule 145 (TIPO -> varchar para int parc .)


state 472

    (147) TIPO -> char para int parc .

    constraint      reduce using rule 147 (TIPO -> char para int parc .)
    default         reduce using rule 147 (TIPO -> char para int parc .)
    primary         reduce using rule 147 (TIPO -> char para int parc .)
    references      reduce using rule 147 (TIPO -> char para int parc .)
    not             reduce using rule 147 (TIPO -> char para int parc .)
    null            reduce using rule 147 (TIPO -> char para int parc .)
    parc            reduce using rule 147 (TIPO -> char para int parc .)
    coma            reduce using rule 147 (TIPO -> char para int parc .)
    ptcoma          reduce using rule 147 (TIPO -> char para int parc .)


state 473

    (150) TIPO -> timestamp without time zone .

    constraint      reduce using rule 150 (TIPO -> timestamp without time zone .)
    default         reduce using rule 150 (TIPO -> timestamp without time zone .)
    primary         reduce using rule 150 (TIPO -> timestamp without time zone .)
    references      reduce using rule 150 (TIPO -> timestamp without time zone .)
    not             reduce using rule 150 (TIPO -> timestamp without time zone .)
    null            reduce using rule 150 (TIPO -> timestamp without time zone .)
    parc            reduce using rule 150 (TIPO -> timestamp without time zone .)
    coma            reduce using rule 150 (TIPO -> timestamp without time zone .)
    ptcoma          reduce using rule 150 (TIPO -> timestamp without time zone .)


state 474

    (151) TIPO -> timestamp para int parc . without time zone
    (153) TIPO -> timestamp para int parc . with time zone
    (154) TIPO -> timestamp para int parc .

    without         shift and go to state 491
    with            shift and go to state 492
    constraint      reduce using rule 154 (TIPO -> timestamp para int parc .)
    default         reduce using rule 154 (TIPO -> timestamp para int parc .)
    primary         reduce using rule 154 (TIPO -> timestamp para int parc .)
    references      reduce using rule 154 (TIPO -> timestamp para int parc .)
    not             reduce using rule 154 (TIPO -> timestamp para int parc .)
    null            reduce using rule 154 (TIPO -> timestamp para int parc .)
    parc            reduce using rule 154 (TIPO -> timestamp para int parc .)
    coma            reduce using rule 154 (TIPO -> timestamp para int parc .)
    ptcoma          reduce using rule 154 (TIPO -> timestamp para int parc .)


state 475

    (152) TIPO -> timestamp with time zone .

    constraint      reduce using rule 152 (TIPO -> timestamp with time zone .)
    default         reduce using rule 152 (TIPO -> timestamp with time zone .)
    primary         reduce using rule 152 (TIPO -> timestamp with time zone .)
    references      reduce using rule 152 (TIPO -> timestamp with time zone .)
    not             reduce using rule 152 (TIPO -> timestamp with time zone .)
    null            reduce using rule 152 (TIPO -> timestamp with time zone .)
    parc            reduce using rule 152 (TIPO -> timestamp with time zone .)
    coma            reduce using rule 152 (TIPO -> timestamp with time zone .)
    ptcoma          reduce using rule 152 (TIPO -> timestamp with time zone .)


state 476

    (157) TIPO -> time without time zone .

    constraint      reduce using rule 157 (TIPO -> time without time zone .)
    default         reduce using rule 157 (TIPO -> time without time zone .)
    primary         reduce using rule 157 (TIPO -> time without time zone .)
    references      reduce using rule 157 (TIPO -> time without time zone .)
    not             reduce using rule 157 (TIPO -> time without time zone .)
    null            reduce using rule 157 (TIPO -> time without time zone .)
    parc            reduce using rule 157 (TIPO -> time without time zone .)
    coma            reduce using rule 157 (TIPO -> time without time zone .)
    ptcoma          reduce using rule 157 (TIPO -> time without time zone .)


state 477

    (158) TIPO -> time para int parc . without time zone
    (160) TIPO -> time para int parc . with time zone
    (161) TIPO -> time para int parc .

    without         shift and go to state 493
    with            shift and go to state 494
    constraint      reduce using rule 161 (TIPO -> time para int parc .)
    default         reduce using rule 161 (TIPO -> time para int parc .)
    primary         reduce using rule 161 (TIPO -> time para int parc .)
    references      reduce using rule 161 (TIPO -> time para int parc .)
    not             reduce using rule 161 (TIPO -> time para int parc .)
    null            reduce using rule 161 (TIPO -> time para int parc .)
    parc            reduce using rule 161 (TIPO -> time para int parc .)
    coma            reduce using rule 161 (TIPO -> time para int parc .)
    ptcoma          reduce using rule 161 (TIPO -> time para int parc .)


state 478

    (159) TIPO -> time with time zone .

    constraint      reduce using rule 159 (TIPO -> time with time zone .)
    default         reduce using rule 159 (TIPO -> time with time zone .)
    primary         reduce using rule 159 (TIPO -> time with time zone .)
    references      reduce using rule 159 (TIPO -> time with time zone .)
    not             reduce using rule 159 (TIPO -> time with time zone .)
    null            reduce using rule 159 (TIPO -> time with time zone .)
    parc            reduce using rule 159 (TIPO -> time with time zone .)
    coma            reduce using rule 159 (TIPO -> time with time zone .)
    ptcoma          reduce using rule 159 (TIPO -> time with time zone .)


state 479

    (163) TIPO -> interval para int parc .
    (165) TIPO -> interval para int parc . cadena

    constraint      reduce using rule 163 (TIPO -> interval para int parc .)
    default         reduce using rule 163 (TIPO -> interval para int parc .)
    primary         reduce using rule 163 (TIPO -> interval para int parc .)
    references      reduce using rule 163 (TIPO -> interval para int parc .)
    not             reduce using rule 163 (TIPO -> interval para int parc .)
    null            reduce using rule 163 (TIPO -> interval para int parc .)
    parc            reduce using rule 163 (TIPO -> interval para int parc .)
    coma            reduce using rule 163 (TIPO -> interval para int parc .)
    ptcoma          reduce using rule 163 (TIPO -> interval para int parc .)
    cadena          shift and go to state 495


state 480

    (83) HERENCIA -> inherits para LEXP . parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 496
    coma            shift and go to state 86


state 481

    (79) OPCONST -> primary key para LEXP parc .

    parc            reduce using rule 79 (OPCONST -> primary key para LEXP parc .)
    coma            reduce using rule 79 (OPCONST -> primary key para LEXP parc .)


state 482

    (80) OPCONST -> foreign key para LEXP parc . references table para LEXP parc

    references      shift and go to state 497


state 483

    (32) OP -> alter column id set not null .

    ptcoma          reduce using rule 32 (OP -> alter column id set not null .)


state 484

    (45) ADD -> constraint id unique para id . parc

    parc            shift and go to state 498


state 485

    (46) ADD -> foreign key para id parc . references id para id parc

    references      shift and go to state 499


state 486

    (85) SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT . COMBINING
    (111) COMBINING -> . union LEXP
    (112) COMBINING -> . union all LEXP
    (113) COMBINING -> . intersect LEXP
    (114) COMBINING -> . intersect all LEXP
    (115) COMBINING -> . except LEXP
    (116) COMBINING -> . except all LEXP
    (117) COMBINING -> .

  ! shift/reduce conflict for union resolved as shift
  ! shift/reduce conflict for intersect resolved as shift
  ! shift/reduce conflict for except resolved as shift
    union           shift and go to state 147
    intersect       shift and go to state 148
    except          shift and go to state 149
    r_from          reduce using rule 117 (COMBINING -> .)
    limit           reduce using rule 117 (COMBINING -> .)
    offset          reduce using rule 117 (COMBINING -> .)
    ptcoma          reduce using rule 117 (COMBINING -> .)
    mas             reduce using rule 117 (COMBINING -> .)
    menos           reduce using rule 117 (COMBINING -> .)
    multiplicacion  reduce using rule 117 (COMBINING -> .)
    division        reduce using rule 117 (COMBINING -> .)
    modulo          reduce using rule 117 (COMBINING -> .)
    elevado         reduce using rule 117 (COMBINING -> .)
    and             reduce using rule 117 (COMBINING -> .)
    or              reduce using rule 117 (COMBINING -> .)
    mayor           reduce using rule 117 (COMBINING -> .)
    menor           reduce using rule 117 (COMBINING -> .)
    mayor_igual     reduce using rule 117 (COMBINING -> .)
    menor_igual     reduce using rule 117 (COMBINING -> .)
    igual           reduce using rule 117 (COMBINING -> .)
    diferente1      reduce using rule 117 (COMBINING -> .)
    diferente2      reduce using rule 117 (COMBINING -> .)
    punto           reduce using rule 117 (COMBINING -> .)
    between         reduce using rule 117 (COMBINING -> .)
    in              reduce using rule 117 (COMBINING -> .)
    not             reduce using rule 117 (COMBINING -> .)
    is              reduce using rule 117 (COMBINING -> .)
    isnull          reduce using rule 117 (COMBINING -> .)
    notnull         reduce using rule 117 (COMBINING -> .)
    id              reduce using rule 117 (COMBINING -> .)
    as              reduce using rule 117 (COMBINING -> .)
    coma            reduce using rule 117 (COMBINING -> .)
    parc            reduce using rule 117 (COMBINING -> .)
    then            reduce using rule 117 (COMBINING -> .)
    where           reduce using rule 117 (COMBINING -> .)
    group           reduce using rule 117 (COMBINING -> .)
    having          reduce using rule 117 (COMBINING -> .)
    order           reduce using rule 117 (COMBINING -> .)
    end             reduce using rule 117 (COMBINING -> .)
    else            reduce using rule 117 (COMBINING -> .)
    when            reduce using rule 117 (COMBINING -> .)
    constraint      reduce using rule 117 (COMBINING -> .)
    default         reduce using rule 117 (COMBINING -> .)
    primary         reduce using rule 117 (COMBINING -> .)
    references      reduce using rule 117 (COMBINING -> .)
    null            reduce using rule 117 (COMBINING -> .)
    asc             reduce using rule 117 (COMBINING -> .)
    desc            reduce using rule 117 (COMBINING -> .)

  ! union           [ reduce using rule 117 (COMBINING -> .) ]
  ! intersect       [ reduce using rule 117 (COMBINING -> .) ]
  ! except          [ reduce using rule 117 (COMBINING -> .) ]

    COMBINING                      shift and go to state 500

state 487

    (86) SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .

    ptcoma          reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    r_from          reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    limit           reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    offset          reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    union           reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    intersect       reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    except          reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    mas             reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    menos           reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    multiplicacion  reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    division        reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    modulo          reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    elevado         reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    and             reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    or              reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    mayor           reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    menor           reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    mayor_igual     reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    menor_igual     reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    igual           reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    diferente1      reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    diferente2      reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    punto           reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    between         reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    in              reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    not             reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    is              reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    isnull          reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    notnull         reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    id              reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    as              reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    coma            reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    parc            reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    then            reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    where           reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    group           reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    having          reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    order           reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    end             reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    else            reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    when            reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    constraint      reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    default         reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    primary         reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    references      reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    null            reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    asc             reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    desc            reduce using rule 86 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)


state 488

    (122) ORDER -> order by LEXP . ORD
    (123) ORDER -> order by LEXP .
    (134) LEXP -> LEXP . coma EXP
    (125) ORD -> . asc
    (126) ORD -> . desc

  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for asc resolved as shift
  ! shift/reduce conflict for desc resolved as shift
    r_from          reduce using rule 123 (ORDER -> order by LEXP .)
    limit           reduce using rule 123 (ORDER -> order by LEXP .)
    offset          reduce using rule 123 (ORDER -> order by LEXP .)
    union           reduce using rule 123 (ORDER -> order by LEXP .)
    intersect       reduce using rule 123 (ORDER -> order by LEXP .)
    except          reduce using rule 123 (ORDER -> order by LEXP .)
    ptcoma          reduce using rule 123 (ORDER -> order by LEXP .)
    mas             reduce using rule 123 (ORDER -> order by LEXP .)
    menos           reduce using rule 123 (ORDER -> order by LEXP .)
    multiplicacion  reduce using rule 123 (ORDER -> order by LEXP .)
    division        reduce using rule 123 (ORDER -> order by LEXP .)
    modulo          reduce using rule 123 (ORDER -> order by LEXP .)
    elevado         reduce using rule 123 (ORDER -> order by LEXP .)
    and             reduce using rule 123 (ORDER -> order by LEXP .)
    or              reduce using rule 123 (ORDER -> order by LEXP .)
    mayor           reduce using rule 123 (ORDER -> order by LEXP .)
    menor           reduce using rule 123 (ORDER -> order by LEXP .)
    mayor_igual     reduce using rule 123 (ORDER -> order by LEXP .)
    menor_igual     reduce using rule 123 (ORDER -> order by LEXP .)
    igual           reduce using rule 123 (ORDER -> order by LEXP .)
    diferente1      reduce using rule 123 (ORDER -> order by LEXP .)
    diferente2      reduce using rule 123 (ORDER -> order by LEXP .)
    punto           reduce using rule 123 (ORDER -> order by LEXP .)
    between         reduce using rule 123 (ORDER -> order by LEXP .)
    in              reduce using rule 123 (ORDER -> order by LEXP .)
    not             reduce using rule 123 (ORDER -> order by LEXP .)
    is              reduce using rule 123 (ORDER -> order by LEXP .)
    isnull          reduce using rule 123 (ORDER -> order by LEXP .)
    notnull         reduce using rule 123 (ORDER -> order by LEXP .)
    id              reduce using rule 123 (ORDER -> order by LEXP .)
    as              reduce using rule 123 (ORDER -> order by LEXP .)
    parc            reduce using rule 123 (ORDER -> order by LEXP .)
    then            reduce using rule 123 (ORDER -> order by LEXP .)
    where           reduce using rule 123 (ORDER -> order by LEXP .)
    group           reduce using rule 123 (ORDER -> order by LEXP .)
    having          reduce using rule 123 (ORDER -> order by LEXP .)
    order           reduce using rule 123 (ORDER -> order by LEXP .)
    end             reduce using rule 123 (ORDER -> order by LEXP .)
    else            reduce using rule 123 (ORDER -> order by LEXP .)
    when            reduce using rule 123 (ORDER -> order by LEXP .)
    constraint      reduce using rule 123 (ORDER -> order by LEXP .)
    default         reduce using rule 123 (ORDER -> order by LEXP .)
    primary         reduce using rule 123 (ORDER -> order by LEXP .)
    references      reduce using rule 123 (ORDER -> order by LEXP .)
    null            reduce using rule 123 (ORDER -> order by LEXP .)
    coma            shift and go to state 86
    asc             shift and go to state 502
    desc            shift and go to state 503

  ! coma            [ reduce using rule 123 (ORDER -> order by LEXP .) ]
  ! asc             [ reduce using rule 123 (ORDER -> order by LEXP .) ]
  ! desc            [ reduce using rule 123 (ORDER -> order by LEXP .) ]

    ORD                            shift and go to state 501

state 489

    (72) OPCOLUMN -> constraint id check para . EXP parc
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    EXP                            shift and go to state 504
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 490

    (144) TIPO -> character varying para int parc .

    constraint      reduce using rule 144 (TIPO -> character varying para int parc .)
    default         reduce using rule 144 (TIPO -> character varying para int parc .)
    primary         reduce using rule 144 (TIPO -> character varying para int parc .)
    references      reduce using rule 144 (TIPO -> character varying para int parc .)
    not             reduce using rule 144 (TIPO -> character varying para int parc .)
    null            reduce using rule 144 (TIPO -> character varying para int parc .)
    parc            reduce using rule 144 (TIPO -> character varying para int parc .)
    coma            reduce using rule 144 (TIPO -> character varying para int parc .)
    ptcoma          reduce using rule 144 (TIPO -> character varying para int parc .)


state 491

    (151) TIPO -> timestamp para int parc without . time zone

    time            shift and go to state 505


state 492

    (153) TIPO -> timestamp para int parc with . time zone

    time            shift and go to state 506


state 493

    (158) TIPO -> time para int parc without . time zone

    time            shift and go to state 507


state 494

    (160) TIPO -> time para int parc with . time zone

    time            shift and go to state 508


state 495

    (165) TIPO -> interval para int parc cadena .

    constraint      reduce using rule 165 (TIPO -> interval para int parc cadena .)
    default         reduce using rule 165 (TIPO -> interval para int parc cadena .)
    primary         reduce using rule 165 (TIPO -> interval para int parc cadena .)
    references      reduce using rule 165 (TIPO -> interval para int parc cadena .)
    not             reduce using rule 165 (TIPO -> interval para int parc cadena .)
    null            reduce using rule 165 (TIPO -> interval para int parc cadena .)
    parc            reduce using rule 165 (TIPO -> interval para int parc cadena .)
    coma            reduce using rule 165 (TIPO -> interval para int parc cadena .)
    ptcoma          reduce using rule 165 (TIPO -> interval para int parc cadena .)


state 496

    (83) HERENCIA -> inherits para LEXP parc .

    ptcoma          reduce using rule 83 (HERENCIA -> inherits para LEXP parc .)


state 497

    (80) OPCONST -> foreign key para LEXP parc references . table para LEXP parc

    table           shift and go to state 509


state 498

    (45) ADD -> constraint id unique para id parc .

    ptcoma          reduce using rule 45 (ADD -> constraint id unique para id parc .)


state 499

    (46) ADD -> foreign key para id parc references . id para id parc

    id              shift and go to state 510


state 500

    (85) SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .

    ptcoma          reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    r_from          reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    limit           reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    offset          reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    union           reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    intersect       reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    except          reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    mas             reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    menos           reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    multiplicacion  reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    division        reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    modulo          reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    elevado         reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    and             reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    or              reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    mayor           reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    menor           reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    mayor_igual     reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    menor_igual     reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    igual           reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    diferente1      reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    diferente2      reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    punto           reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    between         reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    in              reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    not             reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    is              reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    isnull          reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    notnull         reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    id              reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    as              reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    coma            reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    parc            reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    then            reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    where           reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    group           reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    having          reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    order           reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    end             reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    else            reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    when            reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    constraint      reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    default         reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    primary         reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    references      reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    null            reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    asc             reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)
    desc            reduce using rule 85 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING .)


state 501

    (122) ORDER -> order by LEXP ORD .

    r_from          reduce using rule 122 (ORDER -> order by LEXP ORD .)
    limit           reduce using rule 122 (ORDER -> order by LEXP ORD .)
    offset          reduce using rule 122 (ORDER -> order by LEXP ORD .)
    union           reduce using rule 122 (ORDER -> order by LEXP ORD .)
    intersect       reduce using rule 122 (ORDER -> order by LEXP ORD .)
    except          reduce using rule 122 (ORDER -> order by LEXP ORD .)
    ptcoma          reduce using rule 122 (ORDER -> order by LEXP ORD .)
    mas             reduce using rule 122 (ORDER -> order by LEXP ORD .)
    menos           reduce using rule 122 (ORDER -> order by LEXP ORD .)
    multiplicacion  reduce using rule 122 (ORDER -> order by LEXP ORD .)
    division        reduce using rule 122 (ORDER -> order by LEXP ORD .)
    modulo          reduce using rule 122 (ORDER -> order by LEXP ORD .)
    elevado         reduce using rule 122 (ORDER -> order by LEXP ORD .)
    and             reduce using rule 122 (ORDER -> order by LEXP ORD .)
    or              reduce using rule 122 (ORDER -> order by LEXP ORD .)
    mayor           reduce using rule 122 (ORDER -> order by LEXP ORD .)
    menor           reduce using rule 122 (ORDER -> order by LEXP ORD .)
    mayor_igual     reduce using rule 122 (ORDER -> order by LEXP ORD .)
    menor_igual     reduce using rule 122 (ORDER -> order by LEXP ORD .)
    igual           reduce using rule 122 (ORDER -> order by LEXP ORD .)
    diferente1      reduce using rule 122 (ORDER -> order by LEXP ORD .)
    diferente2      reduce using rule 122 (ORDER -> order by LEXP ORD .)
    punto           reduce using rule 122 (ORDER -> order by LEXP ORD .)
    between         reduce using rule 122 (ORDER -> order by LEXP ORD .)
    in              reduce using rule 122 (ORDER -> order by LEXP ORD .)
    not             reduce using rule 122 (ORDER -> order by LEXP ORD .)
    is              reduce using rule 122 (ORDER -> order by LEXP ORD .)
    isnull          reduce using rule 122 (ORDER -> order by LEXP ORD .)
    notnull         reduce using rule 122 (ORDER -> order by LEXP ORD .)
    id              reduce using rule 122 (ORDER -> order by LEXP ORD .)
    as              reduce using rule 122 (ORDER -> order by LEXP ORD .)
    coma            reduce using rule 122 (ORDER -> order by LEXP ORD .)
    parc            reduce using rule 122 (ORDER -> order by LEXP ORD .)
    then            reduce using rule 122 (ORDER -> order by LEXP ORD .)
    where           reduce using rule 122 (ORDER -> order by LEXP ORD .)
    group           reduce using rule 122 (ORDER -> order by LEXP ORD .)
    having          reduce using rule 122 (ORDER -> order by LEXP ORD .)
    order           reduce using rule 122 (ORDER -> order by LEXP ORD .)
    end             reduce using rule 122 (ORDER -> order by LEXP ORD .)
    else            reduce using rule 122 (ORDER -> order by LEXP ORD .)
    when            reduce using rule 122 (ORDER -> order by LEXP ORD .)
    constraint      reduce using rule 122 (ORDER -> order by LEXP ORD .)
    default         reduce using rule 122 (ORDER -> order by LEXP ORD .)
    primary         reduce using rule 122 (ORDER -> order by LEXP ORD .)
    references      reduce using rule 122 (ORDER -> order by LEXP ORD .)
    null            reduce using rule 122 (ORDER -> order by LEXP ORD .)
    asc             reduce using rule 122 (ORDER -> order by LEXP ORD .)
    desc            reduce using rule 122 (ORDER -> order by LEXP ORD .)


state 502

    (125) ORD -> asc .

    r_from          reduce using rule 125 (ORD -> asc .)
    limit           reduce using rule 125 (ORD -> asc .)
    offset          reduce using rule 125 (ORD -> asc .)
    union           reduce using rule 125 (ORD -> asc .)
    intersect       reduce using rule 125 (ORD -> asc .)
    except          reduce using rule 125 (ORD -> asc .)
    ptcoma          reduce using rule 125 (ORD -> asc .)
    mas             reduce using rule 125 (ORD -> asc .)
    menos           reduce using rule 125 (ORD -> asc .)
    multiplicacion  reduce using rule 125 (ORD -> asc .)
    division        reduce using rule 125 (ORD -> asc .)
    modulo          reduce using rule 125 (ORD -> asc .)
    elevado         reduce using rule 125 (ORD -> asc .)
    and             reduce using rule 125 (ORD -> asc .)
    or              reduce using rule 125 (ORD -> asc .)
    mayor           reduce using rule 125 (ORD -> asc .)
    menor           reduce using rule 125 (ORD -> asc .)
    mayor_igual     reduce using rule 125 (ORD -> asc .)
    menor_igual     reduce using rule 125 (ORD -> asc .)
    igual           reduce using rule 125 (ORD -> asc .)
    diferente1      reduce using rule 125 (ORD -> asc .)
    diferente2      reduce using rule 125 (ORD -> asc .)
    punto           reduce using rule 125 (ORD -> asc .)
    between         reduce using rule 125 (ORD -> asc .)
    in              reduce using rule 125 (ORD -> asc .)
    not             reduce using rule 125 (ORD -> asc .)
    is              reduce using rule 125 (ORD -> asc .)
    isnull          reduce using rule 125 (ORD -> asc .)
    notnull         reduce using rule 125 (ORD -> asc .)
    id              reduce using rule 125 (ORD -> asc .)
    as              reduce using rule 125 (ORD -> asc .)
    coma            reduce using rule 125 (ORD -> asc .)
    parc            reduce using rule 125 (ORD -> asc .)
    then            reduce using rule 125 (ORD -> asc .)
    where           reduce using rule 125 (ORD -> asc .)
    group           reduce using rule 125 (ORD -> asc .)
    having          reduce using rule 125 (ORD -> asc .)
    order           reduce using rule 125 (ORD -> asc .)
    end             reduce using rule 125 (ORD -> asc .)
    else            reduce using rule 125 (ORD -> asc .)
    when            reduce using rule 125 (ORD -> asc .)
    constraint      reduce using rule 125 (ORD -> asc .)
    default         reduce using rule 125 (ORD -> asc .)
    primary         reduce using rule 125 (ORD -> asc .)
    references      reduce using rule 125 (ORD -> asc .)
    null            reduce using rule 125 (ORD -> asc .)
    asc             reduce using rule 125 (ORD -> asc .)
    desc            reduce using rule 125 (ORD -> asc .)


state 503

    (126) ORD -> desc .

    r_from          reduce using rule 126 (ORD -> desc .)
    limit           reduce using rule 126 (ORD -> desc .)
    offset          reduce using rule 126 (ORD -> desc .)
    union           reduce using rule 126 (ORD -> desc .)
    intersect       reduce using rule 126 (ORD -> desc .)
    except          reduce using rule 126 (ORD -> desc .)
    ptcoma          reduce using rule 126 (ORD -> desc .)
    mas             reduce using rule 126 (ORD -> desc .)
    menos           reduce using rule 126 (ORD -> desc .)
    multiplicacion  reduce using rule 126 (ORD -> desc .)
    division        reduce using rule 126 (ORD -> desc .)
    modulo          reduce using rule 126 (ORD -> desc .)
    elevado         reduce using rule 126 (ORD -> desc .)
    and             reduce using rule 126 (ORD -> desc .)
    or              reduce using rule 126 (ORD -> desc .)
    mayor           reduce using rule 126 (ORD -> desc .)
    menor           reduce using rule 126 (ORD -> desc .)
    mayor_igual     reduce using rule 126 (ORD -> desc .)
    menor_igual     reduce using rule 126 (ORD -> desc .)
    igual           reduce using rule 126 (ORD -> desc .)
    diferente1      reduce using rule 126 (ORD -> desc .)
    diferente2      reduce using rule 126 (ORD -> desc .)
    punto           reduce using rule 126 (ORD -> desc .)
    between         reduce using rule 126 (ORD -> desc .)
    in              reduce using rule 126 (ORD -> desc .)
    not             reduce using rule 126 (ORD -> desc .)
    is              reduce using rule 126 (ORD -> desc .)
    isnull          reduce using rule 126 (ORD -> desc .)
    notnull         reduce using rule 126 (ORD -> desc .)
    id              reduce using rule 126 (ORD -> desc .)
    as              reduce using rule 126 (ORD -> desc .)
    coma            reduce using rule 126 (ORD -> desc .)
    parc            reduce using rule 126 (ORD -> desc .)
    then            reduce using rule 126 (ORD -> desc .)
    where           reduce using rule 126 (ORD -> desc .)
    group           reduce using rule 126 (ORD -> desc .)
    having          reduce using rule 126 (ORD -> desc .)
    order           reduce using rule 126 (ORD -> desc .)
    end             reduce using rule 126 (ORD -> desc .)
    else            reduce using rule 126 (ORD -> desc .)
    when            reduce using rule 126 (ORD -> desc .)
    constraint      reduce using rule 126 (ORD -> desc .)
    default         reduce using rule 126 (ORD -> desc .)
    primary         reduce using rule 126 (ORD -> desc .)
    references      reduce using rule 126 (ORD -> desc .)
    null            reduce using rule 126 (ORD -> desc .)
    asc             reduce using rule 126 (ORD -> desc .)
    desc            reduce using rule 126 (ORD -> desc .)


state 504

    (72) OPCOLUMN -> constraint id check para EXP . parc
    (173) EXP -> EXP . mas EXP
    (174) EXP -> EXP . menos EXP
    (175) EXP -> EXP . multiplicacion EXP
    (176) EXP -> EXP . division EXP
    (177) EXP -> EXP . modulo EXP
    (178) EXP -> EXP . elevado EXP
    (179) EXP -> EXP . and EXP
    (180) EXP -> EXP . or EXP
    (181) EXP -> EXP . mayor EXP
    (182) EXP -> EXP . menor EXP
    (183) EXP -> EXP . mayor_igual EXP
    (184) EXP -> EXP . menor_igual EXP
    (185) EXP -> EXP . igual EXP
    (186) EXP -> EXP . diferente1 EXP
    (187) EXP -> EXP . diferente2 EXP
    (188) EXP -> EXP . punto EXP
    (215) PREDICADOS -> EXP . between EXP
    (216) PREDICADOS -> EXP . in para LEXP parc
    (217) PREDICADOS -> EXP . not in para LEXP parc
    (218) PREDICADOS -> EXP . not between EXP
    (219) PREDICADOS -> EXP . between symetric EXP
    (220) PREDICADOS -> EXP . not between symetric EXP
    (221) PREDICADOS -> EXP . is distinct r_from EXP
    (222) PREDICADOS -> EXP . is not distinct r_from EXP
    (223) PREDICADOS -> EXP . is PNULL
    (224) PREDICADOS -> EXP . isnull
    (225) PREDICADOS -> EXP . notnull
    (226) PREDICADOS -> EXP . is true
    (227) PREDICADOS -> EXP . is not true
    (228) PREDICADOS -> EXP . is false
    (229) PREDICADOS -> EXP . is not false
    (230) PREDICADOS -> EXP . is unknown
    (231) PREDICADOS -> EXP . is not unknown

    parc            shift and go to state 511
    mas             shift and go to state 88
    menos           shift and go to state 89
    multiplicacion  shift and go to state 90
    division        shift and go to state 91
    modulo          shift and go to state 92
    elevado         shift and go to state 93
    and             shift and go to state 94
    or              shift and go to state 95
    mayor           shift and go to state 96
    menor           shift and go to state 97
    mayor_igual     shift and go to state 98
    menor_igual     shift and go to state 99
    igual           shift and go to state 100
    diferente1      shift and go to state 101
    diferente2      shift and go to state 102
    punto           shift and go to state 103
    between         shift and go to state 104
    in              shift and go to state 105
    not             shift and go to state 106
    is              shift and go to state 107
    isnull          shift and go to state 108
    notnull         shift and go to state 109


state 505

    (151) TIPO -> timestamp para int parc without time . zone

    zone            shift and go to state 512


state 506

    (153) TIPO -> timestamp para int parc with time . zone

    zone            shift and go to state 513


state 507

    (158) TIPO -> time para int parc without time . zone

    zone            shift and go to state 514


state 508

    (160) TIPO -> time para int parc with time . zone

    zone            shift and go to state 515


state 509

    (80) OPCONST -> foreign key para LEXP parc references table . para LEXP parc

    para            shift and go to state 516


state 510

    (46) ADD -> foreign key para id parc references id . para id parc

    para            shift and go to state 517


state 511

    (72) OPCOLUMN -> constraint id check para EXP parc .

    constraint      reduce using rule 72 (OPCOLUMN -> constraint id check para EXP parc .)
    default         reduce using rule 72 (OPCOLUMN -> constraint id check para EXP parc .)
    primary         reduce using rule 72 (OPCOLUMN -> constraint id check para EXP parc .)
    references      reduce using rule 72 (OPCOLUMN -> constraint id check para EXP parc .)
    not             reduce using rule 72 (OPCOLUMN -> constraint id check para EXP parc .)
    null            reduce using rule 72 (OPCOLUMN -> constraint id check para EXP parc .)
    parc            reduce using rule 72 (OPCOLUMN -> constraint id check para EXP parc .)
    coma            reduce using rule 72 (OPCOLUMN -> constraint id check para EXP parc .)


state 512

    (151) TIPO -> timestamp para int parc without time zone .

    constraint      reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    default         reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    primary         reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    references      reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    not             reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    null            reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    parc            reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    coma            reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)
    ptcoma          reduce using rule 151 (TIPO -> timestamp para int parc without time zone .)


state 513

    (153) TIPO -> timestamp para int parc with time zone .

    constraint      reduce using rule 153 (TIPO -> timestamp para int parc with time zone .)
    default         reduce using rule 153 (TIPO -> timestamp para int parc with time zone .)
    primary         reduce using rule 153 (TIPO -> timestamp para int parc with time zone .)
    references      reduce using rule 153 (TIPO -> timestamp para int parc with time zone .)
    not             reduce using rule 153 (TIPO -> timestamp para int parc with time zone .)
    null            reduce using rule 153 (TIPO -> timestamp para int parc with time zone .)
    parc            reduce using rule 153 (TIPO -> timestamp para int parc with time zone .)
    coma            reduce using rule 153 (TIPO -> timestamp para int parc with time zone .)
    ptcoma          reduce using rule 153 (TIPO -> timestamp para int parc with time zone .)


state 514

    (158) TIPO -> time para int parc without time zone .

    constraint      reduce using rule 158 (TIPO -> time para int parc without time zone .)
    default         reduce using rule 158 (TIPO -> time para int parc without time zone .)
    primary         reduce using rule 158 (TIPO -> time para int parc without time zone .)
    references      reduce using rule 158 (TIPO -> time para int parc without time zone .)
    not             reduce using rule 158 (TIPO -> time para int parc without time zone .)
    null            reduce using rule 158 (TIPO -> time para int parc without time zone .)
    parc            reduce using rule 158 (TIPO -> time para int parc without time zone .)
    coma            reduce using rule 158 (TIPO -> time para int parc without time zone .)
    ptcoma          reduce using rule 158 (TIPO -> time para int parc without time zone .)


state 515

    (160) TIPO -> time para int parc with time zone .

    constraint      reduce using rule 160 (TIPO -> time para int parc with time zone .)
    default         reduce using rule 160 (TIPO -> time para int parc with time zone .)
    primary         reduce using rule 160 (TIPO -> time para int parc with time zone .)
    references      reduce using rule 160 (TIPO -> time para int parc with time zone .)
    not             reduce using rule 160 (TIPO -> time para int parc with time zone .)
    null            reduce using rule 160 (TIPO -> time para int parc with time zone .)
    parc            reduce using rule 160 (TIPO -> time para int parc with time zone .)
    coma            reduce using rule 160 (TIPO -> time para int parc with time zone .)
    ptcoma          reduce using rule 160 (TIPO -> time para int parc with time zone .)


state 516

    (80) OPCONST -> foreign key para LEXP parc references table para . LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (173) EXP -> . EXP mas EXP
    (174) EXP -> . EXP menos EXP
    (175) EXP -> . EXP multiplicacion EXP
    (176) EXP -> . EXP division EXP
    (177) EXP -> . EXP modulo EXP
    (178) EXP -> . EXP elevado EXP
    (179) EXP -> . EXP and EXP
    (180) EXP -> . EXP or EXP
    (181) EXP -> . EXP mayor EXP
    (182) EXP -> . EXP menor EXP
    (183) EXP -> . EXP mayor_igual EXP
    (184) EXP -> . EXP menor_igual EXP
    (185) EXP -> . EXP igual EXP
    (186) EXP -> . EXP diferente1 EXP
    (187) EXP -> . EXP diferente2 EXP
    (188) EXP -> . EXP punto EXP
    (189) EXP -> . mas EXP
    (190) EXP -> . menos EXP
    (191) EXP -> . not EXP
    (192) EXP -> . para EXP parc
    (193) EXP -> . int
    (194) EXP -> . decimales
    (195) EXP -> . cadena
    (196) EXP -> . true
    (197) EXP -> . false
    (198) EXP -> . id
    (199) EXP -> . PNULL
    (200) EXP -> . SELECT
    (201) EXP -> . PREDICADOS
    (202) EXP -> . id para parc
    (203) EXP -> . id para LEXP parc
    (204) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (205) EXP -> . current_time
    (206) EXP -> . current_date
    (207) EXP -> . timestamp cadena
    (208) EXP -> . interval cadena
    (209) EXP -> . CASE
    (210) EXP -> . cadena like cadena
    (211) EXP -> . cadena not like cadena
    (212) EXP -> . any para LEXP parc
    (213) EXP -> . all para LEXP parc
    (214) EXP -> . some para LEXP parc
    (77) PNULL -> . not null
    (78) PNULL -> . null
    (85) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (86) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER LIMIT COMBINING
    (87) SELECT -> . select LSELECT LIMIT COMBINING
    (215) PREDICADOS -> . EXP between EXP
    (216) PREDICADOS -> . EXP in para LEXP parc
    (217) PREDICADOS -> . EXP not in para LEXP parc
    (218) PREDICADOS -> . EXP not between EXP
    (219) PREDICADOS -> . EXP between symetric EXP
    (220) PREDICADOS -> . EXP not between symetric EXP
    (221) PREDICADOS -> . EXP is distinct r_from EXP
    (222) PREDICADOS -> . EXP is not distinct r_from EXP
    (223) PREDICADOS -> . EXP is PNULL
    (224) PREDICADOS -> . EXP isnull
    (225) PREDICADOS -> . EXP notnull
    (226) PREDICADOS -> . EXP is true
    (227) PREDICADOS -> . EXP is not true
    (228) PREDICADOS -> . EXP is false
    (229) PREDICADOS -> . EXP is not false
    (230) PREDICADOS -> . EXP is unknown
    (231) PREDICADOS -> . EXP is not unknown
    (15) CASE -> . case LISTAWHEN ELSE end
    (16) CASE -> . case LISTAWHEN end

    mas             shift and go to state 41
    menos           shift and go to state 42
    not             shift and go to state 43
    para            shift and go to state 44
    int             shift and go to state 45
    decimales       shift and go to state 46
    cadena          shift and go to state 47
    true            shift and go to state 48
    false           shift and go to state 49
    id              shift and go to state 38
    extract         shift and go to state 53
    current_time    shift and go to state 55
    current_date    shift and go to state 56
    timestamp       shift and go to state 54
    interval        shift and go to state 57
    any             shift and go to state 59
    all             shift and go to state 60
    some            shift and go to state 61
    null            shift and go to state 62
    select          shift and go to state 15
    case            shift and go to state 23

    LEXP                           shift and go to state 518
    EXP                            shift and go to state 40
    PNULL                          shift and go to state 50
    SELECT                         shift and go to state 51
    PREDICADOS                     shift and go to state 52
    CASE                           shift and go to state 58

state 517

    (46) ADD -> foreign key para id parc references id para . id parc

    id              shift and go to state 519


state 518

    (80) OPCONST -> foreign key para LEXP parc references table para LEXP . parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 520
    coma            shift and go to state 86


state 519

    (46) ADD -> foreign key para id parc references id para id . parc

    parc            shift and go to state 521


state 520

    (80) OPCONST -> foreign key para LEXP parc references table para LEXP parc .

    parc            reduce using rule 80 (OPCONST -> foreign key para LEXP parc references table para LEXP parc .)
    coma            reduce using rule 80 (OPCONST -> foreign key para LEXP parc references table para LEXP parc .)


state 521

    (46) ADD -> foreign key para id parc references id para id parc .

    ptcoma          reduce using rule 46 (ADD -> foreign key para id parc references id para id parc .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for r_from in state 36 resolved as shift
WARNING: shift/reduce conflict for limit in state 36 resolved as shift
WARNING: shift/reduce conflict for offset in state 36 resolved as shift
WARNING: shift/reduce conflict for id in state 37 resolved as shift
WARNING: shift/reduce conflict for as in state 37 resolved as shift
WARNING: shift/reduce conflict for coma in state 37 resolved as shift
WARNING: shift/reduce conflict for mas in state 40 resolved as shift
WARNING: shift/reduce conflict for menos in state 40 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 40 resolved as shift
WARNING: shift/reduce conflict for division in state 40 resolved as shift
WARNING: shift/reduce conflict for modulo in state 40 resolved as shift
WARNING: shift/reduce conflict for elevado in state 40 resolved as shift
WARNING: shift/reduce conflict for and in state 40 resolved as shift
WARNING: shift/reduce conflict for or in state 40 resolved as shift
WARNING: shift/reduce conflict for mayor in state 40 resolved as shift
WARNING: shift/reduce conflict for menor in state 40 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 40 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 40 resolved as shift
WARNING: shift/reduce conflict for igual in state 40 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 40 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 40 resolved as shift
WARNING: shift/reduce conflict for punto in state 40 resolved as shift
WARNING: shift/reduce conflict for between in state 40 resolved as shift
WARNING: shift/reduce conflict for in in state 40 resolved as shift
WARNING: shift/reduce conflict for not in state 40 resolved as shift
WARNING: shift/reduce conflict for is in state 40 resolved as shift
WARNING: shift/reduce conflict for isnull in state 40 resolved as shift
WARNING: shift/reduce conflict for notnull in state 40 resolved as shift
WARNING: shift/reduce conflict for not in state 47 resolved as shift
WARNING: shift/reduce conflict for union in state 81 resolved as shift
WARNING: shift/reduce conflict for intersect in state 81 resolved as shift
WARNING: shift/reduce conflict for except in state 81 resolved as shift
WARNING: shift/reduce conflict for union in state 142 resolved as shift
WARNING: shift/reduce conflict for coma in state 142 resolved as shift
WARNING: shift/reduce conflict for where in state 142 resolved as shift
WARNING: shift/reduce conflict for as in state 144 resolved as shift
WARNING: shift/reduce conflict for id in state 144 resolved as shift
WARNING: shift/reduce conflict for coma in state 144 resolved as shift
WARNING: shift/reduce conflict for offset in state 150 resolved as shift
WARNING: shift/reduce conflict for offset in state 151 resolved as shift
WARNING: shift/reduce conflict for limit in state 152 resolved as shift
WARNING: shift/reduce conflict for mas in state 154 resolved as shift
WARNING: shift/reduce conflict for menos in state 154 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 154 resolved as shift
WARNING: shift/reduce conflict for division in state 154 resolved as shift
WARNING: shift/reduce conflict for modulo in state 154 resolved as shift
WARNING: shift/reduce conflict for elevado in state 154 resolved as shift
WARNING: shift/reduce conflict for and in state 154 resolved as shift
WARNING: shift/reduce conflict for or in state 154 resolved as shift
WARNING: shift/reduce conflict for mayor in state 154 resolved as shift
WARNING: shift/reduce conflict for menor in state 154 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 154 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 154 resolved as shift
WARNING: shift/reduce conflict for igual in state 154 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 154 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 154 resolved as shift
WARNING: shift/reduce conflict for punto in state 154 resolved as shift
WARNING: shift/reduce conflict for between in state 154 resolved as shift
WARNING: shift/reduce conflict for in in state 154 resolved as shift
WARNING: shift/reduce conflict for not in state 154 resolved as shift
WARNING: shift/reduce conflict for is in state 154 resolved as shift
WARNING: shift/reduce conflict for isnull in state 154 resolved as shift
WARNING: shift/reduce conflict for notnull in state 154 resolved as shift
WARNING: shift/reduce conflict for union in state 224 resolved as shift
WARNING: shift/reduce conflict for coma in state 224 resolved as shift
WARNING: shift/reduce conflict for where in state 224 resolved as shift
WARNING: shift/reduce conflict for group in state 225 resolved as shift
WARNING: shift/reduce conflict for coma in state 231 resolved as shift
WARNING: shift/reduce conflict for coma in state 233 resolved as shift
WARNING: shift/reduce conflict for coma in state 235 resolved as shift
WARNING: shift/reduce conflict for group in state 294 resolved as shift
WARNING: shift/reduce conflict for having in state 295 resolved as shift
WARNING: shift/reduce conflict for coma in state 298 resolved as shift
WARNING: shift/reduce conflict for coma in state 301 resolved as shift
WARNING: shift/reduce conflict for coma in state 304 resolved as shift
WARNING: shift/reduce conflict for coma in state 306 resolved as shift
WARNING: shift/reduce conflict for coma in state 307 resolved as shift
WARNING: shift/reduce conflict for having in state 367 resolved as shift
WARNING: shift/reduce conflict for order in state 368 resolved as shift
WARNING: shift/reduce conflict for coma in state 372 resolved as shift
WARNING: shift/reduce conflict for parc in state 373 resolved as shift
WARNING: shift/reduce conflict for order in state 421 resolved as shift
WARNING: shift/reduce conflict for limit in state 422 resolved as shift
WARNING: shift/reduce conflict for offset in state 422 resolved as shift
WARNING: shift/reduce conflict for coma in state 424 resolved as shift
WARNING: shift/reduce conflict for coma in state 425 resolved as shift
WARNING: shift/reduce conflict for not in state 430 resolved as shift
WARNING: shift/reduce conflict for limit in state 461 resolved as shift
WARNING: shift/reduce conflict for offset in state 461 resolved as shift
WARNING: shift/reduce conflict for union in state 462 resolved as shift
WARNING: shift/reduce conflict for intersect in state 462 resolved as shift
WARNING: shift/reduce conflict for except in state 462 resolved as shift
WARNING: shift/reduce conflict for union in state 486 resolved as shift
WARNING: shift/reduce conflict for intersect in state 486 resolved as shift
WARNING: shift/reduce conflict for except in state 486 resolved as shift
WARNING: shift/reduce conflict for coma in state 488 resolved as shift
WARNING: shift/reduce conflict for asc in state 488 resolved as shift
WARNING: shift/reduce conflict for desc in state 488 resolved as shift
WARNING: reduce/reduce conflict in state 113 resolved using rule (PNULL -> not null)
WARNING: rejected rule (PNULL -> null) in state 113
