Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    dospuntos
    ilike
    like
    llavea
    llavec
    mode
    replace
    show
    simboloor
    similar
    without
    zone

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> SELECT ptcoma
Rule 5     instruccion -> CREATETABLE
Rule 6     instruccion -> UPDATE ptcoma
Rule 7     instruccion -> DELETE ptcoma
Rule 8     instruccion -> ALTER ptcoma
Rule 9     instruccion -> DROP ptcoma
Rule 10    instruccion -> INSERT ptcoma
Rule 11    instruccion -> CREATETYPE ptcoma
Rule 12    instruccion -> CASE ptcoma
Rule 13    CASE -> case LISTAWHEN ELSE end
Rule 14    CASE -> case LISTAWHEN end
Rule 15    LISTAWHEN -> LISTAWHEN WHEN
Rule 16    LISTAWHEN -> WHEN
Rule 17    WHEN -> when LEXP then LEXP
Rule 18    ELSE -> else LEXP
Rule 19    INSERT -> insert into id values para LEXP parc
Rule 20    DROP -> drop table id
Rule 21    DROP -> drop databases if exist id
Rule 22    DROP -> drop databases id
Rule 23    ALTER -> alter databases id RO
Rule 24    ALTER -> altertable
Rule 25    RO -> rename to id
Rule 26    RO -> owner to id
Rule 27    altertable -> alter table id OP
Rule 28    OP -> add ADD
Rule 29    OP -> drop column ALTERDROP
Rule 30    OP -> alter column id set not null
Rule 31    OP -> alter column id set null
Rule 32    OP -> listaalc
Rule 33    OP -> drop ALTERDROP
Rule 34    OP -> rename column id to id
Rule 35    listaalc -> listaalc coma alc
Rule 36    listaalc -> alc
Rule 37    alc -> alter column id type TIPO
Rule 38    ALTERDROP -> constraint id
Rule 39    ALTERDROP -> column LISTACOLUMN
Rule 40    ALTERDROP -> check id
Rule 41    ADD -> column id TIPO
Rule 42    ADD -> check para LEXP parc
Rule 43    ADD -> constraint id unique para id parc
Rule 44    ADD -> foreign key para id parc references id para id parc
Rule 45    LISTACOLUMN -> LISTACOLUMN coma id
Rule 46    LISTACOLUMN -> id
Rule 47    CREATETABLE -> create table id para LDEF parc ptcoma
Rule 48    CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma
Rule 49    LDEF -> LDEF coma COLDEF
Rule 50    LDEF -> COLDEF
Rule 51    COLDEF -> OPCONST
Rule 52    COLDEF -> constraint id OPCONST
Rule 53    COLDEF -> id TIPO
Rule 54    COLDEF -> id TIPO LOPCOLUMN
Rule 55    LOPCOLUMN -> LOPCOLUMN OPCOLUMN
Rule 56    LOPCOLUMN -> OPCOLUMN
Rule 57    OPCOLUMN -> constraint id unique
Rule 58    OPCOLUMN -> constraint id check para EXP parc
Rule 59    OPCOLUMN -> default EXP
Rule 60    OPCOLUMN -> PNULL
Rule 61    OPCOLUMN -> primary key
Rule 62    OPCOLUMN -> references id
Rule 63    PNULL -> not null
Rule 64    PNULL -> null
Rule 65    OPCONST -> primary key para LEXP parc
Rule 66    OPCONST -> foreign key para LEXP parc references table para LEXP parc
Rule 67    OPCONST -> unique para LEXP parc
Rule 68    OPCONST -> check para EXP parc
Rule 69    HERENCIA -> inherits para LEXP parc
Rule 70    CREATETYPE -> create type id as enum para LEXP parc
Rule 71    SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
Rule 72    SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
Rule 73    SELECT -> select LSELECT
Rule 74    LSELECT -> LEXP
Rule 75    LSELECT -> multiplicacion
Rule 76    LFROM -> LFROM coma FROM
Rule 77    LFROM -> FROM
Rule 78    FROM -> EXP
Rule 79    FROM -> EXP as id
Rule 80    FROM -> EXP id
Rule 81    WHERE -> where EXP
Rule 82    WHERE -> <empty>
Rule 83    GROUP -> group by EXP
Rule 84    GROUP -> <empty>
Rule 85    HAVING -> having EXP
Rule 86    HAVING -> <empty>
Rule 87    ORDER -> order by EXP ORD
Rule 88    ORDER -> order by EXP
Rule 89    ORDER -> <empty>
Rule 90    ORD -> asc
Rule 91    ORD -> desc
Rule 92    UPDATE -> update id set LCAMPOS where EXP
Rule 93    LCAMPOS -> LCAMPOS id igual EXP
Rule 94    LCAMPOS -> id igual EXP
Rule 95    LCAMPOS -> id igual default
Rule 96    DELETE -> delete r_from id where EXP
Rule 97    DELETE -> delete r_from id
Rule 98    LEXP -> LEXP coma EXP
Rule 99    LEXP -> EXP
Rule 100   TIPO -> smallint
Rule 101   TIPO -> integer
Rule 102   TIPO -> bigint
Rule 103   TIPO -> decimal para LEXP parc
Rule 104   TIPO -> numeric para LEXP parc
Rule 105   TIPO -> real
Rule 106   TIPO -> double precision
Rule 107   TIPO -> money
Rule 108   TIPO -> character varying para int parc
Rule 109   TIPO -> varchar para int parc
Rule 110   TIPO -> character para int parc
Rule 111   TIPO -> char para int parc
Rule 112   TIPO -> text
Rule 113   TIPO -> timestamp
Rule 114   TIPO -> timestamp para int parc
Rule 115   TIPO -> date
Rule 116   TIPO -> time
Rule 117   TIPO -> time para int parc
Rule 118   TIPO -> interval
Rule 119   TIPO -> interval para int parc
Rule 120   TIPO -> interval cadena
Rule 121   TIPO -> interval para int parc cadena
Rule 122   TIPO -> boolean
Rule 123   FIELDS -> year
Rule 124   FIELDS -> month
Rule 125   FIELDS -> day
Rule 126   FIELDS -> hour
Rule 127   FIELDS -> minute
Rule 128   FIELDS -> second
Rule 129   EXP -> EXP mas EXP
Rule 130   EXP -> EXP menos EXP
Rule 131   EXP -> EXP multiplicacion EXP
Rule 132   EXP -> EXP division EXP
Rule 133   EXP -> EXP modulo EXP
Rule 134   EXP -> EXP elevado EXP
Rule 135   EXP -> EXP and EXP
Rule 136   EXP -> EXP or EXP
Rule 137   EXP -> EXP mayor EXP
Rule 138   EXP -> EXP menor EXP
Rule 139   EXP -> EXP mayor_igual EXP
Rule 140   EXP -> EXP menor_igual EXP
Rule 141   EXP -> EXP igual EXP
Rule 142   EXP -> EXP diferente1 EXP
Rule 143   EXP -> EXP diferente2 EXP
Rule 144   EXP -> EXP punto EXP
Rule 145   EXP -> mas EXP
Rule 146   EXP -> menos EXP
Rule 147   EXP -> not EXP
Rule 148   EXP -> para EXP parc
Rule 149   EXP -> int
Rule 150   EXP -> decimales
Rule 151   EXP -> cadena
Rule 152   EXP -> true
Rule 153   EXP -> false
Rule 154   EXP -> id
Rule 155   EXP -> SELECT
Rule 156   EXP -> PREDICADOS
Rule 157   EXP -> id para parc
Rule 158   EXP -> id para LEXP parc
Rule 159   EXP -> extract para FIELDS r_from timestamp cadena parc
Rule 160   EXP -> current_time
Rule 161   EXP -> current_date
Rule 162   EXP -> timestamp cadena
Rule 163   EXP -> interval cadena
Rule 164   EXP -> CASE
Rule 165   PREDICADOS -> EXP between EXP
Rule 166   PREDICADOS -> EXP in EXP
Rule 167   PREDICADOS -> EXP not in EXP
Rule 168   PREDICADOS -> EXP not between EXP
Rule 169   PREDICADOS -> EXP between symetric EXP
Rule 170   PREDICADOS -> EXP not between symetric EXP
Rule 171   PREDICADOS -> EXP is distinct r_from EXP
Rule 172   PREDICADOS -> EXP is not distinct r_from EXP
Rule 173   PREDICADOS -> EXP is PNULL
Rule 174   PREDICADOS -> EXP isnull
Rule 175   PREDICADOS -> EXP notnull
Rule 176   PREDICADOS -> EXP is true
Rule 177   PREDICADOS -> EXP is not true
Rule 178   PREDICADOS -> EXP is false
Rule 179   PREDICADOS -> EXP is not false
Rule 180   PREDICADOS -> EXP is unknown
Rule 181   PREDICADOS -> EXP is not unknown

Terminals, with rules where they appear

add                  : 28
alter                : 23 27 30 31 37
and                  : 135
as                   : 70 79
asc                  : 90
between              : 165 168 169 170
bigint               : 102
boolean              : 122
by                   : 83 87 88
cadena               : 120 121 151 159 162 163
case                 : 13 14
char                 : 111
character            : 108 110
check                : 40 42 58 68
column               : 29 30 31 34 37 39 41
coma                 : 35 45 49 76 98
constraint           : 38 43 52 57 58
create               : 47 48 70
current_date         : 161
current_time         : 160
databases            : 21 22 23
date                 : 115
day                  : 125
decimal              : 103
decimales            : 150
default              : 59 95
delete               : 96 97
desc                 : 91
diferente1           : 142
diferente2           : 143
distinct             : 71 171 172
division             : 132
dospuntos            : 
double               : 106
drop                 : 20 21 22 29 33
elevado              : 134
else                 : 18
end                  : 13 14
enum                 : 70
error                : 
exist                : 21
extract              : 159
false                : 153 178 179
foreign              : 44 66
group                : 83
having               : 85
hour                 : 126
id                   : 19 20 21 22 23 25 26 27 30 31 34 34 37 38 40 41 43 43 44 44 44 45 46 47 48 52 53 54 57 58 62 70 79 80 92 93 94 95 96 97 154 157 158
if                   : 21
igual                : 93 94 95 141
ilike                : 
in                   : 166 167
inherits             : 69
insert               : 19
int                  : 108 109 110 111 114 117 119 121 149
integer              : 101
interval             : 118 119 120 121 163
into                 : 19
is                   : 171 172 173 176 177 178 179 180 181
isnull               : 174
key                  : 44 61 65 66
like                 : 
llavea               : 
llavec               : 
mas                  : 129 145
mayor                : 137
mayor_igual          : 139
menor                : 138
menor_igual          : 140
menos                : 130 146
minute               : 127
mode                 : 
modulo               : 133
money                : 107
month                : 124
multiplicacion       : 75 131
not                  : 30 63 147 167 168 170 172 177 179 181
notnull              : 175
null                 : 30 31 63 64
numeric              : 104
or                   : 136
order                : 87 88
owner                : 26
para                 : 19 42 43 44 44 47 48 58 65 66 66 67 68 69 70 103 104 108 109 110 111 114 117 119 121 148 157 158 159
parc                 : 19 42 43 44 44 47 48 58 65 66 66 67 68 69 70 103 104 108 109 110 111 114 117 119 121 148 157 158 159
precision            : 106
primary              : 61 65
ptcoma               : 4 6 7 8 9 10 11 12 47 48
punto                : 144
r_from               : 71 72 96 97 159 171 172
real                 : 105
references           : 44 62 66
rename               : 25 34
replace              : 
second               : 128
select               : 71 72 73
set                  : 30 31 92
show                 : 
simboloor            : 
similar              : 
smallint             : 100
symetric             : 169 170
table                : 20 27 47 48 66
text                 : 112
then                 : 17
time                 : 116 117
timestamp            : 113 114 159 162
to                   : 25 26 34
true                 : 152 176 177
type                 : 37 70
unique               : 43 57 67
unknown              : 180 181
update               : 92
values               : 19
varchar              : 109
varying              : 108
when                 : 17
where                : 81 92 96
without              : 
year                 : 123
zone                 : 

Nonterminals, with rules where they appear

ADD                  : 28
ALTER                : 8
ALTERDROP            : 29 33
CASE                 : 12 164
COLDEF               : 49 50
CREATETABLE          : 5
CREATETYPE           : 11
DELETE               : 7
DROP                 : 9
ELSE                 : 13
EXP                  : 58 59 68 78 79 80 81 83 85 87 88 92 93 94 96 98 99 129 129 130 130 131 131 132 132 133 133 134 134 135 135 136 136 137 137 138 138 139 139 140 140 141 141 142 142 143 143 144 144 145 146 147 148 165 165 166 166 167 167 168 168 169 169 170 170 171 171 172 172 173 174 175 176 177 178 179 180 181
FIELDS               : 159
FROM                 : 76 77
GROUP                : 71 72
HAVING               : 71 72
HERENCIA             : 48
INSERT               : 10
LCAMPOS              : 92 93
LDEF                 : 47 48 49
LEXP                 : 17 17 18 19 42 65 66 66 67 69 70 74 98 103 104 158
LFROM                : 71 72 76
LISTACOLUMN          : 39 45
LISTAWHEN            : 13 14 15
LOPCOLUMN            : 54 55
LSELECT              : 71 72 73
OP                   : 27
OPCOLUMN             : 55 56
OPCONST              : 51 52
ORD                  : 87
ORDER                : 71 72
PNULL                : 60 173
PREDICADOS           : 156
RO                   : 23
SELECT               : 4 155
TIPO                 : 37 41 53 54
UPDATE               : 6
WHEN                 : 15 16
WHERE                : 71 72
alc                  : 35 36
altertable           : 24
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2
listaalc             : 32 35

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . SELECT ptcoma
    (5) instruccion -> . CREATETABLE
    (6) instruccion -> . UPDATE ptcoma
    (7) instruccion -> . DELETE ptcoma
    (8) instruccion -> . ALTER ptcoma
    (9) instruccion -> . DROP ptcoma
    (10) instruccion -> . INSERT ptcoma
    (11) instruccion -> . CREATETYPE ptcoma
    (12) instruccion -> . CASE ptcoma
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (47) CREATETABLE -> . create table id para LDEF parc ptcoma
    (48) CREATETABLE -> . create table id para LDEF parc HERENCIA ptcoma
    (92) UPDATE -> . update id set LCAMPOS where EXP
    (96) DELETE -> . delete r_from id where EXP
    (97) DELETE -> . delete r_from id
    (23) ALTER -> . alter databases id RO
    (24) ALTER -> . altertable
    (20) DROP -> . drop table id
    (21) DROP -> . drop databases if exist id
    (22) DROP -> . drop databases id
    (19) INSERT -> . insert into id values para LEXP parc
    (70) CREATETYPE -> . create type id as enum para LEXP parc
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end
    (27) altertable -> . alter table id OP

    select          shift and go to state 13
    create          shift and go to state 14
    update          shift and go to state 15
    delete          shift and go to state 16
    alter           shift and go to state 17
    drop            shift and go to state 19
    insert          shift and go to state 20
    case            shift and go to state 21

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    SELECT                         shift and go to state 4
    CREATETABLE                    shift and go to state 5
    UPDATE                         shift and go to state 6
    DELETE                         shift and go to state 7
    ALTER                          shift and go to state 8
    DROP                           shift and go to state 9
    INSERT                         shift and go to state 10
    CREATETYPE                     shift and go to state 11
    CASE                           shift and go to state 12
    altertable                     shift and go to state 18

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . SELECT ptcoma
    (5) instruccion -> . CREATETABLE
    (6) instruccion -> . UPDATE ptcoma
    (7) instruccion -> . DELETE ptcoma
    (8) instruccion -> . ALTER ptcoma
    (9) instruccion -> . DROP ptcoma
    (10) instruccion -> . INSERT ptcoma
    (11) instruccion -> . CREATETYPE ptcoma
    (12) instruccion -> . CASE ptcoma
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (47) CREATETABLE -> . create table id para LDEF parc ptcoma
    (48) CREATETABLE -> . create table id para LDEF parc HERENCIA ptcoma
    (92) UPDATE -> . update id set LCAMPOS where EXP
    (96) DELETE -> . delete r_from id where EXP
    (97) DELETE -> . delete r_from id
    (23) ALTER -> . alter databases id RO
    (24) ALTER -> . altertable
    (20) DROP -> . drop table id
    (21) DROP -> . drop databases if exist id
    (22) DROP -> . drop databases id
    (19) INSERT -> . insert into id values para LEXP parc
    (70) CREATETYPE -> . create type id as enum para LEXP parc
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end
    (27) altertable -> . alter table id OP

    $end            reduce using rule 1 (init -> instrucciones .)
    select          shift and go to state 13
    create          shift and go to state 14
    update          shift and go to state 15
    delete          shift and go to state 16
    alter           shift and go to state 17
    drop            shift and go to state 19
    insert          shift and go to state 20
    case            shift and go to state 21

    instruccion                    shift and go to state 22
    SELECT                         shift and go to state 4
    CREATETABLE                    shift and go to state 5
    UPDATE                         shift and go to state 6
    DELETE                         shift and go to state 7
    ALTER                          shift and go to state 8
    DROP                           shift and go to state 9
    INSERT                         shift and go to state 10
    CREATETYPE                     shift and go to state 11
    CASE                           shift and go to state 12
    altertable                     shift and go to state 18

state 3

    (3) instrucciones -> instruccion .

    select          reduce using rule 3 (instrucciones -> instruccion .)
    create          reduce using rule 3 (instrucciones -> instruccion .)
    update          reduce using rule 3 (instrucciones -> instruccion .)
    delete          reduce using rule 3 (instrucciones -> instruccion .)
    alter           reduce using rule 3 (instrucciones -> instruccion .)
    drop            reduce using rule 3 (instrucciones -> instruccion .)
    insert          reduce using rule 3 (instrucciones -> instruccion .)
    case            reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> SELECT . ptcoma

    ptcoma          shift and go to state 23


state 5

    (5) instruccion -> CREATETABLE .

    select          reduce using rule 5 (instruccion -> CREATETABLE .)
    create          reduce using rule 5 (instruccion -> CREATETABLE .)
    update          reduce using rule 5 (instruccion -> CREATETABLE .)
    delete          reduce using rule 5 (instruccion -> CREATETABLE .)
    alter           reduce using rule 5 (instruccion -> CREATETABLE .)
    drop            reduce using rule 5 (instruccion -> CREATETABLE .)
    insert          reduce using rule 5 (instruccion -> CREATETABLE .)
    case            reduce using rule 5 (instruccion -> CREATETABLE .)
    $end            reduce using rule 5 (instruccion -> CREATETABLE .)


state 6

    (6) instruccion -> UPDATE . ptcoma

    ptcoma          shift and go to state 24


state 7

    (7) instruccion -> DELETE . ptcoma

    ptcoma          shift and go to state 25


state 8

    (8) instruccion -> ALTER . ptcoma

    ptcoma          shift and go to state 26


state 9

    (9) instruccion -> DROP . ptcoma

    ptcoma          shift and go to state 27


state 10

    (10) instruccion -> INSERT . ptcoma

    ptcoma          shift and go to state 28


state 11

    (11) instruccion -> CREATETYPE . ptcoma

    ptcoma          shift and go to state 29


state 12

    (12) instruccion -> CASE . ptcoma

    ptcoma          shift and go to state 30


state 13

    (71) SELECT -> select . distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> select . LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> select . LSELECT
    (74) LSELECT -> . LEXP
    (75) LSELECT -> . multiplicacion
    (98) LEXP -> . LEXP coma EXP
    (99) LEXP -> . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    distinct        shift and go to state 31
    multiplicacion  shift and go to state 34
    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    LSELECT                        shift and go to state 32
    LEXP                           shift and go to state 33
    EXP                            shift and go to state 35
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 14

    (47) CREATETABLE -> create . table id para LDEF parc ptcoma
    (48) CREATETABLE -> create . table id para LDEF parc HERENCIA ptcoma
    (70) CREATETYPE -> create . type id as enum para LEXP parc

    table           shift and go to state 54
    type            shift and go to state 55


state 15

    (92) UPDATE -> update . id set LCAMPOS where EXP

    id              shift and go to state 56


state 16

    (96) DELETE -> delete . r_from id where EXP
    (97) DELETE -> delete . r_from id

    r_from          shift and go to state 57


state 17

    (23) ALTER -> alter . databases id RO
    (27) altertable -> alter . table id OP

    databases       shift and go to state 58
    table           shift and go to state 59


state 18

    (24) ALTER -> altertable .

    ptcoma          reduce using rule 24 (ALTER -> altertable .)


state 19

    (20) DROP -> drop . table id
    (21) DROP -> drop . databases if exist id
    (22) DROP -> drop . databases id

    table           shift and go to state 60
    databases       shift and go to state 61


state 20

    (19) INSERT -> insert . into id values para LEXP parc

    into            shift and go to state 62


state 21

    (13) CASE -> case . LISTAWHEN ELSE end
    (14) CASE -> case . LISTAWHEN end
    (15) LISTAWHEN -> . LISTAWHEN WHEN
    (16) LISTAWHEN -> . WHEN
    (17) WHEN -> . when LEXP then LEXP

    when            shift and go to state 65

    LISTAWHEN                      shift and go to state 63
    WHEN                           shift and go to state 64

state 22

    (2) instrucciones -> instrucciones instruccion .

    select          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    create          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    update          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    delete          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    alter           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    drop            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    insert          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    case            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 23

    (4) instruccion -> SELECT ptcoma .

    select          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    create          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    update          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    delete          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    alter           reduce using rule 4 (instruccion -> SELECT ptcoma .)
    drop            reduce using rule 4 (instruccion -> SELECT ptcoma .)
    insert          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    case            reduce using rule 4 (instruccion -> SELECT ptcoma .)
    $end            reduce using rule 4 (instruccion -> SELECT ptcoma .)


state 24

    (6) instruccion -> UPDATE ptcoma .

    select          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    create          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    update          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    delete          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    alter           reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    drop            reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    insert          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    case            reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    $end            reduce using rule 6 (instruccion -> UPDATE ptcoma .)


state 25

    (7) instruccion -> DELETE ptcoma .

    select          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    create          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    update          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    delete          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    alter           reduce using rule 7 (instruccion -> DELETE ptcoma .)
    drop            reduce using rule 7 (instruccion -> DELETE ptcoma .)
    insert          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    case            reduce using rule 7 (instruccion -> DELETE ptcoma .)
    $end            reduce using rule 7 (instruccion -> DELETE ptcoma .)


state 26

    (8) instruccion -> ALTER ptcoma .

    select          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    create          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    update          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    delete          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    alter           reduce using rule 8 (instruccion -> ALTER ptcoma .)
    drop            reduce using rule 8 (instruccion -> ALTER ptcoma .)
    insert          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    case            reduce using rule 8 (instruccion -> ALTER ptcoma .)
    $end            reduce using rule 8 (instruccion -> ALTER ptcoma .)


state 27

    (9) instruccion -> DROP ptcoma .

    select          reduce using rule 9 (instruccion -> DROP ptcoma .)
    create          reduce using rule 9 (instruccion -> DROP ptcoma .)
    update          reduce using rule 9 (instruccion -> DROP ptcoma .)
    delete          reduce using rule 9 (instruccion -> DROP ptcoma .)
    alter           reduce using rule 9 (instruccion -> DROP ptcoma .)
    drop            reduce using rule 9 (instruccion -> DROP ptcoma .)
    insert          reduce using rule 9 (instruccion -> DROP ptcoma .)
    case            reduce using rule 9 (instruccion -> DROP ptcoma .)
    $end            reduce using rule 9 (instruccion -> DROP ptcoma .)


state 28

    (10) instruccion -> INSERT ptcoma .

    select          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    create          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    update          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    delete          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    alter           reduce using rule 10 (instruccion -> INSERT ptcoma .)
    drop            reduce using rule 10 (instruccion -> INSERT ptcoma .)
    insert          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    case            reduce using rule 10 (instruccion -> INSERT ptcoma .)
    $end            reduce using rule 10 (instruccion -> INSERT ptcoma .)


state 29

    (11) instruccion -> CREATETYPE ptcoma .

    select          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    create          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    update          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    delete          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    alter           reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    drop            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    insert          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    case            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    $end            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)


state 30

    (12) instruccion -> CASE ptcoma .

    select          reduce using rule 12 (instruccion -> CASE ptcoma .)
    create          reduce using rule 12 (instruccion -> CASE ptcoma .)
    update          reduce using rule 12 (instruccion -> CASE ptcoma .)
    delete          reduce using rule 12 (instruccion -> CASE ptcoma .)
    alter           reduce using rule 12 (instruccion -> CASE ptcoma .)
    drop            reduce using rule 12 (instruccion -> CASE ptcoma .)
    insert          reduce using rule 12 (instruccion -> CASE ptcoma .)
    case            reduce using rule 12 (instruccion -> CASE ptcoma .)
    $end            reduce using rule 12 (instruccion -> CASE ptcoma .)


state 31

    (71) SELECT -> select distinct . LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (74) LSELECT -> . LEXP
    (75) LSELECT -> . multiplicacion
    (98) LEXP -> . LEXP coma EXP
    (99) LEXP -> . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    multiplicacion  shift and go to state 34
    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    LSELECT                        shift and go to state 66
    LEXP                           shift and go to state 33
    EXP                            shift and go to state 35
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 32

    (72) SELECT -> select LSELECT . r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> select LSELECT .

  ! shift/reduce conflict for r_from resolved as shift
    r_from          shift and go to state 67
    ptcoma          reduce using rule 73 (SELECT -> select LSELECT .)
    mas             reduce using rule 73 (SELECT -> select LSELECT .)
    menos           reduce using rule 73 (SELECT -> select LSELECT .)
    multiplicacion  reduce using rule 73 (SELECT -> select LSELECT .)
    division        reduce using rule 73 (SELECT -> select LSELECT .)
    modulo          reduce using rule 73 (SELECT -> select LSELECT .)
    elevado         reduce using rule 73 (SELECT -> select LSELECT .)
    and             reduce using rule 73 (SELECT -> select LSELECT .)
    or              reduce using rule 73 (SELECT -> select LSELECT .)
    mayor           reduce using rule 73 (SELECT -> select LSELECT .)
    menor           reduce using rule 73 (SELECT -> select LSELECT .)
    mayor_igual     reduce using rule 73 (SELECT -> select LSELECT .)
    menor_igual     reduce using rule 73 (SELECT -> select LSELECT .)
    igual           reduce using rule 73 (SELECT -> select LSELECT .)
    diferente1      reduce using rule 73 (SELECT -> select LSELECT .)
    diferente2      reduce using rule 73 (SELECT -> select LSELECT .)
    punto           reduce using rule 73 (SELECT -> select LSELECT .)
    between         reduce using rule 73 (SELECT -> select LSELECT .)
    in              reduce using rule 73 (SELECT -> select LSELECT .)
    not             reduce using rule 73 (SELECT -> select LSELECT .)
    is              reduce using rule 73 (SELECT -> select LSELECT .)
    isnull          reduce using rule 73 (SELECT -> select LSELECT .)
    notnull         reduce using rule 73 (SELECT -> select LSELECT .)
    coma            reduce using rule 73 (SELECT -> select LSELECT .)
    parc            reduce using rule 73 (SELECT -> select LSELECT .)
    then            reduce using rule 73 (SELECT -> select LSELECT .)
    as              reduce using rule 73 (SELECT -> select LSELECT .)
    id              reduce using rule 73 (SELECT -> select LSELECT .)
    where           reduce using rule 73 (SELECT -> select LSELECT .)
    group           reduce using rule 73 (SELECT -> select LSELECT .)
    having          reduce using rule 73 (SELECT -> select LSELECT .)
    order           reduce using rule 73 (SELECT -> select LSELECT .)
    end             reduce using rule 73 (SELECT -> select LSELECT .)
    else            reduce using rule 73 (SELECT -> select LSELECT .)
    when            reduce using rule 73 (SELECT -> select LSELECT .)
    constraint      reduce using rule 73 (SELECT -> select LSELECT .)
    default         reduce using rule 73 (SELECT -> select LSELECT .)
    primary         reduce using rule 73 (SELECT -> select LSELECT .)
    references      reduce using rule 73 (SELECT -> select LSELECT .)
    null            reduce using rule 73 (SELECT -> select LSELECT .)
    asc             reduce using rule 73 (SELECT -> select LSELECT .)
    desc            reduce using rule 73 (SELECT -> select LSELECT .)

  ! r_from          [ reduce using rule 73 (SELECT -> select LSELECT .) ]


state 33

    (74) LSELECT -> LEXP .
    (98) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 74 (LSELECT -> LEXP .)
    ptcoma          reduce using rule 74 (LSELECT -> LEXP .)
    mas             reduce using rule 74 (LSELECT -> LEXP .)
    menos           reduce using rule 74 (LSELECT -> LEXP .)
    multiplicacion  reduce using rule 74 (LSELECT -> LEXP .)
    division        reduce using rule 74 (LSELECT -> LEXP .)
    modulo          reduce using rule 74 (LSELECT -> LEXP .)
    elevado         reduce using rule 74 (LSELECT -> LEXP .)
    and             reduce using rule 74 (LSELECT -> LEXP .)
    or              reduce using rule 74 (LSELECT -> LEXP .)
    mayor           reduce using rule 74 (LSELECT -> LEXP .)
    menor           reduce using rule 74 (LSELECT -> LEXP .)
    mayor_igual     reduce using rule 74 (LSELECT -> LEXP .)
    menor_igual     reduce using rule 74 (LSELECT -> LEXP .)
    igual           reduce using rule 74 (LSELECT -> LEXP .)
    diferente1      reduce using rule 74 (LSELECT -> LEXP .)
    diferente2      reduce using rule 74 (LSELECT -> LEXP .)
    punto           reduce using rule 74 (LSELECT -> LEXP .)
    between         reduce using rule 74 (LSELECT -> LEXP .)
    in              reduce using rule 74 (LSELECT -> LEXP .)
    not             reduce using rule 74 (LSELECT -> LEXP .)
    is              reduce using rule 74 (LSELECT -> LEXP .)
    isnull          reduce using rule 74 (LSELECT -> LEXP .)
    notnull         reduce using rule 74 (LSELECT -> LEXP .)
    parc            reduce using rule 74 (LSELECT -> LEXP .)
    then            reduce using rule 74 (LSELECT -> LEXP .)
    as              reduce using rule 74 (LSELECT -> LEXP .)
    id              reduce using rule 74 (LSELECT -> LEXP .)
    where           reduce using rule 74 (LSELECT -> LEXP .)
    group           reduce using rule 74 (LSELECT -> LEXP .)
    having          reduce using rule 74 (LSELECT -> LEXP .)
    order           reduce using rule 74 (LSELECT -> LEXP .)
    end             reduce using rule 74 (LSELECT -> LEXP .)
    else            reduce using rule 74 (LSELECT -> LEXP .)
    when            reduce using rule 74 (LSELECT -> LEXP .)
    constraint      reduce using rule 74 (LSELECT -> LEXP .)
    default         reduce using rule 74 (LSELECT -> LEXP .)
    primary         reduce using rule 74 (LSELECT -> LEXP .)
    references      reduce using rule 74 (LSELECT -> LEXP .)
    null            reduce using rule 74 (LSELECT -> LEXP .)
    asc             reduce using rule 74 (LSELECT -> LEXP .)
    desc            reduce using rule 74 (LSELECT -> LEXP .)
    coma            shift and go to state 68

  ! coma            [ reduce using rule 74 (LSELECT -> LEXP .) ]


state 34

    (75) LSELECT -> multiplicacion .

    r_from          reduce using rule 75 (LSELECT -> multiplicacion .)
    ptcoma          reduce using rule 75 (LSELECT -> multiplicacion .)
    mas             reduce using rule 75 (LSELECT -> multiplicacion .)
    menos           reduce using rule 75 (LSELECT -> multiplicacion .)
    multiplicacion  reduce using rule 75 (LSELECT -> multiplicacion .)
    division        reduce using rule 75 (LSELECT -> multiplicacion .)
    modulo          reduce using rule 75 (LSELECT -> multiplicacion .)
    elevado         reduce using rule 75 (LSELECT -> multiplicacion .)
    and             reduce using rule 75 (LSELECT -> multiplicacion .)
    or              reduce using rule 75 (LSELECT -> multiplicacion .)
    mayor           reduce using rule 75 (LSELECT -> multiplicacion .)
    menor           reduce using rule 75 (LSELECT -> multiplicacion .)
    mayor_igual     reduce using rule 75 (LSELECT -> multiplicacion .)
    menor_igual     reduce using rule 75 (LSELECT -> multiplicacion .)
    igual           reduce using rule 75 (LSELECT -> multiplicacion .)
    diferente1      reduce using rule 75 (LSELECT -> multiplicacion .)
    diferente2      reduce using rule 75 (LSELECT -> multiplicacion .)
    punto           reduce using rule 75 (LSELECT -> multiplicacion .)
    between         reduce using rule 75 (LSELECT -> multiplicacion .)
    in              reduce using rule 75 (LSELECT -> multiplicacion .)
    not             reduce using rule 75 (LSELECT -> multiplicacion .)
    is              reduce using rule 75 (LSELECT -> multiplicacion .)
    isnull          reduce using rule 75 (LSELECT -> multiplicacion .)
    notnull         reduce using rule 75 (LSELECT -> multiplicacion .)
    coma            reduce using rule 75 (LSELECT -> multiplicacion .)
    parc            reduce using rule 75 (LSELECT -> multiplicacion .)
    then            reduce using rule 75 (LSELECT -> multiplicacion .)
    as              reduce using rule 75 (LSELECT -> multiplicacion .)
    id              reduce using rule 75 (LSELECT -> multiplicacion .)
    where           reduce using rule 75 (LSELECT -> multiplicacion .)
    group           reduce using rule 75 (LSELECT -> multiplicacion .)
    having          reduce using rule 75 (LSELECT -> multiplicacion .)
    order           reduce using rule 75 (LSELECT -> multiplicacion .)
    end             reduce using rule 75 (LSELECT -> multiplicacion .)
    else            reduce using rule 75 (LSELECT -> multiplicacion .)
    when            reduce using rule 75 (LSELECT -> multiplicacion .)
    constraint      reduce using rule 75 (LSELECT -> multiplicacion .)
    default         reduce using rule 75 (LSELECT -> multiplicacion .)
    primary         reduce using rule 75 (LSELECT -> multiplicacion .)
    references      reduce using rule 75 (LSELECT -> multiplicacion .)
    null            reduce using rule 75 (LSELECT -> multiplicacion .)
    asc             reduce using rule 75 (LSELECT -> multiplicacion .)
    desc            reduce using rule 75 (LSELECT -> multiplicacion .)


state 35

    (99) LEXP -> EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for punto resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
    r_from          reduce using rule 99 (LEXP -> EXP .)
    ptcoma          reduce using rule 99 (LEXP -> EXP .)
    coma            reduce using rule 99 (LEXP -> EXP .)
    parc            reduce using rule 99 (LEXP -> EXP .)
    then            reduce using rule 99 (LEXP -> EXP .)
    as              reduce using rule 99 (LEXP -> EXP .)
    id              reduce using rule 99 (LEXP -> EXP .)
    where           reduce using rule 99 (LEXP -> EXP .)
    group           reduce using rule 99 (LEXP -> EXP .)
    having          reduce using rule 99 (LEXP -> EXP .)
    order           reduce using rule 99 (LEXP -> EXP .)
    end             reduce using rule 99 (LEXP -> EXP .)
    else            reduce using rule 99 (LEXP -> EXP .)
    when            reduce using rule 99 (LEXP -> EXP .)
    constraint      reduce using rule 99 (LEXP -> EXP .)
    default         reduce using rule 99 (LEXP -> EXP .)
    primary         reduce using rule 99 (LEXP -> EXP .)
    references      reduce using rule 99 (LEXP -> EXP .)
    null            reduce using rule 99 (LEXP -> EXP .)
    asc             reduce using rule 99 (LEXP -> EXP .)
    desc            reduce using rule 99 (LEXP -> EXP .)
    mas             shift and go to state 69
    menos           shift and go to state 70
    multiplicacion  shift and go to state 71
    division        shift and go to state 72
    modulo          shift and go to state 73
    elevado         shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    mayor           shift and go to state 77
    menor           shift and go to state 78
    mayor_igual     shift and go to state 79
    menor_igual     shift and go to state 80
    igual           shift and go to state 81
    diferente1      shift and go to state 82
    diferente2      shift and go to state 83
    punto           shift and go to state 84
    between         shift and go to state 85
    in              shift and go to state 86
    not             shift and go to state 87
    is              shift and go to state 88
    isnull          shift and go to state 89
    notnull         shift and go to state 90

  ! mas             [ reduce using rule 99 (LEXP -> EXP .) ]
  ! menos           [ reduce using rule 99 (LEXP -> EXP .) ]
  ! multiplicacion  [ reduce using rule 99 (LEXP -> EXP .) ]
  ! division        [ reduce using rule 99 (LEXP -> EXP .) ]
  ! modulo          [ reduce using rule 99 (LEXP -> EXP .) ]
  ! elevado         [ reduce using rule 99 (LEXP -> EXP .) ]
  ! and             [ reduce using rule 99 (LEXP -> EXP .) ]
  ! or              [ reduce using rule 99 (LEXP -> EXP .) ]
  ! mayor           [ reduce using rule 99 (LEXP -> EXP .) ]
  ! menor           [ reduce using rule 99 (LEXP -> EXP .) ]
  ! mayor_igual     [ reduce using rule 99 (LEXP -> EXP .) ]
  ! menor_igual     [ reduce using rule 99 (LEXP -> EXP .) ]
  ! igual           [ reduce using rule 99 (LEXP -> EXP .) ]
  ! diferente1      [ reduce using rule 99 (LEXP -> EXP .) ]
  ! diferente2      [ reduce using rule 99 (LEXP -> EXP .) ]
  ! punto           [ reduce using rule 99 (LEXP -> EXP .) ]
  ! between         [ reduce using rule 99 (LEXP -> EXP .) ]
  ! in              [ reduce using rule 99 (LEXP -> EXP .) ]
  ! not             [ reduce using rule 99 (LEXP -> EXP .) ]
  ! is              [ reduce using rule 99 (LEXP -> EXP .) ]
  ! isnull          [ reduce using rule 99 (LEXP -> EXP .) ]
  ! notnull         [ reduce using rule 99 (LEXP -> EXP .) ]


state 36

    (145) EXP -> mas . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 91
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 37

    (146) EXP -> menos . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 92
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 38

    (147) EXP -> not . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 93
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 39

    (148) EXP -> para . EXP parc
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 94
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 40

    (149) EXP -> int .

    r_from          reduce using rule 149 (EXP -> int .)
    ptcoma          reduce using rule 149 (EXP -> int .)
    mas             reduce using rule 149 (EXP -> int .)
    menos           reduce using rule 149 (EXP -> int .)
    multiplicacion  reduce using rule 149 (EXP -> int .)
    division        reduce using rule 149 (EXP -> int .)
    modulo          reduce using rule 149 (EXP -> int .)
    elevado         reduce using rule 149 (EXP -> int .)
    and             reduce using rule 149 (EXP -> int .)
    or              reduce using rule 149 (EXP -> int .)
    mayor           reduce using rule 149 (EXP -> int .)
    menor           reduce using rule 149 (EXP -> int .)
    mayor_igual     reduce using rule 149 (EXP -> int .)
    menor_igual     reduce using rule 149 (EXP -> int .)
    igual           reduce using rule 149 (EXP -> int .)
    diferente1      reduce using rule 149 (EXP -> int .)
    diferente2      reduce using rule 149 (EXP -> int .)
    punto           reduce using rule 149 (EXP -> int .)
    between         reduce using rule 149 (EXP -> int .)
    in              reduce using rule 149 (EXP -> int .)
    not             reduce using rule 149 (EXP -> int .)
    is              reduce using rule 149 (EXP -> int .)
    isnull          reduce using rule 149 (EXP -> int .)
    notnull         reduce using rule 149 (EXP -> int .)
    coma            reduce using rule 149 (EXP -> int .)
    parc            reduce using rule 149 (EXP -> int .)
    then            reduce using rule 149 (EXP -> int .)
    as              reduce using rule 149 (EXP -> int .)
    id              reduce using rule 149 (EXP -> int .)
    where           reduce using rule 149 (EXP -> int .)
    group           reduce using rule 149 (EXP -> int .)
    having          reduce using rule 149 (EXP -> int .)
    order           reduce using rule 149 (EXP -> int .)
    end             reduce using rule 149 (EXP -> int .)
    else            reduce using rule 149 (EXP -> int .)
    when            reduce using rule 149 (EXP -> int .)
    constraint      reduce using rule 149 (EXP -> int .)
    default         reduce using rule 149 (EXP -> int .)
    primary         reduce using rule 149 (EXP -> int .)
    references      reduce using rule 149 (EXP -> int .)
    null            reduce using rule 149 (EXP -> int .)
    asc             reduce using rule 149 (EXP -> int .)
    desc            reduce using rule 149 (EXP -> int .)


state 41

    (150) EXP -> decimales .

    r_from          reduce using rule 150 (EXP -> decimales .)
    ptcoma          reduce using rule 150 (EXP -> decimales .)
    mas             reduce using rule 150 (EXP -> decimales .)
    menos           reduce using rule 150 (EXP -> decimales .)
    multiplicacion  reduce using rule 150 (EXP -> decimales .)
    division        reduce using rule 150 (EXP -> decimales .)
    modulo          reduce using rule 150 (EXP -> decimales .)
    elevado         reduce using rule 150 (EXP -> decimales .)
    and             reduce using rule 150 (EXP -> decimales .)
    or              reduce using rule 150 (EXP -> decimales .)
    mayor           reduce using rule 150 (EXP -> decimales .)
    menor           reduce using rule 150 (EXP -> decimales .)
    mayor_igual     reduce using rule 150 (EXP -> decimales .)
    menor_igual     reduce using rule 150 (EXP -> decimales .)
    igual           reduce using rule 150 (EXP -> decimales .)
    diferente1      reduce using rule 150 (EXP -> decimales .)
    diferente2      reduce using rule 150 (EXP -> decimales .)
    punto           reduce using rule 150 (EXP -> decimales .)
    between         reduce using rule 150 (EXP -> decimales .)
    in              reduce using rule 150 (EXP -> decimales .)
    not             reduce using rule 150 (EXP -> decimales .)
    is              reduce using rule 150 (EXP -> decimales .)
    isnull          reduce using rule 150 (EXP -> decimales .)
    notnull         reduce using rule 150 (EXP -> decimales .)
    coma            reduce using rule 150 (EXP -> decimales .)
    parc            reduce using rule 150 (EXP -> decimales .)
    then            reduce using rule 150 (EXP -> decimales .)
    as              reduce using rule 150 (EXP -> decimales .)
    id              reduce using rule 150 (EXP -> decimales .)
    where           reduce using rule 150 (EXP -> decimales .)
    group           reduce using rule 150 (EXP -> decimales .)
    having          reduce using rule 150 (EXP -> decimales .)
    order           reduce using rule 150 (EXP -> decimales .)
    end             reduce using rule 150 (EXP -> decimales .)
    else            reduce using rule 150 (EXP -> decimales .)
    when            reduce using rule 150 (EXP -> decimales .)
    constraint      reduce using rule 150 (EXP -> decimales .)
    default         reduce using rule 150 (EXP -> decimales .)
    primary         reduce using rule 150 (EXP -> decimales .)
    references      reduce using rule 150 (EXP -> decimales .)
    null            reduce using rule 150 (EXP -> decimales .)
    asc             reduce using rule 150 (EXP -> decimales .)
    desc            reduce using rule 150 (EXP -> decimales .)


state 42

    (151) EXP -> cadena .

    r_from          reduce using rule 151 (EXP -> cadena .)
    ptcoma          reduce using rule 151 (EXP -> cadena .)
    mas             reduce using rule 151 (EXP -> cadena .)
    menos           reduce using rule 151 (EXP -> cadena .)
    multiplicacion  reduce using rule 151 (EXP -> cadena .)
    division        reduce using rule 151 (EXP -> cadena .)
    modulo          reduce using rule 151 (EXP -> cadena .)
    elevado         reduce using rule 151 (EXP -> cadena .)
    and             reduce using rule 151 (EXP -> cadena .)
    or              reduce using rule 151 (EXP -> cadena .)
    mayor           reduce using rule 151 (EXP -> cadena .)
    menor           reduce using rule 151 (EXP -> cadena .)
    mayor_igual     reduce using rule 151 (EXP -> cadena .)
    menor_igual     reduce using rule 151 (EXP -> cadena .)
    igual           reduce using rule 151 (EXP -> cadena .)
    diferente1      reduce using rule 151 (EXP -> cadena .)
    diferente2      reduce using rule 151 (EXP -> cadena .)
    punto           reduce using rule 151 (EXP -> cadena .)
    between         reduce using rule 151 (EXP -> cadena .)
    in              reduce using rule 151 (EXP -> cadena .)
    not             reduce using rule 151 (EXP -> cadena .)
    is              reduce using rule 151 (EXP -> cadena .)
    isnull          reduce using rule 151 (EXP -> cadena .)
    notnull         reduce using rule 151 (EXP -> cadena .)
    coma            reduce using rule 151 (EXP -> cadena .)
    parc            reduce using rule 151 (EXP -> cadena .)
    then            reduce using rule 151 (EXP -> cadena .)
    as              reduce using rule 151 (EXP -> cadena .)
    id              reduce using rule 151 (EXP -> cadena .)
    where           reduce using rule 151 (EXP -> cadena .)
    group           reduce using rule 151 (EXP -> cadena .)
    having          reduce using rule 151 (EXP -> cadena .)
    order           reduce using rule 151 (EXP -> cadena .)
    end             reduce using rule 151 (EXP -> cadena .)
    else            reduce using rule 151 (EXP -> cadena .)
    when            reduce using rule 151 (EXP -> cadena .)
    constraint      reduce using rule 151 (EXP -> cadena .)
    default         reduce using rule 151 (EXP -> cadena .)
    primary         reduce using rule 151 (EXP -> cadena .)
    references      reduce using rule 151 (EXP -> cadena .)
    null            reduce using rule 151 (EXP -> cadena .)
    asc             reduce using rule 151 (EXP -> cadena .)
    desc            reduce using rule 151 (EXP -> cadena .)


state 43

    (152) EXP -> true .

    r_from          reduce using rule 152 (EXP -> true .)
    ptcoma          reduce using rule 152 (EXP -> true .)
    mas             reduce using rule 152 (EXP -> true .)
    menos           reduce using rule 152 (EXP -> true .)
    multiplicacion  reduce using rule 152 (EXP -> true .)
    division        reduce using rule 152 (EXP -> true .)
    modulo          reduce using rule 152 (EXP -> true .)
    elevado         reduce using rule 152 (EXP -> true .)
    and             reduce using rule 152 (EXP -> true .)
    or              reduce using rule 152 (EXP -> true .)
    mayor           reduce using rule 152 (EXP -> true .)
    menor           reduce using rule 152 (EXP -> true .)
    mayor_igual     reduce using rule 152 (EXP -> true .)
    menor_igual     reduce using rule 152 (EXP -> true .)
    igual           reduce using rule 152 (EXP -> true .)
    diferente1      reduce using rule 152 (EXP -> true .)
    diferente2      reduce using rule 152 (EXP -> true .)
    punto           reduce using rule 152 (EXP -> true .)
    between         reduce using rule 152 (EXP -> true .)
    in              reduce using rule 152 (EXP -> true .)
    not             reduce using rule 152 (EXP -> true .)
    is              reduce using rule 152 (EXP -> true .)
    isnull          reduce using rule 152 (EXP -> true .)
    notnull         reduce using rule 152 (EXP -> true .)
    coma            reduce using rule 152 (EXP -> true .)
    parc            reduce using rule 152 (EXP -> true .)
    then            reduce using rule 152 (EXP -> true .)
    as              reduce using rule 152 (EXP -> true .)
    id              reduce using rule 152 (EXP -> true .)
    where           reduce using rule 152 (EXP -> true .)
    group           reduce using rule 152 (EXP -> true .)
    having          reduce using rule 152 (EXP -> true .)
    order           reduce using rule 152 (EXP -> true .)
    end             reduce using rule 152 (EXP -> true .)
    else            reduce using rule 152 (EXP -> true .)
    when            reduce using rule 152 (EXP -> true .)
    constraint      reduce using rule 152 (EXP -> true .)
    default         reduce using rule 152 (EXP -> true .)
    primary         reduce using rule 152 (EXP -> true .)
    references      reduce using rule 152 (EXP -> true .)
    null            reduce using rule 152 (EXP -> true .)
    asc             reduce using rule 152 (EXP -> true .)
    desc            reduce using rule 152 (EXP -> true .)


state 44

    (153) EXP -> false .

    r_from          reduce using rule 153 (EXP -> false .)
    ptcoma          reduce using rule 153 (EXP -> false .)
    mas             reduce using rule 153 (EXP -> false .)
    menos           reduce using rule 153 (EXP -> false .)
    multiplicacion  reduce using rule 153 (EXP -> false .)
    division        reduce using rule 153 (EXP -> false .)
    modulo          reduce using rule 153 (EXP -> false .)
    elevado         reduce using rule 153 (EXP -> false .)
    and             reduce using rule 153 (EXP -> false .)
    or              reduce using rule 153 (EXP -> false .)
    mayor           reduce using rule 153 (EXP -> false .)
    menor           reduce using rule 153 (EXP -> false .)
    mayor_igual     reduce using rule 153 (EXP -> false .)
    menor_igual     reduce using rule 153 (EXP -> false .)
    igual           reduce using rule 153 (EXP -> false .)
    diferente1      reduce using rule 153 (EXP -> false .)
    diferente2      reduce using rule 153 (EXP -> false .)
    punto           reduce using rule 153 (EXP -> false .)
    between         reduce using rule 153 (EXP -> false .)
    in              reduce using rule 153 (EXP -> false .)
    not             reduce using rule 153 (EXP -> false .)
    is              reduce using rule 153 (EXP -> false .)
    isnull          reduce using rule 153 (EXP -> false .)
    notnull         reduce using rule 153 (EXP -> false .)
    coma            reduce using rule 153 (EXP -> false .)
    parc            reduce using rule 153 (EXP -> false .)
    then            reduce using rule 153 (EXP -> false .)
    as              reduce using rule 153 (EXP -> false .)
    id              reduce using rule 153 (EXP -> false .)
    where           reduce using rule 153 (EXP -> false .)
    group           reduce using rule 153 (EXP -> false .)
    having          reduce using rule 153 (EXP -> false .)
    order           reduce using rule 153 (EXP -> false .)
    end             reduce using rule 153 (EXP -> false .)
    else            reduce using rule 153 (EXP -> false .)
    when            reduce using rule 153 (EXP -> false .)
    constraint      reduce using rule 153 (EXP -> false .)
    default         reduce using rule 153 (EXP -> false .)
    primary         reduce using rule 153 (EXP -> false .)
    references      reduce using rule 153 (EXP -> false .)
    null            reduce using rule 153 (EXP -> false .)
    asc             reduce using rule 153 (EXP -> false .)
    desc            reduce using rule 153 (EXP -> false .)


state 45

    (154) EXP -> id .
    (157) EXP -> id . para parc
    (158) EXP -> id . para LEXP parc

    r_from          reduce using rule 154 (EXP -> id .)
    ptcoma          reduce using rule 154 (EXP -> id .)
    mas             reduce using rule 154 (EXP -> id .)
    menos           reduce using rule 154 (EXP -> id .)
    multiplicacion  reduce using rule 154 (EXP -> id .)
    division        reduce using rule 154 (EXP -> id .)
    modulo          reduce using rule 154 (EXP -> id .)
    elevado         reduce using rule 154 (EXP -> id .)
    and             reduce using rule 154 (EXP -> id .)
    or              reduce using rule 154 (EXP -> id .)
    mayor           reduce using rule 154 (EXP -> id .)
    menor           reduce using rule 154 (EXP -> id .)
    mayor_igual     reduce using rule 154 (EXP -> id .)
    menor_igual     reduce using rule 154 (EXP -> id .)
    igual           reduce using rule 154 (EXP -> id .)
    diferente1      reduce using rule 154 (EXP -> id .)
    diferente2      reduce using rule 154 (EXP -> id .)
    punto           reduce using rule 154 (EXP -> id .)
    between         reduce using rule 154 (EXP -> id .)
    in              reduce using rule 154 (EXP -> id .)
    not             reduce using rule 154 (EXP -> id .)
    is              reduce using rule 154 (EXP -> id .)
    isnull          reduce using rule 154 (EXP -> id .)
    notnull         reduce using rule 154 (EXP -> id .)
    coma            reduce using rule 154 (EXP -> id .)
    parc            reduce using rule 154 (EXP -> id .)
    then            reduce using rule 154 (EXP -> id .)
    as              reduce using rule 154 (EXP -> id .)
    id              reduce using rule 154 (EXP -> id .)
    where           reduce using rule 154 (EXP -> id .)
    group           reduce using rule 154 (EXP -> id .)
    having          reduce using rule 154 (EXP -> id .)
    order           reduce using rule 154 (EXP -> id .)
    end             reduce using rule 154 (EXP -> id .)
    else            reduce using rule 154 (EXP -> id .)
    when            reduce using rule 154 (EXP -> id .)
    constraint      reduce using rule 154 (EXP -> id .)
    default         reduce using rule 154 (EXP -> id .)
    primary         reduce using rule 154 (EXP -> id .)
    references      reduce using rule 154 (EXP -> id .)
    null            reduce using rule 154 (EXP -> id .)
    asc             reduce using rule 154 (EXP -> id .)
    desc            reduce using rule 154 (EXP -> id .)
    para            shift and go to state 95


state 46

    (155) EXP -> SELECT .

    r_from          reduce using rule 155 (EXP -> SELECT .)
    ptcoma          reduce using rule 155 (EXP -> SELECT .)
    mas             reduce using rule 155 (EXP -> SELECT .)
    menos           reduce using rule 155 (EXP -> SELECT .)
    multiplicacion  reduce using rule 155 (EXP -> SELECT .)
    division        reduce using rule 155 (EXP -> SELECT .)
    modulo          reduce using rule 155 (EXP -> SELECT .)
    elevado         reduce using rule 155 (EXP -> SELECT .)
    and             reduce using rule 155 (EXP -> SELECT .)
    or              reduce using rule 155 (EXP -> SELECT .)
    mayor           reduce using rule 155 (EXP -> SELECT .)
    menor           reduce using rule 155 (EXP -> SELECT .)
    mayor_igual     reduce using rule 155 (EXP -> SELECT .)
    menor_igual     reduce using rule 155 (EXP -> SELECT .)
    igual           reduce using rule 155 (EXP -> SELECT .)
    diferente1      reduce using rule 155 (EXP -> SELECT .)
    diferente2      reduce using rule 155 (EXP -> SELECT .)
    punto           reduce using rule 155 (EXP -> SELECT .)
    between         reduce using rule 155 (EXP -> SELECT .)
    in              reduce using rule 155 (EXP -> SELECT .)
    not             reduce using rule 155 (EXP -> SELECT .)
    is              reduce using rule 155 (EXP -> SELECT .)
    isnull          reduce using rule 155 (EXP -> SELECT .)
    notnull         reduce using rule 155 (EXP -> SELECT .)
    coma            reduce using rule 155 (EXP -> SELECT .)
    parc            reduce using rule 155 (EXP -> SELECT .)
    then            reduce using rule 155 (EXP -> SELECT .)
    as              reduce using rule 155 (EXP -> SELECT .)
    id              reduce using rule 155 (EXP -> SELECT .)
    where           reduce using rule 155 (EXP -> SELECT .)
    group           reduce using rule 155 (EXP -> SELECT .)
    having          reduce using rule 155 (EXP -> SELECT .)
    order           reduce using rule 155 (EXP -> SELECT .)
    end             reduce using rule 155 (EXP -> SELECT .)
    else            reduce using rule 155 (EXP -> SELECT .)
    when            reduce using rule 155 (EXP -> SELECT .)
    constraint      reduce using rule 155 (EXP -> SELECT .)
    default         reduce using rule 155 (EXP -> SELECT .)
    primary         reduce using rule 155 (EXP -> SELECT .)
    references      reduce using rule 155 (EXP -> SELECT .)
    null            reduce using rule 155 (EXP -> SELECT .)
    asc             reduce using rule 155 (EXP -> SELECT .)
    desc            reduce using rule 155 (EXP -> SELECT .)


state 47

    (156) EXP -> PREDICADOS .

    r_from          reduce using rule 156 (EXP -> PREDICADOS .)
    ptcoma          reduce using rule 156 (EXP -> PREDICADOS .)
    mas             reduce using rule 156 (EXP -> PREDICADOS .)
    menos           reduce using rule 156 (EXP -> PREDICADOS .)
    multiplicacion  reduce using rule 156 (EXP -> PREDICADOS .)
    division        reduce using rule 156 (EXP -> PREDICADOS .)
    modulo          reduce using rule 156 (EXP -> PREDICADOS .)
    elevado         reduce using rule 156 (EXP -> PREDICADOS .)
    and             reduce using rule 156 (EXP -> PREDICADOS .)
    or              reduce using rule 156 (EXP -> PREDICADOS .)
    mayor           reduce using rule 156 (EXP -> PREDICADOS .)
    menor           reduce using rule 156 (EXP -> PREDICADOS .)
    mayor_igual     reduce using rule 156 (EXP -> PREDICADOS .)
    menor_igual     reduce using rule 156 (EXP -> PREDICADOS .)
    igual           reduce using rule 156 (EXP -> PREDICADOS .)
    diferente1      reduce using rule 156 (EXP -> PREDICADOS .)
    diferente2      reduce using rule 156 (EXP -> PREDICADOS .)
    punto           reduce using rule 156 (EXP -> PREDICADOS .)
    between         reduce using rule 156 (EXP -> PREDICADOS .)
    in              reduce using rule 156 (EXP -> PREDICADOS .)
    not             reduce using rule 156 (EXP -> PREDICADOS .)
    is              reduce using rule 156 (EXP -> PREDICADOS .)
    isnull          reduce using rule 156 (EXP -> PREDICADOS .)
    notnull         reduce using rule 156 (EXP -> PREDICADOS .)
    coma            reduce using rule 156 (EXP -> PREDICADOS .)
    parc            reduce using rule 156 (EXP -> PREDICADOS .)
    then            reduce using rule 156 (EXP -> PREDICADOS .)
    as              reduce using rule 156 (EXP -> PREDICADOS .)
    id              reduce using rule 156 (EXP -> PREDICADOS .)
    where           reduce using rule 156 (EXP -> PREDICADOS .)
    group           reduce using rule 156 (EXP -> PREDICADOS .)
    having          reduce using rule 156 (EXP -> PREDICADOS .)
    order           reduce using rule 156 (EXP -> PREDICADOS .)
    end             reduce using rule 156 (EXP -> PREDICADOS .)
    else            reduce using rule 156 (EXP -> PREDICADOS .)
    when            reduce using rule 156 (EXP -> PREDICADOS .)
    constraint      reduce using rule 156 (EXP -> PREDICADOS .)
    default         reduce using rule 156 (EXP -> PREDICADOS .)
    primary         reduce using rule 156 (EXP -> PREDICADOS .)
    references      reduce using rule 156 (EXP -> PREDICADOS .)
    null            reduce using rule 156 (EXP -> PREDICADOS .)
    asc             reduce using rule 156 (EXP -> PREDICADOS .)
    desc            reduce using rule 156 (EXP -> PREDICADOS .)


state 48

    (159) EXP -> extract . para FIELDS r_from timestamp cadena parc

    para            shift and go to state 96


state 49

    (162) EXP -> timestamp . cadena

    cadena          shift and go to state 97


state 50

    (160) EXP -> current_time .

    r_from          reduce using rule 160 (EXP -> current_time .)
    ptcoma          reduce using rule 160 (EXP -> current_time .)
    mas             reduce using rule 160 (EXP -> current_time .)
    menos           reduce using rule 160 (EXP -> current_time .)
    multiplicacion  reduce using rule 160 (EXP -> current_time .)
    division        reduce using rule 160 (EXP -> current_time .)
    modulo          reduce using rule 160 (EXP -> current_time .)
    elevado         reduce using rule 160 (EXP -> current_time .)
    and             reduce using rule 160 (EXP -> current_time .)
    or              reduce using rule 160 (EXP -> current_time .)
    mayor           reduce using rule 160 (EXP -> current_time .)
    menor           reduce using rule 160 (EXP -> current_time .)
    mayor_igual     reduce using rule 160 (EXP -> current_time .)
    menor_igual     reduce using rule 160 (EXP -> current_time .)
    igual           reduce using rule 160 (EXP -> current_time .)
    diferente1      reduce using rule 160 (EXP -> current_time .)
    diferente2      reduce using rule 160 (EXP -> current_time .)
    punto           reduce using rule 160 (EXP -> current_time .)
    between         reduce using rule 160 (EXP -> current_time .)
    in              reduce using rule 160 (EXP -> current_time .)
    not             reduce using rule 160 (EXP -> current_time .)
    is              reduce using rule 160 (EXP -> current_time .)
    isnull          reduce using rule 160 (EXP -> current_time .)
    notnull         reduce using rule 160 (EXP -> current_time .)
    coma            reduce using rule 160 (EXP -> current_time .)
    parc            reduce using rule 160 (EXP -> current_time .)
    then            reduce using rule 160 (EXP -> current_time .)
    as              reduce using rule 160 (EXP -> current_time .)
    id              reduce using rule 160 (EXP -> current_time .)
    where           reduce using rule 160 (EXP -> current_time .)
    group           reduce using rule 160 (EXP -> current_time .)
    having          reduce using rule 160 (EXP -> current_time .)
    order           reduce using rule 160 (EXP -> current_time .)
    end             reduce using rule 160 (EXP -> current_time .)
    else            reduce using rule 160 (EXP -> current_time .)
    when            reduce using rule 160 (EXP -> current_time .)
    constraint      reduce using rule 160 (EXP -> current_time .)
    default         reduce using rule 160 (EXP -> current_time .)
    primary         reduce using rule 160 (EXP -> current_time .)
    references      reduce using rule 160 (EXP -> current_time .)
    null            reduce using rule 160 (EXP -> current_time .)
    asc             reduce using rule 160 (EXP -> current_time .)
    desc            reduce using rule 160 (EXP -> current_time .)


state 51

    (161) EXP -> current_date .

    r_from          reduce using rule 161 (EXP -> current_date .)
    ptcoma          reduce using rule 161 (EXP -> current_date .)
    mas             reduce using rule 161 (EXP -> current_date .)
    menos           reduce using rule 161 (EXP -> current_date .)
    multiplicacion  reduce using rule 161 (EXP -> current_date .)
    division        reduce using rule 161 (EXP -> current_date .)
    modulo          reduce using rule 161 (EXP -> current_date .)
    elevado         reduce using rule 161 (EXP -> current_date .)
    and             reduce using rule 161 (EXP -> current_date .)
    or              reduce using rule 161 (EXP -> current_date .)
    mayor           reduce using rule 161 (EXP -> current_date .)
    menor           reduce using rule 161 (EXP -> current_date .)
    mayor_igual     reduce using rule 161 (EXP -> current_date .)
    menor_igual     reduce using rule 161 (EXP -> current_date .)
    igual           reduce using rule 161 (EXP -> current_date .)
    diferente1      reduce using rule 161 (EXP -> current_date .)
    diferente2      reduce using rule 161 (EXP -> current_date .)
    punto           reduce using rule 161 (EXP -> current_date .)
    between         reduce using rule 161 (EXP -> current_date .)
    in              reduce using rule 161 (EXP -> current_date .)
    not             reduce using rule 161 (EXP -> current_date .)
    is              reduce using rule 161 (EXP -> current_date .)
    isnull          reduce using rule 161 (EXP -> current_date .)
    notnull         reduce using rule 161 (EXP -> current_date .)
    coma            reduce using rule 161 (EXP -> current_date .)
    parc            reduce using rule 161 (EXP -> current_date .)
    then            reduce using rule 161 (EXP -> current_date .)
    as              reduce using rule 161 (EXP -> current_date .)
    id              reduce using rule 161 (EXP -> current_date .)
    where           reduce using rule 161 (EXP -> current_date .)
    group           reduce using rule 161 (EXP -> current_date .)
    having          reduce using rule 161 (EXP -> current_date .)
    order           reduce using rule 161 (EXP -> current_date .)
    end             reduce using rule 161 (EXP -> current_date .)
    else            reduce using rule 161 (EXP -> current_date .)
    when            reduce using rule 161 (EXP -> current_date .)
    constraint      reduce using rule 161 (EXP -> current_date .)
    default         reduce using rule 161 (EXP -> current_date .)
    primary         reduce using rule 161 (EXP -> current_date .)
    references      reduce using rule 161 (EXP -> current_date .)
    null            reduce using rule 161 (EXP -> current_date .)
    asc             reduce using rule 161 (EXP -> current_date .)
    desc            reduce using rule 161 (EXP -> current_date .)


state 52

    (163) EXP -> interval . cadena

    cadena          shift and go to state 98


state 53

    (164) EXP -> CASE .

    r_from          reduce using rule 164 (EXP -> CASE .)
    ptcoma          reduce using rule 164 (EXP -> CASE .)
    mas             reduce using rule 164 (EXP -> CASE .)
    menos           reduce using rule 164 (EXP -> CASE .)
    multiplicacion  reduce using rule 164 (EXP -> CASE .)
    division        reduce using rule 164 (EXP -> CASE .)
    modulo          reduce using rule 164 (EXP -> CASE .)
    elevado         reduce using rule 164 (EXP -> CASE .)
    and             reduce using rule 164 (EXP -> CASE .)
    or              reduce using rule 164 (EXP -> CASE .)
    mayor           reduce using rule 164 (EXP -> CASE .)
    menor           reduce using rule 164 (EXP -> CASE .)
    mayor_igual     reduce using rule 164 (EXP -> CASE .)
    menor_igual     reduce using rule 164 (EXP -> CASE .)
    igual           reduce using rule 164 (EXP -> CASE .)
    diferente1      reduce using rule 164 (EXP -> CASE .)
    diferente2      reduce using rule 164 (EXP -> CASE .)
    punto           reduce using rule 164 (EXP -> CASE .)
    between         reduce using rule 164 (EXP -> CASE .)
    in              reduce using rule 164 (EXP -> CASE .)
    not             reduce using rule 164 (EXP -> CASE .)
    is              reduce using rule 164 (EXP -> CASE .)
    isnull          reduce using rule 164 (EXP -> CASE .)
    notnull         reduce using rule 164 (EXP -> CASE .)
    coma            reduce using rule 164 (EXP -> CASE .)
    parc            reduce using rule 164 (EXP -> CASE .)
    then            reduce using rule 164 (EXP -> CASE .)
    as              reduce using rule 164 (EXP -> CASE .)
    id              reduce using rule 164 (EXP -> CASE .)
    where           reduce using rule 164 (EXP -> CASE .)
    group           reduce using rule 164 (EXP -> CASE .)
    having          reduce using rule 164 (EXP -> CASE .)
    order           reduce using rule 164 (EXP -> CASE .)
    end             reduce using rule 164 (EXP -> CASE .)
    else            reduce using rule 164 (EXP -> CASE .)
    when            reduce using rule 164 (EXP -> CASE .)
    constraint      reduce using rule 164 (EXP -> CASE .)
    default         reduce using rule 164 (EXP -> CASE .)
    primary         reduce using rule 164 (EXP -> CASE .)
    references      reduce using rule 164 (EXP -> CASE .)
    null            reduce using rule 164 (EXP -> CASE .)
    asc             reduce using rule 164 (EXP -> CASE .)
    desc            reduce using rule 164 (EXP -> CASE .)


state 54

    (47) CREATETABLE -> create table . id para LDEF parc ptcoma
    (48) CREATETABLE -> create table . id para LDEF parc HERENCIA ptcoma

    id              shift and go to state 99


state 55

    (70) CREATETYPE -> create type . id as enum para LEXP parc

    id              shift and go to state 100


state 56

    (92) UPDATE -> update id . set LCAMPOS where EXP

    set             shift and go to state 101


state 57

    (96) DELETE -> delete r_from . id where EXP
    (97) DELETE -> delete r_from . id

    id              shift and go to state 102


state 58

    (23) ALTER -> alter databases . id RO

    id              shift and go to state 103


state 59

    (27) altertable -> alter table . id OP

    id              shift and go to state 104


state 60

    (20) DROP -> drop table . id

    id              shift and go to state 105


state 61

    (21) DROP -> drop databases . if exist id
    (22) DROP -> drop databases . id

    if              shift and go to state 106
    id              shift and go to state 107


state 62

    (19) INSERT -> insert into . id values para LEXP parc

    id              shift and go to state 108


state 63

    (13) CASE -> case LISTAWHEN . ELSE end
    (14) CASE -> case LISTAWHEN . end
    (15) LISTAWHEN -> LISTAWHEN . WHEN
    (18) ELSE -> . else LEXP
    (17) WHEN -> . when LEXP then LEXP

    end             shift and go to state 110
    else            shift and go to state 112
    when            shift and go to state 65

    ELSE                           shift and go to state 109
    WHEN                           shift and go to state 111

state 64

    (16) LISTAWHEN -> WHEN .

    end             reduce using rule 16 (LISTAWHEN -> WHEN .)
    else            reduce using rule 16 (LISTAWHEN -> WHEN .)
    when            reduce using rule 16 (LISTAWHEN -> WHEN .)


state 65

    (17) WHEN -> when . LEXP then LEXP
    (98) LEXP -> . LEXP coma EXP
    (99) LEXP -> . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    LEXP                           shift and go to state 113
    EXP                            shift and go to state 35
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 66

    (71) SELECT -> select distinct LSELECT . r_from LFROM WHERE GROUP HAVING ORDER

    r_from          shift and go to state 114


state 67

    (72) SELECT -> select LSELECT r_from . LFROM WHERE GROUP HAVING ORDER
    (76) LFROM -> . LFROM coma FROM
    (77) LFROM -> . FROM
    (78) FROM -> . EXP
    (79) FROM -> . EXP as id
    (80) FROM -> . EXP id
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    LFROM                          shift and go to state 115
    FROM                           shift and go to state 116
    EXP                            shift and go to state 117
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 68

    (98) LEXP -> LEXP coma . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 118
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 69

    (129) EXP -> EXP mas . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 119
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 70

    (130) EXP -> EXP menos . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 120
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 71

    (131) EXP -> EXP multiplicacion . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 121
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 72

    (132) EXP -> EXP division . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 122
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 73

    (133) EXP -> EXP modulo . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 123
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 74

    (134) EXP -> EXP elevado . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 124
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 75

    (135) EXP -> EXP and . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 125
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 76

    (136) EXP -> EXP or . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 126
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 77

    (137) EXP -> EXP mayor . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 127
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 78

    (138) EXP -> EXP menor . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 128
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 79

    (139) EXP -> EXP mayor_igual . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 129
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 80

    (140) EXP -> EXP menor_igual . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 130
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 81

    (141) EXP -> EXP igual . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 131
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 82

    (142) EXP -> EXP diferente1 . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 132
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 83

    (143) EXP -> EXP diferente2 . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 133
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 84

    (144) EXP -> EXP punto . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 134
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 85

    (165) PREDICADOS -> EXP between . EXP
    (169) PREDICADOS -> EXP between . symetric EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    symetric        shift and go to state 136
    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 135
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 86

    (166) PREDICADOS -> EXP in . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 137
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 87

    (167) PREDICADOS -> EXP not . in EXP
    (168) PREDICADOS -> EXP not . between EXP
    (170) PREDICADOS -> EXP not . between symetric EXP

    in              shift and go to state 138
    between         shift and go to state 139


state 88

    (171) PREDICADOS -> EXP is . distinct r_from EXP
    (172) PREDICADOS -> EXP is . not distinct r_from EXP
    (173) PREDICADOS -> EXP is . PNULL
    (176) PREDICADOS -> EXP is . true
    (177) PREDICADOS -> EXP is . not true
    (178) PREDICADOS -> EXP is . false
    (179) PREDICADOS -> EXP is . not false
    (180) PREDICADOS -> EXP is . unknown
    (181) PREDICADOS -> EXP is . not unknown
    (63) PNULL -> . not null
    (64) PNULL -> . null

    distinct        shift and go to state 140
    not             shift and go to state 141
    true            shift and go to state 143
    false           shift and go to state 144
    unknown         shift and go to state 145
    null            shift and go to state 146

    PNULL                          shift and go to state 142

state 89

    (174) PREDICADOS -> EXP isnull .

    r_from          reduce using rule 174 (PREDICADOS -> EXP isnull .)
    ptcoma          reduce using rule 174 (PREDICADOS -> EXP isnull .)
    mas             reduce using rule 174 (PREDICADOS -> EXP isnull .)
    menos           reduce using rule 174 (PREDICADOS -> EXP isnull .)
    multiplicacion  reduce using rule 174 (PREDICADOS -> EXP isnull .)
    division        reduce using rule 174 (PREDICADOS -> EXP isnull .)
    modulo          reduce using rule 174 (PREDICADOS -> EXP isnull .)
    elevado         reduce using rule 174 (PREDICADOS -> EXP isnull .)
    and             reduce using rule 174 (PREDICADOS -> EXP isnull .)
    or              reduce using rule 174 (PREDICADOS -> EXP isnull .)
    mayor           reduce using rule 174 (PREDICADOS -> EXP isnull .)
    menor           reduce using rule 174 (PREDICADOS -> EXP isnull .)
    mayor_igual     reduce using rule 174 (PREDICADOS -> EXP isnull .)
    menor_igual     reduce using rule 174 (PREDICADOS -> EXP isnull .)
    igual           reduce using rule 174 (PREDICADOS -> EXP isnull .)
    diferente1      reduce using rule 174 (PREDICADOS -> EXP isnull .)
    diferente2      reduce using rule 174 (PREDICADOS -> EXP isnull .)
    punto           reduce using rule 174 (PREDICADOS -> EXP isnull .)
    between         reduce using rule 174 (PREDICADOS -> EXP isnull .)
    in              reduce using rule 174 (PREDICADOS -> EXP isnull .)
    not             reduce using rule 174 (PREDICADOS -> EXP isnull .)
    is              reduce using rule 174 (PREDICADOS -> EXP isnull .)
    isnull          reduce using rule 174 (PREDICADOS -> EXP isnull .)
    notnull         reduce using rule 174 (PREDICADOS -> EXP isnull .)
    coma            reduce using rule 174 (PREDICADOS -> EXP isnull .)
    parc            reduce using rule 174 (PREDICADOS -> EXP isnull .)
    then            reduce using rule 174 (PREDICADOS -> EXP isnull .)
    as              reduce using rule 174 (PREDICADOS -> EXP isnull .)
    id              reduce using rule 174 (PREDICADOS -> EXP isnull .)
    where           reduce using rule 174 (PREDICADOS -> EXP isnull .)
    group           reduce using rule 174 (PREDICADOS -> EXP isnull .)
    having          reduce using rule 174 (PREDICADOS -> EXP isnull .)
    order           reduce using rule 174 (PREDICADOS -> EXP isnull .)
    end             reduce using rule 174 (PREDICADOS -> EXP isnull .)
    else            reduce using rule 174 (PREDICADOS -> EXP isnull .)
    when            reduce using rule 174 (PREDICADOS -> EXP isnull .)
    constraint      reduce using rule 174 (PREDICADOS -> EXP isnull .)
    default         reduce using rule 174 (PREDICADOS -> EXP isnull .)
    primary         reduce using rule 174 (PREDICADOS -> EXP isnull .)
    references      reduce using rule 174 (PREDICADOS -> EXP isnull .)
    null            reduce using rule 174 (PREDICADOS -> EXP isnull .)
    asc             reduce using rule 174 (PREDICADOS -> EXP isnull .)
    desc            reduce using rule 174 (PREDICADOS -> EXP isnull .)


state 90

    (175) PREDICADOS -> EXP notnull .

    r_from          reduce using rule 175 (PREDICADOS -> EXP notnull .)
    ptcoma          reduce using rule 175 (PREDICADOS -> EXP notnull .)
    mas             reduce using rule 175 (PREDICADOS -> EXP notnull .)
    menos           reduce using rule 175 (PREDICADOS -> EXP notnull .)
    multiplicacion  reduce using rule 175 (PREDICADOS -> EXP notnull .)
    division        reduce using rule 175 (PREDICADOS -> EXP notnull .)
    modulo          reduce using rule 175 (PREDICADOS -> EXP notnull .)
    elevado         reduce using rule 175 (PREDICADOS -> EXP notnull .)
    and             reduce using rule 175 (PREDICADOS -> EXP notnull .)
    or              reduce using rule 175 (PREDICADOS -> EXP notnull .)
    mayor           reduce using rule 175 (PREDICADOS -> EXP notnull .)
    menor           reduce using rule 175 (PREDICADOS -> EXP notnull .)
    mayor_igual     reduce using rule 175 (PREDICADOS -> EXP notnull .)
    menor_igual     reduce using rule 175 (PREDICADOS -> EXP notnull .)
    igual           reduce using rule 175 (PREDICADOS -> EXP notnull .)
    diferente1      reduce using rule 175 (PREDICADOS -> EXP notnull .)
    diferente2      reduce using rule 175 (PREDICADOS -> EXP notnull .)
    punto           reduce using rule 175 (PREDICADOS -> EXP notnull .)
    between         reduce using rule 175 (PREDICADOS -> EXP notnull .)
    in              reduce using rule 175 (PREDICADOS -> EXP notnull .)
    not             reduce using rule 175 (PREDICADOS -> EXP notnull .)
    is              reduce using rule 175 (PREDICADOS -> EXP notnull .)
    isnull          reduce using rule 175 (PREDICADOS -> EXP notnull .)
    notnull         reduce using rule 175 (PREDICADOS -> EXP notnull .)
    coma            reduce using rule 175 (PREDICADOS -> EXP notnull .)
    parc            reduce using rule 175 (PREDICADOS -> EXP notnull .)
    then            reduce using rule 175 (PREDICADOS -> EXP notnull .)
    as              reduce using rule 175 (PREDICADOS -> EXP notnull .)
    id              reduce using rule 175 (PREDICADOS -> EXP notnull .)
    where           reduce using rule 175 (PREDICADOS -> EXP notnull .)
    group           reduce using rule 175 (PREDICADOS -> EXP notnull .)
    having          reduce using rule 175 (PREDICADOS -> EXP notnull .)
    order           reduce using rule 175 (PREDICADOS -> EXP notnull .)
    end             reduce using rule 175 (PREDICADOS -> EXP notnull .)
    else            reduce using rule 175 (PREDICADOS -> EXP notnull .)
    when            reduce using rule 175 (PREDICADOS -> EXP notnull .)
    constraint      reduce using rule 175 (PREDICADOS -> EXP notnull .)
    default         reduce using rule 175 (PREDICADOS -> EXP notnull .)
    primary         reduce using rule 175 (PREDICADOS -> EXP notnull .)
    references      reduce using rule 175 (PREDICADOS -> EXP notnull .)
    null            reduce using rule 175 (PREDICADOS -> EXP notnull .)
    asc             reduce using rule 175 (PREDICADOS -> EXP notnull .)
    desc            reduce using rule 175 (PREDICADOS -> EXP notnull .)


state 91

    (145) EXP -> mas EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 145 (EXP -> mas EXP .)
    ptcoma          reduce using rule 145 (EXP -> mas EXP .)
    punto           reduce using rule 145 (EXP -> mas EXP .)
    between         reduce using rule 145 (EXP -> mas EXP .)
    in              reduce using rule 145 (EXP -> mas EXP .)
    is              reduce using rule 145 (EXP -> mas EXP .)
    isnull          reduce using rule 145 (EXP -> mas EXP .)
    notnull         reduce using rule 145 (EXP -> mas EXP .)
    coma            reduce using rule 145 (EXP -> mas EXP .)
    parc            reduce using rule 145 (EXP -> mas EXP .)
    then            reduce using rule 145 (EXP -> mas EXP .)
    as              reduce using rule 145 (EXP -> mas EXP .)
    id              reduce using rule 145 (EXP -> mas EXP .)
    where           reduce using rule 145 (EXP -> mas EXP .)
    group           reduce using rule 145 (EXP -> mas EXP .)
    having          reduce using rule 145 (EXP -> mas EXP .)
    order           reduce using rule 145 (EXP -> mas EXP .)
    end             reduce using rule 145 (EXP -> mas EXP .)
    else            reduce using rule 145 (EXP -> mas EXP .)
    when            reduce using rule 145 (EXP -> mas EXP .)
    constraint      reduce using rule 145 (EXP -> mas EXP .)
    default         reduce using rule 145 (EXP -> mas EXP .)
    primary         reduce using rule 145 (EXP -> mas EXP .)
    references      reduce using rule 145 (EXP -> mas EXP .)
    null            reduce using rule 145 (EXP -> mas EXP .)
    asc             reduce using rule 145 (EXP -> mas EXP .)
    desc            reduce using rule 145 (EXP -> mas EXP .)
    mas             shift and go to state 69
    menos           shift and go to state 70
    multiplicacion  shift and go to state 71
    division        shift and go to state 72
    modulo          shift and go to state 73
    elevado         shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    mayor           shift and go to state 77
    menor           shift and go to state 78
    mayor_igual     shift and go to state 79
    menor_igual     shift and go to state 80
    igual           shift and go to state 81
    diferente1      shift and go to state 82
    diferente2      shift and go to state 83
    not             shift and go to state 87

  ! mas             [ reduce using rule 145 (EXP -> mas EXP .) ]
  ! menos           [ reduce using rule 145 (EXP -> mas EXP .) ]
  ! multiplicacion  [ reduce using rule 145 (EXP -> mas EXP .) ]
  ! division        [ reduce using rule 145 (EXP -> mas EXP .) ]
  ! modulo          [ reduce using rule 145 (EXP -> mas EXP .) ]
  ! elevado         [ reduce using rule 145 (EXP -> mas EXP .) ]
  ! and             [ reduce using rule 145 (EXP -> mas EXP .) ]
  ! or              [ reduce using rule 145 (EXP -> mas EXP .) ]
  ! mayor           [ reduce using rule 145 (EXP -> mas EXP .) ]
  ! menor           [ reduce using rule 145 (EXP -> mas EXP .) ]
  ! mayor_igual     [ reduce using rule 145 (EXP -> mas EXP .) ]
  ! menor_igual     [ reduce using rule 145 (EXP -> mas EXP .) ]
  ! igual           [ reduce using rule 145 (EXP -> mas EXP .) ]
  ! diferente1      [ reduce using rule 145 (EXP -> mas EXP .) ]
  ! diferente2      [ reduce using rule 145 (EXP -> mas EXP .) ]
  ! not             [ reduce using rule 145 (EXP -> mas EXP .) ]
  ! punto           [ shift and go to state 84 ]
  ! between         [ shift and go to state 85 ]
  ! in              [ shift and go to state 86 ]
  ! is              [ shift and go to state 88 ]
  ! isnull          [ shift and go to state 89 ]
  ! notnull         [ shift and go to state 90 ]


state 92

    (146) EXP -> menos EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 146 (EXP -> menos EXP .)
    ptcoma          reduce using rule 146 (EXP -> menos EXP .)
    punto           reduce using rule 146 (EXP -> menos EXP .)
    between         reduce using rule 146 (EXP -> menos EXP .)
    in              reduce using rule 146 (EXP -> menos EXP .)
    is              reduce using rule 146 (EXP -> menos EXP .)
    isnull          reduce using rule 146 (EXP -> menos EXP .)
    notnull         reduce using rule 146 (EXP -> menos EXP .)
    coma            reduce using rule 146 (EXP -> menos EXP .)
    parc            reduce using rule 146 (EXP -> menos EXP .)
    then            reduce using rule 146 (EXP -> menos EXP .)
    as              reduce using rule 146 (EXP -> menos EXP .)
    id              reduce using rule 146 (EXP -> menos EXP .)
    where           reduce using rule 146 (EXP -> menos EXP .)
    group           reduce using rule 146 (EXP -> menos EXP .)
    having          reduce using rule 146 (EXP -> menos EXP .)
    order           reduce using rule 146 (EXP -> menos EXP .)
    end             reduce using rule 146 (EXP -> menos EXP .)
    else            reduce using rule 146 (EXP -> menos EXP .)
    when            reduce using rule 146 (EXP -> menos EXP .)
    constraint      reduce using rule 146 (EXP -> menos EXP .)
    default         reduce using rule 146 (EXP -> menos EXP .)
    primary         reduce using rule 146 (EXP -> menos EXP .)
    references      reduce using rule 146 (EXP -> menos EXP .)
    null            reduce using rule 146 (EXP -> menos EXP .)
    asc             reduce using rule 146 (EXP -> menos EXP .)
    desc            reduce using rule 146 (EXP -> menos EXP .)
    mas             shift and go to state 69
    menos           shift and go to state 70
    multiplicacion  shift and go to state 71
    division        shift and go to state 72
    modulo          shift and go to state 73
    elevado         shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    mayor           shift and go to state 77
    menor           shift and go to state 78
    mayor_igual     shift and go to state 79
    menor_igual     shift and go to state 80
    igual           shift and go to state 81
    diferente1      shift and go to state 82
    diferente2      shift and go to state 83
    not             shift and go to state 87

  ! mas             [ reduce using rule 146 (EXP -> menos EXP .) ]
  ! menos           [ reduce using rule 146 (EXP -> menos EXP .) ]
  ! multiplicacion  [ reduce using rule 146 (EXP -> menos EXP .) ]
  ! division        [ reduce using rule 146 (EXP -> menos EXP .) ]
  ! modulo          [ reduce using rule 146 (EXP -> menos EXP .) ]
  ! elevado         [ reduce using rule 146 (EXP -> menos EXP .) ]
  ! and             [ reduce using rule 146 (EXP -> menos EXP .) ]
  ! or              [ reduce using rule 146 (EXP -> menos EXP .) ]
  ! mayor           [ reduce using rule 146 (EXP -> menos EXP .) ]
  ! menor           [ reduce using rule 146 (EXP -> menos EXP .) ]
  ! mayor_igual     [ reduce using rule 146 (EXP -> menos EXP .) ]
  ! menor_igual     [ reduce using rule 146 (EXP -> menos EXP .) ]
  ! igual           [ reduce using rule 146 (EXP -> menos EXP .) ]
  ! diferente1      [ reduce using rule 146 (EXP -> menos EXP .) ]
  ! diferente2      [ reduce using rule 146 (EXP -> menos EXP .) ]
  ! not             [ reduce using rule 146 (EXP -> menos EXP .) ]
  ! punto           [ shift and go to state 84 ]
  ! between         [ shift and go to state 85 ]
  ! in              [ shift and go to state 86 ]
  ! is              [ shift and go to state 88 ]
  ! isnull          [ shift and go to state 89 ]
  ! notnull         [ shift and go to state 90 ]


state 93

    (147) EXP -> not EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 147 (EXP -> not EXP .)
    ptcoma          reduce using rule 147 (EXP -> not EXP .)
    mas             reduce using rule 147 (EXP -> not EXP .)
    menos           reduce using rule 147 (EXP -> not EXP .)
    multiplicacion  reduce using rule 147 (EXP -> not EXP .)
    division        reduce using rule 147 (EXP -> not EXP .)
    modulo          reduce using rule 147 (EXP -> not EXP .)
    elevado         reduce using rule 147 (EXP -> not EXP .)
    mayor           reduce using rule 147 (EXP -> not EXP .)
    menor           reduce using rule 147 (EXP -> not EXP .)
    mayor_igual     reduce using rule 147 (EXP -> not EXP .)
    menor_igual     reduce using rule 147 (EXP -> not EXP .)
    igual           reduce using rule 147 (EXP -> not EXP .)
    diferente1      reduce using rule 147 (EXP -> not EXP .)
    diferente2      reduce using rule 147 (EXP -> not EXP .)
    punto           reduce using rule 147 (EXP -> not EXP .)
    between         reduce using rule 147 (EXP -> not EXP .)
    in              reduce using rule 147 (EXP -> not EXP .)
    is              reduce using rule 147 (EXP -> not EXP .)
    isnull          reduce using rule 147 (EXP -> not EXP .)
    notnull         reduce using rule 147 (EXP -> not EXP .)
    coma            reduce using rule 147 (EXP -> not EXP .)
    parc            reduce using rule 147 (EXP -> not EXP .)
    then            reduce using rule 147 (EXP -> not EXP .)
    as              reduce using rule 147 (EXP -> not EXP .)
    id              reduce using rule 147 (EXP -> not EXP .)
    where           reduce using rule 147 (EXP -> not EXP .)
    group           reduce using rule 147 (EXP -> not EXP .)
    having          reduce using rule 147 (EXP -> not EXP .)
    order           reduce using rule 147 (EXP -> not EXP .)
    end             reduce using rule 147 (EXP -> not EXP .)
    else            reduce using rule 147 (EXP -> not EXP .)
    when            reduce using rule 147 (EXP -> not EXP .)
    constraint      reduce using rule 147 (EXP -> not EXP .)
    default         reduce using rule 147 (EXP -> not EXP .)
    primary         reduce using rule 147 (EXP -> not EXP .)
    references      reduce using rule 147 (EXP -> not EXP .)
    null            reduce using rule 147 (EXP -> not EXP .)
    asc             reduce using rule 147 (EXP -> not EXP .)
    desc            reduce using rule 147 (EXP -> not EXP .)
    and             shift and go to state 75
    or              shift and go to state 76
    not             shift and go to state 87

  ! and             [ reduce using rule 147 (EXP -> not EXP .) ]
  ! or              [ reduce using rule 147 (EXP -> not EXP .) ]
  ! not             [ reduce using rule 147 (EXP -> not EXP .) ]
  ! mas             [ shift and go to state 69 ]
  ! menos           [ shift and go to state 70 ]
  ! multiplicacion  [ shift and go to state 71 ]
  ! division        [ shift and go to state 72 ]
  ! modulo          [ shift and go to state 73 ]
  ! elevado         [ shift and go to state 74 ]
  ! mayor           [ shift and go to state 77 ]
  ! menor           [ shift and go to state 78 ]
  ! mayor_igual     [ shift and go to state 79 ]
  ! menor_igual     [ shift and go to state 80 ]
  ! igual           [ shift and go to state 81 ]
  ! diferente1      [ shift and go to state 82 ]
  ! diferente2      [ shift and go to state 83 ]
  ! punto           [ shift and go to state 84 ]
  ! between         [ shift and go to state 85 ]
  ! in              [ shift and go to state 86 ]
  ! is              [ shift and go to state 88 ]
  ! isnull          [ shift and go to state 89 ]
  ! notnull         [ shift and go to state 90 ]


state 94

    (148) EXP -> para EXP . parc
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

    parc            shift and go to state 147
    mas             shift and go to state 69
    menos           shift and go to state 70
    multiplicacion  shift and go to state 71
    division        shift and go to state 72
    modulo          shift and go to state 73
    elevado         shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    mayor           shift and go to state 77
    menor           shift and go to state 78
    mayor_igual     shift and go to state 79
    menor_igual     shift and go to state 80
    igual           shift and go to state 81
    diferente1      shift and go to state 82
    diferente2      shift and go to state 83
    punto           shift and go to state 84
    between         shift and go to state 85
    in              shift and go to state 86
    not             shift and go to state 87
    is              shift and go to state 88
    isnull          shift and go to state 89
    notnull         shift and go to state 90


state 95

    (157) EXP -> id para . parc
    (158) EXP -> id para . LEXP parc
    (98) LEXP -> . LEXP coma EXP
    (99) LEXP -> . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    parc            shift and go to state 148
    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    LEXP                           shift and go to state 149
    EXP                            shift and go to state 35
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 96

    (159) EXP -> extract para . FIELDS r_from timestamp cadena parc
    (123) FIELDS -> . year
    (124) FIELDS -> . month
    (125) FIELDS -> . day
    (126) FIELDS -> . hour
    (127) FIELDS -> . minute
    (128) FIELDS -> . second

    year            shift and go to state 151
    month           shift and go to state 152
    day             shift and go to state 153
    hour            shift and go to state 154
    minute          shift and go to state 155
    second          shift and go to state 156

    FIELDS                         shift and go to state 150

state 97

    (162) EXP -> timestamp cadena .

    r_from          reduce using rule 162 (EXP -> timestamp cadena .)
    ptcoma          reduce using rule 162 (EXP -> timestamp cadena .)
    mas             reduce using rule 162 (EXP -> timestamp cadena .)
    menos           reduce using rule 162 (EXP -> timestamp cadena .)
    multiplicacion  reduce using rule 162 (EXP -> timestamp cadena .)
    division        reduce using rule 162 (EXP -> timestamp cadena .)
    modulo          reduce using rule 162 (EXP -> timestamp cadena .)
    elevado         reduce using rule 162 (EXP -> timestamp cadena .)
    and             reduce using rule 162 (EXP -> timestamp cadena .)
    or              reduce using rule 162 (EXP -> timestamp cadena .)
    mayor           reduce using rule 162 (EXP -> timestamp cadena .)
    menor           reduce using rule 162 (EXP -> timestamp cadena .)
    mayor_igual     reduce using rule 162 (EXP -> timestamp cadena .)
    menor_igual     reduce using rule 162 (EXP -> timestamp cadena .)
    igual           reduce using rule 162 (EXP -> timestamp cadena .)
    diferente1      reduce using rule 162 (EXP -> timestamp cadena .)
    diferente2      reduce using rule 162 (EXP -> timestamp cadena .)
    punto           reduce using rule 162 (EXP -> timestamp cadena .)
    between         reduce using rule 162 (EXP -> timestamp cadena .)
    in              reduce using rule 162 (EXP -> timestamp cadena .)
    not             reduce using rule 162 (EXP -> timestamp cadena .)
    is              reduce using rule 162 (EXP -> timestamp cadena .)
    isnull          reduce using rule 162 (EXP -> timestamp cadena .)
    notnull         reduce using rule 162 (EXP -> timestamp cadena .)
    coma            reduce using rule 162 (EXP -> timestamp cadena .)
    parc            reduce using rule 162 (EXP -> timestamp cadena .)
    then            reduce using rule 162 (EXP -> timestamp cadena .)
    as              reduce using rule 162 (EXP -> timestamp cadena .)
    id              reduce using rule 162 (EXP -> timestamp cadena .)
    where           reduce using rule 162 (EXP -> timestamp cadena .)
    group           reduce using rule 162 (EXP -> timestamp cadena .)
    having          reduce using rule 162 (EXP -> timestamp cadena .)
    order           reduce using rule 162 (EXP -> timestamp cadena .)
    end             reduce using rule 162 (EXP -> timestamp cadena .)
    else            reduce using rule 162 (EXP -> timestamp cadena .)
    when            reduce using rule 162 (EXP -> timestamp cadena .)
    constraint      reduce using rule 162 (EXP -> timestamp cadena .)
    default         reduce using rule 162 (EXP -> timestamp cadena .)
    primary         reduce using rule 162 (EXP -> timestamp cadena .)
    references      reduce using rule 162 (EXP -> timestamp cadena .)
    null            reduce using rule 162 (EXP -> timestamp cadena .)
    asc             reduce using rule 162 (EXP -> timestamp cadena .)
    desc            reduce using rule 162 (EXP -> timestamp cadena .)


state 98

    (163) EXP -> interval cadena .

    r_from          reduce using rule 163 (EXP -> interval cadena .)
    ptcoma          reduce using rule 163 (EXP -> interval cadena .)
    mas             reduce using rule 163 (EXP -> interval cadena .)
    menos           reduce using rule 163 (EXP -> interval cadena .)
    multiplicacion  reduce using rule 163 (EXP -> interval cadena .)
    division        reduce using rule 163 (EXP -> interval cadena .)
    modulo          reduce using rule 163 (EXP -> interval cadena .)
    elevado         reduce using rule 163 (EXP -> interval cadena .)
    and             reduce using rule 163 (EXP -> interval cadena .)
    or              reduce using rule 163 (EXP -> interval cadena .)
    mayor           reduce using rule 163 (EXP -> interval cadena .)
    menor           reduce using rule 163 (EXP -> interval cadena .)
    mayor_igual     reduce using rule 163 (EXP -> interval cadena .)
    menor_igual     reduce using rule 163 (EXP -> interval cadena .)
    igual           reduce using rule 163 (EXP -> interval cadena .)
    diferente1      reduce using rule 163 (EXP -> interval cadena .)
    diferente2      reduce using rule 163 (EXP -> interval cadena .)
    punto           reduce using rule 163 (EXP -> interval cadena .)
    between         reduce using rule 163 (EXP -> interval cadena .)
    in              reduce using rule 163 (EXP -> interval cadena .)
    not             reduce using rule 163 (EXP -> interval cadena .)
    is              reduce using rule 163 (EXP -> interval cadena .)
    isnull          reduce using rule 163 (EXP -> interval cadena .)
    notnull         reduce using rule 163 (EXP -> interval cadena .)
    coma            reduce using rule 163 (EXP -> interval cadena .)
    parc            reduce using rule 163 (EXP -> interval cadena .)
    then            reduce using rule 163 (EXP -> interval cadena .)
    as              reduce using rule 163 (EXP -> interval cadena .)
    id              reduce using rule 163 (EXP -> interval cadena .)
    where           reduce using rule 163 (EXP -> interval cadena .)
    group           reduce using rule 163 (EXP -> interval cadena .)
    having          reduce using rule 163 (EXP -> interval cadena .)
    order           reduce using rule 163 (EXP -> interval cadena .)
    end             reduce using rule 163 (EXP -> interval cadena .)
    else            reduce using rule 163 (EXP -> interval cadena .)
    when            reduce using rule 163 (EXP -> interval cadena .)
    constraint      reduce using rule 163 (EXP -> interval cadena .)
    default         reduce using rule 163 (EXP -> interval cadena .)
    primary         reduce using rule 163 (EXP -> interval cadena .)
    references      reduce using rule 163 (EXP -> interval cadena .)
    null            reduce using rule 163 (EXP -> interval cadena .)
    asc             reduce using rule 163 (EXP -> interval cadena .)
    desc            reduce using rule 163 (EXP -> interval cadena .)


state 99

    (47) CREATETABLE -> create table id . para LDEF parc ptcoma
    (48) CREATETABLE -> create table id . para LDEF parc HERENCIA ptcoma

    para            shift and go to state 157


state 100

    (70) CREATETYPE -> create type id . as enum para LEXP parc

    as              shift and go to state 158


state 101

    (92) UPDATE -> update id set . LCAMPOS where EXP
    (93) LCAMPOS -> . LCAMPOS id igual EXP
    (94) LCAMPOS -> . id igual EXP
    (95) LCAMPOS -> . id igual default

    id              shift and go to state 159

    LCAMPOS                        shift and go to state 160

state 102

    (96) DELETE -> delete r_from id . where EXP
    (97) DELETE -> delete r_from id .

    where           shift and go to state 161
    ptcoma          reduce using rule 97 (DELETE -> delete r_from id .)


state 103

    (23) ALTER -> alter databases id . RO
    (25) RO -> . rename to id
    (26) RO -> . owner to id

    rename          shift and go to state 163
    owner           shift and go to state 164

    RO                             shift and go to state 162

state 104

    (27) altertable -> alter table id . OP
    (28) OP -> . add ADD
    (29) OP -> . drop column ALTERDROP
    (30) OP -> . alter column id set not null
    (31) OP -> . alter column id set null
    (32) OP -> . listaalc
    (33) OP -> . drop ALTERDROP
    (34) OP -> . rename column id to id
    (35) listaalc -> . listaalc coma alc
    (36) listaalc -> . alc
    (37) alc -> . alter column id type TIPO

    add             shift and go to state 167
    drop            shift and go to state 168
    alter           shift and go to state 165
    rename          shift and go to state 170

    OP                             shift and go to state 166
    listaalc                       shift and go to state 169
    alc                            shift and go to state 171

state 105

    (20) DROP -> drop table id .

    ptcoma          reduce using rule 20 (DROP -> drop table id .)


state 106

    (21) DROP -> drop databases if . exist id

    exist           shift and go to state 172


state 107

    (22) DROP -> drop databases id .

    ptcoma          reduce using rule 22 (DROP -> drop databases id .)


state 108

    (19) INSERT -> insert into id . values para LEXP parc

    values          shift and go to state 173


state 109

    (13) CASE -> case LISTAWHEN ELSE . end

    end             shift and go to state 174


state 110

    (14) CASE -> case LISTAWHEN end .

    ptcoma          reduce using rule 14 (CASE -> case LISTAWHEN end .)
    r_from          reduce using rule 14 (CASE -> case LISTAWHEN end .)
    mas             reduce using rule 14 (CASE -> case LISTAWHEN end .)
    menos           reduce using rule 14 (CASE -> case LISTAWHEN end .)
    multiplicacion  reduce using rule 14 (CASE -> case LISTAWHEN end .)
    division        reduce using rule 14 (CASE -> case LISTAWHEN end .)
    modulo          reduce using rule 14 (CASE -> case LISTAWHEN end .)
    elevado         reduce using rule 14 (CASE -> case LISTAWHEN end .)
    and             reduce using rule 14 (CASE -> case LISTAWHEN end .)
    or              reduce using rule 14 (CASE -> case LISTAWHEN end .)
    mayor           reduce using rule 14 (CASE -> case LISTAWHEN end .)
    menor           reduce using rule 14 (CASE -> case LISTAWHEN end .)
    mayor_igual     reduce using rule 14 (CASE -> case LISTAWHEN end .)
    menor_igual     reduce using rule 14 (CASE -> case LISTAWHEN end .)
    igual           reduce using rule 14 (CASE -> case LISTAWHEN end .)
    diferente1      reduce using rule 14 (CASE -> case LISTAWHEN end .)
    diferente2      reduce using rule 14 (CASE -> case LISTAWHEN end .)
    punto           reduce using rule 14 (CASE -> case LISTAWHEN end .)
    between         reduce using rule 14 (CASE -> case LISTAWHEN end .)
    in              reduce using rule 14 (CASE -> case LISTAWHEN end .)
    not             reduce using rule 14 (CASE -> case LISTAWHEN end .)
    is              reduce using rule 14 (CASE -> case LISTAWHEN end .)
    isnull          reduce using rule 14 (CASE -> case LISTAWHEN end .)
    notnull         reduce using rule 14 (CASE -> case LISTAWHEN end .)
    coma            reduce using rule 14 (CASE -> case LISTAWHEN end .)
    parc            reduce using rule 14 (CASE -> case LISTAWHEN end .)
    then            reduce using rule 14 (CASE -> case LISTAWHEN end .)
    as              reduce using rule 14 (CASE -> case LISTAWHEN end .)
    id              reduce using rule 14 (CASE -> case LISTAWHEN end .)
    where           reduce using rule 14 (CASE -> case LISTAWHEN end .)
    group           reduce using rule 14 (CASE -> case LISTAWHEN end .)
    having          reduce using rule 14 (CASE -> case LISTAWHEN end .)
    order           reduce using rule 14 (CASE -> case LISTAWHEN end .)
    end             reduce using rule 14 (CASE -> case LISTAWHEN end .)
    else            reduce using rule 14 (CASE -> case LISTAWHEN end .)
    when            reduce using rule 14 (CASE -> case LISTAWHEN end .)
    constraint      reduce using rule 14 (CASE -> case LISTAWHEN end .)
    default         reduce using rule 14 (CASE -> case LISTAWHEN end .)
    primary         reduce using rule 14 (CASE -> case LISTAWHEN end .)
    references      reduce using rule 14 (CASE -> case LISTAWHEN end .)
    null            reduce using rule 14 (CASE -> case LISTAWHEN end .)
    asc             reduce using rule 14 (CASE -> case LISTAWHEN end .)
    desc            reduce using rule 14 (CASE -> case LISTAWHEN end .)


state 111

    (15) LISTAWHEN -> LISTAWHEN WHEN .

    end             reduce using rule 15 (LISTAWHEN -> LISTAWHEN WHEN .)
    else            reduce using rule 15 (LISTAWHEN -> LISTAWHEN WHEN .)
    when            reduce using rule 15 (LISTAWHEN -> LISTAWHEN WHEN .)


state 112

    (18) ELSE -> else . LEXP
    (98) LEXP -> . LEXP coma EXP
    (99) LEXP -> . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    LEXP                           shift and go to state 175
    EXP                            shift and go to state 35
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 113

    (17) WHEN -> when LEXP . then LEXP
    (98) LEXP -> LEXP . coma EXP

    then            shift and go to state 176
    coma            shift and go to state 68


state 114

    (71) SELECT -> select distinct LSELECT r_from . LFROM WHERE GROUP HAVING ORDER
    (76) LFROM -> . LFROM coma FROM
    (77) LFROM -> . FROM
    (78) FROM -> . EXP
    (79) FROM -> . EXP as id
    (80) FROM -> . EXP id
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    LFROM                          shift and go to state 177
    FROM                           shift and go to state 116
    EXP                            shift and go to state 117
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 115

    (72) SELECT -> select LSELECT r_from LFROM . WHERE GROUP HAVING ORDER
    (76) LFROM -> LFROM . coma FROM
    (81) WHERE -> . where EXP
    (82) WHERE -> .

  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for where resolved as shift
    coma            shift and go to state 179
    where           shift and go to state 180
    r_from          reduce using rule 82 (WHERE -> .)
    ptcoma          reduce using rule 82 (WHERE -> .)
    mas             reduce using rule 82 (WHERE -> .)
    menos           reduce using rule 82 (WHERE -> .)
    multiplicacion  reduce using rule 82 (WHERE -> .)
    division        reduce using rule 82 (WHERE -> .)
    modulo          reduce using rule 82 (WHERE -> .)
    elevado         reduce using rule 82 (WHERE -> .)
    and             reduce using rule 82 (WHERE -> .)
    or              reduce using rule 82 (WHERE -> .)
    mayor           reduce using rule 82 (WHERE -> .)
    menor           reduce using rule 82 (WHERE -> .)
    mayor_igual     reduce using rule 82 (WHERE -> .)
    menor_igual     reduce using rule 82 (WHERE -> .)
    igual           reduce using rule 82 (WHERE -> .)
    diferente1      reduce using rule 82 (WHERE -> .)
    diferente2      reduce using rule 82 (WHERE -> .)
    punto           reduce using rule 82 (WHERE -> .)
    between         reduce using rule 82 (WHERE -> .)
    in              reduce using rule 82 (WHERE -> .)
    not             reduce using rule 82 (WHERE -> .)
    is              reduce using rule 82 (WHERE -> .)
    isnull          reduce using rule 82 (WHERE -> .)
    notnull         reduce using rule 82 (WHERE -> .)
    parc            reduce using rule 82 (WHERE -> .)
    then            reduce using rule 82 (WHERE -> .)
    as              reduce using rule 82 (WHERE -> .)
    id              reduce using rule 82 (WHERE -> .)
    group           reduce using rule 82 (WHERE -> .)
    having          reduce using rule 82 (WHERE -> .)
    order           reduce using rule 82 (WHERE -> .)
    end             reduce using rule 82 (WHERE -> .)
    else            reduce using rule 82 (WHERE -> .)
    when            reduce using rule 82 (WHERE -> .)
    constraint      reduce using rule 82 (WHERE -> .)
    default         reduce using rule 82 (WHERE -> .)
    primary         reduce using rule 82 (WHERE -> .)
    references      reduce using rule 82 (WHERE -> .)
    null            reduce using rule 82 (WHERE -> .)
    asc             reduce using rule 82 (WHERE -> .)
    desc            reduce using rule 82 (WHERE -> .)

  ! coma            [ reduce using rule 82 (WHERE -> .) ]
  ! where           [ reduce using rule 82 (WHERE -> .) ]

    WHERE                          shift and go to state 178

state 116

    (77) LFROM -> FROM .

    r_from          reduce using rule 77 (LFROM -> FROM .)
    ptcoma          reduce using rule 77 (LFROM -> FROM .)
    mas             reduce using rule 77 (LFROM -> FROM .)
    menos           reduce using rule 77 (LFROM -> FROM .)
    multiplicacion  reduce using rule 77 (LFROM -> FROM .)
    division        reduce using rule 77 (LFROM -> FROM .)
    modulo          reduce using rule 77 (LFROM -> FROM .)
    elevado         reduce using rule 77 (LFROM -> FROM .)
    and             reduce using rule 77 (LFROM -> FROM .)
    or              reduce using rule 77 (LFROM -> FROM .)
    mayor           reduce using rule 77 (LFROM -> FROM .)
    menor           reduce using rule 77 (LFROM -> FROM .)
    mayor_igual     reduce using rule 77 (LFROM -> FROM .)
    menor_igual     reduce using rule 77 (LFROM -> FROM .)
    igual           reduce using rule 77 (LFROM -> FROM .)
    diferente1      reduce using rule 77 (LFROM -> FROM .)
    diferente2      reduce using rule 77 (LFROM -> FROM .)
    punto           reduce using rule 77 (LFROM -> FROM .)
    between         reduce using rule 77 (LFROM -> FROM .)
    in              reduce using rule 77 (LFROM -> FROM .)
    not             reduce using rule 77 (LFROM -> FROM .)
    is              reduce using rule 77 (LFROM -> FROM .)
    isnull          reduce using rule 77 (LFROM -> FROM .)
    notnull         reduce using rule 77 (LFROM -> FROM .)
    coma            reduce using rule 77 (LFROM -> FROM .)
    parc            reduce using rule 77 (LFROM -> FROM .)
    then            reduce using rule 77 (LFROM -> FROM .)
    as              reduce using rule 77 (LFROM -> FROM .)
    id              reduce using rule 77 (LFROM -> FROM .)
    where           reduce using rule 77 (LFROM -> FROM .)
    group           reduce using rule 77 (LFROM -> FROM .)
    having          reduce using rule 77 (LFROM -> FROM .)
    order           reduce using rule 77 (LFROM -> FROM .)
    end             reduce using rule 77 (LFROM -> FROM .)
    else            reduce using rule 77 (LFROM -> FROM .)
    when            reduce using rule 77 (LFROM -> FROM .)
    constraint      reduce using rule 77 (LFROM -> FROM .)
    default         reduce using rule 77 (LFROM -> FROM .)
    primary         reduce using rule 77 (LFROM -> FROM .)
    references      reduce using rule 77 (LFROM -> FROM .)
    null            reduce using rule 77 (LFROM -> FROM .)
    asc             reduce using rule 77 (LFROM -> FROM .)
    desc            reduce using rule 77 (LFROM -> FROM .)


state 117

    (78) FROM -> EXP .
    (79) FROM -> EXP . as id
    (80) FROM -> EXP . id
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for punto resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
    r_from          reduce using rule 78 (FROM -> EXP .)
    ptcoma          reduce using rule 78 (FROM -> EXP .)
    coma            reduce using rule 78 (FROM -> EXP .)
    parc            reduce using rule 78 (FROM -> EXP .)
    then            reduce using rule 78 (FROM -> EXP .)
    where           reduce using rule 78 (FROM -> EXP .)
    group           reduce using rule 78 (FROM -> EXP .)
    having          reduce using rule 78 (FROM -> EXP .)
    order           reduce using rule 78 (FROM -> EXP .)
    end             reduce using rule 78 (FROM -> EXP .)
    else            reduce using rule 78 (FROM -> EXP .)
    when            reduce using rule 78 (FROM -> EXP .)
    constraint      reduce using rule 78 (FROM -> EXP .)
    default         reduce using rule 78 (FROM -> EXP .)
    primary         reduce using rule 78 (FROM -> EXP .)
    references      reduce using rule 78 (FROM -> EXP .)
    null            reduce using rule 78 (FROM -> EXP .)
    asc             reduce using rule 78 (FROM -> EXP .)
    desc            reduce using rule 78 (FROM -> EXP .)
    as              shift and go to state 181
    id              shift and go to state 182
    mas             shift and go to state 69
    menos           shift and go to state 70
    multiplicacion  shift and go to state 71
    division        shift and go to state 72
    modulo          shift and go to state 73
    elevado         shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    mayor           shift and go to state 77
    menor           shift and go to state 78
    mayor_igual     shift and go to state 79
    menor_igual     shift and go to state 80
    igual           shift and go to state 81
    diferente1      shift and go to state 82
    diferente2      shift and go to state 83
    punto           shift and go to state 84
    between         shift and go to state 85
    in              shift and go to state 86
    not             shift and go to state 87
    is              shift and go to state 88
    isnull          shift and go to state 89
    notnull         shift and go to state 90

  ! mas             [ reduce using rule 78 (FROM -> EXP .) ]
  ! menos           [ reduce using rule 78 (FROM -> EXP .) ]
  ! multiplicacion  [ reduce using rule 78 (FROM -> EXP .) ]
  ! division        [ reduce using rule 78 (FROM -> EXP .) ]
  ! modulo          [ reduce using rule 78 (FROM -> EXP .) ]
  ! elevado         [ reduce using rule 78 (FROM -> EXP .) ]
  ! and             [ reduce using rule 78 (FROM -> EXP .) ]
  ! or              [ reduce using rule 78 (FROM -> EXP .) ]
  ! mayor           [ reduce using rule 78 (FROM -> EXP .) ]
  ! menor           [ reduce using rule 78 (FROM -> EXP .) ]
  ! mayor_igual     [ reduce using rule 78 (FROM -> EXP .) ]
  ! menor_igual     [ reduce using rule 78 (FROM -> EXP .) ]
  ! igual           [ reduce using rule 78 (FROM -> EXP .) ]
  ! diferente1      [ reduce using rule 78 (FROM -> EXP .) ]
  ! diferente2      [ reduce using rule 78 (FROM -> EXP .) ]
  ! punto           [ reduce using rule 78 (FROM -> EXP .) ]
  ! between         [ reduce using rule 78 (FROM -> EXP .) ]
  ! in              [ reduce using rule 78 (FROM -> EXP .) ]
  ! not             [ reduce using rule 78 (FROM -> EXP .) ]
  ! is              [ reduce using rule 78 (FROM -> EXP .) ]
  ! isnull          [ reduce using rule 78 (FROM -> EXP .) ]
  ! notnull         [ reduce using rule 78 (FROM -> EXP .) ]
  ! as              [ reduce using rule 78 (FROM -> EXP .) ]
  ! id              [ reduce using rule 78 (FROM -> EXP .) ]


state 118

    (98) LEXP -> LEXP coma EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for punto resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
    r_from          reduce using rule 98 (LEXP -> LEXP coma EXP .)
    ptcoma          reduce using rule 98 (LEXP -> LEXP coma EXP .)
    coma            reduce using rule 98 (LEXP -> LEXP coma EXP .)
    parc            reduce using rule 98 (LEXP -> LEXP coma EXP .)
    then            reduce using rule 98 (LEXP -> LEXP coma EXP .)
    as              reduce using rule 98 (LEXP -> LEXP coma EXP .)
    id              reduce using rule 98 (LEXP -> LEXP coma EXP .)
    where           reduce using rule 98 (LEXP -> LEXP coma EXP .)
    group           reduce using rule 98 (LEXP -> LEXP coma EXP .)
    having          reduce using rule 98 (LEXP -> LEXP coma EXP .)
    order           reduce using rule 98 (LEXP -> LEXP coma EXP .)
    end             reduce using rule 98 (LEXP -> LEXP coma EXP .)
    else            reduce using rule 98 (LEXP -> LEXP coma EXP .)
    when            reduce using rule 98 (LEXP -> LEXP coma EXP .)
    constraint      reduce using rule 98 (LEXP -> LEXP coma EXP .)
    default         reduce using rule 98 (LEXP -> LEXP coma EXP .)
    primary         reduce using rule 98 (LEXP -> LEXP coma EXP .)
    references      reduce using rule 98 (LEXP -> LEXP coma EXP .)
    null            reduce using rule 98 (LEXP -> LEXP coma EXP .)
    asc             reduce using rule 98 (LEXP -> LEXP coma EXP .)
    desc            reduce using rule 98 (LEXP -> LEXP coma EXP .)
    mas             shift and go to state 69
    menos           shift and go to state 70
    multiplicacion  shift and go to state 71
    division        shift and go to state 72
    modulo          shift and go to state 73
    elevado         shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    mayor           shift and go to state 77
    menor           shift and go to state 78
    mayor_igual     shift and go to state 79
    menor_igual     shift and go to state 80
    igual           shift and go to state 81
    diferente1      shift and go to state 82
    diferente2      shift and go to state 83
    punto           shift and go to state 84
    between         shift and go to state 85
    in              shift and go to state 86
    not             shift and go to state 87
    is              shift and go to state 88
    isnull          shift and go to state 89
    notnull         shift and go to state 90

  ! mas             [ reduce using rule 98 (LEXP -> LEXP coma EXP .) ]
  ! menos           [ reduce using rule 98 (LEXP -> LEXP coma EXP .) ]
  ! multiplicacion  [ reduce using rule 98 (LEXP -> LEXP coma EXP .) ]
  ! division        [ reduce using rule 98 (LEXP -> LEXP coma EXP .) ]
  ! modulo          [ reduce using rule 98 (LEXP -> LEXP coma EXP .) ]
  ! elevado         [ reduce using rule 98 (LEXP -> LEXP coma EXP .) ]
  ! and             [ reduce using rule 98 (LEXP -> LEXP coma EXP .) ]
  ! or              [ reduce using rule 98 (LEXP -> LEXP coma EXP .) ]
  ! mayor           [ reduce using rule 98 (LEXP -> LEXP coma EXP .) ]
  ! menor           [ reduce using rule 98 (LEXP -> LEXP coma EXP .) ]
  ! mayor_igual     [ reduce using rule 98 (LEXP -> LEXP coma EXP .) ]
  ! menor_igual     [ reduce using rule 98 (LEXP -> LEXP coma EXP .) ]
  ! igual           [ reduce using rule 98 (LEXP -> LEXP coma EXP .) ]
  ! diferente1      [ reduce using rule 98 (LEXP -> LEXP coma EXP .) ]
  ! diferente2      [ reduce using rule 98 (LEXP -> LEXP coma EXP .) ]
  ! punto           [ reduce using rule 98 (LEXP -> LEXP coma EXP .) ]
  ! between         [ reduce using rule 98 (LEXP -> LEXP coma EXP .) ]
  ! in              [ reduce using rule 98 (LEXP -> LEXP coma EXP .) ]
  ! not             [ reduce using rule 98 (LEXP -> LEXP coma EXP .) ]
  ! is              [ reduce using rule 98 (LEXP -> LEXP coma EXP .) ]
  ! isnull          [ reduce using rule 98 (LEXP -> LEXP coma EXP .) ]
  ! notnull         [ reduce using rule 98 (LEXP -> LEXP coma EXP .) ]


state 119

    (129) EXP -> EXP mas EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 129 (EXP -> EXP mas EXP .)
    ptcoma          reduce using rule 129 (EXP -> EXP mas EXP .)
    mas             reduce using rule 129 (EXP -> EXP mas EXP .)
    menos           reduce using rule 129 (EXP -> EXP mas EXP .)
    multiplicacion  reduce using rule 129 (EXP -> EXP mas EXP .)
    division        reduce using rule 129 (EXP -> EXP mas EXP .)
    modulo          reduce using rule 129 (EXP -> EXP mas EXP .)
    elevado         reduce using rule 129 (EXP -> EXP mas EXP .)
    punto           reduce using rule 129 (EXP -> EXP mas EXP .)
    between         reduce using rule 129 (EXP -> EXP mas EXP .)
    in              reduce using rule 129 (EXP -> EXP mas EXP .)
    is              reduce using rule 129 (EXP -> EXP mas EXP .)
    isnull          reduce using rule 129 (EXP -> EXP mas EXP .)
    notnull         reduce using rule 129 (EXP -> EXP mas EXP .)
    coma            reduce using rule 129 (EXP -> EXP mas EXP .)
    parc            reduce using rule 129 (EXP -> EXP mas EXP .)
    then            reduce using rule 129 (EXP -> EXP mas EXP .)
    as              reduce using rule 129 (EXP -> EXP mas EXP .)
    id              reduce using rule 129 (EXP -> EXP mas EXP .)
    where           reduce using rule 129 (EXP -> EXP mas EXP .)
    group           reduce using rule 129 (EXP -> EXP mas EXP .)
    having          reduce using rule 129 (EXP -> EXP mas EXP .)
    order           reduce using rule 129 (EXP -> EXP mas EXP .)
    end             reduce using rule 129 (EXP -> EXP mas EXP .)
    else            reduce using rule 129 (EXP -> EXP mas EXP .)
    when            reduce using rule 129 (EXP -> EXP mas EXP .)
    constraint      reduce using rule 129 (EXP -> EXP mas EXP .)
    default         reduce using rule 129 (EXP -> EXP mas EXP .)
    primary         reduce using rule 129 (EXP -> EXP mas EXP .)
    references      reduce using rule 129 (EXP -> EXP mas EXP .)
    null            reduce using rule 129 (EXP -> EXP mas EXP .)
    asc             reduce using rule 129 (EXP -> EXP mas EXP .)
    desc            reduce using rule 129 (EXP -> EXP mas EXP .)
    and             shift and go to state 75
    or              shift and go to state 76
    mayor           shift and go to state 77
    menor           shift and go to state 78
    mayor_igual     shift and go to state 79
    menor_igual     shift and go to state 80
    igual           shift and go to state 81
    diferente1      shift and go to state 82
    diferente2      shift and go to state 83
    not             shift and go to state 87

  ! and             [ reduce using rule 129 (EXP -> EXP mas EXP .) ]
  ! or              [ reduce using rule 129 (EXP -> EXP mas EXP .) ]
  ! mayor           [ reduce using rule 129 (EXP -> EXP mas EXP .) ]
  ! menor           [ reduce using rule 129 (EXP -> EXP mas EXP .) ]
  ! mayor_igual     [ reduce using rule 129 (EXP -> EXP mas EXP .) ]
  ! menor_igual     [ reduce using rule 129 (EXP -> EXP mas EXP .) ]
  ! igual           [ reduce using rule 129 (EXP -> EXP mas EXP .) ]
  ! diferente1      [ reduce using rule 129 (EXP -> EXP mas EXP .) ]
  ! diferente2      [ reduce using rule 129 (EXP -> EXP mas EXP .) ]
  ! not             [ reduce using rule 129 (EXP -> EXP mas EXP .) ]
  ! mas             [ shift and go to state 69 ]
  ! menos           [ shift and go to state 70 ]
  ! multiplicacion  [ shift and go to state 71 ]
  ! division        [ shift and go to state 72 ]
  ! modulo          [ shift and go to state 73 ]
  ! elevado         [ shift and go to state 74 ]
  ! punto           [ shift and go to state 84 ]
  ! between         [ shift and go to state 85 ]
  ! in              [ shift and go to state 86 ]
  ! is              [ shift and go to state 88 ]
  ! isnull          [ shift and go to state 89 ]
  ! notnull         [ shift and go to state 90 ]


state 120

    (130) EXP -> EXP menos EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 130 (EXP -> EXP menos EXP .)
    ptcoma          reduce using rule 130 (EXP -> EXP menos EXP .)
    mas             reduce using rule 130 (EXP -> EXP menos EXP .)
    menos           reduce using rule 130 (EXP -> EXP menos EXP .)
    multiplicacion  reduce using rule 130 (EXP -> EXP menos EXP .)
    division        reduce using rule 130 (EXP -> EXP menos EXP .)
    modulo          reduce using rule 130 (EXP -> EXP menos EXP .)
    elevado         reduce using rule 130 (EXP -> EXP menos EXP .)
    punto           reduce using rule 130 (EXP -> EXP menos EXP .)
    between         reduce using rule 130 (EXP -> EXP menos EXP .)
    in              reduce using rule 130 (EXP -> EXP menos EXP .)
    is              reduce using rule 130 (EXP -> EXP menos EXP .)
    isnull          reduce using rule 130 (EXP -> EXP menos EXP .)
    notnull         reduce using rule 130 (EXP -> EXP menos EXP .)
    coma            reduce using rule 130 (EXP -> EXP menos EXP .)
    parc            reduce using rule 130 (EXP -> EXP menos EXP .)
    then            reduce using rule 130 (EXP -> EXP menos EXP .)
    as              reduce using rule 130 (EXP -> EXP menos EXP .)
    id              reduce using rule 130 (EXP -> EXP menos EXP .)
    where           reduce using rule 130 (EXP -> EXP menos EXP .)
    group           reduce using rule 130 (EXP -> EXP menos EXP .)
    having          reduce using rule 130 (EXP -> EXP menos EXP .)
    order           reduce using rule 130 (EXP -> EXP menos EXP .)
    end             reduce using rule 130 (EXP -> EXP menos EXP .)
    else            reduce using rule 130 (EXP -> EXP menos EXP .)
    when            reduce using rule 130 (EXP -> EXP menos EXP .)
    constraint      reduce using rule 130 (EXP -> EXP menos EXP .)
    default         reduce using rule 130 (EXP -> EXP menos EXP .)
    primary         reduce using rule 130 (EXP -> EXP menos EXP .)
    references      reduce using rule 130 (EXP -> EXP menos EXP .)
    null            reduce using rule 130 (EXP -> EXP menos EXP .)
    asc             reduce using rule 130 (EXP -> EXP menos EXP .)
    desc            reduce using rule 130 (EXP -> EXP menos EXP .)
    and             shift and go to state 75
    or              shift and go to state 76
    mayor           shift and go to state 77
    menor           shift and go to state 78
    mayor_igual     shift and go to state 79
    menor_igual     shift and go to state 80
    igual           shift and go to state 81
    diferente1      shift and go to state 82
    diferente2      shift and go to state 83
    not             shift and go to state 87

  ! and             [ reduce using rule 130 (EXP -> EXP menos EXP .) ]
  ! or              [ reduce using rule 130 (EXP -> EXP menos EXP .) ]
  ! mayor           [ reduce using rule 130 (EXP -> EXP menos EXP .) ]
  ! menor           [ reduce using rule 130 (EXP -> EXP menos EXP .) ]
  ! mayor_igual     [ reduce using rule 130 (EXP -> EXP menos EXP .) ]
  ! menor_igual     [ reduce using rule 130 (EXP -> EXP menos EXP .) ]
  ! igual           [ reduce using rule 130 (EXP -> EXP menos EXP .) ]
  ! diferente1      [ reduce using rule 130 (EXP -> EXP menos EXP .) ]
  ! diferente2      [ reduce using rule 130 (EXP -> EXP menos EXP .) ]
  ! not             [ reduce using rule 130 (EXP -> EXP menos EXP .) ]
  ! mas             [ shift and go to state 69 ]
  ! menos           [ shift and go to state 70 ]
  ! multiplicacion  [ shift and go to state 71 ]
  ! division        [ shift and go to state 72 ]
  ! modulo          [ shift and go to state 73 ]
  ! elevado         [ shift and go to state 74 ]
  ! punto           [ shift and go to state 84 ]
  ! between         [ shift and go to state 85 ]
  ! in              [ shift and go to state 86 ]
  ! is              [ shift and go to state 88 ]
  ! isnull          [ shift and go to state 89 ]
  ! notnull         [ shift and go to state 90 ]


state 121

    (131) EXP -> EXP multiplicacion EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 131 (EXP -> EXP multiplicacion EXP .)
    ptcoma          reduce using rule 131 (EXP -> EXP multiplicacion EXP .)
    multiplicacion  reduce using rule 131 (EXP -> EXP multiplicacion EXP .)
    division        reduce using rule 131 (EXP -> EXP multiplicacion EXP .)
    modulo          reduce using rule 131 (EXP -> EXP multiplicacion EXP .)
    elevado         reduce using rule 131 (EXP -> EXP multiplicacion EXP .)
    punto           reduce using rule 131 (EXP -> EXP multiplicacion EXP .)
    between         reduce using rule 131 (EXP -> EXP multiplicacion EXP .)
    in              reduce using rule 131 (EXP -> EXP multiplicacion EXP .)
    is              reduce using rule 131 (EXP -> EXP multiplicacion EXP .)
    isnull          reduce using rule 131 (EXP -> EXP multiplicacion EXP .)
    notnull         reduce using rule 131 (EXP -> EXP multiplicacion EXP .)
    coma            reduce using rule 131 (EXP -> EXP multiplicacion EXP .)
    parc            reduce using rule 131 (EXP -> EXP multiplicacion EXP .)
    then            reduce using rule 131 (EXP -> EXP multiplicacion EXP .)
    as              reduce using rule 131 (EXP -> EXP multiplicacion EXP .)
    id              reduce using rule 131 (EXP -> EXP multiplicacion EXP .)
    where           reduce using rule 131 (EXP -> EXP multiplicacion EXP .)
    group           reduce using rule 131 (EXP -> EXP multiplicacion EXP .)
    having          reduce using rule 131 (EXP -> EXP multiplicacion EXP .)
    order           reduce using rule 131 (EXP -> EXP multiplicacion EXP .)
    end             reduce using rule 131 (EXP -> EXP multiplicacion EXP .)
    else            reduce using rule 131 (EXP -> EXP multiplicacion EXP .)
    when            reduce using rule 131 (EXP -> EXP multiplicacion EXP .)
    constraint      reduce using rule 131 (EXP -> EXP multiplicacion EXP .)
    default         reduce using rule 131 (EXP -> EXP multiplicacion EXP .)
    primary         reduce using rule 131 (EXP -> EXP multiplicacion EXP .)
    references      reduce using rule 131 (EXP -> EXP multiplicacion EXP .)
    null            reduce using rule 131 (EXP -> EXP multiplicacion EXP .)
    asc             reduce using rule 131 (EXP -> EXP multiplicacion EXP .)
    desc            reduce using rule 131 (EXP -> EXP multiplicacion EXP .)
    mas             shift and go to state 69
    menos           shift and go to state 70
    and             shift and go to state 75
    or              shift and go to state 76
    mayor           shift and go to state 77
    menor           shift and go to state 78
    mayor_igual     shift and go to state 79
    menor_igual     shift and go to state 80
    igual           shift and go to state 81
    diferente1      shift and go to state 82
    diferente2      shift and go to state 83
    not             shift and go to state 87

  ! mas             [ reduce using rule 131 (EXP -> EXP multiplicacion EXP .) ]
  ! menos           [ reduce using rule 131 (EXP -> EXP multiplicacion EXP .) ]
  ! and             [ reduce using rule 131 (EXP -> EXP multiplicacion EXP .) ]
  ! or              [ reduce using rule 131 (EXP -> EXP multiplicacion EXP .) ]
  ! mayor           [ reduce using rule 131 (EXP -> EXP multiplicacion EXP .) ]
  ! menor           [ reduce using rule 131 (EXP -> EXP multiplicacion EXP .) ]
  ! mayor_igual     [ reduce using rule 131 (EXP -> EXP multiplicacion EXP .) ]
  ! menor_igual     [ reduce using rule 131 (EXP -> EXP multiplicacion EXP .) ]
  ! igual           [ reduce using rule 131 (EXP -> EXP multiplicacion EXP .) ]
  ! diferente1      [ reduce using rule 131 (EXP -> EXP multiplicacion EXP .) ]
  ! diferente2      [ reduce using rule 131 (EXP -> EXP multiplicacion EXP .) ]
  ! not             [ reduce using rule 131 (EXP -> EXP multiplicacion EXP .) ]
  ! multiplicacion  [ shift and go to state 71 ]
  ! division        [ shift and go to state 72 ]
  ! modulo          [ shift and go to state 73 ]
  ! elevado         [ shift and go to state 74 ]
  ! punto           [ shift and go to state 84 ]
  ! between         [ shift and go to state 85 ]
  ! in              [ shift and go to state 86 ]
  ! is              [ shift and go to state 88 ]
  ! isnull          [ shift and go to state 89 ]
  ! notnull         [ shift and go to state 90 ]


state 122

    (132) EXP -> EXP division EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 132 (EXP -> EXP division EXP .)
    ptcoma          reduce using rule 132 (EXP -> EXP division EXP .)
    multiplicacion  reduce using rule 132 (EXP -> EXP division EXP .)
    division        reduce using rule 132 (EXP -> EXP division EXP .)
    modulo          reduce using rule 132 (EXP -> EXP division EXP .)
    elevado         reduce using rule 132 (EXP -> EXP division EXP .)
    punto           reduce using rule 132 (EXP -> EXP division EXP .)
    between         reduce using rule 132 (EXP -> EXP division EXP .)
    in              reduce using rule 132 (EXP -> EXP division EXP .)
    is              reduce using rule 132 (EXP -> EXP division EXP .)
    isnull          reduce using rule 132 (EXP -> EXP division EXP .)
    notnull         reduce using rule 132 (EXP -> EXP division EXP .)
    coma            reduce using rule 132 (EXP -> EXP division EXP .)
    parc            reduce using rule 132 (EXP -> EXP division EXP .)
    then            reduce using rule 132 (EXP -> EXP division EXP .)
    as              reduce using rule 132 (EXP -> EXP division EXP .)
    id              reduce using rule 132 (EXP -> EXP division EXP .)
    where           reduce using rule 132 (EXP -> EXP division EXP .)
    group           reduce using rule 132 (EXP -> EXP division EXP .)
    having          reduce using rule 132 (EXP -> EXP division EXP .)
    order           reduce using rule 132 (EXP -> EXP division EXP .)
    end             reduce using rule 132 (EXP -> EXP division EXP .)
    else            reduce using rule 132 (EXP -> EXP division EXP .)
    when            reduce using rule 132 (EXP -> EXP division EXP .)
    constraint      reduce using rule 132 (EXP -> EXP division EXP .)
    default         reduce using rule 132 (EXP -> EXP division EXP .)
    primary         reduce using rule 132 (EXP -> EXP division EXP .)
    references      reduce using rule 132 (EXP -> EXP division EXP .)
    null            reduce using rule 132 (EXP -> EXP division EXP .)
    asc             reduce using rule 132 (EXP -> EXP division EXP .)
    desc            reduce using rule 132 (EXP -> EXP division EXP .)
    mas             shift and go to state 69
    menos           shift and go to state 70
    and             shift and go to state 75
    or              shift and go to state 76
    mayor           shift and go to state 77
    menor           shift and go to state 78
    mayor_igual     shift and go to state 79
    menor_igual     shift and go to state 80
    igual           shift and go to state 81
    diferente1      shift and go to state 82
    diferente2      shift and go to state 83
    not             shift and go to state 87

  ! mas             [ reduce using rule 132 (EXP -> EXP division EXP .) ]
  ! menos           [ reduce using rule 132 (EXP -> EXP division EXP .) ]
  ! and             [ reduce using rule 132 (EXP -> EXP division EXP .) ]
  ! or              [ reduce using rule 132 (EXP -> EXP division EXP .) ]
  ! mayor           [ reduce using rule 132 (EXP -> EXP division EXP .) ]
  ! menor           [ reduce using rule 132 (EXP -> EXP division EXP .) ]
  ! mayor_igual     [ reduce using rule 132 (EXP -> EXP division EXP .) ]
  ! menor_igual     [ reduce using rule 132 (EXP -> EXP division EXP .) ]
  ! igual           [ reduce using rule 132 (EXP -> EXP division EXP .) ]
  ! diferente1      [ reduce using rule 132 (EXP -> EXP division EXP .) ]
  ! diferente2      [ reduce using rule 132 (EXP -> EXP division EXP .) ]
  ! not             [ reduce using rule 132 (EXP -> EXP division EXP .) ]
  ! multiplicacion  [ shift and go to state 71 ]
  ! division        [ shift and go to state 72 ]
  ! modulo          [ shift and go to state 73 ]
  ! elevado         [ shift and go to state 74 ]
  ! punto           [ shift and go to state 84 ]
  ! between         [ shift and go to state 85 ]
  ! in              [ shift and go to state 86 ]
  ! is              [ shift and go to state 88 ]
  ! isnull          [ shift and go to state 89 ]
  ! notnull         [ shift and go to state 90 ]


state 123

    (133) EXP -> EXP modulo EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 133 (EXP -> EXP modulo EXP .)
    ptcoma          reduce using rule 133 (EXP -> EXP modulo EXP .)
    multiplicacion  reduce using rule 133 (EXP -> EXP modulo EXP .)
    division        reduce using rule 133 (EXP -> EXP modulo EXP .)
    modulo          reduce using rule 133 (EXP -> EXP modulo EXP .)
    elevado         reduce using rule 133 (EXP -> EXP modulo EXP .)
    punto           reduce using rule 133 (EXP -> EXP modulo EXP .)
    between         reduce using rule 133 (EXP -> EXP modulo EXP .)
    in              reduce using rule 133 (EXP -> EXP modulo EXP .)
    is              reduce using rule 133 (EXP -> EXP modulo EXP .)
    isnull          reduce using rule 133 (EXP -> EXP modulo EXP .)
    notnull         reduce using rule 133 (EXP -> EXP modulo EXP .)
    coma            reduce using rule 133 (EXP -> EXP modulo EXP .)
    parc            reduce using rule 133 (EXP -> EXP modulo EXP .)
    then            reduce using rule 133 (EXP -> EXP modulo EXP .)
    as              reduce using rule 133 (EXP -> EXP modulo EXP .)
    id              reduce using rule 133 (EXP -> EXP modulo EXP .)
    where           reduce using rule 133 (EXP -> EXP modulo EXP .)
    group           reduce using rule 133 (EXP -> EXP modulo EXP .)
    having          reduce using rule 133 (EXP -> EXP modulo EXP .)
    order           reduce using rule 133 (EXP -> EXP modulo EXP .)
    end             reduce using rule 133 (EXP -> EXP modulo EXP .)
    else            reduce using rule 133 (EXP -> EXP modulo EXP .)
    when            reduce using rule 133 (EXP -> EXP modulo EXP .)
    constraint      reduce using rule 133 (EXP -> EXP modulo EXP .)
    default         reduce using rule 133 (EXP -> EXP modulo EXP .)
    primary         reduce using rule 133 (EXP -> EXP modulo EXP .)
    references      reduce using rule 133 (EXP -> EXP modulo EXP .)
    null            reduce using rule 133 (EXP -> EXP modulo EXP .)
    asc             reduce using rule 133 (EXP -> EXP modulo EXP .)
    desc            reduce using rule 133 (EXP -> EXP modulo EXP .)
    mas             shift and go to state 69
    menos           shift and go to state 70
    and             shift and go to state 75
    or              shift and go to state 76
    mayor           shift and go to state 77
    menor           shift and go to state 78
    mayor_igual     shift and go to state 79
    menor_igual     shift and go to state 80
    igual           shift and go to state 81
    diferente1      shift and go to state 82
    diferente2      shift and go to state 83
    not             shift and go to state 87

  ! mas             [ reduce using rule 133 (EXP -> EXP modulo EXP .) ]
  ! menos           [ reduce using rule 133 (EXP -> EXP modulo EXP .) ]
  ! and             [ reduce using rule 133 (EXP -> EXP modulo EXP .) ]
  ! or              [ reduce using rule 133 (EXP -> EXP modulo EXP .) ]
  ! mayor           [ reduce using rule 133 (EXP -> EXP modulo EXP .) ]
  ! menor           [ reduce using rule 133 (EXP -> EXP modulo EXP .) ]
  ! mayor_igual     [ reduce using rule 133 (EXP -> EXP modulo EXP .) ]
  ! menor_igual     [ reduce using rule 133 (EXP -> EXP modulo EXP .) ]
  ! igual           [ reduce using rule 133 (EXP -> EXP modulo EXP .) ]
  ! diferente1      [ reduce using rule 133 (EXP -> EXP modulo EXP .) ]
  ! diferente2      [ reduce using rule 133 (EXP -> EXP modulo EXP .) ]
  ! not             [ reduce using rule 133 (EXP -> EXP modulo EXP .) ]
  ! multiplicacion  [ shift and go to state 71 ]
  ! division        [ shift and go to state 72 ]
  ! modulo          [ shift and go to state 73 ]
  ! elevado         [ shift and go to state 74 ]
  ! punto           [ shift and go to state 84 ]
  ! between         [ shift and go to state 85 ]
  ! in              [ shift and go to state 86 ]
  ! is              [ shift and go to state 88 ]
  ! isnull          [ shift and go to state 89 ]
  ! notnull         [ shift and go to state 90 ]


state 124

    (134) EXP -> EXP elevado EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 134 (EXP -> EXP elevado EXP .)
    ptcoma          reduce using rule 134 (EXP -> EXP elevado EXP .)
    elevado         reduce using rule 134 (EXP -> EXP elevado EXP .)
    punto           reduce using rule 134 (EXP -> EXP elevado EXP .)
    between         reduce using rule 134 (EXP -> EXP elevado EXP .)
    in              reduce using rule 134 (EXP -> EXP elevado EXP .)
    is              reduce using rule 134 (EXP -> EXP elevado EXP .)
    isnull          reduce using rule 134 (EXP -> EXP elevado EXP .)
    notnull         reduce using rule 134 (EXP -> EXP elevado EXP .)
    coma            reduce using rule 134 (EXP -> EXP elevado EXP .)
    parc            reduce using rule 134 (EXP -> EXP elevado EXP .)
    then            reduce using rule 134 (EXP -> EXP elevado EXP .)
    as              reduce using rule 134 (EXP -> EXP elevado EXP .)
    id              reduce using rule 134 (EXP -> EXP elevado EXP .)
    where           reduce using rule 134 (EXP -> EXP elevado EXP .)
    group           reduce using rule 134 (EXP -> EXP elevado EXP .)
    having          reduce using rule 134 (EXP -> EXP elevado EXP .)
    order           reduce using rule 134 (EXP -> EXP elevado EXP .)
    end             reduce using rule 134 (EXP -> EXP elevado EXP .)
    else            reduce using rule 134 (EXP -> EXP elevado EXP .)
    when            reduce using rule 134 (EXP -> EXP elevado EXP .)
    constraint      reduce using rule 134 (EXP -> EXP elevado EXP .)
    default         reduce using rule 134 (EXP -> EXP elevado EXP .)
    primary         reduce using rule 134 (EXP -> EXP elevado EXP .)
    references      reduce using rule 134 (EXP -> EXP elevado EXP .)
    null            reduce using rule 134 (EXP -> EXP elevado EXP .)
    asc             reduce using rule 134 (EXP -> EXP elevado EXP .)
    desc            reduce using rule 134 (EXP -> EXP elevado EXP .)
    mas             shift and go to state 69
    menos           shift and go to state 70
    multiplicacion  shift and go to state 71
    division        shift and go to state 72
    modulo          shift and go to state 73
    and             shift and go to state 75
    or              shift and go to state 76
    mayor           shift and go to state 77
    menor           shift and go to state 78
    mayor_igual     shift and go to state 79
    menor_igual     shift and go to state 80
    igual           shift and go to state 81
    diferente1      shift and go to state 82
    diferente2      shift and go to state 83
    not             shift and go to state 87

  ! mas             [ reduce using rule 134 (EXP -> EXP elevado EXP .) ]
  ! menos           [ reduce using rule 134 (EXP -> EXP elevado EXP .) ]
  ! multiplicacion  [ reduce using rule 134 (EXP -> EXP elevado EXP .) ]
  ! division        [ reduce using rule 134 (EXP -> EXP elevado EXP .) ]
  ! modulo          [ reduce using rule 134 (EXP -> EXP elevado EXP .) ]
  ! and             [ reduce using rule 134 (EXP -> EXP elevado EXP .) ]
  ! or              [ reduce using rule 134 (EXP -> EXP elevado EXP .) ]
  ! mayor           [ reduce using rule 134 (EXP -> EXP elevado EXP .) ]
  ! menor           [ reduce using rule 134 (EXP -> EXP elevado EXP .) ]
  ! mayor_igual     [ reduce using rule 134 (EXP -> EXP elevado EXP .) ]
  ! menor_igual     [ reduce using rule 134 (EXP -> EXP elevado EXP .) ]
  ! igual           [ reduce using rule 134 (EXP -> EXP elevado EXP .) ]
  ! diferente1      [ reduce using rule 134 (EXP -> EXP elevado EXP .) ]
  ! diferente2      [ reduce using rule 134 (EXP -> EXP elevado EXP .) ]
  ! not             [ reduce using rule 134 (EXP -> EXP elevado EXP .) ]
  ! elevado         [ shift and go to state 74 ]
  ! punto           [ shift and go to state 84 ]
  ! between         [ shift and go to state 85 ]
  ! in              [ shift and go to state 86 ]
  ! is              [ shift and go to state 88 ]
  ! isnull          [ shift and go to state 89 ]
  ! notnull         [ shift and go to state 90 ]


state 125

    (135) EXP -> EXP and EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 135 (EXP -> EXP and EXP .)
    ptcoma          reduce using rule 135 (EXP -> EXP and EXP .)
    mas             reduce using rule 135 (EXP -> EXP and EXP .)
    menos           reduce using rule 135 (EXP -> EXP and EXP .)
    multiplicacion  reduce using rule 135 (EXP -> EXP and EXP .)
    division        reduce using rule 135 (EXP -> EXP and EXP .)
    modulo          reduce using rule 135 (EXP -> EXP and EXP .)
    elevado         reduce using rule 135 (EXP -> EXP and EXP .)
    and             reduce using rule 135 (EXP -> EXP and EXP .)
    mayor           reduce using rule 135 (EXP -> EXP and EXP .)
    menor           reduce using rule 135 (EXP -> EXP and EXP .)
    mayor_igual     reduce using rule 135 (EXP -> EXP and EXP .)
    menor_igual     reduce using rule 135 (EXP -> EXP and EXP .)
    igual           reduce using rule 135 (EXP -> EXP and EXP .)
    diferente1      reduce using rule 135 (EXP -> EXP and EXP .)
    diferente2      reduce using rule 135 (EXP -> EXP and EXP .)
    punto           reduce using rule 135 (EXP -> EXP and EXP .)
    between         reduce using rule 135 (EXP -> EXP and EXP .)
    in              reduce using rule 135 (EXP -> EXP and EXP .)
    not             reduce using rule 135 (EXP -> EXP and EXP .)
    is              reduce using rule 135 (EXP -> EXP and EXP .)
    isnull          reduce using rule 135 (EXP -> EXP and EXP .)
    notnull         reduce using rule 135 (EXP -> EXP and EXP .)
    coma            reduce using rule 135 (EXP -> EXP and EXP .)
    parc            reduce using rule 135 (EXP -> EXP and EXP .)
    then            reduce using rule 135 (EXP -> EXP and EXP .)
    as              reduce using rule 135 (EXP -> EXP and EXP .)
    id              reduce using rule 135 (EXP -> EXP and EXP .)
    where           reduce using rule 135 (EXP -> EXP and EXP .)
    group           reduce using rule 135 (EXP -> EXP and EXP .)
    having          reduce using rule 135 (EXP -> EXP and EXP .)
    order           reduce using rule 135 (EXP -> EXP and EXP .)
    end             reduce using rule 135 (EXP -> EXP and EXP .)
    else            reduce using rule 135 (EXP -> EXP and EXP .)
    when            reduce using rule 135 (EXP -> EXP and EXP .)
    constraint      reduce using rule 135 (EXP -> EXP and EXP .)
    default         reduce using rule 135 (EXP -> EXP and EXP .)
    primary         reduce using rule 135 (EXP -> EXP and EXP .)
    references      reduce using rule 135 (EXP -> EXP and EXP .)
    null            reduce using rule 135 (EXP -> EXP and EXP .)
    asc             reduce using rule 135 (EXP -> EXP and EXP .)
    desc            reduce using rule 135 (EXP -> EXP and EXP .)
    or              shift and go to state 76

  ! or              [ reduce using rule 135 (EXP -> EXP and EXP .) ]
  ! mas             [ shift and go to state 69 ]
  ! menos           [ shift and go to state 70 ]
  ! multiplicacion  [ shift and go to state 71 ]
  ! division        [ shift and go to state 72 ]
  ! modulo          [ shift and go to state 73 ]
  ! elevado         [ shift and go to state 74 ]
  ! and             [ shift and go to state 75 ]
  ! mayor           [ shift and go to state 77 ]
  ! menor           [ shift and go to state 78 ]
  ! mayor_igual     [ shift and go to state 79 ]
  ! menor_igual     [ shift and go to state 80 ]
  ! igual           [ shift and go to state 81 ]
  ! diferente1      [ shift and go to state 82 ]
  ! diferente2      [ shift and go to state 83 ]
  ! punto           [ shift and go to state 84 ]
  ! between         [ shift and go to state 85 ]
  ! in              [ shift and go to state 86 ]
  ! not             [ shift and go to state 87 ]
  ! is              [ shift and go to state 88 ]
  ! isnull          [ shift and go to state 89 ]
  ! notnull         [ shift and go to state 90 ]


state 126

    (136) EXP -> EXP or EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 136 (EXP -> EXP or EXP .)
    ptcoma          reduce using rule 136 (EXP -> EXP or EXP .)
    mas             reduce using rule 136 (EXP -> EXP or EXP .)
    menos           reduce using rule 136 (EXP -> EXP or EXP .)
    multiplicacion  reduce using rule 136 (EXP -> EXP or EXP .)
    division        reduce using rule 136 (EXP -> EXP or EXP .)
    modulo          reduce using rule 136 (EXP -> EXP or EXP .)
    elevado         reduce using rule 136 (EXP -> EXP or EXP .)
    and             reduce using rule 136 (EXP -> EXP or EXP .)
    or              reduce using rule 136 (EXP -> EXP or EXP .)
    mayor           reduce using rule 136 (EXP -> EXP or EXP .)
    menor           reduce using rule 136 (EXP -> EXP or EXP .)
    mayor_igual     reduce using rule 136 (EXP -> EXP or EXP .)
    menor_igual     reduce using rule 136 (EXP -> EXP or EXP .)
    igual           reduce using rule 136 (EXP -> EXP or EXP .)
    diferente1      reduce using rule 136 (EXP -> EXP or EXP .)
    diferente2      reduce using rule 136 (EXP -> EXP or EXP .)
    punto           reduce using rule 136 (EXP -> EXP or EXP .)
    between         reduce using rule 136 (EXP -> EXP or EXP .)
    in              reduce using rule 136 (EXP -> EXP or EXP .)
    not             reduce using rule 136 (EXP -> EXP or EXP .)
    is              reduce using rule 136 (EXP -> EXP or EXP .)
    isnull          reduce using rule 136 (EXP -> EXP or EXP .)
    notnull         reduce using rule 136 (EXP -> EXP or EXP .)
    coma            reduce using rule 136 (EXP -> EXP or EXP .)
    parc            reduce using rule 136 (EXP -> EXP or EXP .)
    then            reduce using rule 136 (EXP -> EXP or EXP .)
    as              reduce using rule 136 (EXP -> EXP or EXP .)
    id              reduce using rule 136 (EXP -> EXP or EXP .)
    where           reduce using rule 136 (EXP -> EXP or EXP .)
    group           reduce using rule 136 (EXP -> EXP or EXP .)
    having          reduce using rule 136 (EXP -> EXP or EXP .)
    order           reduce using rule 136 (EXP -> EXP or EXP .)
    end             reduce using rule 136 (EXP -> EXP or EXP .)
    else            reduce using rule 136 (EXP -> EXP or EXP .)
    when            reduce using rule 136 (EXP -> EXP or EXP .)
    constraint      reduce using rule 136 (EXP -> EXP or EXP .)
    default         reduce using rule 136 (EXP -> EXP or EXP .)
    primary         reduce using rule 136 (EXP -> EXP or EXP .)
    references      reduce using rule 136 (EXP -> EXP or EXP .)
    null            reduce using rule 136 (EXP -> EXP or EXP .)
    asc             reduce using rule 136 (EXP -> EXP or EXP .)
    desc            reduce using rule 136 (EXP -> EXP or EXP .)

  ! mas             [ shift and go to state 69 ]
  ! menos           [ shift and go to state 70 ]
  ! multiplicacion  [ shift and go to state 71 ]
  ! division        [ shift and go to state 72 ]
  ! modulo          [ shift and go to state 73 ]
  ! elevado         [ shift and go to state 74 ]
  ! and             [ shift and go to state 75 ]
  ! or              [ shift and go to state 76 ]
  ! mayor           [ shift and go to state 77 ]
  ! menor           [ shift and go to state 78 ]
  ! mayor_igual     [ shift and go to state 79 ]
  ! menor_igual     [ shift and go to state 80 ]
  ! igual           [ shift and go to state 81 ]
  ! diferente1      [ shift and go to state 82 ]
  ! diferente2      [ shift and go to state 83 ]
  ! punto           [ shift and go to state 84 ]
  ! between         [ shift and go to state 85 ]
  ! in              [ shift and go to state 86 ]
  ! not             [ shift and go to state 87 ]
  ! is              [ shift and go to state 88 ]
  ! isnull          [ shift and go to state 89 ]
  ! notnull         [ shift and go to state 90 ]


state 127

    (137) EXP -> EXP mayor EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 137 (EXP -> EXP mayor EXP .)
    ptcoma          reduce using rule 137 (EXP -> EXP mayor EXP .)
    mas             reduce using rule 137 (EXP -> EXP mayor EXP .)
    menos           reduce using rule 137 (EXP -> EXP mayor EXP .)
    multiplicacion  reduce using rule 137 (EXP -> EXP mayor EXP .)
    division        reduce using rule 137 (EXP -> EXP mayor EXP .)
    modulo          reduce using rule 137 (EXP -> EXP mayor EXP .)
    elevado         reduce using rule 137 (EXP -> EXP mayor EXP .)
    mayor           reduce using rule 137 (EXP -> EXP mayor EXP .)
    menor           reduce using rule 137 (EXP -> EXP mayor EXP .)
    mayor_igual     reduce using rule 137 (EXP -> EXP mayor EXP .)
    menor_igual     reduce using rule 137 (EXP -> EXP mayor EXP .)
    igual           reduce using rule 137 (EXP -> EXP mayor EXP .)
    diferente1      reduce using rule 137 (EXP -> EXP mayor EXP .)
    diferente2      reduce using rule 137 (EXP -> EXP mayor EXP .)
    punto           reduce using rule 137 (EXP -> EXP mayor EXP .)
    between         reduce using rule 137 (EXP -> EXP mayor EXP .)
    in              reduce using rule 137 (EXP -> EXP mayor EXP .)
    is              reduce using rule 137 (EXP -> EXP mayor EXP .)
    isnull          reduce using rule 137 (EXP -> EXP mayor EXP .)
    notnull         reduce using rule 137 (EXP -> EXP mayor EXP .)
    coma            reduce using rule 137 (EXP -> EXP mayor EXP .)
    parc            reduce using rule 137 (EXP -> EXP mayor EXP .)
    then            reduce using rule 137 (EXP -> EXP mayor EXP .)
    as              reduce using rule 137 (EXP -> EXP mayor EXP .)
    id              reduce using rule 137 (EXP -> EXP mayor EXP .)
    where           reduce using rule 137 (EXP -> EXP mayor EXP .)
    group           reduce using rule 137 (EXP -> EXP mayor EXP .)
    having          reduce using rule 137 (EXP -> EXP mayor EXP .)
    order           reduce using rule 137 (EXP -> EXP mayor EXP .)
    end             reduce using rule 137 (EXP -> EXP mayor EXP .)
    else            reduce using rule 137 (EXP -> EXP mayor EXP .)
    when            reduce using rule 137 (EXP -> EXP mayor EXP .)
    constraint      reduce using rule 137 (EXP -> EXP mayor EXP .)
    default         reduce using rule 137 (EXP -> EXP mayor EXP .)
    primary         reduce using rule 137 (EXP -> EXP mayor EXP .)
    references      reduce using rule 137 (EXP -> EXP mayor EXP .)
    null            reduce using rule 137 (EXP -> EXP mayor EXP .)
    asc             reduce using rule 137 (EXP -> EXP mayor EXP .)
    desc            reduce using rule 137 (EXP -> EXP mayor EXP .)
    and             shift and go to state 75
    or              shift and go to state 76
    not             shift and go to state 87

  ! and             [ reduce using rule 137 (EXP -> EXP mayor EXP .) ]
  ! or              [ reduce using rule 137 (EXP -> EXP mayor EXP .) ]
  ! not             [ reduce using rule 137 (EXP -> EXP mayor EXP .) ]
  ! mas             [ shift and go to state 69 ]
  ! menos           [ shift and go to state 70 ]
  ! multiplicacion  [ shift and go to state 71 ]
  ! division        [ shift and go to state 72 ]
  ! modulo          [ shift and go to state 73 ]
  ! elevado         [ shift and go to state 74 ]
  ! mayor           [ shift and go to state 77 ]
  ! menor           [ shift and go to state 78 ]
  ! mayor_igual     [ shift and go to state 79 ]
  ! menor_igual     [ shift and go to state 80 ]
  ! igual           [ shift and go to state 81 ]
  ! diferente1      [ shift and go to state 82 ]
  ! diferente2      [ shift and go to state 83 ]
  ! punto           [ shift and go to state 84 ]
  ! between         [ shift and go to state 85 ]
  ! in              [ shift and go to state 86 ]
  ! is              [ shift and go to state 88 ]
  ! isnull          [ shift and go to state 89 ]
  ! notnull         [ shift and go to state 90 ]


state 128

    (138) EXP -> EXP menor EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 138 (EXP -> EXP menor EXP .)
    ptcoma          reduce using rule 138 (EXP -> EXP menor EXP .)
    mas             reduce using rule 138 (EXP -> EXP menor EXP .)
    menos           reduce using rule 138 (EXP -> EXP menor EXP .)
    multiplicacion  reduce using rule 138 (EXP -> EXP menor EXP .)
    division        reduce using rule 138 (EXP -> EXP menor EXP .)
    modulo          reduce using rule 138 (EXP -> EXP menor EXP .)
    elevado         reduce using rule 138 (EXP -> EXP menor EXP .)
    mayor           reduce using rule 138 (EXP -> EXP menor EXP .)
    menor           reduce using rule 138 (EXP -> EXP menor EXP .)
    mayor_igual     reduce using rule 138 (EXP -> EXP menor EXP .)
    menor_igual     reduce using rule 138 (EXP -> EXP menor EXP .)
    igual           reduce using rule 138 (EXP -> EXP menor EXP .)
    diferente1      reduce using rule 138 (EXP -> EXP menor EXP .)
    diferente2      reduce using rule 138 (EXP -> EXP menor EXP .)
    punto           reduce using rule 138 (EXP -> EXP menor EXP .)
    between         reduce using rule 138 (EXP -> EXP menor EXP .)
    in              reduce using rule 138 (EXP -> EXP menor EXP .)
    is              reduce using rule 138 (EXP -> EXP menor EXP .)
    isnull          reduce using rule 138 (EXP -> EXP menor EXP .)
    notnull         reduce using rule 138 (EXP -> EXP menor EXP .)
    coma            reduce using rule 138 (EXP -> EXP menor EXP .)
    parc            reduce using rule 138 (EXP -> EXP menor EXP .)
    then            reduce using rule 138 (EXP -> EXP menor EXP .)
    as              reduce using rule 138 (EXP -> EXP menor EXP .)
    id              reduce using rule 138 (EXP -> EXP menor EXP .)
    where           reduce using rule 138 (EXP -> EXP menor EXP .)
    group           reduce using rule 138 (EXP -> EXP menor EXP .)
    having          reduce using rule 138 (EXP -> EXP menor EXP .)
    order           reduce using rule 138 (EXP -> EXP menor EXP .)
    end             reduce using rule 138 (EXP -> EXP menor EXP .)
    else            reduce using rule 138 (EXP -> EXP menor EXP .)
    when            reduce using rule 138 (EXP -> EXP menor EXP .)
    constraint      reduce using rule 138 (EXP -> EXP menor EXP .)
    default         reduce using rule 138 (EXP -> EXP menor EXP .)
    primary         reduce using rule 138 (EXP -> EXP menor EXP .)
    references      reduce using rule 138 (EXP -> EXP menor EXP .)
    null            reduce using rule 138 (EXP -> EXP menor EXP .)
    asc             reduce using rule 138 (EXP -> EXP menor EXP .)
    desc            reduce using rule 138 (EXP -> EXP menor EXP .)
    and             shift and go to state 75
    or              shift and go to state 76
    not             shift and go to state 87

  ! and             [ reduce using rule 138 (EXP -> EXP menor EXP .) ]
  ! or              [ reduce using rule 138 (EXP -> EXP menor EXP .) ]
  ! not             [ reduce using rule 138 (EXP -> EXP menor EXP .) ]
  ! mas             [ shift and go to state 69 ]
  ! menos           [ shift and go to state 70 ]
  ! multiplicacion  [ shift and go to state 71 ]
  ! division        [ shift and go to state 72 ]
  ! modulo          [ shift and go to state 73 ]
  ! elevado         [ shift and go to state 74 ]
  ! mayor           [ shift and go to state 77 ]
  ! menor           [ shift and go to state 78 ]
  ! mayor_igual     [ shift and go to state 79 ]
  ! menor_igual     [ shift and go to state 80 ]
  ! igual           [ shift and go to state 81 ]
  ! diferente1      [ shift and go to state 82 ]
  ! diferente2      [ shift and go to state 83 ]
  ! punto           [ shift and go to state 84 ]
  ! between         [ shift and go to state 85 ]
  ! in              [ shift and go to state 86 ]
  ! is              [ shift and go to state 88 ]
  ! isnull          [ shift and go to state 89 ]
  ! notnull         [ shift and go to state 90 ]


state 129

    (139) EXP -> EXP mayor_igual EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    ptcoma          reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    mas             reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    menos           reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    multiplicacion  reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    division        reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    modulo          reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    elevado         reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    mayor           reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    menor           reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    mayor_igual     reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    menor_igual     reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    igual           reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    diferente1      reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    diferente2      reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    punto           reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    between         reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    in              reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    is              reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    isnull          reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    notnull         reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    coma            reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    parc            reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    then            reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    as              reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    id              reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    where           reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    group           reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    having          reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    order           reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    end             reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    else            reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    when            reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    constraint      reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    default         reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    primary         reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    references      reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    null            reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    asc             reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    desc            reduce using rule 139 (EXP -> EXP mayor_igual EXP .)
    and             shift and go to state 75
    or              shift and go to state 76
    not             shift and go to state 87

  ! and             [ reduce using rule 139 (EXP -> EXP mayor_igual EXP .) ]
  ! or              [ reduce using rule 139 (EXP -> EXP mayor_igual EXP .) ]
  ! not             [ reduce using rule 139 (EXP -> EXP mayor_igual EXP .) ]
  ! mas             [ shift and go to state 69 ]
  ! menos           [ shift and go to state 70 ]
  ! multiplicacion  [ shift and go to state 71 ]
  ! division        [ shift and go to state 72 ]
  ! modulo          [ shift and go to state 73 ]
  ! elevado         [ shift and go to state 74 ]
  ! mayor           [ shift and go to state 77 ]
  ! menor           [ shift and go to state 78 ]
  ! mayor_igual     [ shift and go to state 79 ]
  ! menor_igual     [ shift and go to state 80 ]
  ! igual           [ shift and go to state 81 ]
  ! diferente1      [ shift and go to state 82 ]
  ! diferente2      [ shift and go to state 83 ]
  ! punto           [ shift and go to state 84 ]
  ! between         [ shift and go to state 85 ]
  ! in              [ shift and go to state 86 ]
  ! is              [ shift and go to state 88 ]
  ! isnull          [ shift and go to state 89 ]
  ! notnull         [ shift and go to state 90 ]


state 130

    (140) EXP -> EXP menor_igual EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    ptcoma          reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    mas             reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    menos           reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    multiplicacion  reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    division        reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    modulo          reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    elevado         reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    mayor           reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    menor           reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    mayor_igual     reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    menor_igual     reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    igual           reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    diferente1      reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    diferente2      reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    punto           reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    between         reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    in              reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    is              reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    isnull          reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    notnull         reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    coma            reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    parc            reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    then            reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    as              reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    id              reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    where           reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    group           reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    having          reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    order           reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    end             reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    else            reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    when            reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    constraint      reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    default         reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    primary         reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    references      reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    null            reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    asc             reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    desc            reduce using rule 140 (EXP -> EXP menor_igual EXP .)
    and             shift and go to state 75
    or              shift and go to state 76
    not             shift and go to state 87

  ! and             [ reduce using rule 140 (EXP -> EXP menor_igual EXP .) ]
  ! or              [ reduce using rule 140 (EXP -> EXP menor_igual EXP .) ]
  ! not             [ reduce using rule 140 (EXP -> EXP menor_igual EXP .) ]
  ! mas             [ shift and go to state 69 ]
  ! menos           [ shift and go to state 70 ]
  ! multiplicacion  [ shift and go to state 71 ]
  ! division        [ shift and go to state 72 ]
  ! modulo          [ shift and go to state 73 ]
  ! elevado         [ shift and go to state 74 ]
  ! mayor           [ shift and go to state 77 ]
  ! menor           [ shift and go to state 78 ]
  ! mayor_igual     [ shift and go to state 79 ]
  ! menor_igual     [ shift and go to state 80 ]
  ! igual           [ shift and go to state 81 ]
  ! diferente1      [ shift and go to state 82 ]
  ! diferente2      [ shift and go to state 83 ]
  ! punto           [ shift and go to state 84 ]
  ! between         [ shift and go to state 85 ]
  ! in              [ shift and go to state 86 ]
  ! is              [ shift and go to state 88 ]
  ! isnull          [ shift and go to state 89 ]
  ! notnull         [ shift and go to state 90 ]


state 131

    (141) EXP -> EXP igual EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 141 (EXP -> EXP igual EXP .)
    ptcoma          reduce using rule 141 (EXP -> EXP igual EXP .)
    mas             reduce using rule 141 (EXP -> EXP igual EXP .)
    menos           reduce using rule 141 (EXP -> EXP igual EXP .)
    multiplicacion  reduce using rule 141 (EXP -> EXP igual EXP .)
    division        reduce using rule 141 (EXP -> EXP igual EXP .)
    modulo          reduce using rule 141 (EXP -> EXP igual EXP .)
    elevado         reduce using rule 141 (EXP -> EXP igual EXP .)
    mayor           reduce using rule 141 (EXP -> EXP igual EXP .)
    menor           reduce using rule 141 (EXP -> EXP igual EXP .)
    mayor_igual     reduce using rule 141 (EXP -> EXP igual EXP .)
    menor_igual     reduce using rule 141 (EXP -> EXP igual EXP .)
    igual           reduce using rule 141 (EXP -> EXP igual EXP .)
    diferente1      reduce using rule 141 (EXP -> EXP igual EXP .)
    diferente2      reduce using rule 141 (EXP -> EXP igual EXP .)
    punto           reduce using rule 141 (EXP -> EXP igual EXP .)
    between         reduce using rule 141 (EXP -> EXP igual EXP .)
    in              reduce using rule 141 (EXP -> EXP igual EXP .)
    is              reduce using rule 141 (EXP -> EXP igual EXP .)
    isnull          reduce using rule 141 (EXP -> EXP igual EXP .)
    notnull         reduce using rule 141 (EXP -> EXP igual EXP .)
    coma            reduce using rule 141 (EXP -> EXP igual EXP .)
    parc            reduce using rule 141 (EXP -> EXP igual EXP .)
    then            reduce using rule 141 (EXP -> EXP igual EXP .)
    as              reduce using rule 141 (EXP -> EXP igual EXP .)
    id              reduce using rule 141 (EXP -> EXP igual EXP .)
    where           reduce using rule 141 (EXP -> EXP igual EXP .)
    group           reduce using rule 141 (EXP -> EXP igual EXP .)
    having          reduce using rule 141 (EXP -> EXP igual EXP .)
    order           reduce using rule 141 (EXP -> EXP igual EXP .)
    end             reduce using rule 141 (EXP -> EXP igual EXP .)
    else            reduce using rule 141 (EXP -> EXP igual EXP .)
    when            reduce using rule 141 (EXP -> EXP igual EXP .)
    constraint      reduce using rule 141 (EXP -> EXP igual EXP .)
    default         reduce using rule 141 (EXP -> EXP igual EXP .)
    primary         reduce using rule 141 (EXP -> EXP igual EXP .)
    references      reduce using rule 141 (EXP -> EXP igual EXP .)
    null            reduce using rule 141 (EXP -> EXP igual EXP .)
    asc             reduce using rule 141 (EXP -> EXP igual EXP .)
    desc            reduce using rule 141 (EXP -> EXP igual EXP .)
    and             shift and go to state 75
    or              shift and go to state 76
    not             shift and go to state 87

  ! and             [ reduce using rule 141 (EXP -> EXP igual EXP .) ]
  ! or              [ reduce using rule 141 (EXP -> EXP igual EXP .) ]
  ! not             [ reduce using rule 141 (EXP -> EXP igual EXP .) ]
  ! mas             [ shift and go to state 69 ]
  ! menos           [ shift and go to state 70 ]
  ! multiplicacion  [ shift and go to state 71 ]
  ! division        [ shift and go to state 72 ]
  ! modulo          [ shift and go to state 73 ]
  ! elevado         [ shift and go to state 74 ]
  ! mayor           [ shift and go to state 77 ]
  ! menor           [ shift and go to state 78 ]
  ! mayor_igual     [ shift and go to state 79 ]
  ! menor_igual     [ shift and go to state 80 ]
  ! igual           [ shift and go to state 81 ]
  ! diferente1      [ shift and go to state 82 ]
  ! diferente2      [ shift and go to state 83 ]
  ! punto           [ shift and go to state 84 ]
  ! between         [ shift and go to state 85 ]
  ! in              [ shift and go to state 86 ]
  ! is              [ shift and go to state 88 ]
  ! isnull          [ shift and go to state 89 ]
  ! notnull         [ shift and go to state 90 ]


state 132

    (142) EXP -> EXP diferente1 EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    ptcoma          reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    mas             reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    menos           reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    multiplicacion  reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    division        reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    modulo          reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    elevado         reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    mayor           reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    menor           reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    mayor_igual     reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    menor_igual     reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    igual           reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    diferente1      reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    diferente2      reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    punto           reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    between         reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    in              reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    is              reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    isnull          reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    notnull         reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    coma            reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    parc            reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    then            reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    as              reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    id              reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    where           reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    group           reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    having          reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    order           reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    end             reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    else            reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    when            reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    constraint      reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    default         reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    primary         reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    references      reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    null            reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    asc             reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    desc            reduce using rule 142 (EXP -> EXP diferente1 EXP .)
    and             shift and go to state 75
    or              shift and go to state 76
    not             shift and go to state 87

  ! and             [ reduce using rule 142 (EXP -> EXP diferente1 EXP .) ]
  ! or              [ reduce using rule 142 (EXP -> EXP diferente1 EXP .) ]
  ! not             [ reduce using rule 142 (EXP -> EXP diferente1 EXP .) ]
  ! mas             [ shift and go to state 69 ]
  ! menos           [ shift and go to state 70 ]
  ! multiplicacion  [ shift and go to state 71 ]
  ! division        [ shift and go to state 72 ]
  ! modulo          [ shift and go to state 73 ]
  ! elevado         [ shift and go to state 74 ]
  ! mayor           [ shift and go to state 77 ]
  ! menor           [ shift and go to state 78 ]
  ! mayor_igual     [ shift and go to state 79 ]
  ! menor_igual     [ shift and go to state 80 ]
  ! igual           [ shift and go to state 81 ]
  ! diferente1      [ shift and go to state 82 ]
  ! diferente2      [ shift and go to state 83 ]
  ! punto           [ shift and go to state 84 ]
  ! between         [ shift and go to state 85 ]
  ! in              [ shift and go to state 86 ]
  ! is              [ shift and go to state 88 ]
  ! isnull          [ shift and go to state 89 ]
  ! notnull         [ shift and go to state 90 ]


state 133

    (143) EXP -> EXP diferente2 EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    ptcoma          reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    mas             reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    menos           reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    multiplicacion  reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    division        reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    modulo          reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    elevado         reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    mayor           reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    menor           reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    mayor_igual     reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    menor_igual     reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    igual           reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    diferente1      reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    diferente2      reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    punto           reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    between         reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    in              reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    is              reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    isnull          reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    notnull         reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    coma            reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    parc            reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    then            reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    as              reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    id              reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    where           reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    group           reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    having          reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    order           reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    end             reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    else            reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    when            reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    constraint      reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    default         reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    primary         reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    references      reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    null            reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    asc             reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    desc            reduce using rule 143 (EXP -> EXP diferente2 EXP .)
    and             shift and go to state 75
    or              shift and go to state 76
    not             shift and go to state 87

  ! and             [ reduce using rule 143 (EXP -> EXP diferente2 EXP .) ]
  ! or              [ reduce using rule 143 (EXP -> EXP diferente2 EXP .) ]
  ! not             [ reduce using rule 143 (EXP -> EXP diferente2 EXP .) ]
  ! mas             [ shift and go to state 69 ]
  ! menos           [ shift and go to state 70 ]
  ! multiplicacion  [ shift and go to state 71 ]
  ! division        [ shift and go to state 72 ]
  ! modulo          [ shift and go to state 73 ]
  ! elevado         [ shift and go to state 74 ]
  ! mayor           [ shift and go to state 77 ]
  ! menor           [ shift and go to state 78 ]
  ! mayor_igual     [ shift and go to state 79 ]
  ! menor_igual     [ shift and go to state 80 ]
  ! igual           [ shift and go to state 81 ]
  ! diferente1      [ shift and go to state 82 ]
  ! diferente2      [ shift and go to state 83 ]
  ! punto           [ shift and go to state 84 ]
  ! between         [ shift and go to state 85 ]
  ! in              [ shift and go to state 86 ]
  ! is              [ shift and go to state 88 ]
  ! isnull          [ shift and go to state 89 ]
  ! notnull         [ shift and go to state 90 ]


state 134

    (144) EXP -> EXP punto EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 144 (EXP -> EXP punto EXP .)
    ptcoma          reduce using rule 144 (EXP -> EXP punto EXP .)
    punto           reduce using rule 144 (EXP -> EXP punto EXP .)
    between         reduce using rule 144 (EXP -> EXP punto EXP .)
    in              reduce using rule 144 (EXP -> EXP punto EXP .)
    is              reduce using rule 144 (EXP -> EXP punto EXP .)
    isnull          reduce using rule 144 (EXP -> EXP punto EXP .)
    notnull         reduce using rule 144 (EXP -> EXP punto EXP .)
    coma            reduce using rule 144 (EXP -> EXP punto EXP .)
    parc            reduce using rule 144 (EXP -> EXP punto EXP .)
    then            reduce using rule 144 (EXP -> EXP punto EXP .)
    as              reduce using rule 144 (EXP -> EXP punto EXP .)
    id              reduce using rule 144 (EXP -> EXP punto EXP .)
    where           reduce using rule 144 (EXP -> EXP punto EXP .)
    group           reduce using rule 144 (EXP -> EXP punto EXP .)
    having          reduce using rule 144 (EXP -> EXP punto EXP .)
    order           reduce using rule 144 (EXP -> EXP punto EXP .)
    end             reduce using rule 144 (EXP -> EXP punto EXP .)
    else            reduce using rule 144 (EXP -> EXP punto EXP .)
    when            reduce using rule 144 (EXP -> EXP punto EXP .)
    constraint      reduce using rule 144 (EXP -> EXP punto EXP .)
    default         reduce using rule 144 (EXP -> EXP punto EXP .)
    primary         reduce using rule 144 (EXP -> EXP punto EXP .)
    references      reduce using rule 144 (EXP -> EXP punto EXP .)
    null            reduce using rule 144 (EXP -> EXP punto EXP .)
    asc             reduce using rule 144 (EXP -> EXP punto EXP .)
    desc            reduce using rule 144 (EXP -> EXP punto EXP .)
    mas             shift and go to state 69
    menos           shift and go to state 70
    multiplicacion  shift and go to state 71
    division        shift and go to state 72
    modulo          shift and go to state 73
    elevado         shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    mayor           shift and go to state 77
    menor           shift and go to state 78
    mayor_igual     shift and go to state 79
    menor_igual     shift and go to state 80
    igual           shift and go to state 81
    diferente1      shift and go to state 82
    diferente2      shift and go to state 83
    not             shift and go to state 87

  ! mas             [ reduce using rule 144 (EXP -> EXP punto EXP .) ]
  ! menos           [ reduce using rule 144 (EXP -> EXP punto EXP .) ]
  ! multiplicacion  [ reduce using rule 144 (EXP -> EXP punto EXP .) ]
  ! division        [ reduce using rule 144 (EXP -> EXP punto EXP .) ]
  ! modulo          [ reduce using rule 144 (EXP -> EXP punto EXP .) ]
  ! elevado         [ reduce using rule 144 (EXP -> EXP punto EXP .) ]
  ! and             [ reduce using rule 144 (EXP -> EXP punto EXP .) ]
  ! or              [ reduce using rule 144 (EXP -> EXP punto EXP .) ]
  ! mayor           [ reduce using rule 144 (EXP -> EXP punto EXP .) ]
  ! menor           [ reduce using rule 144 (EXP -> EXP punto EXP .) ]
  ! mayor_igual     [ reduce using rule 144 (EXP -> EXP punto EXP .) ]
  ! menor_igual     [ reduce using rule 144 (EXP -> EXP punto EXP .) ]
  ! igual           [ reduce using rule 144 (EXP -> EXP punto EXP .) ]
  ! diferente1      [ reduce using rule 144 (EXP -> EXP punto EXP .) ]
  ! diferente2      [ reduce using rule 144 (EXP -> EXP punto EXP .) ]
  ! not             [ reduce using rule 144 (EXP -> EXP punto EXP .) ]
  ! punto           [ shift and go to state 84 ]
  ! between         [ shift and go to state 85 ]
  ! in              [ shift and go to state 86 ]
  ! is              [ shift and go to state 88 ]
  ! isnull          [ shift and go to state 89 ]
  ! notnull         [ shift and go to state 90 ]


state 135

    (165) PREDICADOS -> EXP between EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    ptcoma          reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    mas             reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    menos           reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    multiplicacion  reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    division        reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    modulo          reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    elevado         reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    mayor           reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    menor           reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    mayor_igual     reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    menor_igual     reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    igual           reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    diferente1      reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    diferente2      reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    punto           reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    between         reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    in              reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    is              reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    isnull          reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    notnull         reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    coma            reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    parc            reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    then            reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    as              reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    id              reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    where           reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    group           reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    having          reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    order           reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    end             reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    else            reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    when            reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    constraint      reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    default         reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    primary         reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    references      reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    null            reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    asc             reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    desc            reduce using rule 165 (PREDICADOS -> EXP between EXP .)
    and             shift and go to state 75
    or              shift and go to state 76
    not             shift and go to state 87

  ! and             [ reduce using rule 165 (PREDICADOS -> EXP between EXP .) ]
  ! or              [ reduce using rule 165 (PREDICADOS -> EXP between EXP .) ]
  ! not             [ reduce using rule 165 (PREDICADOS -> EXP between EXP .) ]
  ! mas             [ shift and go to state 69 ]
  ! menos           [ shift and go to state 70 ]
  ! multiplicacion  [ shift and go to state 71 ]
  ! division        [ shift and go to state 72 ]
  ! modulo          [ shift and go to state 73 ]
  ! elevado         [ shift and go to state 74 ]
  ! mayor           [ shift and go to state 77 ]
  ! menor           [ shift and go to state 78 ]
  ! mayor_igual     [ shift and go to state 79 ]
  ! menor_igual     [ shift and go to state 80 ]
  ! igual           [ shift and go to state 81 ]
  ! diferente1      [ shift and go to state 82 ]
  ! diferente2      [ shift and go to state 83 ]
  ! punto           [ shift and go to state 84 ]
  ! between         [ shift and go to state 85 ]
  ! in              [ shift and go to state 86 ]
  ! is              [ shift and go to state 88 ]
  ! isnull          [ shift and go to state 89 ]
  ! notnull         [ shift and go to state 90 ]


state 136

    (169) PREDICADOS -> EXP between symetric . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 183
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 137

    (166) PREDICADOS -> EXP in EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    ptcoma          reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    mas             reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    menos           reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    multiplicacion  reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    division        reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    modulo          reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    elevado         reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    mayor           reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    menor           reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    mayor_igual     reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    menor_igual     reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    igual           reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    diferente1      reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    diferente2      reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    punto           reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    between         reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    in              reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    is              reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    isnull          reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    notnull         reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    coma            reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    parc            reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    then            reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    as              reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    id              reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    where           reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    group           reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    having          reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    order           reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    end             reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    else            reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    when            reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    constraint      reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    default         reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    primary         reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    references      reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    null            reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    asc             reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    desc            reduce using rule 166 (PREDICADOS -> EXP in EXP .)
    and             shift and go to state 75
    or              shift and go to state 76
    not             shift and go to state 87

  ! and             [ reduce using rule 166 (PREDICADOS -> EXP in EXP .) ]
  ! or              [ reduce using rule 166 (PREDICADOS -> EXP in EXP .) ]
  ! not             [ reduce using rule 166 (PREDICADOS -> EXP in EXP .) ]
  ! mas             [ shift and go to state 69 ]
  ! menos           [ shift and go to state 70 ]
  ! multiplicacion  [ shift and go to state 71 ]
  ! division        [ shift and go to state 72 ]
  ! modulo          [ shift and go to state 73 ]
  ! elevado         [ shift and go to state 74 ]
  ! mayor           [ shift and go to state 77 ]
  ! menor           [ shift and go to state 78 ]
  ! mayor_igual     [ shift and go to state 79 ]
  ! menor_igual     [ shift and go to state 80 ]
  ! igual           [ shift and go to state 81 ]
  ! diferente1      [ shift and go to state 82 ]
  ! diferente2      [ shift and go to state 83 ]
  ! punto           [ shift and go to state 84 ]
  ! between         [ shift and go to state 85 ]
  ! in              [ shift and go to state 86 ]
  ! is              [ shift and go to state 88 ]
  ! isnull          [ shift and go to state 89 ]
  ! notnull         [ shift and go to state 90 ]


state 138

    (167) PREDICADOS -> EXP not in . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 184
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 139

    (168) PREDICADOS -> EXP not between . EXP
    (170) PREDICADOS -> EXP not between . symetric EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    symetric        shift and go to state 186
    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 185
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 140

    (171) PREDICADOS -> EXP is distinct . r_from EXP

    r_from          shift and go to state 187


state 141

    (172) PREDICADOS -> EXP is not . distinct r_from EXP
    (177) PREDICADOS -> EXP is not . true
    (179) PREDICADOS -> EXP is not . false
    (181) PREDICADOS -> EXP is not . unknown
    (63) PNULL -> not . null

    distinct        shift and go to state 188
    true            shift and go to state 189
    false           shift and go to state 190
    unknown         shift and go to state 191
    null            shift and go to state 192


state 142

    (173) PREDICADOS -> EXP is PNULL .

    r_from          reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    ptcoma          reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    mas             reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    menos           reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    multiplicacion  reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    division        reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    modulo          reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    elevado         reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    and             reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    or              reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    mayor           reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    menor           reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    mayor_igual     reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    menor_igual     reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    igual           reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    diferente1      reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    diferente2      reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    punto           reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    between         reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    in              reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    not             reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    is              reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    isnull          reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    notnull         reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    coma            reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    parc            reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    then            reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    as              reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    id              reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    where           reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    group           reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    having          reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    order           reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    end             reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    else            reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    when            reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    constraint      reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    default         reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    primary         reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    references      reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    null            reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    asc             reduce using rule 173 (PREDICADOS -> EXP is PNULL .)
    desc            reduce using rule 173 (PREDICADOS -> EXP is PNULL .)


state 143

    (176) PREDICADOS -> EXP is true .

    r_from          reduce using rule 176 (PREDICADOS -> EXP is true .)
    ptcoma          reduce using rule 176 (PREDICADOS -> EXP is true .)
    mas             reduce using rule 176 (PREDICADOS -> EXP is true .)
    menos           reduce using rule 176 (PREDICADOS -> EXP is true .)
    multiplicacion  reduce using rule 176 (PREDICADOS -> EXP is true .)
    division        reduce using rule 176 (PREDICADOS -> EXP is true .)
    modulo          reduce using rule 176 (PREDICADOS -> EXP is true .)
    elevado         reduce using rule 176 (PREDICADOS -> EXP is true .)
    and             reduce using rule 176 (PREDICADOS -> EXP is true .)
    or              reduce using rule 176 (PREDICADOS -> EXP is true .)
    mayor           reduce using rule 176 (PREDICADOS -> EXP is true .)
    menor           reduce using rule 176 (PREDICADOS -> EXP is true .)
    mayor_igual     reduce using rule 176 (PREDICADOS -> EXP is true .)
    menor_igual     reduce using rule 176 (PREDICADOS -> EXP is true .)
    igual           reduce using rule 176 (PREDICADOS -> EXP is true .)
    diferente1      reduce using rule 176 (PREDICADOS -> EXP is true .)
    diferente2      reduce using rule 176 (PREDICADOS -> EXP is true .)
    punto           reduce using rule 176 (PREDICADOS -> EXP is true .)
    between         reduce using rule 176 (PREDICADOS -> EXP is true .)
    in              reduce using rule 176 (PREDICADOS -> EXP is true .)
    not             reduce using rule 176 (PREDICADOS -> EXP is true .)
    is              reduce using rule 176 (PREDICADOS -> EXP is true .)
    isnull          reduce using rule 176 (PREDICADOS -> EXP is true .)
    notnull         reduce using rule 176 (PREDICADOS -> EXP is true .)
    coma            reduce using rule 176 (PREDICADOS -> EXP is true .)
    parc            reduce using rule 176 (PREDICADOS -> EXP is true .)
    then            reduce using rule 176 (PREDICADOS -> EXP is true .)
    as              reduce using rule 176 (PREDICADOS -> EXP is true .)
    id              reduce using rule 176 (PREDICADOS -> EXP is true .)
    where           reduce using rule 176 (PREDICADOS -> EXP is true .)
    group           reduce using rule 176 (PREDICADOS -> EXP is true .)
    having          reduce using rule 176 (PREDICADOS -> EXP is true .)
    order           reduce using rule 176 (PREDICADOS -> EXP is true .)
    end             reduce using rule 176 (PREDICADOS -> EXP is true .)
    else            reduce using rule 176 (PREDICADOS -> EXP is true .)
    when            reduce using rule 176 (PREDICADOS -> EXP is true .)
    constraint      reduce using rule 176 (PREDICADOS -> EXP is true .)
    default         reduce using rule 176 (PREDICADOS -> EXP is true .)
    primary         reduce using rule 176 (PREDICADOS -> EXP is true .)
    references      reduce using rule 176 (PREDICADOS -> EXP is true .)
    null            reduce using rule 176 (PREDICADOS -> EXP is true .)
    asc             reduce using rule 176 (PREDICADOS -> EXP is true .)
    desc            reduce using rule 176 (PREDICADOS -> EXP is true .)


state 144

    (178) PREDICADOS -> EXP is false .

    r_from          reduce using rule 178 (PREDICADOS -> EXP is false .)
    ptcoma          reduce using rule 178 (PREDICADOS -> EXP is false .)
    mas             reduce using rule 178 (PREDICADOS -> EXP is false .)
    menos           reduce using rule 178 (PREDICADOS -> EXP is false .)
    multiplicacion  reduce using rule 178 (PREDICADOS -> EXP is false .)
    division        reduce using rule 178 (PREDICADOS -> EXP is false .)
    modulo          reduce using rule 178 (PREDICADOS -> EXP is false .)
    elevado         reduce using rule 178 (PREDICADOS -> EXP is false .)
    and             reduce using rule 178 (PREDICADOS -> EXP is false .)
    or              reduce using rule 178 (PREDICADOS -> EXP is false .)
    mayor           reduce using rule 178 (PREDICADOS -> EXP is false .)
    menor           reduce using rule 178 (PREDICADOS -> EXP is false .)
    mayor_igual     reduce using rule 178 (PREDICADOS -> EXP is false .)
    menor_igual     reduce using rule 178 (PREDICADOS -> EXP is false .)
    igual           reduce using rule 178 (PREDICADOS -> EXP is false .)
    diferente1      reduce using rule 178 (PREDICADOS -> EXP is false .)
    diferente2      reduce using rule 178 (PREDICADOS -> EXP is false .)
    punto           reduce using rule 178 (PREDICADOS -> EXP is false .)
    between         reduce using rule 178 (PREDICADOS -> EXP is false .)
    in              reduce using rule 178 (PREDICADOS -> EXP is false .)
    not             reduce using rule 178 (PREDICADOS -> EXP is false .)
    is              reduce using rule 178 (PREDICADOS -> EXP is false .)
    isnull          reduce using rule 178 (PREDICADOS -> EXP is false .)
    notnull         reduce using rule 178 (PREDICADOS -> EXP is false .)
    coma            reduce using rule 178 (PREDICADOS -> EXP is false .)
    parc            reduce using rule 178 (PREDICADOS -> EXP is false .)
    then            reduce using rule 178 (PREDICADOS -> EXP is false .)
    as              reduce using rule 178 (PREDICADOS -> EXP is false .)
    id              reduce using rule 178 (PREDICADOS -> EXP is false .)
    where           reduce using rule 178 (PREDICADOS -> EXP is false .)
    group           reduce using rule 178 (PREDICADOS -> EXP is false .)
    having          reduce using rule 178 (PREDICADOS -> EXP is false .)
    order           reduce using rule 178 (PREDICADOS -> EXP is false .)
    end             reduce using rule 178 (PREDICADOS -> EXP is false .)
    else            reduce using rule 178 (PREDICADOS -> EXP is false .)
    when            reduce using rule 178 (PREDICADOS -> EXP is false .)
    constraint      reduce using rule 178 (PREDICADOS -> EXP is false .)
    default         reduce using rule 178 (PREDICADOS -> EXP is false .)
    primary         reduce using rule 178 (PREDICADOS -> EXP is false .)
    references      reduce using rule 178 (PREDICADOS -> EXP is false .)
    null            reduce using rule 178 (PREDICADOS -> EXP is false .)
    asc             reduce using rule 178 (PREDICADOS -> EXP is false .)
    desc            reduce using rule 178 (PREDICADOS -> EXP is false .)


state 145

    (180) PREDICADOS -> EXP is unknown .

    r_from          reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    ptcoma          reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    mas             reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    menos           reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    multiplicacion  reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    division        reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    modulo          reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    elevado         reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    and             reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    or              reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    mayor           reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    menor           reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    mayor_igual     reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    menor_igual     reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    igual           reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    diferente1      reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    diferente2      reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    punto           reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    between         reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    in              reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    not             reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    is              reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    isnull          reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    notnull         reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    coma            reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    parc            reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    then            reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    as              reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    id              reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    where           reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    group           reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    having          reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    order           reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    end             reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    else            reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    when            reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    constraint      reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    default         reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    primary         reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    references      reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    null            reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    asc             reduce using rule 180 (PREDICADOS -> EXP is unknown .)
    desc            reduce using rule 180 (PREDICADOS -> EXP is unknown .)


state 146

    (64) PNULL -> null .

    r_from          reduce using rule 64 (PNULL -> null .)
    ptcoma          reduce using rule 64 (PNULL -> null .)
    mas             reduce using rule 64 (PNULL -> null .)
    menos           reduce using rule 64 (PNULL -> null .)
    multiplicacion  reduce using rule 64 (PNULL -> null .)
    division        reduce using rule 64 (PNULL -> null .)
    modulo          reduce using rule 64 (PNULL -> null .)
    elevado         reduce using rule 64 (PNULL -> null .)
    and             reduce using rule 64 (PNULL -> null .)
    or              reduce using rule 64 (PNULL -> null .)
    mayor           reduce using rule 64 (PNULL -> null .)
    menor           reduce using rule 64 (PNULL -> null .)
    mayor_igual     reduce using rule 64 (PNULL -> null .)
    menor_igual     reduce using rule 64 (PNULL -> null .)
    igual           reduce using rule 64 (PNULL -> null .)
    diferente1      reduce using rule 64 (PNULL -> null .)
    diferente2      reduce using rule 64 (PNULL -> null .)
    punto           reduce using rule 64 (PNULL -> null .)
    between         reduce using rule 64 (PNULL -> null .)
    in              reduce using rule 64 (PNULL -> null .)
    not             reduce using rule 64 (PNULL -> null .)
    is              reduce using rule 64 (PNULL -> null .)
    isnull          reduce using rule 64 (PNULL -> null .)
    notnull         reduce using rule 64 (PNULL -> null .)
    coma            reduce using rule 64 (PNULL -> null .)
    parc            reduce using rule 64 (PNULL -> null .)
    then            reduce using rule 64 (PNULL -> null .)
    as              reduce using rule 64 (PNULL -> null .)
    id              reduce using rule 64 (PNULL -> null .)
    where           reduce using rule 64 (PNULL -> null .)
    group           reduce using rule 64 (PNULL -> null .)
    having          reduce using rule 64 (PNULL -> null .)
    order           reduce using rule 64 (PNULL -> null .)
    end             reduce using rule 64 (PNULL -> null .)
    else            reduce using rule 64 (PNULL -> null .)
    when            reduce using rule 64 (PNULL -> null .)
    constraint      reduce using rule 64 (PNULL -> null .)
    default         reduce using rule 64 (PNULL -> null .)
    primary         reduce using rule 64 (PNULL -> null .)
    references      reduce using rule 64 (PNULL -> null .)
    null            reduce using rule 64 (PNULL -> null .)
    asc             reduce using rule 64 (PNULL -> null .)
    desc            reduce using rule 64 (PNULL -> null .)


state 147

    (148) EXP -> para EXP parc .

    r_from          reduce using rule 148 (EXP -> para EXP parc .)
    ptcoma          reduce using rule 148 (EXP -> para EXP parc .)
    mas             reduce using rule 148 (EXP -> para EXP parc .)
    menos           reduce using rule 148 (EXP -> para EXP parc .)
    multiplicacion  reduce using rule 148 (EXP -> para EXP parc .)
    division        reduce using rule 148 (EXP -> para EXP parc .)
    modulo          reduce using rule 148 (EXP -> para EXP parc .)
    elevado         reduce using rule 148 (EXP -> para EXP parc .)
    and             reduce using rule 148 (EXP -> para EXP parc .)
    or              reduce using rule 148 (EXP -> para EXP parc .)
    mayor           reduce using rule 148 (EXP -> para EXP parc .)
    menor           reduce using rule 148 (EXP -> para EXP parc .)
    mayor_igual     reduce using rule 148 (EXP -> para EXP parc .)
    menor_igual     reduce using rule 148 (EXP -> para EXP parc .)
    igual           reduce using rule 148 (EXP -> para EXP parc .)
    diferente1      reduce using rule 148 (EXP -> para EXP parc .)
    diferente2      reduce using rule 148 (EXP -> para EXP parc .)
    punto           reduce using rule 148 (EXP -> para EXP parc .)
    between         reduce using rule 148 (EXP -> para EXP parc .)
    in              reduce using rule 148 (EXP -> para EXP parc .)
    not             reduce using rule 148 (EXP -> para EXP parc .)
    is              reduce using rule 148 (EXP -> para EXP parc .)
    isnull          reduce using rule 148 (EXP -> para EXP parc .)
    notnull         reduce using rule 148 (EXP -> para EXP parc .)
    coma            reduce using rule 148 (EXP -> para EXP parc .)
    parc            reduce using rule 148 (EXP -> para EXP parc .)
    then            reduce using rule 148 (EXP -> para EXP parc .)
    as              reduce using rule 148 (EXP -> para EXP parc .)
    id              reduce using rule 148 (EXP -> para EXP parc .)
    where           reduce using rule 148 (EXP -> para EXP parc .)
    group           reduce using rule 148 (EXP -> para EXP parc .)
    having          reduce using rule 148 (EXP -> para EXP parc .)
    order           reduce using rule 148 (EXP -> para EXP parc .)
    end             reduce using rule 148 (EXP -> para EXP parc .)
    else            reduce using rule 148 (EXP -> para EXP parc .)
    when            reduce using rule 148 (EXP -> para EXP parc .)
    constraint      reduce using rule 148 (EXP -> para EXP parc .)
    default         reduce using rule 148 (EXP -> para EXP parc .)
    primary         reduce using rule 148 (EXP -> para EXP parc .)
    references      reduce using rule 148 (EXP -> para EXP parc .)
    null            reduce using rule 148 (EXP -> para EXP parc .)
    asc             reduce using rule 148 (EXP -> para EXP parc .)
    desc            reduce using rule 148 (EXP -> para EXP parc .)


state 148

    (157) EXP -> id para parc .

    r_from          reduce using rule 157 (EXP -> id para parc .)
    ptcoma          reduce using rule 157 (EXP -> id para parc .)
    mas             reduce using rule 157 (EXP -> id para parc .)
    menos           reduce using rule 157 (EXP -> id para parc .)
    multiplicacion  reduce using rule 157 (EXP -> id para parc .)
    division        reduce using rule 157 (EXP -> id para parc .)
    modulo          reduce using rule 157 (EXP -> id para parc .)
    elevado         reduce using rule 157 (EXP -> id para parc .)
    and             reduce using rule 157 (EXP -> id para parc .)
    or              reduce using rule 157 (EXP -> id para parc .)
    mayor           reduce using rule 157 (EXP -> id para parc .)
    menor           reduce using rule 157 (EXP -> id para parc .)
    mayor_igual     reduce using rule 157 (EXP -> id para parc .)
    menor_igual     reduce using rule 157 (EXP -> id para parc .)
    igual           reduce using rule 157 (EXP -> id para parc .)
    diferente1      reduce using rule 157 (EXP -> id para parc .)
    diferente2      reduce using rule 157 (EXP -> id para parc .)
    punto           reduce using rule 157 (EXP -> id para parc .)
    between         reduce using rule 157 (EXP -> id para parc .)
    in              reduce using rule 157 (EXP -> id para parc .)
    not             reduce using rule 157 (EXP -> id para parc .)
    is              reduce using rule 157 (EXP -> id para parc .)
    isnull          reduce using rule 157 (EXP -> id para parc .)
    notnull         reduce using rule 157 (EXP -> id para parc .)
    coma            reduce using rule 157 (EXP -> id para parc .)
    parc            reduce using rule 157 (EXP -> id para parc .)
    then            reduce using rule 157 (EXP -> id para parc .)
    as              reduce using rule 157 (EXP -> id para parc .)
    id              reduce using rule 157 (EXP -> id para parc .)
    where           reduce using rule 157 (EXP -> id para parc .)
    group           reduce using rule 157 (EXP -> id para parc .)
    having          reduce using rule 157 (EXP -> id para parc .)
    order           reduce using rule 157 (EXP -> id para parc .)
    end             reduce using rule 157 (EXP -> id para parc .)
    else            reduce using rule 157 (EXP -> id para parc .)
    when            reduce using rule 157 (EXP -> id para parc .)
    constraint      reduce using rule 157 (EXP -> id para parc .)
    default         reduce using rule 157 (EXP -> id para parc .)
    primary         reduce using rule 157 (EXP -> id para parc .)
    references      reduce using rule 157 (EXP -> id para parc .)
    null            reduce using rule 157 (EXP -> id para parc .)
    asc             reduce using rule 157 (EXP -> id para parc .)
    desc            reduce using rule 157 (EXP -> id para parc .)


state 149

    (158) EXP -> id para LEXP . parc
    (98) LEXP -> LEXP . coma EXP

    parc            shift and go to state 193
    coma            shift and go to state 68


state 150

    (159) EXP -> extract para FIELDS . r_from timestamp cadena parc

    r_from          shift and go to state 194


state 151

    (123) FIELDS -> year .

    r_from          reduce using rule 123 (FIELDS -> year .)


state 152

    (124) FIELDS -> month .

    r_from          reduce using rule 124 (FIELDS -> month .)


state 153

    (125) FIELDS -> day .

    r_from          reduce using rule 125 (FIELDS -> day .)


state 154

    (126) FIELDS -> hour .

    r_from          reduce using rule 126 (FIELDS -> hour .)


state 155

    (127) FIELDS -> minute .

    r_from          reduce using rule 127 (FIELDS -> minute .)


state 156

    (128) FIELDS -> second .

    r_from          reduce using rule 128 (FIELDS -> second .)


state 157

    (47) CREATETABLE -> create table id para . LDEF parc ptcoma
    (48) CREATETABLE -> create table id para . LDEF parc HERENCIA ptcoma
    (49) LDEF -> . LDEF coma COLDEF
    (50) LDEF -> . COLDEF
    (51) COLDEF -> . OPCONST
    (52) COLDEF -> . constraint id OPCONST
    (53) COLDEF -> . id TIPO
    (54) COLDEF -> . id TIPO LOPCOLUMN
    (65) OPCONST -> . primary key para LEXP parc
    (66) OPCONST -> . foreign key para LEXP parc references table para LEXP parc
    (67) OPCONST -> . unique para LEXP parc
    (68) OPCONST -> . check para EXP parc

    constraint      shift and go to state 199
    id              shift and go to state 195
    primary         shift and go to state 200
    foreign         shift and go to state 201
    unique          shift and go to state 202
    check           shift and go to state 203

    LDEF                           shift and go to state 196
    COLDEF                         shift and go to state 197
    OPCONST                        shift and go to state 198

state 158

    (70) CREATETYPE -> create type id as . enum para LEXP parc

    enum            shift and go to state 204


state 159

    (94) LCAMPOS -> id . igual EXP
    (95) LCAMPOS -> id . igual default

    igual           shift and go to state 205


state 160

    (92) UPDATE -> update id set LCAMPOS . where EXP
    (93) LCAMPOS -> LCAMPOS . id igual EXP

    where           shift and go to state 207
    id              shift and go to state 206


state 161

    (96) DELETE -> delete r_from id where . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 208
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 162

    (23) ALTER -> alter databases id RO .

    ptcoma          reduce using rule 23 (ALTER -> alter databases id RO .)


state 163

    (25) RO -> rename . to id

    to              shift and go to state 209


state 164

    (26) RO -> owner . to id

    to              shift and go to state 210


state 165

    (30) OP -> alter . column id set not null
    (31) OP -> alter . column id set null
    (37) alc -> alter . column id type TIPO

    column          shift and go to state 211


state 166

    (27) altertable -> alter table id OP .

    ptcoma          reduce using rule 27 (altertable -> alter table id OP .)


state 167

    (28) OP -> add . ADD
    (41) ADD -> . column id TIPO
    (42) ADD -> . check para LEXP parc
    (43) ADD -> . constraint id unique para id parc
    (44) ADD -> . foreign key para id parc references id para id parc

    column          shift and go to state 213
    check           shift and go to state 214
    constraint      shift and go to state 215
    foreign         shift and go to state 216

    ADD                            shift and go to state 212

state 168

    (29) OP -> drop . column ALTERDROP
    (33) OP -> drop . ALTERDROP
    (38) ALTERDROP -> . constraint id
    (39) ALTERDROP -> . column LISTACOLUMN
    (40) ALTERDROP -> . check id

    column          shift and go to state 217
    constraint      shift and go to state 219
    check           shift and go to state 220

    ALTERDROP                      shift and go to state 218

state 169

    (32) OP -> listaalc .
    (35) listaalc -> listaalc . coma alc

    ptcoma          reduce using rule 32 (OP -> listaalc .)
    coma            shift and go to state 221


state 170

    (34) OP -> rename . column id to id

    column          shift and go to state 222


state 171

    (36) listaalc -> alc .

    coma            reduce using rule 36 (listaalc -> alc .)
    ptcoma          reduce using rule 36 (listaalc -> alc .)


state 172

    (21) DROP -> drop databases if exist . id

    id              shift and go to state 223


state 173

    (19) INSERT -> insert into id values . para LEXP parc

    para            shift and go to state 224


state 174

    (13) CASE -> case LISTAWHEN ELSE end .

    ptcoma          reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    r_from          reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    mas             reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    menos           reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    multiplicacion  reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    division        reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    modulo          reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    elevado         reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    and             reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    or              reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    mayor           reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    menor           reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    mayor_igual     reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    menor_igual     reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    igual           reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    diferente1      reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    diferente2      reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    punto           reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    between         reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    in              reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    not             reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    is              reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    isnull          reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    notnull         reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    coma            reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    parc            reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    then            reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    as              reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    id              reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    where           reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    group           reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    having          reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    order           reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    end             reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    else            reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    when            reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    constraint      reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    default         reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    primary         reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    references      reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    null            reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    asc             reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)
    desc            reduce using rule 13 (CASE -> case LISTAWHEN ELSE end .)


state 175

    (18) ELSE -> else LEXP .
    (98) LEXP -> LEXP . coma EXP

    end             reduce using rule 18 (ELSE -> else LEXP .)
    coma            shift and go to state 68


state 176

    (17) WHEN -> when LEXP then . LEXP
    (98) LEXP -> . LEXP coma EXP
    (99) LEXP -> . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    LEXP                           shift and go to state 225
    EXP                            shift and go to state 35
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 177

    (71) SELECT -> select distinct LSELECT r_from LFROM . WHERE GROUP HAVING ORDER
    (76) LFROM -> LFROM . coma FROM
    (81) WHERE -> . where EXP
    (82) WHERE -> .

  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for where resolved as shift
    coma            shift and go to state 179
    where           shift and go to state 180
    r_from          reduce using rule 82 (WHERE -> .)
    ptcoma          reduce using rule 82 (WHERE -> .)
    mas             reduce using rule 82 (WHERE -> .)
    menos           reduce using rule 82 (WHERE -> .)
    multiplicacion  reduce using rule 82 (WHERE -> .)
    division        reduce using rule 82 (WHERE -> .)
    modulo          reduce using rule 82 (WHERE -> .)
    elevado         reduce using rule 82 (WHERE -> .)
    and             reduce using rule 82 (WHERE -> .)
    or              reduce using rule 82 (WHERE -> .)
    mayor           reduce using rule 82 (WHERE -> .)
    menor           reduce using rule 82 (WHERE -> .)
    mayor_igual     reduce using rule 82 (WHERE -> .)
    menor_igual     reduce using rule 82 (WHERE -> .)
    igual           reduce using rule 82 (WHERE -> .)
    diferente1      reduce using rule 82 (WHERE -> .)
    diferente2      reduce using rule 82 (WHERE -> .)
    punto           reduce using rule 82 (WHERE -> .)
    between         reduce using rule 82 (WHERE -> .)
    in              reduce using rule 82 (WHERE -> .)
    not             reduce using rule 82 (WHERE -> .)
    is              reduce using rule 82 (WHERE -> .)
    isnull          reduce using rule 82 (WHERE -> .)
    notnull         reduce using rule 82 (WHERE -> .)
    parc            reduce using rule 82 (WHERE -> .)
    then            reduce using rule 82 (WHERE -> .)
    as              reduce using rule 82 (WHERE -> .)
    id              reduce using rule 82 (WHERE -> .)
    group           reduce using rule 82 (WHERE -> .)
    having          reduce using rule 82 (WHERE -> .)
    order           reduce using rule 82 (WHERE -> .)
    end             reduce using rule 82 (WHERE -> .)
    else            reduce using rule 82 (WHERE -> .)
    when            reduce using rule 82 (WHERE -> .)
    constraint      reduce using rule 82 (WHERE -> .)
    default         reduce using rule 82 (WHERE -> .)
    primary         reduce using rule 82 (WHERE -> .)
    references      reduce using rule 82 (WHERE -> .)
    null            reduce using rule 82 (WHERE -> .)
    asc             reduce using rule 82 (WHERE -> .)
    desc            reduce using rule 82 (WHERE -> .)

  ! coma            [ reduce using rule 82 (WHERE -> .) ]
  ! where           [ reduce using rule 82 (WHERE -> .) ]

    WHERE                          shift and go to state 226

state 178

    (72) SELECT -> select LSELECT r_from LFROM WHERE . GROUP HAVING ORDER
    (83) GROUP -> . group by EXP
    (84) GROUP -> .

  ! shift/reduce conflict for group resolved as shift
    group           shift and go to state 228
    r_from          reduce using rule 84 (GROUP -> .)
    ptcoma          reduce using rule 84 (GROUP -> .)
    mas             reduce using rule 84 (GROUP -> .)
    menos           reduce using rule 84 (GROUP -> .)
    multiplicacion  reduce using rule 84 (GROUP -> .)
    division        reduce using rule 84 (GROUP -> .)
    modulo          reduce using rule 84 (GROUP -> .)
    elevado         reduce using rule 84 (GROUP -> .)
    and             reduce using rule 84 (GROUP -> .)
    or              reduce using rule 84 (GROUP -> .)
    mayor           reduce using rule 84 (GROUP -> .)
    menor           reduce using rule 84 (GROUP -> .)
    mayor_igual     reduce using rule 84 (GROUP -> .)
    menor_igual     reduce using rule 84 (GROUP -> .)
    igual           reduce using rule 84 (GROUP -> .)
    diferente1      reduce using rule 84 (GROUP -> .)
    diferente2      reduce using rule 84 (GROUP -> .)
    punto           reduce using rule 84 (GROUP -> .)
    between         reduce using rule 84 (GROUP -> .)
    in              reduce using rule 84 (GROUP -> .)
    not             reduce using rule 84 (GROUP -> .)
    is              reduce using rule 84 (GROUP -> .)
    isnull          reduce using rule 84 (GROUP -> .)
    notnull         reduce using rule 84 (GROUP -> .)
    coma            reduce using rule 84 (GROUP -> .)
    parc            reduce using rule 84 (GROUP -> .)
    then            reduce using rule 84 (GROUP -> .)
    as              reduce using rule 84 (GROUP -> .)
    id              reduce using rule 84 (GROUP -> .)
    where           reduce using rule 84 (GROUP -> .)
    having          reduce using rule 84 (GROUP -> .)
    order           reduce using rule 84 (GROUP -> .)
    end             reduce using rule 84 (GROUP -> .)
    else            reduce using rule 84 (GROUP -> .)
    when            reduce using rule 84 (GROUP -> .)
    constraint      reduce using rule 84 (GROUP -> .)
    default         reduce using rule 84 (GROUP -> .)
    primary         reduce using rule 84 (GROUP -> .)
    references      reduce using rule 84 (GROUP -> .)
    null            reduce using rule 84 (GROUP -> .)
    asc             reduce using rule 84 (GROUP -> .)
    desc            reduce using rule 84 (GROUP -> .)

  ! group           [ reduce using rule 84 (GROUP -> .) ]

    GROUP                          shift and go to state 227

state 179

    (76) LFROM -> LFROM coma . FROM
    (78) FROM -> . EXP
    (79) FROM -> . EXP as id
    (80) FROM -> . EXP id
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    FROM                           shift and go to state 229
    EXP                            shift and go to state 117
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 180

    (81) WHERE -> where . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 230
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 181

    (79) FROM -> EXP as . id

    id              shift and go to state 231


state 182

    (80) FROM -> EXP id .

    r_from          reduce using rule 80 (FROM -> EXP id .)
    ptcoma          reduce using rule 80 (FROM -> EXP id .)
    mas             reduce using rule 80 (FROM -> EXP id .)
    menos           reduce using rule 80 (FROM -> EXP id .)
    multiplicacion  reduce using rule 80 (FROM -> EXP id .)
    division        reduce using rule 80 (FROM -> EXP id .)
    modulo          reduce using rule 80 (FROM -> EXP id .)
    elevado         reduce using rule 80 (FROM -> EXP id .)
    and             reduce using rule 80 (FROM -> EXP id .)
    or              reduce using rule 80 (FROM -> EXP id .)
    mayor           reduce using rule 80 (FROM -> EXP id .)
    menor           reduce using rule 80 (FROM -> EXP id .)
    mayor_igual     reduce using rule 80 (FROM -> EXP id .)
    menor_igual     reduce using rule 80 (FROM -> EXP id .)
    igual           reduce using rule 80 (FROM -> EXP id .)
    diferente1      reduce using rule 80 (FROM -> EXP id .)
    diferente2      reduce using rule 80 (FROM -> EXP id .)
    punto           reduce using rule 80 (FROM -> EXP id .)
    between         reduce using rule 80 (FROM -> EXP id .)
    in              reduce using rule 80 (FROM -> EXP id .)
    not             reduce using rule 80 (FROM -> EXP id .)
    is              reduce using rule 80 (FROM -> EXP id .)
    isnull          reduce using rule 80 (FROM -> EXP id .)
    notnull         reduce using rule 80 (FROM -> EXP id .)
    coma            reduce using rule 80 (FROM -> EXP id .)
    parc            reduce using rule 80 (FROM -> EXP id .)
    then            reduce using rule 80 (FROM -> EXP id .)
    as              reduce using rule 80 (FROM -> EXP id .)
    id              reduce using rule 80 (FROM -> EXP id .)
    where           reduce using rule 80 (FROM -> EXP id .)
    group           reduce using rule 80 (FROM -> EXP id .)
    having          reduce using rule 80 (FROM -> EXP id .)
    order           reduce using rule 80 (FROM -> EXP id .)
    end             reduce using rule 80 (FROM -> EXP id .)
    else            reduce using rule 80 (FROM -> EXP id .)
    when            reduce using rule 80 (FROM -> EXP id .)
    constraint      reduce using rule 80 (FROM -> EXP id .)
    default         reduce using rule 80 (FROM -> EXP id .)
    primary         reduce using rule 80 (FROM -> EXP id .)
    references      reduce using rule 80 (FROM -> EXP id .)
    null            reduce using rule 80 (FROM -> EXP id .)
    asc             reduce using rule 80 (FROM -> EXP id .)
    desc            reduce using rule 80 (FROM -> EXP id .)


state 183

    (169) PREDICADOS -> EXP between symetric EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    ptcoma          reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    mas             reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    menos           reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    multiplicacion  reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    division        reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    modulo          reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    elevado         reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    mayor           reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    menor           reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    mayor_igual     reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    menor_igual     reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    igual           reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    diferente1      reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    diferente2      reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    punto           reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    between         reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    in              reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    is              reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    isnull          reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    notnull         reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    coma            reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    parc            reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    then            reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    as              reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    id              reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    where           reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    group           reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    having          reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    order           reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    end             reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    else            reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    when            reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    constraint      reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    default         reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    primary         reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    references      reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    null            reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    asc             reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    desc            reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .)
    and             shift and go to state 75
    or              shift and go to state 76
    not             shift and go to state 87

  ! and             [ reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .) ]
  ! or              [ reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .) ]
  ! not             [ reduce using rule 169 (PREDICADOS -> EXP between symetric EXP .) ]
  ! mas             [ shift and go to state 69 ]
  ! menos           [ shift and go to state 70 ]
  ! multiplicacion  [ shift and go to state 71 ]
  ! division        [ shift and go to state 72 ]
  ! modulo          [ shift and go to state 73 ]
  ! elevado         [ shift and go to state 74 ]
  ! mayor           [ shift and go to state 77 ]
  ! menor           [ shift and go to state 78 ]
  ! mayor_igual     [ shift and go to state 79 ]
  ! menor_igual     [ shift and go to state 80 ]
  ! igual           [ shift and go to state 81 ]
  ! diferente1      [ shift and go to state 82 ]
  ! diferente2      [ shift and go to state 83 ]
  ! punto           [ shift and go to state 84 ]
  ! between         [ shift and go to state 85 ]
  ! in              [ shift and go to state 86 ]
  ! is              [ shift and go to state 88 ]
  ! isnull          [ shift and go to state 89 ]
  ! notnull         [ shift and go to state 90 ]


state 184

    (167) PREDICADOS -> EXP not in EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    ptcoma          reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    mas             reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    menos           reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    multiplicacion  reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    division        reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    modulo          reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    elevado         reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    mayor           reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    menor           reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    mayor_igual     reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    menor_igual     reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    igual           reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    diferente1      reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    diferente2      reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    punto           reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    between         reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    in              reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    is              reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    isnull          reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    notnull         reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    coma            reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    parc            reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    then            reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    as              reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    id              reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    where           reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    group           reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    having          reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    order           reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    end             reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    else            reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    when            reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    constraint      reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    default         reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    primary         reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    references      reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    null            reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    asc             reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    desc            reduce using rule 167 (PREDICADOS -> EXP not in EXP .)
    and             shift and go to state 75
    or              shift and go to state 76
    not             shift and go to state 87

  ! and             [ reduce using rule 167 (PREDICADOS -> EXP not in EXP .) ]
  ! or              [ reduce using rule 167 (PREDICADOS -> EXP not in EXP .) ]
  ! not             [ reduce using rule 167 (PREDICADOS -> EXP not in EXP .) ]
  ! mas             [ shift and go to state 69 ]
  ! menos           [ shift and go to state 70 ]
  ! multiplicacion  [ shift and go to state 71 ]
  ! division        [ shift and go to state 72 ]
  ! modulo          [ shift and go to state 73 ]
  ! elevado         [ shift and go to state 74 ]
  ! mayor           [ shift and go to state 77 ]
  ! menor           [ shift and go to state 78 ]
  ! mayor_igual     [ shift and go to state 79 ]
  ! menor_igual     [ shift and go to state 80 ]
  ! igual           [ shift and go to state 81 ]
  ! diferente1      [ shift and go to state 82 ]
  ! diferente2      [ shift and go to state 83 ]
  ! punto           [ shift and go to state 84 ]
  ! between         [ shift and go to state 85 ]
  ! in              [ shift and go to state 86 ]
  ! is              [ shift and go to state 88 ]
  ! isnull          [ shift and go to state 89 ]
  ! notnull         [ shift and go to state 90 ]


state 185

    (168) PREDICADOS -> EXP not between EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    ptcoma          reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    mas             reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    menos           reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    multiplicacion  reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    division        reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    modulo          reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    elevado         reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    mayor           reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    menor           reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    mayor_igual     reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    menor_igual     reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    igual           reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    diferente1      reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    diferente2      reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    punto           reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    between         reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    in              reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    is              reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    isnull          reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    notnull         reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    coma            reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    parc            reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    then            reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    as              reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    id              reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    where           reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    group           reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    having          reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    order           reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    end             reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    else            reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    when            reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    constraint      reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    default         reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    primary         reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    references      reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    null            reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    asc             reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    desc            reduce using rule 168 (PREDICADOS -> EXP not between EXP .)
    and             shift and go to state 75
    or              shift and go to state 76
    not             shift and go to state 87

  ! and             [ reduce using rule 168 (PREDICADOS -> EXP not between EXP .) ]
  ! or              [ reduce using rule 168 (PREDICADOS -> EXP not between EXP .) ]
  ! not             [ reduce using rule 168 (PREDICADOS -> EXP not between EXP .) ]
  ! mas             [ shift and go to state 69 ]
  ! menos           [ shift and go to state 70 ]
  ! multiplicacion  [ shift and go to state 71 ]
  ! division        [ shift and go to state 72 ]
  ! modulo          [ shift and go to state 73 ]
  ! elevado         [ shift and go to state 74 ]
  ! mayor           [ shift and go to state 77 ]
  ! menor           [ shift and go to state 78 ]
  ! mayor_igual     [ shift and go to state 79 ]
  ! menor_igual     [ shift and go to state 80 ]
  ! igual           [ shift and go to state 81 ]
  ! diferente1      [ shift and go to state 82 ]
  ! diferente2      [ shift and go to state 83 ]
  ! punto           [ shift and go to state 84 ]
  ! between         [ shift and go to state 85 ]
  ! in              [ shift and go to state 86 ]
  ! is              [ shift and go to state 88 ]
  ! isnull          [ shift and go to state 89 ]
  ! notnull         [ shift and go to state 90 ]


state 186

    (170) PREDICADOS -> EXP not between symetric . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 232
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 187

    (171) PREDICADOS -> EXP is distinct r_from . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 233
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 188

    (172) PREDICADOS -> EXP is not distinct . r_from EXP

    r_from          shift and go to state 234


state 189

    (177) PREDICADOS -> EXP is not true .

    r_from          reduce using rule 177 (PREDICADOS -> EXP is not true .)
    ptcoma          reduce using rule 177 (PREDICADOS -> EXP is not true .)
    mas             reduce using rule 177 (PREDICADOS -> EXP is not true .)
    menos           reduce using rule 177 (PREDICADOS -> EXP is not true .)
    multiplicacion  reduce using rule 177 (PREDICADOS -> EXP is not true .)
    division        reduce using rule 177 (PREDICADOS -> EXP is not true .)
    modulo          reduce using rule 177 (PREDICADOS -> EXP is not true .)
    elevado         reduce using rule 177 (PREDICADOS -> EXP is not true .)
    and             reduce using rule 177 (PREDICADOS -> EXP is not true .)
    or              reduce using rule 177 (PREDICADOS -> EXP is not true .)
    mayor           reduce using rule 177 (PREDICADOS -> EXP is not true .)
    menor           reduce using rule 177 (PREDICADOS -> EXP is not true .)
    mayor_igual     reduce using rule 177 (PREDICADOS -> EXP is not true .)
    menor_igual     reduce using rule 177 (PREDICADOS -> EXP is not true .)
    igual           reduce using rule 177 (PREDICADOS -> EXP is not true .)
    diferente1      reduce using rule 177 (PREDICADOS -> EXP is not true .)
    diferente2      reduce using rule 177 (PREDICADOS -> EXP is not true .)
    punto           reduce using rule 177 (PREDICADOS -> EXP is not true .)
    between         reduce using rule 177 (PREDICADOS -> EXP is not true .)
    in              reduce using rule 177 (PREDICADOS -> EXP is not true .)
    not             reduce using rule 177 (PREDICADOS -> EXP is not true .)
    is              reduce using rule 177 (PREDICADOS -> EXP is not true .)
    isnull          reduce using rule 177 (PREDICADOS -> EXP is not true .)
    notnull         reduce using rule 177 (PREDICADOS -> EXP is not true .)
    coma            reduce using rule 177 (PREDICADOS -> EXP is not true .)
    parc            reduce using rule 177 (PREDICADOS -> EXP is not true .)
    then            reduce using rule 177 (PREDICADOS -> EXP is not true .)
    as              reduce using rule 177 (PREDICADOS -> EXP is not true .)
    id              reduce using rule 177 (PREDICADOS -> EXP is not true .)
    where           reduce using rule 177 (PREDICADOS -> EXP is not true .)
    group           reduce using rule 177 (PREDICADOS -> EXP is not true .)
    having          reduce using rule 177 (PREDICADOS -> EXP is not true .)
    order           reduce using rule 177 (PREDICADOS -> EXP is not true .)
    end             reduce using rule 177 (PREDICADOS -> EXP is not true .)
    else            reduce using rule 177 (PREDICADOS -> EXP is not true .)
    when            reduce using rule 177 (PREDICADOS -> EXP is not true .)
    constraint      reduce using rule 177 (PREDICADOS -> EXP is not true .)
    default         reduce using rule 177 (PREDICADOS -> EXP is not true .)
    primary         reduce using rule 177 (PREDICADOS -> EXP is not true .)
    references      reduce using rule 177 (PREDICADOS -> EXP is not true .)
    null            reduce using rule 177 (PREDICADOS -> EXP is not true .)
    asc             reduce using rule 177 (PREDICADOS -> EXP is not true .)
    desc            reduce using rule 177 (PREDICADOS -> EXP is not true .)


state 190

    (179) PREDICADOS -> EXP is not false .

    r_from          reduce using rule 179 (PREDICADOS -> EXP is not false .)
    ptcoma          reduce using rule 179 (PREDICADOS -> EXP is not false .)
    mas             reduce using rule 179 (PREDICADOS -> EXP is not false .)
    menos           reduce using rule 179 (PREDICADOS -> EXP is not false .)
    multiplicacion  reduce using rule 179 (PREDICADOS -> EXP is not false .)
    division        reduce using rule 179 (PREDICADOS -> EXP is not false .)
    modulo          reduce using rule 179 (PREDICADOS -> EXP is not false .)
    elevado         reduce using rule 179 (PREDICADOS -> EXP is not false .)
    and             reduce using rule 179 (PREDICADOS -> EXP is not false .)
    or              reduce using rule 179 (PREDICADOS -> EXP is not false .)
    mayor           reduce using rule 179 (PREDICADOS -> EXP is not false .)
    menor           reduce using rule 179 (PREDICADOS -> EXP is not false .)
    mayor_igual     reduce using rule 179 (PREDICADOS -> EXP is not false .)
    menor_igual     reduce using rule 179 (PREDICADOS -> EXP is not false .)
    igual           reduce using rule 179 (PREDICADOS -> EXP is not false .)
    diferente1      reduce using rule 179 (PREDICADOS -> EXP is not false .)
    diferente2      reduce using rule 179 (PREDICADOS -> EXP is not false .)
    punto           reduce using rule 179 (PREDICADOS -> EXP is not false .)
    between         reduce using rule 179 (PREDICADOS -> EXP is not false .)
    in              reduce using rule 179 (PREDICADOS -> EXP is not false .)
    not             reduce using rule 179 (PREDICADOS -> EXP is not false .)
    is              reduce using rule 179 (PREDICADOS -> EXP is not false .)
    isnull          reduce using rule 179 (PREDICADOS -> EXP is not false .)
    notnull         reduce using rule 179 (PREDICADOS -> EXP is not false .)
    coma            reduce using rule 179 (PREDICADOS -> EXP is not false .)
    parc            reduce using rule 179 (PREDICADOS -> EXP is not false .)
    then            reduce using rule 179 (PREDICADOS -> EXP is not false .)
    as              reduce using rule 179 (PREDICADOS -> EXP is not false .)
    id              reduce using rule 179 (PREDICADOS -> EXP is not false .)
    where           reduce using rule 179 (PREDICADOS -> EXP is not false .)
    group           reduce using rule 179 (PREDICADOS -> EXP is not false .)
    having          reduce using rule 179 (PREDICADOS -> EXP is not false .)
    order           reduce using rule 179 (PREDICADOS -> EXP is not false .)
    end             reduce using rule 179 (PREDICADOS -> EXP is not false .)
    else            reduce using rule 179 (PREDICADOS -> EXP is not false .)
    when            reduce using rule 179 (PREDICADOS -> EXP is not false .)
    constraint      reduce using rule 179 (PREDICADOS -> EXP is not false .)
    default         reduce using rule 179 (PREDICADOS -> EXP is not false .)
    primary         reduce using rule 179 (PREDICADOS -> EXP is not false .)
    references      reduce using rule 179 (PREDICADOS -> EXP is not false .)
    null            reduce using rule 179 (PREDICADOS -> EXP is not false .)
    asc             reduce using rule 179 (PREDICADOS -> EXP is not false .)
    desc            reduce using rule 179 (PREDICADOS -> EXP is not false .)


state 191

    (181) PREDICADOS -> EXP is not unknown .

    r_from          reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    ptcoma          reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    mas             reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    menos           reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    multiplicacion  reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    division        reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    modulo          reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    elevado         reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    and             reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    or              reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    mayor           reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    menor           reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    mayor_igual     reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    menor_igual     reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    igual           reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    diferente1      reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    diferente2      reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    punto           reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    between         reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    in              reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    not             reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    is              reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    isnull          reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    notnull         reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    coma            reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    parc            reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    then            reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    as              reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    id              reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    where           reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    group           reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    having          reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    order           reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    end             reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    else            reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    when            reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    constraint      reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    default         reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    primary         reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    references      reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    null            reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    asc             reduce using rule 181 (PREDICADOS -> EXP is not unknown .)
    desc            reduce using rule 181 (PREDICADOS -> EXP is not unknown .)


state 192

    (63) PNULL -> not null .

    r_from          reduce using rule 63 (PNULL -> not null .)
    ptcoma          reduce using rule 63 (PNULL -> not null .)
    mas             reduce using rule 63 (PNULL -> not null .)
    menos           reduce using rule 63 (PNULL -> not null .)
    multiplicacion  reduce using rule 63 (PNULL -> not null .)
    division        reduce using rule 63 (PNULL -> not null .)
    modulo          reduce using rule 63 (PNULL -> not null .)
    elevado         reduce using rule 63 (PNULL -> not null .)
    and             reduce using rule 63 (PNULL -> not null .)
    or              reduce using rule 63 (PNULL -> not null .)
    mayor           reduce using rule 63 (PNULL -> not null .)
    menor           reduce using rule 63 (PNULL -> not null .)
    mayor_igual     reduce using rule 63 (PNULL -> not null .)
    menor_igual     reduce using rule 63 (PNULL -> not null .)
    igual           reduce using rule 63 (PNULL -> not null .)
    diferente1      reduce using rule 63 (PNULL -> not null .)
    diferente2      reduce using rule 63 (PNULL -> not null .)
    punto           reduce using rule 63 (PNULL -> not null .)
    between         reduce using rule 63 (PNULL -> not null .)
    in              reduce using rule 63 (PNULL -> not null .)
    not             reduce using rule 63 (PNULL -> not null .)
    is              reduce using rule 63 (PNULL -> not null .)
    isnull          reduce using rule 63 (PNULL -> not null .)
    notnull         reduce using rule 63 (PNULL -> not null .)
    coma            reduce using rule 63 (PNULL -> not null .)
    parc            reduce using rule 63 (PNULL -> not null .)
    then            reduce using rule 63 (PNULL -> not null .)
    as              reduce using rule 63 (PNULL -> not null .)
    id              reduce using rule 63 (PNULL -> not null .)
    where           reduce using rule 63 (PNULL -> not null .)
    group           reduce using rule 63 (PNULL -> not null .)
    having          reduce using rule 63 (PNULL -> not null .)
    order           reduce using rule 63 (PNULL -> not null .)
    end             reduce using rule 63 (PNULL -> not null .)
    else            reduce using rule 63 (PNULL -> not null .)
    when            reduce using rule 63 (PNULL -> not null .)
    constraint      reduce using rule 63 (PNULL -> not null .)
    default         reduce using rule 63 (PNULL -> not null .)
    primary         reduce using rule 63 (PNULL -> not null .)
    references      reduce using rule 63 (PNULL -> not null .)
    null            reduce using rule 63 (PNULL -> not null .)
    asc             reduce using rule 63 (PNULL -> not null .)
    desc            reduce using rule 63 (PNULL -> not null .)


state 193

    (158) EXP -> id para LEXP parc .

    r_from          reduce using rule 158 (EXP -> id para LEXP parc .)
    ptcoma          reduce using rule 158 (EXP -> id para LEXP parc .)
    mas             reduce using rule 158 (EXP -> id para LEXP parc .)
    menos           reduce using rule 158 (EXP -> id para LEXP parc .)
    multiplicacion  reduce using rule 158 (EXP -> id para LEXP parc .)
    division        reduce using rule 158 (EXP -> id para LEXP parc .)
    modulo          reduce using rule 158 (EXP -> id para LEXP parc .)
    elevado         reduce using rule 158 (EXP -> id para LEXP parc .)
    and             reduce using rule 158 (EXP -> id para LEXP parc .)
    or              reduce using rule 158 (EXP -> id para LEXP parc .)
    mayor           reduce using rule 158 (EXP -> id para LEXP parc .)
    menor           reduce using rule 158 (EXP -> id para LEXP parc .)
    mayor_igual     reduce using rule 158 (EXP -> id para LEXP parc .)
    menor_igual     reduce using rule 158 (EXP -> id para LEXP parc .)
    igual           reduce using rule 158 (EXP -> id para LEXP parc .)
    diferente1      reduce using rule 158 (EXP -> id para LEXP parc .)
    diferente2      reduce using rule 158 (EXP -> id para LEXP parc .)
    punto           reduce using rule 158 (EXP -> id para LEXP parc .)
    between         reduce using rule 158 (EXP -> id para LEXP parc .)
    in              reduce using rule 158 (EXP -> id para LEXP parc .)
    not             reduce using rule 158 (EXP -> id para LEXP parc .)
    is              reduce using rule 158 (EXP -> id para LEXP parc .)
    isnull          reduce using rule 158 (EXP -> id para LEXP parc .)
    notnull         reduce using rule 158 (EXP -> id para LEXP parc .)
    coma            reduce using rule 158 (EXP -> id para LEXP parc .)
    parc            reduce using rule 158 (EXP -> id para LEXP parc .)
    then            reduce using rule 158 (EXP -> id para LEXP parc .)
    as              reduce using rule 158 (EXP -> id para LEXP parc .)
    id              reduce using rule 158 (EXP -> id para LEXP parc .)
    where           reduce using rule 158 (EXP -> id para LEXP parc .)
    group           reduce using rule 158 (EXP -> id para LEXP parc .)
    having          reduce using rule 158 (EXP -> id para LEXP parc .)
    order           reduce using rule 158 (EXP -> id para LEXP parc .)
    end             reduce using rule 158 (EXP -> id para LEXP parc .)
    else            reduce using rule 158 (EXP -> id para LEXP parc .)
    when            reduce using rule 158 (EXP -> id para LEXP parc .)
    constraint      reduce using rule 158 (EXP -> id para LEXP parc .)
    default         reduce using rule 158 (EXP -> id para LEXP parc .)
    primary         reduce using rule 158 (EXP -> id para LEXP parc .)
    references      reduce using rule 158 (EXP -> id para LEXP parc .)
    null            reduce using rule 158 (EXP -> id para LEXP parc .)
    asc             reduce using rule 158 (EXP -> id para LEXP parc .)
    desc            reduce using rule 158 (EXP -> id para LEXP parc .)


state 194

    (159) EXP -> extract para FIELDS r_from . timestamp cadena parc

    timestamp       shift and go to state 235


state 195

    (53) COLDEF -> id . TIPO
    (54) COLDEF -> id . TIPO LOPCOLUMN
    (100) TIPO -> . smallint
    (101) TIPO -> . integer
    (102) TIPO -> . bigint
    (103) TIPO -> . decimal para LEXP parc
    (104) TIPO -> . numeric para LEXP parc
    (105) TIPO -> . real
    (106) TIPO -> . double precision
    (107) TIPO -> . money
    (108) TIPO -> . character varying para int parc
    (109) TIPO -> . varchar para int parc
    (110) TIPO -> . character para int parc
    (111) TIPO -> . char para int parc
    (112) TIPO -> . text
    (113) TIPO -> . timestamp
    (114) TIPO -> . timestamp para int parc
    (115) TIPO -> . date
    (116) TIPO -> . time
    (117) TIPO -> . time para int parc
    (118) TIPO -> . interval
    (119) TIPO -> . interval para int parc
    (120) TIPO -> . interval cadena
    (121) TIPO -> . interval para int parc cadena
    (122) TIPO -> . boolean

    smallint        shift and go to state 237
    integer         shift and go to state 238
    bigint          shift and go to state 239
    decimal         shift and go to state 240
    numeric         shift and go to state 241
    real            shift and go to state 242
    double          shift and go to state 243
    money           shift and go to state 244
    character       shift and go to state 245
    varchar         shift and go to state 246
    char            shift and go to state 247
    text            shift and go to state 248
    timestamp       shift and go to state 249
    date            shift and go to state 250
    time            shift and go to state 251
    interval        shift and go to state 252
    boolean         shift and go to state 253

    TIPO                           shift and go to state 236

state 196

    (47) CREATETABLE -> create table id para LDEF . parc ptcoma
    (48) CREATETABLE -> create table id para LDEF . parc HERENCIA ptcoma
    (49) LDEF -> LDEF . coma COLDEF

    parc            shift and go to state 254
    coma            shift and go to state 255


state 197

    (50) LDEF -> COLDEF .

    parc            reduce using rule 50 (LDEF -> COLDEF .)
    coma            reduce using rule 50 (LDEF -> COLDEF .)


state 198

    (51) COLDEF -> OPCONST .

    parc            reduce using rule 51 (COLDEF -> OPCONST .)
    coma            reduce using rule 51 (COLDEF -> OPCONST .)


state 199

    (52) COLDEF -> constraint . id OPCONST

    id              shift and go to state 256


state 200

    (65) OPCONST -> primary . key para LEXP parc

    key             shift and go to state 257


state 201

    (66) OPCONST -> foreign . key para LEXP parc references table para LEXP parc

    key             shift and go to state 258


state 202

    (67) OPCONST -> unique . para LEXP parc

    para            shift and go to state 259


state 203

    (68) OPCONST -> check . para EXP parc

    para            shift and go to state 260


state 204

    (70) CREATETYPE -> create type id as enum . para LEXP parc

    para            shift and go to state 261


state 205

    (94) LCAMPOS -> id igual . EXP
    (95) LCAMPOS -> id igual . default
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    default         shift and go to state 263
    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 262
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 206

    (93) LCAMPOS -> LCAMPOS id . igual EXP

    igual           shift and go to state 264


state 207

    (92) UPDATE -> update id set LCAMPOS where . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 265
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 208

    (96) DELETE -> delete r_from id where EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

    ptcoma          reduce using rule 96 (DELETE -> delete r_from id where EXP .)
    mas             shift and go to state 69
    menos           shift and go to state 70
    multiplicacion  shift and go to state 71
    division        shift and go to state 72
    modulo          shift and go to state 73
    elevado         shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    mayor           shift and go to state 77
    menor           shift and go to state 78
    mayor_igual     shift and go to state 79
    menor_igual     shift and go to state 80
    igual           shift and go to state 81
    diferente1      shift and go to state 82
    diferente2      shift and go to state 83
    punto           shift and go to state 84
    between         shift and go to state 85
    in              shift and go to state 86
    not             shift and go to state 87
    is              shift and go to state 88
    isnull          shift and go to state 89
    notnull         shift and go to state 90


state 209

    (25) RO -> rename to . id

    id              shift and go to state 266


state 210

    (26) RO -> owner to . id

    id              shift and go to state 267


state 211

    (30) OP -> alter column . id set not null
    (31) OP -> alter column . id set null
    (37) alc -> alter column . id type TIPO

    id              shift and go to state 268


state 212

    (28) OP -> add ADD .

    ptcoma          reduce using rule 28 (OP -> add ADD .)


state 213

    (41) ADD -> column . id TIPO

    id              shift and go to state 269


state 214

    (42) ADD -> check . para LEXP parc

    para            shift and go to state 270


state 215

    (43) ADD -> constraint . id unique para id parc

    id              shift and go to state 271


state 216

    (44) ADD -> foreign . key para id parc references id para id parc

    key             shift and go to state 272


state 217

    (29) OP -> drop column . ALTERDROP
    (39) ALTERDROP -> column . LISTACOLUMN
    (38) ALTERDROP -> . constraint id
    (39) ALTERDROP -> . column LISTACOLUMN
    (40) ALTERDROP -> . check id
    (45) LISTACOLUMN -> . LISTACOLUMN coma id
    (46) LISTACOLUMN -> . id

    constraint      shift and go to state 219
    column          shift and go to state 273
    check           shift and go to state 220
    id              shift and go to state 276

    ALTERDROP                      shift and go to state 274
    LISTACOLUMN                    shift and go to state 275

state 218

    (33) OP -> drop ALTERDROP .

    ptcoma          reduce using rule 33 (OP -> drop ALTERDROP .)


state 219

    (38) ALTERDROP -> constraint . id

    id              shift and go to state 277


state 220

    (40) ALTERDROP -> check . id

    id              shift and go to state 278


state 221

    (35) listaalc -> listaalc coma . alc
    (37) alc -> . alter column id type TIPO

    alter           shift and go to state 280

    alc                            shift and go to state 279

state 222

    (34) OP -> rename column . id to id

    id              shift and go to state 281


state 223

    (21) DROP -> drop databases if exist id .

    ptcoma          reduce using rule 21 (DROP -> drop databases if exist id .)


state 224

    (19) INSERT -> insert into id values para . LEXP parc
    (98) LEXP -> . LEXP coma EXP
    (99) LEXP -> . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    LEXP                           shift and go to state 282
    EXP                            shift and go to state 35
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 225

    (17) WHEN -> when LEXP then LEXP .
    (98) LEXP -> LEXP . coma EXP

    end             reduce using rule 17 (WHEN -> when LEXP then LEXP .)
    else            reduce using rule 17 (WHEN -> when LEXP then LEXP .)
    when            reduce using rule 17 (WHEN -> when LEXP then LEXP .)
    coma            shift and go to state 68


state 226

    (71) SELECT -> select distinct LSELECT r_from LFROM WHERE . GROUP HAVING ORDER
    (83) GROUP -> . group by EXP
    (84) GROUP -> .

  ! shift/reduce conflict for group resolved as shift
    group           shift and go to state 228
    r_from          reduce using rule 84 (GROUP -> .)
    ptcoma          reduce using rule 84 (GROUP -> .)
    mas             reduce using rule 84 (GROUP -> .)
    menos           reduce using rule 84 (GROUP -> .)
    multiplicacion  reduce using rule 84 (GROUP -> .)
    division        reduce using rule 84 (GROUP -> .)
    modulo          reduce using rule 84 (GROUP -> .)
    elevado         reduce using rule 84 (GROUP -> .)
    and             reduce using rule 84 (GROUP -> .)
    or              reduce using rule 84 (GROUP -> .)
    mayor           reduce using rule 84 (GROUP -> .)
    menor           reduce using rule 84 (GROUP -> .)
    mayor_igual     reduce using rule 84 (GROUP -> .)
    menor_igual     reduce using rule 84 (GROUP -> .)
    igual           reduce using rule 84 (GROUP -> .)
    diferente1      reduce using rule 84 (GROUP -> .)
    diferente2      reduce using rule 84 (GROUP -> .)
    punto           reduce using rule 84 (GROUP -> .)
    between         reduce using rule 84 (GROUP -> .)
    in              reduce using rule 84 (GROUP -> .)
    not             reduce using rule 84 (GROUP -> .)
    is              reduce using rule 84 (GROUP -> .)
    isnull          reduce using rule 84 (GROUP -> .)
    notnull         reduce using rule 84 (GROUP -> .)
    coma            reduce using rule 84 (GROUP -> .)
    parc            reduce using rule 84 (GROUP -> .)
    then            reduce using rule 84 (GROUP -> .)
    as              reduce using rule 84 (GROUP -> .)
    id              reduce using rule 84 (GROUP -> .)
    where           reduce using rule 84 (GROUP -> .)
    having          reduce using rule 84 (GROUP -> .)
    order           reduce using rule 84 (GROUP -> .)
    end             reduce using rule 84 (GROUP -> .)
    else            reduce using rule 84 (GROUP -> .)
    when            reduce using rule 84 (GROUP -> .)
    constraint      reduce using rule 84 (GROUP -> .)
    default         reduce using rule 84 (GROUP -> .)
    primary         reduce using rule 84 (GROUP -> .)
    references      reduce using rule 84 (GROUP -> .)
    null            reduce using rule 84 (GROUP -> .)
    asc             reduce using rule 84 (GROUP -> .)
    desc            reduce using rule 84 (GROUP -> .)

  ! group           [ reduce using rule 84 (GROUP -> .) ]

    GROUP                          shift and go to state 283

state 227

    (72) SELECT -> select LSELECT r_from LFROM WHERE GROUP . HAVING ORDER
    (85) HAVING -> . having EXP
    (86) HAVING -> .

  ! shift/reduce conflict for having resolved as shift
    having          shift and go to state 285
    r_from          reduce using rule 86 (HAVING -> .)
    ptcoma          reduce using rule 86 (HAVING -> .)
    mas             reduce using rule 86 (HAVING -> .)
    menos           reduce using rule 86 (HAVING -> .)
    multiplicacion  reduce using rule 86 (HAVING -> .)
    division        reduce using rule 86 (HAVING -> .)
    modulo          reduce using rule 86 (HAVING -> .)
    elevado         reduce using rule 86 (HAVING -> .)
    and             reduce using rule 86 (HAVING -> .)
    or              reduce using rule 86 (HAVING -> .)
    mayor           reduce using rule 86 (HAVING -> .)
    menor           reduce using rule 86 (HAVING -> .)
    mayor_igual     reduce using rule 86 (HAVING -> .)
    menor_igual     reduce using rule 86 (HAVING -> .)
    igual           reduce using rule 86 (HAVING -> .)
    diferente1      reduce using rule 86 (HAVING -> .)
    diferente2      reduce using rule 86 (HAVING -> .)
    punto           reduce using rule 86 (HAVING -> .)
    between         reduce using rule 86 (HAVING -> .)
    in              reduce using rule 86 (HAVING -> .)
    not             reduce using rule 86 (HAVING -> .)
    is              reduce using rule 86 (HAVING -> .)
    isnull          reduce using rule 86 (HAVING -> .)
    notnull         reduce using rule 86 (HAVING -> .)
    coma            reduce using rule 86 (HAVING -> .)
    parc            reduce using rule 86 (HAVING -> .)
    then            reduce using rule 86 (HAVING -> .)
    as              reduce using rule 86 (HAVING -> .)
    id              reduce using rule 86 (HAVING -> .)
    where           reduce using rule 86 (HAVING -> .)
    group           reduce using rule 86 (HAVING -> .)
    order           reduce using rule 86 (HAVING -> .)
    end             reduce using rule 86 (HAVING -> .)
    else            reduce using rule 86 (HAVING -> .)
    when            reduce using rule 86 (HAVING -> .)
    constraint      reduce using rule 86 (HAVING -> .)
    default         reduce using rule 86 (HAVING -> .)
    primary         reduce using rule 86 (HAVING -> .)
    references      reduce using rule 86 (HAVING -> .)
    null            reduce using rule 86 (HAVING -> .)
    asc             reduce using rule 86 (HAVING -> .)
    desc            reduce using rule 86 (HAVING -> .)

  ! having          [ reduce using rule 86 (HAVING -> .) ]

    HAVING                         shift and go to state 284

state 228

    (83) GROUP -> group . by EXP

    by              shift and go to state 286


state 229

    (76) LFROM -> LFROM coma FROM .

    r_from          reduce using rule 76 (LFROM -> LFROM coma FROM .)
    ptcoma          reduce using rule 76 (LFROM -> LFROM coma FROM .)
    mas             reduce using rule 76 (LFROM -> LFROM coma FROM .)
    menos           reduce using rule 76 (LFROM -> LFROM coma FROM .)
    multiplicacion  reduce using rule 76 (LFROM -> LFROM coma FROM .)
    division        reduce using rule 76 (LFROM -> LFROM coma FROM .)
    modulo          reduce using rule 76 (LFROM -> LFROM coma FROM .)
    elevado         reduce using rule 76 (LFROM -> LFROM coma FROM .)
    and             reduce using rule 76 (LFROM -> LFROM coma FROM .)
    or              reduce using rule 76 (LFROM -> LFROM coma FROM .)
    mayor           reduce using rule 76 (LFROM -> LFROM coma FROM .)
    menor           reduce using rule 76 (LFROM -> LFROM coma FROM .)
    mayor_igual     reduce using rule 76 (LFROM -> LFROM coma FROM .)
    menor_igual     reduce using rule 76 (LFROM -> LFROM coma FROM .)
    igual           reduce using rule 76 (LFROM -> LFROM coma FROM .)
    diferente1      reduce using rule 76 (LFROM -> LFROM coma FROM .)
    diferente2      reduce using rule 76 (LFROM -> LFROM coma FROM .)
    punto           reduce using rule 76 (LFROM -> LFROM coma FROM .)
    between         reduce using rule 76 (LFROM -> LFROM coma FROM .)
    in              reduce using rule 76 (LFROM -> LFROM coma FROM .)
    not             reduce using rule 76 (LFROM -> LFROM coma FROM .)
    is              reduce using rule 76 (LFROM -> LFROM coma FROM .)
    isnull          reduce using rule 76 (LFROM -> LFROM coma FROM .)
    notnull         reduce using rule 76 (LFROM -> LFROM coma FROM .)
    coma            reduce using rule 76 (LFROM -> LFROM coma FROM .)
    parc            reduce using rule 76 (LFROM -> LFROM coma FROM .)
    then            reduce using rule 76 (LFROM -> LFROM coma FROM .)
    as              reduce using rule 76 (LFROM -> LFROM coma FROM .)
    id              reduce using rule 76 (LFROM -> LFROM coma FROM .)
    where           reduce using rule 76 (LFROM -> LFROM coma FROM .)
    group           reduce using rule 76 (LFROM -> LFROM coma FROM .)
    having          reduce using rule 76 (LFROM -> LFROM coma FROM .)
    order           reduce using rule 76 (LFROM -> LFROM coma FROM .)
    end             reduce using rule 76 (LFROM -> LFROM coma FROM .)
    else            reduce using rule 76 (LFROM -> LFROM coma FROM .)
    when            reduce using rule 76 (LFROM -> LFROM coma FROM .)
    constraint      reduce using rule 76 (LFROM -> LFROM coma FROM .)
    default         reduce using rule 76 (LFROM -> LFROM coma FROM .)
    primary         reduce using rule 76 (LFROM -> LFROM coma FROM .)
    references      reduce using rule 76 (LFROM -> LFROM coma FROM .)
    null            reduce using rule 76 (LFROM -> LFROM coma FROM .)
    asc             reduce using rule 76 (LFROM -> LFROM coma FROM .)
    desc            reduce using rule 76 (LFROM -> LFROM coma FROM .)


state 230

    (81) WHERE -> where EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for punto resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
    r_from          reduce using rule 81 (WHERE -> where EXP .)
    ptcoma          reduce using rule 81 (WHERE -> where EXP .)
    coma            reduce using rule 81 (WHERE -> where EXP .)
    parc            reduce using rule 81 (WHERE -> where EXP .)
    then            reduce using rule 81 (WHERE -> where EXP .)
    as              reduce using rule 81 (WHERE -> where EXP .)
    id              reduce using rule 81 (WHERE -> where EXP .)
    where           reduce using rule 81 (WHERE -> where EXP .)
    group           reduce using rule 81 (WHERE -> where EXP .)
    having          reduce using rule 81 (WHERE -> where EXP .)
    order           reduce using rule 81 (WHERE -> where EXP .)
    end             reduce using rule 81 (WHERE -> where EXP .)
    else            reduce using rule 81 (WHERE -> where EXP .)
    when            reduce using rule 81 (WHERE -> where EXP .)
    constraint      reduce using rule 81 (WHERE -> where EXP .)
    default         reduce using rule 81 (WHERE -> where EXP .)
    primary         reduce using rule 81 (WHERE -> where EXP .)
    references      reduce using rule 81 (WHERE -> where EXP .)
    null            reduce using rule 81 (WHERE -> where EXP .)
    asc             reduce using rule 81 (WHERE -> where EXP .)
    desc            reduce using rule 81 (WHERE -> where EXP .)
    mas             shift and go to state 69
    menos           shift and go to state 70
    multiplicacion  shift and go to state 71
    division        shift and go to state 72
    modulo          shift and go to state 73
    elevado         shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    mayor           shift and go to state 77
    menor           shift and go to state 78
    mayor_igual     shift and go to state 79
    menor_igual     shift and go to state 80
    igual           shift and go to state 81
    diferente1      shift and go to state 82
    diferente2      shift and go to state 83
    punto           shift and go to state 84
    between         shift and go to state 85
    in              shift and go to state 86
    not             shift and go to state 87
    is              shift and go to state 88
    isnull          shift and go to state 89
    notnull         shift and go to state 90

  ! mas             [ reduce using rule 81 (WHERE -> where EXP .) ]
  ! menos           [ reduce using rule 81 (WHERE -> where EXP .) ]
  ! multiplicacion  [ reduce using rule 81 (WHERE -> where EXP .) ]
  ! division        [ reduce using rule 81 (WHERE -> where EXP .) ]
  ! modulo          [ reduce using rule 81 (WHERE -> where EXP .) ]
  ! elevado         [ reduce using rule 81 (WHERE -> where EXP .) ]
  ! and             [ reduce using rule 81 (WHERE -> where EXP .) ]
  ! or              [ reduce using rule 81 (WHERE -> where EXP .) ]
  ! mayor           [ reduce using rule 81 (WHERE -> where EXP .) ]
  ! menor           [ reduce using rule 81 (WHERE -> where EXP .) ]
  ! mayor_igual     [ reduce using rule 81 (WHERE -> where EXP .) ]
  ! menor_igual     [ reduce using rule 81 (WHERE -> where EXP .) ]
  ! igual           [ reduce using rule 81 (WHERE -> where EXP .) ]
  ! diferente1      [ reduce using rule 81 (WHERE -> where EXP .) ]
  ! diferente2      [ reduce using rule 81 (WHERE -> where EXP .) ]
  ! punto           [ reduce using rule 81 (WHERE -> where EXP .) ]
  ! between         [ reduce using rule 81 (WHERE -> where EXP .) ]
  ! in              [ reduce using rule 81 (WHERE -> where EXP .) ]
  ! not             [ reduce using rule 81 (WHERE -> where EXP .) ]
  ! is              [ reduce using rule 81 (WHERE -> where EXP .) ]
  ! isnull          [ reduce using rule 81 (WHERE -> where EXP .) ]
  ! notnull         [ reduce using rule 81 (WHERE -> where EXP .) ]


state 231

    (79) FROM -> EXP as id .

    r_from          reduce using rule 79 (FROM -> EXP as id .)
    ptcoma          reduce using rule 79 (FROM -> EXP as id .)
    mas             reduce using rule 79 (FROM -> EXP as id .)
    menos           reduce using rule 79 (FROM -> EXP as id .)
    multiplicacion  reduce using rule 79 (FROM -> EXP as id .)
    division        reduce using rule 79 (FROM -> EXP as id .)
    modulo          reduce using rule 79 (FROM -> EXP as id .)
    elevado         reduce using rule 79 (FROM -> EXP as id .)
    and             reduce using rule 79 (FROM -> EXP as id .)
    or              reduce using rule 79 (FROM -> EXP as id .)
    mayor           reduce using rule 79 (FROM -> EXP as id .)
    menor           reduce using rule 79 (FROM -> EXP as id .)
    mayor_igual     reduce using rule 79 (FROM -> EXP as id .)
    menor_igual     reduce using rule 79 (FROM -> EXP as id .)
    igual           reduce using rule 79 (FROM -> EXP as id .)
    diferente1      reduce using rule 79 (FROM -> EXP as id .)
    diferente2      reduce using rule 79 (FROM -> EXP as id .)
    punto           reduce using rule 79 (FROM -> EXP as id .)
    between         reduce using rule 79 (FROM -> EXP as id .)
    in              reduce using rule 79 (FROM -> EXP as id .)
    not             reduce using rule 79 (FROM -> EXP as id .)
    is              reduce using rule 79 (FROM -> EXP as id .)
    isnull          reduce using rule 79 (FROM -> EXP as id .)
    notnull         reduce using rule 79 (FROM -> EXP as id .)
    coma            reduce using rule 79 (FROM -> EXP as id .)
    parc            reduce using rule 79 (FROM -> EXP as id .)
    then            reduce using rule 79 (FROM -> EXP as id .)
    as              reduce using rule 79 (FROM -> EXP as id .)
    id              reduce using rule 79 (FROM -> EXP as id .)
    where           reduce using rule 79 (FROM -> EXP as id .)
    group           reduce using rule 79 (FROM -> EXP as id .)
    having          reduce using rule 79 (FROM -> EXP as id .)
    order           reduce using rule 79 (FROM -> EXP as id .)
    end             reduce using rule 79 (FROM -> EXP as id .)
    else            reduce using rule 79 (FROM -> EXP as id .)
    when            reduce using rule 79 (FROM -> EXP as id .)
    constraint      reduce using rule 79 (FROM -> EXP as id .)
    default         reduce using rule 79 (FROM -> EXP as id .)
    primary         reduce using rule 79 (FROM -> EXP as id .)
    references      reduce using rule 79 (FROM -> EXP as id .)
    null            reduce using rule 79 (FROM -> EXP as id .)
    asc             reduce using rule 79 (FROM -> EXP as id .)
    desc            reduce using rule 79 (FROM -> EXP as id .)


state 232

    (170) PREDICADOS -> EXP not between symetric EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    ptcoma          reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    mas             reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    menos           reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    multiplicacion  reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    division        reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    modulo          reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    elevado         reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    mayor           reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    menor           reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    mayor_igual     reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    menor_igual     reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    igual           reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    diferente1      reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    diferente2      reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    punto           reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    between         reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    in              reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    is              reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    isnull          reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    notnull         reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    coma            reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    parc            reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    then            reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    as              reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    id              reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    where           reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    group           reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    having          reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    order           reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    end             reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    else            reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    when            reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    constraint      reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    default         reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    primary         reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    references      reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    null            reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    asc             reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    desc            reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .)
    and             shift and go to state 75
    or              shift and go to state 76
    not             shift and go to state 87

  ! and             [ reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .) ]
  ! or              [ reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .) ]
  ! not             [ reduce using rule 170 (PREDICADOS -> EXP not between symetric EXP .) ]
  ! mas             [ shift and go to state 69 ]
  ! menos           [ shift and go to state 70 ]
  ! multiplicacion  [ shift and go to state 71 ]
  ! division        [ shift and go to state 72 ]
  ! modulo          [ shift and go to state 73 ]
  ! elevado         [ shift and go to state 74 ]
  ! mayor           [ shift and go to state 77 ]
  ! menor           [ shift and go to state 78 ]
  ! mayor_igual     [ shift and go to state 79 ]
  ! menor_igual     [ shift and go to state 80 ]
  ! igual           [ shift and go to state 81 ]
  ! diferente1      [ shift and go to state 82 ]
  ! diferente2      [ shift and go to state 83 ]
  ! punto           [ shift and go to state 84 ]
  ! between         [ shift and go to state 85 ]
  ! in              [ shift and go to state 86 ]
  ! is              [ shift and go to state 88 ]
  ! isnull          [ shift and go to state 89 ]
  ! notnull         [ shift and go to state 90 ]


state 233

    (171) PREDICADOS -> EXP is distinct r_from EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    ptcoma          reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    mas             reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    menos           reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    multiplicacion  reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    division        reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    modulo          reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    elevado         reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    mayor           reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    menor           reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    mayor_igual     reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    menor_igual     reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    igual           reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    diferente1      reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    diferente2      reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    punto           reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    between         reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    in              reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    is              reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    isnull          reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    notnull         reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    coma            reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    parc            reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    then            reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    as              reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    id              reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    where           reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    group           reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    having          reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    order           reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    end             reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    else            reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    when            reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    constraint      reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    default         reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    primary         reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    references      reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    null            reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    asc             reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    desc            reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .)
    and             shift and go to state 75
    or              shift and go to state 76
    not             shift and go to state 87

  ! and             [ reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .) ]
  ! or              [ reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .) ]
  ! not             [ reduce using rule 171 (PREDICADOS -> EXP is distinct r_from EXP .) ]
  ! mas             [ shift and go to state 69 ]
  ! menos           [ shift and go to state 70 ]
  ! multiplicacion  [ shift and go to state 71 ]
  ! division        [ shift and go to state 72 ]
  ! modulo          [ shift and go to state 73 ]
  ! elevado         [ shift and go to state 74 ]
  ! mayor           [ shift and go to state 77 ]
  ! menor           [ shift and go to state 78 ]
  ! mayor_igual     [ shift and go to state 79 ]
  ! menor_igual     [ shift and go to state 80 ]
  ! igual           [ shift and go to state 81 ]
  ! diferente1      [ shift and go to state 82 ]
  ! diferente2      [ shift and go to state 83 ]
  ! punto           [ shift and go to state 84 ]
  ! between         [ shift and go to state 85 ]
  ! in              [ shift and go to state 86 ]
  ! is              [ shift and go to state 88 ]
  ! isnull          [ shift and go to state 89 ]
  ! notnull         [ shift and go to state 90 ]


state 234

    (172) PREDICADOS -> EXP is not distinct r_from . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 287
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 235

    (159) EXP -> extract para FIELDS r_from timestamp . cadena parc

    cadena          shift and go to state 288


state 236

    (53) COLDEF -> id TIPO .
    (54) COLDEF -> id TIPO . LOPCOLUMN
    (55) LOPCOLUMN -> . LOPCOLUMN OPCOLUMN
    (56) LOPCOLUMN -> . OPCOLUMN
    (57) OPCOLUMN -> . constraint id unique
    (58) OPCOLUMN -> . constraint id check para EXP parc
    (59) OPCOLUMN -> . default EXP
    (60) OPCOLUMN -> . PNULL
    (61) OPCOLUMN -> . primary key
    (62) OPCOLUMN -> . references id
    (63) PNULL -> . not null
    (64) PNULL -> . null

    parc            reduce using rule 53 (COLDEF -> id TIPO .)
    coma            reduce using rule 53 (COLDEF -> id TIPO .)
    constraint      shift and go to state 291
    default         shift and go to state 292
    primary         shift and go to state 294
    references      shift and go to state 295
    not             shift and go to state 296
    null            shift and go to state 146

    LOPCOLUMN                      shift and go to state 289
    OPCOLUMN                       shift and go to state 290
    PNULL                          shift and go to state 293

state 237

    (100) TIPO -> smallint .

    constraint      reduce using rule 100 (TIPO -> smallint .)
    default         reduce using rule 100 (TIPO -> smallint .)
    primary         reduce using rule 100 (TIPO -> smallint .)
    references      reduce using rule 100 (TIPO -> smallint .)
    not             reduce using rule 100 (TIPO -> smallint .)
    null            reduce using rule 100 (TIPO -> smallint .)
    parc            reduce using rule 100 (TIPO -> smallint .)
    coma            reduce using rule 100 (TIPO -> smallint .)
    ptcoma          reduce using rule 100 (TIPO -> smallint .)


state 238

    (101) TIPO -> integer .

    constraint      reduce using rule 101 (TIPO -> integer .)
    default         reduce using rule 101 (TIPO -> integer .)
    primary         reduce using rule 101 (TIPO -> integer .)
    references      reduce using rule 101 (TIPO -> integer .)
    not             reduce using rule 101 (TIPO -> integer .)
    null            reduce using rule 101 (TIPO -> integer .)
    parc            reduce using rule 101 (TIPO -> integer .)
    coma            reduce using rule 101 (TIPO -> integer .)
    ptcoma          reduce using rule 101 (TIPO -> integer .)


state 239

    (102) TIPO -> bigint .

    constraint      reduce using rule 102 (TIPO -> bigint .)
    default         reduce using rule 102 (TIPO -> bigint .)
    primary         reduce using rule 102 (TIPO -> bigint .)
    references      reduce using rule 102 (TIPO -> bigint .)
    not             reduce using rule 102 (TIPO -> bigint .)
    null            reduce using rule 102 (TIPO -> bigint .)
    parc            reduce using rule 102 (TIPO -> bigint .)
    coma            reduce using rule 102 (TIPO -> bigint .)
    ptcoma          reduce using rule 102 (TIPO -> bigint .)


state 240

    (103) TIPO -> decimal . para LEXP parc

    para            shift and go to state 297


state 241

    (104) TIPO -> numeric . para LEXP parc

    para            shift and go to state 298


state 242

    (105) TIPO -> real .

    constraint      reduce using rule 105 (TIPO -> real .)
    default         reduce using rule 105 (TIPO -> real .)
    primary         reduce using rule 105 (TIPO -> real .)
    references      reduce using rule 105 (TIPO -> real .)
    not             reduce using rule 105 (TIPO -> real .)
    null            reduce using rule 105 (TIPO -> real .)
    parc            reduce using rule 105 (TIPO -> real .)
    coma            reduce using rule 105 (TIPO -> real .)
    ptcoma          reduce using rule 105 (TIPO -> real .)


state 243

    (106) TIPO -> double . precision

    precision       shift and go to state 299


state 244

    (107) TIPO -> money .

    constraint      reduce using rule 107 (TIPO -> money .)
    default         reduce using rule 107 (TIPO -> money .)
    primary         reduce using rule 107 (TIPO -> money .)
    references      reduce using rule 107 (TIPO -> money .)
    not             reduce using rule 107 (TIPO -> money .)
    null            reduce using rule 107 (TIPO -> money .)
    parc            reduce using rule 107 (TIPO -> money .)
    coma            reduce using rule 107 (TIPO -> money .)
    ptcoma          reduce using rule 107 (TIPO -> money .)


state 245

    (108) TIPO -> character . varying para int parc
    (110) TIPO -> character . para int parc

    varying         shift and go to state 300
    para            shift and go to state 301


state 246

    (109) TIPO -> varchar . para int parc

    para            shift and go to state 302


state 247

    (111) TIPO -> char . para int parc

    para            shift and go to state 303


state 248

    (112) TIPO -> text .

    constraint      reduce using rule 112 (TIPO -> text .)
    default         reduce using rule 112 (TIPO -> text .)
    primary         reduce using rule 112 (TIPO -> text .)
    references      reduce using rule 112 (TIPO -> text .)
    not             reduce using rule 112 (TIPO -> text .)
    null            reduce using rule 112 (TIPO -> text .)
    parc            reduce using rule 112 (TIPO -> text .)
    coma            reduce using rule 112 (TIPO -> text .)
    ptcoma          reduce using rule 112 (TIPO -> text .)


state 249

    (113) TIPO -> timestamp .
    (114) TIPO -> timestamp . para int parc

    constraint      reduce using rule 113 (TIPO -> timestamp .)
    default         reduce using rule 113 (TIPO -> timestamp .)
    primary         reduce using rule 113 (TIPO -> timestamp .)
    references      reduce using rule 113 (TIPO -> timestamp .)
    not             reduce using rule 113 (TIPO -> timestamp .)
    null            reduce using rule 113 (TIPO -> timestamp .)
    parc            reduce using rule 113 (TIPO -> timestamp .)
    coma            reduce using rule 113 (TIPO -> timestamp .)
    ptcoma          reduce using rule 113 (TIPO -> timestamp .)
    para            shift and go to state 304


state 250

    (115) TIPO -> date .

    constraint      reduce using rule 115 (TIPO -> date .)
    default         reduce using rule 115 (TIPO -> date .)
    primary         reduce using rule 115 (TIPO -> date .)
    references      reduce using rule 115 (TIPO -> date .)
    not             reduce using rule 115 (TIPO -> date .)
    null            reduce using rule 115 (TIPO -> date .)
    parc            reduce using rule 115 (TIPO -> date .)
    coma            reduce using rule 115 (TIPO -> date .)
    ptcoma          reduce using rule 115 (TIPO -> date .)


state 251

    (116) TIPO -> time .
    (117) TIPO -> time . para int parc

    constraint      reduce using rule 116 (TIPO -> time .)
    default         reduce using rule 116 (TIPO -> time .)
    primary         reduce using rule 116 (TIPO -> time .)
    references      reduce using rule 116 (TIPO -> time .)
    not             reduce using rule 116 (TIPO -> time .)
    null            reduce using rule 116 (TIPO -> time .)
    parc            reduce using rule 116 (TIPO -> time .)
    coma            reduce using rule 116 (TIPO -> time .)
    ptcoma          reduce using rule 116 (TIPO -> time .)
    para            shift and go to state 305


state 252

    (118) TIPO -> interval .
    (119) TIPO -> interval . para int parc
    (120) TIPO -> interval . cadena
    (121) TIPO -> interval . para int parc cadena

    constraint      reduce using rule 118 (TIPO -> interval .)
    default         reduce using rule 118 (TIPO -> interval .)
    primary         reduce using rule 118 (TIPO -> interval .)
    references      reduce using rule 118 (TIPO -> interval .)
    not             reduce using rule 118 (TIPO -> interval .)
    null            reduce using rule 118 (TIPO -> interval .)
    parc            reduce using rule 118 (TIPO -> interval .)
    coma            reduce using rule 118 (TIPO -> interval .)
    ptcoma          reduce using rule 118 (TIPO -> interval .)
    para            shift and go to state 306
    cadena          shift and go to state 307


state 253

    (122) TIPO -> boolean .

    constraint      reduce using rule 122 (TIPO -> boolean .)
    default         reduce using rule 122 (TIPO -> boolean .)
    primary         reduce using rule 122 (TIPO -> boolean .)
    references      reduce using rule 122 (TIPO -> boolean .)
    not             reduce using rule 122 (TIPO -> boolean .)
    null            reduce using rule 122 (TIPO -> boolean .)
    parc            reduce using rule 122 (TIPO -> boolean .)
    coma            reduce using rule 122 (TIPO -> boolean .)
    ptcoma          reduce using rule 122 (TIPO -> boolean .)


state 254

    (47) CREATETABLE -> create table id para LDEF parc . ptcoma
    (48) CREATETABLE -> create table id para LDEF parc . HERENCIA ptcoma
    (69) HERENCIA -> . inherits para LEXP parc

    ptcoma          shift and go to state 308
    inherits        shift and go to state 310

    HERENCIA                       shift and go to state 309

state 255

    (49) LDEF -> LDEF coma . COLDEF
    (51) COLDEF -> . OPCONST
    (52) COLDEF -> . constraint id OPCONST
    (53) COLDEF -> . id TIPO
    (54) COLDEF -> . id TIPO LOPCOLUMN
    (65) OPCONST -> . primary key para LEXP parc
    (66) OPCONST -> . foreign key para LEXP parc references table para LEXP parc
    (67) OPCONST -> . unique para LEXP parc
    (68) OPCONST -> . check para EXP parc

    constraint      shift and go to state 199
    id              shift and go to state 195
    primary         shift and go to state 200
    foreign         shift and go to state 201
    unique          shift and go to state 202
    check           shift and go to state 203

    COLDEF                         shift and go to state 311
    OPCONST                        shift and go to state 198

state 256

    (52) COLDEF -> constraint id . OPCONST
    (65) OPCONST -> . primary key para LEXP parc
    (66) OPCONST -> . foreign key para LEXP parc references table para LEXP parc
    (67) OPCONST -> . unique para LEXP parc
    (68) OPCONST -> . check para EXP parc

    primary         shift and go to state 200
    foreign         shift and go to state 201
    unique          shift and go to state 202
    check           shift and go to state 203

    OPCONST                        shift and go to state 312

state 257

    (65) OPCONST -> primary key . para LEXP parc

    para            shift and go to state 313


state 258

    (66) OPCONST -> foreign key . para LEXP parc references table para LEXP parc

    para            shift and go to state 314


state 259

    (67) OPCONST -> unique para . LEXP parc
    (98) LEXP -> . LEXP coma EXP
    (99) LEXP -> . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    LEXP                           shift and go to state 315
    EXP                            shift and go to state 35
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 260

    (68) OPCONST -> check para . EXP parc
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 316
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 261

    (70) CREATETYPE -> create type id as enum para . LEXP parc
    (98) LEXP -> . LEXP coma EXP
    (99) LEXP -> . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    LEXP                           shift and go to state 317
    EXP                            shift and go to state 35
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 262

    (94) LCAMPOS -> id igual EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

    where           reduce using rule 94 (LCAMPOS -> id igual EXP .)
    id              reduce using rule 94 (LCAMPOS -> id igual EXP .)
    mas             shift and go to state 69
    menos           shift and go to state 70
    multiplicacion  shift and go to state 71
    division        shift and go to state 72
    modulo          shift and go to state 73
    elevado         shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    mayor           shift and go to state 77
    menor           shift and go to state 78
    mayor_igual     shift and go to state 79
    menor_igual     shift and go to state 80
    igual           shift and go to state 81
    diferente1      shift and go to state 82
    diferente2      shift and go to state 83
    punto           shift and go to state 84
    between         shift and go to state 85
    in              shift and go to state 86
    not             shift and go to state 87
    is              shift and go to state 88
    isnull          shift and go to state 89
    notnull         shift and go to state 90


state 263

    (95) LCAMPOS -> id igual default .

    where           reduce using rule 95 (LCAMPOS -> id igual default .)
    id              reduce using rule 95 (LCAMPOS -> id igual default .)


state 264

    (93) LCAMPOS -> LCAMPOS id igual . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 318
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 265

    (92) UPDATE -> update id set LCAMPOS where EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

    ptcoma          reduce using rule 92 (UPDATE -> update id set LCAMPOS where EXP .)
    mas             shift and go to state 69
    menos           shift and go to state 70
    multiplicacion  shift and go to state 71
    division        shift and go to state 72
    modulo          shift and go to state 73
    elevado         shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    mayor           shift and go to state 77
    menor           shift and go to state 78
    mayor_igual     shift and go to state 79
    menor_igual     shift and go to state 80
    igual           shift and go to state 81
    diferente1      shift and go to state 82
    diferente2      shift and go to state 83
    punto           shift and go to state 84
    between         shift and go to state 85
    in              shift and go to state 86
    not             shift and go to state 87
    is              shift and go to state 88
    isnull          shift and go to state 89
    notnull         shift and go to state 90


state 266

    (25) RO -> rename to id .

    ptcoma          reduce using rule 25 (RO -> rename to id .)


state 267

    (26) RO -> owner to id .

    ptcoma          reduce using rule 26 (RO -> owner to id .)


state 268

    (30) OP -> alter column id . set not null
    (31) OP -> alter column id . set null
    (37) alc -> alter column id . type TIPO

    set             shift and go to state 319
    type            shift and go to state 320


state 269

    (41) ADD -> column id . TIPO
    (100) TIPO -> . smallint
    (101) TIPO -> . integer
    (102) TIPO -> . bigint
    (103) TIPO -> . decimal para LEXP parc
    (104) TIPO -> . numeric para LEXP parc
    (105) TIPO -> . real
    (106) TIPO -> . double precision
    (107) TIPO -> . money
    (108) TIPO -> . character varying para int parc
    (109) TIPO -> . varchar para int parc
    (110) TIPO -> . character para int parc
    (111) TIPO -> . char para int parc
    (112) TIPO -> . text
    (113) TIPO -> . timestamp
    (114) TIPO -> . timestamp para int parc
    (115) TIPO -> . date
    (116) TIPO -> . time
    (117) TIPO -> . time para int parc
    (118) TIPO -> . interval
    (119) TIPO -> . interval para int parc
    (120) TIPO -> . interval cadena
    (121) TIPO -> . interval para int parc cadena
    (122) TIPO -> . boolean

    smallint        shift and go to state 237
    integer         shift and go to state 238
    bigint          shift and go to state 239
    decimal         shift and go to state 240
    numeric         shift and go to state 241
    real            shift and go to state 242
    double          shift and go to state 243
    money           shift and go to state 244
    character       shift and go to state 245
    varchar         shift and go to state 246
    char            shift and go to state 247
    text            shift and go to state 248
    timestamp       shift and go to state 249
    date            shift and go to state 250
    time            shift and go to state 251
    interval        shift and go to state 252
    boolean         shift and go to state 253

    TIPO                           shift and go to state 321

state 270

    (42) ADD -> check para . LEXP parc
    (98) LEXP -> . LEXP coma EXP
    (99) LEXP -> . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    LEXP                           shift and go to state 322
    EXP                            shift and go to state 35
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 271

    (43) ADD -> constraint id . unique para id parc

    unique          shift and go to state 323


state 272

    (44) ADD -> foreign key . para id parc references id para id parc

    para            shift and go to state 324


state 273

    (39) ALTERDROP -> column . LISTACOLUMN
    (45) LISTACOLUMN -> . LISTACOLUMN coma id
    (46) LISTACOLUMN -> . id

    id              shift and go to state 276

    LISTACOLUMN                    shift and go to state 275

state 274

    (29) OP -> drop column ALTERDROP .

    ptcoma          reduce using rule 29 (OP -> drop column ALTERDROP .)


state 275

    (39) ALTERDROP -> column LISTACOLUMN .
    (45) LISTACOLUMN -> LISTACOLUMN . coma id

    ptcoma          reduce using rule 39 (ALTERDROP -> column LISTACOLUMN .)
    coma            shift and go to state 325


state 276

    (46) LISTACOLUMN -> id .

    coma            reduce using rule 46 (LISTACOLUMN -> id .)
    ptcoma          reduce using rule 46 (LISTACOLUMN -> id .)


state 277

    (38) ALTERDROP -> constraint id .

    ptcoma          reduce using rule 38 (ALTERDROP -> constraint id .)


state 278

    (40) ALTERDROP -> check id .

    ptcoma          reduce using rule 40 (ALTERDROP -> check id .)


state 279

    (35) listaalc -> listaalc coma alc .

    coma            reduce using rule 35 (listaalc -> listaalc coma alc .)
    ptcoma          reduce using rule 35 (listaalc -> listaalc coma alc .)


state 280

    (37) alc -> alter . column id type TIPO

    column          shift and go to state 326


state 281

    (34) OP -> rename column id . to id

    to              shift and go to state 327


state 282

    (19) INSERT -> insert into id values para LEXP . parc
    (98) LEXP -> LEXP . coma EXP

    parc            shift and go to state 328
    coma            shift and go to state 68


state 283

    (71) SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP . HAVING ORDER
    (85) HAVING -> . having EXP
    (86) HAVING -> .

  ! shift/reduce conflict for having resolved as shift
    having          shift and go to state 285
    r_from          reduce using rule 86 (HAVING -> .)
    ptcoma          reduce using rule 86 (HAVING -> .)
    mas             reduce using rule 86 (HAVING -> .)
    menos           reduce using rule 86 (HAVING -> .)
    multiplicacion  reduce using rule 86 (HAVING -> .)
    division        reduce using rule 86 (HAVING -> .)
    modulo          reduce using rule 86 (HAVING -> .)
    elevado         reduce using rule 86 (HAVING -> .)
    and             reduce using rule 86 (HAVING -> .)
    or              reduce using rule 86 (HAVING -> .)
    mayor           reduce using rule 86 (HAVING -> .)
    menor           reduce using rule 86 (HAVING -> .)
    mayor_igual     reduce using rule 86 (HAVING -> .)
    menor_igual     reduce using rule 86 (HAVING -> .)
    igual           reduce using rule 86 (HAVING -> .)
    diferente1      reduce using rule 86 (HAVING -> .)
    diferente2      reduce using rule 86 (HAVING -> .)
    punto           reduce using rule 86 (HAVING -> .)
    between         reduce using rule 86 (HAVING -> .)
    in              reduce using rule 86 (HAVING -> .)
    not             reduce using rule 86 (HAVING -> .)
    is              reduce using rule 86 (HAVING -> .)
    isnull          reduce using rule 86 (HAVING -> .)
    notnull         reduce using rule 86 (HAVING -> .)
    coma            reduce using rule 86 (HAVING -> .)
    parc            reduce using rule 86 (HAVING -> .)
    then            reduce using rule 86 (HAVING -> .)
    as              reduce using rule 86 (HAVING -> .)
    id              reduce using rule 86 (HAVING -> .)
    where           reduce using rule 86 (HAVING -> .)
    group           reduce using rule 86 (HAVING -> .)
    order           reduce using rule 86 (HAVING -> .)
    end             reduce using rule 86 (HAVING -> .)
    else            reduce using rule 86 (HAVING -> .)
    when            reduce using rule 86 (HAVING -> .)
    constraint      reduce using rule 86 (HAVING -> .)
    default         reduce using rule 86 (HAVING -> .)
    primary         reduce using rule 86 (HAVING -> .)
    references      reduce using rule 86 (HAVING -> .)
    null            reduce using rule 86 (HAVING -> .)
    asc             reduce using rule 86 (HAVING -> .)
    desc            reduce using rule 86 (HAVING -> .)

  ! having          [ reduce using rule 86 (HAVING -> .) ]

    HAVING                         shift and go to state 329

state 284

    (72) SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING . ORDER
    (87) ORDER -> . order by EXP ORD
    (88) ORDER -> . order by EXP
    (89) ORDER -> .

  ! shift/reduce conflict for order resolved as shift
    order           shift and go to state 331
    r_from          reduce using rule 89 (ORDER -> .)
    ptcoma          reduce using rule 89 (ORDER -> .)
    mas             reduce using rule 89 (ORDER -> .)
    menos           reduce using rule 89 (ORDER -> .)
    multiplicacion  reduce using rule 89 (ORDER -> .)
    division        reduce using rule 89 (ORDER -> .)
    modulo          reduce using rule 89 (ORDER -> .)
    elevado         reduce using rule 89 (ORDER -> .)
    and             reduce using rule 89 (ORDER -> .)
    or              reduce using rule 89 (ORDER -> .)
    mayor           reduce using rule 89 (ORDER -> .)
    menor           reduce using rule 89 (ORDER -> .)
    mayor_igual     reduce using rule 89 (ORDER -> .)
    menor_igual     reduce using rule 89 (ORDER -> .)
    igual           reduce using rule 89 (ORDER -> .)
    diferente1      reduce using rule 89 (ORDER -> .)
    diferente2      reduce using rule 89 (ORDER -> .)
    punto           reduce using rule 89 (ORDER -> .)
    between         reduce using rule 89 (ORDER -> .)
    in              reduce using rule 89 (ORDER -> .)
    not             reduce using rule 89 (ORDER -> .)
    is              reduce using rule 89 (ORDER -> .)
    isnull          reduce using rule 89 (ORDER -> .)
    notnull         reduce using rule 89 (ORDER -> .)
    coma            reduce using rule 89 (ORDER -> .)
    parc            reduce using rule 89 (ORDER -> .)
    then            reduce using rule 89 (ORDER -> .)
    as              reduce using rule 89 (ORDER -> .)
    id              reduce using rule 89 (ORDER -> .)
    where           reduce using rule 89 (ORDER -> .)
    group           reduce using rule 89 (ORDER -> .)
    having          reduce using rule 89 (ORDER -> .)
    end             reduce using rule 89 (ORDER -> .)
    else            reduce using rule 89 (ORDER -> .)
    when            reduce using rule 89 (ORDER -> .)
    constraint      reduce using rule 89 (ORDER -> .)
    default         reduce using rule 89 (ORDER -> .)
    primary         reduce using rule 89 (ORDER -> .)
    references      reduce using rule 89 (ORDER -> .)
    null            reduce using rule 89 (ORDER -> .)
    asc             reduce using rule 89 (ORDER -> .)
    desc            reduce using rule 89 (ORDER -> .)

  ! order           [ reduce using rule 89 (ORDER -> .) ]

    ORDER                          shift and go to state 330

state 285

    (85) HAVING -> having . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 332
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 286

    (83) GROUP -> group by . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 333
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 287

    (172) PREDICADOS -> EXP is not distinct r_from EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

    r_from          reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    ptcoma          reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    mas             reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    menos           reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    multiplicacion  reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    division        reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    modulo          reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    elevado         reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    mayor           reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    menor           reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    mayor_igual     reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    menor_igual     reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    igual           reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    diferente1      reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    diferente2      reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    punto           reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    between         reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    in              reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    is              reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    isnull          reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    notnull         reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    coma            reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    parc            reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    then            reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    as              reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    id              reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    where           reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    group           reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    having          reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    order           reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    end             reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    else            reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    when            reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    constraint      reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    default         reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    primary         reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    references      reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    null            reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    asc             reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    desc            reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .)
    and             shift and go to state 75
    or              shift and go to state 76
    not             shift and go to state 87

  ! and             [ reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .) ]
  ! or              [ reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .) ]
  ! not             [ reduce using rule 172 (PREDICADOS -> EXP is not distinct r_from EXP .) ]
  ! mas             [ shift and go to state 69 ]
  ! menos           [ shift and go to state 70 ]
  ! multiplicacion  [ shift and go to state 71 ]
  ! division        [ shift and go to state 72 ]
  ! modulo          [ shift and go to state 73 ]
  ! elevado         [ shift and go to state 74 ]
  ! mayor           [ shift and go to state 77 ]
  ! menor           [ shift and go to state 78 ]
  ! mayor_igual     [ shift and go to state 79 ]
  ! menor_igual     [ shift and go to state 80 ]
  ! igual           [ shift and go to state 81 ]
  ! diferente1      [ shift and go to state 82 ]
  ! diferente2      [ shift and go to state 83 ]
  ! punto           [ shift and go to state 84 ]
  ! between         [ shift and go to state 85 ]
  ! in              [ shift and go to state 86 ]
  ! is              [ shift and go to state 88 ]
  ! isnull          [ shift and go to state 89 ]
  ! notnull         [ shift and go to state 90 ]


state 288

    (159) EXP -> extract para FIELDS r_from timestamp cadena . parc

    parc            shift and go to state 334


state 289

    (54) COLDEF -> id TIPO LOPCOLUMN .
    (55) LOPCOLUMN -> LOPCOLUMN . OPCOLUMN
    (57) OPCOLUMN -> . constraint id unique
    (58) OPCOLUMN -> . constraint id check para EXP parc
    (59) OPCOLUMN -> . default EXP
    (60) OPCOLUMN -> . PNULL
    (61) OPCOLUMN -> . primary key
    (62) OPCOLUMN -> . references id
    (63) PNULL -> . not null
    (64) PNULL -> . null

    parc            reduce using rule 54 (COLDEF -> id TIPO LOPCOLUMN .)
    coma            reduce using rule 54 (COLDEF -> id TIPO LOPCOLUMN .)
    constraint      shift and go to state 291
    default         shift and go to state 292
    primary         shift and go to state 294
    references      shift and go to state 295
    not             shift and go to state 296
    null            shift and go to state 146

    OPCOLUMN                       shift and go to state 335
    PNULL                          shift and go to state 293

state 290

    (56) LOPCOLUMN -> OPCOLUMN .

    constraint      reduce using rule 56 (LOPCOLUMN -> OPCOLUMN .)
    default         reduce using rule 56 (LOPCOLUMN -> OPCOLUMN .)
    primary         reduce using rule 56 (LOPCOLUMN -> OPCOLUMN .)
    references      reduce using rule 56 (LOPCOLUMN -> OPCOLUMN .)
    not             reduce using rule 56 (LOPCOLUMN -> OPCOLUMN .)
    null            reduce using rule 56 (LOPCOLUMN -> OPCOLUMN .)
    parc            reduce using rule 56 (LOPCOLUMN -> OPCOLUMN .)
    coma            reduce using rule 56 (LOPCOLUMN -> OPCOLUMN .)


state 291

    (57) OPCOLUMN -> constraint . id unique
    (58) OPCOLUMN -> constraint . id check para EXP parc

    id              shift and go to state 336


state 292

    (59) OPCOLUMN -> default . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 337
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 293

    (60) OPCOLUMN -> PNULL .

    constraint      reduce using rule 60 (OPCOLUMN -> PNULL .)
    default         reduce using rule 60 (OPCOLUMN -> PNULL .)
    primary         reduce using rule 60 (OPCOLUMN -> PNULL .)
    references      reduce using rule 60 (OPCOLUMN -> PNULL .)
    not             reduce using rule 60 (OPCOLUMN -> PNULL .)
    null            reduce using rule 60 (OPCOLUMN -> PNULL .)
    parc            reduce using rule 60 (OPCOLUMN -> PNULL .)
    coma            reduce using rule 60 (OPCOLUMN -> PNULL .)


state 294

    (61) OPCOLUMN -> primary . key

    key             shift and go to state 338


state 295

    (62) OPCOLUMN -> references . id

    id              shift and go to state 339


state 296

    (63) PNULL -> not . null

    null            shift and go to state 192


state 297

    (103) TIPO -> decimal para . LEXP parc
    (98) LEXP -> . LEXP coma EXP
    (99) LEXP -> . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    LEXP                           shift and go to state 340
    EXP                            shift and go to state 35
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 298

    (104) TIPO -> numeric para . LEXP parc
    (98) LEXP -> . LEXP coma EXP
    (99) LEXP -> . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    LEXP                           shift and go to state 341
    EXP                            shift and go to state 35
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 299

    (106) TIPO -> double precision .

    constraint      reduce using rule 106 (TIPO -> double precision .)
    default         reduce using rule 106 (TIPO -> double precision .)
    primary         reduce using rule 106 (TIPO -> double precision .)
    references      reduce using rule 106 (TIPO -> double precision .)
    not             reduce using rule 106 (TIPO -> double precision .)
    null            reduce using rule 106 (TIPO -> double precision .)
    parc            reduce using rule 106 (TIPO -> double precision .)
    coma            reduce using rule 106 (TIPO -> double precision .)
    ptcoma          reduce using rule 106 (TIPO -> double precision .)


state 300

    (108) TIPO -> character varying . para int parc

    para            shift and go to state 342


state 301

    (110) TIPO -> character para . int parc

    int             shift and go to state 343


state 302

    (109) TIPO -> varchar para . int parc

    int             shift and go to state 344


state 303

    (111) TIPO -> char para . int parc

    int             shift and go to state 345


state 304

    (114) TIPO -> timestamp para . int parc

    int             shift and go to state 346


state 305

    (117) TIPO -> time para . int parc

    int             shift and go to state 347


state 306

    (119) TIPO -> interval para . int parc
    (121) TIPO -> interval para . int parc cadena

    int             shift and go to state 348


state 307

    (120) TIPO -> interval cadena .

    constraint      reduce using rule 120 (TIPO -> interval cadena .)
    default         reduce using rule 120 (TIPO -> interval cadena .)
    primary         reduce using rule 120 (TIPO -> interval cadena .)
    references      reduce using rule 120 (TIPO -> interval cadena .)
    not             reduce using rule 120 (TIPO -> interval cadena .)
    null            reduce using rule 120 (TIPO -> interval cadena .)
    parc            reduce using rule 120 (TIPO -> interval cadena .)
    coma            reduce using rule 120 (TIPO -> interval cadena .)
    ptcoma          reduce using rule 120 (TIPO -> interval cadena .)


state 308

    (47) CREATETABLE -> create table id para LDEF parc ptcoma .

    select          reduce using rule 47 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    create          reduce using rule 47 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    update          reduce using rule 47 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    delete          reduce using rule 47 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    alter           reduce using rule 47 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    drop            reduce using rule 47 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    insert          reduce using rule 47 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    case            reduce using rule 47 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    $end            reduce using rule 47 (CREATETABLE -> create table id para LDEF parc ptcoma .)


state 309

    (48) CREATETABLE -> create table id para LDEF parc HERENCIA . ptcoma

    ptcoma          shift and go to state 349


state 310

    (69) HERENCIA -> inherits . para LEXP parc

    para            shift and go to state 350


state 311

    (49) LDEF -> LDEF coma COLDEF .

    parc            reduce using rule 49 (LDEF -> LDEF coma COLDEF .)
    coma            reduce using rule 49 (LDEF -> LDEF coma COLDEF .)


state 312

    (52) COLDEF -> constraint id OPCONST .

    parc            reduce using rule 52 (COLDEF -> constraint id OPCONST .)
    coma            reduce using rule 52 (COLDEF -> constraint id OPCONST .)


state 313

    (65) OPCONST -> primary key para . LEXP parc
    (98) LEXP -> . LEXP coma EXP
    (99) LEXP -> . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    LEXP                           shift and go to state 351
    EXP                            shift and go to state 35
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 314

    (66) OPCONST -> foreign key para . LEXP parc references table para LEXP parc
    (98) LEXP -> . LEXP coma EXP
    (99) LEXP -> . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    LEXP                           shift and go to state 352
    EXP                            shift and go to state 35
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 315

    (67) OPCONST -> unique para LEXP . parc
    (98) LEXP -> LEXP . coma EXP

    parc            shift and go to state 353
    coma            shift and go to state 68


state 316

    (68) OPCONST -> check para EXP . parc
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

    parc            shift and go to state 354
    mas             shift and go to state 69
    menos           shift and go to state 70
    multiplicacion  shift and go to state 71
    division        shift and go to state 72
    modulo          shift and go to state 73
    elevado         shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    mayor           shift and go to state 77
    menor           shift and go to state 78
    mayor_igual     shift and go to state 79
    menor_igual     shift and go to state 80
    igual           shift and go to state 81
    diferente1      shift and go to state 82
    diferente2      shift and go to state 83
    punto           shift and go to state 84
    between         shift and go to state 85
    in              shift and go to state 86
    not             shift and go to state 87
    is              shift and go to state 88
    isnull          shift and go to state 89
    notnull         shift and go to state 90


state 317

    (70) CREATETYPE -> create type id as enum para LEXP . parc
    (98) LEXP -> LEXP . coma EXP

    parc            shift and go to state 355
    coma            shift and go to state 68


state 318

    (93) LCAMPOS -> LCAMPOS id igual EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

    where           reduce using rule 93 (LCAMPOS -> LCAMPOS id igual EXP .)
    id              reduce using rule 93 (LCAMPOS -> LCAMPOS id igual EXP .)
    mas             shift and go to state 69
    menos           shift and go to state 70
    multiplicacion  shift and go to state 71
    division        shift and go to state 72
    modulo          shift and go to state 73
    elevado         shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    mayor           shift and go to state 77
    menor           shift and go to state 78
    mayor_igual     shift and go to state 79
    menor_igual     shift and go to state 80
    igual           shift and go to state 81
    diferente1      shift and go to state 82
    diferente2      shift and go to state 83
    punto           shift and go to state 84
    between         shift and go to state 85
    in              shift and go to state 86
    not             shift and go to state 87
    is              shift and go to state 88
    isnull          shift and go to state 89
    notnull         shift and go to state 90


state 319

    (30) OP -> alter column id set . not null
    (31) OP -> alter column id set . null

    not             shift and go to state 356
    null            shift and go to state 357


state 320

    (37) alc -> alter column id type . TIPO
    (100) TIPO -> . smallint
    (101) TIPO -> . integer
    (102) TIPO -> . bigint
    (103) TIPO -> . decimal para LEXP parc
    (104) TIPO -> . numeric para LEXP parc
    (105) TIPO -> . real
    (106) TIPO -> . double precision
    (107) TIPO -> . money
    (108) TIPO -> . character varying para int parc
    (109) TIPO -> . varchar para int parc
    (110) TIPO -> . character para int parc
    (111) TIPO -> . char para int parc
    (112) TIPO -> . text
    (113) TIPO -> . timestamp
    (114) TIPO -> . timestamp para int parc
    (115) TIPO -> . date
    (116) TIPO -> . time
    (117) TIPO -> . time para int parc
    (118) TIPO -> . interval
    (119) TIPO -> . interval para int parc
    (120) TIPO -> . interval cadena
    (121) TIPO -> . interval para int parc cadena
    (122) TIPO -> . boolean

    smallint        shift and go to state 237
    integer         shift and go to state 238
    bigint          shift and go to state 239
    decimal         shift and go to state 240
    numeric         shift and go to state 241
    real            shift and go to state 242
    double          shift and go to state 243
    money           shift and go to state 244
    character       shift and go to state 245
    varchar         shift and go to state 246
    char            shift and go to state 247
    text            shift and go to state 248
    timestamp       shift and go to state 249
    date            shift and go to state 250
    time            shift and go to state 251
    interval        shift and go to state 252
    boolean         shift and go to state 253

    TIPO                           shift and go to state 358

state 321

    (41) ADD -> column id TIPO .

    ptcoma          reduce using rule 41 (ADD -> column id TIPO .)


state 322

    (42) ADD -> check para LEXP . parc
    (98) LEXP -> LEXP . coma EXP

    parc            shift and go to state 359
    coma            shift and go to state 68


state 323

    (43) ADD -> constraint id unique . para id parc

    para            shift and go to state 360


state 324

    (44) ADD -> foreign key para . id parc references id para id parc

    id              shift and go to state 361


state 325

    (45) LISTACOLUMN -> LISTACOLUMN coma . id

    id              shift and go to state 362


state 326

    (37) alc -> alter column . id type TIPO

    id              shift and go to state 363


state 327

    (34) OP -> rename column id to . id

    id              shift and go to state 364


state 328

    (19) INSERT -> insert into id values para LEXP parc .

    ptcoma          reduce using rule 19 (INSERT -> insert into id values para LEXP parc .)


state 329

    (71) SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING . ORDER
    (87) ORDER -> . order by EXP ORD
    (88) ORDER -> . order by EXP
    (89) ORDER -> .

  ! shift/reduce conflict for order resolved as shift
    order           shift and go to state 331
    r_from          reduce using rule 89 (ORDER -> .)
    ptcoma          reduce using rule 89 (ORDER -> .)
    mas             reduce using rule 89 (ORDER -> .)
    menos           reduce using rule 89 (ORDER -> .)
    multiplicacion  reduce using rule 89 (ORDER -> .)
    division        reduce using rule 89 (ORDER -> .)
    modulo          reduce using rule 89 (ORDER -> .)
    elevado         reduce using rule 89 (ORDER -> .)
    and             reduce using rule 89 (ORDER -> .)
    or              reduce using rule 89 (ORDER -> .)
    mayor           reduce using rule 89 (ORDER -> .)
    menor           reduce using rule 89 (ORDER -> .)
    mayor_igual     reduce using rule 89 (ORDER -> .)
    menor_igual     reduce using rule 89 (ORDER -> .)
    igual           reduce using rule 89 (ORDER -> .)
    diferente1      reduce using rule 89 (ORDER -> .)
    diferente2      reduce using rule 89 (ORDER -> .)
    punto           reduce using rule 89 (ORDER -> .)
    between         reduce using rule 89 (ORDER -> .)
    in              reduce using rule 89 (ORDER -> .)
    not             reduce using rule 89 (ORDER -> .)
    is              reduce using rule 89 (ORDER -> .)
    isnull          reduce using rule 89 (ORDER -> .)
    notnull         reduce using rule 89 (ORDER -> .)
    coma            reduce using rule 89 (ORDER -> .)
    parc            reduce using rule 89 (ORDER -> .)
    then            reduce using rule 89 (ORDER -> .)
    as              reduce using rule 89 (ORDER -> .)
    id              reduce using rule 89 (ORDER -> .)
    where           reduce using rule 89 (ORDER -> .)
    group           reduce using rule 89 (ORDER -> .)
    having          reduce using rule 89 (ORDER -> .)
    end             reduce using rule 89 (ORDER -> .)
    else            reduce using rule 89 (ORDER -> .)
    when            reduce using rule 89 (ORDER -> .)
    constraint      reduce using rule 89 (ORDER -> .)
    default         reduce using rule 89 (ORDER -> .)
    primary         reduce using rule 89 (ORDER -> .)
    references      reduce using rule 89 (ORDER -> .)
    null            reduce using rule 89 (ORDER -> .)
    asc             reduce using rule 89 (ORDER -> .)
    desc            reduce using rule 89 (ORDER -> .)

  ! order           [ reduce using rule 89 (ORDER -> .) ]

    ORDER                          shift and go to state 365

state 330

    (72) SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .

    ptcoma          reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    r_from          reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    mas             reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    menos           reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    multiplicacion  reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    division        reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    modulo          reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    elevado         reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    and             reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    or              reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    mayor           reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    menor           reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    mayor_igual     reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    menor_igual     reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    igual           reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    diferente1      reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    diferente2      reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    punto           reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    between         reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    in              reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    not             reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    is              reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    isnull          reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    notnull         reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    coma            reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    parc            reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    then            reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    as              reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    id              reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    where           reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    group           reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    having          reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    order           reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    end             reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    else            reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    when            reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    constraint      reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    default         reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    primary         reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    references      reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    null            reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    asc             reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    desc            reduce using rule 72 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)


state 331

    (87) ORDER -> order . by EXP ORD
    (88) ORDER -> order . by EXP

    by              shift and go to state 366


state 332

    (85) HAVING -> having EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for punto resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
    r_from          reduce using rule 85 (HAVING -> having EXP .)
    ptcoma          reduce using rule 85 (HAVING -> having EXP .)
    coma            reduce using rule 85 (HAVING -> having EXP .)
    parc            reduce using rule 85 (HAVING -> having EXP .)
    then            reduce using rule 85 (HAVING -> having EXP .)
    as              reduce using rule 85 (HAVING -> having EXP .)
    id              reduce using rule 85 (HAVING -> having EXP .)
    where           reduce using rule 85 (HAVING -> having EXP .)
    group           reduce using rule 85 (HAVING -> having EXP .)
    having          reduce using rule 85 (HAVING -> having EXP .)
    order           reduce using rule 85 (HAVING -> having EXP .)
    end             reduce using rule 85 (HAVING -> having EXP .)
    else            reduce using rule 85 (HAVING -> having EXP .)
    when            reduce using rule 85 (HAVING -> having EXP .)
    constraint      reduce using rule 85 (HAVING -> having EXP .)
    default         reduce using rule 85 (HAVING -> having EXP .)
    primary         reduce using rule 85 (HAVING -> having EXP .)
    references      reduce using rule 85 (HAVING -> having EXP .)
    null            reduce using rule 85 (HAVING -> having EXP .)
    asc             reduce using rule 85 (HAVING -> having EXP .)
    desc            reduce using rule 85 (HAVING -> having EXP .)
    mas             shift and go to state 69
    menos           shift and go to state 70
    multiplicacion  shift and go to state 71
    division        shift and go to state 72
    modulo          shift and go to state 73
    elevado         shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    mayor           shift and go to state 77
    menor           shift and go to state 78
    mayor_igual     shift and go to state 79
    menor_igual     shift and go to state 80
    igual           shift and go to state 81
    diferente1      shift and go to state 82
    diferente2      shift and go to state 83
    punto           shift and go to state 84
    between         shift and go to state 85
    in              shift and go to state 86
    not             shift and go to state 87
    is              shift and go to state 88
    isnull          shift and go to state 89
    notnull         shift and go to state 90

  ! mas             [ reduce using rule 85 (HAVING -> having EXP .) ]
  ! menos           [ reduce using rule 85 (HAVING -> having EXP .) ]
  ! multiplicacion  [ reduce using rule 85 (HAVING -> having EXP .) ]
  ! division        [ reduce using rule 85 (HAVING -> having EXP .) ]
  ! modulo          [ reduce using rule 85 (HAVING -> having EXP .) ]
  ! elevado         [ reduce using rule 85 (HAVING -> having EXP .) ]
  ! and             [ reduce using rule 85 (HAVING -> having EXP .) ]
  ! or              [ reduce using rule 85 (HAVING -> having EXP .) ]
  ! mayor           [ reduce using rule 85 (HAVING -> having EXP .) ]
  ! menor           [ reduce using rule 85 (HAVING -> having EXP .) ]
  ! mayor_igual     [ reduce using rule 85 (HAVING -> having EXP .) ]
  ! menor_igual     [ reduce using rule 85 (HAVING -> having EXP .) ]
  ! igual           [ reduce using rule 85 (HAVING -> having EXP .) ]
  ! diferente1      [ reduce using rule 85 (HAVING -> having EXP .) ]
  ! diferente2      [ reduce using rule 85 (HAVING -> having EXP .) ]
  ! punto           [ reduce using rule 85 (HAVING -> having EXP .) ]
  ! between         [ reduce using rule 85 (HAVING -> having EXP .) ]
  ! in              [ reduce using rule 85 (HAVING -> having EXP .) ]
  ! not             [ reduce using rule 85 (HAVING -> having EXP .) ]
  ! is              [ reduce using rule 85 (HAVING -> having EXP .) ]
  ! isnull          [ reduce using rule 85 (HAVING -> having EXP .) ]
  ! notnull         [ reduce using rule 85 (HAVING -> having EXP .) ]


state 333

    (83) GROUP -> group by EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for punto resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
    r_from          reduce using rule 83 (GROUP -> group by EXP .)
    ptcoma          reduce using rule 83 (GROUP -> group by EXP .)
    coma            reduce using rule 83 (GROUP -> group by EXP .)
    parc            reduce using rule 83 (GROUP -> group by EXP .)
    then            reduce using rule 83 (GROUP -> group by EXP .)
    as              reduce using rule 83 (GROUP -> group by EXP .)
    id              reduce using rule 83 (GROUP -> group by EXP .)
    where           reduce using rule 83 (GROUP -> group by EXP .)
    group           reduce using rule 83 (GROUP -> group by EXP .)
    having          reduce using rule 83 (GROUP -> group by EXP .)
    order           reduce using rule 83 (GROUP -> group by EXP .)
    end             reduce using rule 83 (GROUP -> group by EXP .)
    else            reduce using rule 83 (GROUP -> group by EXP .)
    when            reduce using rule 83 (GROUP -> group by EXP .)
    constraint      reduce using rule 83 (GROUP -> group by EXP .)
    default         reduce using rule 83 (GROUP -> group by EXP .)
    primary         reduce using rule 83 (GROUP -> group by EXP .)
    references      reduce using rule 83 (GROUP -> group by EXP .)
    null            reduce using rule 83 (GROUP -> group by EXP .)
    asc             reduce using rule 83 (GROUP -> group by EXP .)
    desc            reduce using rule 83 (GROUP -> group by EXP .)
    mas             shift and go to state 69
    menos           shift and go to state 70
    multiplicacion  shift and go to state 71
    division        shift and go to state 72
    modulo          shift and go to state 73
    elevado         shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    mayor           shift and go to state 77
    menor           shift and go to state 78
    mayor_igual     shift and go to state 79
    menor_igual     shift and go to state 80
    igual           shift and go to state 81
    diferente1      shift and go to state 82
    diferente2      shift and go to state 83
    punto           shift and go to state 84
    between         shift and go to state 85
    in              shift and go to state 86
    not             shift and go to state 87
    is              shift and go to state 88
    isnull          shift and go to state 89
    notnull         shift and go to state 90

  ! mas             [ reduce using rule 83 (GROUP -> group by EXP .) ]
  ! menos           [ reduce using rule 83 (GROUP -> group by EXP .) ]
  ! multiplicacion  [ reduce using rule 83 (GROUP -> group by EXP .) ]
  ! division        [ reduce using rule 83 (GROUP -> group by EXP .) ]
  ! modulo          [ reduce using rule 83 (GROUP -> group by EXP .) ]
  ! elevado         [ reduce using rule 83 (GROUP -> group by EXP .) ]
  ! and             [ reduce using rule 83 (GROUP -> group by EXP .) ]
  ! or              [ reduce using rule 83 (GROUP -> group by EXP .) ]
  ! mayor           [ reduce using rule 83 (GROUP -> group by EXP .) ]
  ! menor           [ reduce using rule 83 (GROUP -> group by EXP .) ]
  ! mayor_igual     [ reduce using rule 83 (GROUP -> group by EXP .) ]
  ! menor_igual     [ reduce using rule 83 (GROUP -> group by EXP .) ]
  ! igual           [ reduce using rule 83 (GROUP -> group by EXP .) ]
  ! diferente1      [ reduce using rule 83 (GROUP -> group by EXP .) ]
  ! diferente2      [ reduce using rule 83 (GROUP -> group by EXP .) ]
  ! punto           [ reduce using rule 83 (GROUP -> group by EXP .) ]
  ! between         [ reduce using rule 83 (GROUP -> group by EXP .) ]
  ! in              [ reduce using rule 83 (GROUP -> group by EXP .) ]
  ! not             [ reduce using rule 83 (GROUP -> group by EXP .) ]
  ! is              [ reduce using rule 83 (GROUP -> group by EXP .) ]
  ! isnull          [ reduce using rule 83 (GROUP -> group by EXP .) ]
  ! notnull         [ reduce using rule 83 (GROUP -> group by EXP .) ]


state 334

    (159) EXP -> extract para FIELDS r_from timestamp cadena parc .

    r_from          reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    ptcoma          reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    mas             reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    menos           reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    multiplicacion  reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    division        reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    modulo          reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    elevado         reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    and             reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    or              reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    mayor           reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    menor           reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    mayor_igual     reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    menor_igual     reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    igual           reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    diferente1      reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    diferente2      reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    punto           reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    between         reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    in              reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    not             reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    is              reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    isnull          reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    notnull         reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    coma            reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    parc            reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    then            reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    as              reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    id              reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    where           reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    group           reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    having          reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    order           reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    end             reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    else            reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    when            reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    constraint      reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    default         reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    primary         reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    references      reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    null            reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    asc             reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    desc            reduce using rule 159 (EXP -> extract para FIELDS r_from timestamp cadena parc .)


state 335

    (55) LOPCOLUMN -> LOPCOLUMN OPCOLUMN .

    constraint      reduce using rule 55 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    default         reduce using rule 55 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    primary         reduce using rule 55 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    references      reduce using rule 55 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    not             reduce using rule 55 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    null            reduce using rule 55 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    parc            reduce using rule 55 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    coma            reduce using rule 55 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)


state 336

    (57) OPCOLUMN -> constraint id . unique
    (58) OPCOLUMN -> constraint id . check para EXP parc

    unique          shift and go to state 367
    check           shift and go to state 368


state 337

    (59) OPCOLUMN -> default EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

  ! shift/reduce conflict for not resolved as shift
    constraint      reduce using rule 59 (OPCOLUMN -> default EXP .)
    default         reduce using rule 59 (OPCOLUMN -> default EXP .)
    primary         reduce using rule 59 (OPCOLUMN -> default EXP .)
    references      reduce using rule 59 (OPCOLUMN -> default EXP .)
    null            reduce using rule 59 (OPCOLUMN -> default EXP .)
    parc            reduce using rule 59 (OPCOLUMN -> default EXP .)
    coma            reduce using rule 59 (OPCOLUMN -> default EXP .)
    mas             shift and go to state 69
    menos           shift and go to state 70
    multiplicacion  shift and go to state 71
    division        shift and go to state 72
    modulo          shift and go to state 73
    elevado         shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    mayor           shift and go to state 77
    menor           shift and go to state 78
    mayor_igual     shift and go to state 79
    menor_igual     shift and go to state 80
    igual           shift and go to state 81
    diferente1      shift and go to state 82
    diferente2      shift and go to state 83
    punto           shift and go to state 84
    between         shift and go to state 85
    in              shift and go to state 86
    not             shift and go to state 87
    is              shift and go to state 88
    isnull          shift and go to state 89
    notnull         shift and go to state 90

  ! not             [ reduce using rule 59 (OPCOLUMN -> default EXP .) ]


state 338

    (61) OPCOLUMN -> primary key .

    constraint      reduce using rule 61 (OPCOLUMN -> primary key .)
    default         reduce using rule 61 (OPCOLUMN -> primary key .)
    primary         reduce using rule 61 (OPCOLUMN -> primary key .)
    references      reduce using rule 61 (OPCOLUMN -> primary key .)
    not             reduce using rule 61 (OPCOLUMN -> primary key .)
    null            reduce using rule 61 (OPCOLUMN -> primary key .)
    parc            reduce using rule 61 (OPCOLUMN -> primary key .)
    coma            reduce using rule 61 (OPCOLUMN -> primary key .)


state 339

    (62) OPCOLUMN -> references id .

    constraint      reduce using rule 62 (OPCOLUMN -> references id .)
    default         reduce using rule 62 (OPCOLUMN -> references id .)
    primary         reduce using rule 62 (OPCOLUMN -> references id .)
    references      reduce using rule 62 (OPCOLUMN -> references id .)
    not             reduce using rule 62 (OPCOLUMN -> references id .)
    null            reduce using rule 62 (OPCOLUMN -> references id .)
    parc            reduce using rule 62 (OPCOLUMN -> references id .)
    coma            reduce using rule 62 (OPCOLUMN -> references id .)


state 340

    (103) TIPO -> decimal para LEXP . parc
    (98) LEXP -> LEXP . coma EXP

    parc            shift and go to state 369
    coma            shift and go to state 68


state 341

    (104) TIPO -> numeric para LEXP . parc
    (98) LEXP -> LEXP . coma EXP

    parc            shift and go to state 370
    coma            shift and go to state 68


state 342

    (108) TIPO -> character varying para . int parc

    int             shift and go to state 371


state 343

    (110) TIPO -> character para int . parc

    parc            shift and go to state 372


state 344

    (109) TIPO -> varchar para int . parc

    parc            shift and go to state 373


state 345

    (111) TIPO -> char para int . parc

    parc            shift and go to state 374


state 346

    (114) TIPO -> timestamp para int . parc

    parc            shift and go to state 375


state 347

    (117) TIPO -> time para int . parc

    parc            shift and go to state 376


state 348

    (119) TIPO -> interval para int . parc
    (121) TIPO -> interval para int . parc cadena

    parc            shift and go to state 377


state 349

    (48) CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .

    select          reduce using rule 48 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    create          reduce using rule 48 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    update          reduce using rule 48 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    delete          reduce using rule 48 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    alter           reduce using rule 48 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    drop            reduce using rule 48 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    insert          reduce using rule 48 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    case            reduce using rule 48 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    $end            reduce using rule 48 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)


state 350

    (69) HERENCIA -> inherits para . LEXP parc
    (98) LEXP -> . LEXP coma EXP
    (99) LEXP -> . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    LEXP                           shift and go to state 378
    EXP                            shift and go to state 35
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 351

    (65) OPCONST -> primary key para LEXP . parc
    (98) LEXP -> LEXP . coma EXP

    parc            shift and go to state 379
    coma            shift and go to state 68


state 352

    (66) OPCONST -> foreign key para LEXP . parc references table para LEXP parc
    (98) LEXP -> LEXP . coma EXP

    parc            shift and go to state 380
    coma            shift and go to state 68


state 353

    (67) OPCONST -> unique para LEXP parc .

    parc            reduce using rule 67 (OPCONST -> unique para LEXP parc .)
    coma            reduce using rule 67 (OPCONST -> unique para LEXP parc .)


state 354

    (68) OPCONST -> check para EXP parc .

    parc            reduce using rule 68 (OPCONST -> check para EXP parc .)
    coma            reduce using rule 68 (OPCONST -> check para EXP parc .)


state 355

    (70) CREATETYPE -> create type id as enum para LEXP parc .

    ptcoma          reduce using rule 70 (CREATETYPE -> create type id as enum para LEXP parc .)


state 356

    (30) OP -> alter column id set not . null

    null            shift and go to state 381


state 357

    (31) OP -> alter column id set null .

    ptcoma          reduce using rule 31 (OP -> alter column id set null .)


state 358

    (37) alc -> alter column id type TIPO .

    coma            reduce using rule 37 (alc -> alter column id type TIPO .)
    ptcoma          reduce using rule 37 (alc -> alter column id type TIPO .)


state 359

    (42) ADD -> check para LEXP parc .

    ptcoma          reduce using rule 42 (ADD -> check para LEXP parc .)


state 360

    (43) ADD -> constraint id unique para . id parc

    id              shift and go to state 382


state 361

    (44) ADD -> foreign key para id . parc references id para id parc

    parc            shift and go to state 383


state 362

    (45) LISTACOLUMN -> LISTACOLUMN coma id .

    coma            reduce using rule 45 (LISTACOLUMN -> LISTACOLUMN coma id .)
    ptcoma          reduce using rule 45 (LISTACOLUMN -> LISTACOLUMN coma id .)


state 363

    (37) alc -> alter column id . type TIPO

    type            shift and go to state 320


state 364

    (34) OP -> rename column id to id .

    ptcoma          reduce using rule 34 (OP -> rename column id to id .)


state 365

    (71) SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .

    ptcoma          reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    r_from          reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    mas             reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    menos           reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    multiplicacion  reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    division        reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    modulo          reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    elevado         reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    and             reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    or              reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    mayor           reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    menor           reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    mayor_igual     reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    menor_igual     reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    igual           reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    diferente1      reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    diferente2      reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    punto           reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    between         reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    in              reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    not             reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    is              reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    isnull          reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    notnull         reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    coma            reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    parc            reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    then            reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    as              reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    id              reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    where           reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    group           reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    having          reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    order           reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    end             reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    else            reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    when            reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    constraint      reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    default         reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    primary         reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    references      reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    null            reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    asc             reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)
    desc            reduce using rule 71 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER .)


state 366

    (87) ORDER -> order by . EXP ORD
    (88) ORDER -> order by . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 384
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 367

    (57) OPCOLUMN -> constraint id unique .

    constraint      reduce using rule 57 (OPCOLUMN -> constraint id unique .)
    default         reduce using rule 57 (OPCOLUMN -> constraint id unique .)
    primary         reduce using rule 57 (OPCOLUMN -> constraint id unique .)
    references      reduce using rule 57 (OPCOLUMN -> constraint id unique .)
    not             reduce using rule 57 (OPCOLUMN -> constraint id unique .)
    null            reduce using rule 57 (OPCOLUMN -> constraint id unique .)
    parc            reduce using rule 57 (OPCOLUMN -> constraint id unique .)
    coma            reduce using rule 57 (OPCOLUMN -> constraint id unique .)


state 368

    (58) OPCOLUMN -> constraint id check . para EXP parc

    para            shift and go to state 385


state 369

    (103) TIPO -> decimal para LEXP parc .

    constraint      reduce using rule 103 (TIPO -> decimal para LEXP parc .)
    default         reduce using rule 103 (TIPO -> decimal para LEXP parc .)
    primary         reduce using rule 103 (TIPO -> decimal para LEXP parc .)
    references      reduce using rule 103 (TIPO -> decimal para LEXP parc .)
    not             reduce using rule 103 (TIPO -> decimal para LEXP parc .)
    null            reduce using rule 103 (TIPO -> decimal para LEXP parc .)
    parc            reduce using rule 103 (TIPO -> decimal para LEXP parc .)
    coma            reduce using rule 103 (TIPO -> decimal para LEXP parc .)
    ptcoma          reduce using rule 103 (TIPO -> decimal para LEXP parc .)


state 370

    (104) TIPO -> numeric para LEXP parc .

    constraint      reduce using rule 104 (TIPO -> numeric para LEXP parc .)
    default         reduce using rule 104 (TIPO -> numeric para LEXP parc .)
    primary         reduce using rule 104 (TIPO -> numeric para LEXP parc .)
    references      reduce using rule 104 (TIPO -> numeric para LEXP parc .)
    not             reduce using rule 104 (TIPO -> numeric para LEXP parc .)
    null            reduce using rule 104 (TIPO -> numeric para LEXP parc .)
    parc            reduce using rule 104 (TIPO -> numeric para LEXP parc .)
    coma            reduce using rule 104 (TIPO -> numeric para LEXP parc .)
    ptcoma          reduce using rule 104 (TIPO -> numeric para LEXP parc .)


state 371

    (108) TIPO -> character varying para int . parc

    parc            shift and go to state 386


state 372

    (110) TIPO -> character para int parc .

    constraint      reduce using rule 110 (TIPO -> character para int parc .)
    default         reduce using rule 110 (TIPO -> character para int parc .)
    primary         reduce using rule 110 (TIPO -> character para int parc .)
    references      reduce using rule 110 (TIPO -> character para int parc .)
    not             reduce using rule 110 (TIPO -> character para int parc .)
    null            reduce using rule 110 (TIPO -> character para int parc .)
    parc            reduce using rule 110 (TIPO -> character para int parc .)
    coma            reduce using rule 110 (TIPO -> character para int parc .)
    ptcoma          reduce using rule 110 (TIPO -> character para int parc .)


state 373

    (109) TIPO -> varchar para int parc .

    constraint      reduce using rule 109 (TIPO -> varchar para int parc .)
    default         reduce using rule 109 (TIPO -> varchar para int parc .)
    primary         reduce using rule 109 (TIPO -> varchar para int parc .)
    references      reduce using rule 109 (TIPO -> varchar para int parc .)
    not             reduce using rule 109 (TIPO -> varchar para int parc .)
    null            reduce using rule 109 (TIPO -> varchar para int parc .)
    parc            reduce using rule 109 (TIPO -> varchar para int parc .)
    coma            reduce using rule 109 (TIPO -> varchar para int parc .)
    ptcoma          reduce using rule 109 (TIPO -> varchar para int parc .)


state 374

    (111) TIPO -> char para int parc .

    constraint      reduce using rule 111 (TIPO -> char para int parc .)
    default         reduce using rule 111 (TIPO -> char para int parc .)
    primary         reduce using rule 111 (TIPO -> char para int parc .)
    references      reduce using rule 111 (TIPO -> char para int parc .)
    not             reduce using rule 111 (TIPO -> char para int parc .)
    null            reduce using rule 111 (TIPO -> char para int parc .)
    parc            reduce using rule 111 (TIPO -> char para int parc .)
    coma            reduce using rule 111 (TIPO -> char para int parc .)
    ptcoma          reduce using rule 111 (TIPO -> char para int parc .)


state 375

    (114) TIPO -> timestamp para int parc .

    constraint      reduce using rule 114 (TIPO -> timestamp para int parc .)
    default         reduce using rule 114 (TIPO -> timestamp para int parc .)
    primary         reduce using rule 114 (TIPO -> timestamp para int parc .)
    references      reduce using rule 114 (TIPO -> timestamp para int parc .)
    not             reduce using rule 114 (TIPO -> timestamp para int parc .)
    null            reduce using rule 114 (TIPO -> timestamp para int parc .)
    parc            reduce using rule 114 (TIPO -> timestamp para int parc .)
    coma            reduce using rule 114 (TIPO -> timestamp para int parc .)
    ptcoma          reduce using rule 114 (TIPO -> timestamp para int parc .)


state 376

    (117) TIPO -> time para int parc .

    constraint      reduce using rule 117 (TIPO -> time para int parc .)
    default         reduce using rule 117 (TIPO -> time para int parc .)
    primary         reduce using rule 117 (TIPO -> time para int parc .)
    references      reduce using rule 117 (TIPO -> time para int parc .)
    not             reduce using rule 117 (TIPO -> time para int parc .)
    null            reduce using rule 117 (TIPO -> time para int parc .)
    parc            reduce using rule 117 (TIPO -> time para int parc .)
    coma            reduce using rule 117 (TIPO -> time para int parc .)
    ptcoma          reduce using rule 117 (TIPO -> time para int parc .)


state 377

    (119) TIPO -> interval para int parc .
    (121) TIPO -> interval para int parc . cadena

    constraint      reduce using rule 119 (TIPO -> interval para int parc .)
    default         reduce using rule 119 (TIPO -> interval para int parc .)
    primary         reduce using rule 119 (TIPO -> interval para int parc .)
    references      reduce using rule 119 (TIPO -> interval para int parc .)
    not             reduce using rule 119 (TIPO -> interval para int parc .)
    null            reduce using rule 119 (TIPO -> interval para int parc .)
    parc            reduce using rule 119 (TIPO -> interval para int parc .)
    coma            reduce using rule 119 (TIPO -> interval para int parc .)
    ptcoma          reduce using rule 119 (TIPO -> interval para int parc .)
    cadena          shift and go to state 387


state 378

    (69) HERENCIA -> inherits para LEXP . parc
    (98) LEXP -> LEXP . coma EXP

    parc            shift and go to state 388
    coma            shift and go to state 68


state 379

    (65) OPCONST -> primary key para LEXP parc .

    parc            reduce using rule 65 (OPCONST -> primary key para LEXP parc .)
    coma            reduce using rule 65 (OPCONST -> primary key para LEXP parc .)


state 380

    (66) OPCONST -> foreign key para LEXP parc . references table para LEXP parc

    references      shift and go to state 389


state 381

    (30) OP -> alter column id set not null .

    ptcoma          reduce using rule 30 (OP -> alter column id set not null .)


state 382

    (43) ADD -> constraint id unique para id . parc

    parc            shift and go to state 390


state 383

    (44) ADD -> foreign key para id parc . references id para id parc

    references      shift and go to state 391


state 384

    (87) ORDER -> order by EXP . ORD
    (88) ORDER -> order by EXP .
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown
    (90) ORD -> . asc
    (91) ORD -> . desc

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for punto resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for asc resolved as shift
  ! shift/reduce conflict for desc resolved as shift
    r_from          reduce using rule 88 (ORDER -> order by EXP .)
    ptcoma          reduce using rule 88 (ORDER -> order by EXP .)
    coma            reduce using rule 88 (ORDER -> order by EXP .)
    parc            reduce using rule 88 (ORDER -> order by EXP .)
    then            reduce using rule 88 (ORDER -> order by EXP .)
    as              reduce using rule 88 (ORDER -> order by EXP .)
    id              reduce using rule 88 (ORDER -> order by EXP .)
    where           reduce using rule 88 (ORDER -> order by EXP .)
    group           reduce using rule 88 (ORDER -> order by EXP .)
    having          reduce using rule 88 (ORDER -> order by EXP .)
    order           reduce using rule 88 (ORDER -> order by EXP .)
    end             reduce using rule 88 (ORDER -> order by EXP .)
    else            reduce using rule 88 (ORDER -> order by EXP .)
    when            reduce using rule 88 (ORDER -> order by EXP .)
    constraint      reduce using rule 88 (ORDER -> order by EXP .)
    default         reduce using rule 88 (ORDER -> order by EXP .)
    primary         reduce using rule 88 (ORDER -> order by EXP .)
    references      reduce using rule 88 (ORDER -> order by EXP .)
    null            reduce using rule 88 (ORDER -> order by EXP .)
    mas             shift and go to state 69
    menos           shift and go to state 70
    multiplicacion  shift and go to state 71
    division        shift and go to state 72
    modulo          shift and go to state 73
    elevado         shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    mayor           shift and go to state 77
    menor           shift and go to state 78
    mayor_igual     shift and go to state 79
    menor_igual     shift and go to state 80
    igual           shift and go to state 81
    diferente1      shift and go to state 82
    diferente2      shift and go to state 83
    punto           shift and go to state 84
    between         shift and go to state 85
    in              shift and go to state 86
    not             shift and go to state 87
    is              shift and go to state 88
    isnull          shift and go to state 89
    notnull         shift and go to state 90
    asc             shift and go to state 393
    desc            shift and go to state 394

  ! mas             [ reduce using rule 88 (ORDER -> order by EXP .) ]
  ! menos           [ reduce using rule 88 (ORDER -> order by EXP .) ]
  ! multiplicacion  [ reduce using rule 88 (ORDER -> order by EXP .) ]
  ! division        [ reduce using rule 88 (ORDER -> order by EXP .) ]
  ! modulo          [ reduce using rule 88 (ORDER -> order by EXP .) ]
  ! elevado         [ reduce using rule 88 (ORDER -> order by EXP .) ]
  ! and             [ reduce using rule 88 (ORDER -> order by EXP .) ]
  ! or              [ reduce using rule 88 (ORDER -> order by EXP .) ]
  ! mayor           [ reduce using rule 88 (ORDER -> order by EXP .) ]
  ! menor           [ reduce using rule 88 (ORDER -> order by EXP .) ]
  ! mayor_igual     [ reduce using rule 88 (ORDER -> order by EXP .) ]
  ! menor_igual     [ reduce using rule 88 (ORDER -> order by EXP .) ]
  ! igual           [ reduce using rule 88 (ORDER -> order by EXP .) ]
  ! diferente1      [ reduce using rule 88 (ORDER -> order by EXP .) ]
  ! diferente2      [ reduce using rule 88 (ORDER -> order by EXP .) ]
  ! punto           [ reduce using rule 88 (ORDER -> order by EXP .) ]
  ! between         [ reduce using rule 88 (ORDER -> order by EXP .) ]
  ! in              [ reduce using rule 88 (ORDER -> order by EXP .) ]
  ! not             [ reduce using rule 88 (ORDER -> order by EXP .) ]
  ! is              [ reduce using rule 88 (ORDER -> order by EXP .) ]
  ! isnull          [ reduce using rule 88 (ORDER -> order by EXP .) ]
  ! notnull         [ reduce using rule 88 (ORDER -> order by EXP .) ]
  ! asc             [ reduce using rule 88 (ORDER -> order by EXP .) ]
  ! desc            [ reduce using rule 88 (ORDER -> order by EXP .) ]

    ORD                            shift and go to state 392

state 385

    (58) OPCOLUMN -> constraint id check para . EXP parc
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    EXP                            shift and go to state 395
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 386

    (108) TIPO -> character varying para int parc .

    constraint      reduce using rule 108 (TIPO -> character varying para int parc .)
    default         reduce using rule 108 (TIPO -> character varying para int parc .)
    primary         reduce using rule 108 (TIPO -> character varying para int parc .)
    references      reduce using rule 108 (TIPO -> character varying para int parc .)
    not             reduce using rule 108 (TIPO -> character varying para int parc .)
    null            reduce using rule 108 (TIPO -> character varying para int parc .)
    parc            reduce using rule 108 (TIPO -> character varying para int parc .)
    coma            reduce using rule 108 (TIPO -> character varying para int parc .)
    ptcoma          reduce using rule 108 (TIPO -> character varying para int parc .)


state 387

    (121) TIPO -> interval para int parc cadena .

    constraint      reduce using rule 121 (TIPO -> interval para int parc cadena .)
    default         reduce using rule 121 (TIPO -> interval para int parc cadena .)
    primary         reduce using rule 121 (TIPO -> interval para int parc cadena .)
    references      reduce using rule 121 (TIPO -> interval para int parc cadena .)
    not             reduce using rule 121 (TIPO -> interval para int parc cadena .)
    null            reduce using rule 121 (TIPO -> interval para int parc cadena .)
    parc            reduce using rule 121 (TIPO -> interval para int parc cadena .)
    coma            reduce using rule 121 (TIPO -> interval para int parc cadena .)
    ptcoma          reduce using rule 121 (TIPO -> interval para int parc cadena .)


state 388

    (69) HERENCIA -> inherits para LEXP parc .

    ptcoma          reduce using rule 69 (HERENCIA -> inherits para LEXP parc .)


state 389

    (66) OPCONST -> foreign key para LEXP parc references . table para LEXP parc

    table           shift and go to state 396


state 390

    (43) ADD -> constraint id unique para id parc .

    ptcoma          reduce using rule 43 (ADD -> constraint id unique para id parc .)


state 391

    (44) ADD -> foreign key para id parc references . id para id parc

    id              shift and go to state 397


state 392

    (87) ORDER -> order by EXP ORD .

    r_from          reduce using rule 87 (ORDER -> order by EXP ORD .)
    ptcoma          reduce using rule 87 (ORDER -> order by EXP ORD .)
    mas             reduce using rule 87 (ORDER -> order by EXP ORD .)
    menos           reduce using rule 87 (ORDER -> order by EXP ORD .)
    multiplicacion  reduce using rule 87 (ORDER -> order by EXP ORD .)
    division        reduce using rule 87 (ORDER -> order by EXP ORD .)
    modulo          reduce using rule 87 (ORDER -> order by EXP ORD .)
    elevado         reduce using rule 87 (ORDER -> order by EXP ORD .)
    and             reduce using rule 87 (ORDER -> order by EXP ORD .)
    or              reduce using rule 87 (ORDER -> order by EXP ORD .)
    mayor           reduce using rule 87 (ORDER -> order by EXP ORD .)
    menor           reduce using rule 87 (ORDER -> order by EXP ORD .)
    mayor_igual     reduce using rule 87 (ORDER -> order by EXP ORD .)
    menor_igual     reduce using rule 87 (ORDER -> order by EXP ORD .)
    igual           reduce using rule 87 (ORDER -> order by EXP ORD .)
    diferente1      reduce using rule 87 (ORDER -> order by EXP ORD .)
    diferente2      reduce using rule 87 (ORDER -> order by EXP ORD .)
    punto           reduce using rule 87 (ORDER -> order by EXP ORD .)
    between         reduce using rule 87 (ORDER -> order by EXP ORD .)
    in              reduce using rule 87 (ORDER -> order by EXP ORD .)
    not             reduce using rule 87 (ORDER -> order by EXP ORD .)
    is              reduce using rule 87 (ORDER -> order by EXP ORD .)
    isnull          reduce using rule 87 (ORDER -> order by EXP ORD .)
    notnull         reduce using rule 87 (ORDER -> order by EXP ORD .)
    coma            reduce using rule 87 (ORDER -> order by EXP ORD .)
    parc            reduce using rule 87 (ORDER -> order by EXP ORD .)
    then            reduce using rule 87 (ORDER -> order by EXP ORD .)
    as              reduce using rule 87 (ORDER -> order by EXP ORD .)
    id              reduce using rule 87 (ORDER -> order by EXP ORD .)
    where           reduce using rule 87 (ORDER -> order by EXP ORD .)
    group           reduce using rule 87 (ORDER -> order by EXP ORD .)
    having          reduce using rule 87 (ORDER -> order by EXP ORD .)
    order           reduce using rule 87 (ORDER -> order by EXP ORD .)
    end             reduce using rule 87 (ORDER -> order by EXP ORD .)
    else            reduce using rule 87 (ORDER -> order by EXP ORD .)
    when            reduce using rule 87 (ORDER -> order by EXP ORD .)
    constraint      reduce using rule 87 (ORDER -> order by EXP ORD .)
    default         reduce using rule 87 (ORDER -> order by EXP ORD .)
    primary         reduce using rule 87 (ORDER -> order by EXP ORD .)
    references      reduce using rule 87 (ORDER -> order by EXP ORD .)
    null            reduce using rule 87 (ORDER -> order by EXP ORD .)
    asc             reduce using rule 87 (ORDER -> order by EXP ORD .)
    desc            reduce using rule 87 (ORDER -> order by EXP ORD .)


state 393

    (90) ORD -> asc .

    r_from          reduce using rule 90 (ORD -> asc .)
    ptcoma          reduce using rule 90 (ORD -> asc .)
    mas             reduce using rule 90 (ORD -> asc .)
    menos           reduce using rule 90 (ORD -> asc .)
    multiplicacion  reduce using rule 90 (ORD -> asc .)
    division        reduce using rule 90 (ORD -> asc .)
    modulo          reduce using rule 90 (ORD -> asc .)
    elevado         reduce using rule 90 (ORD -> asc .)
    and             reduce using rule 90 (ORD -> asc .)
    or              reduce using rule 90 (ORD -> asc .)
    mayor           reduce using rule 90 (ORD -> asc .)
    menor           reduce using rule 90 (ORD -> asc .)
    mayor_igual     reduce using rule 90 (ORD -> asc .)
    menor_igual     reduce using rule 90 (ORD -> asc .)
    igual           reduce using rule 90 (ORD -> asc .)
    diferente1      reduce using rule 90 (ORD -> asc .)
    diferente2      reduce using rule 90 (ORD -> asc .)
    punto           reduce using rule 90 (ORD -> asc .)
    between         reduce using rule 90 (ORD -> asc .)
    in              reduce using rule 90 (ORD -> asc .)
    not             reduce using rule 90 (ORD -> asc .)
    is              reduce using rule 90 (ORD -> asc .)
    isnull          reduce using rule 90 (ORD -> asc .)
    notnull         reduce using rule 90 (ORD -> asc .)
    coma            reduce using rule 90 (ORD -> asc .)
    parc            reduce using rule 90 (ORD -> asc .)
    then            reduce using rule 90 (ORD -> asc .)
    as              reduce using rule 90 (ORD -> asc .)
    id              reduce using rule 90 (ORD -> asc .)
    where           reduce using rule 90 (ORD -> asc .)
    group           reduce using rule 90 (ORD -> asc .)
    having          reduce using rule 90 (ORD -> asc .)
    order           reduce using rule 90 (ORD -> asc .)
    end             reduce using rule 90 (ORD -> asc .)
    else            reduce using rule 90 (ORD -> asc .)
    when            reduce using rule 90 (ORD -> asc .)
    constraint      reduce using rule 90 (ORD -> asc .)
    default         reduce using rule 90 (ORD -> asc .)
    primary         reduce using rule 90 (ORD -> asc .)
    references      reduce using rule 90 (ORD -> asc .)
    null            reduce using rule 90 (ORD -> asc .)
    asc             reduce using rule 90 (ORD -> asc .)
    desc            reduce using rule 90 (ORD -> asc .)


state 394

    (91) ORD -> desc .

    r_from          reduce using rule 91 (ORD -> desc .)
    ptcoma          reduce using rule 91 (ORD -> desc .)
    mas             reduce using rule 91 (ORD -> desc .)
    menos           reduce using rule 91 (ORD -> desc .)
    multiplicacion  reduce using rule 91 (ORD -> desc .)
    division        reduce using rule 91 (ORD -> desc .)
    modulo          reduce using rule 91 (ORD -> desc .)
    elevado         reduce using rule 91 (ORD -> desc .)
    and             reduce using rule 91 (ORD -> desc .)
    or              reduce using rule 91 (ORD -> desc .)
    mayor           reduce using rule 91 (ORD -> desc .)
    menor           reduce using rule 91 (ORD -> desc .)
    mayor_igual     reduce using rule 91 (ORD -> desc .)
    menor_igual     reduce using rule 91 (ORD -> desc .)
    igual           reduce using rule 91 (ORD -> desc .)
    diferente1      reduce using rule 91 (ORD -> desc .)
    diferente2      reduce using rule 91 (ORD -> desc .)
    punto           reduce using rule 91 (ORD -> desc .)
    between         reduce using rule 91 (ORD -> desc .)
    in              reduce using rule 91 (ORD -> desc .)
    not             reduce using rule 91 (ORD -> desc .)
    is              reduce using rule 91 (ORD -> desc .)
    isnull          reduce using rule 91 (ORD -> desc .)
    notnull         reduce using rule 91 (ORD -> desc .)
    coma            reduce using rule 91 (ORD -> desc .)
    parc            reduce using rule 91 (ORD -> desc .)
    then            reduce using rule 91 (ORD -> desc .)
    as              reduce using rule 91 (ORD -> desc .)
    id              reduce using rule 91 (ORD -> desc .)
    where           reduce using rule 91 (ORD -> desc .)
    group           reduce using rule 91 (ORD -> desc .)
    having          reduce using rule 91 (ORD -> desc .)
    order           reduce using rule 91 (ORD -> desc .)
    end             reduce using rule 91 (ORD -> desc .)
    else            reduce using rule 91 (ORD -> desc .)
    when            reduce using rule 91 (ORD -> desc .)
    constraint      reduce using rule 91 (ORD -> desc .)
    default         reduce using rule 91 (ORD -> desc .)
    primary         reduce using rule 91 (ORD -> desc .)
    references      reduce using rule 91 (ORD -> desc .)
    null            reduce using rule 91 (ORD -> desc .)
    asc             reduce using rule 91 (ORD -> desc .)
    desc            reduce using rule 91 (ORD -> desc .)


state 395

    (58) OPCOLUMN -> constraint id check para EXP . parc
    (129) EXP -> EXP . mas EXP
    (130) EXP -> EXP . menos EXP
    (131) EXP -> EXP . multiplicacion EXP
    (132) EXP -> EXP . division EXP
    (133) EXP -> EXP . modulo EXP
    (134) EXP -> EXP . elevado EXP
    (135) EXP -> EXP . and EXP
    (136) EXP -> EXP . or EXP
    (137) EXP -> EXP . mayor EXP
    (138) EXP -> EXP . menor EXP
    (139) EXP -> EXP . mayor_igual EXP
    (140) EXP -> EXP . menor_igual EXP
    (141) EXP -> EXP . igual EXP
    (142) EXP -> EXP . diferente1 EXP
    (143) EXP -> EXP . diferente2 EXP
    (144) EXP -> EXP . punto EXP
    (165) PREDICADOS -> EXP . between EXP
    (166) PREDICADOS -> EXP . in EXP
    (167) PREDICADOS -> EXP . not in EXP
    (168) PREDICADOS -> EXP . not between EXP
    (169) PREDICADOS -> EXP . between symetric EXP
    (170) PREDICADOS -> EXP . not between symetric EXP
    (171) PREDICADOS -> EXP . is distinct r_from EXP
    (172) PREDICADOS -> EXP . is not distinct r_from EXP
    (173) PREDICADOS -> EXP . is PNULL
    (174) PREDICADOS -> EXP . isnull
    (175) PREDICADOS -> EXP . notnull
    (176) PREDICADOS -> EXP . is true
    (177) PREDICADOS -> EXP . is not true
    (178) PREDICADOS -> EXP . is false
    (179) PREDICADOS -> EXP . is not false
    (180) PREDICADOS -> EXP . is unknown
    (181) PREDICADOS -> EXP . is not unknown

    parc            shift and go to state 398
    mas             shift and go to state 69
    menos           shift and go to state 70
    multiplicacion  shift and go to state 71
    division        shift and go to state 72
    modulo          shift and go to state 73
    elevado         shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    mayor           shift and go to state 77
    menor           shift and go to state 78
    mayor_igual     shift and go to state 79
    menor_igual     shift and go to state 80
    igual           shift and go to state 81
    diferente1      shift and go to state 82
    diferente2      shift and go to state 83
    punto           shift and go to state 84
    between         shift and go to state 85
    in              shift and go to state 86
    not             shift and go to state 87
    is              shift and go to state 88
    isnull          shift and go to state 89
    notnull         shift and go to state 90


state 396

    (66) OPCONST -> foreign key para LEXP parc references table . para LEXP parc

    para            shift and go to state 399


state 397

    (44) ADD -> foreign key para id parc references id . para id parc

    para            shift and go to state 400


state 398

    (58) OPCOLUMN -> constraint id check para EXP parc .

    constraint      reduce using rule 58 (OPCOLUMN -> constraint id check para EXP parc .)
    default         reduce using rule 58 (OPCOLUMN -> constraint id check para EXP parc .)
    primary         reduce using rule 58 (OPCOLUMN -> constraint id check para EXP parc .)
    references      reduce using rule 58 (OPCOLUMN -> constraint id check para EXP parc .)
    not             reduce using rule 58 (OPCOLUMN -> constraint id check para EXP parc .)
    null            reduce using rule 58 (OPCOLUMN -> constraint id check para EXP parc .)
    parc            reduce using rule 58 (OPCOLUMN -> constraint id check para EXP parc .)
    coma            reduce using rule 58 (OPCOLUMN -> constraint id check para EXP parc .)


state 399

    (66) OPCONST -> foreign key para LEXP parc references table para . LEXP parc
    (98) LEXP -> . LEXP coma EXP
    (99) LEXP -> . EXP
    (129) EXP -> . EXP mas EXP
    (130) EXP -> . EXP menos EXP
    (131) EXP -> . EXP multiplicacion EXP
    (132) EXP -> . EXP division EXP
    (133) EXP -> . EXP modulo EXP
    (134) EXP -> . EXP elevado EXP
    (135) EXP -> . EXP and EXP
    (136) EXP -> . EXP or EXP
    (137) EXP -> . EXP mayor EXP
    (138) EXP -> . EXP menor EXP
    (139) EXP -> . EXP mayor_igual EXP
    (140) EXP -> . EXP menor_igual EXP
    (141) EXP -> . EXP igual EXP
    (142) EXP -> . EXP diferente1 EXP
    (143) EXP -> . EXP diferente2 EXP
    (144) EXP -> . EXP punto EXP
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . para EXP parc
    (149) EXP -> . int
    (150) EXP -> . decimales
    (151) EXP -> . cadena
    (152) EXP -> . true
    (153) EXP -> . false
    (154) EXP -> . id
    (155) EXP -> . SELECT
    (156) EXP -> . PREDICADOS
    (157) EXP -> . id para parc
    (158) EXP -> . id para LEXP parc
    (159) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (160) EXP -> . current_time
    (161) EXP -> . current_date
    (162) EXP -> . timestamp cadena
    (163) EXP -> . interval cadena
    (164) EXP -> . CASE
    (71) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (72) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING ORDER
    (73) SELECT -> . select LSELECT
    (165) PREDICADOS -> . EXP between EXP
    (166) PREDICADOS -> . EXP in EXP
    (167) PREDICADOS -> . EXP not in EXP
    (168) PREDICADOS -> . EXP not between EXP
    (169) PREDICADOS -> . EXP between symetric EXP
    (170) PREDICADOS -> . EXP not between symetric EXP
    (171) PREDICADOS -> . EXP is distinct r_from EXP
    (172) PREDICADOS -> . EXP is not distinct r_from EXP
    (173) PREDICADOS -> . EXP is PNULL
    (174) PREDICADOS -> . EXP isnull
    (175) PREDICADOS -> . EXP notnull
    (176) PREDICADOS -> . EXP is true
    (177) PREDICADOS -> . EXP is not true
    (178) PREDICADOS -> . EXP is false
    (179) PREDICADOS -> . EXP is not false
    (180) PREDICADOS -> . EXP is unknown
    (181) PREDICADOS -> . EXP is not unknown
    (13) CASE -> . case LISTAWHEN ELSE end
    (14) CASE -> . case LISTAWHEN end

    mas             shift and go to state 36
    menos           shift and go to state 37
    not             shift and go to state 38
    para            shift and go to state 39
    int             shift and go to state 40
    decimales       shift and go to state 41
    cadena          shift and go to state 42
    true            shift and go to state 43
    false           shift and go to state 44
    id              shift and go to state 45
    extract         shift and go to state 48
    current_time    shift and go to state 50
    current_date    shift and go to state 51
    timestamp       shift and go to state 49
    interval        shift and go to state 52
    select          shift and go to state 13
    case            shift and go to state 21

    LEXP                           shift and go to state 401
    EXP                            shift and go to state 35
    SELECT                         shift and go to state 46
    PREDICADOS                     shift and go to state 47
    CASE                           shift and go to state 53

state 400

    (44) ADD -> foreign key para id parc references id para . id parc

    id              shift and go to state 402


state 401

    (66) OPCONST -> foreign key para LEXP parc references table para LEXP . parc
    (98) LEXP -> LEXP . coma EXP

    parc            shift and go to state 403
    coma            shift and go to state 68


state 402

    (44) ADD -> foreign key para id parc references id para id . parc

    parc            shift and go to state 404


state 403

    (66) OPCONST -> foreign key para LEXP parc references table para LEXP parc .

    parc            reduce using rule 66 (OPCONST -> foreign key para LEXP parc references table para LEXP parc .)
    coma            reduce using rule 66 (OPCONST -> foreign key para LEXP parc references table para LEXP parc .)


state 404

    (44) ADD -> foreign key para id parc references id para id parc .

    ptcoma          reduce using rule 44 (ADD -> foreign key para id parc references id para id parc .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for r_from in state 32 resolved as shift
WARNING: shift/reduce conflict for coma in state 33 resolved as shift
WARNING: shift/reduce conflict for mas in state 35 resolved as shift
WARNING: shift/reduce conflict for menos in state 35 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 35 resolved as shift
WARNING: shift/reduce conflict for division in state 35 resolved as shift
WARNING: shift/reduce conflict for modulo in state 35 resolved as shift
WARNING: shift/reduce conflict for elevado in state 35 resolved as shift
WARNING: shift/reduce conflict for and in state 35 resolved as shift
WARNING: shift/reduce conflict for or in state 35 resolved as shift
WARNING: shift/reduce conflict for mayor in state 35 resolved as shift
WARNING: shift/reduce conflict for menor in state 35 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 35 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 35 resolved as shift
WARNING: shift/reduce conflict for igual in state 35 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 35 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 35 resolved as shift
WARNING: shift/reduce conflict for punto in state 35 resolved as shift
WARNING: shift/reduce conflict for between in state 35 resolved as shift
WARNING: shift/reduce conflict for in in state 35 resolved as shift
WARNING: shift/reduce conflict for not in state 35 resolved as shift
WARNING: shift/reduce conflict for is in state 35 resolved as shift
WARNING: shift/reduce conflict for isnull in state 35 resolved as shift
WARNING: shift/reduce conflict for notnull in state 35 resolved as shift
WARNING: shift/reduce conflict for coma in state 115 resolved as shift
WARNING: shift/reduce conflict for where in state 115 resolved as shift
WARNING: shift/reduce conflict for as in state 117 resolved as shift
WARNING: shift/reduce conflict for id in state 117 resolved as shift
WARNING: shift/reduce conflict for mas in state 117 resolved as shift
WARNING: shift/reduce conflict for menos in state 117 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 117 resolved as shift
WARNING: shift/reduce conflict for division in state 117 resolved as shift
WARNING: shift/reduce conflict for modulo in state 117 resolved as shift
WARNING: shift/reduce conflict for elevado in state 117 resolved as shift
WARNING: shift/reduce conflict for and in state 117 resolved as shift
WARNING: shift/reduce conflict for or in state 117 resolved as shift
WARNING: shift/reduce conflict for mayor in state 117 resolved as shift
WARNING: shift/reduce conflict for menor in state 117 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 117 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 117 resolved as shift
WARNING: shift/reduce conflict for igual in state 117 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 117 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 117 resolved as shift
WARNING: shift/reduce conflict for punto in state 117 resolved as shift
WARNING: shift/reduce conflict for between in state 117 resolved as shift
WARNING: shift/reduce conflict for in in state 117 resolved as shift
WARNING: shift/reduce conflict for not in state 117 resolved as shift
WARNING: shift/reduce conflict for is in state 117 resolved as shift
WARNING: shift/reduce conflict for isnull in state 117 resolved as shift
WARNING: shift/reduce conflict for notnull in state 117 resolved as shift
WARNING: shift/reduce conflict for mas in state 118 resolved as shift
WARNING: shift/reduce conflict for menos in state 118 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 118 resolved as shift
WARNING: shift/reduce conflict for division in state 118 resolved as shift
WARNING: shift/reduce conflict for modulo in state 118 resolved as shift
WARNING: shift/reduce conflict for elevado in state 118 resolved as shift
WARNING: shift/reduce conflict for and in state 118 resolved as shift
WARNING: shift/reduce conflict for or in state 118 resolved as shift
WARNING: shift/reduce conflict for mayor in state 118 resolved as shift
WARNING: shift/reduce conflict for menor in state 118 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 118 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 118 resolved as shift
WARNING: shift/reduce conflict for igual in state 118 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 118 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 118 resolved as shift
WARNING: shift/reduce conflict for punto in state 118 resolved as shift
WARNING: shift/reduce conflict for between in state 118 resolved as shift
WARNING: shift/reduce conflict for in in state 118 resolved as shift
WARNING: shift/reduce conflict for not in state 118 resolved as shift
WARNING: shift/reduce conflict for is in state 118 resolved as shift
WARNING: shift/reduce conflict for isnull in state 118 resolved as shift
WARNING: shift/reduce conflict for notnull in state 118 resolved as shift
WARNING: shift/reduce conflict for coma in state 177 resolved as shift
WARNING: shift/reduce conflict for where in state 177 resolved as shift
WARNING: shift/reduce conflict for group in state 178 resolved as shift
WARNING: shift/reduce conflict for group in state 226 resolved as shift
WARNING: shift/reduce conflict for having in state 227 resolved as shift
WARNING: shift/reduce conflict for mas in state 230 resolved as shift
WARNING: shift/reduce conflict for menos in state 230 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 230 resolved as shift
WARNING: shift/reduce conflict for division in state 230 resolved as shift
WARNING: shift/reduce conflict for modulo in state 230 resolved as shift
WARNING: shift/reduce conflict for elevado in state 230 resolved as shift
WARNING: shift/reduce conflict for and in state 230 resolved as shift
WARNING: shift/reduce conflict for or in state 230 resolved as shift
WARNING: shift/reduce conflict for mayor in state 230 resolved as shift
WARNING: shift/reduce conflict for menor in state 230 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 230 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 230 resolved as shift
WARNING: shift/reduce conflict for igual in state 230 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 230 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 230 resolved as shift
WARNING: shift/reduce conflict for punto in state 230 resolved as shift
WARNING: shift/reduce conflict for between in state 230 resolved as shift
WARNING: shift/reduce conflict for in in state 230 resolved as shift
WARNING: shift/reduce conflict for not in state 230 resolved as shift
WARNING: shift/reduce conflict for is in state 230 resolved as shift
WARNING: shift/reduce conflict for isnull in state 230 resolved as shift
WARNING: shift/reduce conflict for notnull in state 230 resolved as shift
WARNING: shift/reduce conflict for having in state 283 resolved as shift
WARNING: shift/reduce conflict for order in state 284 resolved as shift
WARNING: shift/reduce conflict for order in state 329 resolved as shift
WARNING: shift/reduce conflict for mas in state 332 resolved as shift
WARNING: shift/reduce conflict for menos in state 332 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 332 resolved as shift
WARNING: shift/reduce conflict for division in state 332 resolved as shift
WARNING: shift/reduce conflict for modulo in state 332 resolved as shift
WARNING: shift/reduce conflict for elevado in state 332 resolved as shift
WARNING: shift/reduce conflict for and in state 332 resolved as shift
WARNING: shift/reduce conflict for or in state 332 resolved as shift
WARNING: shift/reduce conflict for mayor in state 332 resolved as shift
WARNING: shift/reduce conflict for menor in state 332 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 332 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 332 resolved as shift
WARNING: shift/reduce conflict for igual in state 332 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 332 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 332 resolved as shift
WARNING: shift/reduce conflict for punto in state 332 resolved as shift
WARNING: shift/reduce conflict for between in state 332 resolved as shift
WARNING: shift/reduce conflict for in in state 332 resolved as shift
WARNING: shift/reduce conflict for not in state 332 resolved as shift
WARNING: shift/reduce conflict for is in state 332 resolved as shift
WARNING: shift/reduce conflict for isnull in state 332 resolved as shift
WARNING: shift/reduce conflict for notnull in state 332 resolved as shift
WARNING: shift/reduce conflict for mas in state 333 resolved as shift
WARNING: shift/reduce conflict for menos in state 333 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 333 resolved as shift
WARNING: shift/reduce conflict for division in state 333 resolved as shift
WARNING: shift/reduce conflict for modulo in state 333 resolved as shift
WARNING: shift/reduce conflict for elevado in state 333 resolved as shift
WARNING: shift/reduce conflict for and in state 333 resolved as shift
WARNING: shift/reduce conflict for or in state 333 resolved as shift
WARNING: shift/reduce conflict for mayor in state 333 resolved as shift
WARNING: shift/reduce conflict for menor in state 333 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 333 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 333 resolved as shift
WARNING: shift/reduce conflict for igual in state 333 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 333 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 333 resolved as shift
WARNING: shift/reduce conflict for punto in state 333 resolved as shift
WARNING: shift/reduce conflict for between in state 333 resolved as shift
WARNING: shift/reduce conflict for in in state 333 resolved as shift
WARNING: shift/reduce conflict for not in state 333 resolved as shift
WARNING: shift/reduce conflict for is in state 333 resolved as shift
WARNING: shift/reduce conflict for isnull in state 333 resolved as shift
WARNING: shift/reduce conflict for notnull in state 333 resolved as shift
WARNING: shift/reduce conflict for not in state 337 resolved as shift
WARNING: shift/reduce conflict for mas in state 384 resolved as shift
WARNING: shift/reduce conflict for menos in state 384 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 384 resolved as shift
WARNING: shift/reduce conflict for division in state 384 resolved as shift
WARNING: shift/reduce conflict for modulo in state 384 resolved as shift
WARNING: shift/reduce conflict for elevado in state 384 resolved as shift
WARNING: shift/reduce conflict for and in state 384 resolved as shift
WARNING: shift/reduce conflict for or in state 384 resolved as shift
WARNING: shift/reduce conflict for mayor in state 384 resolved as shift
WARNING: shift/reduce conflict for menor in state 384 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 384 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 384 resolved as shift
WARNING: shift/reduce conflict for igual in state 384 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 384 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 384 resolved as shift
WARNING: shift/reduce conflict for punto in state 384 resolved as shift
WARNING: shift/reduce conflict for between in state 384 resolved as shift
WARNING: shift/reduce conflict for in in state 384 resolved as shift
WARNING: shift/reduce conflict for not in state 384 resolved as shift
WARNING: shift/reduce conflict for is in state 384 resolved as shift
WARNING: shift/reduce conflict for isnull in state 384 resolved as shift
WARNING: shift/reduce conflict for notnull in state 384 resolved as shift
WARNING: shift/reduce conflict for asc in state 384 resolved as shift
WARNING: shift/reduce conflict for desc in state 384 resolved as shift
