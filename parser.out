Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> SELECT ptcoma
Rule 5     instruccion -> CREATETABLE
Rule 6     instruccion -> UPDATE ptcoma
Rule 7     instruccion -> DELETE ptcoma
Rule 8     instruccion -> ALTER ptcoma
Rule 9     instruccion -> DROP ptcoma
Rule 10    instruccion -> INSERT ptcoma
Rule 11    instruccion -> CREATETYPE ptcoma
Rule 12    instruccion -> CASE
Rule 13    instruccion -> CREATEDB ptcoma
Rule 14    instruccion -> SHOWDB ptcoma
Rule 15    instruccion -> use id ptcoma
Rule 16    CASE -> case LISTAWHEN ELSE end
Rule 17    CASE -> case LISTAWHEN end
Rule 18    LISTAWHEN -> LISTAWHEN WHEN
Rule 19    LISTAWHEN -> WHEN
Rule 20    WHEN -> when LEXP then LEXP
Rule 21    ELSE -> else LEXP
Rule 22    INSERT -> insert into id values para LEXP parc
Rule 23    INSERT -> insert into id para LEXP parc values para LEXP parc
Rule 24    DROP -> drop table id
Rule 25    DROP -> drop databases if exist id
Rule 26    DROP -> drop databases id
Rule 27    ALTER -> alter databases id RO
Rule 28    ALTER -> altertable
Rule 29    RO -> rename to id
Rule 30    RO -> owner to id
Rule 31    altertable -> alter table id OP
Rule 32    OP -> add ADD
Rule 33    OP -> drop column ALTERDROP
Rule 34    OP -> alter column id set not null
Rule 35    OP -> alter column id set null
Rule 36    OP -> listaalc
Rule 37    OP -> drop ALTERDROP
Rule 38    OP -> rename column id to id
Rule 39    listaalc -> listaalc coma alc
Rule 40    listaalc -> alc
Rule 41    alc -> alter column id type TIPO
Rule 42    ALTERDROP -> constraint id
Rule 43    ALTERDROP -> column LEXP
Rule 44    ALTERDROP -> check id
Rule 45    ADD -> column id TIPO
Rule 46    ADD -> check para LEXP parc
Rule 47    ADD -> constraint id unique para id parc
Rule 48    ADD -> foreign key para LEXP parc references id para LEXP parc
Rule 49    ADD -> constraint id foreign key para LEXP parc references id para LEXP parc
Rule 50    SHOWDB -> show dbs
Rule 51    CREATEDB -> create RD if not exist id
Rule 52    CREATEDB -> create RD if not exist id OPCCDB
Rule 53    CREATEDB -> create RD id
Rule 54    CREATEDB -> create RD id OPCCDB
Rule 55    OPCCDB -> PROPIETARIO
Rule 56    OPCCDB -> MODO
Rule 57    OPCCDB -> PROPIETARIO MODO
Rule 58    RD -> or replace databases
Rule 59    RD -> databases
Rule 60    PROPIETARIO -> owner igual id
Rule 61    PROPIETARIO -> owner id
Rule 62    PROPIETARIO -> owner igual cadena
Rule 63    PROPIETARIO -> owner cadena
Rule 64    PROPIETARIO -> owner igual cadenaString
Rule 65    PROPIETARIO -> owner cadenaString
Rule 66    MODO -> mode igual int
Rule 67    MODO -> mode int
Rule 68    CREATETABLE -> create table id para LDEF parc ptcoma
Rule 69    CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma
Rule 70    LDEF -> LDEF coma COLDEF
Rule 71    LDEF -> COLDEF
Rule 72    COLDEF -> OPCONST
Rule 73    COLDEF -> constraint id OPCONST
Rule 74    COLDEF -> id TIPO
Rule 75    COLDEF -> id TIPO LOPCOLUMN
Rule 76    COLDEF -> id id
Rule 77    COLDEF -> id id LOPCOLUMN
Rule 78    LOPCOLUMN -> LOPCOLUMN OPCOLUMN
Rule 79    LOPCOLUMN -> OPCOLUMN
Rule 80    OPCOLUMN -> constraint id unique
Rule 81    OPCOLUMN -> unique
Rule 82    OPCOLUMN -> constraint id check para EXP parc
Rule 83    OPCOLUMN -> check para EXP parc
Rule 84    OPCOLUMN -> default EXP
Rule 85    OPCOLUMN -> not null
Rule 86    OPCOLUMN -> null
Rule 87    OPCOLUMN -> primary key
Rule 88    OPCOLUMN -> references id
Rule 89    OPCONST -> primary key para LEXP parc
Rule 90    OPCONST -> foreign key para LEXP parc references id para LEXP parc
Rule 91    OPCONST -> unique para LEXP parc
Rule 92    OPCONST -> check para LEXP parc
Rule 93    HERENCIA -> inherits para LEXP parc
Rule 94    CREATETYPE -> create type id as enum para LEXP parc
Rule 95    SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
Rule 96    SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
Rule 97    SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
Rule 98    LIMIT -> limit int
Rule 99    LIMIT -> limit all
Rule 100   LIMIT -> offset int
Rule 101   LIMIT -> limit int offset int
Rule 102   LIMIT -> offset int limit int
Rule 103   LIMIT -> limit all offset int
Rule 104   LIMIT -> offset int limit all
Rule 105   LIMIT -> <empty>
Rule 106   WHERE -> where LEXP
Rule 107   WHERE -> where EXIST
Rule 108   WHERE -> union LEXP
Rule 109   WHERE -> union all LEXP
Rule 110   WHERE -> <empty>
Rule 111   COMBINING -> union LEXP
Rule 112   COMBINING -> union all LEXP
Rule 113   COMBINING -> intersect LEXP
Rule 114   COMBINING -> intersect all LEXP
Rule 115   COMBINING -> except LEXP
Rule 116   COMBINING -> except all LEXP
Rule 117   COMBINING -> <empty>
Rule 118   GROUP -> group by LEXP
Rule 119   GROUP -> <empty>
Rule 120   HAVING -> having LEXP
Rule 121   HAVING -> <empty>
Rule 122   ORDER -> order by LEXP ORD
Rule 123   ORDER -> order by LEXP
Rule 124   ORDER -> <empty>
Rule 125   ORD -> asc
Rule 126   ORD -> desc
Rule 127   UPDATE -> update id set LCAMPOS where LEXP
Rule 128   LCAMPOS -> LCAMPOS id igual EXP
Rule 129   LCAMPOS -> id igual EXP
Rule 130   DELETE -> delete r_from id where LEXP
Rule 131   DELETE -> delete r_from id
Rule 132   EXIST -> exist para SELECT parc
Rule 133   EXIST -> not exist para SELECT parc
Rule 134   LEXP -> LEXP coma EXP
Rule 135   LEXP -> EXP
Rule 136   TIPO -> interval cadena
Rule 137   TIPO -> decimal para int coma int parc
Rule 138   TIPO -> decimal para int parc
Rule 139   TIPO -> decimal
Rule 140   TIPO -> numeric para int coma int parc
Rule 141   TIPO -> numeric para int parc
Rule 142   TIPO -> numeric
Rule 143   TIPO -> varchar para int parc
Rule 144   TIPO -> timestamp para int parc
Rule 145   TIPO -> character para int parc
Rule 146   TIPO -> interval para int parc
Rule 147   TIPO -> char para int parc
Rule 148   TIPO -> time para int parc
Rule 149   TIPO -> character varying para int parc
Rule 150   TIPO -> timestamp para int parc without time zone
Rule 151   TIPO -> timestamp para int parc with time zone
Rule 152   TIPO -> time para int parc without time zone
Rule 153   TIPO -> time para int parc with time zone
Rule 154   TIPO -> interval para int parc cadena
Rule 155   TIPO -> smallint
Rule 156   TIPO -> integer
Rule 157   TIPO -> bigint
Rule 158   TIPO -> real
Rule 159   TIPO -> double precision
Rule 160   TIPO -> money
Rule 161   TIPO -> text
Rule 162   TIPO -> timestamp
Rule 163   TIPO -> date
Rule 164   TIPO -> time
Rule 165   TIPO -> interval
Rule 166   TIPO -> boolean
Rule 167   TIPO -> timestamp without time zone
Rule 168   TIPO -> timestamp with time zone
Rule 169   TIPO -> time without time zone
Rule 170   TIPO -> time with time zone
Rule 171   FIELDS -> year
Rule 172   FIELDS -> month
Rule 173   FIELDS -> day
Rule 174   FIELDS -> hour
Rule 175   FIELDS -> minute
Rule 176   FIELDS -> second
Rule 177   EXP -> EXP mas EXP
Rule 178   EXP -> EXP menos EXP
Rule 179   EXP -> EXP multiplicacion EXP
Rule 180   EXP -> EXP division EXP
Rule 181   EXP -> EXP modulo EXP
Rule 182   EXP -> EXP elevado EXP
Rule 183   EXP -> EXP and EXP
Rule 184   EXP -> EXP or EXP
Rule 185   EXP -> EXP mayor EXP
Rule 186   EXP -> EXP menor EXP
Rule 187   EXP -> EXP mayor_igual EXP
Rule 188   EXP -> EXP menor_igual EXP
Rule 189   EXP -> EXP igual EXP
Rule 190   EXP -> EXP diferente1 EXP
Rule 191   EXP -> EXP diferente2 EXP
Rule 192   EXP -> EXP punto EXP
Rule 193   EXP -> EXP between EXP
Rule 194   EXP -> EXP is not null
Rule 195   EXP -> EXP is null
Rule 196   EXP -> EXP isnull
Rule 197   EXP -> EXP notnull
Rule 198   EXP -> EXP is true
Rule 199   EXP -> EXP is not true
Rule 200   EXP -> EXP is false
Rule 201   EXP -> EXP is not false
Rule 202   EXP -> EXP is unknown
Rule 203   EXP -> EXP is not unknown
Rule 204   EXP -> EXP as cadenaString
Rule 205   EXP -> EXP cadenaString
Rule 206   EXP -> EXP as id
Rule 207   EXP -> EXP id
Rule 208   EXP -> EXP as cadena
Rule 209   EXP -> EXP cadena
Rule 210   EXP -> mas EXP
Rule 211   EXP -> menos EXP
Rule 212   EXP -> not EXP
Rule 213   EXP -> EXP in para EXP parc
Rule 214   EXP -> EXP not in para EXP parc
Rule 215   EXP -> EXP not between EXP
Rule 216   EXP -> EXP between symetric EXP
Rule 217   EXP -> EXP not between symetric EXP
Rule 218   EXP -> EXP is distinct r_from EXP
Rule 219   EXP -> EXP is not distinct r_from EXP
Rule 220   EXP -> EXP like cadena
Rule 221   EXP -> EXP not like cadena
Rule 222   EXP -> SELECT
Rule 223   EXP -> CASE
Rule 224   EXP -> para EXP parc
Rule 225   EXP -> id para LEXP parc
Rule 226   EXP -> id para parc
Rule 227   EXP -> any para LEXP parc
Rule 228   EXP -> all para LEXP parc
Rule 229   EXP -> some para LEXP parc
Rule 230   EXP -> extract para FIELDS r_from timestamp cadena parc
Rule 231   EXP -> int
Rule 232   EXP -> decimales
Rule 233   EXP -> cadena
Rule 234   EXP -> cadenaString
Rule 235   EXP -> true
Rule 236   EXP -> false
Rule 237   EXP -> id
Rule 238   EXP -> multiplicacion
Rule 239   EXP -> null
Rule 240   EXP -> current_time
Rule 241   EXP -> current_date
Rule 242   EXP -> timestamp cadena
Rule 243   EXP -> interval cadena
Rule 244   EXP -> default

Terminals, with rules where they appear

add                  : 32
all                  : 99 103 104 109 112 114 116 228
alter                : 27 31 34 35 41
and                  : 183
any                  : 227
as                   : 94 204 206 208
asc                  : 125
between              : 193 215 216 217
bigint               : 157
boolean              : 166
by                   : 118 122 123
cadena               : 62 63 136 154 208 209 220 221 230 233 242 243
cadenaString         : 64 65 204 205 234
case                 : 16 17
char                 : 147
character            : 145 149
check                : 44 46 82 83 92
column               : 33 34 35 38 41 43 45
coma                 : 39 70 134 137 140
constraint           : 42 47 49 73 80 82
create               : 51 52 53 54 68 69 94
current_date         : 241
current_time         : 240
databases            : 25 26 27 58 59
date                 : 163
day                  : 173
dbs                  : 50
decimal              : 137 138 139
decimales            : 232
default              : 84 244
delete               : 130 131
desc                 : 126
diferente1           : 190
diferente2           : 191
distinct             : 95 218 219
division             : 180
double               : 159
drop                 : 24 25 26 33 37
elevado              : 182
else                 : 21
end                  : 16 17
enum                 : 94
error                : 
except               : 115 116
exist                : 25 51 52 132 133
extract              : 230
false                : 200 201 236
foreign              : 48 49 90
group                : 118
having               : 120
hour                 : 174
id                   : 15 22 23 24 25 26 27 29 30 31 34 35 38 38 41 42 44 45 47 47 48 49 49 51 52 53 54 60 61 68 69 73 74 75 76 76 77 77 80 82 88 90 94 127 128 129 130 131 206 207 225 226 237
if                   : 25 51 52
igual                : 60 62 64 66 128 129 189
in                   : 213 214
inherits             : 93
insert               : 22 23
int                  : 66 67 98 100 101 101 102 102 103 104 137 137 138 140 140 141 143 144 145 146 147 148 149 150 151 152 153 154 231
integer              : 156
intersect            : 113 114
interval             : 136 146 154 165 243
into                 : 22 23
is                   : 194 195 198 199 200 201 202 203 218 219
isnull               : 196
key                  : 48 49 87 89 90
like                 : 220 221
limit                : 98 99 101 102 103 104
mas                  : 177 210
mayor                : 185
mayor_igual          : 187
menor                : 186
menor_igual          : 188
menos                : 178 211
minute               : 175
mode                 : 66 67
modulo               : 181
money                : 160
month                : 172
multiplicacion       : 179 238
not                  : 34 51 52 85 133 194 199 201 203 212 214 215 217 219 221
notnull              : 197
null                 : 34 35 85 86 194 195 239
numeric              : 140 141 142
offset               : 100 101 102 103 104
or                   : 58 184
order                : 122 123
owner                : 30 60 61 62 63 64 65
para                 : 22 23 23 46 47 48 48 49 49 68 69 82 83 89 90 90 91 92 93 94 132 133 137 138 140 141 143 144 145 146 147 148 149 150 151 152 153 154 213 214 224 225 226 227 228 229 230
parc                 : 22 23 23 46 47 48 48 49 49 68 69 82 83 89 90 90 91 92 93 94 132 133 137 138 140 141 143 144 145 146 147 148 149 150 151 152 153 154 213 214 224 225 226 227 228 229 230
precision            : 159
primary              : 87 89
ptcoma               : 4 6 7 8 9 10 11 13 14 15 68 69
punto                : 192
r_from               : 95 96 130 131 218 219 230
real                 : 158
references           : 48 49 88 90
rename               : 29 38
replace              : 58
second               : 176
select               : 95 96 97
set                  : 34 35 127
show                 : 50
smallint             : 155
some                 : 229
symetric             : 216 217
table                : 24 31 68 69
text                 : 161
then                 : 20
time                 : 148 150 151 152 152 153 153 164 167 168 169 169 170 170
timestamp            : 144 150 151 162 167 168 230 242
to                   : 29 30 38
true                 : 198 199 235
type                 : 41 94
union                : 108 109 111 112
unique               : 47 80 81 91
unknown              : 202 203
update               : 127
use                  : 15
values               : 22 23
varchar              : 143
varying              : 149
when                 : 20
where                : 106 107 127 130
with                 : 151 153 168 170
without              : 150 152 167 169
year                 : 171
zone                 : 150 151 152 153 167 168 169 170

Nonterminals, with rules where they appear

ADD                  : 32
ALTER                : 8
ALTERDROP            : 33 37
CASE                 : 12 223
COLDEF               : 70 71
COMBINING            : 95 96 97
CREATEDB             : 13
CREATETABLE          : 5
CREATETYPE           : 11
DELETE               : 7
DROP                 : 9
ELSE                 : 16
EXIST                : 107
EXP                  : 82 83 84 128 129 134 135 177 177 178 178 179 179 180 180 181 181 182 182 183 183 184 184 185 185 186 186 187 187 188 188 189 189 190 190 191 191 192 192 193 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 213 214 214 215 215 216 216 217 217 218 218 219 219 220 221 224
FIELDS               : 230
GROUP                : 95 96 97
HAVING               : 95 96 97
HERENCIA             : 69
INSERT               : 10
LCAMPOS              : 127 128
LDEF                 : 68 69 70
LEXP                 : 20 20 21 22 23 23 43 46 48 48 49 49 89 90 90 91 92 93 94 95 95 96 96 97 106 108 109 111 112 113 114 115 116 118 120 122 123 127 130 134 225 227 228 229
LIMIT                : 95 96 97
LISTAWHEN            : 16 17 18
LOPCOLUMN            : 75 77 78
MODO                 : 56 57
OP                   : 31
OPCCDB               : 52 54
OPCOLUMN             : 78 79
OPCONST              : 72 73
ORD                  : 122
ORDER                : 95 96 97
PROPIETARIO          : 55 57
RD                   : 51 52 53 54
RO                   : 27
SELECT               : 4 132 133 222
SHOWDB               : 14
TIPO                 : 41 45 74 75
UPDATE               : 6
WHEN                 : 18 19
WHERE                : 95 96 97
alc                  : 39 40
altertable           : 28
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2
listaalc             : 36 39

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . SELECT ptcoma
    (5) instruccion -> . CREATETABLE
    (6) instruccion -> . UPDATE ptcoma
    (7) instruccion -> . DELETE ptcoma
    (8) instruccion -> . ALTER ptcoma
    (9) instruccion -> . DROP ptcoma
    (10) instruccion -> . INSERT ptcoma
    (11) instruccion -> . CREATETYPE ptcoma
    (12) instruccion -> . CASE
    (13) instruccion -> . CREATEDB ptcoma
    (14) instruccion -> . SHOWDB ptcoma
    (15) instruccion -> . use id ptcoma
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (68) CREATETABLE -> . create table id para LDEF parc ptcoma
    (69) CREATETABLE -> . create table id para LDEF parc HERENCIA ptcoma
    (127) UPDATE -> . update id set LCAMPOS where LEXP
    (130) DELETE -> . delete r_from id where LEXP
    (131) DELETE -> . delete r_from id
    (27) ALTER -> . alter databases id RO
    (28) ALTER -> . altertable
    (24) DROP -> . drop table id
    (25) DROP -> . drop databases if exist id
    (26) DROP -> . drop databases id
    (22) INSERT -> . insert into id values para LEXP parc
    (23) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (94) CREATETYPE -> . create type id as enum para LEXP parc
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end
    (51) CREATEDB -> . create RD if not exist id
    (52) CREATEDB -> . create RD if not exist id OPCCDB
    (53) CREATEDB -> . create RD id
    (54) CREATEDB -> . create RD id OPCCDB
    (50) SHOWDB -> . show dbs
    (31) altertable -> . alter table id OP

    use             shift and go to state 15
    select          shift and go to state 16
    create          shift and go to state 17
    update          shift and go to state 18
    delete          shift and go to state 19
    alter           shift and go to state 20
    drop            shift and go to state 22
    insert          shift and go to state 23
    case            shift and go to state 24
    show            shift and go to state 25

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    SELECT                         shift and go to state 4
    CREATETABLE                    shift and go to state 5
    UPDATE                         shift and go to state 6
    DELETE                         shift and go to state 7
    ALTER                          shift and go to state 8
    DROP                           shift and go to state 9
    INSERT                         shift and go to state 10
    CREATETYPE                     shift and go to state 11
    CASE                           shift and go to state 12
    CREATEDB                       shift and go to state 13
    SHOWDB                         shift and go to state 14
    altertable                     shift and go to state 21

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . SELECT ptcoma
    (5) instruccion -> . CREATETABLE
    (6) instruccion -> . UPDATE ptcoma
    (7) instruccion -> . DELETE ptcoma
    (8) instruccion -> . ALTER ptcoma
    (9) instruccion -> . DROP ptcoma
    (10) instruccion -> . INSERT ptcoma
    (11) instruccion -> . CREATETYPE ptcoma
    (12) instruccion -> . CASE
    (13) instruccion -> . CREATEDB ptcoma
    (14) instruccion -> . SHOWDB ptcoma
    (15) instruccion -> . use id ptcoma
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (68) CREATETABLE -> . create table id para LDEF parc ptcoma
    (69) CREATETABLE -> . create table id para LDEF parc HERENCIA ptcoma
    (127) UPDATE -> . update id set LCAMPOS where LEXP
    (130) DELETE -> . delete r_from id where LEXP
    (131) DELETE -> . delete r_from id
    (27) ALTER -> . alter databases id RO
    (28) ALTER -> . altertable
    (24) DROP -> . drop table id
    (25) DROP -> . drop databases if exist id
    (26) DROP -> . drop databases id
    (22) INSERT -> . insert into id values para LEXP parc
    (23) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (94) CREATETYPE -> . create type id as enum para LEXP parc
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end
    (51) CREATEDB -> . create RD if not exist id
    (52) CREATEDB -> . create RD if not exist id OPCCDB
    (53) CREATEDB -> . create RD id
    (54) CREATEDB -> . create RD id OPCCDB
    (50) SHOWDB -> . show dbs
    (31) altertable -> . alter table id OP

    $end            reduce using rule 1 (init -> instrucciones .)
    use             shift and go to state 15
    select          shift and go to state 16
    create          shift and go to state 17
    update          shift and go to state 18
    delete          shift and go to state 19
    alter           shift and go to state 20
    drop            shift and go to state 22
    insert          shift and go to state 23
    case            shift and go to state 24
    show            shift and go to state 25

    instruccion                    shift and go to state 26
    SELECT                         shift and go to state 4
    CREATETABLE                    shift and go to state 5
    UPDATE                         shift and go to state 6
    DELETE                         shift and go to state 7
    ALTER                          shift and go to state 8
    DROP                           shift and go to state 9
    INSERT                         shift and go to state 10
    CREATETYPE                     shift and go to state 11
    CASE                           shift and go to state 12
    CREATEDB                       shift and go to state 13
    SHOWDB                         shift and go to state 14
    altertable                     shift and go to state 21

state 3

    (3) instrucciones -> instruccion .

    use             reduce using rule 3 (instrucciones -> instruccion .)
    select          reduce using rule 3 (instrucciones -> instruccion .)
    create          reduce using rule 3 (instrucciones -> instruccion .)
    update          reduce using rule 3 (instrucciones -> instruccion .)
    delete          reduce using rule 3 (instrucciones -> instruccion .)
    alter           reduce using rule 3 (instrucciones -> instruccion .)
    drop            reduce using rule 3 (instrucciones -> instruccion .)
    insert          reduce using rule 3 (instrucciones -> instruccion .)
    case            reduce using rule 3 (instrucciones -> instruccion .)
    show            reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> SELECT . ptcoma

    ptcoma          shift and go to state 27


state 5

    (5) instruccion -> CREATETABLE .

    use             reduce using rule 5 (instruccion -> CREATETABLE .)
    select          reduce using rule 5 (instruccion -> CREATETABLE .)
    create          reduce using rule 5 (instruccion -> CREATETABLE .)
    update          reduce using rule 5 (instruccion -> CREATETABLE .)
    delete          reduce using rule 5 (instruccion -> CREATETABLE .)
    alter           reduce using rule 5 (instruccion -> CREATETABLE .)
    drop            reduce using rule 5 (instruccion -> CREATETABLE .)
    insert          reduce using rule 5 (instruccion -> CREATETABLE .)
    case            reduce using rule 5 (instruccion -> CREATETABLE .)
    show            reduce using rule 5 (instruccion -> CREATETABLE .)
    $end            reduce using rule 5 (instruccion -> CREATETABLE .)


state 6

    (6) instruccion -> UPDATE . ptcoma

    ptcoma          shift and go to state 28


state 7

    (7) instruccion -> DELETE . ptcoma

    ptcoma          shift and go to state 29


state 8

    (8) instruccion -> ALTER . ptcoma

    ptcoma          shift and go to state 30


state 9

    (9) instruccion -> DROP . ptcoma

    ptcoma          shift and go to state 31


state 10

    (10) instruccion -> INSERT . ptcoma

    ptcoma          shift and go to state 32


state 11

    (11) instruccion -> CREATETYPE . ptcoma

    ptcoma          shift and go to state 33


state 12

    (12) instruccion -> CASE .

    use             reduce using rule 12 (instruccion -> CASE .)
    select          reduce using rule 12 (instruccion -> CASE .)
    create          reduce using rule 12 (instruccion -> CASE .)
    update          reduce using rule 12 (instruccion -> CASE .)
    delete          reduce using rule 12 (instruccion -> CASE .)
    alter           reduce using rule 12 (instruccion -> CASE .)
    drop            reduce using rule 12 (instruccion -> CASE .)
    insert          reduce using rule 12 (instruccion -> CASE .)
    case            reduce using rule 12 (instruccion -> CASE .)
    show            reduce using rule 12 (instruccion -> CASE .)
    $end            reduce using rule 12 (instruccion -> CASE .)


state 13

    (13) instruccion -> CREATEDB . ptcoma

    ptcoma          shift and go to state 34


state 14

    (14) instruccion -> SHOWDB . ptcoma

    ptcoma          shift and go to state 35


state 15

    (15) instruccion -> use . id ptcoma

    id              shift and go to state 36


state 16

    (95) SELECT -> select . distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> select . LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> select . LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    distinct        shift and go to state 37
    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 38
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 17

    (68) CREATETABLE -> create . table id para LDEF parc ptcoma
    (69) CREATETABLE -> create . table id para LDEF parc HERENCIA ptcoma
    (94) CREATETYPE -> create . type id as enum para LEXP parc
    (51) CREATEDB -> create . RD if not exist id
    (52) CREATEDB -> create . RD if not exist id OPCCDB
    (53) CREATEDB -> create . RD id
    (54) CREATEDB -> create . RD id OPCCDB
    (58) RD -> . or replace databases
    (59) RD -> . databases

    table           shift and go to state 64
    type            shift and go to state 65
    or              shift and go to state 67
    databases       shift and go to state 68

    RD                             shift and go to state 66

state 18

    (127) UPDATE -> update . id set LCAMPOS where LEXP

    id              shift and go to state 69


state 19

    (130) DELETE -> delete . r_from id where LEXP
    (131) DELETE -> delete . r_from id

    r_from          shift and go to state 70


state 20

    (27) ALTER -> alter . databases id RO
    (31) altertable -> alter . table id OP

    databases       shift and go to state 71
    table           shift and go to state 72


state 21

    (28) ALTER -> altertable .

    ptcoma          reduce using rule 28 (ALTER -> altertable .)


state 22

    (24) DROP -> drop . table id
    (25) DROP -> drop . databases if exist id
    (26) DROP -> drop . databases id

    table           shift and go to state 73
    databases       shift and go to state 74


state 23

    (22) INSERT -> insert . into id values para LEXP parc
    (23) INSERT -> insert . into id para LEXP parc values para LEXP parc

    into            shift and go to state 75


state 24

    (16) CASE -> case . LISTAWHEN ELSE end
    (17) CASE -> case . LISTAWHEN end
    (18) LISTAWHEN -> . LISTAWHEN WHEN
    (19) LISTAWHEN -> . WHEN
    (20) WHEN -> . when LEXP then LEXP

    when            shift and go to state 78

    LISTAWHEN                      shift and go to state 76
    WHEN                           shift and go to state 77

state 25

    (50) SHOWDB -> show . dbs

    dbs             shift and go to state 79


state 26

    (2) instrucciones -> instrucciones instruccion .

    use             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    select          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    create          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    update          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    delete          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    alter           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    drop            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    insert          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    case            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    show            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 27

    (4) instruccion -> SELECT ptcoma .

    use             reduce using rule 4 (instruccion -> SELECT ptcoma .)
    select          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    create          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    update          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    delete          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    alter           reduce using rule 4 (instruccion -> SELECT ptcoma .)
    drop            reduce using rule 4 (instruccion -> SELECT ptcoma .)
    insert          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    case            reduce using rule 4 (instruccion -> SELECT ptcoma .)
    show            reduce using rule 4 (instruccion -> SELECT ptcoma .)
    $end            reduce using rule 4 (instruccion -> SELECT ptcoma .)


state 28

    (6) instruccion -> UPDATE ptcoma .

    use             reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    select          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    create          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    update          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    delete          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    alter           reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    drop            reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    insert          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    case            reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    show            reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    $end            reduce using rule 6 (instruccion -> UPDATE ptcoma .)


state 29

    (7) instruccion -> DELETE ptcoma .

    use             reduce using rule 7 (instruccion -> DELETE ptcoma .)
    select          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    create          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    update          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    delete          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    alter           reduce using rule 7 (instruccion -> DELETE ptcoma .)
    drop            reduce using rule 7 (instruccion -> DELETE ptcoma .)
    insert          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    case            reduce using rule 7 (instruccion -> DELETE ptcoma .)
    show            reduce using rule 7 (instruccion -> DELETE ptcoma .)
    $end            reduce using rule 7 (instruccion -> DELETE ptcoma .)


state 30

    (8) instruccion -> ALTER ptcoma .

    use             reduce using rule 8 (instruccion -> ALTER ptcoma .)
    select          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    create          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    update          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    delete          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    alter           reduce using rule 8 (instruccion -> ALTER ptcoma .)
    drop            reduce using rule 8 (instruccion -> ALTER ptcoma .)
    insert          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    case            reduce using rule 8 (instruccion -> ALTER ptcoma .)
    show            reduce using rule 8 (instruccion -> ALTER ptcoma .)
    $end            reduce using rule 8 (instruccion -> ALTER ptcoma .)


state 31

    (9) instruccion -> DROP ptcoma .

    use             reduce using rule 9 (instruccion -> DROP ptcoma .)
    select          reduce using rule 9 (instruccion -> DROP ptcoma .)
    create          reduce using rule 9 (instruccion -> DROP ptcoma .)
    update          reduce using rule 9 (instruccion -> DROP ptcoma .)
    delete          reduce using rule 9 (instruccion -> DROP ptcoma .)
    alter           reduce using rule 9 (instruccion -> DROP ptcoma .)
    drop            reduce using rule 9 (instruccion -> DROP ptcoma .)
    insert          reduce using rule 9 (instruccion -> DROP ptcoma .)
    case            reduce using rule 9 (instruccion -> DROP ptcoma .)
    show            reduce using rule 9 (instruccion -> DROP ptcoma .)
    $end            reduce using rule 9 (instruccion -> DROP ptcoma .)


state 32

    (10) instruccion -> INSERT ptcoma .

    use             reduce using rule 10 (instruccion -> INSERT ptcoma .)
    select          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    create          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    update          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    delete          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    alter           reduce using rule 10 (instruccion -> INSERT ptcoma .)
    drop            reduce using rule 10 (instruccion -> INSERT ptcoma .)
    insert          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    case            reduce using rule 10 (instruccion -> INSERT ptcoma .)
    show            reduce using rule 10 (instruccion -> INSERT ptcoma .)
    $end            reduce using rule 10 (instruccion -> INSERT ptcoma .)


state 33

    (11) instruccion -> CREATETYPE ptcoma .

    use             reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    select          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    create          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    update          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    delete          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    alter           reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    drop            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    insert          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    case            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    show            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    $end            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)


state 34

    (13) instruccion -> CREATEDB ptcoma .

    use             reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    select          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    create          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    update          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    delete          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    alter           reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    drop            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    insert          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    case            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    show            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    $end            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)


state 35

    (14) instruccion -> SHOWDB ptcoma .

    use             reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    select          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    create          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    update          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    delete          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    alter           reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    drop            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    insert          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    case            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    show            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    $end            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)


state 36

    (15) instruccion -> use id . ptcoma

    ptcoma          shift and go to state 80


state 37

    (95) SELECT -> select distinct . LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 81
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 38

    (96) SELECT -> select LEXP . r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> select LEXP . WHERE GROUP HAVING COMBINING ORDER LIMIT
    (134) LEXP -> LEXP . coma EXP
    (106) WHERE -> . where LEXP
    (107) WHERE -> . where EXIST
    (108) WHERE -> . union LEXP
    (109) WHERE -> . union all LEXP
    (110) WHERE -> .

  ! shift/reduce conflict for r_from resolved as shift
  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for where resolved as shift
  ! shift/reduce conflict for union resolved as shift
    r_from          shift and go to state 82
    coma            shift and go to state 84
    where           shift and go to state 85
    union           shift and go to state 86
    group           reduce using rule 110 (WHERE -> .)
    having          reduce using rule 110 (WHERE -> .)
    intersect       reduce using rule 110 (WHERE -> .)
    except          reduce using rule 110 (WHERE -> .)
    order           reduce using rule 110 (WHERE -> .)
    limit           reduce using rule 110 (WHERE -> .)
    offset          reduce using rule 110 (WHERE -> .)
    ptcoma          reduce using rule 110 (WHERE -> .)
    mas             reduce using rule 110 (WHERE -> .)
    menos           reduce using rule 110 (WHERE -> .)
    multiplicacion  reduce using rule 110 (WHERE -> .)
    division        reduce using rule 110 (WHERE -> .)
    modulo          reduce using rule 110 (WHERE -> .)
    elevado         reduce using rule 110 (WHERE -> .)
    and             reduce using rule 110 (WHERE -> .)
    or              reduce using rule 110 (WHERE -> .)
    mayor           reduce using rule 110 (WHERE -> .)
    menor           reduce using rule 110 (WHERE -> .)
    mayor_igual     reduce using rule 110 (WHERE -> .)
    menor_igual     reduce using rule 110 (WHERE -> .)
    igual           reduce using rule 110 (WHERE -> .)
    diferente1      reduce using rule 110 (WHERE -> .)
    diferente2      reduce using rule 110 (WHERE -> .)
    punto           reduce using rule 110 (WHERE -> .)
    between         reduce using rule 110 (WHERE -> .)
    is              reduce using rule 110 (WHERE -> .)
    isnull          reduce using rule 110 (WHERE -> .)
    notnull         reduce using rule 110 (WHERE -> .)
    as              reduce using rule 110 (WHERE -> .)
    cadenaString    reduce using rule 110 (WHERE -> .)
    id              reduce using rule 110 (WHERE -> .)
    cadena          reduce using rule 110 (WHERE -> .)
    in              reduce using rule 110 (WHERE -> .)
    not             reduce using rule 110 (WHERE -> .)
    like            reduce using rule 110 (WHERE -> .)
    parc            reduce using rule 110 (WHERE -> .)
    then            reduce using rule 110 (WHERE -> .)
    end             reduce using rule 110 (WHERE -> .)
    else            reduce using rule 110 (WHERE -> .)
    when            reduce using rule 110 (WHERE -> .)
    constraint      reduce using rule 110 (WHERE -> .)
    unique          reduce using rule 110 (WHERE -> .)
    check           reduce using rule 110 (WHERE -> .)
    default         reduce using rule 110 (WHERE -> .)
    null            reduce using rule 110 (WHERE -> .)
    primary         reduce using rule 110 (WHERE -> .)
    references      reduce using rule 110 (WHERE -> .)
    asc             reduce using rule 110 (WHERE -> .)
    desc            reduce using rule 110 (WHERE -> .)

  ! r_from          [ reduce using rule 110 (WHERE -> .) ]
  ! coma            [ reduce using rule 110 (WHERE -> .) ]
  ! where           [ reduce using rule 110 (WHERE -> .) ]
  ! union           [ reduce using rule 110 (WHERE -> .) ]

    WHERE                          shift and go to state 83

state 39

    (135) LEXP -> EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for punto resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    r_from          reduce using rule 135 (LEXP -> EXP .)
    coma            reduce using rule 135 (LEXP -> EXP .)
    where           reduce using rule 135 (LEXP -> EXP .)
    union           reduce using rule 135 (LEXP -> EXP .)
    group           reduce using rule 135 (LEXP -> EXP .)
    having          reduce using rule 135 (LEXP -> EXP .)
    intersect       reduce using rule 135 (LEXP -> EXP .)
    except          reduce using rule 135 (LEXP -> EXP .)
    order           reduce using rule 135 (LEXP -> EXP .)
    limit           reduce using rule 135 (LEXP -> EXP .)
    offset          reduce using rule 135 (LEXP -> EXP .)
    ptcoma          reduce using rule 135 (LEXP -> EXP .)
    parc            reduce using rule 135 (LEXP -> EXP .)
    then            reduce using rule 135 (LEXP -> EXP .)
    end             reduce using rule 135 (LEXP -> EXP .)
    else            reduce using rule 135 (LEXP -> EXP .)
    when            reduce using rule 135 (LEXP -> EXP .)
    constraint      reduce using rule 135 (LEXP -> EXP .)
    unique          reduce using rule 135 (LEXP -> EXP .)
    check           reduce using rule 135 (LEXP -> EXP .)
    default         reduce using rule 135 (LEXP -> EXP .)
    null            reduce using rule 135 (LEXP -> EXP .)
    primary         reduce using rule 135 (LEXP -> EXP .)
    references      reduce using rule 135 (LEXP -> EXP .)
    asc             reduce using rule 135 (LEXP -> EXP .)
    desc            reduce using rule 135 (LEXP -> EXP .)
    mas             shift and go to state 87
    menos           shift and go to state 88
    multiplicacion  shift and go to state 89
    division        shift and go to state 90
    modulo          shift and go to state 91
    elevado         shift and go to state 92
    and             shift and go to state 93
    or              shift and go to state 94
    mayor           shift and go to state 95
    menor           shift and go to state 96
    mayor_igual     shift and go to state 97
    menor_igual     shift and go to state 98
    igual           shift and go to state 99
    diferente1      shift and go to state 100
    diferente2      shift and go to state 101
    punto           shift and go to state 102
    between         shift and go to state 103
    is              shift and go to state 104
    isnull          shift and go to state 106
    notnull         shift and go to state 107
    as              shift and go to state 108
    cadenaString    shift and go to state 109
    id              shift and go to state 110
    cadena          shift and go to state 111
    in              shift and go to state 112
    not             shift and go to state 105
    like            shift and go to state 113

  ! mas             [ reduce using rule 135 (LEXP -> EXP .) ]
  ! menos           [ reduce using rule 135 (LEXP -> EXP .) ]
  ! multiplicacion  [ reduce using rule 135 (LEXP -> EXP .) ]
  ! division        [ reduce using rule 135 (LEXP -> EXP .) ]
  ! modulo          [ reduce using rule 135 (LEXP -> EXP .) ]
  ! elevado         [ reduce using rule 135 (LEXP -> EXP .) ]
  ! and             [ reduce using rule 135 (LEXP -> EXP .) ]
  ! or              [ reduce using rule 135 (LEXP -> EXP .) ]
  ! mayor           [ reduce using rule 135 (LEXP -> EXP .) ]
  ! menor           [ reduce using rule 135 (LEXP -> EXP .) ]
  ! mayor_igual     [ reduce using rule 135 (LEXP -> EXP .) ]
  ! menor_igual     [ reduce using rule 135 (LEXP -> EXP .) ]
  ! igual           [ reduce using rule 135 (LEXP -> EXP .) ]
  ! diferente1      [ reduce using rule 135 (LEXP -> EXP .) ]
  ! diferente2      [ reduce using rule 135 (LEXP -> EXP .) ]
  ! punto           [ reduce using rule 135 (LEXP -> EXP .) ]
  ! between         [ reduce using rule 135 (LEXP -> EXP .) ]
  ! is              [ reduce using rule 135 (LEXP -> EXP .) ]
  ! isnull          [ reduce using rule 135 (LEXP -> EXP .) ]
  ! notnull         [ reduce using rule 135 (LEXP -> EXP .) ]
  ! as              [ reduce using rule 135 (LEXP -> EXP .) ]
  ! cadenaString    [ reduce using rule 135 (LEXP -> EXP .) ]
  ! id              [ reduce using rule 135 (LEXP -> EXP .) ]
  ! cadena          [ reduce using rule 135 (LEXP -> EXP .) ]
  ! in              [ reduce using rule 135 (LEXP -> EXP .) ]
  ! not             [ reduce using rule 135 (LEXP -> EXP .) ]
  ! like            [ reduce using rule 135 (LEXP -> EXP .) ]


state 40

    (210) EXP -> mas . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    EXP                            shift and go to state 114
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 41

    (211) EXP -> menos . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    EXP                            shift and go to state 115
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 42

    (238) EXP -> multiplicacion .

    r_from          reduce using rule 238 (EXP -> multiplicacion .)
    coma            reduce using rule 238 (EXP -> multiplicacion .)
    where           reduce using rule 238 (EXP -> multiplicacion .)
    union           reduce using rule 238 (EXP -> multiplicacion .)
    group           reduce using rule 238 (EXP -> multiplicacion .)
    having          reduce using rule 238 (EXP -> multiplicacion .)
    intersect       reduce using rule 238 (EXP -> multiplicacion .)
    except          reduce using rule 238 (EXP -> multiplicacion .)
    order           reduce using rule 238 (EXP -> multiplicacion .)
    limit           reduce using rule 238 (EXP -> multiplicacion .)
    offset          reduce using rule 238 (EXP -> multiplicacion .)
    ptcoma          reduce using rule 238 (EXP -> multiplicacion .)
    mas             reduce using rule 238 (EXP -> multiplicacion .)
    menos           reduce using rule 238 (EXP -> multiplicacion .)
    multiplicacion  reduce using rule 238 (EXP -> multiplicacion .)
    division        reduce using rule 238 (EXP -> multiplicacion .)
    modulo          reduce using rule 238 (EXP -> multiplicacion .)
    elevado         reduce using rule 238 (EXP -> multiplicacion .)
    and             reduce using rule 238 (EXP -> multiplicacion .)
    or              reduce using rule 238 (EXP -> multiplicacion .)
    mayor           reduce using rule 238 (EXP -> multiplicacion .)
    menor           reduce using rule 238 (EXP -> multiplicacion .)
    mayor_igual     reduce using rule 238 (EXP -> multiplicacion .)
    menor_igual     reduce using rule 238 (EXP -> multiplicacion .)
    igual           reduce using rule 238 (EXP -> multiplicacion .)
    diferente1      reduce using rule 238 (EXP -> multiplicacion .)
    diferente2      reduce using rule 238 (EXP -> multiplicacion .)
    punto           reduce using rule 238 (EXP -> multiplicacion .)
    between         reduce using rule 238 (EXP -> multiplicacion .)
    is              reduce using rule 238 (EXP -> multiplicacion .)
    isnull          reduce using rule 238 (EXP -> multiplicacion .)
    notnull         reduce using rule 238 (EXP -> multiplicacion .)
    as              reduce using rule 238 (EXP -> multiplicacion .)
    cadenaString    reduce using rule 238 (EXP -> multiplicacion .)
    id              reduce using rule 238 (EXP -> multiplicacion .)
    cadena          reduce using rule 238 (EXP -> multiplicacion .)
    in              reduce using rule 238 (EXP -> multiplicacion .)
    not             reduce using rule 238 (EXP -> multiplicacion .)
    like            reduce using rule 238 (EXP -> multiplicacion .)
    parc            reduce using rule 238 (EXP -> multiplicacion .)
    then            reduce using rule 238 (EXP -> multiplicacion .)
    end             reduce using rule 238 (EXP -> multiplicacion .)
    else            reduce using rule 238 (EXP -> multiplicacion .)
    when            reduce using rule 238 (EXP -> multiplicacion .)
    constraint      reduce using rule 238 (EXP -> multiplicacion .)
    unique          reduce using rule 238 (EXP -> multiplicacion .)
    check           reduce using rule 238 (EXP -> multiplicacion .)
    default         reduce using rule 238 (EXP -> multiplicacion .)
    null            reduce using rule 238 (EXP -> multiplicacion .)
    primary         reduce using rule 238 (EXP -> multiplicacion .)
    references      reduce using rule 238 (EXP -> multiplicacion .)
    asc             reduce using rule 238 (EXP -> multiplicacion .)
    desc            reduce using rule 238 (EXP -> multiplicacion .)


state 43

    (212) EXP -> not . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    EXP                            shift and go to state 116
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 44

    (239) EXP -> null .

    r_from          reduce using rule 239 (EXP -> null .)
    coma            reduce using rule 239 (EXP -> null .)
    where           reduce using rule 239 (EXP -> null .)
    union           reduce using rule 239 (EXP -> null .)
    group           reduce using rule 239 (EXP -> null .)
    having          reduce using rule 239 (EXP -> null .)
    intersect       reduce using rule 239 (EXP -> null .)
    except          reduce using rule 239 (EXP -> null .)
    order           reduce using rule 239 (EXP -> null .)
    limit           reduce using rule 239 (EXP -> null .)
    offset          reduce using rule 239 (EXP -> null .)
    ptcoma          reduce using rule 239 (EXP -> null .)
    mas             reduce using rule 239 (EXP -> null .)
    menos           reduce using rule 239 (EXP -> null .)
    multiplicacion  reduce using rule 239 (EXP -> null .)
    division        reduce using rule 239 (EXP -> null .)
    modulo          reduce using rule 239 (EXP -> null .)
    elevado         reduce using rule 239 (EXP -> null .)
    and             reduce using rule 239 (EXP -> null .)
    or              reduce using rule 239 (EXP -> null .)
    mayor           reduce using rule 239 (EXP -> null .)
    menor           reduce using rule 239 (EXP -> null .)
    mayor_igual     reduce using rule 239 (EXP -> null .)
    menor_igual     reduce using rule 239 (EXP -> null .)
    igual           reduce using rule 239 (EXP -> null .)
    diferente1      reduce using rule 239 (EXP -> null .)
    diferente2      reduce using rule 239 (EXP -> null .)
    punto           reduce using rule 239 (EXP -> null .)
    between         reduce using rule 239 (EXP -> null .)
    is              reduce using rule 239 (EXP -> null .)
    isnull          reduce using rule 239 (EXP -> null .)
    notnull         reduce using rule 239 (EXP -> null .)
    as              reduce using rule 239 (EXP -> null .)
    cadenaString    reduce using rule 239 (EXP -> null .)
    id              reduce using rule 239 (EXP -> null .)
    cadena          reduce using rule 239 (EXP -> null .)
    in              reduce using rule 239 (EXP -> null .)
    not             reduce using rule 239 (EXP -> null .)
    like            reduce using rule 239 (EXP -> null .)
    parc            reduce using rule 239 (EXP -> null .)
    then            reduce using rule 239 (EXP -> null .)
    end             reduce using rule 239 (EXP -> null .)
    else            reduce using rule 239 (EXP -> null .)
    when            reduce using rule 239 (EXP -> null .)
    constraint      reduce using rule 239 (EXP -> null .)
    unique          reduce using rule 239 (EXP -> null .)
    check           reduce using rule 239 (EXP -> null .)
    default         reduce using rule 239 (EXP -> null .)
    null            reduce using rule 239 (EXP -> null .)
    primary         reduce using rule 239 (EXP -> null .)
    references      reduce using rule 239 (EXP -> null .)
    asc             reduce using rule 239 (EXP -> null .)
    desc            reduce using rule 239 (EXP -> null .)


state 45

    (235) EXP -> true .

    r_from          reduce using rule 235 (EXP -> true .)
    coma            reduce using rule 235 (EXP -> true .)
    where           reduce using rule 235 (EXP -> true .)
    union           reduce using rule 235 (EXP -> true .)
    group           reduce using rule 235 (EXP -> true .)
    having          reduce using rule 235 (EXP -> true .)
    intersect       reduce using rule 235 (EXP -> true .)
    except          reduce using rule 235 (EXP -> true .)
    order           reduce using rule 235 (EXP -> true .)
    limit           reduce using rule 235 (EXP -> true .)
    offset          reduce using rule 235 (EXP -> true .)
    ptcoma          reduce using rule 235 (EXP -> true .)
    mas             reduce using rule 235 (EXP -> true .)
    menos           reduce using rule 235 (EXP -> true .)
    multiplicacion  reduce using rule 235 (EXP -> true .)
    division        reduce using rule 235 (EXP -> true .)
    modulo          reduce using rule 235 (EXP -> true .)
    elevado         reduce using rule 235 (EXP -> true .)
    and             reduce using rule 235 (EXP -> true .)
    or              reduce using rule 235 (EXP -> true .)
    mayor           reduce using rule 235 (EXP -> true .)
    menor           reduce using rule 235 (EXP -> true .)
    mayor_igual     reduce using rule 235 (EXP -> true .)
    menor_igual     reduce using rule 235 (EXP -> true .)
    igual           reduce using rule 235 (EXP -> true .)
    diferente1      reduce using rule 235 (EXP -> true .)
    diferente2      reduce using rule 235 (EXP -> true .)
    punto           reduce using rule 235 (EXP -> true .)
    between         reduce using rule 235 (EXP -> true .)
    is              reduce using rule 235 (EXP -> true .)
    isnull          reduce using rule 235 (EXP -> true .)
    notnull         reduce using rule 235 (EXP -> true .)
    as              reduce using rule 235 (EXP -> true .)
    cadenaString    reduce using rule 235 (EXP -> true .)
    id              reduce using rule 235 (EXP -> true .)
    cadena          reduce using rule 235 (EXP -> true .)
    in              reduce using rule 235 (EXP -> true .)
    not             reduce using rule 235 (EXP -> true .)
    like            reduce using rule 235 (EXP -> true .)
    parc            reduce using rule 235 (EXP -> true .)
    then            reduce using rule 235 (EXP -> true .)
    end             reduce using rule 235 (EXP -> true .)
    else            reduce using rule 235 (EXP -> true .)
    when            reduce using rule 235 (EXP -> true .)
    constraint      reduce using rule 235 (EXP -> true .)
    unique          reduce using rule 235 (EXP -> true .)
    check           reduce using rule 235 (EXP -> true .)
    default         reduce using rule 235 (EXP -> true .)
    null            reduce using rule 235 (EXP -> true .)
    primary         reduce using rule 235 (EXP -> true .)
    references      reduce using rule 235 (EXP -> true .)
    asc             reduce using rule 235 (EXP -> true .)
    desc            reduce using rule 235 (EXP -> true .)


state 46

    (236) EXP -> false .

    r_from          reduce using rule 236 (EXP -> false .)
    coma            reduce using rule 236 (EXP -> false .)
    where           reduce using rule 236 (EXP -> false .)
    union           reduce using rule 236 (EXP -> false .)
    group           reduce using rule 236 (EXP -> false .)
    having          reduce using rule 236 (EXP -> false .)
    intersect       reduce using rule 236 (EXP -> false .)
    except          reduce using rule 236 (EXP -> false .)
    order           reduce using rule 236 (EXP -> false .)
    limit           reduce using rule 236 (EXP -> false .)
    offset          reduce using rule 236 (EXP -> false .)
    ptcoma          reduce using rule 236 (EXP -> false .)
    mas             reduce using rule 236 (EXP -> false .)
    menos           reduce using rule 236 (EXP -> false .)
    multiplicacion  reduce using rule 236 (EXP -> false .)
    division        reduce using rule 236 (EXP -> false .)
    modulo          reduce using rule 236 (EXP -> false .)
    elevado         reduce using rule 236 (EXP -> false .)
    and             reduce using rule 236 (EXP -> false .)
    or              reduce using rule 236 (EXP -> false .)
    mayor           reduce using rule 236 (EXP -> false .)
    menor           reduce using rule 236 (EXP -> false .)
    mayor_igual     reduce using rule 236 (EXP -> false .)
    menor_igual     reduce using rule 236 (EXP -> false .)
    igual           reduce using rule 236 (EXP -> false .)
    diferente1      reduce using rule 236 (EXP -> false .)
    diferente2      reduce using rule 236 (EXP -> false .)
    punto           reduce using rule 236 (EXP -> false .)
    between         reduce using rule 236 (EXP -> false .)
    is              reduce using rule 236 (EXP -> false .)
    isnull          reduce using rule 236 (EXP -> false .)
    notnull         reduce using rule 236 (EXP -> false .)
    as              reduce using rule 236 (EXP -> false .)
    cadenaString    reduce using rule 236 (EXP -> false .)
    id              reduce using rule 236 (EXP -> false .)
    cadena          reduce using rule 236 (EXP -> false .)
    in              reduce using rule 236 (EXP -> false .)
    not             reduce using rule 236 (EXP -> false .)
    like            reduce using rule 236 (EXP -> false .)
    parc            reduce using rule 236 (EXP -> false .)
    then            reduce using rule 236 (EXP -> false .)
    end             reduce using rule 236 (EXP -> false .)
    else            reduce using rule 236 (EXP -> false .)
    when            reduce using rule 236 (EXP -> false .)
    constraint      reduce using rule 236 (EXP -> false .)
    unique          reduce using rule 236 (EXP -> false .)
    check           reduce using rule 236 (EXP -> false .)
    default         reduce using rule 236 (EXP -> false .)
    null            reduce using rule 236 (EXP -> false .)
    primary         reduce using rule 236 (EXP -> false .)
    references      reduce using rule 236 (EXP -> false .)
    asc             reduce using rule 236 (EXP -> false .)
    desc            reduce using rule 236 (EXP -> false .)


state 47

    (234) EXP -> cadenaString .

    r_from          reduce using rule 234 (EXP -> cadenaString .)
    coma            reduce using rule 234 (EXP -> cadenaString .)
    where           reduce using rule 234 (EXP -> cadenaString .)
    union           reduce using rule 234 (EXP -> cadenaString .)
    group           reduce using rule 234 (EXP -> cadenaString .)
    having          reduce using rule 234 (EXP -> cadenaString .)
    intersect       reduce using rule 234 (EXP -> cadenaString .)
    except          reduce using rule 234 (EXP -> cadenaString .)
    order           reduce using rule 234 (EXP -> cadenaString .)
    limit           reduce using rule 234 (EXP -> cadenaString .)
    offset          reduce using rule 234 (EXP -> cadenaString .)
    ptcoma          reduce using rule 234 (EXP -> cadenaString .)
    mas             reduce using rule 234 (EXP -> cadenaString .)
    menos           reduce using rule 234 (EXP -> cadenaString .)
    multiplicacion  reduce using rule 234 (EXP -> cadenaString .)
    division        reduce using rule 234 (EXP -> cadenaString .)
    modulo          reduce using rule 234 (EXP -> cadenaString .)
    elevado         reduce using rule 234 (EXP -> cadenaString .)
    and             reduce using rule 234 (EXP -> cadenaString .)
    or              reduce using rule 234 (EXP -> cadenaString .)
    mayor           reduce using rule 234 (EXP -> cadenaString .)
    menor           reduce using rule 234 (EXP -> cadenaString .)
    mayor_igual     reduce using rule 234 (EXP -> cadenaString .)
    menor_igual     reduce using rule 234 (EXP -> cadenaString .)
    igual           reduce using rule 234 (EXP -> cadenaString .)
    diferente1      reduce using rule 234 (EXP -> cadenaString .)
    diferente2      reduce using rule 234 (EXP -> cadenaString .)
    punto           reduce using rule 234 (EXP -> cadenaString .)
    between         reduce using rule 234 (EXP -> cadenaString .)
    is              reduce using rule 234 (EXP -> cadenaString .)
    isnull          reduce using rule 234 (EXP -> cadenaString .)
    notnull         reduce using rule 234 (EXP -> cadenaString .)
    as              reduce using rule 234 (EXP -> cadenaString .)
    cadenaString    reduce using rule 234 (EXP -> cadenaString .)
    id              reduce using rule 234 (EXP -> cadenaString .)
    cadena          reduce using rule 234 (EXP -> cadenaString .)
    in              reduce using rule 234 (EXP -> cadenaString .)
    not             reduce using rule 234 (EXP -> cadenaString .)
    like            reduce using rule 234 (EXP -> cadenaString .)
    parc            reduce using rule 234 (EXP -> cadenaString .)
    then            reduce using rule 234 (EXP -> cadenaString .)
    end             reduce using rule 234 (EXP -> cadenaString .)
    else            reduce using rule 234 (EXP -> cadenaString .)
    when            reduce using rule 234 (EXP -> cadenaString .)
    constraint      reduce using rule 234 (EXP -> cadenaString .)
    unique          reduce using rule 234 (EXP -> cadenaString .)
    check           reduce using rule 234 (EXP -> cadenaString .)
    default         reduce using rule 234 (EXP -> cadenaString .)
    null            reduce using rule 234 (EXP -> cadenaString .)
    primary         reduce using rule 234 (EXP -> cadenaString .)
    references      reduce using rule 234 (EXP -> cadenaString .)
    asc             reduce using rule 234 (EXP -> cadenaString .)
    desc            reduce using rule 234 (EXP -> cadenaString .)


state 48

    (225) EXP -> id . para LEXP parc
    (226) EXP -> id . para parc
    (237) EXP -> id .

    para            shift and go to state 117
    r_from          reduce using rule 237 (EXP -> id .)
    coma            reduce using rule 237 (EXP -> id .)
    where           reduce using rule 237 (EXP -> id .)
    union           reduce using rule 237 (EXP -> id .)
    group           reduce using rule 237 (EXP -> id .)
    having          reduce using rule 237 (EXP -> id .)
    intersect       reduce using rule 237 (EXP -> id .)
    except          reduce using rule 237 (EXP -> id .)
    order           reduce using rule 237 (EXP -> id .)
    limit           reduce using rule 237 (EXP -> id .)
    offset          reduce using rule 237 (EXP -> id .)
    ptcoma          reduce using rule 237 (EXP -> id .)
    mas             reduce using rule 237 (EXP -> id .)
    menos           reduce using rule 237 (EXP -> id .)
    multiplicacion  reduce using rule 237 (EXP -> id .)
    division        reduce using rule 237 (EXP -> id .)
    modulo          reduce using rule 237 (EXP -> id .)
    elevado         reduce using rule 237 (EXP -> id .)
    and             reduce using rule 237 (EXP -> id .)
    or              reduce using rule 237 (EXP -> id .)
    mayor           reduce using rule 237 (EXP -> id .)
    menor           reduce using rule 237 (EXP -> id .)
    mayor_igual     reduce using rule 237 (EXP -> id .)
    menor_igual     reduce using rule 237 (EXP -> id .)
    igual           reduce using rule 237 (EXP -> id .)
    diferente1      reduce using rule 237 (EXP -> id .)
    diferente2      reduce using rule 237 (EXP -> id .)
    punto           reduce using rule 237 (EXP -> id .)
    between         reduce using rule 237 (EXP -> id .)
    is              reduce using rule 237 (EXP -> id .)
    isnull          reduce using rule 237 (EXP -> id .)
    notnull         reduce using rule 237 (EXP -> id .)
    as              reduce using rule 237 (EXP -> id .)
    cadenaString    reduce using rule 237 (EXP -> id .)
    id              reduce using rule 237 (EXP -> id .)
    cadena          reduce using rule 237 (EXP -> id .)
    in              reduce using rule 237 (EXP -> id .)
    not             reduce using rule 237 (EXP -> id .)
    like            reduce using rule 237 (EXP -> id .)
    parc            reduce using rule 237 (EXP -> id .)
    then            reduce using rule 237 (EXP -> id .)
    end             reduce using rule 237 (EXP -> id .)
    else            reduce using rule 237 (EXP -> id .)
    when            reduce using rule 237 (EXP -> id .)
    constraint      reduce using rule 237 (EXP -> id .)
    unique          reduce using rule 237 (EXP -> id .)
    check           reduce using rule 237 (EXP -> id .)
    default         reduce using rule 237 (EXP -> id .)
    null            reduce using rule 237 (EXP -> id .)
    primary         reduce using rule 237 (EXP -> id .)
    references      reduce using rule 237 (EXP -> id .)
    asc             reduce using rule 237 (EXP -> id .)
    desc            reduce using rule 237 (EXP -> id .)


state 49

    (233) EXP -> cadena .

    r_from          reduce using rule 233 (EXP -> cadena .)
    coma            reduce using rule 233 (EXP -> cadena .)
    where           reduce using rule 233 (EXP -> cadena .)
    union           reduce using rule 233 (EXP -> cadena .)
    group           reduce using rule 233 (EXP -> cadena .)
    having          reduce using rule 233 (EXP -> cadena .)
    intersect       reduce using rule 233 (EXP -> cadena .)
    except          reduce using rule 233 (EXP -> cadena .)
    order           reduce using rule 233 (EXP -> cadena .)
    limit           reduce using rule 233 (EXP -> cadena .)
    offset          reduce using rule 233 (EXP -> cadena .)
    ptcoma          reduce using rule 233 (EXP -> cadena .)
    mas             reduce using rule 233 (EXP -> cadena .)
    menos           reduce using rule 233 (EXP -> cadena .)
    multiplicacion  reduce using rule 233 (EXP -> cadena .)
    division        reduce using rule 233 (EXP -> cadena .)
    modulo          reduce using rule 233 (EXP -> cadena .)
    elevado         reduce using rule 233 (EXP -> cadena .)
    and             reduce using rule 233 (EXP -> cadena .)
    or              reduce using rule 233 (EXP -> cadena .)
    mayor           reduce using rule 233 (EXP -> cadena .)
    menor           reduce using rule 233 (EXP -> cadena .)
    mayor_igual     reduce using rule 233 (EXP -> cadena .)
    menor_igual     reduce using rule 233 (EXP -> cadena .)
    igual           reduce using rule 233 (EXP -> cadena .)
    diferente1      reduce using rule 233 (EXP -> cadena .)
    diferente2      reduce using rule 233 (EXP -> cadena .)
    punto           reduce using rule 233 (EXP -> cadena .)
    between         reduce using rule 233 (EXP -> cadena .)
    is              reduce using rule 233 (EXP -> cadena .)
    isnull          reduce using rule 233 (EXP -> cadena .)
    notnull         reduce using rule 233 (EXP -> cadena .)
    as              reduce using rule 233 (EXP -> cadena .)
    cadenaString    reduce using rule 233 (EXP -> cadena .)
    id              reduce using rule 233 (EXP -> cadena .)
    cadena          reduce using rule 233 (EXP -> cadena .)
    in              reduce using rule 233 (EXP -> cadena .)
    not             reduce using rule 233 (EXP -> cadena .)
    like            reduce using rule 233 (EXP -> cadena .)
    parc            reduce using rule 233 (EXP -> cadena .)
    then            reduce using rule 233 (EXP -> cadena .)
    end             reduce using rule 233 (EXP -> cadena .)
    else            reduce using rule 233 (EXP -> cadena .)
    when            reduce using rule 233 (EXP -> cadena .)
    constraint      reduce using rule 233 (EXP -> cadena .)
    unique          reduce using rule 233 (EXP -> cadena .)
    check           reduce using rule 233 (EXP -> cadena .)
    default         reduce using rule 233 (EXP -> cadena .)
    null            reduce using rule 233 (EXP -> cadena .)
    primary         reduce using rule 233 (EXP -> cadena .)
    references      reduce using rule 233 (EXP -> cadena .)
    asc             reduce using rule 233 (EXP -> cadena .)
    desc            reduce using rule 233 (EXP -> cadena .)


state 50

    (224) EXP -> para . EXP parc
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    EXP                            shift and go to state 118
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 51

    (222) EXP -> SELECT .

    r_from          reduce using rule 222 (EXP -> SELECT .)
    coma            reduce using rule 222 (EXP -> SELECT .)
    where           reduce using rule 222 (EXP -> SELECT .)
    union           reduce using rule 222 (EXP -> SELECT .)
    group           reduce using rule 222 (EXP -> SELECT .)
    having          reduce using rule 222 (EXP -> SELECT .)
    intersect       reduce using rule 222 (EXP -> SELECT .)
    except          reduce using rule 222 (EXP -> SELECT .)
    order           reduce using rule 222 (EXP -> SELECT .)
    limit           reduce using rule 222 (EXP -> SELECT .)
    offset          reduce using rule 222 (EXP -> SELECT .)
    ptcoma          reduce using rule 222 (EXP -> SELECT .)
    mas             reduce using rule 222 (EXP -> SELECT .)
    menos           reduce using rule 222 (EXP -> SELECT .)
    multiplicacion  reduce using rule 222 (EXP -> SELECT .)
    division        reduce using rule 222 (EXP -> SELECT .)
    modulo          reduce using rule 222 (EXP -> SELECT .)
    elevado         reduce using rule 222 (EXP -> SELECT .)
    and             reduce using rule 222 (EXP -> SELECT .)
    or              reduce using rule 222 (EXP -> SELECT .)
    mayor           reduce using rule 222 (EXP -> SELECT .)
    menor           reduce using rule 222 (EXP -> SELECT .)
    mayor_igual     reduce using rule 222 (EXP -> SELECT .)
    menor_igual     reduce using rule 222 (EXP -> SELECT .)
    igual           reduce using rule 222 (EXP -> SELECT .)
    diferente1      reduce using rule 222 (EXP -> SELECT .)
    diferente2      reduce using rule 222 (EXP -> SELECT .)
    punto           reduce using rule 222 (EXP -> SELECT .)
    between         reduce using rule 222 (EXP -> SELECT .)
    is              reduce using rule 222 (EXP -> SELECT .)
    isnull          reduce using rule 222 (EXP -> SELECT .)
    notnull         reduce using rule 222 (EXP -> SELECT .)
    as              reduce using rule 222 (EXP -> SELECT .)
    cadenaString    reduce using rule 222 (EXP -> SELECT .)
    id              reduce using rule 222 (EXP -> SELECT .)
    cadena          reduce using rule 222 (EXP -> SELECT .)
    in              reduce using rule 222 (EXP -> SELECT .)
    not             reduce using rule 222 (EXP -> SELECT .)
    like            reduce using rule 222 (EXP -> SELECT .)
    parc            reduce using rule 222 (EXP -> SELECT .)
    then            reduce using rule 222 (EXP -> SELECT .)
    end             reduce using rule 222 (EXP -> SELECT .)
    else            reduce using rule 222 (EXP -> SELECT .)
    when            reduce using rule 222 (EXP -> SELECT .)
    constraint      reduce using rule 222 (EXP -> SELECT .)
    unique          reduce using rule 222 (EXP -> SELECT .)
    check           reduce using rule 222 (EXP -> SELECT .)
    default         reduce using rule 222 (EXP -> SELECT .)
    null            reduce using rule 222 (EXP -> SELECT .)
    primary         reduce using rule 222 (EXP -> SELECT .)
    references      reduce using rule 222 (EXP -> SELECT .)
    asc             reduce using rule 222 (EXP -> SELECT .)
    desc            reduce using rule 222 (EXP -> SELECT .)


state 52

    (223) EXP -> CASE .

    r_from          reduce using rule 223 (EXP -> CASE .)
    coma            reduce using rule 223 (EXP -> CASE .)
    where           reduce using rule 223 (EXP -> CASE .)
    union           reduce using rule 223 (EXP -> CASE .)
    group           reduce using rule 223 (EXP -> CASE .)
    having          reduce using rule 223 (EXP -> CASE .)
    intersect       reduce using rule 223 (EXP -> CASE .)
    except          reduce using rule 223 (EXP -> CASE .)
    order           reduce using rule 223 (EXP -> CASE .)
    limit           reduce using rule 223 (EXP -> CASE .)
    offset          reduce using rule 223 (EXP -> CASE .)
    ptcoma          reduce using rule 223 (EXP -> CASE .)
    mas             reduce using rule 223 (EXP -> CASE .)
    menos           reduce using rule 223 (EXP -> CASE .)
    multiplicacion  reduce using rule 223 (EXP -> CASE .)
    division        reduce using rule 223 (EXP -> CASE .)
    modulo          reduce using rule 223 (EXP -> CASE .)
    elevado         reduce using rule 223 (EXP -> CASE .)
    and             reduce using rule 223 (EXP -> CASE .)
    or              reduce using rule 223 (EXP -> CASE .)
    mayor           reduce using rule 223 (EXP -> CASE .)
    menor           reduce using rule 223 (EXP -> CASE .)
    mayor_igual     reduce using rule 223 (EXP -> CASE .)
    menor_igual     reduce using rule 223 (EXP -> CASE .)
    igual           reduce using rule 223 (EXP -> CASE .)
    diferente1      reduce using rule 223 (EXP -> CASE .)
    diferente2      reduce using rule 223 (EXP -> CASE .)
    punto           reduce using rule 223 (EXP -> CASE .)
    between         reduce using rule 223 (EXP -> CASE .)
    is              reduce using rule 223 (EXP -> CASE .)
    isnull          reduce using rule 223 (EXP -> CASE .)
    notnull         reduce using rule 223 (EXP -> CASE .)
    as              reduce using rule 223 (EXP -> CASE .)
    cadenaString    reduce using rule 223 (EXP -> CASE .)
    id              reduce using rule 223 (EXP -> CASE .)
    cadena          reduce using rule 223 (EXP -> CASE .)
    in              reduce using rule 223 (EXP -> CASE .)
    not             reduce using rule 223 (EXP -> CASE .)
    like            reduce using rule 223 (EXP -> CASE .)
    parc            reduce using rule 223 (EXP -> CASE .)
    then            reduce using rule 223 (EXP -> CASE .)
    end             reduce using rule 223 (EXP -> CASE .)
    else            reduce using rule 223 (EXP -> CASE .)
    when            reduce using rule 223 (EXP -> CASE .)
    constraint      reduce using rule 223 (EXP -> CASE .)
    unique          reduce using rule 223 (EXP -> CASE .)
    check           reduce using rule 223 (EXP -> CASE .)
    default         reduce using rule 223 (EXP -> CASE .)
    null            reduce using rule 223 (EXP -> CASE .)
    primary         reduce using rule 223 (EXP -> CASE .)
    references      reduce using rule 223 (EXP -> CASE .)
    asc             reduce using rule 223 (EXP -> CASE .)
    desc            reduce using rule 223 (EXP -> CASE .)


state 53

    (227) EXP -> any . para LEXP parc

    para            shift and go to state 119


state 54

    (228) EXP -> all . para LEXP parc

    para            shift and go to state 120


state 55

    (229) EXP -> some . para LEXP parc

    para            shift and go to state 121


state 56

    (230) EXP -> extract . para FIELDS r_from timestamp cadena parc

    para            shift and go to state 122


state 57

    (242) EXP -> timestamp . cadena

    cadena          shift and go to state 123


state 58

    (231) EXP -> int .

    r_from          reduce using rule 231 (EXP -> int .)
    coma            reduce using rule 231 (EXP -> int .)
    where           reduce using rule 231 (EXP -> int .)
    union           reduce using rule 231 (EXP -> int .)
    group           reduce using rule 231 (EXP -> int .)
    having          reduce using rule 231 (EXP -> int .)
    intersect       reduce using rule 231 (EXP -> int .)
    except          reduce using rule 231 (EXP -> int .)
    order           reduce using rule 231 (EXP -> int .)
    limit           reduce using rule 231 (EXP -> int .)
    offset          reduce using rule 231 (EXP -> int .)
    ptcoma          reduce using rule 231 (EXP -> int .)
    mas             reduce using rule 231 (EXP -> int .)
    menos           reduce using rule 231 (EXP -> int .)
    multiplicacion  reduce using rule 231 (EXP -> int .)
    division        reduce using rule 231 (EXP -> int .)
    modulo          reduce using rule 231 (EXP -> int .)
    elevado         reduce using rule 231 (EXP -> int .)
    and             reduce using rule 231 (EXP -> int .)
    or              reduce using rule 231 (EXP -> int .)
    mayor           reduce using rule 231 (EXP -> int .)
    menor           reduce using rule 231 (EXP -> int .)
    mayor_igual     reduce using rule 231 (EXP -> int .)
    menor_igual     reduce using rule 231 (EXP -> int .)
    igual           reduce using rule 231 (EXP -> int .)
    diferente1      reduce using rule 231 (EXP -> int .)
    diferente2      reduce using rule 231 (EXP -> int .)
    punto           reduce using rule 231 (EXP -> int .)
    between         reduce using rule 231 (EXP -> int .)
    is              reduce using rule 231 (EXP -> int .)
    isnull          reduce using rule 231 (EXP -> int .)
    notnull         reduce using rule 231 (EXP -> int .)
    as              reduce using rule 231 (EXP -> int .)
    cadenaString    reduce using rule 231 (EXP -> int .)
    id              reduce using rule 231 (EXP -> int .)
    cadena          reduce using rule 231 (EXP -> int .)
    in              reduce using rule 231 (EXP -> int .)
    not             reduce using rule 231 (EXP -> int .)
    like            reduce using rule 231 (EXP -> int .)
    parc            reduce using rule 231 (EXP -> int .)
    then            reduce using rule 231 (EXP -> int .)
    end             reduce using rule 231 (EXP -> int .)
    else            reduce using rule 231 (EXP -> int .)
    when            reduce using rule 231 (EXP -> int .)
    constraint      reduce using rule 231 (EXP -> int .)
    unique          reduce using rule 231 (EXP -> int .)
    check           reduce using rule 231 (EXP -> int .)
    default         reduce using rule 231 (EXP -> int .)
    null            reduce using rule 231 (EXP -> int .)
    primary         reduce using rule 231 (EXP -> int .)
    references      reduce using rule 231 (EXP -> int .)
    asc             reduce using rule 231 (EXP -> int .)
    desc            reduce using rule 231 (EXP -> int .)


state 59

    (232) EXP -> decimales .

    r_from          reduce using rule 232 (EXP -> decimales .)
    coma            reduce using rule 232 (EXP -> decimales .)
    where           reduce using rule 232 (EXP -> decimales .)
    union           reduce using rule 232 (EXP -> decimales .)
    group           reduce using rule 232 (EXP -> decimales .)
    having          reduce using rule 232 (EXP -> decimales .)
    intersect       reduce using rule 232 (EXP -> decimales .)
    except          reduce using rule 232 (EXP -> decimales .)
    order           reduce using rule 232 (EXP -> decimales .)
    limit           reduce using rule 232 (EXP -> decimales .)
    offset          reduce using rule 232 (EXP -> decimales .)
    ptcoma          reduce using rule 232 (EXP -> decimales .)
    mas             reduce using rule 232 (EXP -> decimales .)
    menos           reduce using rule 232 (EXP -> decimales .)
    multiplicacion  reduce using rule 232 (EXP -> decimales .)
    division        reduce using rule 232 (EXP -> decimales .)
    modulo          reduce using rule 232 (EXP -> decimales .)
    elevado         reduce using rule 232 (EXP -> decimales .)
    and             reduce using rule 232 (EXP -> decimales .)
    or              reduce using rule 232 (EXP -> decimales .)
    mayor           reduce using rule 232 (EXP -> decimales .)
    menor           reduce using rule 232 (EXP -> decimales .)
    mayor_igual     reduce using rule 232 (EXP -> decimales .)
    menor_igual     reduce using rule 232 (EXP -> decimales .)
    igual           reduce using rule 232 (EXP -> decimales .)
    diferente1      reduce using rule 232 (EXP -> decimales .)
    diferente2      reduce using rule 232 (EXP -> decimales .)
    punto           reduce using rule 232 (EXP -> decimales .)
    between         reduce using rule 232 (EXP -> decimales .)
    is              reduce using rule 232 (EXP -> decimales .)
    isnull          reduce using rule 232 (EXP -> decimales .)
    notnull         reduce using rule 232 (EXP -> decimales .)
    as              reduce using rule 232 (EXP -> decimales .)
    cadenaString    reduce using rule 232 (EXP -> decimales .)
    id              reduce using rule 232 (EXP -> decimales .)
    cadena          reduce using rule 232 (EXP -> decimales .)
    in              reduce using rule 232 (EXP -> decimales .)
    not             reduce using rule 232 (EXP -> decimales .)
    like            reduce using rule 232 (EXP -> decimales .)
    parc            reduce using rule 232 (EXP -> decimales .)
    then            reduce using rule 232 (EXP -> decimales .)
    end             reduce using rule 232 (EXP -> decimales .)
    else            reduce using rule 232 (EXP -> decimales .)
    when            reduce using rule 232 (EXP -> decimales .)
    constraint      reduce using rule 232 (EXP -> decimales .)
    unique          reduce using rule 232 (EXP -> decimales .)
    check           reduce using rule 232 (EXP -> decimales .)
    default         reduce using rule 232 (EXP -> decimales .)
    null            reduce using rule 232 (EXP -> decimales .)
    primary         reduce using rule 232 (EXP -> decimales .)
    references      reduce using rule 232 (EXP -> decimales .)
    asc             reduce using rule 232 (EXP -> decimales .)
    desc            reduce using rule 232 (EXP -> decimales .)


state 60

    (240) EXP -> current_time .

    r_from          reduce using rule 240 (EXP -> current_time .)
    coma            reduce using rule 240 (EXP -> current_time .)
    where           reduce using rule 240 (EXP -> current_time .)
    union           reduce using rule 240 (EXP -> current_time .)
    group           reduce using rule 240 (EXP -> current_time .)
    having          reduce using rule 240 (EXP -> current_time .)
    intersect       reduce using rule 240 (EXP -> current_time .)
    except          reduce using rule 240 (EXP -> current_time .)
    order           reduce using rule 240 (EXP -> current_time .)
    limit           reduce using rule 240 (EXP -> current_time .)
    offset          reduce using rule 240 (EXP -> current_time .)
    ptcoma          reduce using rule 240 (EXP -> current_time .)
    mas             reduce using rule 240 (EXP -> current_time .)
    menos           reduce using rule 240 (EXP -> current_time .)
    multiplicacion  reduce using rule 240 (EXP -> current_time .)
    division        reduce using rule 240 (EXP -> current_time .)
    modulo          reduce using rule 240 (EXP -> current_time .)
    elevado         reduce using rule 240 (EXP -> current_time .)
    and             reduce using rule 240 (EXP -> current_time .)
    or              reduce using rule 240 (EXP -> current_time .)
    mayor           reduce using rule 240 (EXP -> current_time .)
    menor           reduce using rule 240 (EXP -> current_time .)
    mayor_igual     reduce using rule 240 (EXP -> current_time .)
    menor_igual     reduce using rule 240 (EXP -> current_time .)
    igual           reduce using rule 240 (EXP -> current_time .)
    diferente1      reduce using rule 240 (EXP -> current_time .)
    diferente2      reduce using rule 240 (EXP -> current_time .)
    punto           reduce using rule 240 (EXP -> current_time .)
    between         reduce using rule 240 (EXP -> current_time .)
    is              reduce using rule 240 (EXP -> current_time .)
    isnull          reduce using rule 240 (EXP -> current_time .)
    notnull         reduce using rule 240 (EXP -> current_time .)
    as              reduce using rule 240 (EXP -> current_time .)
    cadenaString    reduce using rule 240 (EXP -> current_time .)
    id              reduce using rule 240 (EXP -> current_time .)
    cadena          reduce using rule 240 (EXP -> current_time .)
    in              reduce using rule 240 (EXP -> current_time .)
    not             reduce using rule 240 (EXP -> current_time .)
    like            reduce using rule 240 (EXP -> current_time .)
    parc            reduce using rule 240 (EXP -> current_time .)
    then            reduce using rule 240 (EXP -> current_time .)
    end             reduce using rule 240 (EXP -> current_time .)
    else            reduce using rule 240 (EXP -> current_time .)
    when            reduce using rule 240 (EXP -> current_time .)
    constraint      reduce using rule 240 (EXP -> current_time .)
    unique          reduce using rule 240 (EXP -> current_time .)
    check           reduce using rule 240 (EXP -> current_time .)
    default         reduce using rule 240 (EXP -> current_time .)
    null            reduce using rule 240 (EXP -> current_time .)
    primary         reduce using rule 240 (EXP -> current_time .)
    references      reduce using rule 240 (EXP -> current_time .)
    asc             reduce using rule 240 (EXP -> current_time .)
    desc            reduce using rule 240 (EXP -> current_time .)


state 61

    (241) EXP -> current_date .

    r_from          reduce using rule 241 (EXP -> current_date .)
    coma            reduce using rule 241 (EXP -> current_date .)
    where           reduce using rule 241 (EXP -> current_date .)
    union           reduce using rule 241 (EXP -> current_date .)
    group           reduce using rule 241 (EXP -> current_date .)
    having          reduce using rule 241 (EXP -> current_date .)
    intersect       reduce using rule 241 (EXP -> current_date .)
    except          reduce using rule 241 (EXP -> current_date .)
    order           reduce using rule 241 (EXP -> current_date .)
    limit           reduce using rule 241 (EXP -> current_date .)
    offset          reduce using rule 241 (EXP -> current_date .)
    ptcoma          reduce using rule 241 (EXP -> current_date .)
    mas             reduce using rule 241 (EXP -> current_date .)
    menos           reduce using rule 241 (EXP -> current_date .)
    multiplicacion  reduce using rule 241 (EXP -> current_date .)
    division        reduce using rule 241 (EXP -> current_date .)
    modulo          reduce using rule 241 (EXP -> current_date .)
    elevado         reduce using rule 241 (EXP -> current_date .)
    and             reduce using rule 241 (EXP -> current_date .)
    or              reduce using rule 241 (EXP -> current_date .)
    mayor           reduce using rule 241 (EXP -> current_date .)
    menor           reduce using rule 241 (EXP -> current_date .)
    mayor_igual     reduce using rule 241 (EXP -> current_date .)
    menor_igual     reduce using rule 241 (EXP -> current_date .)
    igual           reduce using rule 241 (EXP -> current_date .)
    diferente1      reduce using rule 241 (EXP -> current_date .)
    diferente2      reduce using rule 241 (EXP -> current_date .)
    punto           reduce using rule 241 (EXP -> current_date .)
    between         reduce using rule 241 (EXP -> current_date .)
    is              reduce using rule 241 (EXP -> current_date .)
    isnull          reduce using rule 241 (EXP -> current_date .)
    notnull         reduce using rule 241 (EXP -> current_date .)
    as              reduce using rule 241 (EXP -> current_date .)
    cadenaString    reduce using rule 241 (EXP -> current_date .)
    id              reduce using rule 241 (EXP -> current_date .)
    cadena          reduce using rule 241 (EXP -> current_date .)
    in              reduce using rule 241 (EXP -> current_date .)
    not             reduce using rule 241 (EXP -> current_date .)
    like            reduce using rule 241 (EXP -> current_date .)
    parc            reduce using rule 241 (EXP -> current_date .)
    then            reduce using rule 241 (EXP -> current_date .)
    end             reduce using rule 241 (EXP -> current_date .)
    else            reduce using rule 241 (EXP -> current_date .)
    when            reduce using rule 241 (EXP -> current_date .)
    constraint      reduce using rule 241 (EXP -> current_date .)
    unique          reduce using rule 241 (EXP -> current_date .)
    check           reduce using rule 241 (EXP -> current_date .)
    default         reduce using rule 241 (EXP -> current_date .)
    null            reduce using rule 241 (EXP -> current_date .)
    primary         reduce using rule 241 (EXP -> current_date .)
    references      reduce using rule 241 (EXP -> current_date .)
    asc             reduce using rule 241 (EXP -> current_date .)
    desc            reduce using rule 241 (EXP -> current_date .)


state 62

    (243) EXP -> interval . cadena

    cadena          shift and go to state 124


state 63

    (244) EXP -> default .

    r_from          reduce using rule 244 (EXP -> default .)
    coma            reduce using rule 244 (EXP -> default .)
    where           reduce using rule 244 (EXP -> default .)
    union           reduce using rule 244 (EXP -> default .)
    group           reduce using rule 244 (EXP -> default .)
    having          reduce using rule 244 (EXP -> default .)
    intersect       reduce using rule 244 (EXP -> default .)
    except          reduce using rule 244 (EXP -> default .)
    order           reduce using rule 244 (EXP -> default .)
    limit           reduce using rule 244 (EXP -> default .)
    offset          reduce using rule 244 (EXP -> default .)
    ptcoma          reduce using rule 244 (EXP -> default .)
    mas             reduce using rule 244 (EXP -> default .)
    menos           reduce using rule 244 (EXP -> default .)
    multiplicacion  reduce using rule 244 (EXP -> default .)
    division        reduce using rule 244 (EXP -> default .)
    modulo          reduce using rule 244 (EXP -> default .)
    elevado         reduce using rule 244 (EXP -> default .)
    and             reduce using rule 244 (EXP -> default .)
    or              reduce using rule 244 (EXP -> default .)
    mayor           reduce using rule 244 (EXP -> default .)
    menor           reduce using rule 244 (EXP -> default .)
    mayor_igual     reduce using rule 244 (EXP -> default .)
    menor_igual     reduce using rule 244 (EXP -> default .)
    igual           reduce using rule 244 (EXP -> default .)
    diferente1      reduce using rule 244 (EXP -> default .)
    diferente2      reduce using rule 244 (EXP -> default .)
    punto           reduce using rule 244 (EXP -> default .)
    between         reduce using rule 244 (EXP -> default .)
    is              reduce using rule 244 (EXP -> default .)
    isnull          reduce using rule 244 (EXP -> default .)
    notnull         reduce using rule 244 (EXP -> default .)
    as              reduce using rule 244 (EXP -> default .)
    cadenaString    reduce using rule 244 (EXP -> default .)
    id              reduce using rule 244 (EXP -> default .)
    cadena          reduce using rule 244 (EXP -> default .)
    in              reduce using rule 244 (EXP -> default .)
    not             reduce using rule 244 (EXP -> default .)
    like            reduce using rule 244 (EXP -> default .)
    parc            reduce using rule 244 (EXP -> default .)
    then            reduce using rule 244 (EXP -> default .)
    end             reduce using rule 244 (EXP -> default .)
    else            reduce using rule 244 (EXP -> default .)
    when            reduce using rule 244 (EXP -> default .)
    constraint      reduce using rule 244 (EXP -> default .)
    unique          reduce using rule 244 (EXP -> default .)
    check           reduce using rule 244 (EXP -> default .)
    default         reduce using rule 244 (EXP -> default .)
    null            reduce using rule 244 (EXP -> default .)
    primary         reduce using rule 244 (EXP -> default .)
    references      reduce using rule 244 (EXP -> default .)
    asc             reduce using rule 244 (EXP -> default .)
    desc            reduce using rule 244 (EXP -> default .)


state 64

    (68) CREATETABLE -> create table . id para LDEF parc ptcoma
    (69) CREATETABLE -> create table . id para LDEF parc HERENCIA ptcoma

    id              shift and go to state 125


state 65

    (94) CREATETYPE -> create type . id as enum para LEXP parc

    id              shift and go to state 126


state 66

    (51) CREATEDB -> create RD . if not exist id
    (52) CREATEDB -> create RD . if not exist id OPCCDB
    (53) CREATEDB -> create RD . id
    (54) CREATEDB -> create RD . id OPCCDB

    if              shift and go to state 127
    id              shift and go to state 128


state 67

    (58) RD -> or . replace databases

    replace         shift and go to state 129


state 68

    (59) RD -> databases .

    if              reduce using rule 59 (RD -> databases .)
    id              reduce using rule 59 (RD -> databases .)


state 69

    (127) UPDATE -> update id . set LCAMPOS where LEXP

    set             shift and go to state 130


state 70

    (130) DELETE -> delete r_from . id where LEXP
    (131) DELETE -> delete r_from . id

    id              shift and go to state 131


state 71

    (27) ALTER -> alter databases . id RO

    id              shift and go to state 132


state 72

    (31) altertable -> alter table . id OP

    id              shift and go to state 133


state 73

    (24) DROP -> drop table . id

    id              shift and go to state 134


state 74

    (25) DROP -> drop databases . if exist id
    (26) DROP -> drop databases . id

    if              shift and go to state 135
    id              shift and go to state 136


state 75

    (22) INSERT -> insert into . id values para LEXP parc
    (23) INSERT -> insert into . id para LEXP parc values para LEXP parc

    id              shift and go to state 137


state 76

    (16) CASE -> case LISTAWHEN . ELSE end
    (17) CASE -> case LISTAWHEN . end
    (18) LISTAWHEN -> LISTAWHEN . WHEN
    (21) ELSE -> . else LEXP
    (20) WHEN -> . when LEXP then LEXP

    end             shift and go to state 139
    else            shift and go to state 141
    when            shift and go to state 78

    ELSE                           shift and go to state 138
    WHEN                           shift and go to state 140

state 77

    (19) LISTAWHEN -> WHEN .

    end             reduce using rule 19 (LISTAWHEN -> WHEN .)
    else            reduce using rule 19 (LISTAWHEN -> WHEN .)
    when            reduce using rule 19 (LISTAWHEN -> WHEN .)


state 78

    (20) WHEN -> when . LEXP then LEXP
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 142
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 79

    (50) SHOWDB -> show dbs .

    ptcoma          reduce using rule 50 (SHOWDB -> show dbs .)


state 80

    (15) instruccion -> use id ptcoma .

    use             reduce using rule 15 (instruccion -> use id ptcoma .)
    select          reduce using rule 15 (instruccion -> use id ptcoma .)
    create          reduce using rule 15 (instruccion -> use id ptcoma .)
    update          reduce using rule 15 (instruccion -> use id ptcoma .)
    delete          reduce using rule 15 (instruccion -> use id ptcoma .)
    alter           reduce using rule 15 (instruccion -> use id ptcoma .)
    drop            reduce using rule 15 (instruccion -> use id ptcoma .)
    insert          reduce using rule 15 (instruccion -> use id ptcoma .)
    case            reduce using rule 15 (instruccion -> use id ptcoma .)
    show            reduce using rule 15 (instruccion -> use id ptcoma .)
    $end            reduce using rule 15 (instruccion -> use id ptcoma .)


state 81

    (95) SELECT -> select distinct LEXP . r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (134) LEXP -> LEXP . coma EXP

    r_from          shift and go to state 143
    coma            shift and go to state 84


state 82

    (96) SELECT -> select LEXP r_from . LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 144
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 83

    (97) SELECT -> select LEXP WHERE . GROUP HAVING COMBINING ORDER LIMIT
    (118) GROUP -> . group by LEXP
    (119) GROUP -> .

  ! shift/reduce conflict for group resolved as shift
    group           shift and go to state 146
    r_from          reduce using rule 119 (GROUP -> .)
    coma            reduce using rule 119 (GROUP -> .)
    where           reduce using rule 119 (GROUP -> .)
    union           reduce using rule 119 (GROUP -> .)
    having          reduce using rule 119 (GROUP -> .)
    intersect       reduce using rule 119 (GROUP -> .)
    except          reduce using rule 119 (GROUP -> .)
    order           reduce using rule 119 (GROUP -> .)
    limit           reduce using rule 119 (GROUP -> .)
    offset          reduce using rule 119 (GROUP -> .)
    ptcoma          reduce using rule 119 (GROUP -> .)
    mas             reduce using rule 119 (GROUP -> .)
    menos           reduce using rule 119 (GROUP -> .)
    multiplicacion  reduce using rule 119 (GROUP -> .)
    division        reduce using rule 119 (GROUP -> .)
    modulo          reduce using rule 119 (GROUP -> .)
    elevado         reduce using rule 119 (GROUP -> .)
    and             reduce using rule 119 (GROUP -> .)
    or              reduce using rule 119 (GROUP -> .)
    mayor           reduce using rule 119 (GROUP -> .)
    menor           reduce using rule 119 (GROUP -> .)
    mayor_igual     reduce using rule 119 (GROUP -> .)
    menor_igual     reduce using rule 119 (GROUP -> .)
    igual           reduce using rule 119 (GROUP -> .)
    diferente1      reduce using rule 119 (GROUP -> .)
    diferente2      reduce using rule 119 (GROUP -> .)
    punto           reduce using rule 119 (GROUP -> .)
    between         reduce using rule 119 (GROUP -> .)
    is              reduce using rule 119 (GROUP -> .)
    isnull          reduce using rule 119 (GROUP -> .)
    notnull         reduce using rule 119 (GROUP -> .)
    as              reduce using rule 119 (GROUP -> .)
    cadenaString    reduce using rule 119 (GROUP -> .)
    id              reduce using rule 119 (GROUP -> .)
    cadena          reduce using rule 119 (GROUP -> .)
    in              reduce using rule 119 (GROUP -> .)
    not             reduce using rule 119 (GROUP -> .)
    like            reduce using rule 119 (GROUP -> .)
    parc            reduce using rule 119 (GROUP -> .)
    then            reduce using rule 119 (GROUP -> .)
    end             reduce using rule 119 (GROUP -> .)
    else            reduce using rule 119 (GROUP -> .)
    when            reduce using rule 119 (GROUP -> .)
    constraint      reduce using rule 119 (GROUP -> .)
    unique          reduce using rule 119 (GROUP -> .)
    check           reduce using rule 119 (GROUP -> .)
    default         reduce using rule 119 (GROUP -> .)
    null            reduce using rule 119 (GROUP -> .)
    primary         reduce using rule 119 (GROUP -> .)
    references      reduce using rule 119 (GROUP -> .)
    asc             reduce using rule 119 (GROUP -> .)
    desc            reduce using rule 119 (GROUP -> .)

  ! group           [ reduce using rule 119 (GROUP -> .) ]

    GROUP                          shift and go to state 145

state 84

    (134) LEXP -> LEXP coma . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    EXP                            shift and go to state 147
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 85

    (106) WHERE -> where . LEXP
    (107) WHERE -> where . EXIST
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (132) EXIST -> . exist para SELECT parc
    (133) EXIST -> . not exist para SELECT parc
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    exist           shift and go to state 150
    not             shift and go to state 151
    mas             shift and go to state 40
    menos           shift and go to state 41
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 148
    EXIST                          shift and go to state 149
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 86

    (108) WHERE -> union . LEXP
    (109) WHERE -> union . all LEXP
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    all             shift and go to state 153
    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 152
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 87

    (177) EXP -> EXP mas . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    EXP                            shift and go to state 154
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 88

    (178) EXP -> EXP menos . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    EXP                            shift and go to state 155
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 89

    (179) EXP -> EXP multiplicacion . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    EXP                            shift and go to state 156
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 90

    (180) EXP -> EXP division . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    EXP                            shift and go to state 157
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 91

    (181) EXP -> EXP modulo . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    EXP                            shift and go to state 158
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 92

    (182) EXP -> EXP elevado . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    EXP                            shift and go to state 159
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 93

    (183) EXP -> EXP and . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    EXP                            shift and go to state 160
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 94

    (184) EXP -> EXP or . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    EXP                            shift and go to state 161
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 95

    (185) EXP -> EXP mayor . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    EXP                            shift and go to state 162
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 96

    (186) EXP -> EXP menor . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    EXP                            shift and go to state 163
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 97

    (187) EXP -> EXP mayor_igual . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    EXP                            shift and go to state 164
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 98

    (188) EXP -> EXP menor_igual . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    EXP                            shift and go to state 165
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 99

    (189) EXP -> EXP igual . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    EXP                            shift and go to state 166
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 100

    (190) EXP -> EXP diferente1 . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    EXP                            shift and go to state 167
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 101

    (191) EXP -> EXP diferente2 . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    EXP                            shift and go to state 168
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 102

    (192) EXP -> EXP punto . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    EXP                            shift and go to state 169
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 103

    (193) EXP -> EXP between . EXP
    (216) EXP -> EXP between . symetric EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    symetric        shift and go to state 171
    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    EXP                            shift and go to state 170
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 104

    (194) EXP -> EXP is . not null
    (195) EXP -> EXP is . null
    (198) EXP -> EXP is . true
    (199) EXP -> EXP is . not true
    (200) EXP -> EXP is . false
    (201) EXP -> EXP is . not false
    (202) EXP -> EXP is . unknown
    (203) EXP -> EXP is . not unknown
    (218) EXP -> EXP is . distinct r_from EXP
    (219) EXP -> EXP is . not distinct r_from EXP

    not             shift and go to state 172
    null            shift and go to state 173
    true            shift and go to state 174
    false           shift and go to state 175
    unknown         shift and go to state 176
    distinct        shift and go to state 177


state 105

    (214) EXP -> EXP not . in para EXP parc
    (215) EXP -> EXP not . between EXP
    (217) EXP -> EXP not . between symetric EXP
    (221) EXP -> EXP not . like cadena

    in              shift and go to state 178
    between         shift and go to state 179
    like            shift and go to state 180


state 106

    (196) EXP -> EXP isnull .

    r_from          reduce using rule 196 (EXP -> EXP isnull .)
    coma            reduce using rule 196 (EXP -> EXP isnull .)
    where           reduce using rule 196 (EXP -> EXP isnull .)
    union           reduce using rule 196 (EXP -> EXP isnull .)
    group           reduce using rule 196 (EXP -> EXP isnull .)
    having          reduce using rule 196 (EXP -> EXP isnull .)
    intersect       reduce using rule 196 (EXP -> EXP isnull .)
    except          reduce using rule 196 (EXP -> EXP isnull .)
    order           reduce using rule 196 (EXP -> EXP isnull .)
    limit           reduce using rule 196 (EXP -> EXP isnull .)
    offset          reduce using rule 196 (EXP -> EXP isnull .)
    ptcoma          reduce using rule 196 (EXP -> EXP isnull .)
    mas             reduce using rule 196 (EXP -> EXP isnull .)
    menos           reduce using rule 196 (EXP -> EXP isnull .)
    multiplicacion  reduce using rule 196 (EXP -> EXP isnull .)
    division        reduce using rule 196 (EXP -> EXP isnull .)
    modulo          reduce using rule 196 (EXP -> EXP isnull .)
    elevado         reduce using rule 196 (EXP -> EXP isnull .)
    and             reduce using rule 196 (EXP -> EXP isnull .)
    or              reduce using rule 196 (EXP -> EXP isnull .)
    mayor           reduce using rule 196 (EXP -> EXP isnull .)
    menor           reduce using rule 196 (EXP -> EXP isnull .)
    mayor_igual     reduce using rule 196 (EXP -> EXP isnull .)
    menor_igual     reduce using rule 196 (EXP -> EXP isnull .)
    igual           reduce using rule 196 (EXP -> EXP isnull .)
    diferente1      reduce using rule 196 (EXP -> EXP isnull .)
    diferente2      reduce using rule 196 (EXP -> EXP isnull .)
    punto           reduce using rule 196 (EXP -> EXP isnull .)
    between         reduce using rule 196 (EXP -> EXP isnull .)
    is              reduce using rule 196 (EXP -> EXP isnull .)
    isnull          reduce using rule 196 (EXP -> EXP isnull .)
    notnull         reduce using rule 196 (EXP -> EXP isnull .)
    as              reduce using rule 196 (EXP -> EXP isnull .)
    cadenaString    reduce using rule 196 (EXP -> EXP isnull .)
    id              reduce using rule 196 (EXP -> EXP isnull .)
    cadena          reduce using rule 196 (EXP -> EXP isnull .)
    in              reduce using rule 196 (EXP -> EXP isnull .)
    not             reduce using rule 196 (EXP -> EXP isnull .)
    like            reduce using rule 196 (EXP -> EXP isnull .)
    parc            reduce using rule 196 (EXP -> EXP isnull .)
    then            reduce using rule 196 (EXP -> EXP isnull .)
    end             reduce using rule 196 (EXP -> EXP isnull .)
    else            reduce using rule 196 (EXP -> EXP isnull .)
    when            reduce using rule 196 (EXP -> EXP isnull .)
    constraint      reduce using rule 196 (EXP -> EXP isnull .)
    unique          reduce using rule 196 (EXP -> EXP isnull .)
    check           reduce using rule 196 (EXP -> EXP isnull .)
    default         reduce using rule 196 (EXP -> EXP isnull .)
    null            reduce using rule 196 (EXP -> EXP isnull .)
    primary         reduce using rule 196 (EXP -> EXP isnull .)
    references      reduce using rule 196 (EXP -> EXP isnull .)
    asc             reduce using rule 196 (EXP -> EXP isnull .)
    desc            reduce using rule 196 (EXP -> EXP isnull .)


state 107

    (197) EXP -> EXP notnull .

    r_from          reduce using rule 197 (EXP -> EXP notnull .)
    coma            reduce using rule 197 (EXP -> EXP notnull .)
    where           reduce using rule 197 (EXP -> EXP notnull .)
    union           reduce using rule 197 (EXP -> EXP notnull .)
    group           reduce using rule 197 (EXP -> EXP notnull .)
    having          reduce using rule 197 (EXP -> EXP notnull .)
    intersect       reduce using rule 197 (EXP -> EXP notnull .)
    except          reduce using rule 197 (EXP -> EXP notnull .)
    order           reduce using rule 197 (EXP -> EXP notnull .)
    limit           reduce using rule 197 (EXP -> EXP notnull .)
    offset          reduce using rule 197 (EXP -> EXP notnull .)
    ptcoma          reduce using rule 197 (EXP -> EXP notnull .)
    mas             reduce using rule 197 (EXP -> EXP notnull .)
    menos           reduce using rule 197 (EXP -> EXP notnull .)
    multiplicacion  reduce using rule 197 (EXP -> EXP notnull .)
    division        reduce using rule 197 (EXP -> EXP notnull .)
    modulo          reduce using rule 197 (EXP -> EXP notnull .)
    elevado         reduce using rule 197 (EXP -> EXP notnull .)
    and             reduce using rule 197 (EXP -> EXP notnull .)
    or              reduce using rule 197 (EXP -> EXP notnull .)
    mayor           reduce using rule 197 (EXP -> EXP notnull .)
    menor           reduce using rule 197 (EXP -> EXP notnull .)
    mayor_igual     reduce using rule 197 (EXP -> EXP notnull .)
    menor_igual     reduce using rule 197 (EXP -> EXP notnull .)
    igual           reduce using rule 197 (EXP -> EXP notnull .)
    diferente1      reduce using rule 197 (EXP -> EXP notnull .)
    diferente2      reduce using rule 197 (EXP -> EXP notnull .)
    punto           reduce using rule 197 (EXP -> EXP notnull .)
    between         reduce using rule 197 (EXP -> EXP notnull .)
    is              reduce using rule 197 (EXP -> EXP notnull .)
    isnull          reduce using rule 197 (EXP -> EXP notnull .)
    notnull         reduce using rule 197 (EXP -> EXP notnull .)
    as              reduce using rule 197 (EXP -> EXP notnull .)
    cadenaString    reduce using rule 197 (EXP -> EXP notnull .)
    id              reduce using rule 197 (EXP -> EXP notnull .)
    cadena          reduce using rule 197 (EXP -> EXP notnull .)
    in              reduce using rule 197 (EXP -> EXP notnull .)
    not             reduce using rule 197 (EXP -> EXP notnull .)
    like            reduce using rule 197 (EXP -> EXP notnull .)
    parc            reduce using rule 197 (EXP -> EXP notnull .)
    then            reduce using rule 197 (EXP -> EXP notnull .)
    end             reduce using rule 197 (EXP -> EXP notnull .)
    else            reduce using rule 197 (EXP -> EXP notnull .)
    when            reduce using rule 197 (EXP -> EXP notnull .)
    constraint      reduce using rule 197 (EXP -> EXP notnull .)
    unique          reduce using rule 197 (EXP -> EXP notnull .)
    check           reduce using rule 197 (EXP -> EXP notnull .)
    default         reduce using rule 197 (EXP -> EXP notnull .)
    null            reduce using rule 197 (EXP -> EXP notnull .)
    primary         reduce using rule 197 (EXP -> EXP notnull .)
    references      reduce using rule 197 (EXP -> EXP notnull .)
    asc             reduce using rule 197 (EXP -> EXP notnull .)
    desc            reduce using rule 197 (EXP -> EXP notnull .)


state 108

    (204) EXP -> EXP as . cadenaString
    (206) EXP -> EXP as . id
    (208) EXP -> EXP as . cadena

    cadenaString    shift and go to state 181
    id              shift and go to state 182
    cadena          shift and go to state 183


state 109

    (205) EXP -> EXP cadenaString .

    r_from          reduce using rule 205 (EXP -> EXP cadenaString .)
    coma            reduce using rule 205 (EXP -> EXP cadenaString .)
    where           reduce using rule 205 (EXP -> EXP cadenaString .)
    union           reduce using rule 205 (EXP -> EXP cadenaString .)
    group           reduce using rule 205 (EXP -> EXP cadenaString .)
    having          reduce using rule 205 (EXP -> EXP cadenaString .)
    intersect       reduce using rule 205 (EXP -> EXP cadenaString .)
    except          reduce using rule 205 (EXP -> EXP cadenaString .)
    order           reduce using rule 205 (EXP -> EXP cadenaString .)
    limit           reduce using rule 205 (EXP -> EXP cadenaString .)
    offset          reduce using rule 205 (EXP -> EXP cadenaString .)
    ptcoma          reduce using rule 205 (EXP -> EXP cadenaString .)
    mas             reduce using rule 205 (EXP -> EXP cadenaString .)
    menos           reduce using rule 205 (EXP -> EXP cadenaString .)
    multiplicacion  reduce using rule 205 (EXP -> EXP cadenaString .)
    division        reduce using rule 205 (EXP -> EXP cadenaString .)
    modulo          reduce using rule 205 (EXP -> EXP cadenaString .)
    elevado         reduce using rule 205 (EXP -> EXP cadenaString .)
    and             reduce using rule 205 (EXP -> EXP cadenaString .)
    or              reduce using rule 205 (EXP -> EXP cadenaString .)
    mayor           reduce using rule 205 (EXP -> EXP cadenaString .)
    menor           reduce using rule 205 (EXP -> EXP cadenaString .)
    mayor_igual     reduce using rule 205 (EXP -> EXP cadenaString .)
    menor_igual     reduce using rule 205 (EXP -> EXP cadenaString .)
    igual           reduce using rule 205 (EXP -> EXP cadenaString .)
    diferente1      reduce using rule 205 (EXP -> EXP cadenaString .)
    diferente2      reduce using rule 205 (EXP -> EXP cadenaString .)
    punto           reduce using rule 205 (EXP -> EXP cadenaString .)
    between         reduce using rule 205 (EXP -> EXP cadenaString .)
    is              reduce using rule 205 (EXP -> EXP cadenaString .)
    isnull          reduce using rule 205 (EXP -> EXP cadenaString .)
    notnull         reduce using rule 205 (EXP -> EXP cadenaString .)
    as              reduce using rule 205 (EXP -> EXP cadenaString .)
    cadenaString    reduce using rule 205 (EXP -> EXP cadenaString .)
    id              reduce using rule 205 (EXP -> EXP cadenaString .)
    cadena          reduce using rule 205 (EXP -> EXP cadenaString .)
    in              reduce using rule 205 (EXP -> EXP cadenaString .)
    not             reduce using rule 205 (EXP -> EXP cadenaString .)
    like            reduce using rule 205 (EXP -> EXP cadenaString .)
    parc            reduce using rule 205 (EXP -> EXP cadenaString .)
    then            reduce using rule 205 (EXP -> EXP cadenaString .)
    end             reduce using rule 205 (EXP -> EXP cadenaString .)
    else            reduce using rule 205 (EXP -> EXP cadenaString .)
    when            reduce using rule 205 (EXP -> EXP cadenaString .)
    constraint      reduce using rule 205 (EXP -> EXP cadenaString .)
    unique          reduce using rule 205 (EXP -> EXP cadenaString .)
    check           reduce using rule 205 (EXP -> EXP cadenaString .)
    default         reduce using rule 205 (EXP -> EXP cadenaString .)
    null            reduce using rule 205 (EXP -> EXP cadenaString .)
    primary         reduce using rule 205 (EXP -> EXP cadenaString .)
    references      reduce using rule 205 (EXP -> EXP cadenaString .)
    asc             reduce using rule 205 (EXP -> EXP cadenaString .)
    desc            reduce using rule 205 (EXP -> EXP cadenaString .)


state 110

    (207) EXP -> EXP id .

    r_from          reduce using rule 207 (EXP -> EXP id .)
    coma            reduce using rule 207 (EXP -> EXP id .)
    where           reduce using rule 207 (EXP -> EXP id .)
    union           reduce using rule 207 (EXP -> EXP id .)
    group           reduce using rule 207 (EXP -> EXP id .)
    having          reduce using rule 207 (EXP -> EXP id .)
    intersect       reduce using rule 207 (EXP -> EXP id .)
    except          reduce using rule 207 (EXP -> EXP id .)
    order           reduce using rule 207 (EXP -> EXP id .)
    limit           reduce using rule 207 (EXP -> EXP id .)
    offset          reduce using rule 207 (EXP -> EXP id .)
    ptcoma          reduce using rule 207 (EXP -> EXP id .)
    mas             reduce using rule 207 (EXP -> EXP id .)
    menos           reduce using rule 207 (EXP -> EXP id .)
    multiplicacion  reduce using rule 207 (EXP -> EXP id .)
    division        reduce using rule 207 (EXP -> EXP id .)
    modulo          reduce using rule 207 (EXP -> EXP id .)
    elevado         reduce using rule 207 (EXP -> EXP id .)
    and             reduce using rule 207 (EXP -> EXP id .)
    or              reduce using rule 207 (EXP -> EXP id .)
    mayor           reduce using rule 207 (EXP -> EXP id .)
    menor           reduce using rule 207 (EXP -> EXP id .)
    mayor_igual     reduce using rule 207 (EXP -> EXP id .)
    menor_igual     reduce using rule 207 (EXP -> EXP id .)
    igual           reduce using rule 207 (EXP -> EXP id .)
    diferente1      reduce using rule 207 (EXP -> EXP id .)
    diferente2      reduce using rule 207 (EXP -> EXP id .)
    punto           reduce using rule 207 (EXP -> EXP id .)
    between         reduce using rule 207 (EXP -> EXP id .)
    is              reduce using rule 207 (EXP -> EXP id .)
    isnull          reduce using rule 207 (EXP -> EXP id .)
    notnull         reduce using rule 207 (EXP -> EXP id .)
    as              reduce using rule 207 (EXP -> EXP id .)
    cadenaString    reduce using rule 207 (EXP -> EXP id .)
    id              reduce using rule 207 (EXP -> EXP id .)
    cadena          reduce using rule 207 (EXP -> EXP id .)
    in              reduce using rule 207 (EXP -> EXP id .)
    not             reduce using rule 207 (EXP -> EXP id .)
    like            reduce using rule 207 (EXP -> EXP id .)
    parc            reduce using rule 207 (EXP -> EXP id .)
    then            reduce using rule 207 (EXP -> EXP id .)
    end             reduce using rule 207 (EXP -> EXP id .)
    else            reduce using rule 207 (EXP -> EXP id .)
    when            reduce using rule 207 (EXP -> EXP id .)
    constraint      reduce using rule 207 (EXP -> EXP id .)
    unique          reduce using rule 207 (EXP -> EXP id .)
    check           reduce using rule 207 (EXP -> EXP id .)
    default         reduce using rule 207 (EXP -> EXP id .)
    null            reduce using rule 207 (EXP -> EXP id .)
    primary         reduce using rule 207 (EXP -> EXP id .)
    references      reduce using rule 207 (EXP -> EXP id .)
    asc             reduce using rule 207 (EXP -> EXP id .)
    desc            reduce using rule 207 (EXP -> EXP id .)


state 111

    (209) EXP -> EXP cadena .

    r_from          reduce using rule 209 (EXP -> EXP cadena .)
    coma            reduce using rule 209 (EXP -> EXP cadena .)
    where           reduce using rule 209 (EXP -> EXP cadena .)
    union           reduce using rule 209 (EXP -> EXP cadena .)
    group           reduce using rule 209 (EXP -> EXP cadena .)
    having          reduce using rule 209 (EXP -> EXP cadena .)
    intersect       reduce using rule 209 (EXP -> EXP cadena .)
    except          reduce using rule 209 (EXP -> EXP cadena .)
    order           reduce using rule 209 (EXP -> EXP cadena .)
    limit           reduce using rule 209 (EXP -> EXP cadena .)
    offset          reduce using rule 209 (EXP -> EXP cadena .)
    ptcoma          reduce using rule 209 (EXP -> EXP cadena .)
    mas             reduce using rule 209 (EXP -> EXP cadena .)
    menos           reduce using rule 209 (EXP -> EXP cadena .)
    multiplicacion  reduce using rule 209 (EXP -> EXP cadena .)
    division        reduce using rule 209 (EXP -> EXP cadena .)
    modulo          reduce using rule 209 (EXP -> EXP cadena .)
    elevado         reduce using rule 209 (EXP -> EXP cadena .)
    and             reduce using rule 209 (EXP -> EXP cadena .)
    or              reduce using rule 209 (EXP -> EXP cadena .)
    mayor           reduce using rule 209 (EXP -> EXP cadena .)
    menor           reduce using rule 209 (EXP -> EXP cadena .)
    mayor_igual     reduce using rule 209 (EXP -> EXP cadena .)
    menor_igual     reduce using rule 209 (EXP -> EXP cadena .)
    igual           reduce using rule 209 (EXP -> EXP cadena .)
    diferente1      reduce using rule 209 (EXP -> EXP cadena .)
    diferente2      reduce using rule 209 (EXP -> EXP cadena .)
    punto           reduce using rule 209 (EXP -> EXP cadena .)
    between         reduce using rule 209 (EXP -> EXP cadena .)
    is              reduce using rule 209 (EXP -> EXP cadena .)
    isnull          reduce using rule 209 (EXP -> EXP cadena .)
    notnull         reduce using rule 209 (EXP -> EXP cadena .)
    as              reduce using rule 209 (EXP -> EXP cadena .)
    cadenaString    reduce using rule 209 (EXP -> EXP cadena .)
    id              reduce using rule 209 (EXP -> EXP cadena .)
    cadena          reduce using rule 209 (EXP -> EXP cadena .)
    in              reduce using rule 209 (EXP -> EXP cadena .)
    not             reduce using rule 209 (EXP -> EXP cadena .)
    like            reduce using rule 209 (EXP -> EXP cadena .)
    parc            reduce using rule 209 (EXP -> EXP cadena .)
    then            reduce using rule 209 (EXP -> EXP cadena .)
    end             reduce using rule 209 (EXP -> EXP cadena .)
    else            reduce using rule 209 (EXP -> EXP cadena .)
    when            reduce using rule 209 (EXP -> EXP cadena .)
    constraint      reduce using rule 209 (EXP -> EXP cadena .)
    unique          reduce using rule 209 (EXP -> EXP cadena .)
    check           reduce using rule 209 (EXP -> EXP cadena .)
    default         reduce using rule 209 (EXP -> EXP cadena .)
    null            reduce using rule 209 (EXP -> EXP cadena .)
    primary         reduce using rule 209 (EXP -> EXP cadena .)
    references      reduce using rule 209 (EXP -> EXP cadena .)
    asc             reduce using rule 209 (EXP -> EXP cadena .)
    desc            reduce using rule 209 (EXP -> EXP cadena .)


state 112

    (213) EXP -> EXP in . para EXP parc

    para            shift and go to state 184


state 113

    (220) EXP -> EXP like . cadena

    cadena          shift and go to state 185


state 114

    (210) EXP -> mas EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

    r_from          reduce using rule 210 (EXP -> mas EXP .)
    coma            reduce using rule 210 (EXP -> mas EXP .)
    where           reduce using rule 210 (EXP -> mas EXP .)
    union           reduce using rule 210 (EXP -> mas EXP .)
    group           reduce using rule 210 (EXP -> mas EXP .)
    having          reduce using rule 210 (EXP -> mas EXP .)
    intersect       reduce using rule 210 (EXP -> mas EXP .)
    except          reduce using rule 210 (EXP -> mas EXP .)
    order           reduce using rule 210 (EXP -> mas EXP .)
    limit           reduce using rule 210 (EXP -> mas EXP .)
    offset          reduce using rule 210 (EXP -> mas EXP .)
    ptcoma          reduce using rule 210 (EXP -> mas EXP .)
    mas             reduce using rule 210 (EXP -> mas EXP .)
    menos           reduce using rule 210 (EXP -> mas EXP .)
    multiplicacion  reduce using rule 210 (EXP -> mas EXP .)
    division        reduce using rule 210 (EXP -> mas EXP .)
    modulo          reduce using rule 210 (EXP -> mas EXP .)
    elevado         reduce using rule 210 (EXP -> mas EXP .)
    and             reduce using rule 210 (EXP -> mas EXP .)
    or              reduce using rule 210 (EXP -> mas EXP .)
    mayor           reduce using rule 210 (EXP -> mas EXP .)
    menor           reduce using rule 210 (EXP -> mas EXP .)
    mayor_igual     reduce using rule 210 (EXP -> mas EXP .)
    menor_igual     reduce using rule 210 (EXP -> mas EXP .)
    igual           reduce using rule 210 (EXP -> mas EXP .)
    diferente1      reduce using rule 210 (EXP -> mas EXP .)
    diferente2      reduce using rule 210 (EXP -> mas EXP .)
    between         reduce using rule 210 (EXP -> mas EXP .)
    is              reduce using rule 210 (EXP -> mas EXP .)
    isnull          reduce using rule 210 (EXP -> mas EXP .)
    notnull         reduce using rule 210 (EXP -> mas EXP .)
    as              reduce using rule 210 (EXP -> mas EXP .)
    cadenaString    reduce using rule 210 (EXP -> mas EXP .)
    id              reduce using rule 210 (EXP -> mas EXP .)
    cadena          reduce using rule 210 (EXP -> mas EXP .)
    in              reduce using rule 210 (EXP -> mas EXP .)
    not             reduce using rule 210 (EXP -> mas EXP .)
    like            reduce using rule 210 (EXP -> mas EXP .)
    parc            reduce using rule 210 (EXP -> mas EXP .)
    then            reduce using rule 210 (EXP -> mas EXP .)
    end             reduce using rule 210 (EXP -> mas EXP .)
    else            reduce using rule 210 (EXP -> mas EXP .)
    when            reduce using rule 210 (EXP -> mas EXP .)
    constraint      reduce using rule 210 (EXP -> mas EXP .)
    unique          reduce using rule 210 (EXP -> mas EXP .)
    check           reduce using rule 210 (EXP -> mas EXP .)
    default         reduce using rule 210 (EXP -> mas EXP .)
    null            reduce using rule 210 (EXP -> mas EXP .)
    primary         reduce using rule 210 (EXP -> mas EXP .)
    references      reduce using rule 210 (EXP -> mas EXP .)
    asc             reduce using rule 210 (EXP -> mas EXP .)
    desc            reduce using rule 210 (EXP -> mas EXP .)
    punto           shift and go to state 102

  ! punto           [ reduce using rule 210 (EXP -> mas EXP .) ]
  ! mas             [ shift and go to state 87 ]
  ! menos           [ shift and go to state 88 ]
  ! multiplicacion  [ shift and go to state 89 ]
  ! division        [ shift and go to state 90 ]
  ! modulo          [ shift and go to state 91 ]
  ! elevado         [ shift and go to state 92 ]
  ! and             [ shift and go to state 93 ]
  ! or              [ shift and go to state 94 ]
  ! mayor           [ shift and go to state 95 ]
  ! menor           [ shift and go to state 96 ]
  ! mayor_igual     [ shift and go to state 97 ]
  ! menor_igual     [ shift and go to state 98 ]
  ! igual           [ shift and go to state 99 ]
  ! diferente1      [ shift and go to state 100 ]
  ! diferente2      [ shift and go to state 101 ]
  ! between         [ shift and go to state 103 ]
  ! is              [ shift and go to state 104 ]
  ! isnull          [ shift and go to state 106 ]
  ! notnull         [ shift and go to state 107 ]
  ! as              [ shift and go to state 108 ]
  ! cadenaString    [ shift and go to state 109 ]
  ! id              [ shift and go to state 110 ]
  ! cadena          [ shift and go to state 111 ]
  ! in              [ shift and go to state 112 ]
  ! not             [ shift and go to state 105 ]
  ! like            [ shift and go to state 113 ]


state 115

    (211) EXP -> menos EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

    r_from          reduce using rule 211 (EXP -> menos EXP .)
    coma            reduce using rule 211 (EXP -> menos EXP .)
    where           reduce using rule 211 (EXP -> menos EXP .)
    union           reduce using rule 211 (EXP -> menos EXP .)
    group           reduce using rule 211 (EXP -> menos EXP .)
    having          reduce using rule 211 (EXP -> menos EXP .)
    intersect       reduce using rule 211 (EXP -> menos EXP .)
    except          reduce using rule 211 (EXP -> menos EXP .)
    order           reduce using rule 211 (EXP -> menos EXP .)
    limit           reduce using rule 211 (EXP -> menos EXP .)
    offset          reduce using rule 211 (EXP -> menos EXP .)
    ptcoma          reduce using rule 211 (EXP -> menos EXP .)
    mas             reduce using rule 211 (EXP -> menos EXP .)
    menos           reduce using rule 211 (EXP -> menos EXP .)
    multiplicacion  reduce using rule 211 (EXP -> menos EXP .)
    division        reduce using rule 211 (EXP -> menos EXP .)
    modulo          reduce using rule 211 (EXP -> menos EXP .)
    elevado         reduce using rule 211 (EXP -> menos EXP .)
    and             reduce using rule 211 (EXP -> menos EXP .)
    or              reduce using rule 211 (EXP -> menos EXP .)
    mayor           reduce using rule 211 (EXP -> menos EXP .)
    menor           reduce using rule 211 (EXP -> menos EXP .)
    mayor_igual     reduce using rule 211 (EXP -> menos EXP .)
    menor_igual     reduce using rule 211 (EXP -> menos EXP .)
    igual           reduce using rule 211 (EXP -> menos EXP .)
    diferente1      reduce using rule 211 (EXP -> menos EXP .)
    diferente2      reduce using rule 211 (EXP -> menos EXP .)
    between         reduce using rule 211 (EXP -> menos EXP .)
    is              reduce using rule 211 (EXP -> menos EXP .)
    isnull          reduce using rule 211 (EXP -> menos EXP .)
    notnull         reduce using rule 211 (EXP -> menos EXP .)
    as              reduce using rule 211 (EXP -> menos EXP .)
    cadenaString    reduce using rule 211 (EXP -> menos EXP .)
    id              reduce using rule 211 (EXP -> menos EXP .)
    cadena          reduce using rule 211 (EXP -> menos EXP .)
    in              reduce using rule 211 (EXP -> menos EXP .)
    not             reduce using rule 211 (EXP -> menos EXP .)
    like            reduce using rule 211 (EXP -> menos EXP .)
    parc            reduce using rule 211 (EXP -> menos EXP .)
    then            reduce using rule 211 (EXP -> menos EXP .)
    end             reduce using rule 211 (EXP -> menos EXP .)
    else            reduce using rule 211 (EXP -> menos EXP .)
    when            reduce using rule 211 (EXP -> menos EXP .)
    constraint      reduce using rule 211 (EXP -> menos EXP .)
    unique          reduce using rule 211 (EXP -> menos EXP .)
    check           reduce using rule 211 (EXP -> menos EXP .)
    default         reduce using rule 211 (EXP -> menos EXP .)
    null            reduce using rule 211 (EXP -> menos EXP .)
    primary         reduce using rule 211 (EXP -> menos EXP .)
    references      reduce using rule 211 (EXP -> menos EXP .)
    asc             reduce using rule 211 (EXP -> menos EXP .)
    desc            reduce using rule 211 (EXP -> menos EXP .)
    punto           shift and go to state 102

  ! punto           [ reduce using rule 211 (EXP -> menos EXP .) ]
  ! mas             [ shift and go to state 87 ]
  ! menos           [ shift and go to state 88 ]
  ! multiplicacion  [ shift and go to state 89 ]
  ! division        [ shift and go to state 90 ]
  ! modulo          [ shift and go to state 91 ]
  ! elevado         [ shift and go to state 92 ]
  ! and             [ shift and go to state 93 ]
  ! or              [ shift and go to state 94 ]
  ! mayor           [ shift and go to state 95 ]
  ! menor           [ shift and go to state 96 ]
  ! mayor_igual     [ shift and go to state 97 ]
  ! menor_igual     [ shift and go to state 98 ]
  ! igual           [ shift and go to state 99 ]
  ! diferente1      [ shift and go to state 100 ]
  ! diferente2      [ shift and go to state 101 ]
  ! between         [ shift and go to state 103 ]
  ! is              [ shift and go to state 104 ]
  ! isnull          [ shift and go to state 106 ]
  ! notnull         [ shift and go to state 107 ]
  ! as              [ shift and go to state 108 ]
  ! cadenaString    [ shift and go to state 109 ]
  ! id              [ shift and go to state 110 ]
  ! cadena          [ shift and go to state 111 ]
  ! in              [ shift and go to state 112 ]
  ! not             [ shift and go to state 105 ]
  ! like            [ shift and go to state 113 ]


state 116

    (212) EXP -> not EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

    r_from          reduce using rule 212 (EXP -> not EXP .)
    coma            reduce using rule 212 (EXP -> not EXP .)
    where           reduce using rule 212 (EXP -> not EXP .)
    union           reduce using rule 212 (EXP -> not EXP .)
    group           reduce using rule 212 (EXP -> not EXP .)
    having          reduce using rule 212 (EXP -> not EXP .)
    intersect       reduce using rule 212 (EXP -> not EXP .)
    except          reduce using rule 212 (EXP -> not EXP .)
    order           reduce using rule 212 (EXP -> not EXP .)
    limit           reduce using rule 212 (EXP -> not EXP .)
    offset          reduce using rule 212 (EXP -> not EXP .)
    ptcoma          reduce using rule 212 (EXP -> not EXP .)
    and             reduce using rule 212 (EXP -> not EXP .)
    or              reduce using rule 212 (EXP -> not EXP .)
    between         reduce using rule 212 (EXP -> not EXP .)
    is              reduce using rule 212 (EXP -> not EXP .)
    isnull          reduce using rule 212 (EXP -> not EXP .)
    notnull         reduce using rule 212 (EXP -> not EXP .)
    as              reduce using rule 212 (EXP -> not EXP .)
    cadenaString    reduce using rule 212 (EXP -> not EXP .)
    id              reduce using rule 212 (EXP -> not EXP .)
    cadena          reduce using rule 212 (EXP -> not EXP .)
    in              reduce using rule 212 (EXP -> not EXP .)
    like            reduce using rule 212 (EXP -> not EXP .)
    parc            reduce using rule 212 (EXP -> not EXP .)
    then            reduce using rule 212 (EXP -> not EXP .)
    end             reduce using rule 212 (EXP -> not EXP .)
    else            reduce using rule 212 (EXP -> not EXP .)
    when            reduce using rule 212 (EXP -> not EXP .)
    constraint      reduce using rule 212 (EXP -> not EXP .)
    unique          reduce using rule 212 (EXP -> not EXP .)
    check           reduce using rule 212 (EXP -> not EXP .)
    default         reduce using rule 212 (EXP -> not EXP .)
    null            reduce using rule 212 (EXP -> not EXP .)
    primary         reduce using rule 212 (EXP -> not EXP .)
    references      reduce using rule 212 (EXP -> not EXP .)
    asc             reduce using rule 212 (EXP -> not EXP .)
    desc            reduce using rule 212 (EXP -> not EXP .)
    mas             shift and go to state 87
    menos           shift and go to state 88
    multiplicacion  shift and go to state 89
    division        shift and go to state 90
    modulo          shift and go to state 91
    elevado         shift and go to state 92
    mayor           shift and go to state 95
    menor           shift and go to state 96
    mayor_igual     shift and go to state 97
    menor_igual     shift and go to state 98
    igual           shift and go to state 99
    diferente1      shift and go to state 100
    diferente2      shift and go to state 101
    punto           shift and go to state 102
    not             shift and go to state 105

  ! mas             [ reduce using rule 212 (EXP -> not EXP .) ]
  ! menos           [ reduce using rule 212 (EXP -> not EXP .) ]
  ! multiplicacion  [ reduce using rule 212 (EXP -> not EXP .) ]
  ! division        [ reduce using rule 212 (EXP -> not EXP .) ]
  ! modulo          [ reduce using rule 212 (EXP -> not EXP .) ]
  ! elevado         [ reduce using rule 212 (EXP -> not EXP .) ]
  ! mayor           [ reduce using rule 212 (EXP -> not EXP .) ]
  ! menor           [ reduce using rule 212 (EXP -> not EXP .) ]
  ! mayor_igual     [ reduce using rule 212 (EXP -> not EXP .) ]
  ! menor_igual     [ reduce using rule 212 (EXP -> not EXP .) ]
  ! igual           [ reduce using rule 212 (EXP -> not EXP .) ]
  ! diferente1      [ reduce using rule 212 (EXP -> not EXP .) ]
  ! diferente2      [ reduce using rule 212 (EXP -> not EXP .) ]
  ! punto           [ reduce using rule 212 (EXP -> not EXP .) ]
  ! not             [ reduce using rule 212 (EXP -> not EXP .) ]
  ! and             [ shift and go to state 93 ]
  ! or              [ shift and go to state 94 ]
  ! between         [ shift and go to state 103 ]
  ! is              [ shift and go to state 104 ]
  ! isnull          [ shift and go to state 106 ]
  ! notnull         [ shift and go to state 107 ]
  ! as              [ shift and go to state 108 ]
  ! cadenaString    [ shift and go to state 109 ]
  ! id              [ shift and go to state 110 ]
  ! cadena          [ shift and go to state 111 ]
  ! in              [ shift and go to state 112 ]
  ! like            [ shift and go to state 113 ]


state 117

    (225) EXP -> id para . LEXP parc
    (226) EXP -> id para . parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    parc            shift and go to state 187
    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 186
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 118

    (224) EXP -> para EXP . parc
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

    parc            shift and go to state 188
    mas             shift and go to state 87
    menos           shift and go to state 88
    multiplicacion  shift and go to state 89
    division        shift and go to state 90
    modulo          shift and go to state 91
    elevado         shift and go to state 92
    and             shift and go to state 93
    or              shift and go to state 94
    mayor           shift and go to state 95
    menor           shift and go to state 96
    mayor_igual     shift and go to state 97
    menor_igual     shift and go to state 98
    igual           shift and go to state 99
    diferente1      shift and go to state 100
    diferente2      shift and go to state 101
    punto           shift and go to state 102
    between         shift and go to state 103
    is              shift and go to state 104
    isnull          shift and go to state 106
    notnull         shift and go to state 107
    as              shift and go to state 108
    cadenaString    shift and go to state 109
    id              shift and go to state 110
    cadena          shift and go to state 111
    in              shift and go to state 112
    not             shift and go to state 105
    like            shift and go to state 113


state 119

    (227) EXP -> any para . LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 189
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 120

    (228) EXP -> all para . LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 190
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 121

    (229) EXP -> some para . LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 191
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 122

    (230) EXP -> extract para . FIELDS r_from timestamp cadena parc
    (171) FIELDS -> . year
    (172) FIELDS -> . month
    (173) FIELDS -> . day
    (174) FIELDS -> . hour
    (175) FIELDS -> . minute
    (176) FIELDS -> . second

    year            shift and go to state 193
    month           shift and go to state 194
    day             shift and go to state 195
    hour            shift and go to state 196
    minute          shift and go to state 197
    second          shift and go to state 198

    FIELDS                         shift and go to state 192

state 123

    (242) EXP -> timestamp cadena .

    r_from          reduce using rule 242 (EXP -> timestamp cadena .)
    coma            reduce using rule 242 (EXP -> timestamp cadena .)
    where           reduce using rule 242 (EXP -> timestamp cadena .)
    union           reduce using rule 242 (EXP -> timestamp cadena .)
    group           reduce using rule 242 (EXP -> timestamp cadena .)
    having          reduce using rule 242 (EXP -> timestamp cadena .)
    intersect       reduce using rule 242 (EXP -> timestamp cadena .)
    except          reduce using rule 242 (EXP -> timestamp cadena .)
    order           reduce using rule 242 (EXP -> timestamp cadena .)
    limit           reduce using rule 242 (EXP -> timestamp cadena .)
    offset          reduce using rule 242 (EXP -> timestamp cadena .)
    ptcoma          reduce using rule 242 (EXP -> timestamp cadena .)
    mas             reduce using rule 242 (EXP -> timestamp cadena .)
    menos           reduce using rule 242 (EXP -> timestamp cadena .)
    multiplicacion  reduce using rule 242 (EXP -> timestamp cadena .)
    division        reduce using rule 242 (EXP -> timestamp cadena .)
    modulo          reduce using rule 242 (EXP -> timestamp cadena .)
    elevado         reduce using rule 242 (EXP -> timestamp cadena .)
    and             reduce using rule 242 (EXP -> timestamp cadena .)
    or              reduce using rule 242 (EXP -> timestamp cadena .)
    mayor           reduce using rule 242 (EXP -> timestamp cadena .)
    menor           reduce using rule 242 (EXP -> timestamp cadena .)
    mayor_igual     reduce using rule 242 (EXP -> timestamp cadena .)
    menor_igual     reduce using rule 242 (EXP -> timestamp cadena .)
    igual           reduce using rule 242 (EXP -> timestamp cadena .)
    diferente1      reduce using rule 242 (EXP -> timestamp cadena .)
    diferente2      reduce using rule 242 (EXP -> timestamp cadena .)
    punto           reduce using rule 242 (EXP -> timestamp cadena .)
    between         reduce using rule 242 (EXP -> timestamp cadena .)
    is              reduce using rule 242 (EXP -> timestamp cadena .)
    isnull          reduce using rule 242 (EXP -> timestamp cadena .)
    notnull         reduce using rule 242 (EXP -> timestamp cadena .)
    as              reduce using rule 242 (EXP -> timestamp cadena .)
    cadenaString    reduce using rule 242 (EXP -> timestamp cadena .)
    id              reduce using rule 242 (EXP -> timestamp cadena .)
    cadena          reduce using rule 242 (EXP -> timestamp cadena .)
    in              reduce using rule 242 (EXP -> timestamp cadena .)
    not             reduce using rule 242 (EXP -> timestamp cadena .)
    like            reduce using rule 242 (EXP -> timestamp cadena .)
    parc            reduce using rule 242 (EXP -> timestamp cadena .)
    then            reduce using rule 242 (EXP -> timestamp cadena .)
    end             reduce using rule 242 (EXP -> timestamp cadena .)
    else            reduce using rule 242 (EXP -> timestamp cadena .)
    when            reduce using rule 242 (EXP -> timestamp cadena .)
    constraint      reduce using rule 242 (EXP -> timestamp cadena .)
    unique          reduce using rule 242 (EXP -> timestamp cadena .)
    check           reduce using rule 242 (EXP -> timestamp cadena .)
    default         reduce using rule 242 (EXP -> timestamp cadena .)
    null            reduce using rule 242 (EXP -> timestamp cadena .)
    primary         reduce using rule 242 (EXP -> timestamp cadena .)
    references      reduce using rule 242 (EXP -> timestamp cadena .)
    asc             reduce using rule 242 (EXP -> timestamp cadena .)
    desc            reduce using rule 242 (EXP -> timestamp cadena .)


state 124

    (243) EXP -> interval cadena .

    r_from          reduce using rule 243 (EXP -> interval cadena .)
    coma            reduce using rule 243 (EXP -> interval cadena .)
    where           reduce using rule 243 (EXP -> interval cadena .)
    union           reduce using rule 243 (EXP -> interval cadena .)
    group           reduce using rule 243 (EXP -> interval cadena .)
    having          reduce using rule 243 (EXP -> interval cadena .)
    intersect       reduce using rule 243 (EXP -> interval cadena .)
    except          reduce using rule 243 (EXP -> interval cadena .)
    order           reduce using rule 243 (EXP -> interval cadena .)
    limit           reduce using rule 243 (EXP -> interval cadena .)
    offset          reduce using rule 243 (EXP -> interval cadena .)
    ptcoma          reduce using rule 243 (EXP -> interval cadena .)
    mas             reduce using rule 243 (EXP -> interval cadena .)
    menos           reduce using rule 243 (EXP -> interval cadena .)
    multiplicacion  reduce using rule 243 (EXP -> interval cadena .)
    division        reduce using rule 243 (EXP -> interval cadena .)
    modulo          reduce using rule 243 (EXP -> interval cadena .)
    elevado         reduce using rule 243 (EXP -> interval cadena .)
    and             reduce using rule 243 (EXP -> interval cadena .)
    or              reduce using rule 243 (EXP -> interval cadena .)
    mayor           reduce using rule 243 (EXP -> interval cadena .)
    menor           reduce using rule 243 (EXP -> interval cadena .)
    mayor_igual     reduce using rule 243 (EXP -> interval cadena .)
    menor_igual     reduce using rule 243 (EXP -> interval cadena .)
    igual           reduce using rule 243 (EXP -> interval cadena .)
    diferente1      reduce using rule 243 (EXP -> interval cadena .)
    diferente2      reduce using rule 243 (EXP -> interval cadena .)
    punto           reduce using rule 243 (EXP -> interval cadena .)
    between         reduce using rule 243 (EXP -> interval cadena .)
    is              reduce using rule 243 (EXP -> interval cadena .)
    isnull          reduce using rule 243 (EXP -> interval cadena .)
    notnull         reduce using rule 243 (EXP -> interval cadena .)
    as              reduce using rule 243 (EXP -> interval cadena .)
    cadenaString    reduce using rule 243 (EXP -> interval cadena .)
    id              reduce using rule 243 (EXP -> interval cadena .)
    cadena          reduce using rule 243 (EXP -> interval cadena .)
    in              reduce using rule 243 (EXP -> interval cadena .)
    not             reduce using rule 243 (EXP -> interval cadena .)
    like            reduce using rule 243 (EXP -> interval cadena .)
    parc            reduce using rule 243 (EXP -> interval cadena .)
    then            reduce using rule 243 (EXP -> interval cadena .)
    end             reduce using rule 243 (EXP -> interval cadena .)
    else            reduce using rule 243 (EXP -> interval cadena .)
    when            reduce using rule 243 (EXP -> interval cadena .)
    constraint      reduce using rule 243 (EXP -> interval cadena .)
    unique          reduce using rule 243 (EXP -> interval cadena .)
    check           reduce using rule 243 (EXP -> interval cadena .)
    default         reduce using rule 243 (EXP -> interval cadena .)
    null            reduce using rule 243 (EXP -> interval cadena .)
    primary         reduce using rule 243 (EXP -> interval cadena .)
    references      reduce using rule 243 (EXP -> interval cadena .)
    asc             reduce using rule 243 (EXP -> interval cadena .)
    desc            reduce using rule 243 (EXP -> interval cadena .)


state 125

    (68) CREATETABLE -> create table id . para LDEF parc ptcoma
    (69) CREATETABLE -> create table id . para LDEF parc HERENCIA ptcoma

    para            shift and go to state 199


state 126

    (94) CREATETYPE -> create type id . as enum para LEXP parc

    as              shift and go to state 200


state 127

    (51) CREATEDB -> create RD if . not exist id
    (52) CREATEDB -> create RD if . not exist id OPCCDB

    not             shift and go to state 201


state 128

    (53) CREATEDB -> create RD id .
    (54) CREATEDB -> create RD id . OPCCDB
    (55) OPCCDB -> . PROPIETARIO
    (56) OPCCDB -> . MODO
    (57) OPCCDB -> . PROPIETARIO MODO
    (60) PROPIETARIO -> . owner igual id
    (61) PROPIETARIO -> . owner id
    (62) PROPIETARIO -> . owner igual cadena
    (63) PROPIETARIO -> . owner cadena
    (64) PROPIETARIO -> . owner igual cadenaString
    (65) PROPIETARIO -> . owner cadenaString
    (66) MODO -> . mode igual int
    (67) MODO -> . mode int

    ptcoma          reduce using rule 53 (CREATEDB -> create RD id .)
    owner           shift and go to state 205
    mode            shift and go to state 206

    OPCCDB                         shift and go to state 202
    PROPIETARIO                    shift and go to state 203
    MODO                           shift and go to state 204

state 129

    (58) RD -> or replace . databases

    databases       shift and go to state 207


state 130

    (127) UPDATE -> update id set . LCAMPOS where LEXP
    (128) LCAMPOS -> . LCAMPOS id igual EXP
    (129) LCAMPOS -> . id igual EXP

    id              shift and go to state 208

    LCAMPOS                        shift and go to state 209

state 131

    (130) DELETE -> delete r_from id . where LEXP
    (131) DELETE -> delete r_from id .

    where           shift and go to state 210
    ptcoma          reduce using rule 131 (DELETE -> delete r_from id .)


state 132

    (27) ALTER -> alter databases id . RO
    (29) RO -> . rename to id
    (30) RO -> . owner to id

    rename          shift and go to state 212
    owner           shift and go to state 213

    RO                             shift and go to state 211

state 133

    (31) altertable -> alter table id . OP
    (32) OP -> . add ADD
    (33) OP -> . drop column ALTERDROP
    (34) OP -> . alter column id set not null
    (35) OP -> . alter column id set null
    (36) OP -> . listaalc
    (37) OP -> . drop ALTERDROP
    (38) OP -> . rename column id to id
    (39) listaalc -> . listaalc coma alc
    (40) listaalc -> . alc
    (41) alc -> . alter column id type TIPO

    add             shift and go to state 216
    drop            shift and go to state 217
    alter           shift and go to state 214
    rename          shift and go to state 219

    OP                             shift and go to state 215
    listaalc                       shift and go to state 218
    alc                            shift and go to state 220

state 134

    (24) DROP -> drop table id .

    ptcoma          reduce using rule 24 (DROP -> drop table id .)


state 135

    (25) DROP -> drop databases if . exist id

    exist           shift and go to state 221


state 136

    (26) DROP -> drop databases id .

    ptcoma          reduce using rule 26 (DROP -> drop databases id .)


state 137

    (22) INSERT -> insert into id . values para LEXP parc
    (23) INSERT -> insert into id . para LEXP parc values para LEXP parc

    values          shift and go to state 222
    para            shift and go to state 223


state 138

    (16) CASE -> case LISTAWHEN ELSE . end

    end             shift and go to state 224


state 139

    (17) CASE -> case LISTAWHEN end .

    use             reduce using rule 17 (CASE -> case LISTAWHEN end .)
    select          reduce using rule 17 (CASE -> case LISTAWHEN end .)
    create          reduce using rule 17 (CASE -> case LISTAWHEN end .)
    update          reduce using rule 17 (CASE -> case LISTAWHEN end .)
    delete          reduce using rule 17 (CASE -> case LISTAWHEN end .)
    alter           reduce using rule 17 (CASE -> case LISTAWHEN end .)
    drop            reduce using rule 17 (CASE -> case LISTAWHEN end .)
    insert          reduce using rule 17 (CASE -> case LISTAWHEN end .)
    case            reduce using rule 17 (CASE -> case LISTAWHEN end .)
    show            reduce using rule 17 (CASE -> case LISTAWHEN end .)
    $end            reduce using rule 17 (CASE -> case LISTAWHEN end .)
    r_from          reduce using rule 17 (CASE -> case LISTAWHEN end .)
    coma            reduce using rule 17 (CASE -> case LISTAWHEN end .)
    where           reduce using rule 17 (CASE -> case LISTAWHEN end .)
    union           reduce using rule 17 (CASE -> case LISTAWHEN end .)
    group           reduce using rule 17 (CASE -> case LISTAWHEN end .)
    having          reduce using rule 17 (CASE -> case LISTAWHEN end .)
    intersect       reduce using rule 17 (CASE -> case LISTAWHEN end .)
    except          reduce using rule 17 (CASE -> case LISTAWHEN end .)
    order           reduce using rule 17 (CASE -> case LISTAWHEN end .)
    limit           reduce using rule 17 (CASE -> case LISTAWHEN end .)
    offset          reduce using rule 17 (CASE -> case LISTAWHEN end .)
    ptcoma          reduce using rule 17 (CASE -> case LISTAWHEN end .)
    mas             reduce using rule 17 (CASE -> case LISTAWHEN end .)
    menos           reduce using rule 17 (CASE -> case LISTAWHEN end .)
    multiplicacion  reduce using rule 17 (CASE -> case LISTAWHEN end .)
    division        reduce using rule 17 (CASE -> case LISTAWHEN end .)
    modulo          reduce using rule 17 (CASE -> case LISTAWHEN end .)
    elevado         reduce using rule 17 (CASE -> case LISTAWHEN end .)
    and             reduce using rule 17 (CASE -> case LISTAWHEN end .)
    or              reduce using rule 17 (CASE -> case LISTAWHEN end .)
    mayor           reduce using rule 17 (CASE -> case LISTAWHEN end .)
    menor           reduce using rule 17 (CASE -> case LISTAWHEN end .)
    mayor_igual     reduce using rule 17 (CASE -> case LISTAWHEN end .)
    menor_igual     reduce using rule 17 (CASE -> case LISTAWHEN end .)
    igual           reduce using rule 17 (CASE -> case LISTAWHEN end .)
    diferente1      reduce using rule 17 (CASE -> case LISTAWHEN end .)
    diferente2      reduce using rule 17 (CASE -> case LISTAWHEN end .)
    punto           reduce using rule 17 (CASE -> case LISTAWHEN end .)
    between         reduce using rule 17 (CASE -> case LISTAWHEN end .)
    is              reduce using rule 17 (CASE -> case LISTAWHEN end .)
    isnull          reduce using rule 17 (CASE -> case LISTAWHEN end .)
    notnull         reduce using rule 17 (CASE -> case LISTAWHEN end .)
    as              reduce using rule 17 (CASE -> case LISTAWHEN end .)
    cadenaString    reduce using rule 17 (CASE -> case LISTAWHEN end .)
    id              reduce using rule 17 (CASE -> case LISTAWHEN end .)
    cadena          reduce using rule 17 (CASE -> case LISTAWHEN end .)
    in              reduce using rule 17 (CASE -> case LISTAWHEN end .)
    not             reduce using rule 17 (CASE -> case LISTAWHEN end .)
    like            reduce using rule 17 (CASE -> case LISTAWHEN end .)
    parc            reduce using rule 17 (CASE -> case LISTAWHEN end .)
    then            reduce using rule 17 (CASE -> case LISTAWHEN end .)
    end             reduce using rule 17 (CASE -> case LISTAWHEN end .)
    else            reduce using rule 17 (CASE -> case LISTAWHEN end .)
    when            reduce using rule 17 (CASE -> case LISTAWHEN end .)
    constraint      reduce using rule 17 (CASE -> case LISTAWHEN end .)
    unique          reduce using rule 17 (CASE -> case LISTAWHEN end .)
    check           reduce using rule 17 (CASE -> case LISTAWHEN end .)
    default         reduce using rule 17 (CASE -> case LISTAWHEN end .)
    null            reduce using rule 17 (CASE -> case LISTAWHEN end .)
    primary         reduce using rule 17 (CASE -> case LISTAWHEN end .)
    references      reduce using rule 17 (CASE -> case LISTAWHEN end .)
    asc             reduce using rule 17 (CASE -> case LISTAWHEN end .)
    desc            reduce using rule 17 (CASE -> case LISTAWHEN end .)


state 140

    (18) LISTAWHEN -> LISTAWHEN WHEN .

    end             reduce using rule 18 (LISTAWHEN -> LISTAWHEN WHEN .)
    else            reduce using rule 18 (LISTAWHEN -> LISTAWHEN WHEN .)
    when            reduce using rule 18 (LISTAWHEN -> LISTAWHEN WHEN .)


state 141

    (21) ELSE -> else . LEXP
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 225
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 142

    (20) WHEN -> when LEXP . then LEXP
    (134) LEXP -> LEXP . coma EXP

    then            shift and go to state 226
    coma            shift and go to state 84


state 143

    (95) SELECT -> select distinct LEXP r_from . LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 227
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 144

    (96) SELECT -> select LEXP r_from LEXP . WHERE GROUP HAVING COMBINING ORDER LIMIT
    (134) LEXP -> LEXP . coma EXP
    (106) WHERE -> . where LEXP
    (107) WHERE -> . where EXIST
    (108) WHERE -> . union LEXP
    (109) WHERE -> . union all LEXP
    (110) WHERE -> .

  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for where resolved as shift
  ! shift/reduce conflict for union resolved as shift
    coma            shift and go to state 84
    where           shift and go to state 85
    union           shift and go to state 86
    r_from          reduce using rule 110 (WHERE -> .)
    group           reduce using rule 110 (WHERE -> .)
    having          reduce using rule 110 (WHERE -> .)
    intersect       reduce using rule 110 (WHERE -> .)
    except          reduce using rule 110 (WHERE -> .)
    order           reduce using rule 110 (WHERE -> .)
    limit           reduce using rule 110 (WHERE -> .)
    offset          reduce using rule 110 (WHERE -> .)
    ptcoma          reduce using rule 110 (WHERE -> .)
    mas             reduce using rule 110 (WHERE -> .)
    menos           reduce using rule 110 (WHERE -> .)
    multiplicacion  reduce using rule 110 (WHERE -> .)
    division        reduce using rule 110 (WHERE -> .)
    modulo          reduce using rule 110 (WHERE -> .)
    elevado         reduce using rule 110 (WHERE -> .)
    and             reduce using rule 110 (WHERE -> .)
    or              reduce using rule 110 (WHERE -> .)
    mayor           reduce using rule 110 (WHERE -> .)
    menor           reduce using rule 110 (WHERE -> .)
    mayor_igual     reduce using rule 110 (WHERE -> .)
    menor_igual     reduce using rule 110 (WHERE -> .)
    igual           reduce using rule 110 (WHERE -> .)
    diferente1      reduce using rule 110 (WHERE -> .)
    diferente2      reduce using rule 110 (WHERE -> .)
    punto           reduce using rule 110 (WHERE -> .)
    between         reduce using rule 110 (WHERE -> .)
    is              reduce using rule 110 (WHERE -> .)
    isnull          reduce using rule 110 (WHERE -> .)
    notnull         reduce using rule 110 (WHERE -> .)
    as              reduce using rule 110 (WHERE -> .)
    cadenaString    reduce using rule 110 (WHERE -> .)
    id              reduce using rule 110 (WHERE -> .)
    cadena          reduce using rule 110 (WHERE -> .)
    in              reduce using rule 110 (WHERE -> .)
    not             reduce using rule 110 (WHERE -> .)
    like            reduce using rule 110 (WHERE -> .)
    parc            reduce using rule 110 (WHERE -> .)
    then            reduce using rule 110 (WHERE -> .)
    end             reduce using rule 110 (WHERE -> .)
    else            reduce using rule 110 (WHERE -> .)
    when            reduce using rule 110 (WHERE -> .)
    constraint      reduce using rule 110 (WHERE -> .)
    unique          reduce using rule 110 (WHERE -> .)
    check           reduce using rule 110 (WHERE -> .)
    default         reduce using rule 110 (WHERE -> .)
    null            reduce using rule 110 (WHERE -> .)
    primary         reduce using rule 110 (WHERE -> .)
    references      reduce using rule 110 (WHERE -> .)
    asc             reduce using rule 110 (WHERE -> .)
    desc            reduce using rule 110 (WHERE -> .)

  ! coma            [ reduce using rule 110 (WHERE -> .) ]
  ! where           [ reduce using rule 110 (WHERE -> .) ]
  ! union           [ reduce using rule 110 (WHERE -> .) ]

    WHERE                          shift and go to state 228

state 145

    (97) SELECT -> select LEXP WHERE GROUP . HAVING COMBINING ORDER LIMIT
    (120) HAVING -> . having LEXP
    (121) HAVING -> .

  ! shift/reduce conflict for having resolved as shift
    having          shift and go to state 230
    r_from          reduce using rule 121 (HAVING -> .)
    coma            reduce using rule 121 (HAVING -> .)
    where           reduce using rule 121 (HAVING -> .)
    union           reduce using rule 121 (HAVING -> .)
    group           reduce using rule 121 (HAVING -> .)
    intersect       reduce using rule 121 (HAVING -> .)
    except          reduce using rule 121 (HAVING -> .)
    order           reduce using rule 121 (HAVING -> .)
    limit           reduce using rule 121 (HAVING -> .)
    offset          reduce using rule 121 (HAVING -> .)
    ptcoma          reduce using rule 121 (HAVING -> .)
    mas             reduce using rule 121 (HAVING -> .)
    menos           reduce using rule 121 (HAVING -> .)
    multiplicacion  reduce using rule 121 (HAVING -> .)
    division        reduce using rule 121 (HAVING -> .)
    modulo          reduce using rule 121 (HAVING -> .)
    elevado         reduce using rule 121 (HAVING -> .)
    and             reduce using rule 121 (HAVING -> .)
    or              reduce using rule 121 (HAVING -> .)
    mayor           reduce using rule 121 (HAVING -> .)
    menor           reduce using rule 121 (HAVING -> .)
    mayor_igual     reduce using rule 121 (HAVING -> .)
    menor_igual     reduce using rule 121 (HAVING -> .)
    igual           reduce using rule 121 (HAVING -> .)
    diferente1      reduce using rule 121 (HAVING -> .)
    diferente2      reduce using rule 121 (HAVING -> .)
    punto           reduce using rule 121 (HAVING -> .)
    between         reduce using rule 121 (HAVING -> .)
    is              reduce using rule 121 (HAVING -> .)
    isnull          reduce using rule 121 (HAVING -> .)
    notnull         reduce using rule 121 (HAVING -> .)
    as              reduce using rule 121 (HAVING -> .)
    cadenaString    reduce using rule 121 (HAVING -> .)
    id              reduce using rule 121 (HAVING -> .)
    cadena          reduce using rule 121 (HAVING -> .)
    in              reduce using rule 121 (HAVING -> .)
    not             reduce using rule 121 (HAVING -> .)
    like            reduce using rule 121 (HAVING -> .)
    parc            reduce using rule 121 (HAVING -> .)
    then            reduce using rule 121 (HAVING -> .)
    end             reduce using rule 121 (HAVING -> .)
    else            reduce using rule 121 (HAVING -> .)
    when            reduce using rule 121 (HAVING -> .)
    constraint      reduce using rule 121 (HAVING -> .)
    unique          reduce using rule 121 (HAVING -> .)
    check           reduce using rule 121 (HAVING -> .)
    default         reduce using rule 121 (HAVING -> .)
    null            reduce using rule 121 (HAVING -> .)
    primary         reduce using rule 121 (HAVING -> .)
    references      reduce using rule 121 (HAVING -> .)
    asc             reduce using rule 121 (HAVING -> .)
    desc            reduce using rule 121 (HAVING -> .)

  ! having          [ reduce using rule 121 (HAVING -> .) ]

    HAVING                         shift and go to state 229

state 146

    (118) GROUP -> group . by LEXP

    by              shift and go to state 231


state 147

    (134) LEXP -> LEXP coma EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for punto resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    r_from          reduce using rule 134 (LEXP -> LEXP coma EXP .)
    coma            reduce using rule 134 (LEXP -> LEXP coma EXP .)
    where           reduce using rule 134 (LEXP -> LEXP coma EXP .)
    union           reduce using rule 134 (LEXP -> LEXP coma EXP .)
    group           reduce using rule 134 (LEXP -> LEXP coma EXP .)
    having          reduce using rule 134 (LEXP -> LEXP coma EXP .)
    intersect       reduce using rule 134 (LEXP -> LEXP coma EXP .)
    except          reduce using rule 134 (LEXP -> LEXP coma EXP .)
    order           reduce using rule 134 (LEXP -> LEXP coma EXP .)
    limit           reduce using rule 134 (LEXP -> LEXP coma EXP .)
    offset          reduce using rule 134 (LEXP -> LEXP coma EXP .)
    ptcoma          reduce using rule 134 (LEXP -> LEXP coma EXP .)
    parc            reduce using rule 134 (LEXP -> LEXP coma EXP .)
    then            reduce using rule 134 (LEXP -> LEXP coma EXP .)
    end             reduce using rule 134 (LEXP -> LEXP coma EXP .)
    else            reduce using rule 134 (LEXP -> LEXP coma EXP .)
    when            reduce using rule 134 (LEXP -> LEXP coma EXP .)
    constraint      reduce using rule 134 (LEXP -> LEXP coma EXP .)
    unique          reduce using rule 134 (LEXP -> LEXP coma EXP .)
    check           reduce using rule 134 (LEXP -> LEXP coma EXP .)
    default         reduce using rule 134 (LEXP -> LEXP coma EXP .)
    null            reduce using rule 134 (LEXP -> LEXP coma EXP .)
    primary         reduce using rule 134 (LEXP -> LEXP coma EXP .)
    references      reduce using rule 134 (LEXP -> LEXP coma EXP .)
    asc             reduce using rule 134 (LEXP -> LEXP coma EXP .)
    desc            reduce using rule 134 (LEXP -> LEXP coma EXP .)
    mas             shift and go to state 87
    menos           shift and go to state 88
    multiplicacion  shift and go to state 89
    division        shift and go to state 90
    modulo          shift and go to state 91
    elevado         shift and go to state 92
    and             shift and go to state 93
    or              shift and go to state 94
    mayor           shift and go to state 95
    menor           shift and go to state 96
    mayor_igual     shift and go to state 97
    menor_igual     shift and go to state 98
    igual           shift and go to state 99
    diferente1      shift and go to state 100
    diferente2      shift and go to state 101
    punto           shift and go to state 102
    between         shift and go to state 103
    is              shift and go to state 104
    isnull          shift and go to state 106
    notnull         shift and go to state 107
    as              shift and go to state 108
    cadenaString    shift and go to state 109
    id              shift and go to state 110
    cadena          shift and go to state 111
    in              shift and go to state 112
    not             shift and go to state 105
    like            shift and go to state 113

  ! mas             [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! menos           [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! multiplicacion  [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! division        [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! modulo          [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! elevado         [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! and             [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! or              [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! mayor           [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! menor           [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! mayor_igual     [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! menor_igual     [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! igual           [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! diferente1      [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! diferente2      [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! punto           [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! between         [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! is              [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! isnull          [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! notnull         [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! as              [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! cadenaString    [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! id              [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! cadena          [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! in              [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! not             [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]
  ! like            [ reduce using rule 134 (LEXP -> LEXP coma EXP .) ]


state 148

    (106) WHERE -> where LEXP .
    (134) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 106 (WHERE -> where LEXP .)
    where           reduce using rule 106 (WHERE -> where LEXP .)
    union           reduce using rule 106 (WHERE -> where LEXP .)
    group           reduce using rule 106 (WHERE -> where LEXP .)
    having          reduce using rule 106 (WHERE -> where LEXP .)
    intersect       reduce using rule 106 (WHERE -> where LEXP .)
    except          reduce using rule 106 (WHERE -> where LEXP .)
    order           reduce using rule 106 (WHERE -> where LEXP .)
    limit           reduce using rule 106 (WHERE -> where LEXP .)
    offset          reduce using rule 106 (WHERE -> where LEXP .)
    ptcoma          reduce using rule 106 (WHERE -> where LEXP .)
    mas             reduce using rule 106 (WHERE -> where LEXP .)
    menos           reduce using rule 106 (WHERE -> where LEXP .)
    multiplicacion  reduce using rule 106 (WHERE -> where LEXP .)
    division        reduce using rule 106 (WHERE -> where LEXP .)
    modulo          reduce using rule 106 (WHERE -> where LEXP .)
    elevado         reduce using rule 106 (WHERE -> where LEXP .)
    and             reduce using rule 106 (WHERE -> where LEXP .)
    or              reduce using rule 106 (WHERE -> where LEXP .)
    mayor           reduce using rule 106 (WHERE -> where LEXP .)
    menor           reduce using rule 106 (WHERE -> where LEXP .)
    mayor_igual     reduce using rule 106 (WHERE -> where LEXP .)
    menor_igual     reduce using rule 106 (WHERE -> where LEXP .)
    igual           reduce using rule 106 (WHERE -> where LEXP .)
    diferente1      reduce using rule 106 (WHERE -> where LEXP .)
    diferente2      reduce using rule 106 (WHERE -> where LEXP .)
    punto           reduce using rule 106 (WHERE -> where LEXP .)
    between         reduce using rule 106 (WHERE -> where LEXP .)
    is              reduce using rule 106 (WHERE -> where LEXP .)
    isnull          reduce using rule 106 (WHERE -> where LEXP .)
    notnull         reduce using rule 106 (WHERE -> where LEXP .)
    as              reduce using rule 106 (WHERE -> where LEXP .)
    cadenaString    reduce using rule 106 (WHERE -> where LEXP .)
    id              reduce using rule 106 (WHERE -> where LEXP .)
    cadena          reduce using rule 106 (WHERE -> where LEXP .)
    in              reduce using rule 106 (WHERE -> where LEXP .)
    not             reduce using rule 106 (WHERE -> where LEXP .)
    like            reduce using rule 106 (WHERE -> where LEXP .)
    parc            reduce using rule 106 (WHERE -> where LEXP .)
    then            reduce using rule 106 (WHERE -> where LEXP .)
    end             reduce using rule 106 (WHERE -> where LEXP .)
    else            reduce using rule 106 (WHERE -> where LEXP .)
    when            reduce using rule 106 (WHERE -> where LEXP .)
    constraint      reduce using rule 106 (WHERE -> where LEXP .)
    unique          reduce using rule 106 (WHERE -> where LEXP .)
    check           reduce using rule 106 (WHERE -> where LEXP .)
    default         reduce using rule 106 (WHERE -> where LEXP .)
    null            reduce using rule 106 (WHERE -> where LEXP .)
    primary         reduce using rule 106 (WHERE -> where LEXP .)
    references      reduce using rule 106 (WHERE -> where LEXP .)
    asc             reduce using rule 106 (WHERE -> where LEXP .)
    desc            reduce using rule 106 (WHERE -> where LEXP .)
    coma            shift and go to state 84

  ! coma            [ reduce using rule 106 (WHERE -> where LEXP .) ]


state 149

    (107) WHERE -> where EXIST .

    r_from          reduce using rule 107 (WHERE -> where EXIST .)
    coma            reduce using rule 107 (WHERE -> where EXIST .)
    where           reduce using rule 107 (WHERE -> where EXIST .)
    union           reduce using rule 107 (WHERE -> where EXIST .)
    group           reduce using rule 107 (WHERE -> where EXIST .)
    having          reduce using rule 107 (WHERE -> where EXIST .)
    intersect       reduce using rule 107 (WHERE -> where EXIST .)
    except          reduce using rule 107 (WHERE -> where EXIST .)
    order           reduce using rule 107 (WHERE -> where EXIST .)
    limit           reduce using rule 107 (WHERE -> where EXIST .)
    offset          reduce using rule 107 (WHERE -> where EXIST .)
    ptcoma          reduce using rule 107 (WHERE -> where EXIST .)
    mas             reduce using rule 107 (WHERE -> where EXIST .)
    menos           reduce using rule 107 (WHERE -> where EXIST .)
    multiplicacion  reduce using rule 107 (WHERE -> where EXIST .)
    division        reduce using rule 107 (WHERE -> where EXIST .)
    modulo          reduce using rule 107 (WHERE -> where EXIST .)
    elevado         reduce using rule 107 (WHERE -> where EXIST .)
    and             reduce using rule 107 (WHERE -> where EXIST .)
    or              reduce using rule 107 (WHERE -> where EXIST .)
    mayor           reduce using rule 107 (WHERE -> where EXIST .)
    menor           reduce using rule 107 (WHERE -> where EXIST .)
    mayor_igual     reduce using rule 107 (WHERE -> where EXIST .)
    menor_igual     reduce using rule 107 (WHERE -> where EXIST .)
    igual           reduce using rule 107 (WHERE -> where EXIST .)
    diferente1      reduce using rule 107 (WHERE -> where EXIST .)
    diferente2      reduce using rule 107 (WHERE -> where EXIST .)
    punto           reduce using rule 107 (WHERE -> where EXIST .)
    between         reduce using rule 107 (WHERE -> where EXIST .)
    is              reduce using rule 107 (WHERE -> where EXIST .)
    isnull          reduce using rule 107 (WHERE -> where EXIST .)
    notnull         reduce using rule 107 (WHERE -> where EXIST .)
    as              reduce using rule 107 (WHERE -> where EXIST .)
    cadenaString    reduce using rule 107 (WHERE -> where EXIST .)
    id              reduce using rule 107 (WHERE -> where EXIST .)
    cadena          reduce using rule 107 (WHERE -> where EXIST .)
    in              reduce using rule 107 (WHERE -> where EXIST .)
    not             reduce using rule 107 (WHERE -> where EXIST .)
    like            reduce using rule 107 (WHERE -> where EXIST .)
    parc            reduce using rule 107 (WHERE -> where EXIST .)
    then            reduce using rule 107 (WHERE -> where EXIST .)
    end             reduce using rule 107 (WHERE -> where EXIST .)
    else            reduce using rule 107 (WHERE -> where EXIST .)
    when            reduce using rule 107 (WHERE -> where EXIST .)
    constraint      reduce using rule 107 (WHERE -> where EXIST .)
    unique          reduce using rule 107 (WHERE -> where EXIST .)
    check           reduce using rule 107 (WHERE -> where EXIST .)
    default         reduce using rule 107 (WHERE -> where EXIST .)
    null            reduce using rule 107 (WHERE -> where EXIST .)
    primary         reduce using rule 107 (WHERE -> where EXIST .)
    references      reduce using rule 107 (WHERE -> where EXIST .)
    asc             reduce using rule 107 (WHERE -> where EXIST .)
    desc            reduce using rule 107 (WHERE -> where EXIST .)


state 150

    (132) EXIST -> exist . para SELECT parc

    para            shift and go to state 232


state 151

    (133) EXIST -> not . exist para SELECT parc
    (212) EXP -> not . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    exist           shift and go to state 233
    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    SELECT                         shift and go to state 51
    EXP                            shift and go to state 116
    CASE                           shift and go to state 52

state 152

    (108) WHERE -> union LEXP .
    (134) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 108 (WHERE -> union LEXP .)
    where           reduce using rule 108 (WHERE -> union LEXP .)
    union           reduce using rule 108 (WHERE -> union LEXP .)
    group           reduce using rule 108 (WHERE -> union LEXP .)
    having          reduce using rule 108 (WHERE -> union LEXP .)
    intersect       reduce using rule 108 (WHERE -> union LEXP .)
    except          reduce using rule 108 (WHERE -> union LEXP .)
    order           reduce using rule 108 (WHERE -> union LEXP .)
    limit           reduce using rule 108 (WHERE -> union LEXP .)
    offset          reduce using rule 108 (WHERE -> union LEXP .)
    ptcoma          reduce using rule 108 (WHERE -> union LEXP .)
    mas             reduce using rule 108 (WHERE -> union LEXP .)
    menos           reduce using rule 108 (WHERE -> union LEXP .)
    multiplicacion  reduce using rule 108 (WHERE -> union LEXP .)
    division        reduce using rule 108 (WHERE -> union LEXP .)
    modulo          reduce using rule 108 (WHERE -> union LEXP .)
    elevado         reduce using rule 108 (WHERE -> union LEXP .)
    and             reduce using rule 108 (WHERE -> union LEXP .)
    or              reduce using rule 108 (WHERE -> union LEXP .)
    mayor           reduce using rule 108 (WHERE -> union LEXP .)
    menor           reduce using rule 108 (WHERE -> union LEXP .)
    mayor_igual     reduce using rule 108 (WHERE -> union LEXP .)
    menor_igual     reduce using rule 108 (WHERE -> union LEXP .)
    igual           reduce using rule 108 (WHERE -> union LEXP .)
    diferente1      reduce using rule 108 (WHERE -> union LEXP .)
    diferente2      reduce using rule 108 (WHERE -> union LEXP .)
    punto           reduce using rule 108 (WHERE -> union LEXP .)
    between         reduce using rule 108 (WHERE -> union LEXP .)
    is              reduce using rule 108 (WHERE -> union LEXP .)
    isnull          reduce using rule 108 (WHERE -> union LEXP .)
    notnull         reduce using rule 108 (WHERE -> union LEXP .)
    as              reduce using rule 108 (WHERE -> union LEXP .)
    cadenaString    reduce using rule 108 (WHERE -> union LEXP .)
    id              reduce using rule 108 (WHERE -> union LEXP .)
    cadena          reduce using rule 108 (WHERE -> union LEXP .)
    in              reduce using rule 108 (WHERE -> union LEXP .)
    not             reduce using rule 108 (WHERE -> union LEXP .)
    like            reduce using rule 108 (WHERE -> union LEXP .)
    parc            reduce using rule 108 (WHERE -> union LEXP .)
    then            reduce using rule 108 (WHERE -> union LEXP .)
    end             reduce using rule 108 (WHERE -> union LEXP .)
    else            reduce using rule 108 (WHERE -> union LEXP .)
    when            reduce using rule 108 (WHERE -> union LEXP .)
    constraint      reduce using rule 108 (WHERE -> union LEXP .)
    unique          reduce using rule 108 (WHERE -> union LEXP .)
    check           reduce using rule 108 (WHERE -> union LEXP .)
    default         reduce using rule 108 (WHERE -> union LEXP .)
    null            reduce using rule 108 (WHERE -> union LEXP .)
    primary         reduce using rule 108 (WHERE -> union LEXP .)
    references      reduce using rule 108 (WHERE -> union LEXP .)
    asc             reduce using rule 108 (WHERE -> union LEXP .)
    desc            reduce using rule 108 (WHERE -> union LEXP .)
    coma            shift and go to state 84

  ! coma            [ reduce using rule 108 (WHERE -> union LEXP .) ]


state 153

    (109) WHERE -> union all . LEXP
    (228) EXP -> all . para LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    para            shift and go to state 235
    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 234
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 154

    (177) EXP -> EXP mas EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

    r_from          reduce using rule 177 (EXP -> EXP mas EXP .)
    coma            reduce using rule 177 (EXP -> EXP mas EXP .)
    where           reduce using rule 177 (EXP -> EXP mas EXP .)
    union           reduce using rule 177 (EXP -> EXP mas EXP .)
    group           reduce using rule 177 (EXP -> EXP mas EXP .)
    having          reduce using rule 177 (EXP -> EXP mas EXP .)
    intersect       reduce using rule 177 (EXP -> EXP mas EXP .)
    except          reduce using rule 177 (EXP -> EXP mas EXP .)
    order           reduce using rule 177 (EXP -> EXP mas EXP .)
    limit           reduce using rule 177 (EXP -> EXP mas EXP .)
    offset          reduce using rule 177 (EXP -> EXP mas EXP .)
    ptcoma          reduce using rule 177 (EXP -> EXP mas EXP .)
    mas             reduce using rule 177 (EXP -> EXP mas EXP .)
    menos           reduce using rule 177 (EXP -> EXP mas EXP .)
    and             reduce using rule 177 (EXP -> EXP mas EXP .)
    or              reduce using rule 177 (EXP -> EXP mas EXP .)
    mayor           reduce using rule 177 (EXP -> EXP mas EXP .)
    menor           reduce using rule 177 (EXP -> EXP mas EXP .)
    mayor_igual     reduce using rule 177 (EXP -> EXP mas EXP .)
    menor_igual     reduce using rule 177 (EXP -> EXP mas EXP .)
    igual           reduce using rule 177 (EXP -> EXP mas EXP .)
    diferente1      reduce using rule 177 (EXP -> EXP mas EXP .)
    diferente2      reduce using rule 177 (EXP -> EXP mas EXP .)
    between         reduce using rule 177 (EXP -> EXP mas EXP .)
    is              reduce using rule 177 (EXP -> EXP mas EXP .)
    isnull          reduce using rule 177 (EXP -> EXP mas EXP .)
    notnull         reduce using rule 177 (EXP -> EXP mas EXP .)
    as              reduce using rule 177 (EXP -> EXP mas EXP .)
    cadenaString    reduce using rule 177 (EXP -> EXP mas EXP .)
    id              reduce using rule 177 (EXP -> EXP mas EXP .)
    cadena          reduce using rule 177 (EXP -> EXP mas EXP .)
    in              reduce using rule 177 (EXP -> EXP mas EXP .)
    not             reduce using rule 177 (EXP -> EXP mas EXP .)
    like            reduce using rule 177 (EXP -> EXP mas EXP .)
    parc            reduce using rule 177 (EXP -> EXP mas EXP .)
    then            reduce using rule 177 (EXP -> EXP mas EXP .)
    end             reduce using rule 177 (EXP -> EXP mas EXP .)
    else            reduce using rule 177 (EXP -> EXP mas EXP .)
    when            reduce using rule 177 (EXP -> EXP mas EXP .)
    constraint      reduce using rule 177 (EXP -> EXP mas EXP .)
    unique          reduce using rule 177 (EXP -> EXP mas EXP .)
    check           reduce using rule 177 (EXP -> EXP mas EXP .)
    default         reduce using rule 177 (EXP -> EXP mas EXP .)
    null            reduce using rule 177 (EXP -> EXP mas EXP .)
    primary         reduce using rule 177 (EXP -> EXP mas EXP .)
    references      reduce using rule 177 (EXP -> EXP mas EXP .)
    asc             reduce using rule 177 (EXP -> EXP mas EXP .)
    desc            reduce using rule 177 (EXP -> EXP mas EXP .)
    multiplicacion  shift and go to state 89
    division        shift and go to state 90
    modulo          shift and go to state 91
    elevado         shift and go to state 92
    punto           shift and go to state 102

  ! multiplicacion  [ reduce using rule 177 (EXP -> EXP mas EXP .) ]
  ! division        [ reduce using rule 177 (EXP -> EXP mas EXP .) ]
  ! modulo          [ reduce using rule 177 (EXP -> EXP mas EXP .) ]
  ! elevado         [ reduce using rule 177 (EXP -> EXP mas EXP .) ]
  ! punto           [ reduce using rule 177 (EXP -> EXP mas EXP .) ]
  ! mas             [ shift and go to state 87 ]
  ! menos           [ shift and go to state 88 ]
  ! and             [ shift and go to state 93 ]
  ! or              [ shift and go to state 94 ]
  ! mayor           [ shift and go to state 95 ]
  ! menor           [ shift and go to state 96 ]
  ! mayor_igual     [ shift and go to state 97 ]
  ! menor_igual     [ shift and go to state 98 ]
  ! igual           [ shift and go to state 99 ]
  ! diferente1      [ shift and go to state 100 ]
  ! diferente2      [ shift and go to state 101 ]
  ! between         [ shift and go to state 103 ]
  ! is              [ shift and go to state 104 ]
  ! isnull          [ shift and go to state 106 ]
  ! notnull         [ shift and go to state 107 ]
  ! as              [ shift and go to state 108 ]
  ! cadenaString    [ shift and go to state 109 ]
  ! id              [ shift and go to state 110 ]
  ! cadena          [ shift and go to state 111 ]
  ! in              [ shift and go to state 112 ]
  ! not             [ shift and go to state 105 ]
  ! like            [ shift and go to state 113 ]


state 155

    (178) EXP -> EXP menos EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

    r_from          reduce using rule 178 (EXP -> EXP menos EXP .)
    coma            reduce using rule 178 (EXP -> EXP menos EXP .)
    where           reduce using rule 178 (EXP -> EXP menos EXP .)
    union           reduce using rule 178 (EXP -> EXP menos EXP .)
    group           reduce using rule 178 (EXP -> EXP menos EXP .)
    having          reduce using rule 178 (EXP -> EXP menos EXP .)
    intersect       reduce using rule 178 (EXP -> EXP menos EXP .)
    except          reduce using rule 178 (EXP -> EXP menos EXP .)
    order           reduce using rule 178 (EXP -> EXP menos EXP .)
    limit           reduce using rule 178 (EXP -> EXP menos EXP .)
    offset          reduce using rule 178 (EXP -> EXP menos EXP .)
    ptcoma          reduce using rule 178 (EXP -> EXP menos EXP .)
    mas             reduce using rule 178 (EXP -> EXP menos EXP .)
    menos           reduce using rule 178 (EXP -> EXP menos EXP .)
    and             reduce using rule 178 (EXP -> EXP menos EXP .)
    or              reduce using rule 178 (EXP -> EXP menos EXP .)
    mayor           reduce using rule 178 (EXP -> EXP menos EXP .)
    menor           reduce using rule 178 (EXP -> EXP menos EXP .)
    mayor_igual     reduce using rule 178 (EXP -> EXP menos EXP .)
    menor_igual     reduce using rule 178 (EXP -> EXP menos EXP .)
    igual           reduce using rule 178 (EXP -> EXP menos EXP .)
    diferente1      reduce using rule 178 (EXP -> EXP menos EXP .)
    diferente2      reduce using rule 178 (EXP -> EXP menos EXP .)
    between         reduce using rule 178 (EXP -> EXP menos EXP .)
    is              reduce using rule 178 (EXP -> EXP menos EXP .)
    isnull          reduce using rule 178 (EXP -> EXP menos EXP .)
    notnull         reduce using rule 178 (EXP -> EXP menos EXP .)
    as              reduce using rule 178 (EXP -> EXP menos EXP .)
    cadenaString    reduce using rule 178 (EXP -> EXP menos EXP .)
    id              reduce using rule 178 (EXP -> EXP menos EXP .)
    cadena          reduce using rule 178 (EXP -> EXP menos EXP .)
    in              reduce using rule 178 (EXP -> EXP menos EXP .)
    not             reduce using rule 178 (EXP -> EXP menos EXP .)
    like            reduce using rule 178 (EXP -> EXP menos EXP .)
    parc            reduce using rule 178 (EXP -> EXP menos EXP .)
    then            reduce using rule 178 (EXP -> EXP menos EXP .)
    end             reduce using rule 178 (EXP -> EXP menos EXP .)
    else            reduce using rule 178 (EXP -> EXP menos EXP .)
    when            reduce using rule 178 (EXP -> EXP menos EXP .)
    constraint      reduce using rule 178 (EXP -> EXP menos EXP .)
    unique          reduce using rule 178 (EXP -> EXP menos EXP .)
    check           reduce using rule 178 (EXP -> EXP menos EXP .)
    default         reduce using rule 178 (EXP -> EXP menos EXP .)
    null            reduce using rule 178 (EXP -> EXP menos EXP .)
    primary         reduce using rule 178 (EXP -> EXP menos EXP .)
    references      reduce using rule 178 (EXP -> EXP menos EXP .)
    asc             reduce using rule 178 (EXP -> EXP menos EXP .)
    desc            reduce using rule 178 (EXP -> EXP menos EXP .)
    multiplicacion  shift and go to state 89
    division        shift and go to state 90
    modulo          shift and go to state 91
    elevado         shift and go to state 92
    punto           shift and go to state 102

  ! multiplicacion  [ reduce using rule 178 (EXP -> EXP menos EXP .) ]
  ! division        [ reduce using rule 178 (EXP -> EXP menos EXP .) ]
  ! modulo          [ reduce using rule 178 (EXP -> EXP menos EXP .) ]
  ! elevado         [ reduce using rule 178 (EXP -> EXP menos EXP .) ]
  ! punto           [ reduce using rule 178 (EXP -> EXP menos EXP .) ]
  ! mas             [ shift and go to state 87 ]
  ! menos           [ shift and go to state 88 ]
  ! and             [ shift and go to state 93 ]
  ! or              [ shift and go to state 94 ]
  ! mayor           [ shift and go to state 95 ]
  ! menor           [ shift and go to state 96 ]
  ! mayor_igual     [ shift and go to state 97 ]
  ! menor_igual     [ shift and go to state 98 ]
  ! igual           [ shift and go to state 99 ]
  ! diferente1      [ shift and go to state 100 ]
  ! diferente2      [ shift and go to state 101 ]
  ! between         [ shift and go to state 103 ]
  ! is              [ shift and go to state 104 ]
  ! isnull          [ shift and go to state 106 ]
  ! notnull         [ shift and go to state 107 ]
  ! as              [ shift and go to state 108 ]
  ! cadenaString    [ shift and go to state 109 ]
  ! id              [ shift and go to state 110 ]
  ! cadena          [ shift and go to state 111 ]
  ! in              [ shift and go to state 112 ]
  ! not             [ shift and go to state 105 ]
  ! like            [ shift and go to state 113 ]


state 156

    (179) EXP -> EXP multiplicacion EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

    r_from          reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    coma            reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    where           reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    union           reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    group           reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    having          reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    intersect       reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    except          reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    order           reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    limit           reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    offset          reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    ptcoma          reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    mas             reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    menos           reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    multiplicacion  reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    division        reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    modulo          reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    and             reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    or              reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    mayor           reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    menor           reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    mayor_igual     reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    menor_igual     reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    igual           reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    diferente1      reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    diferente2      reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    between         reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    is              reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    isnull          reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    notnull         reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    as              reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    cadenaString    reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    id              reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    cadena          reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    in              reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    not             reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    like            reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    parc            reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    then            reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    end             reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    else            reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    when            reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    constraint      reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    unique          reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    check           reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    default         reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    null            reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    primary         reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    references      reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    asc             reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    desc            reduce using rule 179 (EXP -> EXP multiplicacion EXP .)
    elevado         shift and go to state 92
    punto           shift and go to state 102

  ! elevado         [ reduce using rule 179 (EXP -> EXP multiplicacion EXP .) ]
  ! punto           [ reduce using rule 179 (EXP -> EXP multiplicacion EXP .) ]
  ! mas             [ shift and go to state 87 ]
  ! menos           [ shift and go to state 88 ]
  ! multiplicacion  [ shift and go to state 89 ]
  ! division        [ shift and go to state 90 ]
  ! modulo          [ shift and go to state 91 ]
  ! and             [ shift and go to state 93 ]
  ! or              [ shift and go to state 94 ]
  ! mayor           [ shift and go to state 95 ]
  ! menor           [ shift and go to state 96 ]
  ! mayor_igual     [ shift and go to state 97 ]
  ! menor_igual     [ shift and go to state 98 ]
  ! igual           [ shift and go to state 99 ]
  ! diferente1      [ shift and go to state 100 ]
  ! diferente2      [ shift and go to state 101 ]
  ! between         [ shift and go to state 103 ]
  ! is              [ shift and go to state 104 ]
  ! isnull          [ shift and go to state 106 ]
  ! notnull         [ shift and go to state 107 ]
  ! as              [ shift and go to state 108 ]
  ! cadenaString    [ shift and go to state 109 ]
  ! id              [ shift and go to state 110 ]
  ! cadena          [ shift and go to state 111 ]
  ! in              [ shift and go to state 112 ]
  ! not             [ shift and go to state 105 ]
  ! like            [ shift and go to state 113 ]


state 157

    (180) EXP -> EXP division EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

    r_from          reduce using rule 180 (EXP -> EXP division EXP .)
    coma            reduce using rule 180 (EXP -> EXP division EXP .)
    where           reduce using rule 180 (EXP -> EXP division EXP .)
    union           reduce using rule 180 (EXP -> EXP division EXP .)
    group           reduce using rule 180 (EXP -> EXP division EXP .)
    having          reduce using rule 180 (EXP -> EXP division EXP .)
    intersect       reduce using rule 180 (EXP -> EXP division EXP .)
    except          reduce using rule 180 (EXP -> EXP division EXP .)
    order           reduce using rule 180 (EXP -> EXP division EXP .)
    limit           reduce using rule 180 (EXP -> EXP division EXP .)
    offset          reduce using rule 180 (EXP -> EXP division EXP .)
    ptcoma          reduce using rule 180 (EXP -> EXP division EXP .)
    mas             reduce using rule 180 (EXP -> EXP division EXP .)
    menos           reduce using rule 180 (EXP -> EXP division EXP .)
    multiplicacion  reduce using rule 180 (EXP -> EXP division EXP .)
    division        reduce using rule 180 (EXP -> EXP division EXP .)
    modulo          reduce using rule 180 (EXP -> EXP division EXP .)
    and             reduce using rule 180 (EXP -> EXP division EXP .)
    or              reduce using rule 180 (EXP -> EXP division EXP .)
    mayor           reduce using rule 180 (EXP -> EXP division EXP .)
    menor           reduce using rule 180 (EXP -> EXP division EXP .)
    mayor_igual     reduce using rule 180 (EXP -> EXP division EXP .)
    menor_igual     reduce using rule 180 (EXP -> EXP division EXP .)
    igual           reduce using rule 180 (EXP -> EXP division EXP .)
    diferente1      reduce using rule 180 (EXP -> EXP division EXP .)
    diferente2      reduce using rule 180 (EXP -> EXP division EXP .)
    between         reduce using rule 180 (EXP -> EXP division EXP .)
    is              reduce using rule 180 (EXP -> EXP division EXP .)
    isnull          reduce using rule 180 (EXP -> EXP division EXP .)
    notnull         reduce using rule 180 (EXP -> EXP division EXP .)
    as              reduce using rule 180 (EXP -> EXP division EXP .)
    cadenaString    reduce using rule 180 (EXP -> EXP division EXP .)
    id              reduce using rule 180 (EXP -> EXP division EXP .)
    cadena          reduce using rule 180 (EXP -> EXP division EXP .)
    in              reduce using rule 180 (EXP -> EXP division EXP .)
    not             reduce using rule 180 (EXP -> EXP division EXP .)
    like            reduce using rule 180 (EXP -> EXP division EXP .)
    parc            reduce using rule 180 (EXP -> EXP division EXP .)
    then            reduce using rule 180 (EXP -> EXP division EXP .)
    end             reduce using rule 180 (EXP -> EXP division EXP .)
    else            reduce using rule 180 (EXP -> EXP division EXP .)
    when            reduce using rule 180 (EXP -> EXP division EXP .)
    constraint      reduce using rule 180 (EXP -> EXP division EXP .)
    unique          reduce using rule 180 (EXP -> EXP division EXP .)
    check           reduce using rule 180 (EXP -> EXP division EXP .)
    default         reduce using rule 180 (EXP -> EXP division EXP .)
    null            reduce using rule 180 (EXP -> EXP division EXP .)
    primary         reduce using rule 180 (EXP -> EXP division EXP .)
    references      reduce using rule 180 (EXP -> EXP division EXP .)
    asc             reduce using rule 180 (EXP -> EXP division EXP .)
    desc            reduce using rule 180 (EXP -> EXP division EXP .)
    elevado         shift and go to state 92
    punto           shift and go to state 102

  ! elevado         [ reduce using rule 180 (EXP -> EXP division EXP .) ]
  ! punto           [ reduce using rule 180 (EXP -> EXP division EXP .) ]
  ! mas             [ shift and go to state 87 ]
  ! menos           [ shift and go to state 88 ]
  ! multiplicacion  [ shift and go to state 89 ]
  ! division        [ shift and go to state 90 ]
  ! modulo          [ shift and go to state 91 ]
  ! and             [ shift and go to state 93 ]
  ! or              [ shift and go to state 94 ]
  ! mayor           [ shift and go to state 95 ]
  ! menor           [ shift and go to state 96 ]
  ! mayor_igual     [ shift and go to state 97 ]
  ! menor_igual     [ shift and go to state 98 ]
  ! igual           [ shift and go to state 99 ]
  ! diferente1      [ shift and go to state 100 ]
  ! diferente2      [ shift and go to state 101 ]
  ! between         [ shift and go to state 103 ]
  ! is              [ shift and go to state 104 ]
  ! isnull          [ shift and go to state 106 ]
  ! notnull         [ shift and go to state 107 ]
  ! as              [ shift and go to state 108 ]
  ! cadenaString    [ shift and go to state 109 ]
  ! id              [ shift and go to state 110 ]
  ! cadena          [ shift and go to state 111 ]
  ! in              [ shift and go to state 112 ]
  ! not             [ shift and go to state 105 ]
  ! like            [ shift and go to state 113 ]


state 158

    (181) EXP -> EXP modulo EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

    r_from          reduce using rule 181 (EXP -> EXP modulo EXP .)
    coma            reduce using rule 181 (EXP -> EXP modulo EXP .)
    where           reduce using rule 181 (EXP -> EXP modulo EXP .)
    union           reduce using rule 181 (EXP -> EXP modulo EXP .)
    group           reduce using rule 181 (EXP -> EXP modulo EXP .)
    having          reduce using rule 181 (EXP -> EXP modulo EXP .)
    intersect       reduce using rule 181 (EXP -> EXP modulo EXP .)
    except          reduce using rule 181 (EXP -> EXP modulo EXP .)
    order           reduce using rule 181 (EXP -> EXP modulo EXP .)
    limit           reduce using rule 181 (EXP -> EXP modulo EXP .)
    offset          reduce using rule 181 (EXP -> EXP modulo EXP .)
    ptcoma          reduce using rule 181 (EXP -> EXP modulo EXP .)
    mas             reduce using rule 181 (EXP -> EXP modulo EXP .)
    menos           reduce using rule 181 (EXP -> EXP modulo EXP .)
    multiplicacion  reduce using rule 181 (EXP -> EXP modulo EXP .)
    division        reduce using rule 181 (EXP -> EXP modulo EXP .)
    modulo          reduce using rule 181 (EXP -> EXP modulo EXP .)
    and             reduce using rule 181 (EXP -> EXP modulo EXP .)
    or              reduce using rule 181 (EXP -> EXP modulo EXP .)
    mayor           reduce using rule 181 (EXP -> EXP modulo EXP .)
    menor           reduce using rule 181 (EXP -> EXP modulo EXP .)
    mayor_igual     reduce using rule 181 (EXP -> EXP modulo EXP .)
    menor_igual     reduce using rule 181 (EXP -> EXP modulo EXP .)
    igual           reduce using rule 181 (EXP -> EXP modulo EXP .)
    diferente1      reduce using rule 181 (EXP -> EXP modulo EXP .)
    diferente2      reduce using rule 181 (EXP -> EXP modulo EXP .)
    between         reduce using rule 181 (EXP -> EXP modulo EXP .)
    is              reduce using rule 181 (EXP -> EXP modulo EXP .)
    isnull          reduce using rule 181 (EXP -> EXP modulo EXP .)
    notnull         reduce using rule 181 (EXP -> EXP modulo EXP .)
    as              reduce using rule 181 (EXP -> EXP modulo EXP .)
    cadenaString    reduce using rule 181 (EXP -> EXP modulo EXP .)
    id              reduce using rule 181 (EXP -> EXP modulo EXP .)
    cadena          reduce using rule 181 (EXP -> EXP modulo EXP .)
    in              reduce using rule 181 (EXP -> EXP modulo EXP .)
    not             reduce using rule 181 (EXP -> EXP modulo EXP .)
    like            reduce using rule 181 (EXP -> EXP modulo EXP .)
    parc            reduce using rule 181 (EXP -> EXP modulo EXP .)
    then            reduce using rule 181 (EXP -> EXP modulo EXP .)
    end             reduce using rule 181 (EXP -> EXP modulo EXP .)
    else            reduce using rule 181 (EXP -> EXP modulo EXP .)
    when            reduce using rule 181 (EXP -> EXP modulo EXP .)
    constraint      reduce using rule 181 (EXP -> EXP modulo EXP .)
    unique          reduce using rule 181 (EXP -> EXP modulo EXP .)
    check           reduce using rule 181 (EXP -> EXP modulo EXP .)
    default         reduce using rule 181 (EXP -> EXP modulo EXP .)
    null            reduce using rule 181 (EXP -> EXP modulo EXP .)
    primary         reduce using rule 181 (EXP -> EXP modulo EXP .)
    references      reduce using rule 181 (EXP -> EXP modulo EXP .)
    asc             reduce using rule 181 (EXP -> EXP modulo EXP .)
    desc            reduce using rule 181 (EXP -> EXP modulo EXP .)
    elevado         shift and go to state 92
    punto           shift and go to state 102

  ! elevado         [ reduce using rule 181 (EXP -> EXP modulo EXP .) ]
  ! punto           [ reduce using rule 181 (EXP -> EXP modulo EXP .) ]
  ! mas             [ shift and go to state 87 ]
  ! menos           [ shift and go to state 88 ]
  ! multiplicacion  [ shift and go to state 89 ]
  ! division        [ shift and go to state 90 ]
  ! modulo          [ shift and go to state 91 ]
  ! and             [ shift and go to state 93 ]
  ! or              [ shift and go to state 94 ]
  ! mayor           [ shift and go to state 95 ]
  ! menor           [ shift and go to state 96 ]
  ! mayor_igual     [ shift and go to state 97 ]
  ! menor_igual     [ shift and go to state 98 ]
  ! igual           [ shift and go to state 99 ]
  ! diferente1      [ shift and go to state 100 ]
  ! diferente2      [ shift and go to state 101 ]
  ! between         [ shift and go to state 103 ]
  ! is              [ shift and go to state 104 ]
  ! isnull          [ shift and go to state 106 ]
  ! notnull         [ shift and go to state 107 ]
  ! as              [ shift and go to state 108 ]
  ! cadenaString    [ shift and go to state 109 ]
  ! id              [ shift and go to state 110 ]
  ! cadena          [ shift and go to state 111 ]
  ! in              [ shift and go to state 112 ]
  ! not             [ shift and go to state 105 ]
  ! like            [ shift and go to state 113 ]


state 159

    (182) EXP -> EXP elevado EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

    r_from          reduce using rule 182 (EXP -> EXP elevado EXP .)
    coma            reduce using rule 182 (EXP -> EXP elevado EXP .)
    where           reduce using rule 182 (EXP -> EXP elevado EXP .)
    union           reduce using rule 182 (EXP -> EXP elevado EXP .)
    group           reduce using rule 182 (EXP -> EXP elevado EXP .)
    having          reduce using rule 182 (EXP -> EXP elevado EXP .)
    intersect       reduce using rule 182 (EXP -> EXP elevado EXP .)
    except          reduce using rule 182 (EXP -> EXP elevado EXP .)
    order           reduce using rule 182 (EXP -> EXP elevado EXP .)
    limit           reduce using rule 182 (EXP -> EXP elevado EXP .)
    offset          reduce using rule 182 (EXP -> EXP elevado EXP .)
    ptcoma          reduce using rule 182 (EXP -> EXP elevado EXP .)
    mas             reduce using rule 182 (EXP -> EXP elevado EXP .)
    menos           reduce using rule 182 (EXP -> EXP elevado EXP .)
    multiplicacion  reduce using rule 182 (EXP -> EXP elevado EXP .)
    division        reduce using rule 182 (EXP -> EXP elevado EXP .)
    modulo          reduce using rule 182 (EXP -> EXP elevado EXP .)
    elevado         reduce using rule 182 (EXP -> EXP elevado EXP .)
    and             reduce using rule 182 (EXP -> EXP elevado EXP .)
    or              reduce using rule 182 (EXP -> EXP elevado EXP .)
    mayor           reduce using rule 182 (EXP -> EXP elevado EXP .)
    menor           reduce using rule 182 (EXP -> EXP elevado EXP .)
    mayor_igual     reduce using rule 182 (EXP -> EXP elevado EXP .)
    menor_igual     reduce using rule 182 (EXP -> EXP elevado EXP .)
    igual           reduce using rule 182 (EXP -> EXP elevado EXP .)
    diferente1      reduce using rule 182 (EXP -> EXP elevado EXP .)
    diferente2      reduce using rule 182 (EXP -> EXP elevado EXP .)
    between         reduce using rule 182 (EXP -> EXP elevado EXP .)
    is              reduce using rule 182 (EXP -> EXP elevado EXP .)
    isnull          reduce using rule 182 (EXP -> EXP elevado EXP .)
    notnull         reduce using rule 182 (EXP -> EXP elevado EXP .)
    as              reduce using rule 182 (EXP -> EXP elevado EXP .)
    cadenaString    reduce using rule 182 (EXP -> EXP elevado EXP .)
    id              reduce using rule 182 (EXP -> EXP elevado EXP .)
    cadena          reduce using rule 182 (EXP -> EXP elevado EXP .)
    in              reduce using rule 182 (EXP -> EXP elevado EXP .)
    not             reduce using rule 182 (EXP -> EXP elevado EXP .)
    like            reduce using rule 182 (EXP -> EXP elevado EXP .)
    parc            reduce using rule 182 (EXP -> EXP elevado EXP .)
    then            reduce using rule 182 (EXP -> EXP elevado EXP .)
    end             reduce using rule 182 (EXP -> EXP elevado EXP .)
    else            reduce using rule 182 (EXP -> EXP elevado EXP .)
    when            reduce using rule 182 (EXP -> EXP elevado EXP .)
    constraint      reduce using rule 182 (EXP -> EXP elevado EXP .)
    unique          reduce using rule 182 (EXP -> EXP elevado EXP .)
    check           reduce using rule 182 (EXP -> EXP elevado EXP .)
    default         reduce using rule 182 (EXP -> EXP elevado EXP .)
    null            reduce using rule 182 (EXP -> EXP elevado EXP .)
    primary         reduce using rule 182 (EXP -> EXP elevado EXP .)
    references      reduce using rule 182 (EXP -> EXP elevado EXP .)
    asc             reduce using rule 182 (EXP -> EXP elevado EXP .)
    desc            reduce using rule 182 (EXP -> EXP elevado EXP .)
    punto           shift and go to state 102

  ! punto           [ reduce using rule 182 (EXP -> EXP elevado EXP .) ]
  ! mas             [ shift and go to state 87 ]
  ! menos           [ shift and go to state 88 ]
  ! multiplicacion  [ shift and go to state 89 ]
  ! division        [ shift and go to state 90 ]
  ! modulo          [ shift and go to state 91 ]
  ! elevado         [ shift and go to state 92 ]
  ! and             [ shift and go to state 93 ]
  ! or              [ shift and go to state 94 ]
  ! mayor           [ shift and go to state 95 ]
  ! menor           [ shift and go to state 96 ]
  ! mayor_igual     [ shift and go to state 97 ]
  ! menor_igual     [ shift and go to state 98 ]
  ! igual           [ shift and go to state 99 ]
  ! diferente1      [ shift and go to state 100 ]
  ! diferente2      [ shift and go to state 101 ]
  ! between         [ shift and go to state 103 ]
  ! is              [ shift and go to state 104 ]
  ! isnull          [ shift and go to state 106 ]
  ! notnull         [ shift and go to state 107 ]
  ! as              [ shift and go to state 108 ]
  ! cadenaString    [ shift and go to state 109 ]
  ! id              [ shift and go to state 110 ]
  ! cadena          [ shift and go to state 111 ]
  ! in              [ shift and go to state 112 ]
  ! not             [ shift and go to state 105 ]
  ! like            [ shift and go to state 113 ]


state 160

    (183) EXP -> EXP and EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

    r_from          reduce using rule 183 (EXP -> EXP and EXP .)
    coma            reduce using rule 183 (EXP -> EXP and EXP .)
    where           reduce using rule 183 (EXP -> EXP and EXP .)
    union           reduce using rule 183 (EXP -> EXP and EXP .)
    group           reduce using rule 183 (EXP -> EXP and EXP .)
    having          reduce using rule 183 (EXP -> EXP and EXP .)
    intersect       reduce using rule 183 (EXP -> EXP and EXP .)
    except          reduce using rule 183 (EXP -> EXP and EXP .)
    order           reduce using rule 183 (EXP -> EXP and EXP .)
    limit           reduce using rule 183 (EXP -> EXP and EXP .)
    offset          reduce using rule 183 (EXP -> EXP and EXP .)
    ptcoma          reduce using rule 183 (EXP -> EXP and EXP .)
    and             reduce using rule 183 (EXP -> EXP and EXP .)
    or              reduce using rule 183 (EXP -> EXP and EXP .)
    between         reduce using rule 183 (EXP -> EXP and EXP .)
    is              reduce using rule 183 (EXP -> EXP and EXP .)
    isnull          reduce using rule 183 (EXP -> EXP and EXP .)
    notnull         reduce using rule 183 (EXP -> EXP and EXP .)
    as              reduce using rule 183 (EXP -> EXP and EXP .)
    cadenaString    reduce using rule 183 (EXP -> EXP and EXP .)
    id              reduce using rule 183 (EXP -> EXP and EXP .)
    cadena          reduce using rule 183 (EXP -> EXP and EXP .)
    in              reduce using rule 183 (EXP -> EXP and EXP .)
    like            reduce using rule 183 (EXP -> EXP and EXP .)
    parc            reduce using rule 183 (EXP -> EXP and EXP .)
    then            reduce using rule 183 (EXP -> EXP and EXP .)
    end             reduce using rule 183 (EXP -> EXP and EXP .)
    else            reduce using rule 183 (EXP -> EXP and EXP .)
    when            reduce using rule 183 (EXP -> EXP and EXP .)
    constraint      reduce using rule 183 (EXP -> EXP and EXP .)
    unique          reduce using rule 183 (EXP -> EXP and EXP .)
    check           reduce using rule 183 (EXP -> EXP and EXP .)
    default         reduce using rule 183 (EXP -> EXP and EXP .)
    null            reduce using rule 183 (EXP -> EXP and EXP .)
    primary         reduce using rule 183 (EXP -> EXP and EXP .)
    references      reduce using rule 183 (EXP -> EXP and EXP .)
    asc             reduce using rule 183 (EXP -> EXP and EXP .)
    desc            reduce using rule 183 (EXP -> EXP and EXP .)
    mas             shift and go to state 87
    menos           shift and go to state 88
    multiplicacion  shift and go to state 89
    division        shift and go to state 90
    modulo          shift and go to state 91
    elevado         shift and go to state 92
    mayor           shift and go to state 95
    menor           shift and go to state 96
    mayor_igual     shift and go to state 97
    menor_igual     shift and go to state 98
    igual           shift and go to state 99
    diferente1      shift and go to state 100
    diferente2      shift and go to state 101
    punto           shift and go to state 102
    not             shift and go to state 105

  ! mas             [ reduce using rule 183 (EXP -> EXP and EXP .) ]
  ! menos           [ reduce using rule 183 (EXP -> EXP and EXP .) ]
  ! multiplicacion  [ reduce using rule 183 (EXP -> EXP and EXP .) ]
  ! division        [ reduce using rule 183 (EXP -> EXP and EXP .) ]
  ! modulo          [ reduce using rule 183 (EXP -> EXP and EXP .) ]
  ! elevado         [ reduce using rule 183 (EXP -> EXP and EXP .) ]
  ! mayor           [ reduce using rule 183 (EXP -> EXP and EXP .) ]
  ! menor           [ reduce using rule 183 (EXP -> EXP and EXP .) ]
  ! mayor_igual     [ reduce using rule 183 (EXP -> EXP and EXP .) ]
  ! menor_igual     [ reduce using rule 183 (EXP -> EXP and EXP .) ]
  ! igual           [ reduce using rule 183 (EXP -> EXP and EXP .) ]
  ! diferente1      [ reduce using rule 183 (EXP -> EXP and EXP .) ]
  ! diferente2      [ reduce using rule 183 (EXP -> EXP and EXP .) ]
  ! punto           [ reduce using rule 183 (EXP -> EXP and EXP .) ]
  ! not             [ reduce using rule 183 (EXP -> EXP and EXP .) ]
  ! and             [ shift and go to state 93 ]
  ! or              [ shift and go to state 94 ]
  ! between         [ shift and go to state 103 ]
  ! is              [ shift and go to state 104 ]
  ! isnull          [ shift and go to state 106 ]
  ! notnull         [ shift and go to state 107 ]
  ! as              [ shift and go to state 108 ]
  ! cadenaString    [ shift and go to state 109 ]
  ! id              [ shift and go to state 110 ]
  ! cadena          [ shift and go to state 111 ]
  ! in              [ shift and go to state 112 ]
  ! like            [ shift and go to state 113 ]


state 161

    (184) EXP -> EXP or EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

    r_from          reduce using rule 184 (EXP -> EXP or EXP .)
    coma            reduce using rule 184 (EXP -> EXP or EXP .)
    where           reduce using rule 184 (EXP -> EXP or EXP .)
    union           reduce using rule 184 (EXP -> EXP or EXP .)
    group           reduce using rule 184 (EXP -> EXP or EXP .)
    having          reduce using rule 184 (EXP -> EXP or EXP .)
    intersect       reduce using rule 184 (EXP -> EXP or EXP .)
    except          reduce using rule 184 (EXP -> EXP or EXP .)
    order           reduce using rule 184 (EXP -> EXP or EXP .)
    limit           reduce using rule 184 (EXP -> EXP or EXP .)
    offset          reduce using rule 184 (EXP -> EXP or EXP .)
    ptcoma          reduce using rule 184 (EXP -> EXP or EXP .)
    or              reduce using rule 184 (EXP -> EXP or EXP .)
    between         reduce using rule 184 (EXP -> EXP or EXP .)
    is              reduce using rule 184 (EXP -> EXP or EXP .)
    isnull          reduce using rule 184 (EXP -> EXP or EXP .)
    notnull         reduce using rule 184 (EXP -> EXP or EXP .)
    as              reduce using rule 184 (EXP -> EXP or EXP .)
    cadenaString    reduce using rule 184 (EXP -> EXP or EXP .)
    id              reduce using rule 184 (EXP -> EXP or EXP .)
    cadena          reduce using rule 184 (EXP -> EXP or EXP .)
    in              reduce using rule 184 (EXP -> EXP or EXP .)
    like            reduce using rule 184 (EXP -> EXP or EXP .)
    parc            reduce using rule 184 (EXP -> EXP or EXP .)
    then            reduce using rule 184 (EXP -> EXP or EXP .)
    end             reduce using rule 184 (EXP -> EXP or EXP .)
    else            reduce using rule 184 (EXP -> EXP or EXP .)
    when            reduce using rule 184 (EXP -> EXP or EXP .)
    constraint      reduce using rule 184 (EXP -> EXP or EXP .)
    unique          reduce using rule 184 (EXP -> EXP or EXP .)
    check           reduce using rule 184 (EXP -> EXP or EXP .)
    default         reduce using rule 184 (EXP -> EXP or EXP .)
    null            reduce using rule 184 (EXP -> EXP or EXP .)
    primary         reduce using rule 184 (EXP -> EXP or EXP .)
    references      reduce using rule 184 (EXP -> EXP or EXP .)
    asc             reduce using rule 184 (EXP -> EXP or EXP .)
    desc            reduce using rule 184 (EXP -> EXP or EXP .)
    mas             shift and go to state 87
    menos           shift and go to state 88
    multiplicacion  shift and go to state 89
    division        shift and go to state 90
    modulo          shift and go to state 91
    elevado         shift and go to state 92
    and             shift and go to state 93
    mayor           shift and go to state 95
    menor           shift and go to state 96
    mayor_igual     shift and go to state 97
    menor_igual     shift and go to state 98
    igual           shift and go to state 99
    diferente1      shift and go to state 100
    diferente2      shift and go to state 101
    punto           shift and go to state 102
    not             shift and go to state 105

  ! mas             [ reduce using rule 184 (EXP -> EXP or EXP .) ]
  ! menos           [ reduce using rule 184 (EXP -> EXP or EXP .) ]
  ! multiplicacion  [ reduce using rule 184 (EXP -> EXP or EXP .) ]
  ! division        [ reduce using rule 184 (EXP -> EXP or EXP .) ]
  ! modulo          [ reduce using rule 184 (EXP -> EXP or EXP .) ]
  ! elevado         [ reduce using rule 184 (EXP -> EXP or EXP .) ]
  ! and             [ reduce using rule 184 (EXP -> EXP or EXP .) ]
  ! mayor           [ reduce using rule 184 (EXP -> EXP or EXP .) ]
  ! menor           [ reduce using rule 184 (EXP -> EXP or EXP .) ]
  ! mayor_igual     [ reduce using rule 184 (EXP -> EXP or EXP .) ]
  ! menor_igual     [ reduce using rule 184 (EXP -> EXP or EXP .) ]
  ! igual           [ reduce using rule 184 (EXP -> EXP or EXP .) ]
  ! diferente1      [ reduce using rule 184 (EXP -> EXP or EXP .) ]
  ! diferente2      [ reduce using rule 184 (EXP -> EXP or EXP .) ]
  ! punto           [ reduce using rule 184 (EXP -> EXP or EXP .) ]
  ! not             [ reduce using rule 184 (EXP -> EXP or EXP .) ]
  ! or              [ shift and go to state 94 ]
  ! between         [ shift and go to state 103 ]
  ! is              [ shift and go to state 104 ]
  ! isnull          [ shift and go to state 106 ]
  ! notnull         [ shift and go to state 107 ]
  ! as              [ shift and go to state 108 ]
  ! cadenaString    [ shift and go to state 109 ]
  ! id              [ shift and go to state 110 ]
  ! cadena          [ shift and go to state 111 ]
  ! in              [ shift and go to state 112 ]
  ! like            [ shift and go to state 113 ]


state 162

    (185) EXP -> EXP mayor EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

    r_from          reduce using rule 185 (EXP -> EXP mayor EXP .)
    coma            reduce using rule 185 (EXP -> EXP mayor EXP .)
    where           reduce using rule 185 (EXP -> EXP mayor EXP .)
    union           reduce using rule 185 (EXP -> EXP mayor EXP .)
    group           reduce using rule 185 (EXP -> EXP mayor EXP .)
    having          reduce using rule 185 (EXP -> EXP mayor EXP .)
    intersect       reduce using rule 185 (EXP -> EXP mayor EXP .)
    except          reduce using rule 185 (EXP -> EXP mayor EXP .)
    order           reduce using rule 185 (EXP -> EXP mayor EXP .)
    limit           reduce using rule 185 (EXP -> EXP mayor EXP .)
    offset          reduce using rule 185 (EXP -> EXP mayor EXP .)
    ptcoma          reduce using rule 185 (EXP -> EXP mayor EXP .)
    and             reduce using rule 185 (EXP -> EXP mayor EXP .)
    or              reduce using rule 185 (EXP -> EXP mayor EXP .)
    mayor           reduce using rule 185 (EXP -> EXP mayor EXP .)
    menor           reduce using rule 185 (EXP -> EXP mayor EXP .)
    mayor_igual     reduce using rule 185 (EXP -> EXP mayor EXP .)
    menor_igual     reduce using rule 185 (EXP -> EXP mayor EXP .)
    igual           reduce using rule 185 (EXP -> EXP mayor EXP .)
    diferente1      reduce using rule 185 (EXP -> EXP mayor EXP .)
    diferente2      reduce using rule 185 (EXP -> EXP mayor EXP .)
    between         reduce using rule 185 (EXP -> EXP mayor EXP .)
    is              reduce using rule 185 (EXP -> EXP mayor EXP .)
    isnull          reduce using rule 185 (EXP -> EXP mayor EXP .)
    notnull         reduce using rule 185 (EXP -> EXP mayor EXP .)
    as              reduce using rule 185 (EXP -> EXP mayor EXP .)
    cadenaString    reduce using rule 185 (EXP -> EXP mayor EXP .)
    id              reduce using rule 185 (EXP -> EXP mayor EXP .)
    cadena          reduce using rule 185 (EXP -> EXP mayor EXP .)
    in              reduce using rule 185 (EXP -> EXP mayor EXP .)
    not             reduce using rule 185 (EXP -> EXP mayor EXP .)
    like            reduce using rule 185 (EXP -> EXP mayor EXP .)
    parc            reduce using rule 185 (EXP -> EXP mayor EXP .)
    then            reduce using rule 185 (EXP -> EXP mayor EXP .)
    end             reduce using rule 185 (EXP -> EXP mayor EXP .)
    else            reduce using rule 185 (EXP -> EXP mayor EXP .)
    when            reduce using rule 185 (EXP -> EXP mayor EXP .)
    constraint      reduce using rule 185 (EXP -> EXP mayor EXP .)
    unique          reduce using rule 185 (EXP -> EXP mayor EXP .)
    check           reduce using rule 185 (EXP -> EXP mayor EXP .)
    default         reduce using rule 185 (EXP -> EXP mayor EXP .)
    null            reduce using rule 185 (EXP -> EXP mayor EXP .)
    primary         reduce using rule 185 (EXP -> EXP mayor EXP .)
    references      reduce using rule 185 (EXP -> EXP mayor EXP .)
    asc             reduce using rule 185 (EXP -> EXP mayor EXP .)
    desc            reduce using rule 185 (EXP -> EXP mayor EXP .)
    mas             shift and go to state 87
    menos           shift and go to state 88
    multiplicacion  shift and go to state 89
    division        shift and go to state 90
    modulo          shift and go to state 91
    elevado         shift and go to state 92
    punto           shift and go to state 102

  ! mas             [ reduce using rule 185 (EXP -> EXP mayor EXP .) ]
  ! menos           [ reduce using rule 185 (EXP -> EXP mayor EXP .) ]
  ! multiplicacion  [ reduce using rule 185 (EXP -> EXP mayor EXP .) ]
  ! division        [ reduce using rule 185 (EXP -> EXP mayor EXP .) ]
  ! modulo          [ reduce using rule 185 (EXP -> EXP mayor EXP .) ]
  ! elevado         [ reduce using rule 185 (EXP -> EXP mayor EXP .) ]
  ! punto           [ reduce using rule 185 (EXP -> EXP mayor EXP .) ]
  ! and             [ shift and go to state 93 ]
  ! or              [ shift and go to state 94 ]
  ! mayor           [ shift and go to state 95 ]
  ! menor           [ shift and go to state 96 ]
  ! mayor_igual     [ shift and go to state 97 ]
  ! menor_igual     [ shift and go to state 98 ]
  ! igual           [ shift and go to state 99 ]
  ! diferente1      [ shift and go to state 100 ]
  ! diferente2      [ shift and go to state 101 ]
  ! between         [ shift and go to state 103 ]
  ! is              [ shift and go to state 104 ]
  ! isnull          [ shift and go to state 106 ]
  ! notnull         [ shift and go to state 107 ]
  ! as              [ shift and go to state 108 ]
  ! cadenaString    [ shift and go to state 109 ]
  ! id              [ shift and go to state 110 ]
  ! cadena          [ shift and go to state 111 ]
  ! in              [ shift and go to state 112 ]
  ! not             [ shift and go to state 105 ]
  ! like            [ shift and go to state 113 ]


state 163

    (186) EXP -> EXP menor EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

    r_from          reduce using rule 186 (EXP -> EXP menor EXP .)
    coma            reduce using rule 186 (EXP -> EXP menor EXP .)
    where           reduce using rule 186 (EXP -> EXP menor EXP .)
    union           reduce using rule 186 (EXP -> EXP menor EXP .)
    group           reduce using rule 186 (EXP -> EXP menor EXP .)
    having          reduce using rule 186 (EXP -> EXP menor EXP .)
    intersect       reduce using rule 186 (EXP -> EXP menor EXP .)
    except          reduce using rule 186 (EXP -> EXP menor EXP .)
    order           reduce using rule 186 (EXP -> EXP menor EXP .)
    limit           reduce using rule 186 (EXP -> EXP menor EXP .)
    offset          reduce using rule 186 (EXP -> EXP menor EXP .)
    ptcoma          reduce using rule 186 (EXP -> EXP menor EXP .)
    and             reduce using rule 186 (EXP -> EXP menor EXP .)
    or              reduce using rule 186 (EXP -> EXP menor EXP .)
    mayor           reduce using rule 186 (EXP -> EXP menor EXP .)
    menor           reduce using rule 186 (EXP -> EXP menor EXP .)
    mayor_igual     reduce using rule 186 (EXP -> EXP menor EXP .)
    menor_igual     reduce using rule 186 (EXP -> EXP menor EXP .)
    igual           reduce using rule 186 (EXP -> EXP menor EXP .)
    diferente1      reduce using rule 186 (EXP -> EXP menor EXP .)
    diferente2      reduce using rule 186 (EXP -> EXP menor EXP .)
    between         reduce using rule 186 (EXP -> EXP menor EXP .)
    is              reduce using rule 186 (EXP -> EXP menor EXP .)
    isnull          reduce using rule 186 (EXP -> EXP menor EXP .)
    notnull         reduce using rule 186 (EXP -> EXP menor EXP .)
    as              reduce using rule 186 (EXP -> EXP menor EXP .)
    cadenaString    reduce using rule 186 (EXP -> EXP menor EXP .)
    id              reduce using rule 186 (EXP -> EXP menor EXP .)
    cadena          reduce using rule 186 (EXP -> EXP menor EXP .)
    in              reduce using rule 186 (EXP -> EXP menor EXP .)
    not             reduce using rule 186 (EXP -> EXP menor EXP .)
    like            reduce using rule 186 (EXP -> EXP menor EXP .)
    parc            reduce using rule 186 (EXP -> EXP menor EXP .)
    then            reduce using rule 186 (EXP -> EXP menor EXP .)
    end             reduce using rule 186 (EXP -> EXP menor EXP .)
    else            reduce using rule 186 (EXP -> EXP menor EXP .)
    when            reduce using rule 186 (EXP -> EXP menor EXP .)
    constraint      reduce using rule 186 (EXP -> EXP menor EXP .)
    unique          reduce using rule 186 (EXP -> EXP menor EXP .)
    check           reduce using rule 186 (EXP -> EXP menor EXP .)
    default         reduce using rule 186 (EXP -> EXP menor EXP .)
    null            reduce using rule 186 (EXP -> EXP menor EXP .)
    primary         reduce using rule 186 (EXP -> EXP menor EXP .)
    references      reduce using rule 186 (EXP -> EXP menor EXP .)
    asc             reduce using rule 186 (EXP -> EXP menor EXP .)
    desc            reduce using rule 186 (EXP -> EXP menor EXP .)
    mas             shift and go to state 87
    menos           shift and go to state 88
    multiplicacion  shift and go to state 89
    division        shift and go to state 90
    modulo          shift and go to state 91
    elevado         shift and go to state 92
    punto           shift and go to state 102

  ! mas             [ reduce using rule 186 (EXP -> EXP menor EXP .) ]
  ! menos           [ reduce using rule 186 (EXP -> EXP menor EXP .) ]
  ! multiplicacion  [ reduce using rule 186 (EXP -> EXP menor EXP .) ]
  ! division        [ reduce using rule 186 (EXP -> EXP menor EXP .) ]
  ! modulo          [ reduce using rule 186 (EXP -> EXP menor EXP .) ]
  ! elevado         [ reduce using rule 186 (EXP -> EXP menor EXP .) ]
  ! punto           [ reduce using rule 186 (EXP -> EXP menor EXP .) ]
  ! and             [ shift and go to state 93 ]
  ! or              [ shift and go to state 94 ]
  ! mayor           [ shift and go to state 95 ]
  ! menor           [ shift and go to state 96 ]
  ! mayor_igual     [ shift and go to state 97 ]
  ! menor_igual     [ shift and go to state 98 ]
  ! igual           [ shift and go to state 99 ]
  ! diferente1      [ shift and go to state 100 ]
  ! diferente2      [ shift and go to state 101 ]
  ! between         [ shift and go to state 103 ]
  ! is              [ shift and go to state 104 ]
  ! isnull          [ shift and go to state 106 ]
  ! notnull         [ shift and go to state 107 ]
  ! as              [ shift and go to state 108 ]
  ! cadenaString    [ shift and go to state 109 ]
  ! id              [ shift and go to state 110 ]
  ! cadena          [ shift and go to state 111 ]
  ! in              [ shift and go to state 112 ]
  ! not             [ shift and go to state 105 ]
  ! like            [ shift and go to state 113 ]


state 164

    (187) EXP -> EXP mayor_igual EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

    r_from          reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    coma            reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    where           reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    union           reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    group           reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    having          reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    intersect       reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    except          reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    order           reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    limit           reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    offset          reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    ptcoma          reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    and             reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    or              reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    mayor           reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    menor           reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    mayor_igual     reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    menor_igual     reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    igual           reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    diferente1      reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    diferente2      reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    between         reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    is              reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    isnull          reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    notnull         reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    as              reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    cadenaString    reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    id              reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    cadena          reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    in              reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    not             reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    like            reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    parc            reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    then            reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    end             reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    else            reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    when            reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    constraint      reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    unique          reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    check           reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    default         reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    null            reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    primary         reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    references      reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    asc             reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    desc            reduce using rule 187 (EXP -> EXP mayor_igual EXP .)
    mas             shift and go to state 87
    menos           shift and go to state 88
    multiplicacion  shift and go to state 89
    division        shift and go to state 90
    modulo          shift and go to state 91
    elevado         shift and go to state 92
    punto           shift and go to state 102

  ! mas             [ reduce using rule 187 (EXP -> EXP mayor_igual EXP .) ]
  ! menos           [ reduce using rule 187 (EXP -> EXP mayor_igual EXP .) ]
  ! multiplicacion  [ reduce using rule 187 (EXP -> EXP mayor_igual EXP .) ]
  ! division        [ reduce using rule 187 (EXP -> EXP mayor_igual EXP .) ]
  ! modulo          [ reduce using rule 187 (EXP -> EXP mayor_igual EXP .) ]
  ! elevado         [ reduce using rule 187 (EXP -> EXP mayor_igual EXP .) ]
  ! punto           [ reduce using rule 187 (EXP -> EXP mayor_igual EXP .) ]
  ! and             [ shift and go to state 93 ]
  ! or              [ shift and go to state 94 ]
  ! mayor           [ shift and go to state 95 ]
  ! menor           [ shift and go to state 96 ]
  ! mayor_igual     [ shift and go to state 97 ]
  ! menor_igual     [ shift and go to state 98 ]
  ! igual           [ shift and go to state 99 ]
  ! diferente1      [ shift and go to state 100 ]
  ! diferente2      [ shift and go to state 101 ]
  ! between         [ shift and go to state 103 ]
  ! is              [ shift and go to state 104 ]
  ! isnull          [ shift and go to state 106 ]
  ! notnull         [ shift and go to state 107 ]
  ! as              [ shift and go to state 108 ]
  ! cadenaString    [ shift and go to state 109 ]
  ! id              [ shift and go to state 110 ]
  ! cadena          [ shift and go to state 111 ]
  ! in              [ shift and go to state 112 ]
  ! not             [ shift and go to state 105 ]
  ! like            [ shift and go to state 113 ]


state 165

    (188) EXP -> EXP menor_igual EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

    r_from          reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    coma            reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    where           reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    union           reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    group           reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    having          reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    intersect       reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    except          reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    order           reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    limit           reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    offset          reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    ptcoma          reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    and             reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    or              reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    mayor           reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    menor           reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    mayor_igual     reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    menor_igual     reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    igual           reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    diferente1      reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    diferente2      reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    between         reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    is              reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    isnull          reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    notnull         reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    as              reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    cadenaString    reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    id              reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    cadena          reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    in              reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    not             reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    like            reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    parc            reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    then            reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    end             reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    else            reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    when            reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    constraint      reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    unique          reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    check           reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    default         reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    null            reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    primary         reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    references      reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    asc             reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    desc            reduce using rule 188 (EXP -> EXP menor_igual EXP .)
    mas             shift and go to state 87
    menos           shift and go to state 88
    multiplicacion  shift and go to state 89
    division        shift and go to state 90
    modulo          shift and go to state 91
    elevado         shift and go to state 92
    punto           shift and go to state 102

  ! mas             [ reduce using rule 188 (EXP -> EXP menor_igual EXP .) ]
  ! menos           [ reduce using rule 188 (EXP -> EXP menor_igual EXP .) ]
  ! multiplicacion  [ reduce using rule 188 (EXP -> EXP menor_igual EXP .) ]
  ! division        [ reduce using rule 188 (EXP -> EXP menor_igual EXP .) ]
  ! modulo          [ reduce using rule 188 (EXP -> EXP menor_igual EXP .) ]
  ! elevado         [ reduce using rule 188 (EXP -> EXP menor_igual EXP .) ]
  ! punto           [ reduce using rule 188 (EXP -> EXP menor_igual EXP .) ]
  ! and             [ shift and go to state 93 ]
  ! or              [ shift and go to state 94 ]
  ! mayor           [ shift and go to state 95 ]
  ! menor           [ shift and go to state 96 ]
  ! mayor_igual     [ shift and go to state 97 ]
  ! menor_igual     [ shift and go to state 98 ]
  ! igual           [ shift and go to state 99 ]
  ! diferente1      [ shift and go to state 100 ]
  ! diferente2      [ shift and go to state 101 ]
  ! between         [ shift and go to state 103 ]
  ! is              [ shift and go to state 104 ]
  ! isnull          [ shift and go to state 106 ]
  ! notnull         [ shift and go to state 107 ]
  ! as              [ shift and go to state 108 ]
  ! cadenaString    [ shift and go to state 109 ]
  ! id              [ shift and go to state 110 ]
  ! cadena          [ shift and go to state 111 ]
  ! in              [ shift and go to state 112 ]
  ! not             [ shift and go to state 105 ]
  ! like            [ shift and go to state 113 ]


state 166

    (189) EXP -> EXP igual EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

    r_from          reduce using rule 189 (EXP -> EXP igual EXP .)
    coma            reduce using rule 189 (EXP -> EXP igual EXP .)
    where           reduce using rule 189 (EXP -> EXP igual EXP .)
    union           reduce using rule 189 (EXP -> EXP igual EXP .)
    group           reduce using rule 189 (EXP -> EXP igual EXP .)
    having          reduce using rule 189 (EXP -> EXP igual EXP .)
    intersect       reduce using rule 189 (EXP -> EXP igual EXP .)
    except          reduce using rule 189 (EXP -> EXP igual EXP .)
    order           reduce using rule 189 (EXP -> EXP igual EXP .)
    limit           reduce using rule 189 (EXP -> EXP igual EXP .)
    offset          reduce using rule 189 (EXP -> EXP igual EXP .)
    ptcoma          reduce using rule 189 (EXP -> EXP igual EXP .)
    and             reduce using rule 189 (EXP -> EXP igual EXP .)
    or              reduce using rule 189 (EXP -> EXP igual EXP .)
    mayor           reduce using rule 189 (EXP -> EXP igual EXP .)
    menor           reduce using rule 189 (EXP -> EXP igual EXP .)
    mayor_igual     reduce using rule 189 (EXP -> EXP igual EXP .)
    menor_igual     reduce using rule 189 (EXP -> EXP igual EXP .)
    igual           reduce using rule 189 (EXP -> EXP igual EXP .)
    diferente1      reduce using rule 189 (EXP -> EXP igual EXP .)
    diferente2      reduce using rule 189 (EXP -> EXP igual EXP .)
    between         reduce using rule 189 (EXP -> EXP igual EXP .)
    is              reduce using rule 189 (EXP -> EXP igual EXP .)
    isnull          reduce using rule 189 (EXP -> EXP igual EXP .)
    notnull         reduce using rule 189 (EXP -> EXP igual EXP .)
    as              reduce using rule 189 (EXP -> EXP igual EXP .)
    cadenaString    reduce using rule 189 (EXP -> EXP igual EXP .)
    id              reduce using rule 189 (EXP -> EXP igual EXP .)
    cadena          reduce using rule 189 (EXP -> EXP igual EXP .)
    in              reduce using rule 189 (EXP -> EXP igual EXP .)
    not             reduce using rule 189 (EXP -> EXP igual EXP .)
    like            reduce using rule 189 (EXP -> EXP igual EXP .)
    parc            reduce using rule 189 (EXP -> EXP igual EXP .)
    then            reduce using rule 189 (EXP -> EXP igual EXP .)
    end             reduce using rule 189 (EXP -> EXP igual EXP .)
    else            reduce using rule 189 (EXP -> EXP igual EXP .)
    when            reduce using rule 189 (EXP -> EXP igual EXP .)
    constraint      reduce using rule 189 (EXP -> EXP igual EXP .)
    unique          reduce using rule 189 (EXP -> EXP igual EXP .)
    check           reduce using rule 189 (EXP -> EXP igual EXP .)
    default         reduce using rule 189 (EXP -> EXP igual EXP .)
    null            reduce using rule 189 (EXP -> EXP igual EXP .)
    primary         reduce using rule 189 (EXP -> EXP igual EXP .)
    references      reduce using rule 189 (EXP -> EXP igual EXP .)
    asc             reduce using rule 189 (EXP -> EXP igual EXP .)
    desc            reduce using rule 189 (EXP -> EXP igual EXP .)
    mas             shift and go to state 87
    menos           shift and go to state 88
    multiplicacion  shift and go to state 89
    division        shift and go to state 90
    modulo          shift and go to state 91
    elevado         shift and go to state 92
    punto           shift and go to state 102

  ! mas             [ reduce using rule 189 (EXP -> EXP igual EXP .) ]
  ! menos           [ reduce using rule 189 (EXP -> EXP igual EXP .) ]
  ! multiplicacion  [ reduce using rule 189 (EXP -> EXP igual EXP .) ]
  ! division        [ reduce using rule 189 (EXP -> EXP igual EXP .) ]
  ! modulo          [ reduce using rule 189 (EXP -> EXP igual EXP .) ]
  ! elevado         [ reduce using rule 189 (EXP -> EXP igual EXP .) ]
  ! punto           [ reduce using rule 189 (EXP -> EXP igual EXP .) ]
  ! and             [ shift and go to state 93 ]
  ! or              [ shift and go to state 94 ]
  ! mayor           [ shift and go to state 95 ]
  ! menor           [ shift and go to state 96 ]
  ! mayor_igual     [ shift and go to state 97 ]
  ! menor_igual     [ shift and go to state 98 ]
  ! igual           [ shift and go to state 99 ]
  ! diferente1      [ shift and go to state 100 ]
  ! diferente2      [ shift and go to state 101 ]
  ! between         [ shift and go to state 103 ]
  ! is              [ shift and go to state 104 ]
  ! isnull          [ shift and go to state 106 ]
  ! notnull         [ shift and go to state 107 ]
  ! as              [ shift and go to state 108 ]
  ! cadenaString    [ shift and go to state 109 ]
  ! id              [ shift and go to state 110 ]
  ! cadena          [ shift and go to state 111 ]
  ! in              [ shift and go to state 112 ]
  ! not             [ shift and go to state 105 ]
  ! like            [ shift and go to state 113 ]


state 167

    (190) EXP -> EXP diferente1 EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

    r_from          reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    coma            reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    where           reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    union           reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    group           reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    having          reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    intersect       reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    except          reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    order           reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    limit           reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    offset          reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    ptcoma          reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    and             reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    or              reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    mayor           reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    menor           reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    mayor_igual     reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    menor_igual     reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    igual           reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    diferente1      reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    diferente2      reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    between         reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    is              reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    isnull          reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    notnull         reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    as              reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    cadenaString    reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    id              reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    cadena          reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    in              reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    not             reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    like            reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    parc            reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    then            reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    end             reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    else            reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    when            reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    constraint      reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    unique          reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    check           reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    default         reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    null            reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    primary         reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    references      reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    asc             reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    desc            reduce using rule 190 (EXP -> EXP diferente1 EXP .)
    mas             shift and go to state 87
    menos           shift and go to state 88
    multiplicacion  shift and go to state 89
    division        shift and go to state 90
    modulo          shift and go to state 91
    elevado         shift and go to state 92
    punto           shift and go to state 102

  ! mas             [ reduce using rule 190 (EXP -> EXP diferente1 EXP .) ]
  ! menos           [ reduce using rule 190 (EXP -> EXP diferente1 EXP .) ]
  ! multiplicacion  [ reduce using rule 190 (EXP -> EXP diferente1 EXP .) ]
  ! division        [ reduce using rule 190 (EXP -> EXP diferente1 EXP .) ]
  ! modulo          [ reduce using rule 190 (EXP -> EXP diferente1 EXP .) ]
  ! elevado         [ reduce using rule 190 (EXP -> EXP diferente1 EXP .) ]
  ! punto           [ reduce using rule 190 (EXP -> EXP diferente1 EXP .) ]
  ! and             [ shift and go to state 93 ]
  ! or              [ shift and go to state 94 ]
  ! mayor           [ shift and go to state 95 ]
  ! menor           [ shift and go to state 96 ]
  ! mayor_igual     [ shift and go to state 97 ]
  ! menor_igual     [ shift and go to state 98 ]
  ! igual           [ shift and go to state 99 ]
  ! diferente1      [ shift and go to state 100 ]
  ! diferente2      [ shift and go to state 101 ]
  ! between         [ shift and go to state 103 ]
  ! is              [ shift and go to state 104 ]
  ! isnull          [ shift and go to state 106 ]
  ! notnull         [ shift and go to state 107 ]
  ! as              [ shift and go to state 108 ]
  ! cadenaString    [ shift and go to state 109 ]
  ! id              [ shift and go to state 110 ]
  ! cadena          [ shift and go to state 111 ]
  ! in              [ shift and go to state 112 ]
  ! not             [ shift and go to state 105 ]
  ! like            [ shift and go to state 113 ]


state 168

    (191) EXP -> EXP diferente2 EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

    r_from          reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    coma            reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    where           reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    union           reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    group           reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    having          reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    intersect       reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    except          reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    order           reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    limit           reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    offset          reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    ptcoma          reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    and             reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    or              reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    mayor           reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    menor           reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    mayor_igual     reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    menor_igual     reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    igual           reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    diferente1      reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    diferente2      reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    between         reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    is              reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    isnull          reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    notnull         reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    as              reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    cadenaString    reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    id              reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    cadena          reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    in              reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    not             reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    like            reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    parc            reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    then            reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    end             reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    else            reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    when            reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    constraint      reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    unique          reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    check           reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    default         reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    null            reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    primary         reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    references      reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    asc             reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    desc            reduce using rule 191 (EXP -> EXP diferente2 EXP .)
    mas             shift and go to state 87
    menos           shift and go to state 88
    multiplicacion  shift and go to state 89
    division        shift and go to state 90
    modulo          shift and go to state 91
    elevado         shift and go to state 92
    punto           shift and go to state 102

  ! mas             [ reduce using rule 191 (EXP -> EXP diferente2 EXP .) ]
  ! menos           [ reduce using rule 191 (EXP -> EXP diferente2 EXP .) ]
  ! multiplicacion  [ reduce using rule 191 (EXP -> EXP diferente2 EXP .) ]
  ! division        [ reduce using rule 191 (EXP -> EXP diferente2 EXP .) ]
  ! modulo          [ reduce using rule 191 (EXP -> EXP diferente2 EXP .) ]
  ! elevado         [ reduce using rule 191 (EXP -> EXP diferente2 EXP .) ]
  ! punto           [ reduce using rule 191 (EXP -> EXP diferente2 EXP .) ]
  ! and             [ shift and go to state 93 ]
  ! or              [ shift and go to state 94 ]
  ! mayor           [ shift and go to state 95 ]
  ! menor           [ shift and go to state 96 ]
  ! mayor_igual     [ shift and go to state 97 ]
  ! menor_igual     [ shift and go to state 98 ]
  ! igual           [ shift and go to state 99 ]
  ! diferente1      [ shift and go to state 100 ]
  ! diferente2      [ shift and go to state 101 ]
  ! between         [ shift and go to state 103 ]
  ! is              [ shift and go to state 104 ]
  ! isnull          [ shift and go to state 106 ]
  ! notnull         [ shift and go to state 107 ]
  ! as              [ shift and go to state 108 ]
  ! cadenaString    [ shift and go to state 109 ]
  ! id              [ shift and go to state 110 ]
  ! cadena          [ shift and go to state 111 ]
  ! in              [ shift and go to state 112 ]
  ! not             [ shift and go to state 105 ]
  ! like            [ shift and go to state 113 ]


state 169

    (192) EXP -> EXP punto EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

    r_from          reduce using rule 192 (EXP -> EXP punto EXP .)
    coma            reduce using rule 192 (EXP -> EXP punto EXP .)
    where           reduce using rule 192 (EXP -> EXP punto EXP .)
    union           reduce using rule 192 (EXP -> EXP punto EXP .)
    group           reduce using rule 192 (EXP -> EXP punto EXP .)
    having          reduce using rule 192 (EXP -> EXP punto EXP .)
    intersect       reduce using rule 192 (EXP -> EXP punto EXP .)
    except          reduce using rule 192 (EXP -> EXP punto EXP .)
    order           reduce using rule 192 (EXP -> EXP punto EXP .)
    limit           reduce using rule 192 (EXP -> EXP punto EXP .)
    offset          reduce using rule 192 (EXP -> EXP punto EXP .)
    ptcoma          reduce using rule 192 (EXP -> EXP punto EXP .)
    mas             reduce using rule 192 (EXP -> EXP punto EXP .)
    menos           reduce using rule 192 (EXP -> EXP punto EXP .)
    multiplicacion  reduce using rule 192 (EXP -> EXP punto EXP .)
    division        reduce using rule 192 (EXP -> EXP punto EXP .)
    modulo          reduce using rule 192 (EXP -> EXP punto EXP .)
    elevado         reduce using rule 192 (EXP -> EXP punto EXP .)
    and             reduce using rule 192 (EXP -> EXP punto EXP .)
    or              reduce using rule 192 (EXP -> EXP punto EXP .)
    mayor           reduce using rule 192 (EXP -> EXP punto EXP .)
    menor           reduce using rule 192 (EXP -> EXP punto EXP .)
    mayor_igual     reduce using rule 192 (EXP -> EXP punto EXP .)
    menor_igual     reduce using rule 192 (EXP -> EXP punto EXP .)
    igual           reduce using rule 192 (EXP -> EXP punto EXP .)
    diferente1      reduce using rule 192 (EXP -> EXP punto EXP .)
    diferente2      reduce using rule 192 (EXP -> EXP punto EXP .)
    punto           reduce using rule 192 (EXP -> EXP punto EXP .)
    between         reduce using rule 192 (EXP -> EXP punto EXP .)
    is              reduce using rule 192 (EXP -> EXP punto EXP .)
    isnull          reduce using rule 192 (EXP -> EXP punto EXP .)
    notnull         reduce using rule 192 (EXP -> EXP punto EXP .)
    as              reduce using rule 192 (EXP -> EXP punto EXP .)
    cadenaString    reduce using rule 192 (EXP -> EXP punto EXP .)
    id              reduce using rule 192 (EXP -> EXP punto EXP .)
    cadena          reduce using rule 192 (EXP -> EXP punto EXP .)
    in              reduce using rule 192 (EXP -> EXP punto EXP .)
    not             reduce using rule 192 (EXP -> EXP punto EXP .)
    like            reduce using rule 192 (EXP -> EXP punto EXP .)
    parc            reduce using rule 192 (EXP -> EXP punto EXP .)
    then            reduce using rule 192 (EXP -> EXP punto EXP .)
    end             reduce using rule 192 (EXP -> EXP punto EXP .)
    else            reduce using rule 192 (EXP -> EXP punto EXP .)
    when            reduce using rule 192 (EXP -> EXP punto EXP .)
    constraint      reduce using rule 192 (EXP -> EXP punto EXP .)
    unique          reduce using rule 192 (EXP -> EXP punto EXP .)
    check           reduce using rule 192 (EXP -> EXP punto EXP .)
    default         reduce using rule 192 (EXP -> EXP punto EXP .)
    null            reduce using rule 192 (EXP -> EXP punto EXP .)
    primary         reduce using rule 192 (EXP -> EXP punto EXP .)
    references      reduce using rule 192 (EXP -> EXP punto EXP .)
    asc             reduce using rule 192 (EXP -> EXP punto EXP .)
    desc            reduce using rule 192 (EXP -> EXP punto EXP .)

  ! mas             [ shift and go to state 87 ]
  ! menos           [ shift and go to state 88 ]
  ! multiplicacion  [ shift and go to state 89 ]
  ! division        [ shift and go to state 90 ]
  ! modulo          [ shift and go to state 91 ]
  ! elevado         [ shift and go to state 92 ]
  ! and             [ shift and go to state 93 ]
  ! or              [ shift and go to state 94 ]
  ! mayor           [ shift and go to state 95 ]
  ! menor           [ shift and go to state 96 ]
  ! mayor_igual     [ shift and go to state 97 ]
  ! menor_igual     [ shift and go to state 98 ]
  ! igual           [ shift and go to state 99 ]
  ! diferente1      [ shift and go to state 100 ]
  ! diferente2      [ shift and go to state 101 ]
  ! punto           [ shift and go to state 102 ]
  ! between         [ shift and go to state 103 ]
  ! is              [ shift and go to state 104 ]
  ! isnull          [ shift and go to state 106 ]
  ! notnull         [ shift and go to state 107 ]
  ! as              [ shift and go to state 108 ]
  ! cadenaString    [ shift and go to state 109 ]
  ! id              [ shift and go to state 110 ]
  ! cadena          [ shift and go to state 111 ]
  ! in              [ shift and go to state 112 ]
  ! not             [ shift and go to state 105 ]
  ! like            [ shift and go to state 113 ]


state 170

    (193) EXP -> EXP between EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

    r_from          reduce using rule 193 (EXP -> EXP between EXP .)
    coma            reduce using rule 193 (EXP -> EXP between EXP .)
    where           reduce using rule 193 (EXP -> EXP between EXP .)
    union           reduce using rule 193 (EXP -> EXP between EXP .)
    group           reduce using rule 193 (EXP -> EXP between EXP .)
    having          reduce using rule 193 (EXP -> EXP between EXP .)
    intersect       reduce using rule 193 (EXP -> EXP between EXP .)
    except          reduce using rule 193 (EXP -> EXP between EXP .)
    order           reduce using rule 193 (EXP -> EXP between EXP .)
    limit           reduce using rule 193 (EXP -> EXP between EXP .)
    offset          reduce using rule 193 (EXP -> EXP between EXP .)
    ptcoma          reduce using rule 193 (EXP -> EXP between EXP .)
    and             reduce using rule 193 (EXP -> EXP between EXP .)
    or              reduce using rule 193 (EXP -> EXP between EXP .)
    between         reduce using rule 193 (EXP -> EXP between EXP .)
    is              reduce using rule 193 (EXP -> EXP between EXP .)
    isnull          reduce using rule 193 (EXP -> EXP between EXP .)
    notnull         reduce using rule 193 (EXP -> EXP between EXP .)
    as              reduce using rule 193 (EXP -> EXP between EXP .)
    cadenaString    reduce using rule 193 (EXP -> EXP between EXP .)
    id              reduce using rule 193 (EXP -> EXP between EXP .)
    cadena          reduce using rule 193 (EXP -> EXP between EXP .)
    in              reduce using rule 193 (EXP -> EXP between EXP .)
    not             reduce using rule 193 (EXP -> EXP between EXP .)
    like            reduce using rule 193 (EXP -> EXP between EXP .)
    parc            reduce using rule 193 (EXP -> EXP between EXP .)
    then            reduce using rule 193 (EXP -> EXP between EXP .)
    end             reduce using rule 193 (EXP -> EXP between EXP .)
    else            reduce using rule 193 (EXP -> EXP between EXP .)
    when            reduce using rule 193 (EXP -> EXP between EXP .)
    constraint      reduce using rule 193 (EXP -> EXP between EXP .)
    unique          reduce using rule 193 (EXP -> EXP between EXP .)
    check           reduce using rule 193 (EXP -> EXP between EXP .)
    default         reduce using rule 193 (EXP -> EXP between EXP .)
    null            reduce using rule 193 (EXP -> EXP between EXP .)
    primary         reduce using rule 193 (EXP -> EXP between EXP .)
    references      reduce using rule 193 (EXP -> EXP between EXP .)
    asc             reduce using rule 193 (EXP -> EXP between EXP .)
    desc            reduce using rule 193 (EXP -> EXP between EXP .)
    mas             shift and go to state 87
    menos           shift and go to state 88
    multiplicacion  shift and go to state 89
    division        shift and go to state 90
    modulo          shift and go to state 91
    elevado         shift and go to state 92
    mayor           shift and go to state 95
    menor           shift and go to state 96
    mayor_igual     shift and go to state 97
    menor_igual     shift and go to state 98
    igual           shift and go to state 99
    diferente1      shift and go to state 100
    diferente2      shift and go to state 101
    punto           shift and go to state 102

  ! mas             [ reduce using rule 193 (EXP -> EXP between EXP .) ]
  ! menos           [ reduce using rule 193 (EXP -> EXP between EXP .) ]
  ! multiplicacion  [ reduce using rule 193 (EXP -> EXP between EXP .) ]
  ! division        [ reduce using rule 193 (EXP -> EXP between EXP .) ]
  ! modulo          [ reduce using rule 193 (EXP -> EXP between EXP .) ]
  ! elevado         [ reduce using rule 193 (EXP -> EXP between EXP .) ]
  ! mayor           [ reduce using rule 193 (EXP -> EXP between EXP .) ]
  ! menor           [ reduce using rule 193 (EXP -> EXP between EXP .) ]
  ! mayor_igual     [ reduce using rule 193 (EXP -> EXP between EXP .) ]
  ! menor_igual     [ reduce using rule 193 (EXP -> EXP between EXP .) ]
  ! igual           [ reduce using rule 193 (EXP -> EXP between EXP .) ]
  ! diferente1      [ reduce using rule 193 (EXP -> EXP between EXP .) ]
  ! diferente2      [ reduce using rule 193 (EXP -> EXP between EXP .) ]
  ! punto           [ reduce using rule 193 (EXP -> EXP between EXP .) ]
  ! and             [ shift and go to state 93 ]
  ! or              [ shift and go to state 94 ]
  ! between         [ shift and go to state 103 ]
  ! is              [ shift and go to state 104 ]
  ! isnull          [ shift and go to state 106 ]
  ! notnull         [ shift and go to state 107 ]
  ! as              [ shift and go to state 108 ]
  ! cadenaString    [ shift and go to state 109 ]
  ! id              [ shift and go to state 110 ]
  ! cadena          [ shift and go to state 111 ]
  ! in              [ shift and go to state 112 ]
  ! not             [ shift and go to state 105 ]
  ! like            [ shift and go to state 113 ]


state 171

    (216) EXP -> EXP between symetric . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    EXP                            shift and go to state 236
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 172

    (194) EXP -> EXP is not . null
    (199) EXP -> EXP is not . true
    (201) EXP -> EXP is not . false
    (203) EXP -> EXP is not . unknown
    (219) EXP -> EXP is not . distinct r_from EXP

    null            shift and go to state 237
    true            shift and go to state 238
    false           shift and go to state 239
    unknown         shift and go to state 240
    distinct        shift and go to state 241


state 173

    (195) EXP -> EXP is null .

    r_from          reduce using rule 195 (EXP -> EXP is null .)
    coma            reduce using rule 195 (EXP -> EXP is null .)
    where           reduce using rule 195 (EXP -> EXP is null .)
    union           reduce using rule 195 (EXP -> EXP is null .)
    group           reduce using rule 195 (EXP -> EXP is null .)
    having          reduce using rule 195 (EXP -> EXP is null .)
    intersect       reduce using rule 195 (EXP -> EXP is null .)
    except          reduce using rule 195 (EXP -> EXP is null .)
    order           reduce using rule 195 (EXP -> EXP is null .)
    limit           reduce using rule 195 (EXP -> EXP is null .)
    offset          reduce using rule 195 (EXP -> EXP is null .)
    ptcoma          reduce using rule 195 (EXP -> EXP is null .)
    mas             reduce using rule 195 (EXP -> EXP is null .)
    menos           reduce using rule 195 (EXP -> EXP is null .)
    multiplicacion  reduce using rule 195 (EXP -> EXP is null .)
    division        reduce using rule 195 (EXP -> EXP is null .)
    modulo          reduce using rule 195 (EXP -> EXP is null .)
    elevado         reduce using rule 195 (EXP -> EXP is null .)
    and             reduce using rule 195 (EXP -> EXP is null .)
    or              reduce using rule 195 (EXP -> EXP is null .)
    mayor           reduce using rule 195 (EXP -> EXP is null .)
    menor           reduce using rule 195 (EXP -> EXP is null .)
    mayor_igual     reduce using rule 195 (EXP -> EXP is null .)
    menor_igual     reduce using rule 195 (EXP -> EXP is null .)
    igual           reduce using rule 195 (EXP -> EXP is null .)
    diferente1      reduce using rule 195 (EXP -> EXP is null .)
    diferente2      reduce using rule 195 (EXP -> EXP is null .)
    punto           reduce using rule 195 (EXP -> EXP is null .)
    between         reduce using rule 195 (EXP -> EXP is null .)
    is              reduce using rule 195 (EXP -> EXP is null .)
    isnull          reduce using rule 195 (EXP -> EXP is null .)
    notnull         reduce using rule 195 (EXP -> EXP is null .)
    as              reduce using rule 195 (EXP -> EXP is null .)
    cadenaString    reduce using rule 195 (EXP -> EXP is null .)
    id              reduce using rule 195 (EXP -> EXP is null .)
    cadena          reduce using rule 195 (EXP -> EXP is null .)
    in              reduce using rule 195 (EXP -> EXP is null .)
    not             reduce using rule 195 (EXP -> EXP is null .)
    like            reduce using rule 195 (EXP -> EXP is null .)
    parc            reduce using rule 195 (EXP -> EXP is null .)
    then            reduce using rule 195 (EXP -> EXP is null .)
    end             reduce using rule 195 (EXP -> EXP is null .)
    else            reduce using rule 195 (EXP -> EXP is null .)
    when            reduce using rule 195 (EXP -> EXP is null .)
    constraint      reduce using rule 195 (EXP -> EXP is null .)
    unique          reduce using rule 195 (EXP -> EXP is null .)
    check           reduce using rule 195 (EXP -> EXP is null .)
    default         reduce using rule 195 (EXP -> EXP is null .)
    null            reduce using rule 195 (EXP -> EXP is null .)
    primary         reduce using rule 195 (EXP -> EXP is null .)
    references      reduce using rule 195 (EXP -> EXP is null .)
    asc             reduce using rule 195 (EXP -> EXP is null .)
    desc            reduce using rule 195 (EXP -> EXP is null .)


state 174

    (198) EXP -> EXP is true .

    r_from          reduce using rule 198 (EXP -> EXP is true .)
    coma            reduce using rule 198 (EXP -> EXP is true .)
    where           reduce using rule 198 (EXP -> EXP is true .)
    union           reduce using rule 198 (EXP -> EXP is true .)
    group           reduce using rule 198 (EXP -> EXP is true .)
    having          reduce using rule 198 (EXP -> EXP is true .)
    intersect       reduce using rule 198 (EXP -> EXP is true .)
    except          reduce using rule 198 (EXP -> EXP is true .)
    order           reduce using rule 198 (EXP -> EXP is true .)
    limit           reduce using rule 198 (EXP -> EXP is true .)
    offset          reduce using rule 198 (EXP -> EXP is true .)
    ptcoma          reduce using rule 198 (EXP -> EXP is true .)
    mas             reduce using rule 198 (EXP -> EXP is true .)
    menos           reduce using rule 198 (EXP -> EXP is true .)
    multiplicacion  reduce using rule 198 (EXP -> EXP is true .)
    division        reduce using rule 198 (EXP -> EXP is true .)
    modulo          reduce using rule 198 (EXP -> EXP is true .)
    elevado         reduce using rule 198 (EXP -> EXP is true .)
    and             reduce using rule 198 (EXP -> EXP is true .)
    or              reduce using rule 198 (EXP -> EXP is true .)
    mayor           reduce using rule 198 (EXP -> EXP is true .)
    menor           reduce using rule 198 (EXP -> EXP is true .)
    mayor_igual     reduce using rule 198 (EXP -> EXP is true .)
    menor_igual     reduce using rule 198 (EXP -> EXP is true .)
    igual           reduce using rule 198 (EXP -> EXP is true .)
    diferente1      reduce using rule 198 (EXP -> EXP is true .)
    diferente2      reduce using rule 198 (EXP -> EXP is true .)
    punto           reduce using rule 198 (EXP -> EXP is true .)
    between         reduce using rule 198 (EXP -> EXP is true .)
    is              reduce using rule 198 (EXP -> EXP is true .)
    isnull          reduce using rule 198 (EXP -> EXP is true .)
    notnull         reduce using rule 198 (EXP -> EXP is true .)
    as              reduce using rule 198 (EXP -> EXP is true .)
    cadenaString    reduce using rule 198 (EXP -> EXP is true .)
    id              reduce using rule 198 (EXP -> EXP is true .)
    cadena          reduce using rule 198 (EXP -> EXP is true .)
    in              reduce using rule 198 (EXP -> EXP is true .)
    not             reduce using rule 198 (EXP -> EXP is true .)
    like            reduce using rule 198 (EXP -> EXP is true .)
    parc            reduce using rule 198 (EXP -> EXP is true .)
    then            reduce using rule 198 (EXP -> EXP is true .)
    end             reduce using rule 198 (EXP -> EXP is true .)
    else            reduce using rule 198 (EXP -> EXP is true .)
    when            reduce using rule 198 (EXP -> EXP is true .)
    constraint      reduce using rule 198 (EXP -> EXP is true .)
    unique          reduce using rule 198 (EXP -> EXP is true .)
    check           reduce using rule 198 (EXP -> EXP is true .)
    default         reduce using rule 198 (EXP -> EXP is true .)
    null            reduce using rule 198 (EXP -> EXP is true .)
    primary         reduce using rule 198 (EXP -> EXP is true .)
    references      reduce using rule 198 (EXP -> EXP is true .)
    asc             reduce using rule 198 (EXP -> EXP is true .)
    desc            reduce using rule 198 (EXP -> EXP is true .)


state 175

    (200) EXP -> EXP is false .

    r_from          reduce using rule 200 (EXP -> EXP is false .)
    coma            reduce using rule 200 (EXP -> EXP is false .)
    where           reduce using rule 200 (EXP -> EXP is false .)
    union           reduce using rule 200 (EXP -> EXP is false .)
    group           reduce using rule 200 (EXP -> EXP is false .)
    having          reduce using rule 200 (EXP -> EXP is false .)
    intersect       reduce using rule 200 (EXP -> EXP is false .)
    except          reduce using rule 200 (EXP -> EXP is false .)
    order           reduce using rule 200 (EXP -> EXP is false .)
    limit           reduce using rule 200 (EXP -> EXP is false .)
    offset          reduce using rule 200 (EXP -> EXP is false .)
    ptcoma          reduce using rule 200 (EXP -> EXP is false .)
    mas             reduce using rule 200 (EXP -> EXP is false .)
    menos           reduce using rule 200 (EXP -> EXP is false .)
    multiplicacion  reduce using rule 200 (EXP -> EXP is false .)
    division        reduce using rule 200 (EXP -> EXP is false .)
    modulo          reduce using rule 200 (EXP -> EXP is false .)
    elevado         reduce using rule 200 (EXP -> EXP is false .)
    and             reduce using rule 200 (EXP -> EXP is false .)
    or              reduce using rule 200 (EXP -> EXP is false .)
    mayor           reduce using rule 200 (EXP -> EXP is false .)
    menor           reduce using rule 200 (EXP -> EXP is false .)
    mayor_igual     reduce using rule 200 (EXP -> EXP is false .)
    menor_igual     reduce using rule 200 (EXP -> EXP is false .)
    igual           reduce using rule 200 (EXP -> EXP is false .)
    diferente1      reduce using rule 200 (EXP -> EXP is false .)
    diferente2      reduce using rule 200 (EXP -> EXP is false .)
    punto           reduce using rule 200 (EXP -> EXP is false .)
    between         reduce using rule 200 (EXP -> EXP is false .)
    is              reduce using rule 200 (EXP -> EXP is false .)
    isnull          reduce using rule 200 (EXP -> EXP is false .)
    notnull         reduce using rule 200 (EXP -> EXP is false .)
    as              reduce using rule 200 (EXP -> EXP is false .)
    cadenaString    reduce using rule 200 (EXP -> EXP is false .)
    id              reduce using rule 200 (EXP -> EXP is false .)
    cadena          reduce using rule 200 (EXP -> EXP is false .)
    in              reduce using rule 200 (EXP -> EXP is false .)
    not             reduce using rule 200 (EXP -> EXP is false .)
    like            reduce using rule 200 (EXP -> EXP is false .)
    parc            reduce using rule 200 (EXP -> EXP is false .)
    then            reduce using rule 200 (EXP -> EXP is false .)
    end             reduce using rule 200 (EXP -> EXP is false .)
    else            reduce using rule 200 (EXP -> EXP is false .)
    when            reduce using rule 200 (EXP -> EXP is false .)
    constraint      reduce using rule 200 (EXP -> EXP is false .)
    unique          reduce using rule 200 (EXP -> EXP is false .)
    check           reduce using rule 200 (EXP -> EXP is false .)
    default         reduce using rule 200 (EXP -> EXP is false .)
    null            reduce using rule 200 (EXP -> EXP is false .)
    primary         reduce using rule 200 (EXP -> EXP is false .)
    references      reduce using rule 200 (EXP -> EXP is false .)
    asc             reduce using rule 200 (EXP -> EXP is false .)
    desc            reduce using rule 200 (EXP -> EXP is false .)


state 176

    (202) EXP -> EXP is unknown .

    r_from          reduce using rule 202 (EXP -> EXP is unknown .)
    coma            reduce using rule 202 (EXP -> EXP is unknown .)
    where           reduce using rule 202 (EXP -> EXP is unknown .)
    union           reduce using rule 202 (EXP -> EXP is unknown .)
    group           reduce using rule 202 (EXP -> EXP is unknown .)
    having          reduce using rule 202 (EXP -> EXP is unknown .)
    intersect       reduce using rule 202 (EXP -> EXP is unknown .)
    except          reduce using rule 202 (EXP -> EXP is unknown .)
    order           reduce using rule 202 (EXP -> EXP is unknown .)
    limit           reduce using rule 202 (EXP -> EXP is unknown .)
    offset          reduce using rule 202 (EXP -> EXP is unknown .)
    ptcoma          reduce using rule 202 (EXP -> EXP is unknown .)
    mas             reduce using rule 202 (EXP -> EXP is unknown .)
    menos           reduce using rule 202 (EXP -> EXP is unknown .)
    multiplicacion  reduce using rule 202 (EXP -> EXP is unknown .)
    division        reduce using rule 202 (EXP -> EXP is unknown .)
    modulo          reduce using rule 202 (EXP -> EXP is unknown .)
    elevado         reduce using rule 202 (EXP -> EXP is unknown .)
    and             reduce using rule 202 (EXP -> EXP is unknown .)
    or              reduce using rule 202 (EXP -> EXP is unknown .)
    mayor           reduce using rule 202 (EXP -> EXP is unknown .)
    menor           reduce using rule 202 (EXP -> EXP is unknown .)
    mayor_igual     reduce using rule 202 (EXP -> EXP is unknown .)
    menor_igual     reduce using rule 202 (EXP -> EXP is unknown .)
    igual           reduce using rule 202 (EXP -> EXP is unknown .)
    diferente1      reduce using rule 202 (EXP -> EXP is unknown .)
    diferente2      reduce using rule 202 (EXP -> EXP is unknown .)
    punto           reduce using rule 202 (EXP -> EXP is unknown .)
    between         reduce using rule 202 (EXP -> EXP is unknown .)
    is              reduce using rule 202 (EXP -> EXP is unknown .)
    isnull          reduce using rule 202 (EXP -> EXP is unknown .)
    notnull         reduce using rule 202 (EXP -> EXP is unknown .)
    as              reduce using rule 202 (EXP -> EXP is unknown .)
    cadenaString    reduce using rule 202 (EXP -> EXP is unknown .)
    id              reduce using rule 202 (EXP -> EXP is unknown .)
    cadena          reduce using rule 202 (EXP -> EXP is unknown .)
    in              reduce using rule 202 (EXP -> EXP is unknown .)
    not             reduce using rule 202 (EXP -> EXP is unknown .)
    like            reduce using rule 202 (EXP -> EXP is unknown .)
    parc            reduce using rule 202 (EXP -> EXP is unknown .)
    then            reduce using rule 202 (EXP -> EXP is unknown .)
    end             reduce using rule 202 (EXP -> EXP is unknown .)
    else            reduce using rule 202 (EXP -> EXP is unknown .)
    when            reduce using rule 202 (EXP -> EXP is unknown .)
    constraint      reduce using rule 202 (EXP -> EXP is unknown .)
    unique          reduce using rule 202 (EXP -> EXP is unknown .)
    check           reduce using rule 202 (EXP -> EXP is unknown .)
    default         reduce using rule 202 (EXP -> EXP is unknown .)
    null            reduce using rule 202 (EXP -> EXP is unknown .)
    primary         reduce using rule 202 (EXP -> EXP is unknown .)
    references      reduce using rule 202 (EXP -> EXP is unknown .)
    asc             reduce using rule 202 (EXP -> EXP is unknown .)
    desc            reduce using rule 202 (EXP -> EXP is unknown .)


state 177

    (218) EXP -> EXP is distinct . r_from EXP

    r_from          shift and go to state 242


state 178

    (214) EXP -> EXP not in . para EXP parc

    para            shift and go to state 243


state 179

    (215) EXP -> EXP not between . EXP
    (217) EXP -> EXP not between . symetric EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    symetric        shift and go to state 245
    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    EXP                            shift and go to state 244
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 180

    (221) EXP -> EXP not like . cadena

    cadena          shift and go to state 246


state 181

    (204) EXP -> EXP as cadenaString .

    r_from          reduce using rule 204 (EXP -> EXP as cadenaString .)
    coma            reduce using rule 204 (EXP -> EXP as cadenaString .)
    where           reduce using rule 204 (EXP -> EXP as cadenaString .)
    union           reduce using rule 204 (EXP -> EXP as cadenaString .)
    group           reduce using rule 204 (EXP -> EXP as cadenaString .)
    having          reduce using rule 204 (EXP -> EXP as cadenaString .)
    intersect       reduce using rule 204 (EXP -> EXP as cadenaString .)
    except          reduce using rule 204 (EXP -> EXP as cadenaString .)
    order           reduce using rule 204 (EXP -> EXP as cadenaString .)
    limit           reduce using rule 204 (EXP -> EXP as cadenaString .)
    offset          reduce using rule 204 (EXP -> EXP as cadenaString .)
    ptcoma          reduce using rule 204 (EXP -> EXP as cadenaString .)
    mas             reduce using rule 204 (EXP -> EXP as cadenaString .)
    menos           reduce using rule 204 (EXP -> EXP as cadenaString .)
    multiplicacion  reduce using rule 204 (EXP -> EXP as cadenaString .)
    division        reduce using rule 204 (EXP -> EXP as cadenaString .)
    modulo          reduce using rule 204 (EXP -> EXP as cadenaString .)
    elevado         reduce using rule 204 (EXP -> EXP as cadenaString .)
    and             reduce using rule 204 (EXP -> EXP as cadenaString .)
    or              reduce using rule 204 (EXP -> EXP as cadenaString .)
    mayor           reduce using rule 204 (EXP -> EXP as cadenaString .)
    menor           reduce using rule 204 (EXP -> EXP as cadenaString .)
    mayor_igual     reduce using rule 204 (EXP -> EXP as cadenaString .)
    menor_igual     reduce using rule 204 (EXP -> EXP as cadenaString .)
    igual           reduce using rule 204 (EXP -> EXP as cadenaString .)
    diferente1      reduce using rule 204 (EXP -> EXP as cadenaString .)
    diferente2      reduce using rule 204 (EXP -> EXP as cadenaString .)
    punto           reduce using rule 204 (EXP -> EXP as cadenaString .)
    between         reduce using rule 204 (EXP -> EXP as cadenaString .)
    is              reduce using rule 204 (EXP -> EXP as cadenaString .)
    isnull          reduce using rule 204 (EXP -> EXP as cadenaString .)
    notnull         reduce using rule 204 (EXP -> EXP as cadenaString .)
    as              reduce using rule 204 (EXP -> EXP as cadenaString .)
    cadenaString    reduce using rule 204 (EXP -> EXP as cadenaString .)
    id              reduce using rule 204 (EXP -> EXP as cadenaString .)
    cadena          reduce using rule 204 (EXP -> EXP as cadenaString .)
    in              reduce using rule 204 (EXP -> EXP as cadenaString .)
    not             reduce using rule 204 (EXP -> EXP as cadenaString .)
    like            reduce using rule 204 (EXP -> EXP as cadenaString .)
    parc            reduce using rule 204 (EXP -> EXP as cadenaString .)
    then            reduce using rule 204 (EXP -> EXP as cadenaString .)
    end             reduce using rule 204 (EXP -> EXP as cadenaString .)
    else            reduce using rule 204 (EXP -> EXP as cadenaString .)
    when            reduce using rule 204 (EXP -> EXP as cadenaString .)
    constraint      reduce using rule 204 (EXP -> EXP as cadenaString .)
    unique          reduce using rule 204 (EXP -> EXP as cadenaString .)
    check           reduce using rule 204 (EXP -> EXP as cadenaString .)
    default         reduce using rule 204 (EXP -> EXP as cadenaString .)
    null            reduce using rule 204 (EXP -> EXP as cadenaString .)
    primary         reduce using rule 204 (EXP -> EXP as cadenaString .)
    references      reduce using rule 204 (EXP -> EXP as cadenaString .)
    asc             reduce using rule 204 (EXP -> EXP as cadenaString .)
    desc            reduce using rule 204 (EXP -> EXP as cadenaString .)


state 182

    (206) EXP -> EXP as id .

    r_from          reduce using rule 206 (EXP -> EXP as id .)
    coma            reduce using rule 206 (EXP -> EXP as id .)
    where           reduce using rule 206 (EXP -> EXP as id .)
    union           reduce using rule 206 (EXP -> EXP as id .)
    group           reduce using rule 206 (EXP -> EXP as id .)
    having          reduce using rule 206 (EXP -> EXP as id .)
    intersect       reduce using rule 206 (EXP -> EXP as id .)
    except          reduce using rule 206 (EXP -> EXP as id .)
    order           reduce using rule 206 (EXP -> EXP as id .)
    limit           reduce using rule 206 (EXP -> EXP as id .)
    offset          reduce using rule 206 (EXP -> EXP as id .)
    ptcoma          reduce using rule 206 (EXP -> EXP as id .)
    mas             reduce using rule 206 (EXP -> EXP as id .)
    menos           reduce using rule 206 (EXP -> EXP as id .)
    multiplicacion  reduce using rule 206 (EXP -> EXP as id .)
    division        reduce using rule 206 (EXP -> EXP as id .)
    modulo          reduce using rule 206 (EXP -> EXP as id .)
    elevado         reduce using rule 206 (EXP -> EXP as id .)
    and             reduce using rule 206 (EXP -> EXP as id .)
    or              reduce using rule 206 (EXP -> EXP as id .)
    mayor           reduce using rule 206 (EXP -> EXP as id .)
    menor           reduce using rule 206 (EXP -> EXP as id .)
    mayor_igual     reduce using rule 206 (EXP -> EXP as id .)
    menor_igual     reduce using rule 206 (EXP -> EXP as id .)
    igual           reduce using rule 206 (EXP -> EXP as id .)
    diferente1      reduce using rule 206 (EXP -> EXP as id .)
    diferente2      reduce using rule 206 (EXP -> EXP as id .)
    punto           reduce using rule 206 (EXP -> EXP as id .)
    between         reduce using rule 206 (EXP -> EXP as id .)
    is              reduce using rule 206 (EXP -> EXP as id .)
    isnull          reduce using rule 206 (EXP -> EXP as id .)
    notnull         reduce using rule 206 (EXP -> EXP as id .)
    as              reduce using rule 206 (EXP -> EXP as id .)
    cadenaString    reduce using rule 206 (EXP -> EXP as id .)
    id              reduce using rule 206 (EXP -> EXP as id .)
    cadena          reduce using rule 206 (EXP -> EXP as id .)
    in              reduce using rule 206 (EXP -> EXP as id .)
    not             reduce using rule 206 (EXP -> EXP as id .)
    like            reduce using rule 206 (EXP -> EXP as id .)
    parc            reduce using rule 206 (EXP -> EXP as id .)
    then            reduce using rule 206 (EXP -> EXP as id .)
    end             reduce using rule 206 (EXP -> EXP as id .)
    else            reduce using rule 206 (EXP -> EXP as id .)
    when            reduce using rule 206 (EXP -> EXP as id .)
    constraint      reduce using rule 206 (EXP -> EXP as id .)
    unique          reduce using rule 206 (EXP -> EXP as id .)
    check           reduce using rule 206 (EXP -> EXP as id .)
    default         reduce using rule 206 (EXP -> EXP as id .)
    null            reduce using rule 206 (EXP -> EXP as id .)
    primary         reduce using rule 206 (EXP -> EXP as id .)
    references      reduce using rule 206 (EXP -> EXP as id .)
    asc             reduce using rule 206 (EXP -> EXP as id .)
    desc            reduce using rule 206 (EXP -> EXP as id .)


state 183

    (208) EXP -> EXP as cadena .

    r_from          reduce using rule 208 (EXP -> EXP as cadena .)
    coma            reduce using rule 208 (EXP -> EXP as cadena .)
    where           reduce using rule 208 (EXP -> EXP as cadena .)
    union           reduce using rule 208 (EXP -> EXP as cadena .)
    group           reduce using rule 208 (EXP -> EXP as cadena .)
    having          reduce using rule 208 (EXP -> EXP as cadena .)
    intersect       reduce using rule 208 (EXP -> EXP as cadena .)
    except          reduce using rule 208 (EXP -> EXP as cadena .)
    order           reduce using rule 208 (EXP -> EXP as cadena .)
    limit           reduce using rule 208 (EXP -> EXP as cadena .)
    offset          reduce using rule 208 (EXP -> EXP as cadena .)
    ptcoma          reduce using rule 208 (EXP -> EXP as cadena .)
    mas             reduce using rule 208 (EXP -> EXP as cadena .)
    menos           reduce using rule 208 (EXP -> EXP as cadena .)
    multiplicacion  reduce using rule 208 (EXP -> EXP as cadena .)
    division        reduce using rule 208 (EXP -> EXP as cadena .)
    modulo          reduce using rule 208 (EXP -> EXP as cadena .)
    elevado         reduce using rule 208 (EXP -> EXP as cadena .)
    and             reduce using rule 208 (EXP -> EXP as cadena .)
    or              reduce using rule 208 (EXP -> EXP as cadena .)
    mayor           reduce using rule 208 (EXP -> EXP as cadena .)
    menor           reduce using rule 208 (EXP -> EXP as cadena .)
    mayor_igual     reduce using rule 208 (EXP -> EXP as cadena .)
    menor_igual     reduce using rule 208 (EXP -> EXP as cadena .)
    igual           reduce using rule 208 (EXP -> EXP as cadena .)
    diferente1      reduce using rule 208 (EXP -> EXP as cadena .)
    diferente2      reduce using rule 208 (EXP -> EXP as cadena .)
    punto           reduce using rule 208 (EXP -> EXP as cadena .)
    between         reduce using rule 208 (EXP -> EXP as cadena .)
    is              reduce using rule 208 (EXP -> EXP as cadena .)
    isnull          reduce using rule 208 (EXP -> EXP as cadena .)
    notnull         reduce using rule 208 (EXP -> EXP as cadena .)
    as              reduce using rule 208 (EXP -> EXP as cadena .)
    cadenaString    reduce using rule 208 (EXP -> EXP as cadena .)
    id              reduce using rule 208 (EXP -> EXP as cadena .)
    cadena          reduce using rule 208 (EXP -> EXP as cadena .)
    in              reduce using rule 208 (EXP -> EXP as cadena .)
    not             reduce using rule 208 (EXP -> EXP as cadena .)
    like            reduce using rule 208 (EXP -> EXP as cadena .)
    parc            reduce using rule 208 (EXP -> EXP as cadena .)
    then            reduce using rule 208 (EXP -> EXP as cadena .)
    end             reduce using rule 208 (EXP -> EXP as cadena .)
    else            reduce using rule 208 (EXP -> EXP as cadena .)
    when            reduce using rule 208 (EXP -> EXP as cadena .)
    constraint      reduce using rule 208 (EXP -> EXP as cadena .)
    unique          reduce using rule 208 (EXP -> EXP as cadena .)
    check           reduce using rule 208 (EXP -> EXP as cadena .)
    default         reduce using rule 208 (EXP -> EXP as cadena .)
    null            reduce using rule 208 (EXP -> EXP as cadena .)
    primary         reduce using rule 208 (EXP -> EXP as cadena .)
    references      reduce using rule 208 (EXP -> EXP as cadena .)
    asc             reduce using rule 208 (EXP -> EXP as cadena .)
    desc            reduce using rule 208 (EXP -> EXP as cadena .)


state 184

    (213) EXP -> EXP in para . EXP parc
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    EXP                            shift and go to state 247
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 185

    (220) EXP -> EXP like cadena .

    r_from          reduce using rule 220 (EXP -> EXP like cadena .)
    coma            reduce using rule 220 (EXP -> EXP like cadena .)
    where           reduce using rule 220 (EXP -> EXP like cadena .)
    union           reduce using rule 220 (EXP -> EXP like cadena .)
    group           reduce using rule 220 (EXP -> EXP like cadena .)
    having          reduce using rule 220 (EXP -> EXP like cadena .)
    intersect       reduce using rule 220 (EXP -> EXP like cadena .)
    except          reduce using rule 220 (EXP -> EXP like cadena .)
    order           reduce using rule 220 (EXP -> EXP like cadena .)
    limit           reduce using rule 220 (EXP -> EXP like cadena .)
    offset          reduce using rule 220 (EXP -> EXP like cadena .)
    ptcoma          reduce using rule 220 (EXP -> EXP like cadena .)
    mas             reduce using rule 220 (EXP -> EXP like cadena .)
    menos           reduce using rule 220 (EXP -> EXP like cadena .)
    multiplicacion  reduce using rule 220 (EXP -> EXP like cadena .)
    division        reduce using rule 220 (EXP -> EXP like cadena .)
    modulo          reduce using rule 220 (EXP -> EXP like cadena .)
    elevado         reduce using rule 220 (EXP -> EXP like cadena .)
    and             reduce using rule 220 (EXP -> EXP like cadena .)
    or              reduce using rule 220 (EXP -> EXP like cadena .)
    mayor           reduce using rule 220 (EXP -> EXP like cadena .)
    menor           reduce using rule 220 (EXP -> EXP like cadena .)
    mayor_igual     reduce using rule 220 (EXP -> EXP like cadena .)
    menor_igual     reduce using rule 220 (EXP -> EXP like cadena .)
    igual           reduce using rule 220 (EXP -> EXP like cadena .)
    diferente1      reduce using rule 220 (EXP -> EXP like cadena .)
    diferente2      reduce using rule 220 (EXP -> EXP like cadena .)
    punto           reduce using rule 220 (EXP -> EXP like cadena .)
    between         reduce using rule 220 (EXP -> EXP like cadena .)
    is              reduce using rule 220 (EXP -> EXP like cadena .)
    isnull          reduce using rule 220 (EXP -> EXP like cadena .)
    notnull         reduce using rule 220 (EXP -> EXP like cadena .)
    as              reduce using rule 220 (EXP -> EXP like cadena .)
    cadenaString    reduce using rule 220 (EXP -> EXP like cadena .)
    id              reduce using rule 220 (EXP -> EXP like cadena .)
    cadena          reduce using rule 220 (EXP -> EXP like cadena .)
    in              reduce using rule 220 (EXP -> EXP like cadena .)
    not             reduce using rule 220 (EXP -> EXP like cadena .)
    like            reduce using rule 220 (EXP -> EXP like cadena .)
    parc            reduce using rule 220 (EXP -> EXP like cadena .)
    then            reduce using rule 220 (EXP -> EXP like cadena .)
    end             reduce using rule 220 (EXP -> EXP like cadena .)
    else            reduce using rule 220 (EXP -> EXP like cadena .)
    when            reduce using rule 220 (EXP -> EXP like cadena .)
    constraint      reduce using rule 220 (EXP -> EXP like cadena .)
    unique          reduce using rule 220 (EXP -> EXP like cadena .)
    check           reduce using rule 220 (EXP -> EXP like cadena .)
    default         reduce using rule 220 (EXP -> EXP like cadena .)
    null            reduce using rule 220 (EXP -> EXP like cadena .)
    primary         reduce using rule 220 (EXP -> EXP like cadena .)
    references      reduce using rule 220 (EXP -> EXP like cadena .)
    asc             reduce using rule 220 (EXP -> EXP like cadena .)
    desc            reduce using rule 220 (EXP -> EXP like cadena .)


state 186

    (225) EXP -> id para LEXP . parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 248
    coma            shift and go to state 84


state 187

    (226) EXP -> id para parc .

    r_from          reduce using rule 226 (EXP -> id para parc .)
    coma            reduce using rule 226 (EXP -> id para parc .)
    where           reduce using rule 226 (EXP -> id para parc .)
    union           reduce using rule 226 (EXP -> id para parc .)
    group           reduce using rule 226 (EXP -> id para parc .)
    having          reduce using rule 226 (EXP -> id para parc .)
    intersect       reduce using rule 226 (EXP -> id para parc .)
    except          reduce using rule 226 (EXP -> id para parc .)
    order           reduce using rule 226 (EXP -> id para parc .)
    limit           reduce using rule 226 (EXP -> id para parc .)
    offset          reduce using rule 226 (EXP -> id para parc .)
    ptcoma          reduce using rule 226 (EXP -> id para parc .)
    mas             reduce using rule 226 (EXP -> id para parc .)
    menos           reduce using rule 226 (EXP -> id para parc .)
    multiplicacion  reduce using rule 226 (EXP -> id para parc .)
    division        reduce using rule 226 (EXP -> id para parc .)
    modulo          reduce using rule 226 (EXP -> id para parc .)
    elevado         reduce using rule 226 (EXP -> id para parc .)
    and             reduce using rule 226 (EXP -> id para parc .)
    or              reduce using rule 226 (EXP -> id para parc .)
    mayor           reduce using rule 226 (EXP -> id para parc .)
    menor           reduce using rule 226 (EXP -> id para parc .)
    mayor_igual     reduce using rule 226 (EXP -> id para parc .)
    menor_igual     reduce using rule 226 (EXP -> id para parc .)
    igual           reduce using rule 226 (EXP -> id para parc .)
    diferente1      reduce using rule 226 (EXP -> id para parc .)
    diferente2      reduce using rule 226 (EXP -> id para parc .)
    punto           reduce using rule 226 (EXP -> id para parc .)
    between         reduce using rule 226 (EXP -> id para parc .)
    is              reduce using rule 226 (EXP -> id para parc .)
    isnull          reduce using rule 226 (EXP -> id para parc .)
    notnull         reduce using rule 226 (EXP -> id para parc .)
    as              reduce using rule 226 (EXP -> id para parc .)
    cadenaString    reduce using rule 226 (EXP -> id para parc .)
    id              reduce using rule 226 (EXP -> id para parc .)
    cadena          reduce using rule 226 (EXP -> id para parc .)
    in              reduce using rule 226 (EXP -> id para parc .)
    not             reduce using rule 226 (EXP -> id para parc .)
    like            reduce using rule 226 (EXP -> id para parc .)
    parc            reduce using rule 226 (EXP -> id para parc .)
    then            reduce using rule 226 (EXP -> id para parc .)
    end             reduce using rule 226 (EXP -> id para parc .)
    else            reduce using rule 226 (EXP -> id para parc .)
    when            reduce using rule 226 (EXP -> id para parc .)
    constraint      reduce using rule 226 (EXP -> id para parc .)
    unique          reduce using rule 226 (EXP -> id para parc .)
    check           reduce using rule 226 (EXP -> id para parc .)
    default         reduce using rule 226 (EXP -> id para parc .)
    null            reduce using rule 226 (EXP -> id para parc .)
    primary         reduce using rule 226 (EXP -> id para parc .)
    references      reduce using rule 226 (EXP -> id para parc .)
    asc             reduce using rule 226 (EXP -> id para parc .)
    desc            reduce using rule 226 (EXP -> id para parc .)


state 188

    (224) EXP -> para EXP parc .

    r_from          reduce using rule 224 (EXP -> para EXP parc .)
    coma            reduce using rule 224 (EXP -> para EXP parc .)
    where           reduce using rule 224 (EXP -> para EXP parc .)
    union           reduce using rule 224 (EXP -> para EXP parc .)
    group           reduce using rule 224 (EXP -> para EXP parc .)
    having          reduce using rule 224 (EXP -> para EXP parc .)
    intersect       reduce using rule 224 (EXP -> para EXP parc .)
    except          reduce using rule 224 (EXP -> para EXP parc .)
    order           reduce using rule 224 (EXP -> para EXP parc .)
    limit           reduce using rule 224 (EXP -> para EXP parc .)
    offset          reduce using rule 224 (EXP -> para EXP parc .)
    ptcoma          reduce using rule 224 (EXP -> para EXP parc .)
    mas             reduce using rule 224 (EXP -> para EXP parc .)
    menos           reduce using rule 224 (EXP -> para EXP parc .)
    multiplicacion  reduce using rule 224 (EXP -> para EXP parc .)
    division        reduce using rule 224 (EXP -> para EXP parc .)
    modulo          reduce using rule 224 (EXP -> para EXP parc .)
    elevado         reduce using rule 224 (EXP -> para EXP parc .)
    and             reduce using rule 224 (EXP -> para EXP parc .)
    or              reduce using rule 224 (EXP -> para EXP parc .)
    mayor           reduce using rule 224 (EXP -> para EXP parc .)
    menor           reduce using rule 224 (EXP -> para EXP parc .)
    mayor_igual     reduce using rule 224 (EXP -> para EXP parc .)
    menor_igual     reduce using rule 224 (EXP -> para EXP parc .)
    igual           reduce using rule 224 (EXP -> para EXP parc .)
    diferente1      reduce using rule 224 (EXP -> para EXP parc .)
    diferente2      reduce using rule 224 (EXP -> para EXP parc .)
    punto           reduce using rule 224 (EXP -> para EXP parc .)
    between         reduce using rule 224 (EXP -> para EXP parc .)
    is              reduce using rule 224 (EXP -> para EXP parc .)
    isnull          reduce using rule 224 (EXP -> para EXP parc .)
    notnull         reduce using rule 224 (EXP -> para EXP parc .)
    as              reduce using rule 224 (EXP -> para EXP parc .)
    cadenaString    reduce using rule 224 (EXP -> para EXP parc .)
    id              reduce using rule 224 (EXP -> para EXP parc .)
    cadena          reduce using rule 224 (EXP -> para EXP parc .)
    in              reduce using rule 224 (EXP -> para EXP parc .)
    not             reduce using rule 224 (EXP -> para EXP parc .)
    like            reduce using rule 224 (EXP -> para EXP parc .)
    parc            reduce using rule 224 (EXP -> para EXP parc .)
    then            reduce using rule 224 (EXP -> para EXP parc .)
    end             reduce using rule 224 (EXP -> para EXP parc .)
    else            reduce using rule 224 (EXP -> para EXP parc .)
    when            reduce using rule 224 (EXP -> para EXP parc .)
    constraint      reduce using rule 224 (EXP -> para EXP parc .)
    unique          reduce using rule 224 (EXP -> para EXP parc .)
    check           reduce using rule 224 (EXP -> para EXP parc .)
    default         reduce using rule 224 (EXP -> para EXP parc .)
    null            reduce using rule 224 (EXP -> para EXP parc .)
    primary         reduce using rule 224 (EXP -> para EXP parc .)
    references      reduce using rule 224 (EXP -> para EXP parc .)
    asc             reduce using rule 224 (EXP -> para EXP parc .)
    desc            reduce using rule 224 (EXP -> para EXP parc .)


state 189

    (227) EXP -> any para LEXP . parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 249
    coma            shift and go to state 84


state 190

    (228) EXP -> all para LEXP . parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 250
    coma            shift and go to state 84


state 191

    (229) EXP -> some para LEXP . parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 251
    coma            shift and go to state 84


state 192

    (230) EXP -> extract para FIELDS . r_from timestamp cadena parc

    r_from          shift and go to state 252


state 193

    (171) FIELDS -> year .

    r_from          reduce using rule 171 (FIELDS -> year .)


state 194

    (172) FIELDS -> month .

    r_from          reduce using rule 172 (FIELDS -> month .)


state 195

    (173) FIELDS -> day .

    r_from          reduce using rule 173 (FIELDS -> day .)


state 196

    (174) FIELDS -> hour .

    r_from          reduce using rule 174 (FIELDS -> hour .)


state 197

    (175) FIELDS -> minute .

    r_from          reduce using rule 175 (FIELDS -> minute .)


state 198

    (176) FIELDS -> second .

    r_from          reduce using rule 176 (FIELDS -> second .)


state 199

    (68) CREATETABLE -> create table id para . LDEF parc ptcoma
    (69) CREATETABLE -> create table id para . LDEF parc HERENCIA ptcoma
    (70) LDEF -> . LDEF coma COLDEF
    (71) LDEF -> . COLDEF
    (72) COLDEF -> . OPCONST
    (73) COLDEF -> . constraint id OPCONST
    (74) COLDEF -> . id TIPO
    (75) COLDEF -> . id TIPO LOPCOLUMN
    (76) COLDEF -> . id id
    (77) COLDEF -> . id id LOPCOLUMN
    (89) OPCONST -> . primary key para LEXP parc
    (90) OPCONST -> . foreign key para LEXP parc references id para LEXP parc
    (91) OPCONST -> . unique para LEXP parc
    (92) OPCONST -> . check para LEXP parc

    constraint      shift and go to state 257
    id              shift and go to state 253
    primary         shift and go to state 258
    foreign         shift and go to state 259
    unique          shift and go to state 260
    check           shift and go to state 261

    LDEF                           shift and go to state 254
    COLDEF                         shift and go to state 255
    OPCONST                        shift and go to state 256

state 200

    (94) CREATETYPE -> create type id as . enum para LEXP parc

    enum            shift and go to state 262


state 201

    (51) CREATEDB -> create RD if not . exist id
    (52) CREATEDB -> create RD if not . exist id OPCCDB

    exist           shift and go to state 263


state 202

    (54) CREATEDB -> create RD id OPCCDB .

    ptcoma          reduce using rule 54 (CREATEDB -> create RD id OPCCDB .)


state 203

    (55) OPCCDB -> PROPIETARIO .
    (57) OPCCDB -> PROPIETARIO . MODO
    (66) MODO -> . mode igual int
    (67) MODO -> . mode int

    ptcoma          reduce using rule 55 (OPCCDB -> PROPIETARIO .)
    mode            shift and go to state 206

    MODO                           shift and go to state 264

state 204

    (56) OPCCDB -> MODO .

    ptcoma          reduce using rule 56 (OPCCDB -> MODO .)


state 205

    (60) PROPIETARIO -> owner . igual id
    (61) PROPIETARIO -> owner . id
    (62) PROPIETARIO -> owner . igual cadena
    (63) PROPIETARIO -> owner . cadena
    (64) PROPIETARIO -> owner . igual cadenaString
    (65) PROPIETARIO -> owner . cadenaString

    igual           shift and go to state 265
    id              shift and go to state 266
    cadena          shift and go to state 267
    cadenaString    shift and go to state 268


state 206

    (66) MODO -> mode . igual int
    (67) MODO -> mode . int

    igual           shift and go to state 269
    int             shift and go to state 270


state 207

    (58) RD -> or replace databases .

    if              reduce using rule 58 (RD -> or replace databases .)
    id              reduce using rule 58 (RD -> or replace databases .)


state 208

    (129) LCAMPOS -> id . igual EXP

    igual           shift and go to state 271


state 209

    (127) UPDATE -> update id set LCAMPOS . where LEXP
    (128) LCAMPOS -> LCAMPOS . id igual EXP

    where           shift and go to state 273
    id              shift and go to state 272


state 210

    (130) DELETE -> delete r_from id where . LEXP
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 274
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 211

    (27) ALTER -> alter databases id RO .

    ptcoma          reduce using rule 27 (ALTER -> alter databases id RO .)


state 212

    (29) RO -> rename . to id

    to              shift and go to state 275


state 213

    (30) RO -> owner . to id

    to              shift and go to state 276


state 214

    (34) OP -> alter . column id set not null
    (35) OP -> alter . column id set null
    (41) alc -> alter . column id type TIPO

    column          shift and go to state 277


state 215

    (31) altertable -> alter table id OP .

    ptcoma          reduce using rule 31 (altertable -> alter table id OP .)


state 216

    (32) OP -> add . ADD
    (45) ADD -> . column id TIPO
    (46) ADD -> . check para LEXP parc
    (47) ADD -> . constraint id unique para id parc
    (48) ADD -> . foreign key para LEXP parc references id para LEXP parc
    (49) ADD -> . constraint id foreign key para LEXP parc references id para LEXP parc

    column          shift and go to state 279
    check           shift and go to state 280
    constraint      shift and go to state 281
    foreign         shift and go to state 282

    ADD                            shift and go to state 278

state 217

    (33) OP -> drop . column ALTERDROP
    (37) OP -> drop . ALTERDROP
    (42) ALTERDROP -> . constraint id
    (43) ALTERDROP -> . column LEXP
    (44) ALTERDROP -> . check id

    column          shift and go to state 283
    constraint      shift and go to state 285
    check           shift and go to state 286

    ALTERDROP                      shift and go to state 284

state 218

    (36) OP -> listaalc .
    (39) listaalc -> listaalc . coma alc

    ptcoma          reduce using rule 36 (OP -> listaalc .)
    coma            shift and go to state 287


state 219

    (38) OP -> rename . column id to id

    column          shift and go to state 288


state 220

    (40) listaalc -> alc .

    coma            reduce using rule 40 (listaalc -> alc .)
    ptcoma          reduce using rule 40 (listaalc -> alc .)


state 221

    (25) DROP -> drop databases if exist . id

    id              shift and go to state 289


state 222

    (22) INSERT -> insert into id values . para LEXP parc

    para            shift and go to state 290


state 223

    (23) INSERT -> insert into id para . LEXP parc values para LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 291
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 224

    (16) CASE -> case LISTAWHEN ELSE end .

    use             reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    select          reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    create          reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    update          reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    delete          reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    alter           reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    drop            reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    insert          reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    case            reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    show            reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    $end            reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    r_from          reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    coma            reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    where           reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    union           reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    group           reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    having          reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    intersect       reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    except          reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    order           reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    limit           reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    offset          reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    ptcoma          reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    mas             reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    menos           reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    multiplicacion  reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    division        reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    modulo          reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    elevado         reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    and             reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    or              reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    mayor           reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    menor           reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    mayor_igual     reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    menor_igual     reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    igual           reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    diferente1      reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    diferente2      reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    punto           reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    between         reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    is              reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    isnull          reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    notnull         reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    as              reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    cadenaString    reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    id              reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    cadena          reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    in              reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    not             reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    like            reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    parc            reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    then            reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    end             reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    else            reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    when            reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    constraint      reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    unique          reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    check           reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    default         reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    null            reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    primary         reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    references      reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    asc             reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)
    desc            reduce using rule 16 (CASE -> case LISTAWHEN ELSE end .)


state 225

    (21) ELSE -> else LEXP .
    (134) LEXP -> LEXP . coma EXP

    end             reduce using rule 21 (ELSE -> else LEXP .)
    coma            shift and go to state 84


state 226

    (20) WHEN -> when LEXP then . LEXP
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 292
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 227

    (95) SELECT -> select distinct LEXP r_from LEXP . WHERE GROUP HAVING COMBINING ORDER LIMIT
    (134) LEXP -> LEXP . coma EXP
    (106) WHERE -> . where LEXP
    (107) WHERE -> . where EXIST
    (108) WHERE -> . union LEXP
    (109) WHERE -> . union all LEXP
    (110) WHERE -> .

  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for where resolved as shift
  ! shift/reduce conflict for union resolved as shift
    coma            shift and go to state 84
    where           shift and go to state 85
    union           shift and go to state 86
    r_from          reduce using rule 110 (WHERE -> .)
    group           reduce using rule 110 (WHERE -> .)
    having          reduce using rule 110 (WHERE -> .)
    intersect       reduce using rule 110 (WHERE -> .)
    except          reduce using rule 110 (WHERE -> .)
    order           reduce using rule 110 (WHERE -> .)
    limit           reduce using rule 110 (WHERE -> .)
    offset          reduce using rule 110 (WHERE -> .)
    ptcoma          reduce using rule 110 (WHERE -> .)
    mas             reduce using rule 110 (WHERE -> .)
    menos           reduce using rule 110 (WHERE -> .)
    multiplicacion  reduce using rule 110 (WHERE -> .)
    division        reduce using rule 110 (WHERE -> .)
    modulo          reduce using rule 110 (WHERE -> .)
    elevado         reduce using rule 110 (WHERE -> .)
    and             reduce using rule 110 (WHERE -> .)
    or              reduce using rule 110 (WHERE -> .)
    mayor           reduce using rule 110 (WHERE -> .)
    menor           reduce using rule 110 (WHERE -> .)
    mayor_igual     reduce using rule 110 (WHERE -> .)
    menor_igual     reduce using rule 110 (WHERE -> .)
    igual           reduce using rule 110 (WHERE -> .)
    diferente1      reduce using rule 110 (WHERE -> .)
    diferente2      reduce using rule 110 (WHERE -> .)
    punto           reduce using rule 110 (WHERE -> .)
    between         reduce using rule 110 (WHERE -> .)
    is              reduce using rule 110 (WHERE -> .)
    isnull          reduce using rule 110 (WHERE -> .)
    notnull         reduce using rule 110 (WHERE -> .)
    as              reduce using rule 110 (WHERE -> .)
    cadenaString    reduce using rule 110 (WHERE -> .)
    id              reduce using rule 110 (WHERE -> .)
    cadena          reduce using rule 110 (WHERE -> .)
    in              reduce using rule 110 (WHERE -> .)
    not             reduce using rule 110 (WHERE -> .)
    like            reduce using rule 110 (WHERE -> .)
    parc            reduce using rule 110 (WHERE -> .)
    then            reduce using rule 110 (WHERE -> .)
    end             reduce using rule 110 (WHERE -> .)
    else            reduce using rule 110 (WHERE -> .)
    when            reduce using rule 110 (WHERE -> .)
    constraint      reduce using rule 110 (WHERE -> .)
    unique          reduce using rule 110 (WHERE -> .)
    check           reduce using rule 110 (WHERE -> .)
    default         reduce using rule 110 (WHERE -> .)
    null            reduce using rule 110 (WHERE -> .)
    primary         reduce using rule 110 (WHERE -> .)
    references      reduce using rule 110 (WHERE -> .)
    asc             reduce using rule 110 (WHERE -> .)
    desc            reduce using rule 110 (WHERE -> .)

  ! coma            [ reduce using rule 110 (WHERE -> .) ]
  ! where           [ reduce using rule 110 (WHERE -> .) ]
  ! union           [ reduce using rule 110 (WHERE -> .) ]

    WHERE                          shift and go to state 293

state 228

    (96) SELECT -> select LEXP r_from LEXP WHERE . GROUP HAVING COMBINING ORDER LIMIT
    (118) GROUP -> . group by LEXP
    (119) GROUP -> .

  ! shift/reduce conflict for group resolved as shift
    group           shift and go to state 146
    r_from          reduce using rule 119 (GROUP -> .)
    coma            reduce using rule 119 (GROUP -> .)
    where           reduce using rule 119 (GROUP -> .)
    union           reduce using rule 119 (GROUP -> .)
    having          reduce using rule 119 (GROUP -> .)
    intersect       reduce using rule 119 (GROUP -> .)
    except          reduce using rule 119 (GROUP -> .)
    order           reduce using rule 119 (GROUP -> .)
    limit           reduce using rule 119 (GROUP -> .)
    offset          reduce using rule 119 (GROUP -> .)
    ptcoma          reduce using rule 119 (GROUP -> .)
    mas             reduce using rule 119 (GROUP -> .)
    menos           reduce using rule 119 (GROUP -> .)
    multiplicacion  reduce using rule 119 (GROUP -> .)
    division        reduce using rule 119 (GROUP -> .)
    modulo          reduce using rule 119 (GROUP -> .)
    elevado         reduce using rule 119 (GROUP -> .)
    and             reduce using rule 119 (GROUP -> .)
    or              reduce using rule 119 (GROUP -> .)
    mayor           reduce using rule 119 (GROUP -> .)
    menor           reduce using rule 119 (GROUP -> .)
    mayor_igual     reduce using rule 119 (GROUP -> .)
    menor_igual     reduce using rule 119 (GROUP -> .)
    igual           reduce using rule 119 (GROUP -> .)
    diferente1      reduce using rule 119 (GROUP -> .)
    diferente2      reduce using rule 119 (GROUP -> .)
    punto           reduce using rule 119 (GROUP -> .)
    between         reduce using rule 119 (GROUP -> .)
    is              reduce using rule 119 (GROUP -> .)
    isnull          reduce using rule 119 (GROUP -> .)
    notnull         reduce using rule 119 (GROUP -> .)
    as              reduce using rule 119 (GROUP -> .)
    cadenaString    reduce using rule 119 (GROUP -> .)
    id              reduce using rule 119 (GROUP -> .)
    cadena          reduce using rule 119 (GROUP -> .)
    in              reduce using rule 119 (GROUP -> .)
    not             reduce using rule 119 (GROUP -> .)
    like            reduce using rule 119 (GROUP -> .)
    parc            reduce using rule 119 (GROUP -> .)
    then            reduce using rule 119 (GROUP -> .)
    end             reduce using rule 119 (GROUP -> .)
    else            reduce using rule 119 (GROUP -> .)
    when            reduce using rule 119 (GROUP -> .)
    constraint      reduce using rule 119 (GROUP -> .)
    unique          reduce using rule 119 (GROUP -> .)
    check           reduce using rule 119 (GROUP -> .)
    default         reduce using rule 119 (GROUP -> .)
    null            reduce using rule 119 (GROUP -> .)
    primary         reduce using rule 119 (GROUP -> .)
    references      reduce using rule 119 (GROUP -> .)
    asc             reduce using rule 119 (GROUP -> .)
    desc            reduce using rule 119 (GROUP -> .)

  ! group           [ reduce using rule 119 (GROUP -> .) ]

    GROUP                          shift and go to state 294

state 229

    (97) SELECT -> select LEXP WHERE GROUP HAVING . COMBINING ORDER LIMIT
    (111) COMBINING -> . union LEXP
    (112) COMBINING -> . union all LEXP
    (113) COMBINING -> . intersect LEXP
    (114) COMBINING -> . intersect all LEXP
    (115) COMBINING -> . except LEXP
    (116) COMBINING -> . except all LEXP
    (117) COMBINING -> .

  ! shift/reduce conflict for union resolved as shift
  ! shift/reduce conflict for intersect resolved as shift
  ! shift/reduce conflict for except resolved as shift
    union           shift and go to state 296
    intersect       shift and go to state 297
    except          shift and go to state 298
    r_from          reduce using rule 117 (COMBINING -> .)
    coma            reduce using rule 117 (COMBINING -> .)
    where           reduce using rule 117 (COMBINING -> .)
    group           reduce using rule 117 (COMBINING -> .)
    having          reduce using rule 117 (COMBINING -> .)
    order           reduce using rule 117 (COMBINING -> .)
    limit           reduce using rule 117 (COMBINING -> .)
    offset          reduce using rule 117 (COMBINING -> .)
    ptcoma          reduce using rule 117 (COMBINING -> .)
    mas             reduce using rule 117 (COMBINING -> .)
    menos           reduce using rule 117 (COMBINING -> .)
    multiplicacion  reduce using rule 117 (COMBINING -> .)
    division        reduce using rule 117 (COMBINING -> .)
    modulo          reduce using rule 117 (COMBINING -> .)
    elevado         reduce using rule 117 (COMBINING -> .)
    and             reduce using rule 117 (COMBINING -> .)
    or              reduce using rule 117 (COMBINING -> .)
    mayor           reduce using rule 117 (COMBINING -> .)
    menor           reduce using rule 117 (COMBINING -> .)
    mayor_igual     reduce using rule 117 (COMBINING -> .)
    menor_igual     reduce using rule 117 (COMBINING -> .)
    igual           reduce using rule 117 (COMBINING -> .)
    diferente1      reduce using rule 117 (COMBINING -> .)
    diferente2      reduce using rule 117 (COMBINING -> .)
    punto           reduce using rule 117 (COMBINING -> .)
    between         reduce using rule 117 (COMBINING -> .)
    is              reduce using rule 117 (COMBINING -> .)
    isnull          reduce using rule 117 (COMBINING -> .)
    notnull         reduce using rule 117 (COMBINING -> .)
    as              reduce using rule 117 (COMBINING -> .)
    cadenaString    reduce using rule 117 (COMBINING -> .)
    id              reduce using rule 117 (COMBINING -> .)
    cadena          reduce using rule 117 (COMBINING -> .)
    in              reduce using rule 117 (COMBINING -> .)
    not             reduce using rule 117 (COMBINING -> .)
    like            reduce using rule 117 (COMBINING -> .)
    parc            reduce using rule 117 (COMBINING -> .)
    then            reduce using rule 117 (COMBINING -> .)
    end             reduce using rule 117 (COMBINING -> .)
    else            reduce using rule 117 (COMBINING -> .)
    when            reduce using rule 117 (COMBINING -> .)
    constraint      reduce using rule 117 (COMBINING -> .)
    unique          reduce using rule 117 (COMBINING -> .)
    check           reduce using rule 117 (COMBINING -> .)
    default         reduce using rule 117 (COMBINING -> .)
    null            reduce using rule 117 (COMBINING -> .)
    primary         reduce using rule 117 (COMBINING -> .)
    references      reduce using rule 117 (COMBINING -> .)
    asc             reduce using rule 117 (COMBINING -> .)
    desc            reduce using rule 117 (COMBINING -> .)

  ! union           [ reduce using rule 117 (COMBINING -> .) ]
  ! intersect       [ reduce using rule 117 (COMBINING -> .) ]
  ! except          [ reduce using rule 117 (COMBINING -> .) ]

    COMBINING                      shift and go to state 295

state 230

    (120) HAVING -> having . LEXP
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 299
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 231

    (118) GROUP -> group by . LEXP
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 300
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 232

    (132) EXIST -> exist para . SELECT parc
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    select          shift and go to state 16

    SELECT                         shift and go to state 301

state 233

    (133) EXIST -> not exist . para SELECT parc

    para            shift and go to state 302


state 234

    (109) WHERE -> union all LEXP .
    (134) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 109 (WHERE -> union all LEXP .)
    where           reduce using rule 109 (WHERE -> union all LEXP .)
    union           reduce using rule 109 (WHERE -> union all LEXP .)
    group           reduce using rule 109 (WHERE -> union all LEXP .)
    having          reduce using rule 109 (WHERE -> union all LEXP .)
    intersect       reduce using rule 109 (WHERE -> union all LEXP .)
    except          reduce using rule 109 (WHERE -> union all LEXP .)
    order           reduce using rule 109 (WHERE -> union all LEXP .)
    limit           reduce using rule 109 (WHERE -> union all LEXP .)
    offset          reduce using rule 109 (WHERE -> union all LEXP .)
    ptcoma          reduce using rule 109 (WHERE -> union all LEXP .)
    mas             reduce using rule 109 (WHERE -> union all LEXP .)
    menos           reduce using rule 109 (WHERE -> union all LEXP .)
    multiplicacion  reduce using rule 109 (WHERE -> union all LEXP .)
    division        reduce using rule 109 (WHERE -> union all LEXP .)
    modulo          reduce using rule 109 (WHERE -> union all LEXP .)
    elevado         reduce using rule 109 (WHERE -> union all LEXP .)
    and             reduce using rule 109 (WHERE -> union all LEXP .)
    or              reduce using rule 109 (WHERE -> union all LEXP .)
    mayor           reduce using rule 109 (WHERE -> union all LEXP .)
    menor           reduce using rule 109 (WHERE -> union all LEXP .)
    mayor_igual     reduce using rule 109 (WHERE -> union all LEXP .)
    menor_igual     reduce using rule 109 (WHERE -> union all LEXP .)
    igual           reduce using rule 109 (WHERE -> union all LEXP .)
    diferente1      reduce using rule 109 (WHERE -> union all LEXP .)
    diferente2      reduce using rule 109 (WHERE -> union all LEXP .)
    punto           reduce using rule 109 (WHERE -> union all LEXP .)
    between         reduce using rule 109 (WHERE -> union all LEXP .)
    is              reduce using rule 109 (WHERE -> union all LEXP .)
    isnull          reduce using rule 109 (WHERE -> union all LEXP .)
    notnull         reduce using rule 109 (WHERE -> union all LEXP .)
    as              reduce using rule 109 (WHERE -> union all LEXP .)
    cadenaString    reduce using rule 109 (WHERE -> union all LEXP .)
    id              reduce using rule 109 (WHERE -> union all LEXP .)
    cadena          reduce using rule 109 (WHERE -> union all LEXP .)
    in              reduce using rule 109 (WHERE -> union all LEXP .)
    not             reduce using rule 109 (WHERE -> union all LEXP .)
    like            reduce using rule 109 (WHERE -> union all LEXP .)
    parc            reduce using rule 109 (WHERE -> union all LEXP .)
    then            reduce using rule 109 (WHERE -> union all LEXP .)
    end             reduce using rule 109 (WHERE -> union all LEXP .)
    else            reduce using rule 109 (WHERE -> union all LEXP .)
    when            reduce using rule 109 (WHERE -> union all LEXP .)
    constraint      reduce using rule 109 (WHERE -> union all LEXP .)
    unique          reduce using rule 109 (WHERE -> union all LEXP .)
    check           reduce using rule 109 (WHERE -> union all LEXP .)
    default         reduce using rule 109 (WHERE -> union all LEXP .)
    null            reduce using rule 109 (WHERE -> union all LEXP .)
    primary         reduce using rule 109 (WHERE -> union all LEXP .)
    references      reduce using rule 109 (WHERE -> union all LEXP .)
    asc             reduce using rule 109 (WHERE -> union all LEXP .)
    desc            reduce using rule 109 (WHERE -> union all LEXP .)
    coma            shift and go to state 84

  ! coma            [ reduce using rule 109 (WHERE -> union all LEXP .) ]


state 235

    (228) EXP -> all para . LEXP parc
    (224) EXP -> para . EXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 190
    EXP                            shift and go to state 303
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 236

    (216) EXP -> EXP between symetric EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

    r_from          reduce using rule 216 (EXP -> EXP between symetric EXP .)
    coma            reduce using rule 216 (EXP -> EXP between symetric EXP .)
    where           reduce using rule 216 (EXP -> EXP between symetric EXP .)
    union           reduce using rule 216 (EXP -> EXP between symetric EXP .)
    group           reduce using rule 216 (EXP -> EXP between symetric EXP .)
    having          reduce using rule 216 (EXP -> EXP between symetric EXP .)
    intersect       reduce using rule 216 (EXP -> EXP between symetric EXP .)
    except          reduce using rule 216 (EXP -> EXP between symetric EXP .)
    order           reduce using rule 216 (EXP -> EXP between symetric EXP .)
    limit           reduce using rule 216 (EXP -> EXP between symetric EXP .)
    offset          reduce using rule 216 (EXP -> EXP between symetric EXP .)
    ptcoma          reduce using rule 216 (EXP -> EXP between symetric EXP .)
    and             reduce using rule 216 (EXP -> EXP between symetric EXP .)
    or              reduce using rule 216 (EXP -> EXP between symetric EXP .)
    between         reduce using rule 216 (EXP -> EXP between symetric EXP .)
    is              reduce using rule 216 (EXP -> EXP between symetric EXP .)
    isnull          reduce using rule 216 (EXP -> EXP between symetric EXP .)
    notnull         reduce using rule 216 (EXP -> EXP between symetric EXP .)
    as              reduce using rule 216 (EXP -> EXP between symetric EXP .)
    cadenaString    reduce using rule 216 (EXP -> EXP between symetric EXP .)
    id              reduce using rule 216 (EXP -> EXP between symetric EXP .)
    cadena          reduce using rule 216 (EXP -> EXP between symetric EXP .)
    in              reduce using rule 216 (EXP -> EXP between symetric EXP .)
    not             reduce using rule 216 (EXP -> EXP between symetric EXP .)
    like            reduce using rule 216 (EXP -> EXP between symetric EXP .)
    parc            reduce using rule 216 (EXP -> EXP between symetric EXP .)
    then            reduce using rule 216 (EXP -> EXP between symetric EXP .)
    end             reduce using rule 216 (EXP -> EXP between symetric EXP .)
    else            reduce using rule 216 (EXP -> EXP between symetric EXP .)
    when            reduce using rule 216 (EXP -> EXP between symetric EXP .)
    constraint      reduce using rule 216 (EXP -> EXP between symetric EXP .)
    unique          reduce using rule 216 (EXP -> EXP between symetric EXP .)
    check           reduce using rule 216 (EXP -> EXP between symetric EXP .)
    default         reduce using rule 216 (EXP -> EXP between symetric EXP .)
    null            reduce using rule 216 (EXP -> EXP between symetric EXP .)
    primary         reduce using rule 216 (EXP -> EXP between symetric EXP .)
    references      reduce using rule 216 (EXP -> EXP between symetric EXP .)
    asc             reduce using rule 216 (EXP -> EXP between symetric EXP .)
    desc            reduce using rule 216 (EXP -> EXP between symetric EXP .)
    mas             shift and go to state 87
    menos           shift and go to state 88
    multiplicacion  shift and go to state 89
    division        shift and go to state 90
    modulo          shift and go to state 91
    elevado         shift and go to state 92
    mayor           shift and go to state 95
    menor           shift and go to state 96
    mayor_igual     shift and go to state 97
    menor_igual     shift and go to state 98
    igual           shift and go to state 99
    diferente1      shift and go to state 100
    diferente2      shift and go to state 101
    punto           shift and go to state 102

  ! mas             [ reduce using rule 216 (EXP -> EXP between symetric EXP .) ]
  ! menos           [ reduce using rule 216 (EXP -> EXP between symetric EXP .) ]
  ! multiplicacion  [ reduce using rule 216 (EXP -> EXP between symetric EXP .) ]
  ! division        [ reduce using rule 216 (EXP -> EXP between symetric EXP .) ]
  ! modulo          [ reduce using rule 216 (EXP -> EXP between symetric EXP .) ]
  ! elevado         [ reduce using rule 216 (EXP -> EXP between symetric EXP .) ]
  ! mayor           [ reduce using rule 216 (EXP -> EXP between symetric EXP .) ]
  ! menor           [ reduce using rule 216 (EXP -> EXP between symetric EXP .) ]
  ! mayor_igual     [ reduce using rule 216 (EXP -> EXP between symetric EXP .) ]
  ! menor_igual     [ reduce using rule 216 (EXP -> EXP between symetric EXP .) ]
  ! igual           [ reduce using rule 216 (EXP -> EXP between symetric EXP .) ]
  ! diferente1      [ reduce using rule 216 (EXP -> EXP between symetric EXP .) ]
  ! diferente2      [ reduce using rule 216 (EXP -> EXP between symetric EXP .) ]
  ! punto           [ reduce using rule 216 (EXP -> EXP between symetric EXP .) ]
  ! and             [ shift and go to state 93 ]
  ! or              [ shift and go to state 94 ]
  ! between         [ shift and go to state 103 ]
  ! is              [ shift and go to state 104 ]
  ! isnull          [ shift and go to state 106 ]
  ! notnull         [ shift and go to state 107 ]
  ! as              [ shift and go to state 108 ]
  ! cadenaString    [ shift and go to state 109 ]
  ! id              [ shift and go to state 110 ]
  ! cadena          [ shift and go to state 111 ]
  ! in              [ shift and go to state 112 ]
  ! not             [ shift and go to state 105 ]
  ! like            [ shift and go to state 113 ]


state 237

    (194) EXP -> EXP is not null .

    r_from          reduce using rule 194 (EXP -> EXP is not null .)
    coma            reduce using rule 194 (EXP -> EXP is not null .)
    where           reduce using rule 194 (EXP -> EXP is not null .)
    union           reduce using rule 194 (EXP -> EXP is not null .)
    group           reduce using rule 194 (EXP -> EXP is not null .)
    having          reduce using rule 194 (EXP -> EXP is not null .)
    intersect       reduce using rule 194 (EXP -> EXP is not null .)
    except          reduce using rule 194 (EXP -> EXP is not null .)
    order           reduce using rule 194 (EXP -> EXP is not null .)
    limit           reduce using rule 194 (EXP -> EXP is not null .)
    offset          reduce using rule 194 (EXP -> EXP is not null .)
    ptcoma          reduce using rule 194 (EXP -> EXP is not null .)
    mas             reduce using rule 194 (EXP -> EXP is not null .)
    menos           reduce using rule 194 (EXP -> EXP is not null .)
    multiplicacion  reduce using rule 194 (EXP -> EXP is not null .)
    division        reduce using rule 194 (EXP -> EXP is not null .)
    modulo          reduce using rule 194 (EXP -> EXP is not null .)
    elevado         reduce using rule 194 (EXP -> EXP is not null .)
    and             reduce using rule 194 (EXP -> EXP is not null .)
    or              reduce using rule 194 (EXP -> EXP is not null .)
    mayor           reduce using rule 194 (EXP -> EXP is not null .)
    menor           reduce using rule 194 (EXP -> EXP is not null .)
    mayor_igual     reduce using rule 194 (EXP -> EXP is not null .)
    menor_igual     reduce using rule 194 (EXP -> EXP is not null .)
    igual           reduce using rule 194 (EXP -> EXP is not null .)
    diferente1      reduce using rule 194 (EXP -> EXP is not null .)
    diferente2      reduce using rule 194 (EXP -> EXP is not null .)
    punto           reduce using rule 194 (EXP -> EXP is not null .)
    between         reduce using rule 194 (EXP -> EXP is not null .)
    is              reduce using rule 194 (EXP -> EXP is not null .)
    isnull          reduce using rule 194 (EXP -> EXP is not null .)
    notnull         reduce using rule 194 (EXP -> EXP is not null .)
    as              reduce using rule 194 (EXP -> EXP is not null .)
    cadenaString    reduce using rule 194 (EXP -> EXP is not null .)
    id              reduce using rule 194 (EXP -> EXP is not null .)
    cadena          reduce using rule 194 (EXP -> EXP is not null .)
    in              reduce using rule 194 (EXP -> EXP is not null .)
    not             reduce using rule 194 (EXP -> EXP is not null .)
    like            reduce using rule 194 (EXP -> EXP is not null .)
    parc            reduce using rule 194 (EXP -> EXP is not null .)
    then            reduce using rule 194 (EXP -> EXP is not null .)
    end             reduce using rule 194 (EXP -> EXP is not null .)
    else            reduce using rule 194 (EXP -> EXP is not null .)
    when            reduce using rule 194 (EXP -> EXP is not null .)
    constraint      reduce using rule 194 (EXP -> EXP is not null .)
    unique          reduce using rule 194 (EXP -> EXP is not null .)
    check           reduce using rule 194 (EXP -> EXP is not null .)
    default         reduce using rule 194 (EXP -> EXP is not null .)
    null            reduce using rule 194 (EXP -> EXP is not null .)
    primary         reduce using rule 194 (EXP -> EXP is not null .)
    references      reduce using rule 194 (EXP -> EXP is not null .)
    asc             reduce using rule 194 (EXP -> EXP is not null .)
    desc            reduce using rule 194 (EXP -> EXP is not null .)


state 238

    (199) EXP -> EXP is not true .

    r_from          reduce using rule 199 (EXP -> EXP is not true .)
    coma            reduce using rule 199 (EXP -> EXP is not true .)
    where           reduce using rule 199 (EXP -> EXP is not true .)
    union           reduce using rule 199 (EXP -> EXP is not true .)
    group           reduce using rule 199 (EXP -> EXP is not true .)
    having          reduce using rule 199 (EXP -> EXP is not true .)
    intersect       reduce using rule 199 (EXP -> EXP is not true .)
    except          reduce using rule 199 (EXP -> EXP is not true .)
    order           reduce using rule 199 (EXP -> EXP is not true .)
    limit           reduce using rule 199 (EXP -> EXP is not true .)
    offset          reduce using rule 199 (EXP -> EXP is not true .)
    ptcoma          reduce using rule 199 (EXP -> EXP is not true .)
    mas             reduce using rule 199 (EXP -> EXP is not true .)
    menos           reduce using rule 199 (EXP -> EXP is not true .)
    multiplicacion  reduce using rule 199 (EXP -> EXP is not true .)
    division        reduce using rule 199 (EXP -> EXP is not true .)
    modulo          reduce using rule 199 (EXP -> EXP is not true .)
    elevado         reduce using rule 199 (EXP -> EXP is not true .)
    and             reduce using rule 199 (EXP -> EXP is not true .)
    or              reduce using rule 199 (EXP -> EXP is not true .)
    mayor           reduce using rule 199 (EXP -> EXP is not true .)
    menor           reduce using rule 199 (EXP -> EXP is not true .)
    mayor_igual     reduce using rule 199 (EXP -> EXP is not true .)
    menor_igual     reduce using rule 199 (EXP -> EXP is not true .)
    igual           reduce using rule 199 (EXP -> EXP is not true .)
    diferente1      reduce using rule 199 (EXP -> EXP is not true .)
    diferente2      reduce using rule 199 (EXP -> EXP is not true .)
    punto           reduce using rule 199 (EXP -> EXP is not true .)
    between         reduce using rule 199 (EXP -> EXP is not true .)
    is              reduce using rule 199 (EXP -> EXP is not true .)
    isnull          reduce using rule 199 (EXP -> EXP is not true .)
    notnull         reduce using rule 199 (EXP -> EXP is not true .)
    as              reduce using rule 199 (EXP -> EXP is not true .)
    cadenaString    reduce using rule 199 (EXP -> EXP is not true .)
    id              reduce using rule 199 (EXP -> EXP is not true .)
    cadena          reduce using rule 199 (EXP -> EXP is not true .)
    in              reduce using rule 199 (EXP -> EXP is not true .)
    not             reduce using rule 199 (EXP -> EXP is not true .)
    like            reduce using rule 199 (EXP -> EXP is not true .)
    parc            reduce using rule 199 (EXP -> EXP is not true .)
    then            reduce using rule 199 (EXP -> EXP is not true .)
    end             reduce using rule 199 (EXP -> EXP is not true .)
    else            reduce using rule 199 (EXP -> EXP is not true .)
    when            reduce using rule 199 (EXP -> EXP is not true .)
    constraint      reduce using rule 199 (EXP -> EXP is not true .)
    unique          reduce using rule 199 (EXP -> EXP is not true .)
    check           reduce using rule 199 (EXP -> EXP is not true .)
    default         reduce using rule 199 (EXP -> EXP is not true .)
    null            reduce using rule 199 (EXP -> EXP is not true .)
    primary         reduce using rule 199 (EXP -> EXP is not true .)
    references      reduce using rule 199 (EXP -> EXP is not true .)
    asc             reduce using rule 199 (EXP -> EXP is not true .)
    desc            reduce using rule 199 (EXP -> EXP is not true .)


state 239

    (201) EXP -> EXP is not false .

    r_from          reduce using rule 201 (EXP -> EXP is not false .)
    coma            reduce using rule 201 (EXP -> EXP is not false .)
    where           reduce using rule 201 (EXP -> EXP is not false .)
    union           reduce using rule 201 (EXP -> EXP is not false .)
    group           reduce using rule 201 (EXP -> EXP is not false .)
    having          reduce using rule 201 (EXP -> EXP is not false .)
    intersect       reduce using rule 201 (EXP -> EXP is not false .)
    except          reduce using rule 201 (EXP -> EXP is not false .)
    order           reduce using rule 201 (EXP -> EXP is not false .)
    limit           reduce using rule 201 (EXP -> EXP is not false .)
    offset          reduce using rule 201 (EXP -> EXP is not false .)
    ptcoma          reduce using rule 201 (EXP -> EXP is not false .)
    mas             reduce using rule 201 (EXP -> EXP is not false .)
    menos           reduce using rule 201 (EXP -> EXP is not false .)
    multiplicacion  reduce using rule 201 (EXP -> EXP is not false .)
    division        reduce using rule 201 (EXP -> EXP is not false .)
    modulo          reduce using rule 201 (EXP -> EXP is not false .)
    elevado         reduce using rule 201 (EXP -> EXP is not false .)
    and             reduce using rule 201 (EXP -> EXP is not false .)
    or              reduce using rule 201 (EXP -> EXP is not false .)
    mayor           reduce using rule 201 (EXP -> EXP is not false .)
    menor           reduce using rule 201 (EXP -> EXP is not false .)
    mayor_igual     reduce using rule 201 (EXP -> EXP is not false .)
    menor_igual     reduce using rule 201 (EXP -> EXP is not false .)
    igual           reduce using rule 201 (EXP -> EXP is not false .)
    diferente1      reduce using rule 201 (EXP -> EXP is not false .)
    diferente2      reduce using rule 201 (EXP -> EXP is not false .)
    punto           reduce using rule 201 (EXP -> EXP is not false .)
    between         reduce using rule 201 (EXP -> EXP is not false .)
    is              reduce using rule 201 (EXP -> EXP is not false .)
    isnull          reduce using rule 201 (EXP -> EXP is not false .)
    notnull         reduce using rule 201 (EXP -> EXP is not false .)
    as              reduce using rule 201 (EXP -> EXP is not false .)
    cadenaString    reduce using rule 201 (EXP -> EXP is not false .)
    id              reduce using rule 201 (EXP -> EXP is not false .)
    cadena          reduce using rule 201 (EXP -> EXP is not false .)
    in              reduce using rule 201 (EXP -> EXP is not false .)
    not             reduce using rule 201 (EXP -> EXP is not false .)
    like            reduce using rule 201 (EXP -> EXP is not false .)
    parc            reduce using rule 201 (EXP -> EXP is not false .)
    then            reduce using rule 201 (EXP -> EXP is not false .)
    end             reduce using rule 201 (EXP -> EXP is not false .)
    else            reduce using rule 201 (EXP -> EXP is not false .)
    when            reduce using rule 201 (EXP -> EXP is not false .)
    constraint      reduce using rule 201 (EXP -> EXP is not false .)
    unique          reduce using rule 201 (EXP -> EXP is not false .)
    check           reduce using rule 201 (EXP -> EXP is not false .)
    default         reduce using rule 201 (EXP -> EXP is not false .)
    null            reduce using rule 201 (EXP -> EXP is not false .)
    primary         reduce using rule 201 (EXP -> EXP is not false .)
    references      reduce using rule 201 (EXP -> EXP is not false .)
    asc             reduce using rule 201 (EXP -> EXP is not false .)
    desc            reduce using rule 201 (EXP -> EXP is not false .)


state 240

    (203) EXP -> EXP is not unknown .

    r_from          reduce using rule 203 (EXP -> EXP is not unknown .)
    coma            reduce using rule 203 (EXP -> EXP is not unknown .)
    where           reduce using rule 203 (EXP -> EXP is not unknown .)
    union           reduce using rule 203 (EXP -> EXP is not unknown .)
    group           reduce using rule 203 (EXP -> EXP is not unknown .)
    having          reduce using rule 203 (EXP -> EXP is not unknown .)
    intersect       reduce using rule 203 (EXP -> EXP is not unknown .)
    except          reduce using rule 203 (EXP -> EXP is not unknown .)
    order           reduce using rule 203 (EXP -> EXP is not unknown .)
    limit           reduce using rule 203 (EXP -> EXP is not unknown .)
    offset          reduce using rule 203 (EXP -> EXP is not unknown .)
    ptcoma          reduce using rule 203 (EXP -> EXP is not unknown .)
    mas             reduce using rule 203 (EXP -> EXP is not unknown .)
    menos           reduce using rule 203 (EXP -> EXP is not unknown .)
    multiplicacion  reduce using rule 203 (EXP -> EXP is not unknown .)
    division        reduce using rule 203 (EXP -> EXP is not unknown .)
    modulo          reduce using rule 203 (EXP -> EXP is not unknown .)
    elevado         reduce using rule 203 (EXP -> EXP is not unknown .)
    and             reduce using rule 203 (EXP -> EXP is not unknown .)
    or              reduce using rule 203 (EXP -> EXP is not unknown .)
    mayor           reduce using rule 203 (EXP -> EXP is not unknown .)
    menor           reduce using rule 203 (EXP -> EXP is not unknown .)
    mayor_igual     reduce using rule 203 (EXP -> EXP is not unknown .)
    menor_igual     reduce using rule 203 (EXP -> EXP is not unknown .)
    igual           reduce using rule 203 (EXP -> EXP is not unknown .)
    diferente1      reduce using rule 203 (EXP -> EXP is not unknown .)
    diferente2      reduce using rule 203 (EXP -> EXP is not unknown .)
    punto           reduce using rule 203 (EXP -> EXP is not unknown .)
    between         reduce using rule 203 (EXP -> EXP is not unknown .)
    is              reduce using rule 203 (EXP -> EXP is not unknown .)
    isnull          reduce using rule 203 (EXP -> EXP is not unknown .)
    notnull         reduce using rule 203 (EXP -> EXP is not unknown .)
    as              reduce using rule 203 (EXP -> EXP is not unknown .)
    cadenaString    reduce using rule 203 (EXP -> EXP is not unknown .)
    id              reduce using rule 203 (EXP -> EXP is not unknown .)
    cadena          reduce using rule 203 (EXP -> EXP is not unknown .)
    in              reduce using rule 203 (EXP -> EXP is not unknown .)
    not             reduce using rule 203 (EXP -> EXP is not unknown .)
    like            reduce using rule 203 (EXP -> EXP is not unknown .)
    parc            reduce using rule 203 (EXP -> EXP is not unknown .)
    then            reduce using rule 203 (EXP -> EXP is not unknown .)
    end             reduce using rule 203 (EXP -> EXP is not unknown .)
    else            reduce using rule 203 (EXP -> EXP is not unknown .)
    when            reduce using rule 203 (EXP -> EXP is not unknown .)
    constraint      reduce using rule 203 (EXP -> EXP is not unknown .)
    unique          reduce using rule 203 (EXP -> EXP is not unknown .)
    check           reduce using rule 203 (EXP -> EXP is not unknown .)
    default         reduce using rule 203 (EXP -> EXP is not unknown .)
    null            reduce using rule 203 (EXP -> EXP is not unknown .)
    primary         reduce using rule 203 (EXP -> EXP is not unknown .)
    references      reduce using rule 203 (EXP -> EXP is not unknown .)
    asc             reduce using rule 203 (EXP -> EXP is not unknown .)
    desc            reduce using rule 203 (EXP -> EXP is not unknown .)


state 241

    (219) EXP -> EXP is not distinct . r_from EXP

    r_from          shift and go to state 304


state 242

    (218) EXP -> EXP is distinct r_from . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    EXP                            shift and go to state 305
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 243

    (214) EXP -> EXP not in para . EXP parc
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    EXP                            shift and go to state 306
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 244

    (215) EXP -> EXP not between EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

    r_from          reduce using rule 215 (EXP -> EXP not between EXP .)
    coma            reduce using rule 215 (EXP -> EXP not between EXP .)
    where           reduce using rule 215 (EXP -> EXP not between EXP .)
    union           reduce using rule 215 (EXP -> EXP not between EXP .)
    group           reduce using rule 215 (EXP -> EXP not between EXP .)
    having          reduce using rule 215 (EXP -> EXP not between EXP .)
    intersect       reduce using rule 215 (EXP -> EXP not between EXP .)
    except          reduce using rule 215 (EXP -> EXP not between EXP .)
    order           reduce using rule 215 (EXP -> EXP not between EXP .)
    limit           reduce using rule 215 (EXP -> EXP not between EXP .)
    offset          reduce using rule 215 (EXP -> EXP not between EXP .)
    ptcoma          reduce using rule 215 (EXP -> EXP not between EXP .)
    and             reduce using rule 215 (EXP -> EXP not between EXP .)
    or              reduce using rule 215 (EXP -> EXP not between EXP .)
    between         reduce using rule 215 (EXP -> EXP not between EXP .)
    is              reduce using rule 215 (EXP -> EXP not between EXP .)
    isnull          reduce using rule 215 (EXP -> EXP not between EXP .)
    notnull         reduce using rule 215 (EXP -> EXP not between EXP .)
    as              reduce using rule 215 (EXP -> EXP not between EXP .)
    cadenaString    reduce using rule 215 (EXP -> EXP not between EXP .)
    id              reduce using rule 215 (EXP -> EXP not between EXP .)
    cadena          reduce using rule 215 (EXP -> EXP not between EXP .)
    in              reduce using rule 215 (EXP -> EXP not between EXP .)
    not             reduce using rule 215 (EXP -> EXP not between EXP .)
    like            reduce using rule 215 (EXP -> EXP not between EXP .)
    parc            reduce using rule 215 (EXP -> EXP not between EXP .)
    then            reduce using rule 215 (EXP -> EXP not between EXP .)
    end             reduce using rule 215 (EXP -> EXP not between EXP .)
    else            reduce using rule 215 (EXP -> EXP not between EXP .)
    when            reduce using rule 215 (EXP -> EXP not between EXP .)
    constraint      reduce using rule 215 (EXP -> EXP not between EXP .)
    unique          reduce using rule 215 (EXP -> EXP not between EXP .)
    check           reduce using rule 215 (EXP -> EXP not between EXP .)
    default         reduce using rule 215 (EXP -> EXP not between EXP .)
    null            reduce using rule 215 (EXP -> EXP not between EXP .)
    primary         reduce using rule 215 (EXP -> EXP not between EXP .)
    references      reduce using rule 215 (EXP -> EXP not between EXP .)
    asc             reduce using rule 215 (EXP -> EXP not between EXP .)
    desc            reduce using rule 215 (EXP -> EXP not between EXP .)
    mas             shift and go to state 87
    menos           shift and go to state 88
    multiplicacion  shift and go to state 89
    division        shift and go to state 90
    modulo          shift and go to state 91
    elevado         shift and go to state 92
    mayor           shift and go to state 95
    menor           shift and go to state 96
    mayor_igual     shift and go to state 97
    menor_igual     shift and go to state 98
    igual           shift and go to state 99
    diferente1      shift and go to state 100
    diferente2      shift and go to state 101
    punto           shift and go to state 102

  ! mas             [ reduce using rule 215 (EXP -> EXP not between EXP .) ]
  ! menos           [ reduce using rule 215 (EXP -> EXP not between EXP .) ]
  ! multiplicacion  [ reduce using rule 215 (EXP -> EXP not between EXP .) ]
  ! division        [ reduce using rule 215 (EXP -> EXP not between EXP .) ]
  ! modulo          [ reduce using rule 215 (EXP -> EXP not between EXP .) ]
  ! elevado         [ reduce using rule 215 (EXP -> EXP not between EXP .) ]
  ! mayor           [ reduce using rule 215 (EXP -> EXP not between EXP .) ]
  ! menor           [ reduce using rule 215 (EXP -> EXP not between EXP .) ]
  ! mayor_igual     [ reduce using rule 215 (EXP -> EXP not between EXP .) ]
  ! menor_igual     [ reduce using rule 215 (EXP -> EXP not between EXP .) ]
  ! igual           [ reduce using rule 215 (EXP -> EXP not between EXP .) ]
  ! diferente1      [ reduce using rule 215 (EXP -> EXP not between EXP .) ]
  ! diferente2      [ reduce using rule 215 (EXP -> EXP not between EXP .) ]
  ! punto           [ reduce using rule 215 (EXP -> EXP not between EXP .) ]
  ! and             [ shift and go to state 93 ]
  ! or              [ shift and go to state 94 ]
  ! between         [ shift and go to state 103 ]
  ! is              [ shift and go to state 104 ]
  ! isnull          [ shift and go to state 106 ]
  ! notnull         [ shift and go to state 107 ]
  ! as              [ shift and go to state 108 ]
  ! cadenaString    [ shift and go to state 109 ]
  ! id              [ shift and go to state 110 ]
  ! cadena          [ shift and go to state 111 ]
  ! in              [ shift and go to state 112 ]
  ! not             [ shift and go to state 105 ]
  ! like            [ shift and go to state 113 ]


state 245

    (217) EXP -> EXP not between symetric . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    EXP                            shift and go to state 307
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 246

    (221) EXP -> EXP not like cadena .

    r_from          reduce using rule 221 (EXP -> EXP not like cadena .)
    coma            reduce using rule 221 (EXP -> EXP not like cadena .)
    where           reduce using rule 221 (EXP -> EXP not like cadena .)
    union           reduce using rule 221 (EXP -> EXP not like cadena .)
    group           reduce using rule 221 (EXP -> EXP not like cadena .)
    having          reduce using rule 221 (EXP -> EXP not like cadena .)
    intersect       reduce using rule 221 (EXP -> EXP not like cadena .)
    except          reduce using rule 221 (EXP -> EXP not like cadena .)
    order           reduce using rule 221 (EXP -> EXP not like cadena .)
    limit           reduce using rule 221 (EXP -> EXP not like cadena .)
    offset          reduce using rule 221 (EXP -> EXP not like cadena .)
    ptcoma          reduce using rule 221 (EXP -> EXP not like cadena .)
    mas             reduce using rule 221 (EXP -> EXP not like cadena .)
    menos           reduce using rule 221 (EXP -> EXP not like cadena .)
    multiplicacion  reduce using rule 221 (EXP -> EXP not like cadena .)
    division        reduce using rule 221 (EXP -> EXP not like cadena .)
    modulo          reduce using rule 221 (EXP -> EXP not like cadena .)
    elevado         reduce using rule 221 (EXP -> EXP not like cadena .)
    and             reduce using rule 221 (EXP -> EXP not like cadena .)
    or              reduce using rule 221 (EXP -> EXP not like cadena .)
    mayor           reduce using rule 221 (EXP -> EXP not like cadena .)
    menor           reduce using rule 221 (EXP -> EXP not like cadena .)
    mayor_igual     reduce using rule 221 (EXP -> EXP not like cadena .)
    menor_igual     reduce using rule 221 (EXP -> EXP not like cadena .)
    igual           reduce using rule 221 (EXP -> EXP not like cadena .)
    diferente1      reduce using rule 221 (EXP -> EXP not like cadena .)
    diferente2      reduce using rule 221 (EXP -> EXP not like cadena .)
    punto           reduce using rule 221 (EXP -> EXP not like cadena .)
    between         reduce using rule 221 (EXP -> EXP not like cadena .)
    is              reduce using rule 221 (EXP -> EXP not like cadena .)
    isnull          reduce using rule 221 (EXP -> EXP not like cadena .)
    notnull         reduce using rule 221 (EXP -> EXP not like cadena .)
    as              reduce using rule 221 (EXP -> EXP not like cadena .)
    cadenaString    reduce using rule 221 (EXP -> EXP not like cadena .)
    id              reduce using rule 221 (EXP -> EXP not like cadena .)
    cadena          reduce using rule 221 (EXP -> EXP not like cadena .)
    in              reduce using rule 221 (EXP -> EXP not like cadena .)
    not             reduce using rule 221 (EXP -> EXP not like cadena .)
    like            reduce using rule 221 (EXP -> EXP not like cadena .)
    parc            reduce using rule 221 (EXP -> EXP not like cadena .)
    then            reduce using rule 221 (EXP -> EXP not like cadena .)
    end             reduce using rule 221 (EXP -> EXP not like cadena .)
    else            reduce using rule 221 (EXP -> EXP not like cadena .)
    when            reduce using rule 221 (EXP -> EXP not like cadena .)
    constraint      reduce using rule 221 (EXP -> EXP not like cadena .)
    unique          reduce using rule 221 (EXP -> EXP not like cadena .)
    check           reduce using rule 221 (EXP -> EXP not like cadena .)
    default         reduce using rule 221 (EXP -> EXP not like cadena .)
    null            reduce using rule 221 (EXP -> EXP not like cadena .)
    primary         reduce using rule 221 (EXP -> EXP not like cadena .)
    references      reduce using rule 221 (EXP -> EXP not like cadena .)
    asc             reduce using rule 221 (EXP -> EXP not like cadena .)
    desc            reduce using rule 221 (EXP -> EXP not like cadena .)


state 247

    (213) EXP -> EXP in para EXP . parc
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

    parc            shift and go to state 308
    mas             shift and go to state 87
    menos           shift and go to state 88
    multiplicacion  shift and go to state 89
    division        shift and go to state 90
    modulo          shift and go to state 91
    elevado         shift and go to state 92
    and             shift and go to state 93
    or              shift and go to state 94
    mayor           shift and go to state 95
    menor           shift and go to state 96
    mayor_igual     shift and go to state 97
    menor_igual     shift and go to state 98
    igual           shift and go to state 99
    diferente1      shift and go to state 100
    diferente2      shift and go to state 101
    punto           shift and go to state 102
    between         shift and go to state 103
    is              shift and go to state 104
    isnull          shift and go to state 106
    notnull         shift and go to state 107
    as              shift and go to state 108
    cadenaString    shift and go to state 109
    id              shift and go to state 110
    cadena          shift and go to state 111
    in              shift and go to state 112
    not             shift and go to state 105
    like            shift and go to state 113


state 248

    (225) EXP -> id para LEXP parc .

    r_from          reduce using rule 225 (EXP -> id para LEXP parc .)
    coma            reduce using rule 225 (EXP -> id para LEXP parc .)
    where           reduce using rule 225 (EXP -> id para LEXP parc .)
    union           reduce using rule 225 (EXP -> id para LEXP parc .)
    group           reduce using rule 225 (EXP -> id para LEXP parc .)
    having          reduce using rule 225 (EXP -> id para LEXP parc .)
    intersect       reduce using rule 225 (EXP -> id para LEXP parc .)
    except          reduce using rule 225 (EXP -> id para LEXP parc .)
    order           reduce using rule 225 (EXP -> id para LEXP parc .)
    limit           reduce using rule 225 (EXP -> id para LEXP parc .)
    offset          reduce using rule 225 (EXP -> id para LEXP parc .)
    ptcoma          reduce using rule 225 (EXP -> id para LEXP parc .)
    mas             reduce using rule 225 (EXP -> id para LEXP parc .)
    menos           reduce using rule 225 (EXP -> id para LEXP parc .)
    multiplicacion  reduce using rule 225 (EXP -> id para LEXP parc .)
    division        reduce using rule 225 (EXP -> id para LEXP parc .)
    modulo          reduce using rule 225 (EXP -> id para LEXP parc .)
    elevado         reduce using rule 225 (EXP -> id para LEXP parc .)
    and             reduce using rule 225 (EXP -> id para LEXP parc .)
    or              reduce using rule 225 (EXP -> id para LEXP parc .)
    mayor           reduce using rule 225 (EXP -> id para LEXP parc .)
    menor           reduce using rule 225 (EXP -> id para LEXP parc .)
    mayor_igual     reduce using rule 225 (EXP -> id para LEXP parc .)
    menor_igual     reduce using rule 225 (EXP -> id para LEXP parc .)
    igual           reduce using rule 225 (EXP -> id para LEXP parc .)
    diferente1      reduce using rule 225 (EXP -> id para LEXP parc .)
    diferente2      reduce using rule 225 (EXP -> id para LEXP parc .)
    punto           reduce using rule 225 (EXP -> id para LEXP parc .)
    between         reduce using rule 225 (EXP -> id para LEXP parc .)
    is              reduce using rule 225 (EXP -> id para LEXP parc .)
    isnull          reduce using rule 225 (EXP -> id para LEXP parc .)
    notnull         reduce using rule 225 (EXP -> id para LEXP parc .)
    as              reduce using rule 225 (EXP -> id para LEXP parc .)
    cadenaString    reduce using rule 225 (EXP -> id para LEXP parc .)
    id              reduce using rule 225 (EXP -> id para LEXP parc .)
    cadena          reduce using rule 225 (EXP -> id para LEXP parc .)
    in              reduce using rule 225 (EXP -> id para LEXP parc .)
    not             reduce using rule 225 (EXP -> id para LEXP parc .)
    like            reduce using rule 225 (EXP -> id para LEXP parc .)
    parc            reduce using rule 225 (EXP -> id para LEXP parc .)
    then            reduce using rule 225 (EXP -> id para LEXP parc .)
    end             reduce using rule 225 (EXP -> id para LEXP parc .)
    else            reduce using rule 225 (EXP -> id para LEXP parc .)
    when            reduce using rule 225 (EXP -> id para LEXP parc .)
    constraint      reduce using rule 225 (EXP -> id para LEXP parc .)
    unique          reduce using rule 225 (EXP -> id para LEXP parc .)
    check           reduce using rule 225 (EXP -> id para LEXP parc .)
    default         reduce using rule 225 (EXP -> id para LEXP parc .)
    null            reduce using rule 225 (EXP -> id para LEXP parc .)
    primary         reduce using rule 225 (EXP -> id para LEXP parc .)
    references      reduce using rule 225 (EXP -> id para LEXP parc .)
    asc             reduce using rule 225 (EXP -> id para LEXP parc .)
    desc            reduce using rule 225 (EXP -> id para LEXP parc .)


state 249

    (227) EXP -> any para LEXP parc .

    r_from          reduce using rule 227 (EXP -> any para LEXP parc .)
    coma            reduce using rule 227 (EXP -> any para LEXP parc .)
    where           reduce using rule 227 (EXP -> any para LEXP parc .)
    union           reduce using rule 227 (EXP -> any para LEXP parc .)
    group           reduce using rule 227 (EXP -> any para LEXP parc .)
    having          reduce using rule 227 (EXP -> any para LEXP parc .)
    intersect       reduce using rule 227 (EXP -> any para LEXP parc .)
    except          reduce using rule 227 (EXP -> any para LEXP parc .)
    order           reduce using rule 227 (EXP -> any para LEXP parc .)
    limit           reduce using rule 227 (EXP -> any para LEXP parc .)
    offset          reduce using rule 227 (EXP -> any para LEXP parc .)
    ptcoma          reduce using rule 227 (EXP -> any para LEXP parc .)
    mas             reduce using rule 227 (EXP -> any para LEXP parc .)
    menos           reduce using rule 227 (EXP -> any para LEXP parc .)
    multiplicacion  reduce using rule 227 (EXP -> any para LEXP parc .)
    division        reduce using rule 227 (EXP -> any para LEXP parc .)
    modulo          reduce using rule 227 (EXP -> any para LEXP parc .)
    elevado         reduce using rule 227 (EXP -> any para LEXP parc .)
    and             reduce using rule 227 (EXP -> any para LEXP parc .)
    or              reduce using rule 227 (EXP -> any para LEXP parc .)
    mayor           reduce using rule 227 (EXP -> any para LEXP parc .)
    menor           reduce using rule 227 (EXP -> any para LEXP parc .)
    mayor_igual     reduce using rule 227 (EXP -> any para LEXP parc .)
    menor_igual     reduce using rule 227 (EXP -> any para LEXP parc .)
    igual           reduce using rule 227 (EXP -> any para LEXP parc .)
    diferente1      reduce using rule 227 (EXP -> any para LEXP parc .)
    diferente2      reduce using rule 227 (EXP -> any para LEXP parc .)
    punto           reduce using rule 227 (EXP -> any para LEXP parc .)
    between         reduce using rule 227 (EXP -> any para LEXP parc .)
    is              reduce using rule 227 (EXP -> any para LEXP parc .)
    isnull          reduce using rule 227 (EXP -> any para LEXP parc .)
    notnull         reduce using rule 227 (EXP -> any para LEXP parc .)
    as              reduce using rule 227 (EXP -> any para LEXP parc .)
    cadenaString    reduce using rule 227 (EXP -> any para LEXP parc .)
    id              reduce using rule 227 (EXP -> any para LEXP parc .)
    cadena          reduce using rule 227 (EXP -> any para LEXP parc .)
    in              reduce using rule 227 (EXP -> any para LEXP parc .)
    not             reduce using rule 227 (EXP -> any para LEXP parc .)
    like            reduce using rule 227 (EXP -> any para LEXP parc .)
    parc            reduce using rule 227 (EXP -> any para LEXP parc .)
    then            reduce using rule 227 (EXP -> any para LEXP parc .)
    end             reduce using rule 227 (EXP -> any para LEXP parc .)
    else            reduce using rule 227 (EXP -> any para LEXP parc .)
    when            reduce using rule 227 (EXP -> any para LEXP parc .)
    constraint      reduce using rule 227 (EXP -> any para LEXP parc .)
    unique          reduce using rule 227 (EXP -> any para LEXP parc .)
    check           reduce using rule 227 (EXP -> any para LEXP parc .)
    default         reduce using rule 227 (EXP -> any para LEXP parc .)
    null            reduce using rule 227 (EXP -> any para LEXP parc .)
    primary         reduce using rule 227 (EXP -> any para LEXP parc .)
    references      reduce using rule 227 (EXP -> any para LEXP parc .)
    asc             reduce using rule 227 (EXP -> any para LEXP parc .)
    desc            reduce using rule 227 (EXP -> any para LEXP parc .)


state 250

    (228) EXP -> all para LEXP parc .

    r_from          reduce using rule 228 (EXP -> all para LEXP parc .)
    coma            reduce using rule 228 (EXP -> all para LEXP parc .)
    where           reduce using rule 228 (EXP -> all para LEXP parc .)
    union           reduce using rule 228 (EXP -> all para LEXP parc .)
    group           reduce using rule 228 (EXP -> all para LEXP parc .)
    having          reduce using rule 228 (EXP -> all para LEXP parc .)
    intersect       reduce using rule 228 (EXP -> all para LEXP parc .)
    except          reduce using rule 228 (EXP -> all para LEXP parc .)
    order           reduce using rule 228 (EXP -> all para LEXP parc .)
    limit           reduce using rule 228 (EXP -> all para LEXP parc .)
    offset          reduce using rule 228 (EXP -> all para LEXP parc .)
    ptcoma          reduce using rule 228 (EXP -> all para LEXP parc .)
    mas             reduce using rule 228 (EXP -> all para LEXP parc .)
    menos           reduce using rule 228 (EXP -> all para LEXP parc .)
    multiplicacion  reduce using rule 228 (EXP -> all para LEXP parc .)
    division        reduce using rule 228 (EXP -> all para LEXP parc .)
    modulo          reduce using rule 228 (EXP -> all para LEXP parc .)
    elevado         reduce using rule 228 (EXP -> all para LEXP parc .)
    and             reduce using rule 228 (EXP -> all para LEXP parc .)
    or              reduce using rule 228 (EXP -> all para LEXP parc .)
    mayor           reduce using rule 228 (EXP -> all para LEXP parc .)
    menor           reduce using rule 228 (EXP -> all para LEXP parc .)
    mayor_igual     reduce using rule 228 (EXP -> all para LEXP parc .)
    menor_igual     reduce using rule 228 (EXP -> all para LEXP parc .)
    igual           reduce using rule 228 (EXP -> all para LEXP parc .)
    diferente1      reduce using rule 228 (EXP -> all para LEXP parc .)
    diferente2      reduce using rule 228 (EXP -> all para LEXP parc .)
    punto           reduce using rule 228 (EXP -> all para LEXP parc .)
    between         reduce using rule 228 (EXP -> all para LEXP parc .)
    is              reduce using rule 228 (EXP -> all para LEXP parc .)
    isnull          reduce using rule 228 (EXP -> all para LEXP parc .)
    notnull         reduce using rule 228 (EXP -> all para LEXP parc .)
    as              reduce using rule 228 (EXP -> all para LEXP parc .)
    cadenaString    reduce using rule 228 (EXP -> all para LEXP parc .)
    id              reduce using rule 228 (EXP -> all para LEXP parc .)
    cadena          reduce using rule 228 (EXP -> all para LEXP parc .)
    in              reduce using rule 228 (EXP -> all para LEXP parc .)
    not             reduce using rule 228 (EXP -> all para LEXP parc .)
    like            reduce using rule 228 (EXP -> all para LEXP parc .)
    parc            reduce using rule 228 (EXP -> all para LEXP parc .)
    then            reduce using rule 228 (EXP -> all para LEXP parc .)
    end             reduce using rule 228 (EXP -> all para LEXP parc .)
    else            reduce using rule 228 (EXP -> all para LEXP parc .)
    when            reduce using rule 228 (EXP -> all para LEXP parc .)
    constraint      reduce using rule 228 (EXP -> all para LEXP parc .)
    unique          reduce using rule 228 (EXP -> all para LEXP parc .)
    check           reduce using rule 228 (EXP -> all para LEXP parc .)
    default         reduce using rule 228 (EXP -> all para LEXP parc .)
    null            reduce using rule 228 (EXP -> all para LEXP parc .)
    primary         reduce using rule 228 (EXP -> all para LEXP parc .)
    references      reduce using rule 228 (EXP -> all para LEXP parc .)
    asc             reduce using rule 228 (EXP -> all para LEXP parc .)
    desc            reduce using rule 228 (EXP -> all para LEXP parc .)


state 251

    (229) EXP -> some para LEXP parc .

    r_from          reduce using rule 229 (EXP -> some para LEXP parc .)
    coma            reduce using rule 229 (EXP -> some para LEXP parc .)
    where           reduce using rule 229 (EXP -> some para LEXP parc .)
    union           reduce using rule 229 (EXP -> some para LEXP parc .)
    group           reduce using rule 229 (EXP -> some para LEXP parc .)
    having          reduce using rule 229 (EXP -> some para LEXP parc .)
    intersect       reduce using rule 229 (EXP -> some para LEXP parc .)
    except          reduce using rule 229 (EXP -> some para LEXP parc .)
    order           reduce using rule 229 (EXP -> some para LEXP parc .)
    limit           reduce using rule 229 (EXP -> some para LEXP parc .)
    offset          reduce using rule 229 (EXP -> some para LEXP parc .)
    ptcoma          reduce using rule 229 (EXP -> some para LEXP parc .)
    mas             reduce using rule 229 (EXP -> some para LEXP parc .)
    menos           reduce using rule 229 (EXP -> some para LEXP parc .)
    multiplicacion  reduce using rule 229 (EXP -> some para LEXP parc .)
    division        reduce using rule 229 (EXP -> some para LEXP parc .)
    modulo          reduce using rule 229 (EXP -> some para LEXP parc .)
    elevado         reduce using rule 229 (EXP -> some para LEXP parc .)
    and             reduce using rule 229 (EXP -> some para LEXP parc .)
    or              reduce using rule 229 (EXP -> some para LEXP parc .)
    mayor           reduce using rule 229 (EXP -> some para LEXP parc .)
    menor           reduce using rule 229 (EXP -> some para LEXP parc .)
    mayor_igual     reduce using rule 229 (EXP -> some para LEXP parc .)
    menor_igual     reduce using rule 229 (EXP -> some para LEXP parc .)
    igual           reduce using rule 229 (EXP -> some para LEXP parc .)
    diferente1      reduce using rule 229 (EXP -> some para LEXP parc .)
    diferente2      reduce using rule 229 (EXP -> some para LEXP parc .)
    punto           reduce using rule 229 (EXP -> some para LEXP parc .)
    between         reduce using rule 229 (EXP -> some para LEXP parc .)
    is              reduce using rule 229 (EXP -> some para LEXP parc .)
    isnull          reduce using rule 229 (EXP -> some para LEXP parc .)
    notnull         reduce using rule 229 (EXP -> some para LEXP parc .)
    as              reduce using rule 229 (EXP -> some para LEXP parc .)
    cadenaString    reduce using rule 229 (EXP -> some para LEXP parc .)
    id              reduce using rule 229 (EXP -> some para LEXP parc .)
    cadena          reduce using rule 229 (EXP -> some para LEXP parc .)
    in              reduce using rule 229 (EXP -> some para LEXP parc .)
    not             reduce using rule 229 (EXP -> some para LEXP parc .)
    like            reduce using rule 229 (EXP -> some para LEXP parc .)
    parc            reduce using rule 229 (EXP -> some para LEXP parc .)
    then            reduce using rule 229 (EXP -> some para LEXP parc .)
    end             reduce using rule 229 (EXP -> some para LEXP parc .)
    else            reduce using rule 229 (EXP -> some para LEXP parc .)
    when            reduce using rule 229 (EXP -> some para LEXP parc .)
    constraint      reduce using rule 229 (EXP -> some para LEXP parc .)
    unique          reduce using rule 229 (EXP -> some para LEXP parc .)
    check           reduce using rule 229 (EXP -> some para LEXP parc .)
    default         reduce using rule 229 (EXP -> some para LEXP parc .)
    null            reduce using rule 229 (EXP -> some para LEXP parc .)
    primary         reduce using rule 229 (EXP -> some para LEXP parc .)
    references      reduce using rule 229 (EXP -> some para LEXP parc .)
    asc             reduce using rule 229 (EXP -> some para LEXP parc .)
    desc            reduce using rule 229 (EXP -> some para LEXP parc .)


state 252

    (230) EXP -> extract para FIELDS r_from . timestamp cadena parc

    timestamp       shift and go to state 309


state 253

    (74) COLDEF -> id . TIPO
    (75) COLDEF -> id . TIPO LOPCOLUMN
    (76) COLDEF -> id . id
    (77) COLDEF -> id . id LOPCOLUMN
    (136) TIPO -> . interval cadena
    (137) TIPO -> . decimal para int coma int parc
    (138) TIPO -> . decimal para int parc
    (139) TIPO -> . decimal
    (140) TIPO -> . numeric para int coma int parc
    (141) TIPO -> . numeric para int parc
    (142) TIPO -> . numeric
    (143) TIPO -> . varchar para int parc
    (144) TIPO -> . timestamp para int parc
    (145) TIPO -> . character para int parc
    (146) TIPO -> . interval para int parc
    (147) TIPO -> . char para int parc
    (148) TIPO -> . time para int parc
    (149) TIPO -> . character varying para int parc
    (150) TIPO -> . timestamp para int parc without time zone
    (151) TIPO -> . timestamp para int parc with time zone
    (152) TIPO -> . time para int parc without time zone
    (153) TIPO -> . time para int parc with time zone
    (154) TIPO -> . interval para int parc cadena
    (155) TIPO -> . smallint
    (156) TIPO -> . integer
    (157) TIPO -> . bigint
    (158) TIPO -> . real
    (159) TIPO -> . double precision
    (160) TIPO -> . money
    (161) TIPO -> . text
    (162) TIPO -> . timestamp
    (163) TIPO -> . date
    (164) TIPO -> . time
    (165) TIPO -> . interval
    (166) TIPO -> . boolean
    (167) TIPO -> . timestamp without time zone
    (168) TIPO -> . timestamp with time zone
    (169) TIPO -> . time without time zone
    (170) TIPO -> . time with time zone

    id              shift and go to state 310
    interval        shift and go to state 312
    decimal         shift and go to state 313
    numeric         shift and go to state 314
    varchar         shift and go to state 315
    timestamp       shift and go to state 316
    character       shift and go to state 317
    char            shift and go to state 318
    time            shift and go to state 319
    smallint        shift and go to state 320
    integer         shift and go to state 321
    bigint          shift and go to state 322
    real            shift and go to state 323
    double          shift and go to state 324
    money           shift and go to state 325
    text            shift and go to state 326
    date            shift and go to state 327
    boolean         shift and go to state 328

    TIPO                           shift and go to state 311

state 254

    (68) CREATETABLE -> create table id para LDEF . parc ptcoma
    (69) CREATETABLE -> create table id para LDEF . parc HERENCIA ptcoma
    (70) LDEF -> LDEF . coma COLDEF

    parc            shift and go to state 329
    coma            shift and go to state 330


state 255

    (71) LDEF -> COLDEF .

    parc            reduce using rule 71 (LDEF -> COLDEF .)
    coma            reduce using rule 71 (LDEF -> COLDEF .)


state 256

    (72) COLDEF -> OPCONST .

    parc            reduce using rule 72 (COLDEF -> OPCONST .)
    coma            reduce using rule 72 (COLDEF -> OPCONST .)


state 257

    (73) COLDEF -> constraint . id OPCONST

    id              shift and go to state 331


state 258

    (89) OPCONST -> primary . key para LEXP parc

    key             shift and go to state 332


state 259

    (90) OPCONST -> foreign . key para LEXP parc references id para LEXP parc

    key             shift and go to state 333


state 260

    (91) OPCONST -> unique . para LEXP parc

    para            shift and go to state 334


state 261

    (92) OPCONST -> check . para LEXP parc

    para            shift and go to state 335


state 262

    (94) CREATETYPE -> create type id as enum . para LEXP parc

    para            shift and go to state 336


state 263

    (51) CREATEDB -> create RD if not exist . id
    (52) CREATEDB -> create RD if not exist . id OPCCDB

    id              shift and go to state 337


state 264

    (57) OPCCDB -> PROPIETARIO MODO .

    ptcoma          reduce using rule 57 (OPCCDB -> PROPIETARIO MODO .)


state 265

    (60) PROPIETARIO -> owner igual . id
    (62) PROPIETARIO -> owner igual . cadena
    (64) PROPIETARIO -> owner igual . cadenaString

    id              shift and go to state 338
    cadena          shift and go to state 339
    cadenaString    shift and go to state 340


state 266

    (61) PROPIETARIO -> owner id .

    mode            reduce using rule 61 (PROPIETARIO -> owner id .)
    ptcoma          reduce using rule 61 (PROPIETARIO -> owner id .)


state 267

    (63) PROPIETARIO -> owner cadena .

    mode            reduce using rule 63 (PROPIETARIO -> owner cadena .)
    ptcoma          reduce using rule 63 (PROPIETARIO -> owner cadena .)


state 268

    (65) PROPIETARIO -> owner cadenaString .

    mode            reduce using rule 65 (PROPIETARIO -> owner cadenaString .)
    ptcoma          reduce using rule 65 (PROPIETARIO -> owner cadenaString .)


state 269

    (66) MODO -> mode igual . int

    int             shift and go to state 341


state 270

    (67) MODO -> mode int .

    ptcoma          reduce using rule 67 (MODO -> mode int .)


state 271

    (129) LCAMPOS -> id igual . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    EXP                            shift and go to state 342
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 272

    (128) LCAMPOS -> LCAMPOS id . igual EXP

    igual           shift and go to state 343


state 273

    (127) UPDATE -> update id set LCAMPOS where . LEXP
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 344
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 274

    (130) DELETE -> delete r_from id where LEXP .
    (134) LEXP -> LEXP . coma EXP

    ptcoma          reduce using rule 130 (DELETE -> delete r_from id where LEXP .)
    coma            shift and go to state 84


state 275

    (29) RO -> rename to . id

    id              shift and go to state 345


state 276

    (30) RO -> owner to . id

    id              shift and go to state 346


state 277

    (34) OP -> alter column . id set not null
    (35) OP -> alter column . id set null
    (41) alc -> alter column . id type TIPO

    id              shift and go to state 347


state 278

    (32) OP -> add ADD .

    ptcoma          reduce using rule 32 (OP -> add ADD .)


state 279

    (45) ADD -> column . id TIPO

    id              shift and go to state 348


state 280

    (46) ADD -> check . para LEXP parc

    para            shift and go to state 349


state 281

    (47) ADD -> constraint . id unique para id parc
    (49) ADD -> constraint . id foreign key para LEXP parc references id para LEXP parc

    id              shift and go to state 350


state 282

    (48) ADD -> foreign . key para LEXP parc references id para LEXP parc

    key             shift and go to state 351


state 283

    (33) OP -> drop column . ALTERDROP
    (43) ALTERDROP -> column . LEXP
    (42) ALTERDROP -> . constraint id
    (43) ALTERDROP -> . column LEXP
    (44) ALTERDROP -> . check id
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    constraint      shift and go to state 285
    column          shift and go to state 352
    check           shift and go to state 286
    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    ALTERDROP                      shift and go to state 353
    LEXP                           shift and go to state 354
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 284

    (37) OP -> drop ALTERDROP .

    ptcoma          reduce using rule 37 (OP -> drop ALTERDROP .)


state 285

    (42) ALTERDROP -> constraint . id

    id              shift and go to state 355


state 286

    (44) ALTERDROP -> check . id

    id              shift and go to state 356


state 287

    (39) listaalc -> listaalc coma . alc
    (41) alc -> . alter column id type TIPO

    alter           shift and go to state 358

    alc                            shift and go to state 357

state 288

    (38) OP -> rename column . id to id

    id              shift and go to state 359


state 289

    (25) DROP -> drop databases if exist id .

    ptcoma          reduce using rule 25 (DROP -> drop databases if exist id .)


state 290

    (22) INSERT -> insert into id values para . LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 360
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 291

    (23) INSERT -> insert into id para LEXP . parc values para LEXP parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 361
    coma            shift and go to state 84


state 292

    (20) WHEN -> when LEXP then LEXP .
    (134) LEXP -> LEXP . coma EXP

    end             reduce using rule 20 (WHEN -> when LEXP then LEXP .)
    else            reduce using rule 20 (WHEN -> when LEXP then LEXP .)
    when            reduce using rule 20 (WHEN -> when LEXP then LEXP .)
    coma            shift and go to state 84


state 293

    (95) SELECT -> select distinct LEXP r_from LEXP WHERE . GROUP HAVING COMBINING ORDER LIMIT
    (118) GROUP -> . group by LEXP
    (119) GROUP -> .

  ! shift/reduce conflict for group resolved as shift
    group           shift and go to state 146
    r_from          reduce using rule 119 (GROUP -> .)
    coma            reduce using rule 119 (GROUP -> .)
    where           reduce using rule 119 (GROUP -> .)
    union           reduce using rule 119 (GROUP -> .)
    having          reduce using rule 119 (GROUP -> .)
    intersect       reduce using rule 119 (GROUP -> .)
    except          reduce using rule 119 (GROUP -> .)
    order           reduce using rule 119 (GROUP -> .)
    limit           reduce using rule 119 (GROUP -> .)
    offset          reduce using rule 119 (GROUP -> .)
    ptcoma          reduce using rule 119 (GROUP -> .)
    mas             reduce using rule 119 (GROUP -> .)
    menos           reduce using rule 119 (GROUP -> .)
    multiplicacion  reduce using rule 119 (GROUP -> .)
    division        reduce using rule 119 (GROUP -> .)
    modulo          reduce using rule 119 (GROUP -> .)
    elevado         reduce using rule 119 (GROUP -> .)
    and             reduce using rule 119 (GROUP -> .)
    or              reduce using rule 119 (GROUP -> .)
    mayor           reduce using rule 119 (GROUP -> .)
    menor           reduce using rule 119 (GROUP -> .)
    mayor_igual     reduce using rule 119 (GROUP -> .)
    menor_igual     reduce using rule 119 (GROUP -> .)
    igual           reduce using rule 119 (GROUP -> .)
    diferente1      reduce using rule 119 (GROUP -> .)
    diferente2      reduce using rule 119 (GROUP -> .)
    punto           reduce using rule 119 (GROUP -> .)
    between         reduce using rule 119 (GROUP -> .)
    is              reduce using rule 119 (GROUP -> .)
    isnull          reduce using rule 119 (GROUP -> .)
    notnull         reduce using rule 119 (GROUP -> .)
    as              reduce using rule 119 (GROUP -> .)
    cadenaString    reduce using rule 119 (GROUP -> .)
    id              reduce using rule 119 (GROUP -> .)
    cadena          reduce using rule 119 (GROUP -> .)
    in              reduce using rule 119 (GROUP -> .)
    not             reduce using rule 119 (GROUP -> .)
    like            reduce using rule 119 (GROUP -> .)
    parc            reduce using rule 119 (GROUP -> .)
    then            reduce using rule 119 (GROUP -> .)
    end             reduce using rule 119 (GROUP -> .)
    else            reduce using rule 119 (GROUP -> .)
    when            reduce using rule 119 (GROUP -> .)
    constraint      reduce using rule 119 (GROUP -> .)
    unique          reduce using rule 119 (GROUP -> .)
    check           reduce using rule 119 (GROUP -> .)
    default         reduce using rule 119 (GROUP -> .)
    null            reduce using rule 119 (GROUP -> .)
    primary         reduce using rule 119 (GROUP -> .)
    references      reduce using rule 119 (GROUP -> .)
    asc             reduce using rule 119 (GROUP -> .)
    desc            reduce using rule 119 (GROUP -> .)

  ! group           [ reduce using rule 119 (GROUP -> .) ]

    GROUP                          shift and go to state 362

state 294

    (96) SELECT -> select LEXP r_from LEXP WHERE GROUP . HAVING COMBINING ORDER LIMIT
    (120) HAVING -> . having LEXP
    (121) HAVING -> .

  ! shift/reduce conflict for having resolved as shift
    having          shift and go to state 230
    r_from          reduce using rule 121 (HAVING -> .)
    coma            reduce using rule 121 (HAVING -> .)
    where           reduce using rule 121 (HAVING -> .)
    union           reduce using rule 121 (HAVING -> .)
    group           reduce using rule 121 (HAVING -> .)
    intersect       reduce using rule 121 (HAVING -> .)
    except          reduce using rule 121 (HAVING -> .)
    order           reduce using rule 121 (HAVING -> .)
    limit           reduce using rule 121 (HAVING -> .)
    offset          reduce using rule 121 (HAVING -> .)
    ptcoma          reduce using rule 121 (HAVING -> .)
    mas             reduce using rule 121 (HAVING -> .)
    menos           reduce using rule 121 (HAVING -> .)
    multiplicacion  reduce using rule 121 (HAVING -> .)
    division        reduce using rule 121 (HAVING -> .)
    modulo          reduce using rule 121 (HAVING -> .)
    elevado         reduce using rule 121 (HAVING -> .)
    and             reduce using rule 121 (HAVING -> .)
    or              reduce using rule 121 (HAVING -> .)
    mayor           reduce using rule 121 (HAVING -> .)
    menor           reduce using rule 121 (HAVING -> .)
    mayor_igual     reduce using rule 121 (HAVING -> .)
    menor_igual     reduce using rule 121 (HAVING -> .)
    igual           reduce using rule 121 (HAVING -> .)
    diferente1      reduce using rule 121 (HAVING -> .)
    diferente2      reduce using rule 121 (HAVING -> .)
    punto           reduce using rule 121 (HAVING -> .)
    between         reduce using rule 121 (HAVING -> .)
    is              reduce using rule 121 (HAVING -> .)
    isnull          reduce using rule 121 (HAVING -> .)
    notnull         reduce using rule 121 (HAVING -> .)
    as              reduce using rule 121 (HAVING -> .)
    cadenaString    reduce using rule 121 (HAVING -> .)
    id              reduce using rule 121 (HAVING -> .)
    cadena          reduce using rule 121 (HAVING -> .)
    in              reduce using rule 121 (HAVING -> .)
    not             reduce using rule 121 (HAVING -> .)
    like            reduce using rule 121 (HAVING -> .)
    parc            reduce using rule 121 (HAVING -> .)
    then            reduce using rule 121 (HAVING -> .)
    end             reduce using rule 121 (HAVING -> .)
    else            reduce using rule 121 (HAVING -> .)
    when            reduce using rule 121 (HAVING -> .)
    constraint      reduce using rule 121 (HAVING -> .)
    unique          reduce using rule 121 (HAVING -> .)
    check           reduce using rule 121 (HAVING -> .)
    default         reduce using rule 121 (HAVING -> .)
    null            reduce using rule 121 (HAVING -> .)
    primary         reduce using rule 121 (HAVING -> .)
    references      reduce using rule 121 (HAVING -> .)
    asc             reduce using rule 121 (HAVING -> .)
    desc            reduce using rule 121 (HAVING -> .)

  ! having          [ reduce using rule 121 (HAVING -> .) ]

    HAVING                         shift and go to state 363

state 295

    (97) SELECT -> select LEXP WHERE GROUP HAVING COMBINING . ORDER LIMIT
    (122) ORDER -> . order by LEXP ORD
    (123) ORDER -> . order by LEXP
    (124) ORDER -> .

  ! shift/reduce conflict for order resolved as shift
    order           shift and go to state 365
    r_from          reduce using rule 124 (ORDER -> .)
    coma            reduce using rule 124 (ORDER -> .)
    where           reduce using rule 124 (ORDER -> .)
    union           reduce using rule 124 (ORDER -> .)
    group           reduce using rule 124 (ORDER -> .)
    having          reduce using rule 124 (ORDER -> .)
    intersect       reduce using rule 124 (ORDER -> .)
    except          reduce using rule 124 (ORDER -> .)
    limit           reduce using rule 124 (ORDER -> .)
    offset          reduce using rule 124 (ORDER -> .)
    ptcoma          reduce using rule 124 (ORDER -> .)
    mas             reduce using rule 124 (ORDER -> .)
    menos           reduce using rule 124 (ORDER -> .)
    multiplicacion  reduce using rule 124 (ORDER -> .)
    division        reduce using rule 124 (ORDER -> .)
    modulo          reduce using rule 124 (ORDER -> .)
    elevado         reduce using rule 124 (ORDER -> .)
    and             reduce using rule 124 (ORDER -> .)
    or              reduce using rule 124 (ORDER -> .)
    mayor           reduce using rule 124 (ORDER -> .)
    menor           reduce using rule 124 (ORDER -> .)
    mayor_igual     reduce using rule 124 (ORDER -> .)
    menor_igual     reduce using rule 124 (ORDER -> .)
    igual           reduce using rule 124 (ORDER -> .)
    diferente1      reduce using rule 124 (ORDER -> .)
    diferente2      reduce using rule 124 (ORDER -> .)
    punto           reduce using rule 124 (ORDER -> .)
    between         reduce using rule 124 (ORDER -> .)
    is              reduce using rule 124 (ORDER -> .)
    isnull          reduce using rule 124 (ORDER -> .)
    notnull         reduce using rule 124 (ORDER -> .)
    as              reduce using rule 124 (ORDER -> .)
    cadenaString    reduce using rule 124 (ORDER -> .)
    id              reduce using rule 124 (ORDER -> .)
    cadena          reduce using rule 124 (ORDER -> .)
    in              reduce using rule 124 (ORDER -> .)
    not             reduce using rule 124 (ORDER -> .)
    like            reduce using rule 124 (ORDER -> .)
    parc            reduce using rule 124 (ORDER -> .)
    then            reduce using rule 124 (ORDER -> .)
    end             reduce using rule 124 (ORDER -> .)
    else            reduce using rule 124 (ORDER -> .)
    when            reduce using rule 124 (ORDER -> .)
    constraint      reduce using rule 124 (ORDER -> .)
    unique          reduce using rule 124 (ORDER -> .)
    check           reduce using rule 124 (ORDER -> .)
    default         reduce using rule 124 (ORDER -> .)
    null            reduce using rule 124 (ORDER -> .)
    primary         reduce using rule 124 (ORDER -> .)
    references      reduce using rule 124 (ORDER -> .)
    asc             reduce using rule 124 (ORDER -> .)
    desc            reduce using rule 124 (ORDER -> .)

  ! order           [ reduce using rule 124 (ORDER -> .) ]

    ORDER                          shift and go to state 364

state 296

    (111) COMBINING -> union . LEXP
    (112) COMBINING -> union . all LEXP
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    all             shift and go to state 367
    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 366
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 297

    (113) COMBINING -> intersect . LEXP
    (114) COMBINING -> intersect . all LEXP
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    all             shift and go to state 369
    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 368
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 298

    (115) COMBINING -> except . LEXP
    (116) COMBINING -> except . all LEXP
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    all             shift and go to state 371
    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 370
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 299

    (120) HAVING -> having LEXP .
    (134) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 120 (HAVING -> having LEXP .)
    where           reduce using rule 120 (HAVING -> having LEXP .)
    union           reduce using rule 120 (HAVING -> having LEXP .)
    group           reduce using rule 120 (HAVING -> having LEXP .)
    having          reduce using rule 120 (HAVING -> having LEXP .)
    intersect       reduce using rule 120 (HAVING -> having LEXP .)
    except          reduce using rule 120 (HAVING -> having LEXP .)
    order           reduce using rule 120 (HAVING -> having LEXP .)
    limit           reduce using rule 120 (HAVING -> having LEXP .)
    offset          reduce using rule 120 (HAVING -> having LEXP .)
    ptcoma          reduce using rule 120 (HAVING -> having LEXP .)
    mas             reduce using rule 120 (HAVING -> having LEXP .)
    menos           reduce using rule 120 (HAVING -> having LEXP .)
    multiplicacion  reduce using rule 120 (HAVING -> having LEXP .)
    division        reduce using rule 120 (HAVING -> having LEXP .)
    modulo          reduce using rule 120 (HAVING -> having LEXP .)
    elevado         reduce using rule 120 (HAVING -> having LEXP .)
    and             reduce using rule 120 (HAVING -> having LEXP .)
    or              reduce using rule 120 (HAVING -> having LEXP .)
    mayor           reduce using rule 120 (HAVING -> having LEXP .)
    menor           reduce using rule 120 (HAVING -> having LEXP .)
    mayor_igual     reduce using rule 120 (HAVING -> having LEXP .)
    menor_igual     reduce using rule 120 (HAVING -> having LEXP .)
    igual           reduce using rule 120 (HAVING -> having LEXP .)
    diferente1      reduce using rule 120 (HAVING -> having LEXP .)
    diferente2      reduce using rule 120 (HAVING -> having LEXP .)
    punto           reduce using rule 120 (HAVING -> having LEXP .)
    between         reduce using rule 120 (HAVING -> having LEXP .)
    is              reduce using rule 120 (HAVING -> having LEXP .)
    isnull          reduce using rule 120 (HAVING -> having LEXP .)
    notnull         reduce using rule 120 (HAVING -> having LEXP .)
    as              reduce using rule 120 (HAVING -> having LEXP .)
    cadenaString    reduce using rule 120 (HAVING -> having LEXP .)
    id              reduce using rule 120 (HAVING -> having LEXP .)
    cadena          reduce using rule 120 (HAVING -> having LEXP .)
    in              reduce using rule 120 (HAVING -> having LEXP .)
    not             reduce using rule 120 (HAVING -> having LEXP .)
    like            reduce using rule 120 (HAVING -> having LEXP .)
    parc            reduce using rule 120 (HAVING -> having LEXP .)
    then            reduce using rule 120 (HAVING -> having LEXP .)
    end             reduce using rule 120 (HAVING -> having LEXP .)
    else            reduce using rule 120 (HAVING -> having LEXP .)
    when            reduce using rule 120 (HAVING -> having LEXP .)
    constraint      reduce using rule 120 (HAVING -> having LEXP .)
    unique          reduce using rule 120 (HAVING -> having LEXP .)
    check           reduce using rule 120 (HAVING -> having LEXP .)
    default         reduce using rule 120 (HAVING -> having LEXP .)
    null            reduce using rule 120 (HAVING -> having LEXP .)
    primary         reduce using rule 120 (HAVING -> having LEXP .)
    references      reduce using rule 120 (HAVING -> having LEXP .)
    asc             reduce using rule 120 (HAVING -> having LEXP .)
    desc            reduce using rule 120 (HAVING -> having LEXP .)
    coma            shift and go to state 84

  ! coma            [ reduce using rule 120 (HAVING -> having LEXP .) ]


state 300

    (118) GROUP -> group by LEXP .
    (134) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 118 (GROUP -> group by LEXP .)
    where           reduce using rule 118 (GROUP -> group by LEXP .)
    union           reduce using rule 118 (GROUP -> group by LEXP .)
    group           reduce using rule 118 (GROUP -> group by LEXP .)
    having          reduce using rule 118 (GROUP -> group by LEXP .)
    intersect       reduce using rule 118 (GROUP -> group by LEXP .)
    except          reduce using rule 118 (GROUP -> group by LEXP .)
    order           reduce using rule 118 (GROUP -> group by LEXP .)
    limit           reduce using rule 118 (GROUP -> group by LEXP .)
    offset          reduce using rule 118 (GROUP -> group by LEXP .)
    ptcoma          reduce using rule 118 (GROUP -> group by LEXP .)
    mas             reduce using rule 118 (GROUP -> group by LEXP .)
    menos           reduce using rule 118 (GROUP -> group by LEXP .)
    multiplicacion  reduce using rule 118 (GROUP -> group by LEXP .)
    division        reduce using rule 118 (GROUP -> group by LEXP .)
    modulo          reduce using rule 118 (GROUP -> group by LEXP .)
    elevado         reduce using rule 118 (GROUP -> group by LEXP .)
    and             reduce using rule 118 (GROUP -> group by LEXP .)
    or              reduce using rule 118 (GROUP -> group by LEXP .)
    mayor           reduce using rule 118 (GROUP -> group by LEXP .)
    menor           reduce using rule 118 (GROUP -> group by LEXP .)
    mayor_igual     reduce using rule 118 (GROUP -> group by LEXP .)
    menor_igual     reduce using rule 118 (GROUP -> group by LEXP .)
    igual           reduce using rule 118 (GROUP -> group by LEXP .)
    diferente1      reduce using rule 118 (GROUP -> group by LEXP .)
    diferente2      reduce using rule 118 (GROUP -> group by LEXP .)
    punto           reduce using rule 118 (GROUP -> group by LEXP .)
    between         reduce using rule 118 (GROUP -> group by LEXP .)
    is              reduce using rule 118 (GROUP -> group by LEXP .)
    isnull          reduce using rule 118 (GROUP -> group by LEXP .)
    notnull         reduce using rule 118 (GROUP -> group by LEXP .)
    as              reduce using rule 118 (GROUP -> group by LEXP .)
    cadenaString    reduce using rule 118 (GROUP -> group by LEXP .)
    id              reduce using rule 118 (GROUP -> group by LEXP .)
    cadena          reduce using rule 118 (GROUP -> group by LEXP .)
    in              reduce using rule 118 (GROUP -> group by LEXP .)
    not             reduce using rule 118 (GROUP -> group by LEXP .)
    like            reduce using rule 118 (GROUP -> group by LEXP .)
    parc            reduce using rule 118 (GROUP -> group by LEXP .)
    then            reduce using rule 118 (GROUP -> group by LEXP .)
    end             reduce using rule 118 (GROUP -> group by LEXP .)
    else            reduce using rule 118 (GROUP -> group by LEXP .)
    when            reduce using rule 118 (GROUP -> group by LEXP .)
    constraint      reduce using rule 118 (GROUP -> group by LEXP .)
    unique          reduce using rule 118 (GROUP -> group by LEXP .)
    check           reduce using rule 118 (GROUP -> group by LEXP .)
    default         reduce using rule 118 (GROUP -> group by LEXP .)
    null            reduce using rule 118 (GROUP -> group by LEXP .)
    primary         reduce using rule 118 (GROUP -> group by LEXP .)
    references      reduce using rule 118 (GROUP -> group by LEXP .)
    asc             reduce using rule 118 (GROUP -> group by LEXP .)
    desc            reduce using rule 118 (GROUP -> group by LEXP .)
    coma            shift and go to state 84

  ! coma            [ reduce using rule 118 (GROUP -> group by LEXP .) ]


state 301

    (132) EXIST -> exist para SELECT . parc

    parc            shift and go to state 372


state 302

    (133) EXIST -> not exist para . SELECT parc
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    select          shift and go to state 16

    SELECT                         shift and go to state 373

state 303

    (224) EXP -> para EXP . parc
    (135) LEXP -> EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

  ! shift/reduce conflict for parc resolved as shift
    parc            shift and go to state 188
    coma            reduce using rule 135 (LEXP -> EXP .)
    mas             shift and go to state 87
    menos           shift and go to state 88
    multiplicacion  shift and go to state 89
    division        shift and go to state 90
    modulo          shift and go to state 91
    elevado         shift and go to state 92
    and             shift and go to state 93
    or              shift and go to state 94
    mayor           shift and go to state 95
    menor           shift and go to state 96
    mayor_igual     shift and go to state 97
    menor_igual     shift and go to state 98
    igual           shift and go to state 99
    diferente1      shift and go to state 100
    diferente2      shift and go to state 101
    punto           shift and go to state 102
    between         shift and go to state 103
    is              shift and go to state 104
    isnull          shift and go to state 106
    notnull         shift and go to state 107
    as              shift and go to state 108
    cadenaString    shift and go to state 109
    id              shift and go to state 110
    cadena          shift and go to state 111
    in              shift and go to state 112
    not             shift and go to state 105
    like            shift and go to state 113

  ! parc            [ reduce using rule 135 (LEXP -> EXP .) ]


state 304

    (219) EXP -> EXP is not distinct r_from . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    EXP                            shift and go to state 374
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 305

    (218) EXP -> EXP is distinct r_from EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

    r_from          reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    coma            reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    where           reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    union           reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    group           reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    having          reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    intersect       reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    except          reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    order           reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    limit           reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    offset          reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    ptcoma          reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    and             reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    or              reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    between         reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    is              reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    isnull          reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    notnull         reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    as              reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    cadenaString    reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    id              reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    cadena          reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    in              reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    not             reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    like            reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    parc            reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    then            reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    end             reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    else            reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    when            reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    constraint      reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    unique          reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    check           reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    default         reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    null            reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    primary         reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    references      reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    asc             reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    desc            reduce using rule 218 (EXP -> EXP is distinct r_from EXP .)
    mas             shift and go to state 87
    menos           shift and go to state 88
    multiplicacion  shift and go to state 89
    division        shift and go to state 90
    modulo          shift and go to state 91
    elevado         shift and go to state 92
    mayor           shift and go to state 95
    menor           shift and go to state 96
    mayor_igual     shift and go to state 97
    menor_igual     shift and go to state 98
    igual           shift and go to state 99
    diferente1      shift and go to state 100
    diferente2      shift and go to state 101
    punto           shift and go to state 102

  ! mas             [ reduce using rule 218 (EXP -> EXP is distinct r_from EXP .) ]
  ! menos           [ reduce using rule 218 (EXP -> EXP is distinct r_from EXP .) ]
  ! multiplicacion  [ reduce using rule 218 (EXP -> EXP is distinct r_from EXP .) ]
  ! division        [ reduce using rule 218 (EXP -> EXP is distinct r_from EXP .) ]
  ! modulo          [ reduce using rule 218 (EXP -> EXP is distinct r_from EXP .) ]
  ! elevado         [ reduce using rule 218 (EXP -> EXP is distinct r_from EXP .) ]
  ! mayor           [ reduce using rule 218 (EXP -> EXP is distinct r_from EXP .) ]
  ! menor           [ reduce using rule 218 (EXP -> EXP is distinct r_from EXP .) ]
  ! mayor_igual     [ reduce using rule 218 (EXP -> EXP is distinct r_from EXP .) ]
  ! menor_igual     [ reduce using rule 218 (EXP -> EXP is distinct r_from EXP .) ]
  ! igual           [ reduce using rule 218 (EXP -> EXP is distinct r_from EXP .) ]
  ! diferente1      [ reduce using rule 218 (EXP -> EXP is distinct r_from EXP .) ]
  ! diferente2      [ reduce using rule 218 (EXP -> EXP is distinct r_from EXP .) ]
  ! punto           [ reduce using rule 218 (EXP -> EXP is distinct r_from EXP .) ]
  ! and             [ shift and go to state 93 ]
  ! or              [ shift and go to state 94 ]
  ! between         [ shift and go to state 103 ]
  ! is              [ shift and go to state 104 ]
  ! isnull          [ shift and go to state 106 ]
  ! notnull         [ shift and go to state 107 ]
  ! as              [ shift and go to state 108 ]
  ! cadenaString    [ shift and go to state 109 ]
  ! id              [ shift and go to state 110 ]
  ! cadena          [ shift and go to state 111 ]
  ! in              [ shift and go to state 112 ]
  ! not             [ shift and go to state 105 ]
  ! like            [ shift and go to state 113 ]


state 306

    (214) EXP -> EXP not in para EXP . parc
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

    parc            shift and go to state 375
    mas             shift and go to state 87
    menos           shift and go to state 88
    multiplicacion  shift and go to state 89
    division        shift and go to state 90
    modulo          shift and go to state 91
    elevado         shift and go to state 92
    and             shift and go to state 93
    or              shift and go to state 94
    mayor           shift and go to state 95
    menor           shift and go to state 96
    mayor_igual     shift and go to state 97
    menor_igual     shift and go to state 98
    igual           shift and go to state 99
    diferente1      shift and go to state 100
    diferente2      shift and go to state 101
    punto           shift and go to state 102
    between         shift and go to state 103
    is              shift and go to state 104
    isnull          shift and go to state 106
    notnull         shift and go to state 107
    as              shift and go to state 108
    cadenaString    shift and go to state 109
    id              shift and go to state 110
    cadena          shift and go to state 111
    in              shift and go to state 112
    not             shift and go to state 105
    like            shift and go to state 113


state 307

    (217) EXP -> EXP not between symetric EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

    r_from          reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    coma            reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    where           reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    union           reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    group           reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    having          reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    intersect       reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    except          reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    order           reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    limit           reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    offset          reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    ptcoma          reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    and             reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    or              reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    between         reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    is              reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    isnull          reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    notnull         reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    as              reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    cadenaString    reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    id              reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    cadena          reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    in              reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    not             reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    like            reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    parc            reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    then            reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    end             reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    else            reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    when            reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    constraint      reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    unique          reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    check           reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    default         reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    null            reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    primary         reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    references      reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    asc             reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    desc            reduce using rule 217 (EXP -> EXP not between symetric EXP .)
    mas             shift and go to state 87
    menos           shift and go to state 88
    multiplicacion  shift and go to state 89
    division        shift and go to state 90
    modulo          shift and go to state 91
    elevado         shift and go to state 92
    mayor           shift and go to state 95
    menor           shift and go to state 96
    mayor_igual     shift and go to state 97
    menor_igual     shift and go to state 98
    igual           shift and go to state 99
    diferente1      shift and go to state 100
    diferente2      shift and go to state 101
    punto           shift and go to state 102

  ! mas             [ reduce using rule 217 (EXP -> EXP not between symetric EXP .) ]
  ! menos           [ reduce using rule 217 (EXP -> EXP not between symetric EXP .) ]
  ! multiplicacion  [ reduce using rule 217 (EXP -> EXP not between symetric EXP .) ]
  ! division        [ reduce using rule 217 (EXP -> EXP not between symetric EXP .) ]
  ! modulo          [ reduce using rule 217 (EXP -> EXP not between symetric EXP .) ]
  ! elevado         [ reduce using rule 217 (EXP -> EXP not between symetric EXP .) ]
  ! mayor           [ reduce using rule 217 (EXP -> EXP not between symetric EXP .) ]
  ! menor           [ reduce using rule 217 (EXP -> EXP not between symetric EXP .) ]
  ! mayor_igual     [ reduce using rule 217 (EXP -> EXP not between symetric EXP .) ]
  ! menor_igual     [ reduce using rule 217 (EXP -> EXP not between symetric EXP .) ]
  ! igual           [ reduce using rule 217 (EXP -> EXP not between symetric EXP .) ]
  ! diferente1      [ reduce using rule 217 (EXP -> EXP not between symetric EXP .) ]
  ! diferente2      [ reduce using rule 217 (EXP -> EXP not between symetric EXP .) ]
  ! punto           [ reduce using rule 217 (EXP -> EXP not between symetric EXP .) ]
  ! and             [ shift and go to state 93 ]
  ! or              [ shift and go to state 94 ]
  ! between         [ shift and go to state 103 ]
  ! is              [ shift and go to state 104 ]
  ! isnull          [ shift and go to state 106 ]
  ! notnull         [ shift and go to state 107 ]
  ! as              [ shift and go to state 108 ]
  ! cadenaString    [ shift and go to state 109 ]
  ! id              [ shift and go to state 110 ]
  ! cadena          [ shift and go to state 111 ]
  ! in              [ shift and go to state 112 ]
  ! not             [ shift and go to state 105 ]
  ! like            [ shift and go to state 113 ]


state 308

    (213) EXP -> EXP in para EXP parc .

    r_from          reduce using rule 213 (EXP -> EXP in para EXP parc .)
    coma            reduce using rule 213 (EXP -> EXP in para EXP parc .)
    where           reduce using rule 213 (EXP -> EXP in para EXP parc .)
    union           reduce using rule 213 (EXP -> EXP in para EXP parc .)
    group           reduce using rule 213 (EXP -> EXP in para EXP parc .)
    having          reduce using rule 213 (EXP -> EXP in para EXP parc .)
    intersect       reduce using rule 213 (EXP -> EXP in para EXP parc .)
    except          reduce using rule 213 (EXP -> EXP in para EXP parc .)
    order           reduce using rule 213 (EXP -> EXP in para EXP parc .)
    limit           reduce using rule 213 (EXP -> EXP in para EXP parc .)
    offset          reduce using rule 213 (EXP -> EXP in para EXP parc .)
    ptcoma          reduce using rule 213 (EXP -> EXP in para EXP parc .)
    mas             reduce using rule 213 (EXP -> EXP in para EXP parc .)
    menos           reduce using rule 213 (EXP -> EXP in para EXP parc .)
    multiplicacion  reduce using rule 213 (EXP -> EXP in para EXP parc .)
    division        reduce using rule 213 (EXP -> EXP in para EXP parc .)
    modulo          reduce using rule 213 (EXP -> EXP in para EXP parc .)
    elevado         reduce using rule 213 (EXP -> EXP in para EXP parc .)
    and             reduce using rule 213 (EXP -> EXP in para EXP parc .)
    or              reduce using rule 213 (EXP -> EXP in para EXP parc .)
    mayor           reduce using rule 213 (EXP -> EXP in para EXP parc .)
    menor           reduce using rule 213 (EXP -> EXP in para EXP parc .)
    mayor_igual     reduce using rule 213 (EXP -> EXP in para EXP parc .)
    menor_igual     reduce using rule 213 (EXP -> EXP in para EXP parc .)
    igual           reduce using rule 213 (EXP -> EXP in para EXP parc .)
    diferente1      reduce using rule 213 (EXP -> EXP in para EXP parc .)
    diferente2      reduce using rule 213 (EXP -> EXP in para EXP parc .)
    punto           reduce using rule 213 (EXP -> EXP in para EXP parc .)
    between         reduce using rule 213 (EXP -> EXP in para EXP parc .)
    is              reduce using rule 213 (EXP -> EXP in para EXP parc .)
    isnull          reduce using rule 213 (EXP -> EXP in para EXP parc .)
    notnull         reduce using rule 213 (EXP -> EXP in para EXP parc .)
    as              reduce using rule 213 (EXP -> EXP in para EXP parc .)
    cadenaString    reduce using rule 213 (EXP -> EXP in para EXP parc .)
    id              reduce using rule 213 (EXP -> EXP in para EXP parc .)
    cadena          reduce using rule 213 (EXP -> EXP in para EXP parc .)
    in              reduce using rule 213 (EXP -> EXP in para EXP parc .)
    not             reduce using rule 213 (EXP -> EXP in para EXP parc .)
    like            reduce using rule 213 (EXP -> EXP in para EXP parc .)
    parc            reduce using rule 213 (EXP -> EXP in para EXP parc .)
    then            reduce using rule 213 (EXP -> EXP in para EXP parc .)
    end             reduce using rule 213 (EXP -> EXP in para EXP parc .)
    else            reduce using rule 213 (EXP -> EXP in para EXP parc .)
    when            reduce using rule 213 (EXP -> EXP in para EXP parc .)
    constraint      reduce using rule 213 (EXP -> EXP in para EXP parc .)
    unique          reduce using rule 213 (EXP -> EXP in para EXP parc .)
    check           reduce using rule 213 (EXP -> EXP in para EXP parc .)
    default         reduce using rule 213 (EXP -> EXP in para EXP parc .)
    null            reduce using rule 213 (EXP -> EXP in para EXP parc .)
    primary         reduce using rule 213 (EXP -> EXP in para EXP parc .)
    references      reduce using rule 213 (EXP -> EXP in para EXP parc .)
    asc             reduce using rule 213 (EXP -> EXP in para EXP parc .)
    desc            reduce using rule 213 (EXP -> EXP in para EXP parc .)


state 309

    (230) EXP -> extract para FIELDS r_from timestamp . cadena parc

    cadena          shift and go to state 376


state 310

    (76) COLDEF -> id id .
    (77) COLDEF -> id id . LOPCOLUMN
    (78) LOPCOLUMN -> . LOPCOLUMN OPCOLUMN
    (79) LOPCOLUMN -> . OPCOLUMN
    (80) OPCOLUMN -> . constraint id unique
    (81) OPCOLUMN -> . unique
    (82) OPCOLUMN -> . constraint id check para EXP parc
    (83) OPCOLUMN -> . check para EXP parc
    (84) OPCOLUMN -> . default EXP
    (85) OPCOLUMN -> . not null
    (86) OPCOLUMN -> . null
    (87) OPCOLUMN -> . primary key
    (88) OPCOLUMN -> . references id

    parc            reduce using rule 76 (COLDEF -> id id .)
    coma            reduce using rule 76 (COLDEF -> id id .)
    constraint      shift and go to state 379
    unique          shift and go to state 380
    check           shift and go to state 381
    default         shift and go to state 382
    not             shift and go to state 383
    null            shift and go to state 384
    primary         shift and go to state 385
    references      shift and go to state 386

    LOPCOLUMN                      shift and go to state 377
    OPCOLUMN                       shift and go to state 378

state 311

    (74) COLDEF -> id TIPO .
    (75) COLDEF -> id TIPO . LOPCOLUMN
    (78) LOPCOLUMN -> . LOPCOLUMN OPCOLUMN
    (79) LOPCOLUMN -> . OPCOLUMN
    (80) OPCOLUMN -> . constraint id unique
    (81) OPCOLUMN -> . unique
    (82) OPCOLUMN -> . constraint id check para EXP parc
    (83) OPCOLUMN -> . check para EXP parc
    (84) OPCOLUMN -> . default EXP
    (85) OPCOLUMN -> . not null
    (86) OPCOLUMN -> . null
    (87) OPCOLUMN -> . primary key
    (88) OPCOLUMN -> . references id

    parc            reduce using rule 74 (COLDEF -> id TIPO .)
    coma            reduce using rule 74 (COLDEF -> id TIPO .)
    constraint      shift and go to state 379
    unique          shift and go to state 380
    check           shift and go to state 381
    default         shift and go to state 382
    not             shift and go to state 383
    null            shift and go to state 384
    primary         shift and go to state 385
    references      shift and go to state 386

    LOPCOLUMN                      shift and go to state 387
    OPCOLUMN                       shift and go to state 378

state 312

    (136) TIPO -> interval . cadena
    (146) TIPO -> interval . para int parc
    (154) TIPO -> interval . para int parc cadena
    (165) TIPO -> interval .

    cadena          shift and go to state 388
    para            shift and go to state 389
    constraint      reduce using rule 165 (TIPO -> interval .)
    unique          reduce using rule 165 (TIPO -> interval .)
    check           reduce using rule 165 (TIPO -> interval .)
    default         reduce using rule 165 (TIPO -> interval .)
    not             reduce using rule 165 (TIPO -> interval .)
    null            reduce using rule 165 (TIPO -> interval .)
    primary         reduce using rule 165 (TIPO -> interval .)
    references      reduce using rule 165 (TIPO -> interval .)
    parc            reduce using rule 165 (TIPO -> interval .)
    coma            reduce using rule 165 (TIPO -> interval .)
    ptcoma          reduce using rule 165 (TIPO -> interval .)


state 313

    (137) TIPO -> decimal . para int coma int parc
    (138) TIPO -> decimal . para int parc
    (139) TIPO -> decimal .

    para            shift and go to state 390
    constraint      reduce using rule 139 (TIPO -> decimal .)
    unique          reduce using rule 139 (TIPO -> decimal .)
    check           reduce using rule 139 (TIPO -> decimal .)
    default         reduce using rule 139 (TIPO -> decimal .)
    not             reduce using rule 139 (TIPO -> decimal .)
    null            reduce using rule 139 (TIPO -> decimal .)
    primary         reduce using rule 139 (TIPO -> decimal .)
    references      reduce using rule 139 (TIPO -> decimal .)
    parc            reduce using rule 139 (TIPO -> decimal .)
    coma            reduce using rule 139 (TIPO -> decimal .)
    ptcoma          reduce using rule 139 (TIPO -> decimal .)


state 314

    (140) TIPO -> numeric . para int coma int parc
    (141) TIPO -> numeric . para int parc
    (142) TIPO -> numeric .

    para            shift and go to state 391
    constraint      reduce using rule 142 (TIPO -> numeric .)
    unique          reduce using rule 142 (TIPO -> numeric .)
    check           reduce using rule 142 (TIPO -> numeric .)
    default         reduce using rule 142 (TIPO -> numeric .)
    not             reduce using rule 142 (TIPO -> numeric .)
    null            reduce using rule 142 (TIPO -> numeric .)
    primary         reduce using rule 142 (TIPO -> numeric .)
    references      reduce using rule 142 (TIPO -> numeric .)
    parc            reduce using rule 142 (TIPO -> numeric .)
    coma            reduce using rule 142 (TIPO -> numeric .)
    ptcoma          reduce using rule 142 (TIPO -> numeric .)


state 315

    (143) TIPO -> varchar . para int parc

    para            shift and go to state 392


state 316

    (144) TIPO -> timestamp . para int parc
    (150) TIPO -> timestamp . para int parc without time zone
    (151) TIPO -> timestamp . para int parc with time zone
    (162) TIPO -> timestamp .
    (167) TIPO -> timestamp . without time zone
    (168) TIPO -> timestamp . with time zone

    para            shift and go to state 393
    constraint      reduce using rule 162 (TIPO -> timestamp .)
    unique          reduce using rule 162 (TIPO -> timestamp .)
    check           reduce using rule 162 (TIPO -> timestamp .)
    default         reduce using rule 162 (TIPO -> timestamp .)
    not             reduce using rule 162 (TIPO -> timestamp .)
    null            reduce using rule 162 (TIPO -> timestamp .)
    primary         reduce using rule 162 (TIPO -> timestamp .)
    references      reduce using rule 162 (TIPO -> timestamp .)
    parc            reduce using rule 162 (TIPO -> timestamp .)
    coma            reduce using rule 162 (TIPO -> timestamp .)
    ptcoma          reduce using rule 162 (TIPO -> timestamp .)
    without         shift and go to state 394
    with            shift and go to state 395


state 317

    (145) TIPO -> character . para int parc
    (149) TIPO -> character . varying para int parc

    para            shift and go to state 396
    varying         shift and go to state 397


state 318

    (147) TIPO -> char . para int parc

    para            shift and go to state 398


state 319

    (148) TIPO -> time . para int parc
    (152) TIPO -> time . para int parc without time zone
    (153) TIPO -> time . para int parc with time zone
    (164) TIPO -> time .
    (169) TIPO -> time . without time zone
    (170) TIPO -> time . with time zone

    para            shift and go to state 399
    constraint      reduce using rule 164 (TIPO -> time .)
    unique          reduce using rule 164 (TIPO -> time .)
    check           reduce using rule 164 (TIPO -> time .)
    default         reduce using rule 164 (TIPO -> time .)
    not             reduce using rule 164 (TIPO -> time .)
    null            reduce using rule 164 (TIPO -> time .)
    primary         reduce using rule 164 (TIPO -> time .)
    references      reduce using rule 164 (TIPO -> time .)
    parc            reduce using rule 164 (TIPO -> time .)
    coma            reduce using rule 164 (TIPO -> time .)
    ptcoma          reduce using rule 164 (TIPO -> time .)
    without         shift and go to state 400
    with            shift and go to state 401


state 320

    (155) TIPO -> smallint .

    constraint      reduce using rule 155 (TIPO -> smallint .)
    unique          reduce using rule 155 (TIPO -> smallint .)
    check           reduce using rule 155 (TIPO -> smallint .)
    default         reduce using rule 155 (TIPO -> smallint .)
    not             reduce using rule 155 (TIPO -> smallint .)
    null            reduce using rule 155 (TIPO -> smallint .)
    primary         reduce using rule 155 (TIPO -> smallint .)
    references      reduce using rule 155 (TIPO -> smallint .)
    parc            reduce using rule 155 (TIPO -> smallint .)
    coma            reduce using rule 155 (TIPO -> smallint .)
    ptcoma          reduce using rule 155 (TIPO -> smallint .)


state 321

    (156) TIPO -> integer .

    constraint      reduce using rule 156 (TIPO -> integer .)
    unique          reduce using rule 156 (TIPO -> integer .)
    check           reduce using rule 156 (TIPO -> integer .)
    default         reduce using rule 156 (TIPO -> integer .)
    not             reduce using rule 156 (TIPO -> integer .)
    null            reduce using rule 156 (TIPO -> integer .)
    primary         reduce using rule 156 (TIPO -> integer .)
    references      reduce using rule 156 (TIPO -> integer .)
    parc            reduce using rule 156 (TIPO -> integer .)
    coma            reduce using rule 156 (TIPO -> integer .)
    ptcoma          reduce using rule 156 (TIPO -> integer .)


state 322

    (157) TIPO -> bigint .

    constraint      reduce using rule 157 (TIPO -> bigint .)
    unique          reduce using rule 157 (TIPO -> bigint .)
    check           reduce using rule 157 (TIPO -> bigint .)
    default         reduce using rule 157 (TIPO -> bigint .)
    not             reduce using rule 157 (TIPO -> bigint .)
    null            reduce using rule 157 (TIPO -> bigint .)
    primary         reduce using rule 157 (TIPO -> bigint .)
    references      reduce using rule 157 (TIPO -> bigint .)
    parc            reduce using rule 157 (TIPO -> bigint .)
    coma            reduce using rule 157 (TIPO -> bigint .)
    ptcoma          reduce using rule 157 (TIPO -> bigint .)


state 323

    (158) TIPO -> real .

    constraint      reduce using rule 158 (TIPO -> real .)
    unique          reduce using rule 158 (TIPO -> real .)
    check           reduce using rule 158 (TIPO -> real .)
    default         reduce using rule 158 (TIPO -> real .)
    not             reduce using rule 158 (TIPO -> real .)
    null            reduce using rule 158 (TIPO -> real .)
    primary         reduce using rule 158 (TIPO -> real .)
    references      reduce using rule 158 (TIPO -> real .)
    parc            reduce using rule 158 (TIPO -> real .)
    coma            reduce using rule 158 (TIPO -> real .)
    ptcoma          reduce using rule 158 (TIPO -> real .)


state 324

    (159) TIPO -> double . precision

    precision       shift and go to state 402


state 325

    (160) TIPO -> money .

    constraint      reduce using rule 160 (TIPO -> money .)
    unique          reduce using rule 160 (TIPO -> money .)
    check           reduce using rule 160 (TIPO -> money .)
    default         reduce using rule 160 (TIPO -> money .)
    not             reduce using rule 160 (TIPO -> money .)
    null            reduce using rule 160 (TIPO -> money .)
    primary         reduce using rule 160 (TIPO -> money .)
    references      reduce using rule 160 (TIPO -> money .)
    parc            reduce using rule 160 (TIPO -> money .)
    coma            reduce using rule 160 (TIPO -> money .)
    ptcoma          reduce using rule 160 (TIPO -> money .)


state 326

    (161) TIPO -> text .

    constraint      reduce using rule 161 (TIPO -> text .)
    unique          reduce using rule 161 (TIPO -> text .)
    check           reduce using rule 161 (TIPO -> text .)
    default         reduce using rule 161 (TIPO -> text .)
    not             reduce using rule 161 (TIPO -> text .)
    null            reduce using rule 161 (TIPO -> text .)
    primary         reduce using rule 161 (TIPO -> text .)
    references      reduce using rule 161 (TIPO -> text .)
    parc            reduce using rule 161 (TIPO -> text .)
    coma            reduce using rule 161 (TIPO -> text .)
    ptcoma          reduce using rule 161 (TIPO -> text .)


state 327

    (163) TIPO -> date .

    constraint      reduce using rule 163 (TIPO -> date .)
    unique          reduce using rule 163 (TIPO -> date .)
    check           reduce using rule 163 (TIPO -> date .)
    default         reduce using rule 163 (TIPO -> date .)
    not             reduce using rule 163 (TIPO -> date .)
    null            reduce using rule 163 (TIPO -> date .)
    primary         reduce using rule 163 (TIPO -> date .)
    references      reduce using rule 163 (TIPO -> date .)
    parc            reduce using rule 163 (TIPO -> date .)
    coma            reduce using rule 163 (TIPO -> date .)
    ptcoma          reduce using rule 163 (TIPO -> date .)


state 328

    (166) TIPO -> boolean .

    constraint      reduce using rule 166 (TIPO -> boolean .)
    unique          reduce using rule 166 (TIPO -> boolean .)
    check           reduce using rule 166 (TIPO -> boolean .)
    default         reduce using rule 166 (TIPO -> boolean .)
    not             reduce using rule 166 (TIPO -> boolean .)
    null            reduce using rule 166 (TIPO -> boolean .)
    primary         reduce using rule 166 (TIPO -> boolean .)
    references      reduce using rule 166 (TIPO -> boolean .)
    parc            reduce using rule 166 (TIPO -> boolean .)
    coma            reduce using rule 166 (TIPO -> boolean .)
    ptcoma          reduce using rule 166 (TIPO -> boolean .)


state 329

    (68) CREATETABLE -> create table id para LDEF parc . ptcoma
    (69) CREATETABLE -> create table id para LDEF parc . HERENCIA ptcoma
    (93) HERENCIA -> . inherits para LEXP parc

    ptcoma          shift and go to state 403
    inherits        shift and go to state 405

    HERENCIA                       shift and go to state 404

state 330

    (70) LDEF -> LDEF coma . COLDEF
    (72) COLDEF -> . OPCONST
    (73) COLDEF -> . constraint id OPCONST
    (74) COLDEF -> . id TIPO
    (75) COLDEF -> . id TIPO LOPCOLUMN
    (76) COLDEF -> . id id
    (77) COLDEF -> . id id LOPCOLUMN
    (89) OPCONST -> . primary key para LEXP parc
    (90) OPCONST -> . foreign key para LEXP parc references id para LEXP parc
    (91) OPCONST -> . unique para LEXP parc
    (92) OPCONST -> . check para LEXP parc

    constraint      shift and go to state 257
    id              shift and go to state 253
    primary         shift and go to state 258
    foreign         shift and go to state 259
    unique          shift and go to state 260
    check           shift and go to state 261

    COLDEF                         shift and go to state 406
    OPCONST                        shift and go to state 256

state 331

    (73) COLDEF -> constraint id . OPCONST
    (89) OPCONST -> . primary key para LEXP parc
    (90) OPCONST -> . foreign key para LEXP parc references id para LEXP parc
    (91) OPCONST -> . unique para LEXP parc
    (92) OPCONST -> . check para LEXP parc

    primary         shift and go to state 258
    foreign         shift and go to state 259
    unique          shift and go to state 260
    check           shift and go to state 261

    OPCONST                        shift and go to state 407

state 332

    (89) OPCONST -> primary key . para LEXP parc

    para            shift and go to state 408


state 333

    (90) OPCONST -> foreign key . para LEXP parc references id para LEXP parc

    para            shift and go to state 409


state 334

    (91) OPCONST -> unique para . LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 410
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 335

    (92) OPCONST -> check para . LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 411
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 336

    (94) CREATETYPE -> create type id as enum para . LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 412
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 337

    (51) CREATEDB -> create RD if not exist id .
    (52) CREATEDB -> create RD if not exist id . OPCCDB
    (55) OPCCDB -> . PROPIETARIO
    (56) OPCCDB -> . MODO
    (57) OPCCDB -> . PROPIETARIO MODO
    (60) PROPIETARIO -> . owner igual id
    (61) PROPIETARIO -> . owner id
    (62) PROPIETARIO -> . owner igual cadena
    (63) PROPIETARIO -> . owner cadena
    (64) PROPIETARIO -> . owner igual cadenaString
    (65) PROPIETARIO -> . owner cadenaString
    (66) MODO -> . mode igual int
    (67) MODO -> . mode int

    ptcoma          reduce using rule 51 (CREATEDB -> create RD if not exist id .)
    owner           shift and go to state 205
    mode            shift and go to state 206

    OPCCDB                         shift and go to state 413
    PROPIETARIO                    shift and go to state 203
    MODO                           shift and go to state 204

state 338

    (60) PROPIETARIO -> owner igual id .

    mode            reduce using rule 60 (PROPIETARIO -> owner igual id .)
    ptcoma          reduce using rule 60 (PROPIETARIO -> owner igual id .)


state 339

    (62) PROPIETARIO -> owner igual cadena .

    mode            reduce using rule 62 (PROPIETARIO -> owner igual cadena .)
    ptcoma          reduce using rule 62 (PROPIETARIO -> owner igual cadena .)


state 340

    (64) PROPIETARIO -> owner igual cadenaString .

    mode            reduce using rule 64 (PROPIETARIO -> owner igual cadenaString .)
    ptcoma          reduce using rule 64 (PROPIETARIO -> owner igual cadenaString .)


state 341

    (66) MODO -> mode igual int .

    ptcoma          reduce using rule 66 (MODO -> mode igual int .)


state 342

    (129) LCAMPOS -> id igual EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

    where           reduce using rule 129 (LCAMPOS -> id igual EXP .)
    id              reduce using rule 129 (LCAMPOS -> id igual EXP .)
    mas             shift and go to state 87
    menos           shift and go to state 88
    multiplicacion  shift and go to state 89
    division        shift and go to state 90
    modulo          shift and go to state 91
    elevado         shift and go to state 92
    and             shift and go to state 93
    or              shift and go to state 94
    mayor           shift and go to state 95
    menor           shift and go to state 96
    mayor_igual     shift and go to state 97
    menor_igual     shift and go to state 98
    igual           shift and go to state 99
    diferente1      shift and go to state 100
    diferente2      shift and go to state 101
    punto           shift and go to state 102
    between         shift and go to state 103
    is              shift and go to state 104
    isnull          shift and go to state 106
    notnull         shift and go to state 107
    as              shift and go to state 108
    cadenaString    shift and go to state 109
    cadena          shift and go to state 111
    in              shift and go to state 112
    not             shift and go to state 105
    like            shift and go to state 113

  ! id              [ shift and go to state 110 ]


state 343

    (128) LCAMPOS -> LCAMPOS id igual . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    EXP                            shift and go to state 414
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 344

    (127) UPDATE -> update id set LCAMPOS where LEXP .
    (134) LEXP -> LEXP . coma EXP

    ptcoma          reduce using rule 127 (UPDATE -> update id set LCAMPOS where LEXP .)
    coma            shift and go to state 84


state 345

    (29) RO -> rename to id .

    ptcoma          reduce using rule 29 (RO -> rename to id .)


state 346

    (30) RO -> owner to id .

    ptcoma          reduce using rule 30 (RO -> owner to id .)


state 347

    (34) OP -> alter column id . set not null
    (35) OP -> alter column id . set null
    (41) alc -> alter column id . type TIPO

    set             shift and go to state 415
    type            shift and go to state 416


state 348

    (45) ADD -> column id . TIPO
    (136) TIPO -> . interval cadena
    (137) TIPO -> . decimal para int coma int parc
    (138) TIPO -> . decimal para int parc
    (139) TIPO -> . decimal
    (140) TIPO -> . numeric para int coma int parc
    (141) TIPO -> . numeric para int parc
    (142) TIPO -> . numeric
    (143) TIPO -> . varchar para int parc
    (144) TIPO -> . timestamp para int parc
    (145) TIPO -> . character para int parc
    (146) TIPO -> . interval para int parc
    (147) TIPO -> . char para int parc
    (148) TIPO -> . time para int parc
    (149) TIPO -> . character varying para int parc
    (150) TIPO -> . timestamp para int parc without time zone
    (151) TIPO -> . timestamp para int parc with time zone
    (152) TIPO -> . time para int parc without time zone
    (153) TIPO -> . time para int parc with time zone
    (154) TIPO -> . interval para int parc cadena
    (155) TIPO -> . smallint
    (156) TIPO -> . integer
    (157) TIPO -> . bigint
    (158) TIPO -> . real
    (159) TIPO -> . double precision
    (160) TIPO -> . money
    (161) TIPO -> . text
    (162) TIPO -> . timestamp
    (163) TIPO -> . date
    (164) TIPO -> . time
    (165) TIPO -> . interval
    (166) TIPO -> . boolean
    (167) TIPO -> . timestamp without time zone
    (168) TIPO -> . timestamp with time zone
    (169) TIPO -> . time without time zone
    (170) TIPO -> . time with time zone

    interval        shift and go to state 312
    decimal         shift and go to state 313
    numeric         shift and go to state 314
    varchar         shift and go to state 315
    timestamp       shift and go to state 316
    character       shift and go to state 317
    char            shift and go to state 318
    time            shift and go to state 319
    smallint        shift and go to state 320
    integer         shift and go to state 321
    bigint          shift and go to state 322
    real            shift and go to state 323
    double          shift and go to state 324
    money           shift and go to state 325
    text            shift and go to state 326
    date            shift and go to state 327
    boolean         shift and go to state 328

    TIPO                           shift and go to state 417

state 349

    (46) ADD -> check para . LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 418
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 350

    (47) ADD -> constraint id . unique para id parc
    (49) ADD -> constraint id . foreign key para LEXP parc references id para LEXP parc

    unique          shift and go to state 419
    foreign         shift and go to state 420


state 351

    (48) ADD -> foreign key . para LEXP parc references id para LEXP parc

    para            shift and go to state 421


state 352

    (43) ALTERDROP -> column . LEXP
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 354
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 353

    (33) OP -> drop column ALTERDROP .

    ptcoma          reduce using rule 33 (OP -> drop column ALTERDROP .)


state 354

    (43) ALTERDROP -> column LEXP .
    (134) LEXP -> LEXP . coma EXP

    ptcoma          reduce using rule 43 (ALTERDROP -> column LEXP .)
    coma            shift and go to state 84


state 355

    (42) ALTERDROP -> constraint id .

    ptcoma          reduce using rule 42 (ALTERDROP -> constraint id .)


state 356

    (44) ALTERDROP -> check id .

    ptcoma          reduce using rule 44 (ALTERDROP -> check id .)


state 357

    (39) listaalc -> listaalc coma alc .

    coma            reduce using rule 39 (listaalc -> listaalc coma alc .)
    ptcoma          reduce using rule 39 (listaalc -> listaalc coma alc .)


state 358

    (41) alc -> alter . column id type TIPO

    column          shift and go to state 422


state 359

    (38) OP -> rename column id . to id

    to              shift and go to state 423


state 360

    (22) INSERT -> insert into id values para LEXP . parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 424
    coma            shift and go to state 84


state 361

    (23) INSERT -> insert into id para LEXP parc . values para LEXP parc

    values          shift and go to state 425


state 362

    (95) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP . HAVING COMBINING ORDER LIMIT
    (120) HAVING -> . having LEXP
    (121) HAVING -> .

  ! shift/reduce conflict for having resolved as shift
    having          shift and go to state 230
    r_from          reduce using rule 121 (HAVING -> .)
    coma            reduce using rule 121 (HAVING -> .)
    where           reduce using rule 121 (HAVING -> .)
    union           reduce using rule 121 (HAVING -> .)
    group           reduce using rule 121 (HAVING -> .)
    intersect       reduce using rule 121 (HAVING -> .)
    except          reduce using rule 121 (HAVING -> .)
    order           reduce using rule 121 (HAVING -> .)
    limit           reduce using rule 121 (HAVING -> .)
    offset          reduce using rule 121 (HAVING -> .)
    ptcoma          reduce using rule 121 (HAVING -> .)
    mas             reduce using rule 121 (HAVING -> .)
    menos           reduce using rule 121 (HAVING -> .)
    multiplicacion  reduce using rule 121 (HAVING -> .)
    division        reduce using rule 121 (HAVING -> .)
    modulo          reduce using rule 121 (HAVING -> .)
    elevado         reduce using rule 121 (HAVING -> .)
    and             reduce using rule 121 (HAVING -> .)
    or              reduce using rule 121 (HAVING -> .)
    mayor           reduce using rule 121 (HAVING -> .)
    menor           reduce using rule 121 (HAVING -> .)
    mayor_igual     reduce using rule 121 (HAVING -> .)
    menor_igual     reduce using rule 121 (HAVING -> .)
    igual           reduce using rule 121 (HAVING -> .)
    diferente1      reduce using rule 121 (HAVING -> .)
    diferente2      reduce using rule 121 (HAVING -> .)
    punto           reduce using rule 121 (HAVING -> .)
    between         reduce using rule 121 (HAVING -> .)
    is              reduce using rule 121 (HAVING -> .)
    isnull          reduce using rule 121 (HAVING -> .)
    notnull         reduce using rule 121 (HAVING -> .)
    as              reduce using rule 121 (HAVING -> .)
    cadenaString    reduce using rule 121 (HAVING -> .)
    id              reduce using rule 121 (HAVING -> .)
    cadena          reduce using rule 121 (HAVING -> .)
    in              reduce using rule 121 (HAVING -> .)
    not             reduce using rule 121 (HAVING -> .)
    like            reduce using rule 121 (HAVING -> .)
    parc            reduce using rule 121 (HAVING -> .)
    then            reduce using rule 121 (HAVING -> .)
    end             reduce using rule 121 (HAVING -> .)
    else            reduce using rule 121 (HAVING -> .)
    when            reduce using rule 121 (HAVING -> .)
    constraint      reduce using rule 121 (HAVING -> .)
    unique          reduce using rule 121 (HAVING -> .)
    check           reduce using rule 121 (HAVING -> .)
    default         reduce using rule 121 (HAVING -> .)
    null            reduce using rule 121 (HAVING -> .)
    primary         reduce using rule 121 (HAVING -> .)
    references      reduce using rule 121 (HAVING -> .)
    asc             reduce using rule 121 (HAVING -> .)
    desc            reduce using rule 121 (HAVING -> .)

  ! having          [ reduce using rule 121 (HAVING -> .) ]

    HAVING                         shift and go to state 426

state 363

    (96) SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING . COMBINING ORDER LIMIT
    (111) COMBINING -> . union LEXP
    (112) COMBINING -> . union all LEXP
    (113) COMBINING -> . intersect LEXP
    (114) COMBINING -> . intersect all LEXP
    (115) COMBINING -> . except LEXP
    (116) COMBINING -> . except all LEXP
    (117) COMBINING -> .

  ! shift/reduce conflict for union resolved as shift
  ! shift/reduce conflict for intersect resolved as shift
  ! shift/reduce conflict for except resolved as shift
    union           shift and go to state 296
    intersect       shift and go to state 297
    except          shift and go to state 298
    r_from          reduce using rule 117 (COMBINING -> .)
    coma            reduce using rule 117 (COMBINING -> .)
    where           reduce using rule 117 (COMBINING -> .)
    group           reduce using rule 117 (COMBINING -> .)
    having          reduce using rule 117 (COMBINING -> .)
    order           reduce using rule 117 (COMBINING -> .)
    limit           reduce using rule 117 (COMBINING -> .)
    offset          reduce using rule 117 (COMBINING -> .)
    ptcoma          reduce using rule 117 (COMBINING -> .)
    mas             reduce using rule 117 (COMBINING -> .)
    menos           reduce using rule 117 (COMBINING -> .)
    multiplicacion  reduce using rule 117 (COMBINING -> .)
    division        reduce using rule 117 (COMBINING -> .)
    modulo          reduce using rule 117 (COMBINING -> .)
    elevado         reduce using rule 117 (COMBINING -> .)
    and             reduce using rule 117 (COMBINING -> .)
    or              reduce using rule 117 (COMBINING -> .)
    mayor           reduce using rule 117 (COMBINING -> .)
    menor           reduce using rule 117 (COMBINING -> .)
    mayor_igual     reduce using rule 117 (COMBINING -> .)
    menor_igual     reduce using rule 117 (COMBINING -> .)
    igual           reduce using rule 117 (COMBINING -> .)
    diferente1      reduce using rule 117 (COMBINING -> .)
    diferente2      reduce using rule 117 (COMBINING -> .)
    punto           reduce using rule 117 (COMBINING -> .)
    between         reduce using rule 117 (COMBINING -> .)
    is              reduce using rule 117 (COMBINING -> .)
    isnull          reduce using rule 117 (COMBINING -> .)
    notnull         reduce using rule 117 (COMBINING -> .)
    as              reduce using rule 117 (COMBINING -> .)
    cadenaString    reduce using rule 117 (COMBINING -> .)
    id              reduce using rule 117 (COMBINING -> .)
    cadena          reduce using rule 117 (COMBINING -> .)
    in              reduce using rule 117 (COMBINING -> .)
    not             reduce using rule 117 (COMBINING -> .)
    like            reduce using rule 117 (COMBINING -> .)
    parc            reduce using rule 117 (COMBINING -> .)
    then            reduce using rule 117 (COMBINING -> .)
    end             reduce using rule 117 (COMBINING -> .)
    else            reduce using rule 117 (COMBINING -> .)
    when            reduce using rule 117 (COMBINING -> .)
    constraint      reduce using rule 117 (COMBINING -> .)
    unique          reduce using rule 117 (COMBINING -> .)
    check           reduce using rule 117 (COMBINING -> .)
    default         reduce using rule 117 (COMBINING -> .)
    null            reduce using rule 117 (COMBINING -> .)
    primary         reduce using rule 117 (COMBINING -> .)
    references      reduce using rule 117 (COMBINING -> .)
    asc             reduce using rule 117 (COMBINING -> .)
    desc            reduce using rule 117 (COMBINING -> .)

  ! union           [ reduce using rule 117 (COMBINING -> .) ]
  ! intersect       [ reduce using rule 117 (COMBINING -> .) ]
  ! except          [ reduce using rule 117 (COMBINING -> .) ]

    COMBINING                      shift and go to state 427

state 364

    (97) SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER . LIMIT
    (98) LIMIT -> . limit int
    (99) LIMIT -> . limit all
    (100) LIMIT -> . offset int
    (101) LIMIT -> . limit int offset int
    (102) LIMIT -> . offset int limit int
    (103) LIMIT -> . limit all offset int
    (104) LIMIT -> . offset int limit all
    (105) LIMIT -> .

  ! shift/reduce conflict for limit resolved as shift
  ! shift/reduce conflict for offset resolved as shift
    limit           shift and go to state 429
    offset          shift and go to state 430
    ptcoma          reduce using rule 105 (LIMIT -> .)
    r_from          reduce using rule 105 (LIMIT -> .)
    coma            reduce using rule 105 (LIMIT -> .)
    where           reduce using rule 105 (LIMIT -> .)
    union           reduce using rule 105 (LIMIT -> .)
    group           reduce using rule 105 (LIMIT -> .)
    having          reduce using rule 105 (LIMIT -> .)
    intersect       reduce using rule 105 (LIMIT -> .)
    except          reduce using rule 105 (LIMIT -> .)
    order           reduce using rule 105 (LIMIT -> .)
    mas             reduce using rule 105 (LIMIT -> .)
    menos           reduce using rule 105 (LIMIT -> .)
    multiplicacion  reduce using rule 105 (LIMIT -> .)
    division        reduce using rule 105 (LIMIT -> .)
    modulo          reduce using rule 105 (LIMIT -> .)
    elevado         reduce using rule 105 (LIMIT -> .)
    and             reduce using rule 105 (LIMIT -> .)
    or              reduce using rule 105 (LIMIT -> .)
    mayor           reduce using rule 105 (LIMIT -> .)
    menor           reduce using rule 105 (LIMIT -> .)
    mayor_igual     reduce using rule 105 (LIMIT -> .)
    menor_igual     reduce using rule 105 (LIMIT -> .)
    igual           reduce using rule 105 (LIMIT -> .)
    diferente1      reduce using rule 105 (LIMIT -> .)
    diferente2      reduce using rule 105 (LIMIT -> .)
    punto           reduce using rule 105 (LIMIT -> .)
    between         reduce using rule 105 (LIMIT -> .)
    is              reduce using rule 105 (LIMIT -> .)
    isnull          reduce using rule 105 (LIMIT -> .)
    notnull         reduce using rule 105 (LIMIT -> .)
    as              reduce using rule 105 (LIMIT -> .)
    cadenaString    reduce using rule 105 (LIMIT -> .)
    id              reduce using rule 105 (LIMIT -> .)
    cadena          reduce using rule 105 (LIMIT -> .)
    in              reduce using rule 105 (LIMIT -> .)
    not             reduce using rule 105 (LIMIT -> .)
    like            reduce using rule 105 (LIMIT -> .)
    parc            reduce using rule 105 (LIMIT -> .)
    then            reduce using rule 105 (LIMIT -> .)
    end             reduce using rule 105 (LIMIT -> .)
    else            reduce using rule 105 (LIMIT -> .)
    when            reduce using rule 105 (LIMIT -> .)
    constraint      reduce using rule 105 (LIMIT -> .)
    unique          reduce using rule 105 (LIMIT -> .)
    check           reduce using rule 105 (LIMIT -> .)
    default         reduce using rule 105 (LIMIT -> .)
    null            reduce using rule 105 (LIMIT -> .)
    primary         reduce using rule 105 (LIMIT -> .)
    references      reduce using rule 105 (LIMIT -> .)
    asc             reduce using rule 105 (LIMIT -> .)
    desc            reduce using rule 105 (LIMIT -> .)

  ! limit           [ reduce using rule 105 (LIMIT -> .) ]
  ! offset          [ reduce using rule 105 (LIMIT -> .) ]

    LIMIT                          shift and go to state 428

state 365

    (122) ORDER -> order . by LEXP ORD
    (123) ORDER -> order . by LEXP

    by              shift and go to state 431


state 366

    (111) COMBINING -> union LEXP .
    (134) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 111 (COMBINING -> union LEXP .)
    where           reduce using rule 111 (COMBINING -> union LEXP .)
    union           reduce using rule 111 (COMBINING -> union LEXP .)
    group           reduce using rule 111 (COMBINING -> union LEXP .)
    having          reduce using rule 111 (COMBINING -> union LEXP .)
    intersect       reduce using rule 111 (COMBINING -> union LEXP .)
    except          reduce using rule 111 (COMBINING -> union LEXP .)
    order           reduce using rule 111 (COMBINING -> union LEXP .)
    limit           reduce using rule 111 (COMBINING -> union LEXP .)
    offset          reduce using rule 111 (COMBINING -> union LEXP .)
    ptcoma          reduce using rule 111 (COMBINING -> union LEXP .)
    mas             reduce using rule 111 (COMBINING -> union LEXP .)
    menos           reduce using rule 111 (COMBINING -> union LEXP .)
    multiplicacion  reduce using rule 111 (COMBINING -> union LEXP .)
    division        reduce using rule 111 (COMBINING -> union LEXP .)
    modulo          reduce using rule 111 (COMBINING -> union LEXP .)
    elevado         reduce using rule 111 (COMBINING -> union LEXP .)
    and             reduce using rule 111 (COMBINING -> union LEXP .)
    or              reduce using rule 111 (COMBINING -> union LEXP .)
    mayor           reduce using rule 111 (COMBINING -> union LEXP .)
    menor           reduce using rule 111 (COMBINING -> union LEXP .)
    mayor_igual     reduce using rule 111 (COMBINING -> union LEXP .)
    menor_igual     reduce using rule 111 (COMBINING -> union LEXP .)
    igual           reduce using rule 111 (COMBINING -> union LEXP .)
    diferente1      reduce using rule 111 (COMBINING -> union LEXP .)
    diferente2      reduce using rule 111 (COMBINING -> union LEXP .)
    punto           reduce using rule 111 (COMBINING -> union LEXP .)
    between         reduce using rule 111 (COMBINING -> union LEXP .)
    is              reduce using rule 111 (COMBINING -> union LEXP .)
    isnull          reduce using rule 111 (COMBINING -> union LEXP .)
    notnull         reduce using rule 111 (COMBINING -> union LEXP .)
    as              reduce using rule 111 (COMBINING -> union LEXP .)
    cadenaString    reduce using rule 111 (COMBINING -> union LEXP .)
    id              reduce using rule 111 (COMBINING -> union LEXP .)
    cadena          reduce using rule 111 (COMBINING -> union LEXP .)
    in              reduce using rule 111 (COMBINING -> union LEXP .)
    not             reduce using rule 111 (COMBINING -> union LEXP .)
    like            reduce using rule 111 (COMBINING -> union LEXP .)
    parc            reduce using rule 111 (COMBINING -> union LEXP .)
    then            reduce using rule 111 (COMBINING -> union LEXP .)
    end             reduce using rule 111 (COMBINING -> union LEXP .)
    else            reduce using rule 111 (COMBINING -> union LEXP .)
    when            reduce using rule 111 (COMBINING -> union LEXP .)
    constraint      reduce using rule 111 (COMBINING -> union LEXP .)
    unique          reduce using rule 111 (COMBINING -> union LEXP .)
    check           reduce using rule 111 (COMBINING -> union LEXP .)
    default         reduce using rule 111 (COMBINING -> union LEXP .)
    null            reduce using rule 111 (COMBINING -> union LEXP .)
    primary         reduce using rule 111 (COMBINING -> union LEXP .)
    references      reduce using rule 111 (COMBINING -> union LEXP .)
    asc             reduce using rule 111 (COMBINING -> union LEXP .)
    desc            reduce using rule 111 (COMBINING -> union LEXP .)
    coma            shift and go to state 84

  ! coma            [ reduce using rule 111 (COMBINING -> union LEXP .) ]


state 367

    (112) COMBINING -> union all . LEXP
    (228) EXP -> all . para LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    para            shift and go to state 235
    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 432
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 368

    (113) COMBINING -> intersect LEXP .
    (134) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 113 (COMBINING -> intersect LEXP .)
    where           reduce using rule 113 (COMBINING -> intersect LEXP .)
    union           reduce using rule 113 (COMBINING -> intersect LEXP .)
    group           reduce using rule 113 (COMBINING -> intersect LEXP .)
    having          reduce using rule 113 (COMBINING -> intersect LEXP .)
    intersect       reduce using rule 113 (COMBINING -> intersect LEXP .)
    except          reduce using rule 113 (COMBINING -> intersect LEXP .)
    order           reduce using rule 113 (COMBINING -> intersect LEXP .)
    limit           reduce using rule 113 (COMBINING -> intersect LEXP .)
    offset          reduce using rule 113 (COMBINING -> intersect LEXP .)
    ptcoma          reduce using rule 113 (COMBINING -> intersect LEXP .)
    mas             reduce using rule 113 (COMBINING -> intersect LEXP .)
    menos           reduce using rule 113 (COMBINING -> intersect LEXP .)
    multiplicacion  reduce using rule 113 (COMBINING -> intersect LEXP .)
    division        reduce using rule 113 (COMBINING -> intersect LEXP .)
    modulo          reduce using rule 113 (COMBINING -> intersect LEXP .)
    elevado         reduce using rule 113 (COMBINING -> intersect LEXP .)
    and             reduce using rule 113 (COMBINING -> intersect LEXP .)
    or              reduce using rule 113 (COMBINING -> intersect LEXP .)
    mayor           reduce using rule 113 (COMBINING -> intersect LEXP .)
    menor           reduce using rule 113 (COMBINING -> intersect LEXP .)
    mayor_igual     reduce using rule 113 (COMBINING -> intersect LEXP .)
    menor_igual     reduce using rule 113 (COMBINING -> intersect LEXP .)
    igual           reduce using rule 113 (COMBINING -> intersect LEXP .)
    diferente1      reduce using rule 113 (COMBINING -> intersect LEXP .)
    diferente2      reduce using rule 113 (COMBINING -> intersect LEXP .)
    punto           reduce using rule 113 (COMBINING -> intersect LEXP .)
    between         reduce using rule 113 (COMBINING -> intersect LEXP .)
    is              reduce using rule 113 (COMBINING -> intersect LEXP .)
    isnull          reduce using rule 113 (COMBINING -> intersect LEXP .)
    notnull         reduce using rule 113 (COMBINING -> intersect LEXP .)
    as              reduce using rule 113 (COMBINING -> intersect LEXP .)
    cadenaString    reduce using rule 113 (COMBINING -> intersect LEXP .)
    id              reduce using rule 113 (COMBINING -> intersect LEXP .)
    cadena          reduce using rule 113 (COMBINING -> intersect LEXP .)
    in              reduce using rule 113 (COMBINING -> intersect LEXP .)
    not             reduce using rule 113 (COMBINING -> intersect LEXP .)
    like            reduce using rule 113 (COMBINING -> intersect LEXP .)
    parc            reduce using rule 113 (COMBINING -> intersect LEXP .)
    then            reduce using rule 113 (COMBINING -> intersect LEXP .)
    end             reduce using rule 113 (COMBINING -> intersect LEXP .)
    else            reduce using rule 113 (COMBINING -> intersect LEXP .)
    when            reduce using rule 113 (COMBINING -> intersect LEXP .)
    constraint      reduce using rule 113 (COMBINING -> intersect LEXP .)
    unique          reduce using rule 113 (COMBINING -> intersect LEXP .)
    check           reduce using rule 113 (COMBINING -> intersect LEXP .)
    default         reduce using rule 113 (COMBINING -> intersect LEXP .)
    null            reduce using rule 113 (COMBINING -> intersect LEXP .)
    primary         reduce using rule 113 (COMBINING -> intersect LEXP .)
    references      reduce using rule 113 (COMBINING -> intersect LEXP .)
    asc             reduce using rule 113 (COMBINING -> intersect LEXP .)
    desc            reduce using rule 113 (COMBINING -> intersect LEXP .)
    coma            shift and go to state 84

  ! coma            [ reduce using rule 113 (COMBINING -> intersect LEXP .) ]


state 369

    (114) COMBINING -> intersect all . LEXP
    (228) EXP -> all . para LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    para            shift and go to state 235
    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 433
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 370

    (115) COMBINING -> except LEXP .
    (134) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 115 (COMBINING -> except LEXP .)
    where           reduce using rule 115 (COMBINING -> except LEXP .)
    union           reduce using rule 115 (COMBINING -> except LEXP .)
    group           reduce using rule 115 (COMBINING -> except LEXP .)
    having          reduce using rule 115 (COMBINING -> except LEXP .)
    intersect       reduce using rule 115 (COMBINING -> except LEXP .)
    except          reduce using rule 115 (COMBINING -> except LEXP .)
    order           reduce using rule 115 (COMBINING -> except LEXP .)
    limit           reduce using rule 115 (COMBINING -> except LEXP .)
    offset          reduce using rule 115 (COMBINING -> except LEXP .)
    ptcoma          reduce using rule 115 (COMBINING -> except LEXP .)
    mas             reduce using rule 115 (COMBINING -> except LEXP .)
    menos           reduce using rule 115 (COMBINING -> except LEXP .)
    multiplicacion  reduce using rule 115 (COMBINING -> except LEXP .)
    division        reduce using rule 115 (COMBINING -> except LEXP .)
    modulo          reduce using rule 115 (COMBINING -> except LEXP .)
    elevado         reduce using rule 115 (COMBINING -> except LEXP .)
    and             reduce using rule 115 (COMBINING -> except LEXP .)
    or              reduce using rule 115 (COMBINING -> except LEXP .)
    mayor           reduce using rule 115 (COMBINING -> except LEXP .)
    menor           reduce using rule 115 (COMBINING -> except LEXP .)
    mayor_igual     reduce using rule 115 (COMBINING -> except LEXP .)
    menor_igual     reduce using rule 115 (COMBINING -> except LEXP .)
    igual           reduce using rule 115 (COMBINING -> except LEXP .)
    diferente1      reduce using rule 115 (COMBINING -> except LEXP .)
    diferente2      reduce using rule 115 (COMBINING -> except LEXP .)
    punto           reduce using rule 115 (COMBINING -> except LEXP .)
    between         reduce using rule 115 (COMBINING -> except LEXP .)
    is              reduce using rule 115 (COMBINING -> except LEXP .)
    isnull          reduce using rule 115 (COMBINING -> except LEXP .)
    notnull         reduce using rule 115 (COMBINING -> except LEXP .)
    as              reduce using rule 115 (COMBINING -> except LEXP .)
    cadenaString    reduce using rule 115 (COMBINING -> except LEXP .)
    id              reduce using rule 115 (COMBINING -> except LEXP .)
    cadena          reduce using rule 115 (COMBINING -> except LEXP .)
    in              reduce using rule 115 (COMBINING -> except LEXP .)
    not             reduce using rule 115 (COMBINING -> except LEXP .)
    like            reduce using rule 115 (COMBINING -> except LEXP .)
    parc            reduce using rule 115 (COMBINING -> except LEXP .)
    then            reduce using rule 115 (COMBINING -> except LEXP .)
    end             reduce using rule 115 (COMBINING -> except LEXP .)
    else            reduce using rule 115 (COMBINING -> except LEXP .)
    when            reduce using rule 115 (COMBINING -> except LEXP .)
    constraint      reduce using rule 115 (COMBINING -> except LEXP .)
    unique          reduce using rule 115 (COMBINING -> except LEXP .)
    check           reduce using rule 115 (COMBINING -> except LEXP .)
    default         reduce using rule 115 (COMBINING -> except LEXP .)
    null            reduce using rule 115 (COMBINING -> except LEXP .)
    primary         reduce using rule 115 (COMBINING -> except LEXP .)
    references      reduce using rule 115 (COMBINING -> except LEXP .)
    asc             reduce using rule 115 (COMBINING -> except LEXP .)
    desc            reduce using rule 115 (COMBINING -> except LEXP .)
    coma            shift and go to state 84

  ! coma            [ reduce using rule 115 (COMBINING -> except LEXP .) ]


state 371

    (116) COMBINING -> except all . LEXP
    (228) EXP -> all . para LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    para            shift and go to state 235
    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 434
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 372

    (132) EXIST -> exist para SELECT parc .

    r_from          reduce using rule 132 (EXIST -> exist para SELECT parc .)
    coma            reduce using rule 132 (EXIST -> exist para SELECT parc .)
    where           reduce using rule 132 (EXIST -> exist para SELECT parc .)
    union           reduce using rule 132 (EXIST -> exist para SELECT parc .)
    group           reduce using rule 132 (EXIST -> exist para SELECT parc .)
    having          reduce using rule 132 (EXIST -> exist para SELECT parc .)
    intersect       reduce using rule 132 (EXIST -> exist para SELECT parc .)
    except          reduce using rule 132 (EXIST -> exist para SELECT parc .)
    order           reduce using rule 132 (EXIST -> exist para SELECT parc .)
    limit           reduce using rule 132 (EXIST -> exist para SELECT parc .)
    offset          reduce using rule 132 (EXIST -> exist para SELECT parc .)
    ptcoma          reduce using rule 132 (EXIST -> exist para SELECT parc .)
    mas             reduce using rule 132 (EXIST -> exist para SELECT parc .)
    menos           reduce using rule 132 (EXIST -> exist para SELECT parc .)
    multiplicacion  reduce using rule 132 (EXIST -> exist para SELECT parc .)
    division        reduce using rule 132 (EXIST -> exist para SELECT parc .)
    modulo          reduce using rule 132 (EXIST -> exist para SELECT parc .)
    elevado         reduce using rule 132 (EXIST -> exist para SELECT parc .)
    and             reduce using rule 132 (EXIST -> exist para SELECT parc .)
    or              reduce using rule 132 (EXIST -> exist para SELECT parc .)
    mayor           reduce using rule 132 (EXIST -> exist para SELECT parc .)
    menor           reduce using rule 132 (EXIST -> exist para SELECT parc .)
    mayor_igual     reduce using rule 132 (EXIST -> exist para SELECT parc .)
    menor_igual     reduce using rule 132 (EXIST -> exist para SELECT parc .)
    igual           reduce using rule 132 (EXIST -> exist para SELECT parc .)
    diferente1      reduce using rule 132 (EXIST -> exist para SELECT parc .)
    diferente2      reduce using rule 132 (EXIST -> exist para SELECT parc .)
    punto           reduce using rule 132 (EXIST -> exist para SELECT parc .)
    between         reduce using rule 132 (EXIST -> exist para SELECT parc .)
    is              reduce using rule 132 (EXIST -> exist para SELECT parc .)
    isnull          reduce using rule 132 (EXIST -> exist para SELECT parc .)
    notnull         reduce using rule 132 (EXIST -> exist para SELECT parc .)
    as              reduce using rule 132 (EXIST -> exist para SELECT parc .)
    cadenaString    reduce using rule 132 (EXIST -> exist para SELECT parc .)
    id              reduce using rule 132 (EXIST -> exist para SELECT parc .)
    cadena          reduce using rule 132 (EXIST -> exist para SELECT parc .)
    in              reduce using rule 132 (EXIST -> exist para SELECT parc .)
    not             reduce using rule 132 (EXIST -> exist para SELECT parc .)
    like            reduce using rule 132 (EXIST -> exist para SELECT parc .)
    parc            reduce using rule 132 (EXIST -> exist para SELECT parc .)
    then            reduce using rule 132 (EXIST -> exist para SELECT parc .)
    end             reduce using rule 132 (EXIST -> exist para SELECT parc .)
    else            reduce using rule 132 (EXIST -> exist para SELECT parc .)
    when            reduce using rule 132 (EXIST -> exist para SELECT parc .)
    constraint      reduce using rule 132 (EXIST -> exist para SELECT parc .)
    unique          reduce using rule 132 (EXIST -> exist para SELECT parc .)
    check           reduce using rule 132 (EXIST -> exist para SELECT parc .)
    default         reduce using rule 132 (EXIST -> exist para SELECT parc .)
    null            reduce using rule 132 (EXIST -> exist para SELECT parc .)
    primary         reduce using rule 132 (EXIST -> exist para SELECT parc .)
    references      reduce using rule 132 (EXIST -> exist para SELECT parc .)
    asc             reduce using rule 132 (EXIST -> exist para SELECT parc .)
    desc            reduce using rule 132 (EXIST -> exist para SELECT parc .)


state 373

    (133) EXIST -> not exist para SELECT . parc

    parc            shift and go to state 435


state 374

    (219) EXP -> EXP is not distinct r_from EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

    r_from          reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    coma            reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    where           reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    union           reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    group           reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    having          reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    intersect       reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    except          reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    order           reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    limit           reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    offset          reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    ptcoma          reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    and             reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    or              reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    between         reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    is              reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    isnull          reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    notnull         reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    as              reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    cadenaString    reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    id              reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    cadena          reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    in              reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    not             reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    like            reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    parc            reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    then            reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    end             reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    else            reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    when            reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    constraint      reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    unique          reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    check           reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    default         reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    null            reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    primary         reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    references      reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    asc             reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    desc            reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .)
    mas             shift and go to state 87
    menos           shift and go to state 88
    multiplicacion  shift and go to state 89
    division        shift and go to state 90
    modulo          shift and go to state 91
    elevado         shift and go to state 92
    mayor           shift and go to state 95
    menor           shift and go to state 96
    mayor_igual     shift and go to state 97
    menor_igual     shift and go to state 98
    igual           shift and go to state 99
    diferente1      shift and go to state 100
    diferente2      shift and go to state 101
    punto           shift and go to state 102

  ! mas             [ reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .) ]
  ! menos           [ reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .) ]
  ! multiplicacion  [ reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .) ]
  ! division        [ reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .) ]
  ! modulo          [ reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .) ]
  ! elevado         [ reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .) ]
  ! mayor           [ reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .) ]
  ! menor           [ reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .) ]
  ! mayor_igual     [ reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .) ]
  ! menor_igual     [ reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .) ]
  ! igual           [ reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .) ]
  ! diferente1      [ reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .) ]
  ! diferente2      [ reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .) ]
  ! punto           [ reduce using rule 219 (EXP -> EXP is not distinct r_from EXP .) ]
  ! and             [ shift and go to state 93 ]
  ! or              [ shift and go to state 94 ]
  ! between         [ shift and go to state 103 ]
  ! is              [ shift and go to state 104 ]
  ! isnull          [ shift and go to state 106 ]
  ! notnull         [ shift and go to state 107 ]
  ! as              [ shift and go to state 108 ]
  ! cadenaString    [ shift and go to state 109 ]
  ! id              [ shift and go to state 110 ]
  ! cadena          [ shift and go to state 111 ]
  ! in              [ shift and go to state 112 ]
  ! not             [ shift and go to state 105 ]
  ! like            [ shift and go to state 113 ]


state 375

    (214) EXP -> EXP not in para EXP parc .

    r_from          reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    coma            reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    where           reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    union           reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    group           reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    having          reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    intersect       reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    except          reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    order           reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    limit           reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    offset          reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    ptcoma          reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    mas             reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    menos           reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    multiplicacion  reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    division        reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    modulo          reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    elevado         reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    and             reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    or              reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    mayor           reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    menor           reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    mayor_igual     reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    menor_igual     reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    igual           reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    diferente1      reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    diferente2      reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    punto           reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    between         reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    is              reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    isnull          reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    notnull         reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    as              reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    cadenaString    reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    id              reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    cadena          reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    in              reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    not             reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    like            reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    parc            reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    then            reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    end             reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    else            reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    when            reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    constraint      reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    unique          reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    check           reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    default         reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    null            reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    primary         reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    references      reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    asc             reduce using rule 214 (EXP -> EXP not in para EXP parc .)
    desc            reduce using rule 214 (EXP -> EXP not in para EXP parc .)


state 376

    (230) EXP -> extract para FIELDS r_from timestamp cadena . parc

    parc            shift and go to state 436


state 377

    (77) COLDEF -> id id LOPCOLUMN .
    (78) LOPCOLUMN -> LOPCOLUMN . OPCOLUMN
    (80) OPCOLUMN -> . constraint id unique
    (81) OPCOLUMN -> . unique
    (82) OPCOLUMN -> . constraint id check para EXP parc
    (83) OPCOLUMN -> . check para EXP parc
    (84) OPCOLUMN -> . default EXP
    (85) OPCOLUMN -> . not null
    (86) OPCOLUMN -> . null
    (87) OPCOLUMN -> . primary key
    (88) OPCOLUMN -> . references id

    parc            reduce using rule 77 (COLDEF -> id id LOPCOLUMN .)
    coma            reduce using rule 77 (COLDEF -> id id LOPCOLUMN .)
    constraint      shift and go to state 379
    unique          shift and go to state 380
    check           shift and go to state 381
    default         shift and go to state 382
    not             shift and go to state 383
    null            shift and go to state 384
    primary         shift and go to state 385
    references      shift and go to state 386

    OPCOLUMN                       shift and go to state 437

state 378

    (79) LOPCOLUMN -> OPCOLUMN .

    constraint      reduce using rule 79 (LOPCOLUMN -> OPCOLUMN .)
    unique          reduce using rule 79 (LOPCOLUMN -> OPCOLUMN .)
    check           reduce using rule 79 (LOPCOLUMN -> OPCOLUMN .)
    default         reduce using rule 79 (LOPCOLUMN -> OPCOLUMN .)
    not             reduce using rule 79 (LOPCOLUMN -> OPCOLUMN .)
    null            reduce using rule 79 (LOPCOLUMN -> OPCOLUMN .)
    primary         reduce using rule 79 (LOPCOLUMN -> OPCOLUMN .)
    references      reduce using rule 79 (LOPCOLUMN -> OPCOLUMN .)
    parc            reduce using rule 79 (LOPCOLUMN -> OPCOLUMN .)
    coma            reduce using rule 79 (LOPCOLUMN -> OPCOLUMN .)


state 379

    (80) OPCOLUMN -> constraint . id unique
    (82) OPCOLUMN -> constraint . id check para EXP parc

    id              shift and go to state 438


state 380

    (81) OPCOLUMN -> unique .

    constraint      reduce using rule 81 (OPCOLUMN -> unique .)
    unique          reduce using rule 81 (OPCOLUMN -> unique .)
    check           reduce using rule 81 (OPCOLUMN -> unique .)
    default         reduce using rule 81 (OPCOLUMN -> unique .)
    not             reduce using rule 81 (OPCOLUMN -> unique .)
    null            reduce using rule 81 (OPCOLUMN -> unique .)
    primary         reduce using rule 81 (OPCOLUMN -> unique .)
    references      reduce using rule 81 (OPCOLUMN -> unique .)
    parc            reduce using rule 81 (OPCOLUMN -> unique .)
    coma            reduce using rule 81 (OPCOLUMN -> unique .)


state 381

    (83) OPCOLUMN -> check . para EXP parc

    para            shift and go to state 439


state 382

    (84) OPCOLUMN -> default . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    EXP                            shift and go to state 440
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 383

    (85) OPCOLUMN -> not . null

    null            shift and go to state 441


state 384

    (86) OPCOLUMN -> null .

    constraint      reduce using rule 86 (OPCOLUMN -> null .)
    unique          reduce using rule 86 (OPCOLUMN -> null .)
    check           reduce using rule 86 (OPCOLUMN -> null .)
    default         reduce using rule 86 (OPCOLUMN -> null .)
    not             reduce using rule 86 (OPCOLUMN -> null .)
    null            reduce using rule 86 (OPCOLUMN -> null .)
    primary         reduce using rule 86 (OPCOLUMN -> null .)
    references      reduce using rule 86 (OPCOLUMN -> null .)
    parc            reduce using rule 86 (OPCOLUMN -> null .)
    coma            reduce using rule 86 (OPCOLUMN -> null .)


state 385

    (87) OPCOLUMN -> primary . key

    key             shift and go to state 442


state 386

    (88) OPCOLUMN -> references . id

    id              shift and go to state 443


state 387

    (75) COLDEF -> id TIPO LOPCOLUMN .
    (78) LOPCOLUMN -> LOPCOLUMN . OPCOLUMN
    (80) OPCOLUMN -> . constraint id unique
    (81) OPCOLUMN -> . unique
    (82) OPCOLUMN -> . constraint id check para EXP parc
    (83) OPCOLUMN -> . check para EXP parc
    (84) OPCOLUMN -> . default EXP
    (85) OPCOLUMN -> . not null
    (86) OPCOLUMN -> . null
    (87) OPCOLUMN -> . primary key
    (88) OPCOLUMN -> . references id

    parc            reduce using rule 75 (COLDEF -> id TIPO LOPCOLUMN .)
    coma            reduce using rule 75 (COLDEF -> id TIPO LOPCOLUMN .)
    constraint      shift and go to state 379
    unique          shift and go to state 380
    check           shift and go to state 381
    default         shift and go to state 382
    not             shift and go to state 383
    null            shift and go to state 384
    primary         shift and go to state 385
    references      shift and go to state 386

    OPCOLUMN                       shift and go to state 437

state 388

    (136) TIPO -> interval cadena .

    constraint      reduce using rule 136 (TIPO -> interval cadena .)
    unique          reduce using rule 136 (TIPO -> interval cadena .)
    check           reduce using rule 136 (TIPO -> interval cadena .)
    default         reduce using rule 136 (TIPO -> interval cadena .)
    not             reduce using rule 136 (TIPO -> interval cadena .)
    null            reduce using rule 136 (TIPO -> interval cadena .)
    primary         reduce using rule 136 (TIPO -> interval cadena .)
    references      reduce using rule 136 (TIPO -> interval cadena .)
    parc            reduce using rule 136 (TIPO -> interval cadena .)
    coma            reduce using rule 136 (TIPO -> interval cadena .)
    ptcoma          reduce using rule 136 (TIPO -> interval cadena .)


state 389

    (146) TIPO -> interval para . int parc
    (154) TIPO -> interval para . int parc cadena

    int             shift and go to state 444


state 390

    (137) TIPO -> decimal para . int coma int parc
    (138) TIPO -> decimal para . int parc

    int             shift and go to state 445


state 391

    (140) TIPO -> numeric para . int coma int parc
    (141) TIPO -> numeric para . int parc

    int             shift and go to state 446


state 392

    (143) TIPO -> varchar para . int parc

    int             shift and go to state 447


state 393

    (144) TIPO -> timestamp para . int parc
    (150) TIPO -> timestamp para . int parc without time zone
    (151) TIPO -> timestamp para . int parc with time zone

    int             shift and go to state 448


state 394

    (167) TIPO -> timestamp without . time zone

    time            shift and go to state 449


state 395

    (168) TIPO -> timestamp with . time zone

    time            shift and go to state 450


state 396

    (145) TIPO -> character para . int parc

    int             shift and go to state 451


state 397

    (149) TIPO -> character varying . para int parc

    para            shift and go to state 452


state 398

    (147) TIPO -> char para . int parc

    int             shift and go to state 453


state 399

    (148) TIPO -> time para . int parc
    (152) TIPO -> time para . int parc without time zone
    (153) TIPO -> time para . int parc with time zone

    int             shift and go to state 454


state 400

    (169) TIPO -> time without . time zone

    time            shift and go to state 455


state 401

    (170) TIPO -> time with . time zone

    time            shift and go to state 456


state 402

    (159) TIPO -> double precision .

    constraint      reduce using rule 159 (TIPO -> double precision .)
    unique          reduce using rule 159 (TIPO -> double precision .)
    check           reduce using rule 159 (TIPO -> double precision .)
    default         reduce using rule 159 (TIPO -> double precision .)
    not             reduce using rule 159 (TIPO -> double precision .)
    null            reduce using rule 159 (TIPO -> double precision .)
    primary         reduce using rule 159 (TIPO -> double precision .)
    references      reduce using rule 159 (TIPO -> double precision .)
    parc            reduce using rule 159 (TIPO -> double precision .)
    coma            reduce using rule 159 (TIPO -> double precision .)
    ptcoma          reduce using rule 159 (TIPO -> double precision .)


state 403

    (68) CREATETABLE -> create table id para LDEF parc ptcoma .

    use             reduce using rule 68 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    select          reduce using rule 68 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    create          reduce using rule 68 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    update          reduce using rule 68 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    delete          reduce using rule 68 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    alter           reduce using rule 68 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    drop            reduce using rule 68 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    insert          reduce using rule 68 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    case            reduce using rule 68 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    show            reduce using rule 68 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    $end            reduce using rule 68 (CREATETABLE -> create table id para LDEF parc ptcoma .)


state 404

    (69) CREATETABLE -> create table id para LDEF parc HERENCIA . ptcoma

    ptcoma          shift and go to state 457


state 405

    (93) HERENCIA -> inherits . para LEXP parc

    para            shift and go to state 458


state 406

    (70) LDEF -> LDEF coma COLDEF .

    parc            reduce using rule 70 (LDEF -> LDEF coma COLDEF .)
    coma            reduce using rule 70 (LDEF -> LDEF coma COLDEF .)


state 407

    (73) COLDEF -> constraint id OPCONST .

    parc            reduce using rule 73 (COLDEF -> constraint id OPCONST .)
    coma            reduce using rule 73 (COLDEF -> constraint id OPCONST .)


state 408

    (89) OPCONST -> primary key para . LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 459
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 409

    (90) OPCONST -> foreign key para . LEXP parc references id para LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 460
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 410

    (91) OPCONST -> unique para LEXP . parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 461
    coma            shift and go to state 84


state 411

    (92) OPCONST -> check para LEXP . parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 462
    coma            shift and go to state 84


state 412

    (94) CREATETYPE -> create type id as enum para LEXP . parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 463
    coma            shift and go to state 84


state 413

    (52) CREATEDB -> create RD if not exist id OPCCDB .

    ptcoma          reduce using rule 52 (CREATEDB -> create RD if not exist id OPCCDB .)


state 414

    (128) LCAMPOS -> LCAMPOS id igual EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

    where           reduce using rule 128 (LCAMPOS -> LCAMPOS id igual EXP .)
    id              reduce using rule 128 (LCAMPOS -> LCAMPOS id igual EXP .)
    mas             shift and go to state 87
    menos           shift and go to state 88
    multiplicacion  shift and go to state 89
    division        shift and go to state 90
    modulo          shift and go to state 91
    elevado         shift and go to state 92
    and             shift and go to state 93
    or              shift and go to state 94
    mayor           shift and go to state 95
    menor           shift and go to state 96
    mayor_igual     shift and go to state 97
    menor_igual     shift and go to state 98
    igual           shift and go to state 99
    diferente1      shift and go to state 100
    diferente2      shift and go to state 101
    punto           shift and go to state 102
    between         shift and go to state 103
    is              shift and go to state 104
    isnull          shift and go to state 106
    notnull         shift and go to state 107
    as              shift and go to state 108
    cadenaString    shift and go to state 109
    cadena          shift and go to state 111
    in              shift and go to state 112
    not             shift and go to state 105
    like            shift and go to state 113

  ! id              [ shift and go to state 110 ]


state 415

    (34) OP -> alter column id set . not null
    (35) OP -> alter column id set . null

    not             shift and go to state 464
    null            shift and go to state 465


state 416

    (41) alc -> alter column id type . TIPO
    (136) TIPO -> . interval cadena
    (137) TIPO -> . decimal para int coma int parc
    (138) TIPO -> . decimal para int parc
    (139) TIPO -> . decimal
    (140) TIPO -> . numeric para int coma int parc
    (141) TIPO -> . numeric para int parc
    (142) TIPO -> . numeric
    (143) TIPO -> . varchar para int parc
    (144) TIPO -> . timestamp para int parc
    (145) TIPO -> . character para int parc
    (146) TIPO -> . interval para int parc
    (147) TIPO -> . char para int parc
    (148) TIPO -> . time para int parc
    (149) TIPO -> . character varying para int parc
    (150) TIPO -> . timestamp para int parc without time zone
    (151) TIPO -> . timestamp para int parc with time zone
    (152) TIPO -> . time para int parc without time zone
    (153) TIPO -> . time para int parc with time zone
    (154) TIPO -> . interval para int parc cadena
    (155) TIPO -> . smallint
    (156) TIPO -> . integer
    (157) TIPO -> . bigint
    (158) TIPO -> . real
    (159) TIPO -> . double precision
    (160) TIPO -> . money
    (161) TIPO -> . text
    (162) TIPO -> . timestamp
    (163) TIPO -> . date
    (164) TIPO -> . time
    (165) TIPO -> . interval
    (166) TIPO -> . boolean
    (167) TIPO -> . timestamp without time zone
    (168) TIPO -> . timestamp with time zone
    (169) TIPO -> . time without time zone
    (170) TIPO -> . time with time zone

    interval        shift and go to state 312
    decimal         shift and go to state 313
    numeric         shift and go to state 314
    varchar         shift and go to state 315
    timestamp       shift and go to state 316
    character       shift and go to state 317
    char            shift and go to state 318
    time            shift and go to state 319
    smallint        shift and go to state 320
    integer         shift and go to state 321
    bigint          shift and go to state 322
    real            shift and go to state 323
    double          shift and go to state 324
    money           shift and go to state 325
    text            shift and go to state 326
    date            shift and go to state 327
    boolean         shift and go to state 328

    TIPO                           shift and go to state 466

state 417

    (45) ADD -> column id TIPO .

    ptcoma          reduce using rule 45 (ADD -> column id TIPO .)


state 418

    (46) ADD -> check para LEXP . parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 467
    coma            shift and go to state 84


state 419

    (47) ADD -> constraint id unique . para id parc

    para            shift and go to state 468


state 420

    (49) ADD -> constraint id foreign . key para LEXP parc references id para LEXP parc

    key             shift and go to state 469


state 421

    (48) ADD -> foreign key para . LEXP parc references id para LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 470
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 422

    (41) alc -> alter column . id type TIPO

    id              shift and go to state 471


state 423

    (38) OP -> rename column id to . id

    id              shift and go to state 472


state 424

    (22) INSERT -> insert into id values para LEXP parc .

    ptcoma          reduce using rule 22 (INSERT -> insert into id values para LEXP parc .)


state 425

    (23) INSERT -> insert into id para LEXP parc values . para LEXP parc

    para            shift and go to state 473


state 426

    (95) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING . COMBINING ORDER LIMIT
    (111) COMBINING -> . union LEXP
    (112) COMBINING -> . union all LEXP
    (113) COMBINING -> . intersect LEXP
    (114) COMBINING -> . intersect all LEXP
    (115) COMBINING -> . except LEXP
    (116) COMBINING -> . except all LEXP
    (117) COMBINING -> .

  ! shift/reduce conflict for union resolved as shift
  ! shift/reduce conflict for intersect resolved as shift
  ! shift/reduce conflict for except resolved as shift
    union           shift and go to state 296
    intersect       shift and go to state 297
    except          shift and go to state 298
    r_from          reduce using rule 117 (COMBINING -> .)
    coma            reduce using rule 117 (COMBINING -> .)
    where           reduce using rule 117 (COMBINING -> .)
    group           reduce using rule 117 (COMBINING -> .)
    having          reduce using rule 117 (COMBINING -> .)
    order           reduce using rule 117 (COMBINING -> .)
    limit           reduce using rule 117 (COMBINING -> .)
    offset          reduce using rule 117 (COMBINING -> .)
    ptcoma          reduce using rule 117 (COMBINING -> .)
    mas             reduce using rule 117 (COMBINING -> .)
    menos           reduce using rule 117 (COMBINING -> .)
    multiplicacion  reduce using rule 117 (COMBINING -> .)
    division        reduce using rule 117 (COMBINING -> .)
    modulo          reduce using rule 117 (COMBINING -> .)
    elevado         reduce using rule 117 (COMBINING -> .)
    and             reduce using rule 117 (COMBINING -> .)
    or              reduce using rule 117 (COMBINING -> .)
    mayor           reduce using rule 117 (COMBINING -> .)
    menor           reduce using rule 117 (COMBINING -> .)
    mayor_igual     reduce using rule 117 (COMBINING -> .)
    menor_igual     reduce using rule 117 (COMBINING -> .)
    igual           reduce using rule 117 (COMBINING -> .)
    diferente1      reduce using rule 117 (COMBINING -> .)
    diferente2      reduce using rule 117 (COMBINING -> .)
    punto           reduce using rule 117 (COMBINING -> .)
    between         reduce using rule 117 (COMBINING -> .)
    is              reduce using rule 117 (COMBINING -> .)
    isnull          reduce using rule 117 (COMBINING -> .)
    notnull         reduce using rule 117 (COMBINING -> .)
    as              reduce using rule 117 (COMBINING -> .)
    cadenaString    reduce using rule 117 (COMBINING -> .)
    id              reduce using rule 117 (COMBINING -> .)
    cadena          reduce using rule 117 (COMBINING -> .)
    in              reduce using rule 117 (COMBINING -> .)
    not             reduce using rule 117 (COMBINING -> .)
    like            reduce using rule 117 (COMBINING -> .)
    parc            reduce using rule 117 (COMBINING -> .)
    then            reduce using rule 117 (COMBINING -> .)
    end             reduce using rule 117 (COMBINING -> .)
    else            reduce using rule 117 (COMBINING -> .)
    when            reduce using rule 117 (COMBINING -> .)
    constraint      reduce using rule 117 (COMBINING -> .)
    unique          reduce using rule 117 (COMBINING -> .)
    check           reduce using rule 117 (COMBINING -> .)
    default         reduce using rule 117 (COMBINING -> .)
    null            reduce using rule 117 (COMBINING -> .)
    primary         reduce using rule 117 (COMBINING -> .)
    references      reduce using rule 117 (COMBINING -> .)
    asc             reduce using rule 117 (COMBINING -> .)
    desc            reduce using rule 117 (COMBINING -> .)

  ! union           [ reduce using rule 117 (COMBINING -> .) ]
  ! intersect       [ reduce using rule 117 (COMBINING -> .) ]
  ! except          [ reduce using rule 117 (COMBINING -> .) ]

    COMBINING                      shift and go to state 474

state 427

    (96) SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING . ORDER LIMIT
    (122) ORDER -> . order by LEXP ORD
    (123) ORDER -> . order by LEXP
    (124) ORDER -> .

  ! shift/reduce conflict for order resolved as shift
    order           shift and go to state 365
    r_from          reduce using rule 124 (ORDER -> .)
    coma            reduce using rule 124 (ORDER -> .)
    where           reduce using rule 124 (ORDER -> .)
    union           reduce using rule 124 (ORDER -> .)
    group           reduce using rule 124 (ORDER -> .)
    having          reduce using rule 124 (ORDER -> .)
    intersect       reduce using rule 124 (ORDER -> .)
    except          reduce using rule 124 (ORDER -> .)
    limit           reduce using rule 124 (ORDER -> .)
    offset          reduce using rule 124 (ORDER -> .)
    ptcoma          reduce using rule 124 (ORDER -> .)
    mas             reduce using rule 124 (ORDER -> .)
    menos           reduce using rule 124 (ORDER -> .)
    multiplicacion  reduce using rule 124 (ORDER -> .)
    division        reduce using rule 124 (ORDER -> .)
    modulo          reduce using rule 124 (ORDER -> .)
    elevado         reduce using rule 124 (ORDER -> .)
    and             reduce using rule 124 (ORDER -> .)
    or              reduce using rule 124 (ORDER -> .)
    mayor           reduce using rule 124 (ORDER -> .)
    menor           reduce using rule 124 (ORDER -> .)
    mayor_igual     reduce using rule 124 (ORDER -> .)
    menor_igual     reduce using rule 124 (ORDER -> .)
    igual           reduce using rule 124 (ORDER -> .)
    diferente1      reduce using rule 124 (ORDER -> .)
    diferente2      reduce using rule 124 (ORDER -> .)
    punto           reduce using rule 124 (ORDER -> .)
    between         reduce using rule 124 (ORDER -> .)
    is              reduce using rule 124 (ORDER -> .)
    isnull          reduce using rule 124 (ORDER -> .)
    notnull         reduce using rule 124 (ORDER -> .)
    as              reduce using rule 124 (ORDER -> .)
    cadenaString    reduce using rule 124 (ORDER -> .)
    id              reduce using rule 124 (ORDER -> .)
    cadena          reduce using rule 124 (ORDER -> .)
    in              reduce using rule 124 (ORDER -> .)
    not             reduce using rule 124 (ORDER -> .)
    like            reduce using rule 124 (ORDER -> .)
    parc            reduce using rule 124 (ORDER -> .)
    then            reduce using rule 124 (ORDER -> .)
    end             reduce using rule 124 (ORDER -> .)
    else            reduce using rule 124 (ORDER -> .)
    when            reduce using rule 124 (ORDER -> .)
    constraint      reduce using rule 124 (ORDER -> .)
    unique          reduce using rule 124 (ORDER -> .)
    check           reduce using rule 124 (ORDER -> .)
    default         reduce using rule 124 (ORDER -> .)
    null            reduce using rule 124 (ORDER -> .)
    primary         reduce using rule 124 (ORDER -> .)
    references      reduce using rule 124 (ORDER -> .)
    asc             reduce using rule 124 (ORDER -> .)
    desc            reduce using rule 124 (ORDER -> .)

  ! order           [ reduce using rule 124 (ORDER -> .) ]

    ORDER                          shift and go to state 475

state 428

    (97) SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .

    ptcoma          reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    r_from          reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    coma            reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    where           reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    union           reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    group           reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    having          reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    intersect       reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    except          reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    order           reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    limit           reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    offset          reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mas             reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menos           reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    multiplicacion  reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    division        reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    modulo          reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    elevado         reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    and             reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    or              reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor           reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor           reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor_igual     reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor_igual     reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    igual           reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente1      reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente2      reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    punto           reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    between         reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    is              reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    isnull          reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    notnull         reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    as              reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadenaString    reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    id              reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadena          reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    in              reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    not             reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    like            reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    parc            reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    then            reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    end             reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    else            reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    when            reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    constraint      reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    unique          reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    check           reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    default         reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    null            reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    primary         reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    references      reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    asc             reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    desc            reduce using rule 97 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)


state 429

    (98) LIMIT -> limit . int
    (99) LIMIT -> limit . all
    (101) LIMIT -> limit . int offset int
    (103) LIMIT -> limit . all offset int

    int             shift and go to state 476
    all             shift and go to state 477


state 430

    (100) LIMIT -> offset . int
    (102) LIMIT -> offset . int limit int
    (104) LIMIT -> offset . int limit all

    int             shift and go to state 478


state 431

    (122) ORDER -> order by . LEXP ORD
    (123) ORDER -> order by . LEXP
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 479
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 432

    (112) COMBINING -> union all LEXP .
    (134) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 112 (COMBINING -> union all LEXP .)
    where           reduce using rule 112 (COMBINING -> union all LEXP .)
    union           reduce using rule 112 (COMBINING -> union all LEXP .)
    group           reduce using rule 112 (COMBINING -> union all LEXP .)
    having          reduce using rule 112 (COMBINING -> union all LEXP .)
    intersect       reduce using rule 112 (COMBINING -> union all LEXP .)
    except          reduce using rule 112 (COMBINING -> union all LEXP .)
    order           reduce using rule 112 (COMBINING -> union all LEXP .)
    limit           reduce using rule 112 (COMBINING -> union all LEXP .)
    offset          reduce using rule 112 (COMBINING -> union all LEXP .)
    ptcoma          reduce using rule 112 (COMBINING -> union all LEXP .)
    mas             reduce using rule 112 (COMBINING -> union all LEXP .)
    menos           reduce using rule 112 (COMBINING -> union all LEXP .)
    multiplicacion  reduce using rule 112 (COMBINING -> union all LEXP .)
    division        reduce using rule 112 (COMBINING -> union all LEXP .)
    modulo          reduce using rule 112 (COMBINING -> union all LEXP .)
    elevado         reduce using rule 112 (COMBINING -> union all LEXP .)
    and             reduce using rule 112 (COMBINING -> union all LEXP .)
    or              reduce using rule 112 (COMBINING -> union all LEXP .)
    mayor           reduce using rule 112 (COMBINING -> union all LEXP .)
    menor           reduce using rule 112 (COMBINING -> union all LEXP .)
    mayor_igual     reduce using rule 112 (COMBINING -> union all LEXP .)
    menor_igual     reduce using rule 112 (COMBINING -> union all LEXP .)
    igual           reduce using rule 112 (COMBINING -> union all LEXP .)
    diferente1      reduce using rule 112 (COMBINING -> union all LEXP .)
    diferente2      reduce using rule 112 (COMBINING -> union all LEXP .)
    punto           reduce using rule 112 (COMBINING -> union all LEXP .)
    between         reduce using rule 112 (COMBINING -> union all LEXP .)
    is              reduce using rule 112 (COMBINING -> union all LEXP .)
    isnull          reduce using rule 112 (COMBINING -> union all LEXP .)
    notnull         reduce using rule 112 (COMBINING -> union all LEXP .)
    as              reduce using rule 112 (COMBINING -> union all LEXP .)
    cadenaString    reduce using rule 112 (COMBINING -> union all LEXP .)
    id              reduce using rule 112 (COMBINING -> union all LEXP .)
    cadena          reduce using rule 112 (COMBINING -> union all LEXP .)
    in              reduce using rule 112 (COMBINING -> union all LEXP .)
    not             reduce using rule 112 (COMBINING -> union all LEXP .)
    like            reduce using rule 112 (COMBINING -> union all LEXP .)
    parc            reduce using rule 112 (COMBINING -> union all LEXP .)
    then            reduce using rule 112 (COMBINING -> union all LEXP .)
    end             reduce using rule 112 (COMBINING -> union all LEXP .)
    else            reduce using rule 112 (COMBINING -> union all LEXP .)
    when            reduce using rule 112 (COMBINING -> union all LEXP .)
    constraint      reduce using rule 112 (COMBINING -> union all LEXP .)
    unique          reduce using rule 112 (COMBINING -> union all LEXP .)
    check           reduce using rule 112 (COMBINING -> union all LEXP .)
    default         reduce using rule 112 (COMBINING -> union all LEXP .)
    null            reduce using rule 112 (COMBINING -> union all LEXP .)
    primary         reduce using rule 112 (COMBINING -> union all LEXP .)
    references      reduce using rule 112 (COMBINING -> union all LEXP .)
    asc             reduce using rule 112 (COMBINING -> union all LEXP .)
    desc            reduce using rule 112 (COMBINING -> union all LEXP .)
    coma            shift and go to state 84

  ! coma            [ reduce using rule 112 (COMBINING -> union all LEXP .) ]


state 433

    (114) COMBINING -> intersect all LEXP .
    (134) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 114 (COMBINING -> intersect all LEXP .)
    where           reduce using rule 114 (COMBINING -> intersect all LEXP .)
    union           reduce using rule 114 (COMBINING -> intersect all LEXP .)
    group           reduce using rule 114 (COMBINING -> intersect all LEXP .)
    having          reduce using rule 114 (COMBINING -> intersect all LEXP .)
    intersect       reduce using rule 114 (COMBINING -> intersect all LEXP .)
    except          reduce using rule 114 (COMBINING -> intersect all LEXP .)
    order           reduce using rule 114 (COMBINING -> intersect all LEXP .)
    limit           reduce using rule 114 (COMBINING -> intersect all LEXP .)
    offset          reduce using rule 114 (COMBINING -> intersect all LEXP .)
    ptcoma          reduce using rule 114 (COMBINING -> intersect all LEXP .)
    mas             reduce using rule 114 (COMBINING -> intersect all LEXP .)
    menos           reduce using rule 114 (COMBINING -> intersect all LEXP .)
    multiplicacion  reduce using rule 114 (COMBINING -> intersect all LEXP .)
    division        reduce using rule 114 (COMBINING -> intersect all LEXP .)
    modulo          reduce using rule 114 (COMBINING -> intersect all LEXP .)
    elevado         reduce using rule 114 (COMBINING -> intersect all LEXP .)
    and             reduce using rule 114 (COMBINING -> intersect all LEXP .)
    or              reduce using rule 114 (COMBINING -> intersect all LEXP .)
    mayor           reduce using rule 114 (COMBINING -> intersect all LEXP .)
    menor           reduce using rule 114 (COMBINING -> intersect all LEXP .)
    mayor_igual     reduce using rule 114 (COMBINING -> intersect all LEXP .)
    menor_igual     reduce using rule 114 (COMBINING -> intersect all LEXP .)
    igual           reduce using rule 114 (COMBINING -> intersect all LEXP .)
    diferente1      reduce using rule 114 (COMBINING -> intersect all LEXP .)
    diferente2      reduce using rule 114 (COMBINING -> intersect all LEXP .)
    punto           reduce using rule 114 (COMBINING -> intersect all LEXP .)
    between         reduce using rule 114 (COMBINING -> intersect all LEXP .)
    is              reduce using rule 114 (COMBINING -> intersect all LEXP .)
    isnull          reduce using rule 114 (COMBINING -> intersect all LEXP .)
    notnull         reduce using rule 114 (COMBINING -> intersect all LEXP .)
    as              reduce using rule 114 (COMBINING -> intersect all LEXP .)
    cadenaString    reduce using rule 114 (COMBINING -> intersect all LEXP .)
    id              reduce using rule 114 (COMBINING -> intersect all LEXP .)
    cadena          reduce using rule 114 (COMBINING -> intersect all LEXP .)
    in              reduce using rule 114 (COMBINING -> intersect all LEXP .)
    not             reduce using rule 114 (COMBINING -> intersect all LEXP .)
    like            reduce using rule 114 (COMBINING -> intersect all LEXP .)
    parc            reduce using rule 114 (COMBINING -> intersect all LEXP .)
    then            reduce using rule 114 (COMBINING -> intersect all LEXP .)
    end             reduce using rule 114 (COMBINING -> intersect all LEXP .)
    else            reduce using rule 114 (COMBINING -> intersect all LEXP .)
    when            reduce using rule 114 (COMBINING -> intersect all LEXP .)
    constraint      reduce using rule 114 (COMBINING -> intersect all LEXP .)
    unique          reduce using rule 114 (COMBINING -> intersect all LEXP .)
    check           reduce using rule 114 (COMBINING -> intersect all LEXP .)
    default         reduce using rule 114 (COMBINING -> intersect all LEXP .)
    null            reduce using rule 114 (COMBINING -> intersect all LEXP .)
    primary         reduce using rule 114 (COMBINING -> intersect all LEXP .)
    references      reduce using rule 114 (COMBINING -> intersect all LEXP .)
    asc             reduce using rule 114 (COMBINING -> intersect all LEXP .)
    desc            reduce using rule 114 (COMBINING -> intersect all LEXP .)
    coma            shift and go to state 84

  ! coma            [ reduce using rule 114 (COMBINING -> intersect all LEXP .) ]


state 434

    (116) COMBINING -> except all LEXP .
    (134) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 116 (COMBINING -> except all LEXP .)
    where           reduce using rule 116 (COMBINING -> except all LEXP .)
    union           reduce using rule 116 (COMBINING -> except all LEXP .)
    group           reduce using rule 116 (COMBINING -> except all LEXP .)
    having          reduce using rule 116 (COMBINING -> except all LEXP .)
    intersect       reduce using rule 116 (COMBINING -> except all LEXP .)
    except          reduce using rule 116 (COMBINING -> except all LEXP .)
    order           reduce using rule 116 (COMBINING -> except all LEXP .)
    limit           reduce using rule 116 (COMBINING -> except all LEXP .)
    offset          reduce using rule 116 (COMBINING -> except all LEXP .)
    ptcoma          reduce using rule 116 (COMBINING -> except all LEXP .)
    mas             reduce using rule 116 (COMBINING -> except all LEXP .)
    menos           reduce using rule 116 (COMBINING -> except all LEXP .)
    multiplicacion  reduce using rule 116 (COMBINING -> except all LEXP .)
    division        reduce using rule 116 (COMBINING -> except all LEXP .)
    modulo          reduce using rule 116 (COMBINING -> except all LEXP .)
    elevado         reduce using rule 116 (COMBINING -> except all LEXP .)
    and             reduce using rule 116 (COMBINING -> except all LEXP .)
    or              reduce using rule 116 (COMBINING -> except all LEXP .)
    mayor           reduce using rule 116 (COMBINING -> except all LEXP .)
    menor           reduce using rule 116 (COMBINING -> except all LEXP .)
    mayor_igual     reduce using rule 116 (COMBINING -> except all LEXP .)
    menor_igual     reduce using rule 116 (COMBINING -> except all LEXP .)
    igual           reduce using rule 116 (COMBINING -> except all LEXP .)
    diferente1      reduce using rule 116 (COMBINING -> except all LEXP .)
    diferente2      reduce using rule 116 (COMBINING -> except all LEXP .)
    punto           reduce using rule 116 (COMBINING -> except all LEXP .)
    between         reduce using rule 116 (COMBINING -> except all LEXP .)
    is              reduce using rule 116 (COMBINING -> except all LEXP .)
    isnull          reduce using rule 116 (COMBINING -> except all LEXP .)
    notnull         reduce using rule 116 (COMBINING -> except all LEXP .)
    as              reduce using rule 116 (COMBINING -> except all LEXP .)
    cadenaString    reduce using rule 116 (COMBINING -> except all LEXP .)
    id              reduce using rule 116 (COMBINING -> except all LEXP .)
    cadena          reduce using rule 116 (COMBINING -> except all LEXP .)
    in              reduce using rule 116 (COMBINING -> except all LEXP .)
    not             reduce using rule 116 (COMBINING -> except all LEXP .)
    like            reduce using rule 116 (COMBINING -> except all LEXP .)
    parc            reduce using rule 116 (COMBINING -> except all LEXP .)
    then            reduce using rule 116 (COMBINING -> except all LEXP .)
    end             reduce using rule 116 (COMBINING -> except all LEXP .)
    else            reduce using rule 116 (COMBINING -> except all LEXP .)
    when            reduce using rule 116 (COMBINING -> except all LEXP .)
    constraint      reduce using rule 116 (COMBINING -> except all LEXP .)
    unique          reduce using rule 116 (COMBINING -> except all LEXP .)
    check           reduce using rule 116 (COMBINING -> except all LEXP .)
    default         reduce using rule 116 (COMBINING -> except all LEXP .)
    null            reduce using rule 116 (COMBINING -> except all LEXP .)
    primary         reduce using rule 116 (COMBINING -> except all LEXP .)
    references      reduce using rule 116 (COMBINING -> except all LEXP .)
    asc             reduce using rule 116 (COMBINING -> except all LEXP .)
    desc            reduce using rule 116 (COMBINING -> except all LEXP .)
    coma            shift and go to state 84

  ! coma            [ reduce using rule 116 (COMBINING -> except all LEXP .) ]


state 435

    (133) EXIST -> not exist para SELECT parc .

    r_from          reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    coma            reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    where           reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    union           reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    group           reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    having          reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    intersect       reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    except          reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    order           reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    limit           reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    offset          reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    ptcoma          reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    mas             reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    menos           reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    multiplicacion  reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    division        reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    modulo          reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    elevado         reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    and             reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    or              reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    mayor           reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    menor           reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    mayor_igual     reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    menor_igual     reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    igual           reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    diferente1      reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    diferente2      reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    punto           reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    between         reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    is              reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    isnull          reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    notnull         reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    as              reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    cadenaString    reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    id              reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    cadena          reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    in              reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    not             reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    like            reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    parc            reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    then            reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    end             reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    else            reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    when            reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    constraint      reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    unique          reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    check           reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    default         reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    null            reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    primary         reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    references      reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    asc             reduce using rule 133 (EXIST -> not exist para SELECT parc .)
    desc            reduce using rule 133 (EXIST -> not exist para SELECT parc .)


state 436

    (230) EXP -> extract para FIELDS r_from timestamp cadena parc .

    r_from          reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    coma            reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    where           reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    union           reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    group           reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    having          reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    intersect       reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    except          reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    order           reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    limit           reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    offset          reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    ptcoma          reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    mas             reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    menos           reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    multiplicacion  reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    division        reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    modulo          reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    elevado         reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    and             reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    or              reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    mayor           reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    menor           reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    mayor_igual     reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    menor_igual     reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    igual           reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    diferente1      reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    diferente2      reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    punto           reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    between         reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    is              reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    isnull          reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    notnull         reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    as              reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    cadenaString    reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    id              reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    cadena          reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    in              reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    not             reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    like            reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    parc            reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    then            reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    end             reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    else            reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    when            reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    constraint      reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    unique          reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    check           reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    default         reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    null            reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    primary         reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    references      reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    asc             reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    desc            reduce using rule 230 (EXP -> extract para FIELDS r_from timestamp cadena parc .)


state 437

    (78) LOPCOLUMN -> LOPCOLUMN OPCOLUMN .

    constraint      reduce using rule 78 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    unique          reduce using rule 78 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    check           reduce using rule 78 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    default         reduce using rule 78 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    not             reduce using rule 78 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    null            reduce using rule 78 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    primary         reduce using rule 78 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    references      reduce using rule 78 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    parc            reduce using rule 78 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    coma            reduce using rule 78 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)


state 438

    (80) OPCOLUMN -> constraint id . unique
    (82) OPCOLUMN -> constraint id . check para EXP parc

    unique          shift and go to state 480
    check           shift and go to state 481


state 439

    (83) OPCOLUMN -> check para . EXP parc
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    EXP                            shift and go to state 482
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 440

    (84) OPCOLUMN -> default EXP .
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

  ! shift/reduce conflict for not resolved as shift
    constraint      reduce using rule 84 (OPCOLUMN -> default EXP .)
    unique          reduce using rule 84 (OPCOLUMN -> default EXP .)
    check           reduce using rule 84 (OPCOLUMN -> default EXP .)
    default         reduce using rule 84 (OPCOLUMN -> default EXP .)
    null            reduce using rule 84 (OPCOLUMN -> default EXP .)
    primary         reduce using rule 84 (OPCOLUMN -> default EXP .)
    references      reduce using rule 84 (OPCOLUMN -> default EXP .)
    parc            reduce using rule 84 (OPCOLUMN -> default EXP .)
    coma            reduce using rule 84 (OPCOLUMN -> default EXP .)
    mas             shift and go to state 87
    menos           shift and go to state 88
    multiplicacion  shift and go to state 89
    division        shift and go to state 90
    modulo          shift and go to state 91
    elevado         shift and go to state 92
    and             shift and go to state 93
    or              shift and go to state 94
    mayor           shift and go to state 95
    menor           shift and go to state 96
    mayor_igual     shift and go to state 97
    menor_igual     shift and go to state 98
    igual           shift and go to state 99
    diferente1      shift and go to state 100
    diferente2      shift and go to state 101
    punto           shift and go to state 102
    between         shift and go to state 103
    is              shift and go to state 104
    isnull          shift and go to state 106
    notnull         shift and go to state 107
    as              shift and go to state 108
    cadenaString    shift and go to state 109
    id              shift and go to state 110
    cadena          shift and go to state 111
    in              shift and go to state 112
    not             shift and go to state 105
    like            shift and go to state 113

  ! not             [ reduce using rule 84 (OPCOLUMN -> default EXP .) ]


state 441

    (85) OPCOLUMN -> not null .

    constraint      reduce using rule 85 (OPCOLUMN -> not null .)
    unique          reduce using rule 85 (OPCOLUMN -> not null .)
    check           reduce using rule 85 (OPCOLUMN -> not null .)
    default         reduce using rule 85 (OPCOLUMN -> not null .)
    not             reduce using rule 85 (OPCOLUMN -> not null .)
    null            reduce using rule 85 (OPCOLUMN -> not null .)
    primary         reduce using rule 85 (OPCOLUMN -> not null .)
    references      reduce using rule 85 (OPCOLUMN -> not null .)
    parc            reduce using rule 85 (OPCOLUMN -> not null .)
    coma            reduce using rule 85 (OPCOLUMN -> not null .)


state 442

    (87) OPCOLUMN -> primary key .

    constraint      reduce using rule 87 (OPCOLUMN -> primary key .)
    unique          reduce using rule 87 (OPCOLUMN -> primary key .)
    check           reduce using rule 87 (OPCOLUMN -> primary key .)
    default         reduce using rule 87 (OPCOLUMN -> primary key .)
    not             reduce using rule 87 (OPCOLUMN -> primary key .)
    null            reduce using rule 87 (OPCOLUMN -> primary key .)
    primary         reduce using rule 87 (OPCOLUMN -> primary key .)
    references      reduce using rule 87 (OPCOLUMN -> primary key .)
    parc            reduce using rule 87 (OPCOLUMN -> primary key .)
    coma            reduce using rule 87 (OPCOLUMN -> primary key .)


state 443

    (88) OPCOLUMN -> references id .

    constraint      reduce using rule 88 (OPCOLUMN -> references id .)
    unique          reduce using rule 88 (OPCOLUMN -> references id .)
    check           reduce using rule 88 (OPCOLUMN -> references id .)
    default         reduce using rule 88 (OPCOLUMN -> references id .)
    not             reduce using rule 88 (OPCOLUMN -> references id .)
    null            reduce using rule 88 (OPCOLUMN -> references id .)
    primary         reduce using rule 88 (OPCOLUMN -> references id .)
    references      reduce using rule 88 (OPCOLUMN -> references id .)
    parc            reduce using rule 88 (OPCOLUMN -> references id .)
    coma            reduce using rule 88 (OPCOLUMN -> references id .)


state 444

    (146) TIPO -> interval para int . parc
    (154) TIPO -> interval para int . parc cadena

    parc            shift and go to state 483


state 445

    (137) TIPO -> decimal para int . coma int parc
    (138) TIPO -> decimal para int . parc

    coma            shift and go to state 484
    parc            shift and go to state 485


state 446

    (140) TIPO -> numeric para int . coma int parc
    (141) TIPO -> numeric para int . parc

    coma            shift and go to state 486
    parc            shift and go to state 487


state 447

    (143) TIPO -> varchar para int . parc

    parc            shift and go to state 488


state 448

    (144) TIPO -> timestamp para int . parc
    (150) TIPO -> timestamp para int . parc without time zone
    (151) TIPO -> timestamp para int . parc with time zone

    parc            shift and go to state 489


state 449

    (167) TIPO -> timestamp without time . zone

    zone            shift and go to state 490


state 450

    (168) TIPO -> timestamp with time . zone

    zone            shift and go to state 491


state 451

    (145) TIPO -> character para int . parc

    parc            shift and go to state 492


state 452

    (149) TIPO -> character varying para . int parc

    int             shift and go to state 493


state 453

    (147) TIPO -> char para int . parc

    parc            shift and go to state 494


state 454

    (148) TIPO -> time para int . parc
    (152) TIPO -> time para int . parc without time zone
    (153) TIPO -> time para int . parc with time zone

    parc            shift and go to state 495


state 455

    (169) TIPO -> time without time . zone

    zone            shift and go to state 496


state 456

    (170) TIPO -> time with time . zone

    zone            shift and go to state 497


state 457

    (69) CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .

    use             reduce using rule 69 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    select          reduce using rule 69 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    create          reduce using rule 69 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    update          reduce using rule 69 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    delete          reduce using rule 69 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    alter           reduce using rule 69 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    drop            reduce using rule 69 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    insert          reduce using rule 69 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    case            reduce using rule 69 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    show            reduce using rule 69 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    $end            reduce using rule 69 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)


state 458

    (93) HERENCIA -> inherits para . LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 498
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 459

    (89) OPCONST -> primary key para LEXP . parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 499
    coma            shift and go to state 84


state 460

    (90) OPCONST -> foreign key para LEXP . parc references id para LEXP parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 500
    coma            shift and go to state 84


state 461

    (91) OPCONST -> unique para LEXP parc .

    parc            reduce using rule 91 (OPCONST -> unique para LEXP parc .)
    coma            reduce using rule 91 (OPCONST -> unique para LEXP parc .)


state 462

    (92) OPCONST -> check para LEXP parc .

    parc            reduce using rule 92 (OPCONST -> check para LEXP parc .)
    coma            reduce using rule 92 (OPCONST -> check para LEXP parc .)


state 463

    (94) CREATETYPE -> create type id as enum para LEXP parc .

    ptcoma          reduce using rule 94 (CREATETYPE -> create type id as enum para LEXP parc .)


state 464

    (34) OP -> alter column id set not . null

    null            shift and go to state 501


state 465

    (35) OP -> alter column id set null .

    ptcoma          reduce using rule 35 (OP -> alter column id set null .)


state 466

    (41) alc -> alter column id type TIPO .

    coma            reduce using rule 41 (alc -> alter column id type TIPO .)
    ptcoma          reduce using rule 41 (alc -> alter column id type TIPO .)


state 467

    (46) ADD -> check para LEXP parc .

    ptcoma          reduce using rule 46 (ADD -> check para LEXP parc .)


state 468

    (47) ADD -> constraint id unique para . id parc

    id              shift and go to state 502


state 469

    (49) ADD -> constraint id foreign key . para LEXP parc references id para LEXP parc

    para            shift and go to state 503


state 470

    (48) ADD -> foreign key para LEXP . parc references id para LEXP parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 504
    coma            shift and go to state 84


state 471

    (41) alc -> alter column id . type TIPO

    type            shift and go to state 416


state 472

    (38) OP -> rename column id to id .

    ptcoma          reduce using rule 38 (OP -> rename column id to id .)


state 473

    (23) INSERT -> insert into id para LEXP parc values para . LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 505
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 474

    (95) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING . ORDER LIMIT
    (122) ORDER -> . order by LEXP ORD
    (123) ORDER -> . order by LEXP
    (124) ORDER -> .

  ! shift/reduce conflict for order resolved as shift
    order           shift and go to state 365
    r_from          reduce using rule 124 (ORDER -> .)
    coma            reduce using rule 124 (ORDER -> .)
    where           reduce using rule 124 (ORDER -> .)
    union           reduce using rule 124 (ORDER -> .)
    group           reduce using rule 124 (ORDER -> .)
    having          reduce using rule 124 (ORDER -> .)
    intersect       reduce using rule 124 (ORDER -> .)
    except          reduce using rule 124 (ORDER -> .)
    limit           reduce using rule 124 (ORDER -> .)
    offset          reduce using rule 124 (ORDER -> .)
    ptcoma          reduce using rule 124 (ORDER -> .)
    mas             reduce using rule 124 (ORDER -> .)
    menos           reduce using rule 124 (ORDER -> .)
    multiplicacion  reduce using rule 124 (ORDER -> .)
    division        reduce using rule 124 (ORDER -> .)
    modulo          reduce using rule 124 (ORDER -> .)
    elevado         reduce using rule 124 (ORDER -> .)
    and             reduce using rule 124 (ORDER -> .)
    or              reduce using rule 124 (ORDER -> .)
    mayor           reduce using rule 124 (ORDER -> .)
    menor           reduce using rule 124 (ORDER -> .)
    mayor_igual     reduce using rule 124 (ORDER -> .)
    menor_igual     reduce using rule 124 (ORDER -> .)
    igual           reduce using rule 124 (ORDER -> .)
    diferente1      reduce using rule 124 (ORDER -> .)
    diferente2      reduce using rule 124 (ORDER -> .)
    punto           reduce using rule 124 (ORDER -> .)
    between         reduce using rule 124 (ORDER -> .)
    is              reduce using rule 124 (ORDER -> .)
    isnull          reduce using rule 124 (ORDER -> .)
    notnull         reduce using rule 124 (ORDER -> .)
    as              reduce using rule 124 (ORDER -> .)
    cadenaString    reduce using rule 124 (ORDER -> .)
    id              reduce using rule 124 (ORDER -> .)
    cadena          reduce using rule 124 (ORDER -> .)
    in              reduce using rule 124 (ORDER -> .)
    not             reduce using rule 124 (ORDER -> .)
    like            reduce using rule 124 (ORDER -> .)
    parc            reduce using rule 124 (ORDER -> .)
    then            reduce using rule 124 (ORDER -> .)
    end             reduce using rule 124 (ORDER -> .)
    else            reduce using rule 124 (ORDER -> .)
    when            reduce using rule 124 (ORDER -> .)
    constraint      reduce using rule 124 (ORDER -> .)
    unique          reduce using rule 124 (ORDER -> .)
    check           reduce using rule 124 (ORDER -> .)
    default         reduce using rule 124 (ORDER -> .)
    null            reduce using rule 124 (ORDER -> .)
    primary         reduce using rule 124 (ORDER -> .)
    references      reduce using rule 124 (ORDER -> .)
    asc             reduce using rule 124 (ORDER -> .)
    desc            reduce using rule 124 (ORDER -> .)

  ! order           [ reduce using rule 124 (ORDER -> .) ]

    ORDER                          shift and go to state 506

state 475

    (96) SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER . LIMIT
    (98) LIMIT -> . limit int
    (99) LIMIT -> . limit all
    (100) LIMIT -> . offset int
    (101) LIMIT -> . limit int offset int
    (102) LIMIT -> . offset int limit int
    (103) LIMIT -> . limit all offset int
    (104) LIMIT -> . offset int limit all
    (105) LIMIT -> .

  ! shift/reduce conflict for limit resolved as shift
  ! shift/reduce conflict for offset resolved as shift
    limit           shift and go to state 429
    offset          shift and go to state 430
    ptcoma          reduce using rule 105 (LIMIT -> .)
    r_from          reduce using rule 105 (LIMIT -> .)
    coma            reduce using rule 105 (LIMIT -> .)
    where           reduce using rule 105 (LIMIT -> .)
    union           reduce using rule 105 (LIMIT -> .)
    group           reduce using rule 105 (LIMIT -> .)
    having          reduce using rule 105 (LIMIT -> .)
    intersect       reduce using rule 105 (LIMIT -> .)
    except          reduce using rule 105 (LIMIT -> .)
    order           reduce using rule 105 (LIMIT -> .)
    mas             reduce using rule 105 (LIMIT -> .)
    menos           reduce using rule 105 (LIMIT -> .)
    multiplicacion  reduce using rule 105 (LIMIT -> .)
    division        reduce using rule 105 (LIMIT -> .)
    modulo          reduce using rule 105 (LIMIT -> .)
    elevado         reduce using rule 105 (LIMIT -> .)
    and             reduce using rule 105 (LIMIT -> .)
    or              reduce using rule 105 (LIMIT -> .)
    mayor           reduce using rule 105 (LIMIT -> .)
    menor           reduce using rule 105 (LIMIT -> .)
    mayor_igual     reduce using rule 105 (LIMIT -> .)
    menor_igual     reduce using rule 105 (LIMIT -> .)
    igual           reduce using rule 105 (LIMIT -> .)
    diferente1      reduce using rule 105 (LIMIT -> .)
    diferente2      reduce using rule 105 (LIMIT -> .)
    punto           reduce using rule 105 (LIMIT -> .)
    between         reduce using rule 105 (LIMIT -> .)
    is              reduce using rule 105 (LIMIT -> .)
    isnull          reduce using rule 105 (LIMIT -> .)
    notnull         reduce using rule 105 (LIMIT -> .)
    as              reduce using rule 105 (LIMIT -> .)
    cadenaString    reduce using rule 105 (LIMIT -> .)
    id              reduce using rule 105 (LIMIT -> .)
    cadena          reduce using rule 105 (LIMIT -> .)
    in              reduce using rule 105 (LIMIT -> .)
    not             reduce using rule 105 (LIMIT -> .)
    like            reduce using rule 105 (LIMIT -> .)
    parc            reduce using rule 105 (LIMIT -> .)
    then            reduce using rule 105 (LIMIT -> .)
    end             reduce using rule 105 (LIMIT -> .)
    else            reduce using rule 105 (LIMIT -> .)
    when            reduce using rule 105 (LIMIT -> .)
    constraint      reduce using rule 105 (LIMIT -> .)
    unique          reduce using rule 105 (LIMIT -> .)
    check           reduce using rule 105 (LIMIT -> .)
    default         reduce using rule 105 (LIMIT -> .)
    null            reduce using rule 105 (LIMIT -> .)
    primary         reduce using rule 105 (LIMIT -> .)
    references      reduce using rule 105 (LIMIT -> .)
    asc             reduce using rule 105 (LIMIT -> .)
    desc            reduce using rule 105 (LIMIT -> .)

  ! limit           [ reduce using rule 105 (LIMIT -> .) ]
  ! offset          [ reduce using rule 105 (LIMIT -> .) ]

    LIMIT                          shift and go to state 507

state 476

    (98) LIMIT -> limit int .
    (101) LIMIT -> limit int . offset int

  ! shift/reduce conflict for offset resolved as shift
    ptcoma          reduce using rule 98 (LIMIT -> limit int .)
    r_from          reduce using rule 98 (LIMIT -> limit int .)
    coma            reduce using rule 98 (LIMIT -> limit int .)
    where           reduce using rule 98 (LIMIT -> limit int .)
    union           reduce using rule 98 (LIMIT -> limit int .)
    group           reduce using rule 98 (LIMIT -> limit int .)
    having          reduce using rule 98 (LIMIT -> limit int .)
    intersect       reduce using rule 98 (LIMIT -> limit int .)
    except          reduce using rule 98 (LIMIT -> limit int .)
    order           reduce using rule 98 (LIMIT -> limit int .)
    limit           reduce using rule 98 (LIMIT -> limit int .)
    mas             reduce using rule 98 (LIMIT -> limit int .)
    menos           reduce using rule 98 (LIMIT -> limit int .)
    multiplicacion  reduce using rule 98 (LIMIT -> limit int .)
    division        reduce using rule 98 (LIMIT -> limit int .)
    modulo          reduce using rule 98 (LIMIT -> limit int .)
    elevado         reduce using rule 98 (LIMIT -> limit int .)
    and             reduce using rule 98 (LIMIT -> limit int .)
    or              reduce using rule 98 (LIMIT -> limit int .)
    mayor           reduce using rule 98 (LIMIT -> limit int .)
    menor           reduce using rule 98 (LIMIT -> limit int .)
    mayor_igual     reduce using rule 98 (LIMIT -> limit int .)
    menor_igual     reduce using rule 98 (LIMIT -> limit int .)
    igual           reduce using rule 98 (LIMIT -> limit int .)
    diferente1      reduce using rule 98 (LIMIT -> limit int .)
    diferente2      reduce using rule 98 (LIMIT -> limit int .)
    punto           reduce using rule 98 (LIMIT -> limit int .)
    between         reduce using rule 98 (LIMIT -> limit int .)
    is              reduce using rule 98 (LIMIT -> limit int .)
    isnull          reduce using rule 98 (LIMIT -> limit int .)
    notnull         reduce using rule 98 (LIMIT -> limit int .)
    as              reduce using rule 98 (LIMIT -> limit int .)
    cadenaString    reduce using rule 98 (LIMIT -> limit int .)
    id              reduce using rule 98 (LIMIT -> limit int .)
    cadena          reduce using rule 98 (LIMIT -> limit int .)
    in              reduce using rule 98 (LIMIT -> limit int .)
    not             reduce using rule 98 (LIMIT -> limit int .)
    like            reduce using rule 98 (LIMIT -> limit int .)
    parc            reduce using rule 98 (LIMIT -> limit int .)
    then            reduce using rule 98 (LIMIT -> limit int .)
    end             reduce using rule 98 (LIMIT -> limit int .)
    else            reduce using rule 98 (LIMIT -> limit int .)
    when            reduce using rule 98 (LIMIT -> limit int .)
    constraint      reduce using rule 98 (LIMIT -> limit int .)
    unique          reduce using rule 98 (LIMIT -> limit int .)
    check           reduce using rule 98 (LIMIT -> limit int .)
    default         reduce using rule 98 (LIMIT -> limit int .)
    null            reduce using rule 98 (LIMIT -> limit int .)
    primary         reduce using rule 98 (LIMIT -> limit int .)
    references      reduce using rule 98 (LIMIT -> limit int .)
    asc             reduce using rule 98 (LIMIT -> limit int .)
    desc            reduce using rule 98 (LIMIT -> limit int .)
    offset          shift and go to state 508

  ! offset          [ reduce using rule 98 (LIMIT -> limit int .) ]


state 477

    (99) LIMIT -> limit all .
    (103) LIMIT -> limit all . offset int

  ! shift/reduce conflict for offset resolved as shift
    ptcoma          reduce using rule 99 (LIMIT -> limit all .)
    r_from          reduce using rule 99 (LIMIT -> limit all .)
    coma            reduce using rule 99 (LIMIT -> limit all .)
    where           reduce using rule 99 (LIMIT -> limit all .)
    union           reduce using rule 99 (LIMIT -> limit all .)
    group           reduce using rule 99 (LIMIT -> limit all .)
    having          reduce using rule 99 (LIMIT -> limit all .)
    intersect       reduce using rule 99 (LIMIT -> limit all .)
    except          reduce using rule 99 (LIMIT -> limit all .)
    order           reduce using rule 99 (LIMIT -> limit all .)
    limit           reduce using rule 99 (LIMIT -> limit all .)
    mas             reduce using rule 99 (LIMIT -> limit all .)
    menos           reduce using rule 99 (LIMIT -> limit all .)
    multiplicacion  reduce using rule 99 (LIMIT -> limit all .)
    division        reduce using rule 99 (LIMIT -> limit all .)
    modulo          reduce using rule 99 (LIMIT -> limit all .)
    elevado         reduce using rule 99 (LIMIT -> limit all .)
    and             reduce using rule 99 (LIMIT -> limit all .)
    or              reduce using rule 99 (LIMIT -> limit all .)
    mayor           reduce using rule 99 (LIMIT -> limit all .)
    menor           reduce using rule 99 (LIMIT -> limit all .)
    mayor_igual     reduce using rule 99 (LIMIT -> limit all .)
    menor_igual     reduce using rule 99 (LIMIT -> limit all .)
    igual           reduce using rule 99 (LIMIT -> limit all .)
    diferente1      reduce using rule 99 (LIMIT -> limit all .)
    diferente2      reduce using rule 99 (LIMIT -> limit all .)
    punto           reduce using rule 99 (LIMIT -> limit all .)
    between         reduce using rule 99 (LIMIT -> limit all .)
    is              reduce using rule 99 (LIMIT -> limit all .)
    isnull          reduce using rule 99 (LIMIT -> limit all .)
    notnull         reduce using rule 99 (LIMIT -> limit all .)
    as              reduce using rule 99 (LIMIT -> limit all .)
    cadenaString    reduce using rule 99 (LIMIT -> limit all .)
    id              reduce using rule 99 (LIMIT -> limit all .)
    cadena          reduce using rule 99 (LIMIT -> limit all .)
    in              reduce using rule 99 (LIMIT -> limit all .)
    not             reduce using rule 99 (LIMIT -> limit all .)
    like            reduce using rule 99 (LIMIT -> limit all .)
    parc            reduce using rule 99 (LIMIT -> limit all .)
    then            reduce using rule 99 (LIMIT -> limit all .)
    end             reduce using rule 99 (LIMIT -> limit all .)
    else            reduce using rule 99 (LIMIT -> limit all .)
    when            reduce using rule 99 (LIMIT -> limit all .)
    constraint      reduce using rule 99 (LIMIT -> limit all .)
    unique          reduce using rule 99 (LIMIT -> limit all .)
    check           reduce using rule 99 (LIMIT -> limit all .)
    default         reduce using rule 99 (LIMIT -> limit all .)
    null            reduce using rule 99 (LIMIT -> limit all .)
    primary         reduce using rule 99 (LIMIT -> limit all .)
    references      reduce using rule 99 (LIMIT -> limit all .)
    asc             reduce using rule 99 (LIMIT -> limit all .)
    desc            reduce using rule 99 (LIMIT -> limit all .)
    offset          shift and go to state 509

  ! offset          [ reduce using rule 99 (LIMIT -> limit all .) ]


state 478

    (100) LIMIT -> offset int .
    (102) LIMIT -> offset int . limit int
    (104) LIMIT -> offset int . limit all

  ! shift/reduce conflict for limit resolved as shift
    ptcoma          reduce using rule 100 (LIMIT -> offset int .)
    r_from          reduce using rule 100 (LIMIT -> offset int .)
    coma            reduce using rule 100 (LIMIT -> offset int .)
    where           reduce using rule 100 (LIMIT -> offset int .)
    union           reduce using rule 100 (LIMIT -> offset int .)
    group           reduce using rule 100 (LIMIT -> offset int .)
    having          reduce using rule 100 (LIMIT -> offset int .)
    intersect       reduce using rule 100 (LIMIT -> offset int .)
    except          reduce using rule 100 (LIMIT -> offset int .)
    order           reduce using rule 100 (LIMIT -> offset int .)
    offset          reduce using rule 100 (LIMIT -> offset int .)
    mas             reduce using rule 100 (LIMIT -> offset int .)
    menos           reduce using rule 100 (LIMIT -> offset int .)
    multiplicacion  reduce using rule 100 (LIMIT -> offset int .)
    division        reduce using rule 100 (LIMIT -> offset int .)
    modulo          reduce using rule 100 (LIMIT -> offset int .)
    elevado         reduce using rule 100 (LIMIT -> offset int .)
    and             reduce using rule 100 (LIMIT -> offset int .)
    or              reduce using rule 100 (LIMIT -> offset int .)
    mayor           reduce using rule 100 (LIMIT -> offset int .)
    menor           reduce using rule 100 (LIMIT -> offset int .)
    mayor_igual     reduce using rule 100 (LIMIT -> offset int .)
    menor_igual     reduce using rule 100 (LIMIT -> offset int .)
    igual           reduce using rule 100 (LIMIT -> offset int .)
    diferente1      reduce using rule 100 (LIMIT -> offset int .)
    diferente2      reduce using rule 100 (LIMIT -> offset int .)
    punto           reduce using rule 100 (LIMIT -> offset int .)
    between         reduce using rule 100 (LIMIT -> offset int .)
    is              reduce using rule 100 (LIMIT -> offset int .)
    isnull          reduce using rule 100 (LIMIT -> offset int .)
    notnull         reduce using rule 100 (LIMIT -> offset int .)
    as              reduce using rule 100 (LIMIT -> offset int .)
    cadenaString    reduce using rule 100 (LIMIT -> offset int .)
    id              reduce using rule 100 (LIMIT -> offset int .)
    cadena          reduce using rule 100 (LIMIT -> offset int .)
    in              reduce using rule 100 (LIMIT -> offset int .)
    not             reduce using rule 100 (LIMIT -> offset int .)
    like            reduce using rule 100 (LIMIT -> offset int .)
    parc            reduce using rule 100 (LIMIT -> offset int .)
    then            reduce using rule 100 (LIMIT -> offset int .)
    end             reduce using rule 100 (LIMIT -> offset int .)
    else            reduce using rule 100 (LIMIT -> offset int .)
    when            reduce using rule 100 (LIMIT -> offset int .)
    constraint      reduce using rule 100 (LIMIT -> offset int .)
    unique          reduce using rule 100 (LIMIT -> offset int .)
    check           reduce using rule 100 (LIMIT -> offset int .)
    default         reduce using rule 100 (LIMIT -> offset int .)
    null            reduce using rule 100 (LIMIT -> offset int .)
    primary         reduce using rule 100 (LIMIT -> offset int .)
    references      reduce using rule 100 (LIMIT -> offset int .)
    asc             reduce using rule 100 (LIMIT -> offset int .)
    desc            reduce using rule 100 (LIMIT -> offset int .)
    limit           shift and go to state 510

  ! limit           [ reduce using rule 100 (LIMIT -> offset int .) ]


state 479

    (122) ORDER -> order by LEXP . ORD
    (123) ORDER -> order by LEXP .
    (134) LEXP -> LEXP . coma EXP
    (125) ORD -> . asc
    (126) ORD -> . desc

  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for asc resolved as shift
  ! shift/reduce conflict for desc resolved as shift
    r_from          reduce using rule 123 (ORDER -> order by LEXP .)
    where           reduce using rule 123 (ORDER -> order by LEXP .)
    union           reduce using rule 123 (ORDER -> order by LEXP .)
    group           reduce using rule 123 (ORDER -> order by LEXP .)
    having          reduce using rule 123 (ORDER -> order by LEXP .)
    intersect       reduce using rule 123 (ORDER -> order by LEXP .)
    except          reduce using rule 123 (ORDER -> order by LEXP .)
    order           reduce using rule 123 (ORDER -> order by LEXP .)
    limit           reduce using rule 123 (ORDER -> order by LEXP .)
    offset          reduce using rule 123 (ORDER -> order by LEXP .)
    ptcoma          reduce using rule 123 (ORDER -> order by LEXP .)
    mas             reduce using rule 123 (ORDER -> order by LEXP .)
    menos           reduce using rule 123 (ORDER -> order by LEXP .)
    multiplicacion  reduce using rule 123 (ORDER -> order by LEXP .)
    division        reduce using rule 123 (ORDER -> order by LEXP .)
    modulo          reduce using rule 123 (ORDER -> order by LEXP .)
    elevado         reduce using rule 123 (ORDER -> order by LEXP .)
    and             reduce using rule 123 (ORDER -> order by LEXP .)
    or              reduce using rule 123 (ORDER -> order by LEXP .)
    mayor           reduce using rule 123 (ORDER -> order by LEXP .)
    menor           reduce using rule 123 (ORDER -> order by LEXP .)
    mayor_igual     reduce using rule 123 (ORDER -> order by LEXP .)
    menor_igual     reduce using rule 123 (ORDER -> order by LEXP .)
    igual           reduce using rule 123 (ORDER -> order by LEXP .)
    diferente1      reduce using rule 123 (ORDER -> order by LEXP .)
    diferente2      reduce using rule 123 (ORDER -> order by LEXP .)
    punto           reduce using rule 123 (ORDER -> order by LEXP .)
    between         reduce using rule 123 (ORDER -> order by LEXP .)
    is              reduce using rule 123 (ORDER -> order by LEXP .)
    isnull          reduce using rule 123 (ORDER -> order by LEXP .)
    notnull         reduce using rule 123 (ORDER -> order by LEXP .)
    as              reduce using rule 123 (ORDER -> order by LEXP .)
    cadenaString    reduce using rule 123 (ORDER -> order by LEXP .)
    id              reduce using rule 123 (ORDER -> order by LEXP .)
    cadena          reduce using rule 123 (ORDER -> order by LEXP .)
    in              reduce using rule 123 (ORDER -> order by LEXP .)
    not             reduce using rule 123 (ORDER -> order by LEXP .)
    like            reduce using rule 123 (ORDER -> order by LEXP .)
    parc            reduce using rule 123 (ORDER -> order by LEXP .)
    then            reduce using rule 123 (ORDER -> order by LEXP .)
    end             reduce using rule 123 (ORDER -> order by LEXP .)
    else            reduce using rule 123 (ORDER -> order by LEXP .)
    when            reduce using rule 123 (ORDER -> order by LEXP .)
    constraint      reduce using rule 123 (ORDER -> order by LEXP .)
    unique          reduce using rule 123 (ORDER -> order by LEXP .)
    check           reduce using rule 123 (ORDER -> order by LEXP .)
    default         reduce using rule 123 (ORDER -> order by LEXP .)
    null            reduce using rule 123 (ORDER -> order by LEXP .)
    primary         reduce using rule 123 (ORDER -> order by LEXP .)
    references      reduce using rule 123 (ORDER -> order by LEXP .)
    coma            shift and go to state 84
    asc             shift and go to state 512
    desc            shift and go to state 513

  ! coma            [ reduce using rule 123 (ORDER -> order by LEXP .) ]
  ! asc             [ reduce using rule 123 (ORDER -> order by LEXP .) ]
  ! desc            [ reduce using rule 123 (ORDER -> order by LEXP .) ]

    ORD                            shift and go to state 511

state 480

    (80) OPCOLUMN -> constraint id unique .

    constraint      reduce using rule 80 (OPCOLUMN -> constraint id unique .)
    unique          reduce using rule 80 (OPCOLUMN -> constraint id unique .)
    check           reduce using rule 80 (OPCOLUMN -> constraint id unique .)
    default         reduce using rule 80 (OPCOLUMN -> constraint id unique .)
    not             reduce using rule 80 (OPCOLUMN -> constraint id unique .)
    null            reduce using rule 80 (OPCOLUMN -> constraint id unique .)
    primary         reduce using rule 80 (OPCOLUMN -> constraint id unique .)
    references      reduce using rule 80 (OPCOLUMN -> constraint id unique .)
    parc            reduce using rule 80 (OPCOLUMN -> constraint id unique .)
    coma            reduce using rule 80 (OPCOLUMN -> constraint id unique .)


state 481

    (82) OPCOLUMN -> constraint id check . para EXP parc

    para            shift and go to state 514


state 482

    (83) OPCOLUMN -> check para EXP . parc
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

    parc            shift and go to state 515
    mas             shift and go to state 87
    menos           shift and go to state 88
    multiplicacion  shift and go to state 89
    division        shift and go to state 90
    modulo          shift and go to state 91
    elevado         shift and go to state 92
    and             shift and go to state 93
    or              shift and go to state 94
    mayor           shift and go to state 95
    menor           shift and go to state 96
    mayor_igual     shift and go to state 97
    menor_igual     shift and go to state 98
    igual           shift and go to state 99
    diferente1      shift and go to state 100
    diferente2      shift and go to state 101
    punto           shift and go to state 102
    between         shift and go to state 103
    is              shift and go to state 104
    isnull          shift and go to state 106
    notnull         shift and go to state 107
    as              shift and go to state 108
    cadenaString    shift and go to state 109
    id              shift and go to state 110
    cadena          shift and go to state 111
    in              shift and go to state 112
    not             shift and go to state 105
    like            shift and go to state 113


state 483

    (146) TIPO -> interval para int parc .
    (154) TIPO -> interval para int parc . cadena

    constraint      reduce using rule 146 (TIPO -> interval para int parc .)
    unique          reduce using rule 146 (TIPO -> interval para int parc .)
    check           reduce using rule 146 (TIPO -> interval para int parc .)
    default         reduce using rule 146 (TIPO -> interval para int parc .)
    not             reduce using rule 146 (TIPO -> interval para int parc .)
    null            reduce using rule 146 (TIPO -> interval para int parc .)
    primary         reduce using rule 146 (TIPO -> interval para int parc .)
    references      reduce using rule 146 (TIPO -> interval para int parc .)
    parc            reduce using rule 146 (TIPO -> interval para int parc .)
    coma            reduce using rule 146 (TIPO -> interval para int parc .)
    ptcoma          reduce using rule 146 (TIPO -> interval para int parc .)
    cadena          shift and go to state 516


state 484

    (137) TIPO -> decimal para int coma . int parc

    int             shift and go to state 517


state 485

    (138) TIPO -> decimal para int parc .

    constraint      reduce using rule 138 (TIPO -> decimal para int parc .)
    unique          reduce using rule 138 (TIPO -> decimal para int parc .)
    check           reduce using rule 138 (TIPO -> decimal para int parc .)
    default         reduce using rule 138 (TIPO -> decimal para int parc .)
    not             reduce using rule 138 (TIPO -> decimal para int parc .)
    null            reduce using rule 138 (TIPO -> decimal para int parc .)
    primary         reduce using rule 138 (TIPO -> decimal para int parc .)
    references      reduce using rule 138 (TIPO -> decimal para int parc .)
    parc            reduce using rule 138 (TIPO -> decimal para int parc .)
    coma            reduce using rule 138 (TIPO -> decimal para int parc .)
    ptcoma          reduce using rule 138 (TIPO -> decimal para int parc .)


state 486

    (140) TIPO -> numeric para int coma . int parc

    int             shift and go to state 518


state 487

    (141) TIPO -> numeric para int parc .

    constraint      reduce using rule 141 (TIPO -> numeric para int parc .)
    unique          reduce using rule 141 (TIPO -> numeric para int parc .)
    check           reduce using rule 141 (TIPO -> numeric para int parc .)
    default         reduce using rule 141 (TIPO -> numeric para int parc .)
    not             reduce using rule 141 (TIPO -> numeric para int parc .)
    null            reduce using rule 141 (TIPO -> numeric para int parc .)
    primary         reduce using rule 141 (TIPO -> numeric para int parc .)
    references      reduce using rule 141 (TIPO -> numeric para int parc .)
    parc            reduce using rule 141 (TIPO -> numeric para int parc .)
    coma            reduce using rule 141 (TIPO -> numeric para int parc .)
    ptcoma          reduce using rule 141 (TIPO -> numeric para int parc .)


state 488

    (143) TIPO -> varchar para int parc .

    constraint      reduce using rule 143 (TIPO -> varchar para int parc .)
    unique          reduce using rule 143 (TIPO -> varchar para int parc .)
    check           reduce using rule 143 (TIPO -> varchar para int parc .)
    default         reduce using rule 143 (TIPO -> varchar para int parc .)
    not             reduce using rule 143 (TIPO -> varchar para int parc .)
    null            reduce using rule 143 (TIPO -> varchar para int parc .)
    primary         reduce using rule 143 (TIPO -> varchar para int parc .)
    references      reduce using rule 143 (TIPO -> varchar para int parc .)
    parc            reduce using rule 143 (TIPO -> varchar para int parc .)
    coma            reduce using rule 143 (TIPO -> varchar para int parc .)
    ptcoma          reduce using rule 143 (TIPO -> varchar para int parc .)


state 489

    (144) TIPO -> timestamp para int parc .
    (150) TIPO -> timestamp para int parc . without time zone
    (151) TIPO -> timestamp para int parc . with time zone

    constraint      reduce using rule 144 (TIPO -> timestamp para int parc .)
    unique          reduce using rule 144 (TIPO -> timestamp para int parc .)
    check           reduce using rule 144 (TIPO -> timestamp para int parc .)
    default         reduce using rule 144 (TIPO -> timestamp para int parc .)
    not             reduce using rule 144 (TIPO -> timestamp para int parc .)
    null            reduce using rule 144 (TIPO -> timestamp para int parc .)
    primary         reduce using rule 144 (TIPO -> timestamp para int parc .)
    references      reduce using rule 144 (TIPO -> timestamp para int parc .)
    parc            reduce using rule 144 (TIPO -> timestamp para int parc .)
    coma            reduce using rule 144 (TIPO -> timestamp para int parc .)
    ptcoma          reduce using rule 144 (TIPO -> timestamp para int parc .)
    without         shift and go to state 519
    with            shift and go to state 520


state 490

    (167) TIPO -> timestamp without time zone .

    constraint      reduce using rule 167 (TIPO -> timestamp without time zone .)
    unique          reduce using rule 167 (TIPO -> timestamp without time zone .)
    check           reduce using rule 167 (TIPO -> timestamp without time zone .)
    default         reduce using rule 167 (TIPO -> timestamp without time zone .)
    not             reduce using rule 167 (TIPO -> timestamp without time zone .)
    null            reduce using rule 167 (TIPO -> timestamp without time zone .)
    primary         reduce using rule 167 (TIPO -> timestamp without time zone .)
    references      reduce using rule 167 (TIPO -> timestamp without time zone .)
    parc            reduce using rule 167 (TIPO -> timestamp without time zone .)
    coma            reduce using rule 167 (TIPO -> timestamp without time zone .)
    ptcoma          reduce using rule 167 (TIPO -> timestamp without time zone .)


state 491

    (168) TIPO -> timestamp with time zone .

    constraint      reduce using rule 168 (TIPO -> timestamp with time zone .)
    unique          reduce using rule 168 (TIPO -> timestamp with time zone .)
    check           reduce using rule 168 (TIPO -> timestamp with time zone .)
    default         reduce using rule 168 (TIPO -> timestamp with time zone .)
    not             reduce using rule 168 (TIPO -> timestamp with time zone .)
    null            reduce using rule 168 (TIPO -> timestamp with time zone .)
    primary         reduce using rule 168 (TIPO -> timestamp with time zone .)
    references      reduce using rule 168 (TIPO -> timestamp with time zone .)
    parc            reduce using rule 168 (TIPO -> timestamp with time zone .)
    coma            reduce using rule 168 (TIPO -> timestamp with time zone .)
    ptcoma          reduce using rule 168 (TIPO -> timestamp with time zone .)


state 492

    (145) TIPO -> character para int parc .

    constraint      reduce using rule 145 (TIPO -> character para int parc .)
    unique          reduce using rule 145 (TIPO -> character para int parc .)
    check           reduce using rule 145 (TIPO -> character para int parc .)
    default         reduce using rule 145 (TIPO -> character para int parc .)
    not             reduce using rule 145 (TIPO -> character para int parc .)
    null            reduce using rule 145 (TIPO -> character para int parc .)
    primary         reduce using rule 145 (TIPO -> character para int parc .)
    references      reduce using rule 145 (TIPO -> character para int parc .)
    parc            reduce using rule 145 (TIPO -> character para int parc .)
    coma            reduce using rule 145 (TIPO -> character para int parc .)
    ptcoma          reduce using rule 145 (TIPO -> character para int parc .)


state 493

    (149) TIPO -> character varying para int . parc

    parc            shift and go to state 521


state 494

    (147) TIPO -> char para int parc .

    constraint      reduce using rule 147 (TIPO -> char para int parc .)
    unique          reduce using rule 147 (TIPO -> char para int parc .)
    check           reduce using rule 147 (TIPO -> char para int parc .)
    default         reduce using rule 147 (TIPO -> char para int parc .)
    not             reduce using rule 147 (TIPO -> char para int parc .)
    null            reduce using rule 147 (TIPO -> char para int parc .)
    primary         reduce using rule 147 (TIPO -> char para int parc .)
    references      reduce using rule 147 (TIPO -> char para int parc .)
    parc            reduce using rule 147 (TIPO -> char para int parc .)
    coma            reduce using rule 147 (TIPO -> char para int parc .)
    ptcoma          reduce using rule 147 (TIPO -> char para int parc .)


state 495

    (148) TIPO -> time para int parc .
    (152) TIPO -> time para int parc . without time zone
    (153) TIPO -> time para int parc . with time zone

    constraint      reduce using rule 148 (TIPO -> time para int parc .)
    unique          reduce using rule 148 (TIPO -> time para int parc .)
    check           reduce using rule 148 (TIPO -> time para int parc .)
    default         reduce using rule 148 (TIPO -> time para int parc .)
    not             reduce using rule 148 (TIPO -> time para int parc .)
    null            reduce using rule 148 (TIPO -> time para int parc .)
    primary         reduce using rule 148 (TIPO -> time para int parc .)
    references      reduce using rule 148 (TIPO -> time para int parc .)
    parc            reduce using rule 148 (TIPO -> time para int parc .)
    coma            reduce using rule 148 (TIPO -> time para int parc .)
    ptcoma          reduce using rule 148 (TIPO -> time para int parc .)
    without         shift and go to state 522
    with            shift and go to state 523


state 496

    (169) TIPO -> time without time zone .

    constraint      reduce using rule 169 (TIPO -> time without time zone .)
    unique          reduce using rule 169 (TIPO -> time without time zone .)
    check           reduce using rule 169 (TIPO -> time without time zone .)
    default         reduce using rule 169 (TIPO -> time without time zone .)
    not             reduce using rule 169 (TIPO -> time without time zone .)
    null            reduce using rule 169 (TIPO -> time without time zone .)
    primary         reduce using rule 169 (TIPO -> time without time zone .)
    references      reduce using rule 169 (TIPO -> time without time zone .)
    parc            reduce using rule 169 (TIPO -> time without time zone .)
    coma            reduce using rule 169 (TIPO -> time without time zone .)
    ptcoma          reduce using rule 169 (TIPO -> time without time zone .)


state 497

    (170) TIPO -> time with time zone .

    constraint      reduce using rule 170 (TIPO -> time with time zone .)
    unique          reduce using rule 170 (TIPO -> time with time zone .)
    check           reduce using rule 170 (TIPO -> time with time zone .)
    default         reduce using rule 170 (TIPO -> time with time zone .)
    not             reduce using rule 170 (TIPO -> time with time zone .)
    null            reduce using rule 170 (TIPO -> time with time zone .)
    primary         reduce using rule 170 (TIPO -> time with time zone .)
    references      reduce using rule 170 (TIPO -> time with time zone .)
    parc            reduce using rule 170 (TIPO -> time with time zone .)
    coma            reduce using rule 170 (TIPO -> time with time zone .)
    ptcoma          reduce using rule 170 (TIPO -> time with time zone .)


state 498

    (93) HERENCIA -> inherits para LEXP . parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 524
    coma            shift and go to state 84


state 499

    (89) OPCONST -> primary key para LEXP parc .

    parc            reduce using rule 89 (OPCONST -> primary key para LEXP parc .)
    coma            reduce using rule 89 (OPCONST -> primary key para LEXP parc .)


state 500

    (90) OPCONST -> foreign key para LEXP parc . references id para LEXP parc

    references      shift and go to state 525


state 501

    (34) OP -> alter column id set not null .

    ptcoma          reduce using rule 34 (OP -> alter column id set not null .)


state 502

    (47) ADD -> constraint id unique para id . parc

    parc            shift and go to state 526


state 503

    (49) ADD -> constraint id foreign key para . LEXP parc references id para LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 527
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 504

    (48) ADD -> foreign key para LEXP parc . references id para LEXP parc

    references      shift and go to state 528


state 505

    (23) INSERT -> insert into id para LEXP parc values para LEXP . parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 529
    coma            shift and go to state 84


state 506

    (95) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER . LIMIT
    (98) LIMIT -> . limit int
    (99) LIMIT -> . limit all
    (100) LIMIT -> . offset int
    (101) LIMIT -> . limit int offset int
    (102) LIMIT -> . offset int limit int
    (103) LIMIT -> . limit all offset int
    (104) LIMIT -> . offset int limit all
    (105) LIMIT -> .

  ! shift/reduce conflict for limit resolved as shift
  ! shift/reduce conflict for offset resolved as shift
    limit           shift and go to state 429
    offset          shift and go to state 430
    ptcoma          reduce using rule 105 (LIMIT -> .)
    r_from          reduce using rule 105 (LIMIT -> .)
    coma            reduce using rule 105 (LIMIT -> .)
    where           reduce using rule 105 (LIMIT -> .)
    union           reduce using rule 105 (LIMIT -> .)
    group           reduce using rule 105 (LIMIT -> .)
    having          reduce using rule 105 (LIMIT -> .)
    intersect       reduce using rule 105 (LIMIT -> .)
    except          reduce using rule 105 (LIMIT -> .)
    order           reduce using rule 105 (LIMIT -> .)
    mas             reduce using rule 105 (LIMIT -> .)
    menos           reduce using rule 105 (LIMIT -> .)
    multiplicacion  reduce using rule 105 (LIMIT -> .)
    division        reduce using rule 105 (LIMIT -> .)
    modulo          reduce using rule 105 (LIMIT -> .)
    elevado         reduce using rule 105 (LIMIT -> .)
    and             reduce using rule 105 (LIMIT -> .)
    or              reduce using rule 105 (LIMIT -> .)
    mayor           reduce using rule 105 (LIMIT -> .)
    menor           reduce using rule 105 (LIMIT -> .)
    mayor_igual     reduce using rule 105 (LIMIT -> .)
    menor_igual     reduce using rule 105 (LIMIT -> .)
    igual           reduce using rule 105 (LIMIT -> .)
    diferente1      reduce using rule 105 (LIMIT -> .)
    diferente2      reduce using rule 105 (LIMIT -> .)
    punto           reduce using rule 105 (LIMIT -> .)
    between         reduce using rule 105 (LIMIT -> .)
    is              reduce using rule 105 (LIMIT -> .)
    isnull          reduce using rule 105 (LIMIT -> .)
    notnull         reduce using rule 105 (LIMIT -> .)
    as              reduce using rule 105 (LIMIT -> .)
    cadenaString    reduce using rule 105 (LIMIT -> .)
    id              reduce using rule 105 (LIMIT -> .)
    cadena          reduce using rule 105 (LIMIT -> .)
    in              reduce using rule 105 (LIMIT -> .)
    not             reduce using rule 105 (LIMIT -> .)
    like            reduce using rule 105 (LIMIT -> .)
    parc            reduce using rule 105 (LIMIT -> .)
    then            reduce using rule 105 (LIMIT -> .)
    end             reduce using rule 105 (LIMIT -> .)
    else            reduce using rule 105 (LIMIT -> .)
    when            reduce using rule 105 (LIMIT -> .)
    constraint      reduce using rule 105 (LIMIT -> .)
    unique          reduce using rule 105 (LIMIT -> .)
    check           reduce using rule 105 (LIMIT -> .)
    default         reduce using rule 105 (LIMIT -> .)
    null            reduce using rule 105 (LIMIT -> .)
    primary         reduce using rule 105 (LIMIT -> .)
    references      reduce using rule 105 (LIMIT -> .)
    asc             reduce using rule 105 (LIMIT -> .)
    desc            reduce using rule 105 (LIMIT -> .)

  ! limit           [ reduce using rule 105 (LIMIT -> .) ]
  ! offset          [ reduce using rule 105 (LIMIT -> .) ]

    LIMIT                          shift and go to state 530

state 507

    (96) SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .

    ptcoma          reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    r_from          reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    coma            reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    where           reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    union           reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    group           reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    having          reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    intersect       reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    except          reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    order           reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    limit           reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    offset          reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mas             reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menos           reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    multiplicacion  reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    division        reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    modulo          reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    elevado         reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    and             reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    or              reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor           reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor           reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor_igual     reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor_igual     reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    igual           reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente1      reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente2      reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    punto           reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    between         reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    is              reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    isnull          reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    notnull         reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    as              reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadenaString    reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    id              reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadena          reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    in              reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    not             reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    like            reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    parc            reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    then            reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    end             reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    else            reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    when            reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    constraint      reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    unique          reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    check           reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    default         reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    null            reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    primary         reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    references      reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    asc             reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    desc            reduce using rule 96 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)


state 508

    (101) LIMIT -> limit int offset . int

    int             shift and go to state 531


state 509

    (103) LIMIT -> limit all offset . int

    int             shift and go to state 532


state 510

    (102) LIMIT -> offset int limit . int
    (104) LIMIT -> offset int limit . all

    int             shift and go to state 533
    all             shift and go to state 534


state 511

    (122) ORDER -> order by LEXP ORD .

    r_from          reduce using rule 122 (ORDER -> order by LEXP ORD .)
    coma            reduce using rule 122 (ORDER -> order by LEXP ORD .)
    where           reduce using rule 122 (ORDER -> order by LEXP ORD .)
    union           reduce using rule 122 (ORDER -> order by LEXP ORD .)
    group           reduce using rule 122 (ORDER -> order by LEXP ORD .)
    having          reduce using rule 122 (ORDER -> order by LEXP ORD .)
    intersect       reduce using rule 122 (ORDER -> order by LEXP ORD .)
    except          reduce using rule 122 (ORDER -> order by LEXP ORD .)
    order           reduce using rule 122 (ORDER -> order by LEXP ORD .)
    limit           reduce using rule 122 (ORDER -> order by LEXP ORD .)
    offset          reduce using rule 122 (ORDER -> order by LEXP ORD .)
    ptcoma          reduce using rule 122 (ORDER -> order by LEXP ORD .)
    mas             reduce using rule 122 (ORDER -> order by LEXP ORD .)
    menos           reduce using rule 122 (ORDER -> order by LEXP ORD .)
    multiplicacion  reduce using rule 122 (ORDER -> order by LEXP ORD .)
    division        reduce using rule 122 (ORDER -> order by LEXP ORD .)
    modulo          reduce using rule 122 (ORDER -> order by LEXP ORD .)
    elevado         reduce using rule 122 (ORDER -> order by LEXP ORD .)
    and             reduce using rule 122 (ORDER -> order by LEXP ORD .)
    or              reduce using rule 122 (ORDER -> order by LEXP ORD .)
    mayor           reduce using rule 122 (ORDER -> order by LEXP ORD .)
    menor           reduce using rule 122 (ORDER -> order by LEXP ORD .)
    mayor_igual     reduce using rule 122 (ORDER -> order by LEXP ORD .)
    menor_igual     reduce using rule 122 (ORDER -> order by LEXP ORD .)
    igual           reduce using rule 122 (ORDER -> order by LEXP ORD .)
    diferente1      reduce using rule 122 (ORDER -> order by LEXP ORD .)
    diferente2      reduce using rule 122 (ORDER -> order by LEXP ORD .)
    punto           reduce using rule 122 (ORDER -> order by LEXP ORD .)
    between         reduce using rule 122 (ORDER -> order by LEXP ORD .)
    is              reduce using rule 122 (ORDER -> order by LEXP ORD .)
    isnull          reduce using rule 122 (ORDER -> order by LEXP ORD .)
    notnull         reduce using rule 122 (ORDER -> order by LEXP ORD .)
    as              reduce using rule 122 (ORDER -> order by LEXP ORD .)
    cadenaString    reduce using rule 122 (ORDER -> order by LEXP ORD .)
    id              reduce using rule 122 (ORDER -> order by LEXP ORD .)
    cadena          reduce using rule 122 (ORDER -> order by LEXP ORD .)
    in              reduce using rule 122 (ORDER -> order by LEXP ORD .)
    not             reduce using rule 122 (ORDER -> order by LEXP ORD .)
    like            reduce using rule 122 (ORDER -> order by LEXP ORD .)
    parc            reduce using rule 122 (ORDER -> order by LEXP ORD .)
    then            reduce using rule 122 (ORDER -> order by LEXP ORD .)
    end             reduce using rule 122 (ORDER -> order by LEXP ORD .)
    else            reduce using rule 122 (ORDER -> order by LEXP ORD .)
    when            reduce using rule 122 (ORDER -> order by LEXP ORD .)
    constraint      reduce using rule 122 (ORDER -> order by LEXP ORD .)
    unique          reduce using rule 122 (ORDER -> order by LEXP ORD .)
    check           reduce using rule 122 (ORDER -> order by LEXP ORD .)
    default         reduce using rule 122 (ORDER -> order by LEXP ORD .)
    null            reduce using rule 122 (ORDER -> order by LEXP ORD .)
    primary         reduce using rule 122 (ORDER -> order by LEXP ORD .)
    references      reduce using rule 122 (ORDER -> order by LEXP ORD .)
    asc             reduce using rule 122 (ORDER -> order by LEXP ORD .)
    desc            reduce using rule 122 (ORDER -> order by LEXP ORD .)


state 512

    (125) ORD -> asc .

    r_from          reduce using rule 125 (ORD -> asc .)
    coma            reduce using rule 125 (ORD -> asc .)
    where           reduce using rule 125 (ORD -> asc .)
    union           reduce using rule 125 (ORD -> asc .)
    group           reduce using rule 125 (ORD -> asc .)
    having          reduce using rule 125 (ORD -> asc .)
    intersect       reduce using rule 125 (ORD -> asc .)
    except          reduce using rule 125 (ORD -> asc .)
    order           reduce using rule 125 (ORD -> asc .)
    limit           reduce using rule 125 (ORD -> asc .)
    offset          reduce using rule 125 (ORD -> asc .)
    ptcoma          reduce using rule 125 (ORD -> asc .)
    mas             reduce using rule 125 (ORD -> asc .)
    menos           reduce using rule 125 (ORD -> asc .)
    multiplicacion  reduce using rule 125 (ORD -> asc .)
    division        reduce using rule 125 (ORD -> asc .)
    modulo          reduce using rule 125 (ORD -> asc .)
    elevado         reduce using rule 125 (ORD -> asc .)
    and             reduce using rule 125 (ORD -> asc .)
    or              reduce using rule 125 (ORD -> asc .)
    mayor           reduce using rule 125 (ORD -> asc .)
    menor           reduce using rule 125 (ORD -> asc .)
    mayor_igual     reduce using rule 125 (ORD -> asc .)
    menor_igual     reduce using rule 125 (ORD -> asc .)
    igual           reduce using rule 125 (ORD -> asc .)
    diferente1      reduce using rule 125 (ORD -> asc .)
    diferente2      reduce using rule 125 (ORD -> asc .)
    punto           reduce using rule 125 (ORD -> asc .)
    between         reduce using rule 125 (ORD -> asc .)
    is              reduce using rule 125 (ORD -> asc .)
    isnull          reduce using rule 125 (ORD -> asc .)
    notnull         reduce using rule 125 (ORD -> asc .)
    as              reduce using rule 125 (ORD -> asc .)
    cadenaString    reduce using rule 125 (ORD -> asc .)
    id              reduce using rule 125 (ORD -> asc .)
    cadena          reduce using rule 125 (ORD -> asc .)
    in              reduce using rule 125 (ORD -> asc .)
    not             reduce using rule 125 (ORD -> asc .)
    like            reduce using rule 125 (ORD -> asc .)
    parc            reduce using rule 125 (ORD -> asc .)
    then            reduce using rule 125 (ORD -> asc .)
    end             reduce using rule 125 (ORD -> asc .)
    else            reduce using rule 125 (ORD -> asc .)
    when            reduce using rule 125 (ORD -> asc .)
    constraint      reduce using rule 125 (ORD -> asc .)
    unique          reduce using rule 125 (ORD -> asc .)
    check           reduce using rule 125 (ORD -> asc .)
    default         reduce using rule 125 (ORD -> asc .)
    null            reduce using rule 125 (ORD -> asc .)
    primary         reduce using rule 125 (ORD -> asc .)
    references      reduce using rule 125 (ORD -> asc .)
    asc             reduce using rule 125 (ORD -> asc .)
    desc            reduce using rule 125 (ORD -> asc .)


state 513

    (126) ORD -> desc .

    r_from          reduce using rule 126 (ORD -> desc .)
    coma            reduce using rule 126 (ORD -> desc .)
    where           reduce using rule 126 (ORD -> desc .)
    union           reduce using rule 126 (ORD -> desc .)
    group           reduce using rule 126 (ORD -> desc .)
    having          reduce using rule 126 (ORD -> desc .)
    intersect       reduce using rule 126 (ORD -> desc .)
    except          reduce using rule 126 (ORD -> desc .)
    order           reduce using rule 126 (ORD -> desc .)
    limit           reduce using rule 126 (ORD -> desc .)
    offset          reduce using rule 126 (ORD -> desc .)
    ptcoma          reduce using rule 126 (ORD -> desc .)
    mas             reduce using rule 126 (ORD -> desc .)
    menos           reduce using rule 126 (ORD -> desc .)
    multiplicacion  reduce using rule 126 (ORD -> desc .)
    division        reduce using rule 126 (ORD -> desc .)
    modulo          reduce using rule 126 (ORD -> desc .)
    elevado         reduce using rule 126 (ORD -> desc .)
    and             reduce using rule 126 (ORD -> desc .)
    or              reduce using rule 126 (ORD -> desc .)
    mayor           reduce using rule 126 (ORD -> desc .)
    menor           reduce using rule 126 (ORD -> desc .)
    mayor_igual     reduce using rule 126 (ORD -> desc .)
    menor_igual     reduce using rule 126 (ORD -> desc .)
    igual           reduce using rule 126 (ORD -> desc .)
    diferente1      reduce using rule 126 (ORD -> desc .)
    diferente2      reduce using rule 126 (ORD -> desc .)
    punto           reduce using rule 126 (ORD -> desc .)
    between         reduce using rule 126 (ORD -> desc .)
    is              reduce using rule 126 (ORD -> desc .)
    isnull          reduce using rule 126 (ORD -> desc .)
    notnull         reduce using rule 126 (ORD -> desc .)
    as              reduce using rule 126 (ORD -> desc .)
    cadenaString    reduce using rule 126 (ORD -> desc .)
    id              reduce using rule 126 (ORD -> desc .)
    cadena          reduce using rule 126 (ORD -> desc .)
    in              reduce using rule 126 (ORD -> desc .)
    not             reduce using rule 126 (ORD -> desc .)
    like            reduce using rule 126 (ORD -> desc .)
    parc            reduce using rule 126 (ORD -> desc .)
    then            reduce using rule 126 (ORD -> desc .)
    end             reduce using rule 126 (ORD -> desc .)
    else            reduce using rule 126 (ORD -> desc .)
    when            reduce using rule 126 (ORD -> desc .)
    constraint      reduce using rule 126 (ORD -> desc .)
    unique          reduce using rule 126 (ORD -> desc .)
    check           reduce using rule 126 (ORD -> desc .)
    default         reduce using rule 126 (ORD -> desc .)
    null            reduce using rule 126 (ORD -> desc .)
    primary         reduce using rule 126 (ORD -> desc .)
    references      reduce using rule 126 (ORD -> desc .)
    asc             reduce using rule 126 (ORD -> desc .)
    desc            reduce using rule 126 (ORD -> desc .)


state 514

    (82) OPCOLUMN -> constraint id check para . EXP parc
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    EXP                            shift and go to state 535
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 515

    (83) OPCOLUMN -> check para EXP parc .

    constraint      reduce using rule 83 (OPCOLUMN -> check para EXP parc .)
    unique          reduce using rule 83 (OPCOLUMN -> check para EXP parc .)
    check           reduce using rule 83 (OPCOLUMN -> check para EXP parc .)
    default         reduce using rule 83 (OPCOLUMN -> check para EXP parc .)
    not             reduce using rule 83 (OPCOLUMN -> check para EXP parc .)
    null            reduce using rule 83 (OPCOLUMN -> check para EXP parc .)
    primary         reduce using rule 83 (OPCOLUMN -> check para EXP parc .)
    references      reduce using rule 83 (OPCOLUMN -> check para EXP parc .)
    parc            reduce using rule 83 (OPCOLUMN -> check para EXP parc .)
    coma            reduce using rule 83 (OPCOLUMN -> check para EXP parc .)


state 516

    (154) TIPO -> interval para int parc cadena .

    constraint      reduce using rule 154 (TIPO -> interval para int parc cadena .)
    unique          reduce using rule 154 (TIPO -> interval para int parc cadena .)
    check           reduce using rule 154 (TIPO -> interval para int parc cadena .)
    default         reduce using rule 154 (TIPO -> interval para int parc cadena .)
    not             reduce using rule 154 (TIPO -> interval para int parc cadena .)
    null            reduce using rule 154 (TIPO -> interval para int parc cadena .)
    primary         reduce using rule 154 (TIPO -> interval para int parc cadena .)
    references      reduce using rule 154 (TIPO -> interval para int parc cadena .)
    parc            reduce using rule 154 (TIPO -> interval para int parc cadena .)
    coma            reduce using rule 154 (TIPO -> interval para int parc cadena .)
    ptcoma          reduce using rule 154 (TIPO -> interval para int parc cadena .)


state 517

    (137) TIPO -> decimal para int coma int . parc

    parc            shift and go to state 536


state 518

    (140) TIPO -> numeric para int coma int . parc

    parc            shift and go to state 537


state 519

    (150) TIPO -> timestamp para int parc without . time zone

    time            shift and go to state 538


state 520

    (151) TIPO -> timestamp para int parc with . time zone

    time            shift and go to state 539


state 521

    (149) TIPO -> character varying para int parc .

    constraint      reduce using rule 149 (TIPO -> character varying para int parc .)
    unique          reduce using rule 149 (TIPO -> character varying para int parc .)
    check           reduce using rule 149 (TIPO -> character varying para int parc .)
    default         reduce using rule 149 (TIPO -> character varying para int parc .)
    not             reduce using rule 149 (TIPO -> character varying para int parc .)
    null            reduce using rule 149 (TIPO -> character varying para int parc .)
    primary         reduce using rule 149 (TIPO -> character varying para int parc .)
    references      reduce using rule 149 (TIPO -> character varying para int parc .)
    parc            reduce using rule 149 (TIPO -> character varying para int parc .)
    coma            reduce using rule 149 (TIPO -> character varying para int parc .)
    ptcoma          reduce using rule 149 (TIPO -> character varying para int parc .)


state 522

    (152) TIPO -> time para int parc without . time zone

    time            shift and go to state 540


state 523

    (153) TIPO -> time para int parc with . time zone

    time            shift and go to state 541


state 524

    (93) HERENCIA -> inherits para LEXP parc .

    ptcoma          reduce using rule 93 (HERENCIA -> inherits para LEXP parc .)


state 525

    (90) OPCONST -> foreign key para LEXP parc references . id para LEXP parc

    id              shift and go to state 542


state 526

    (47) ADD -> constraint id unique para id parc .

    ptcoma          reduce using rule 47 (ADD -> constraint id unique para id parc .)


state 527

    (49) ADD -> constraint id foreign key para LEXP . parc references id para LEXP parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 543
    coma            shift and go to state 84


state 528

    (48) ADD -> foreign key para LEXP parc references . id para LEXP parc

    id              shift and go to state 544


state 529

    (23) INSERT -> insert into id para LEXP parc values para LEXP parc .

    ptcoma          reduce using rule 23 (INSERT -> insert into id para LEXP parc values para LEXP parc .)


state 530

    (95) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .

    ptcoma          reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    r_from          reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    coma            reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    where           reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    union           reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    group           reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    having          reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    intersect       reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    except          reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    order           reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    limit           reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    offset          reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mas             reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menos           reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    multiplicacion  reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    division        reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    modulo          reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    elevado         reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    and             reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    or              reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor           reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor           reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor_igual     reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor_igual     reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    igual           reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente1      reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente2      reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    punto           reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    between         reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    is              reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    isnull          reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    notnull         reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    as              reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadenaString    reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    id              reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadena          reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    in              reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    not             reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    like            reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    parc            reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    then            reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    end             reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    else            reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    when            reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    constraint      reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    unique          reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    check           reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    default         reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    null            reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    primary         reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    references      reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    asc             reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    desc            reduce using rule 95 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)


state 531

    (101) LIMIT -> limit int offset int .

    ptcoma          reduce using rule 101 (LIMIT -> limit int offset int .)
    r_from          reduce using rule 101 (LIMIT -> limit int offset int .)
    coma            reduce using rule 101 (LIMIT -> limit int offset int .)
    where           reduce using rule 101 (LIMIT -> limit int offset int .)
    union           reduce using rule 101 (LIMIT -> limit int offset int .)
    group           reduce using rule 101 (LIMIT -> limit int offset int .)
    having          reduce using rule 101 (LIMIT -> limit int offset int .)
    intersect       reduce using rule 101 (LIMIT -> limit int offset int .)
    except          reduce using rule 101 (LIMIT -> limit int offset int .)
    order           reduce using rule 101 (LIMIT -> limit int offset int .)
    limit           reduce using rule 101 (LIMIT -> limit int offset int .)
    offset          reduce using rule 101 (LIMIT -> limit int offset int .)
    mas             reduce using rule 101 (LIMIT -> limit int offset int .)
    menos           reduce using rule 101 (LIMIT -> limit int offset int .)
    multiplicacion  reduce using rule 101 (LIMIT -> limit int offset int .)
    division        reduce using rule 101 (LIMIT -> limit int offset int .)
    modulo          reduce using rule 101 (LIMIT -> limit int offset int .)
    elevado         reduce using rule 101 (LIMIT -> limit int offset int .)
    and             reduce using rule 101 (LIMIT -> limit int offset int .)
    or              reduce using rule 101 (LIMIT -> limit int offset int .)
    mayor           reduce using rule 101 (LIMIT -> limit int offset int .)
    menor           reduce using rule 101 (LIMIT -> limit int offset int .)
    mayor_igual     reduce using rule 101 (LIMIT -> limit int offset int .)
    menor_igual     reduce using rule 101 (LIMIT -> limit int offset int .)
    igual           reduce using rule 101 (LIMIT -> limit int offset int .)
    diferente1      reduce using rule 101 (LIMIT -> limit int offset int .)
    diferente2      reduce using rule 101 (LIMIT -> limit int offset int .)
    punto           reduce using rule 101 (LIMIT -> limit int offset int .)
    between         reduce using rule 101 (LIMIT -> limit int offset int .)
    is              reduce using rule 101 (LIMIT -> limit int offset int .)
    isnull          reduce using rule 101 (LIMIT -> limit int offset int .)
    notnull         reduce using rule 101 (LIMIT -> limit int offset int .)
    as              reduce using rule 101 (LIMIT -> limit int offset int .)
    cadenaString    reduce using rule 101 (LIMIT -> limit int offset int .)
    id              reduce using rule 101 (LIMIT -> limit int offset int .)
    cadena          reduce using rule 101 (LIMIT -> limit int offset int .)
    in              reduce using rule 101 (LIMIT -> limit int offset int .)
    not             reduce using rule 101 (LIMIT -> limit int offset int .)
    like            reduce using rule 101 (LIMIT -> limit int offset int .)
    parc            reduce using rule 101 (LIMIT -> limit int offset int .)
    then            reduce using rule 101 (LIMIT -> limit int offset int .)
    end             reduce using rule 101 (LIMIT -> limit int offset int .)
    else            reduce using rule 101 (LIMIT -> limit int offset int .)
    when            reduce using rule 101 (LIMIT -> limit int offset int .)
    constraint      reduce using rule 101 (LIMIT -> limit int offset int .)
    unique          reduce using rule 101 (LIMIT -> limit int offset int .)
    check           reduce using rule 101 (LIMIT -> limit int offset int .)
    default         reduce using rule 101 (LIMIT -> limit int offset int .)
    null            reduce using rule 101 (LIMIT -> limit int offset int .)
    primary         reduce using rule 101 (LIMIT -> limit int offset int .)
    references      reduce using rule 101 (LIMIT -> limit int offset int .)
    asc             reduce using rule 101 (LIMIT -> limit int offset int .)
    desc            reduce using rule 101 (LIMIT -> limit int offset int .)


state 532

    (103) LIMIT -> limit all offset int .

    ptcoma          reduce using rule 103 (LIMIT -> limit all offset int .)
    r_from          reduce using rule 103 (LIMIT -> limit all offset int .)
    coma            reduce using rule 103 (LIMIT -> limit all offset int .)
    where           reduce using rule 103 (LIMIT -> limit all offset int .)
    union           reduce using rule 103 (LIMIT -> limit all offset int .)
    group           reduce using rule 103 (LIMIT -> limit all offset int .)
    having          reduce using rule 103 (LIMIT -> limit all offset int .)
    intersect       reduce using rule 103 (LIMIT -> limit all offset int .)
    except          reduce using rule 103 (LIMIT -> limit all offset int .)
    order           reduce using rule 103 (LIMIT -> limit all offset int .)
    limit           reduce using rule 103 (LIMIT -> limit all offset int .)
    offset          reduce using rule 103 (LIMIT -> limit all offset int .)
    mas             reduce using rule 103 (LIMIT -> limit all offset int .)
    menos           reduce using rule 103 (LIMIT -> limit all offset int .)
    multiplicacion  reduce using rule 103 (LIMIT -> limit all offset int .)
    division        reduce using rule 103 (LIMIT -> limit all offset int .)
    modulo          reduce using rule 103 (LIMIT -> limit all offset int .)
    elevado         reduce using rule 103 (LIMIT -> limit all offset int .)
    and             reduce using rule 103 (LIMIT -> limit all offset int .)
    or              reduce using rule 103 (LIMIT -> limit all offset int .)
    mayor           reduce using rule 103 (LIMIT -> limit all offset int .)
    menor           reduce using rule 103 (LIMIT -> limit all offset int .)
    mayor_igual     reduce using rule 103 (LIMIT -> limit all offset int .)
    menor_igual     reduce using rule 103 (LIMIT -> limit all offset int .)
    igual           reduce using rule 103 (LIMIT -> limit all offset int .)
    diferente1      reduce using rule 103 (LIMIT -> limit all offset int .)
    diferente2      reduce using rule 103 (LIMIT -> limit all offset int .)
    punto           reduce using rule 103 (LIMIT -> limit all offset int .)
    between         reduce using rule 103 (LIMIT -> limit all offset int .)
    is              reduce using rule 103 (LIMIT -> limit all offset int .)
    isnull          reduce using rule 103 (LIMIT -> limit all offset int .)
    notnull         reduce using rule 103 (LIMIT -> limit all offset int .)
    as              reduce using rule 103 (LIMIT -> limit all offset int .)
    cadenaString    reduce using rule 103 (LIMIT -> limit all offset int .)
    id              reduce using rule 103 (LIMIT -> limit all offset int .)
    cadena          reduce using rule 103 (LIMIT -> limit all offset int .)
    in              reduce using rule 103 (LIMIT -> limit all offset int .)
    not             reduce using rule 103 (LIMIT -> limit all offset int .)
    like            reduce using rule 103 (LIMIT -> limit all offset int .)
    parc            reduce using rule 103 (LIMIT -> limit all offset int .)
    then            reduce using rule 103 (LIMIT -> limit all offset int .)
    end             reduce using rule 103 (LIMIT -> limit all offset int .)
    else            reduce using rule 103 (LIMIT -> limit all offset int .)
    when            reduce using rule 103 (LIMIT -> limit all offset int .)
    constraint      reduce using rule 103 (LIMIT -> limit all offset int .)
    unique          reduce using rule 103 (LIMIT -> limit all offset int .)
    check           reduce using rule 103 (LIMIT -> limit all offset int .)
    default         reduce using rule 103 (LIMIT -> limit all offset int .)
    null            reduce using rule 103 (LIMIT -> limit all offset int .)
    primary         reduce using rule 103 (LIMIT -> limit all offset int .)
    references      reduce using rule 103 (LIMIT -> limit all offset int .)
    asc             reduce using rule 103 (LIMIT -> limit all offset int .)
    desc            reduce using rule 103 (LIMIT -> limit all offset int .)


state 533

    (102) LIMIT -> offset int limit int .

    ptcoma          reduce using rule 102 (LIMIT -> offset int limit int .)
    r_from          reduce using rule 102 (LIMIT -> offset int limit int .)
    coma            reduce using rule 102 (LIMIT -> offset int limit int .)
    where           reduce using rule 102 (LIMIT -> offset int limit int .)
    union           reduce using rule 102 (LIMIT -> offset int limit int .)
    group           reduce using rule 102 (LIMIT -> offset int limit int .)
    having          reduce using rule 102 (LIMIT -> offset int limit int .)
    intersect       reduce using rule 102 (LIMIT -> offset int limit int .)
    except          reduce using rule 102 (LIMIT -> offset int limit int .)
    order           reduce using rule 102 (LIMIT -> offset int limit int .)
    limit           reduce using rule 102 (LIMIT -> offset int limit int .)
    offset          reduce using rule 102 (LIMIT -> offset int limit int .)
    mas             reduce using rule 102 (LIMIT -> offset int limit int .)
    menos           reduce using rule 102 (LIMIT -> offset int limit int .)
    multiplicacion  reduce using rule 102 (LIMIT -> offset int limit int .)
    division        reduce using rule 102 (LIMIT -> offset int limit int .)
    modulo          reduce using rule 102 (LIMIT -> offset int limit int .)
    elevado         reduce using rule 102 (LIMIT -> offset int limit int .)
    and             reduce using rule 102 (LIMIT -> offset int limit int .)
    or              reduce using rule 102 (LIMIT -> offset int limit int .)
    mayor           reduce using rule 102 (LIMIT -> offset int limit int .)
    menor           reduce using rule 102 (LIMIT -> offset int limit int .)
    mayor_igual     reduce using rule 102 (LIMIT -> offset int limit int .)
    menor_igual     reduce using rule 102 (LIMIT -> offset int limit int .)
    igual           reduce using rule 102 (LIMIT -> offset int limit int .)
    diferente1      reduce using rule 102 (LIMIT -> offset int limit int .)
    diferente2      reduce using rule 102 (LIMIT -> offset int limit int .)
    punto           reduce using rule 102 (LIMIT -> offset int limit int .)
    between         reduce using rule 102 (LIMIT -> offset int limit int .)
    is              reduce using rule 102 (LIMIT -> offset int limit int .)
    isnull          reduce using rule 102 (LIMIT -> offset int limit int .)
    notnull         reduce using rule 102 (LIMIT -> offset int limit int .)
    as              reduce using rule 102 (LIMIT -> offset int limit int .)
    cadenaString    reduce using rule 102 (LIMIT -> offset int limit int .)
    id              reduce using rule 102 (LIMIT -> offset int limit int .)
    cadena          reduce using rule 102 (LIMIT -> offset int limit int .)
    in              reduce using rule 102 (LIMIT -> offset int limit int .)
    not             reduce using rule 102 (LIMIT -> offset int limit int .)
    like            reduce using rule 102 (LIMIT -> offset int limit int .)
    parc            reduce using rule 102 (LIMIT -> offset int limit int .)
    then            reduce using rule 102 (LIMIT -> offset int limit int .)
    end             reduce using rule 102 (LIMIT -> offset int limit int .)
    else            reduce using rule 102 (LIMIT -> offset int limit int .)
    when            reduce using rule 102 (LIMIT -> offset int limit int .)
    constraint      reduce using rule 102 (LIMIT -> offset int limit int .)
    unique          reduce using rule 102 (LIMIT -> offset int limit int .)
    check           reduce using rule 102 (LIMIT -> offset int limit int .)
    default         reduce using rule 102 (LIMIT -> offset int limit int .)
    null            reduce using rule 102 (LIMIT -> offset int limit int .)
    primary         reduce using rule 102 (LIMIT -> offset int limit int .)
    references      reduce using rule 102 (LIMIT -> offset int limit int .)
    asc             reduce using rule 102 (LIMIT -> offset int limit int .)
    desc            reduce using rule 102 (LIMIT -> offset int limit int .)


state 534

    (104) LIMIT -> offset int limit all .

    ptcoma          reduce using rule 104 (LIMIT -> offset int limit all .)
    r_from          reduce using rule 104 (LIMIT -> offset int limit all .)
    coma            reduce using rule 104 (LIMIT -> offset int limit all .)
    where           reduce using rule 104 (LIMIT -> offset int limit all .)
    union           reduce using rule 104 (LIMIT -> offset int limit all .)
    group           reduce using rule 104 (LIMIT -> offset int limit all .)
    having          reduce using rule 104 (LIMIT -> offset int limit all .)
    intersect       reduce using rule 104 (LIMIT -> offset int limit all .)
    except          reduce using rule 104 (LIMIT -> offset int limit all .)
    order           reduce using rule 104 (LIMIT -> offset int limit all .)
    limit           reduce using rule 104 (LIMIT -> offset int limit all .)
    offset          reduce using rule 104 (LIMIT -> offset int limit all .)
    mas             reduce using rule 104 (LIMIT -> offset int limit all .)
    menos           reduce using rule 104 (LIMIT -> offset int limit all .)
    multiplicacion  reduce using rule 104 (LIMIT -> offset int limit all .)
    division        reduce using rule 104 (LIMIT -> offset int limit all .)
    modulo          reduce using rule 104 (LIMIT -> offset int limit all .)
    elevado         reduce using rule 104 (LIMIT -> offset int limit all .)
    and             reduce using rule 104 (LIMIT -> offset int limit all .)
    or              reduce using rule 104 (LIMIT -> offset int limit all .)
    mayor           reduce using rule 104 (LIMIT -> offset int limit all .)
    menor           reduce using rule 104 (LIMIT -> offset int limit all .)
    mayor_igual     reduce using rule 104 (LIMIT -> offset int limit all .)
    menor_igual     reduce using rule 104 (LIMIT -> offset int limit all .)
    igual           reduce using rule 104 (LIMIT -> offset int limit all .)
    diferente1      reduce using rule 104 (LIMIT -> offset int limit all .)
    diferente2      reduce using rule 104 (LIMIT -> offset int limit all .)
    punto           reduce using rule 104 (LIMIT -> offset int limit all .)
    between         reduce using rule 104 (LIMIT -> offset int limit all .)
    is              reduce using rule 104 (LIMIT -> offset int limit all .)
    isnull          reduce using rule 104 (LIMIT -> offset int limit all .)
    notnull         reduce using rule 104 (LIMIT -> offset int limit all .)
    as              reduce using rule 104 (LIMIT -> offset int limit all .)
    cadenaString    reduce using rule 104 (LIMIT -> offset int limit all .)
    id              reduce using rule 104 (LIMIT -> offset int limit all .)
    cadena          reduce using rule 104 (LIMIT -> offset int limit all .)
    in              reduce using rule 104 (LIMIT -> offset int limit all .)
    not             reduce using rule 104 (LIMIT -> offset int limit all .)
    like            reduce using rule 104 (LIMIT -> offset int limit all .)
    parc            reduce using rule 104 (LIMIT -> offset int limit all .)
    then            reduce using rule 104 (LIMIT -> offset int limit all .)
    end             reduce using rule 104 (LIMIT -> offset int limit all .)
    else            reduce using rule 104 (LIMIT -> offset int limit all .)
    when            reduce using rule 104 (LIMIT -> offset int limit all .)
    constraint      reduce using rule 104 (LIMIT -> offset int limit all .)
    unique          reduce using rule 104 (LIMIT -> offset int limit all .)
    check           reduce using rule 104 (LIMIT -> offset int limit all .)
    default         reduce using rule 104 (LIMIT -> offset int limit all .)
    null            reduce using rule 104 (LIMIT -> offset int limit all .)
    primary         reduce using rule 104 (LIMIT -> offset int limit all .)
    references      reduce using rule 104 (LIMIT -> offset int limit all .)
    asc             reduce using rule 104 (LIMIT -> offset int limit all .)
    desc            reduce using rule 104 (LIMIT -> offset int limit all .)


state 535

    (82) OPCOLUMN -> constraint id check para EXP . parc
    (177) EXP -> EXP . mas EXP
    (178) EXP -> EXP . menos EXP
    (179) EXP -> EXP . multiplicacion EXP
    (180) EXP -> EXP . division EXP
    (181) EXP -> EXP . modulo EXP
    (182) EXP -> EXP . elevado EXP
    (183) EXP -> EXP . and EXP
    (184) EXP -> EXP . or EXP
    (185) EXP -> EXP . mayor EXP
    (186) EXP -> EXP . menor EXP
    (187) EXP -> EXP . mayor_igual EXP
    (188) EXP -> EXP . menor_igual EXP
    (189) EXP -> EXP . igual EXP
    (190) EXP -> EXP . diferente1 EXP
    (191) EXP -> EXP . diferente2 EXP
    (192) EXP -> EXP . punto EXP
    (193) EXP -> EXP . between EXP
    (194) EXP -> EXP . is not null
    (195) EXP -> EXP . is null
    (196) EXP -> EXP . isnull
    (197) EXP -> EXP . notnull
    (198) EXP -> EXP . is true
    (199) EXP -> EXP . is not true
    (200) EXP -> EXP . is false
    (201) EXP -> EXP . is not false
    (202) EXP -> EXP . is unknown
    (203) EXP -> EXP . is not unknown
    (204) EXP -> EXP . as cadenaString
    (205) EXP -> EXP . cadenaString
    (206) EXP -> EXP . as id
    (207) EXP -> EXP . id
    (208) EXP -> EXP . as cadena
    (209) EXP -> EXP . cadena
    (213) EXP -> EXP . in para EXP parc
    (214) EXP -> EXP . not in para EXP parc
    (215) EXP -> EXP . not between EXP
    (216) EXP -> EXP . between symetric EXP
    (217) EXP -> EXP . not between symetric EXP
    (218) EXP -> EXP . is distinct r_from EXP
    (219) EXP -> EXP . is not distinct r_from EXP
    (220) EXP -> EXP . like cadena
    (221) EXP -> EXP . not like cadena

    parc            shift and go to state 545
    mas             shift and go to state 87
    menos           shift and go to state 88
    multiplicacion  shift and go to state 89
    division        shift and go to state 90
    modulo          shift and go to state 91
    elevado         shift and go to state 92
    and             shift and go to state 93
    or              shift and go to state 94
    mayor           shift and go to state 95
    menor           shift and go to state 96
    mayor_igual     shift and go to state 97
    menor_igual     shift and go to state 98
    igual           shift and go to state 99
    diferente1      shift and go to state 100
    diferente2      shift and go to state 101
    punto           shift and go to state 102
    between         shift and go to state 103
    is              shift and go to state 104
    isnull          shift and go to state 106
    notnull         shift and go to state 107
    as              shift and go to state 108
    cadenaString    shift and go to state 109
    id              shift and go to state 110
    cadena          shift and go to state 111
    in              shift and go to state 112
    not             shift and go to state 105
    like            shift and go to state 113


state 536

    (137) TIPO -> decimal para int coma int parc .

    constraint      reduce using rule 137 (TIPO -> decimal para int coma int parc .)
    unique          reduce using rule 137 (TIPO -> decimal para int coma int parc .)
    check           reduce using rule 137 (TIPO -> decimal para int coma int parc .)
    default         reduce using rule 137 (TIPO -> decimal para int coma int parc .)
    not             reduce using rule 137 (TIPO -> decimal para int coma int parc .)
    null            reduce using rule 137 (TIPO -> decimal para int coma int parc .)
    primary         reduce using rule 137 (TIPO -> decimal para int coma int parc .)
    references      reduce using rule 137 (TIPO -> decimal para int coma int parc .)
    parc            reduce using rule 137 (TIPO -> decimal para int coma int parc .)
    coma            reduce using rule 137 (TIPO -> decimal para int coma int parc .)
    ptcoma          reduce using rule 137 (TIPO -> decimal para int coma int parc .)


state 537

    (140) TIPO -> numeric para int coma int parc .

    constraint      reduce using rule 140 (TIPO -> numeric para int coma int parc .)
    unique          reduce using rule 140 (TIPO -> numeric para int coma int parc .)
    check           reduce using rule 140 (TIPO -> numeric para int coma int parc .)
    default         reduce using rule 140 (TIPO -> numeric para int coma int parc .)
    not             reduce using rule 140 (TIPO -> numeric para int coma int parc .)
    null            reduce using rule 140 (TIPO -> numeric para int coma int parc .)
    primary         reduce using rule 140 (TIPO -> numeric para int coma int parc .)
    references      reduce using rule 140 (TIPO -> numeric para int coma int parc .)
    parc            reduce using rule 140 (TIPO -> numeric para int coma int parc .)
    coma            reduce using rule 140 (TIPO -> numeric para int coma int parc .)
    ptcoma          reduce using rule 140 (TIPO -> numeric para int coma int parc .)


state 538

    (150) TIPO -> timestamp para int parc without time . zone

    zone            shift and go to state 546


state 539

    (151) TIPO -> timestamp para int parc with time . zone

    zone            shift and go to state 547


state 540

    (152) TIPO -> time para int parc without time . zone

    zone            shift and go to state 548


state 541

    (153) TIPO -> time para int parc with time . zone

    zone            shift and go to state 549


state 542

    (90) OPCONST -> foreign key para LEXP parc references id . para LEXP parc

    para            shift and go to state 550


state 543

    (49) ADD -> constraint id foreign key para LEXP parc . references id para LEXP parc

    references      shift and go to state 551


state 544

    (48) ADD -> foreign key para LEXP parc references id . para LEXP parc

    para            shift and go to state 552


state 545

    (82) OPCOLUMN -> constraint id check para EXP parc .

    constraint      reduce using rule 82 (OPCOLUMN -> constraint id check para EXP parc .)
    unique          reduce using rule 82 (OPCOLUMN -> constraint id check para EXP parc .)
    check           reduce using rule 82 (OPCOLUMN -> constraint id check para EXP parc .)
    default         reduce using rule 82 (OPCOLUMN -> constraint id check para EXP parc .)
    not             reduce using rule 82 (OPCOLUMN -> constraint id check para EXP parc .)
    null            reduce using rule 82 (OPCOLUMN -> constraint id check para EXP parc .)
    primary         reduce using rule 82 (OPCOLUMN -> constraint id check para EXP parc .)
    references      reduce using rule 82 (OPCOLUMN -> constraint id check para EXP parc .)
    parc            reduce using rule 82 (OPCOLUMN -> constraint id check para EXP parc .)
    coma            reduce using rule 82 (OPCOLUMN -> constraint id check para EXP parc .)


state 546

    (150) TIPO -> timestamp para int parc without time zone .

    constraint      reduce using rule 150 (TIPO -> timestamp para int parc without time zone .)
    unique          reduce using rule 150 (TIPO -> timestamp para int parc without time zone .)
    check           reduce using rule 150 (TIPO -> timestamp para int parc without time zone .)
    default         reduce using rule 150 (TIPO -> timestamp para int parc without time zone .)
    not             reduce using rule 150 (TIPO -> timestamp para int parc without time zone .)
    null            reduce using rule 150 (TIPO -> timestamp para int parc without time zone .)
    primary         reduce using rule 150 (TIPO -> timestamp para int parc without time zone .)
    references      reduce using rule 150 (TIPO -> timestamp para int parc without time zone .)
    parc            reduce using rule 150 (TIPO -> timestamp para int parc without time zone .)
    coma            reduce using rule 150 (TIPO -> timestamp para int parc without time zone .)
    ptcoma          reduce using rule 150 (TIPO -> timestamp para int parc without time zone .)


state 547

    (151) TIPO -> timestamp para int parc with time zone .

    constraint      reduce using rule 151 (TIPO -> timestamp para int parc with time zone .)
    unique          reduce using rule 151 (TIPO -> timestamp para int parc with time zone .)
    check           reduce using rule 151 (TIPO -> timestamp para int parc with time zone .)
    default         reduce using rule 151 (TIPO -> timestamp para int parc with time zone .)
    not             reduce using rule 151 (TIPO -> timestamp para int parc with time zone .)
    null            reduce using rule 151 (TIPO -> timestamp para int parc with time zone .)
    primary         reduce using rule 151 (TIPO -> timestamp para int parc with time zone .)
    references      reduce using rule 151 (TIPO -> timestamp para int parc with time zone .)
    parc            reduce using rule 151 (TIPO -> timestamp para int parc with time zone .)
    coma            reduce using rule 151 (TIPO -> timestamp para int parc with time zone .)
    ptcoma          reduce using rule 151 (TIPO -> timestamp para int parc with time zone .)


state 548

    (152) TIPO -> time para int parc without time zone .

    constraint      reduce using rule 152 (TIPO -> time para int parc without time zone .)
    unique          reduce using rule 152 (TIPO -> time para int parc without time zone .)
    check           reduce using rule 152 (TIPO -> time para int parc without time zone .)
    default         reduce using rule 152 (TIPO -> time para int parc without time zone .)
    not             reduce using rule 152 (TIPO -> time para int parc without time zone .)
    null            reduce using rule 152 (TIPO -> time para int parc without time zone .)
    primary         reduce using rule 152 (TIPO -> time para int parc without time zone .)
    references      reduce using rule 152 (TIPO -> time para int parc without time zone .)
    parc            reduce using rule 152 (TIPO -> time para int parc without time zone .)
    coma            reduce using rule 152 (TIPO -> time para int parc without time zone .)
    ptcoma          reduce using rule 152 (TIPO -> time para int parc without time zone .)


state 549

    (153) TIPO -> time para int parc with time zone .

    constraint      reduce using rule 153 (TIPO -> time para int parc with time zone .)
    unique          reduce using rule 153 (TIPO -> time para int parc with time zone .)
    check           reduce using rule 153 (TIPO -> time para int parc with time zone .)
    default         reduce using rule 153 (TIPO -> time para int parc with time zone .)
    not             reduce using rule 153 (TIPO -> time para int parc with time zone .)
    null            reduce using rule 153 (TIPO -> time para int parc with time zone .)
    primary         reduce using rule 153 (TIPO -> time para int parc with time zone .)
    references      reduce using rule 153 (TIPO -> time para int parc with time zone .)
    parc            reduce using rule 153 (TIPO -> time para int parc with time zone .)
    coma            reduce using rule 153 (TIPO -> time para int parc with time zone .)
    ptcoma          reduce using rule 153 (TIPO -> time para int parc with time zone .)


state 550

    (90) OPCONST -> foreign key para LEXP parc references id para . LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 553
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 551

    (49) ADD -> constraint id foreign key para LEXP parc references . id para LEXP parc

    id              shift and go to state 554


state 552

    (48) ADD -> foreign key para LEXP parc references id para . LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 555
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 553

    (90) OPCONST -> foreign key para LEXP parc references id para LEXP . parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 556
    coma            shift and go to state 84


state 554

    (49) ADD -> constraint id foreign key para LEXP parc references id . para LEXP parc

    para            shift and go to state 557


state 555

    (48) ADD -> foreign key para LEXP parc references id para LEXP . parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 558
    coma            shift and go to state 84


state 556

    (90) OPCONST -> foreign key para LEXP parc references id para LEXP parc .

    parc            reduce using rule 90 (OPCONST -> foreign key para LEXP parc references id para LEXP parc .)
    coma            reduce using rule 90 (OPCONST -> foreign key para LEXP parc references id para LEXP parc .)


state 557

    (49) ADD -> constraint id foreign key para LEXP parc references id para . LEXP parc
    (134) LEXP -> . LEXP coma EXP
    (135) LEXP -> . EXP
    (177) EXP -> . EXP mas EXP
    (178) EXP -> . EXP menos EXP
    (179) EXP -> . EXP multiplicacion EXP
    (180) EXP -> . EXP division EXP
    (181) EXP -> . EXP modulo EXP
    (182) EXP -> . EXP elevado EXP
    (183) EXP -> . EXP and EXP
    (184) EXP -> . EXP or EXP
    (185) EXP -> . EXP mayor EXP
    (186) EXP -> . EXP menor EXP
    (187) EXP -> . EXP mayor_igual EXP
    (188) EXP -> . EXP menor_igual EXP
    (189) EXP -> . EXP igual EXP
    (190) EXP -> . EXP diferente1 EXP
    (191) EXP -> . EXP diferente2 EXP
    (192) EXP -> . EXP punto EXP
    (193) EXP -> . EXP between EXP
    (194) EXP -> . EXP is not null
    (195) EXP -> . EXP is null
    (196) EXP -> . EXP isnull
    (197) EXP -> . EXP notnull
    (198) EXP -> . EXP is true
    (199) EXP -> . EXP is not true
    (200) EXP -> . EXP is false
    (201) EXP -> . EXP is not false
    (202) EXP -> . EXP is unknown
    (203) EXP -> . EXP is not unknown
    (204) EXP -> . EXP as cadenaString
    (205) EXP -> . EXP cadenaString
    (206) EXP -> . EXP as id
    (207) EXP -> . EXP id
    (208) EXP -> . EXP as cadena
    (209) EXP -> . EXP cadena
    (210) EXP -> . mas EXP
    (211) EXP -> . menos EXP
    (212) EXP -> . not EXP
    (213) EXP -> . EXP in para EXP parc
    (214) EXP -> . EXP not in para EXP parc
    (215) EXP -> . EXP not between EXP
    (216) EXP -> . EXP between symetric EXP
    (217) EXP -> . EXP not between symetric EXP
    (218) EXP -> . EXP is distinct r_from EXP
    (219) EXP -> . EXP is not distinct r_from EXP
    (220) EXP -> . EXP like cadena
    (221) EXP -> . EXP not like cadena
    (222) EXP -> . SELECT
    (223) EXP -> . CASE
    (224) EXP -> . para EXP parc
    (225) EXP -> . id para LEXP parc
    (226) EXP -> . id para parc
    (227) EXP -> . any para LEXP parc
    (228) EXP -> . all para LEXP parc
    (229) EXP -> . some para LEXP parc
    (230) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (231) EXP -> . int
    (232) EXP -> . decimales
    (233) EXP -> . cadena
    (234) EXP -> . cadenaString
    (235) EXP -> . true
    (236) EXP -> . false
    (237) EXP -> . id
    (238) EXP -> . multiplicacion
    (239) EXP -> . null
    (240) EXP -> . current_time
    (241) EXP -> . current_date
    (242) EXP -> . timestamp cadena
    (243) EXP -> . interval cadena
    (244) EXP -> . default
    (95) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (96) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (97) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (16) CASE -> . case LISTAWHEN ELSE end
    (17) CASE -> . case LISTAWHEN end

    mas             shift and go to state 40
    menos           shift and go to state 41
    not             shift and go to state 43
    para            shift and go to state 50
    id              shift and go to state 48
    any             shift and go to state 53
    all             shift and go to state 54
    some            shift and go to state 55
    extract         shift and go to state 56
    int             shift and go to state 58
    decimales       shift and go to state 59
    cadena          shift and go to state 49
    cadenaString    shift and go to state 47
    true            shift and go to state 45
    false           shift and go to state 46
    multiplicacion  shift and go to state 42
    null            shift and go to state 44
    current_time    shift and go to state 60
    current_date    shift and go to state 61
    timestamp       shift and go to state 57
    interval        shift and go to state 62
    default         shift and go to state 63
    select          shift and go to state 16
    case            shift and go to state 24

    LEXP                           shift and go to state 559
    EXP                            shift and go to state 39
    SELECT                         shift and go to state 51
    CASE                           shift and go to state 52

state 558

    (48) ADD -> foreign key para LEXP parc references id para LEXP parc .

    ptcoma          reduce using rule 48 (ADD -> foreign key para LEXP parc references id para LEXP parc .)


state 559

    (49) ADD -> constraint id foreign key para LEXP parc references id para LEXP . parc
    (134) LEXP -> LEXP . coma EXP

    parc            shift and go to state 560
    coma            shift and go to state 84


state 560

    (49) ADD -> constraint id foreign key para LEXP parc references id para LEXP parc .

    ptcoma          reduce using rule 49 (ADD -> constraint id foreign key para LEXP parc references id para LEXP parc .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for r_from in state 38 resolved as shift
WARNING: shift/reduce conflict for coma in state 38 resolved as shift
WARNING: shift/reduce conflict for where in state 38 resolved as shift
WARNING: shift/reduce conflict for union in state 38 resolved as shift
WARNING: shift/reduce conflict for mas in state 39 resolved as shift
WARNING: shift/reduce conflict for menos in state 39 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 39 resolved as shift
WARNING: shift/reduce conflict for division in state 39 resolved as shift
WARNING: shift/reduce conflict for modulo in state 39 resolved as shift
WARNING: shift/reduce conflict for elevado in state 39 resolved as shift
WARNING: shift/reduce conflict for and in state 39 resolved as shift
WARNING: shift/reduce conflict for or in state 39 resolved as shift
WARNING: shift/reduce conflict for mayor in state 39 resolved as shift
WARNING: shift/reduce conflict for menor in state 39 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 39 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 39 resolved as shift
WARNING: shift/reduce conflict for igual in state 39 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 39 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 39 resolved as shift
WARNING: shift/reduce conflict for punto in state 39 resolved as shift
WARNING: shift/reduce conflict for between in state 39 resolved as shift
WARNING: shift/reduce conflict for is in state 39 resolved as shift
WARNING: shift/reduce conflict for isnull in state 39 resolved as shift
WARNING: shift/reduce conflict for notnull in state 39 resolved as shift
WARNING: shift/reduce conflict for as in state 39 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 39 resolved as shift
WARNING: shift/reduce conflict for id in state 39 resolved as shift
WARNING: shift/reduce conflict for cadena in state 39 resolved as shift
WARNING: shift/reduce conflict for in in state 39 resolved as shift
WARNING: shift/reduce conflict for not in state 39 resolved as shift
WARNING: shift/reduce conflict for like in state 39 resolved as shift
WARNING: shift/reduce conflict for group in state 83 resolved as shift
WARNING: shift/reduce conflict for coma in state 144 resolved as shift
WARNING: shift/reduce conflict for where in state 144 resolved as shift
WARNING: shift/reduce conflict for union in state 144 resolved as shift
WARNING: shift/reduce conflict for having in state 145 resolved as shift
WARNING: shift/reduce conflict for mas in state 147 resolved as shift
WARNING: shift/reduce conflict for menos in state 147 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 147 resolved as shift
WARNING: shift/reduce conflict for division in state 147 resolved as shift
WARNING: shift/reduce conflict for modulo in state 147 resolved as shift
WARNING: shift/reduce conflict for elevado in state 147 resolved as shift
WARNING: shift/reduce conflict for and in state 147 resolved as shift
WARNING: shift/reduce conflict for or in state 147 resolved as shift
WARNING: shift/reduce conflict for mayor in state 147 resolved as shift
WARNING: shift/reduce conflict for menor in state 147 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 147 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 147 resolved as shift
WARNING: shift/reduce conflict for igual in state 147 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 147 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 147 resolved as shift
WARNING: shift/reduce conflict for punto in state 147 resolved as shift
WARNING: shift/reduce conflict for between in state 147 resolved as shift
WARNING: shift/reduce conflict for is in state 147 resolved as shift
WARNING: shift/reduce conflict for isnull in state 147 resolved as shift
WARNING: shift/reduce conflict for notnull in state 147 resolved as shift
WARNING: shift/reduce conflict for as in state 147 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 147 resolved as shift
WARNING: shift/reduce conflict for id in state 147 resolved as shift
WARNING: shift/reduce conflict for cadena in state 147 resolved as shift
WARNING: shift/reduce conflict for in in state 147 resolved as shift
WARNING: shift/reduce conflict for not in state 147 resolved as shift
WARNING: shift/reduce conflict for like in state 147 resolved as shift
WARNING: shift/reduce conflict for coma in state 148 resolved as shift
WARNING: shift/reduce conflict for coma in state 152 resolved as shift
WARNING: shift/reduce conflict for coma in state 227 resolved as shift
WARNING: shift/reduce conflict for where in state 227 resolved as shift
WARNING: shift/reduce conflict for union in state 227 resolved as shift
WARNING: shift/reduce conflict for group in state 228 resolved as shift
WARNING: shift/reduce conflict for union in state 229 resolved as shift
WARNING: shift/reduce conflict for intersect in state 229 resolved as shift
WARNING: shift/reduce conflict for except in state 229 resolved as shift
WARNING: shift/reduce conflict for coma in state 234 resolved as shift
WARNING: shift/reduce conflict for group in state 293 resolved as shift
WARNING: shift/reduce conflict for having in state 294 resolved as shift
WARNING: shift/reduce conflict for order in state 295 resolved as shift
WARNING: shift/reduce conflict for coma in state 299 resolved as shift
WARNING: shift/reduce conflict for coma in state 300 resolved as shift
WARNING: shift/reduce conflict for parc in state 303 resolved as shift
WARNING: shift/reduce conflict for having in state 362 resolved as shift
WARNING: shift/reduce conflict for union in state 363 resolved as shift
WARNING: shift/reduce conflict for intersect in state 363 resolved as shift
WARNING: shift/reduce conflict for except in state 363 resolved as shift
WARNING: shift/reduce conflict for limit in state 364 resolved as shift
WARNING: shift/reduce conflict for offset in state 364 resolved as shift
WARNING: shift/reduce conflict for coma in state 366 resolved as shift
WARNING: shift/reduce conflict for coma in state 368 resolved as shift
WARNING: shift/reduce conflict for coma in state 370 resolved as shift
WARNING: shift/reduce conflict for union in state 426 resolved as shift
WARNING: shift/reduce conflict for intersect in state 426 resolved as shift
WARNING: shift/reduce conflict for except in state 426 resolved as shift
WARNING: shift/reduce conflict for order in state 427 resolved as shift
WARNING: shift/reduce conflict for coma in state 432 resolved as shift
WARNING: shift/reduce conflict for coma in state 433 resolved as shift
WARNING: shift/reduce conflict for coma in state 434 resolved as shift
WARNING: shift/reduce conflict for not in state 440 resolved as shift
WARNING: shift/reduce conflict for order in state 474 resolved as shift
WARNING: shift/reduce conflict for limit in state 475 resolved as shift
WARNING: shift/reduce conflict for offset in state 475 resolved as shift
WARNING: shift/reduce conflict for offset in state 476 resolved as shift
WARNING: shift/reduce conflict for offset in state 477 resolved as shift
WARNING: shift/reduce conflict for limit in state 478 resolved as shift
WARNING: shift/reduce conflict for coma in state 479 resolved as shift
WARNING: shift/reduce conflict for asc in state 479 resolved as shift
WARNING: shift/reduce conflict for desc in state 479 resolved as shift
WARNING: shift/reduce conflict for limit in state 506 resolved as shift
WARNING: shift/reduce conflict for offset in state 506 resolved as shift
