Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    add
    alter
    between
    column
    databases
    dospuntos
    drop
    enum
    exist
    if
    ilike
    in
    insert
    into
    isnull
    like
    llavea
    llavec
    mode
    notnull
    owner
    parac
    rename
    replace
    set
    show
    simboloor
    similar
    symetric
    to
    type
    unknown
    update
    values
    without
    zone

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> SELECT
Rule 5     instruccion -> CREATETABLE
Rule 6     instruccion -> id igual EXP ptcoma
Rule 7     CREATETABLE -> create table id para LDEF parc ptcoma
Rule 8     CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma
Rule 9     LDEF -> LDEF coma COLDEF
Rule 10    LDEF -> COLDEF
Rule 11    COLDEF -> OPCONST
Rule 12    COLDEF -> constraint id OPCONST
Rule 13    COLDEF -> id TIPO
Rule 14    COLDEF -> id TIPO LOPCOLUMN
Rule 15    LOPCOLUMN -> LOPCOLUMN OPCOLUMN
Rule 16    LOPCOLUMN -> OPCOLUMN
Rule 17    OPCOLUMN -> constraint id unique
Rule 18    OPCOLUMN -> constraint id check para EXP parc
Rule 19    OPCOLUMN -> default EXP
Rule 20    OPCOLUMN -> PNULL
Rule 21    OPCOLUMN -> primary key
Rule 22    OPCOLUMN -> references id
Rule 23    PNULL -> not null
Rule 24    PNULL -> null
Rule 25    OPCONST -> primary key para LEXP parc
Rule 26    OPCONST -> foreign key para LEXP parc references table para LEXP parc
Rule 27    OPCONST -> unique para LEXP parc
Rule 28    OPCONST -> check para EXP parc
Rule 29    HERENCIA -> inherits para LEXP parc
Rule 30    SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING
Rule 31    SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING
Rule 32    LSELECT -> LEXP
Rule 33    LSELECT -> multiplicacion
Rule 34    LFROM -> LFROM coma FROM
Rule 35    LFROM -> FROM
Rule 36    FROM -> EXP
Rule 37    FROM -> EXP as id
Rule 38    FROM -> para SELECT parc
Rule 39    FROM -> para SELECT parc as id
Rule 40    WHERE -> where EXP
Rule 41    WHERE -> <empty>
Rule 42    GROUP -> group by EXP
Rule 43    GROUP -> <empty>
Rule 44    HAVING -> having EXP
Rule 45    HAVING -> ptcoma
Rule 46    LEXP -> LEXP coma EXP
Rule 47    LEXP -> EXP
Rule 48    TIPO -> smallint
Rule 49    TIPO -> integer
Rule 50    TIPO -> bigint
Rule 51    TIPO -> decimal para LEXP parc
Rule 52    TIPO -> numeric para LEXP parc
Rule 53    TIPO -> real
Rule 54    TIPO -> double precision
Rule 55    TIPO -> money
Rule 56    TIPO -> character varying para int parc
Rule 57    TIPO -> varchar para int parc
Rule 58    TIPO -> character para int parc
Rule 59    TIPO -> char para int parc
Rule 60    TIPO -> text
Rule 61    TIPO -> timestamp
Rule 62    TIPO -> timestamp para int parc
Rule 63    TIPO -> date
Rule 64    TIPO -> time
Rule 65    TIPO -> time para int parc
Rule 66    TIPO -> interval
Rule 67    TIPO -> interval para int parc
Rule 68    TIPO -> interval FIELDS
Rule 69    TIPO -> interval para int parc FIELDS
Rule 70    TIPO -> boolean
Rule 71    FIELDS -> year
Rule 72    FIELDS -> month
Rule 73    FIELDS -> day
Rule 74    FIELDS -> hour
Rule 75    FIELDS -> minute
Rule 76    FIELDS -> second
Rule 77    EXP -> EXP mas EXP
Rule 78    EXP -> EXP menos EXP
Rule 79    EXP -> EXP multiplicacion EXP
Rule 80    EXP -> EXP division EXP
Rule 81    EXP -> EXP modulo EXP
Rule 82    EXP -> EXP elevado EXP
Rule 83    EXP -> EXP and EXP
Rule 84    EXP -> EXP or EXP
Rule 85    EXP -> EXP mayor EXP
Rule 86    EXP -> EXP menor EXP
Rule 87    EXP -> EXP mayor_igual EXP
Rule 88    EXP -> EXP menor_igual EXP
Rule 89    EXP -> EXP igual EXP
Rule 90    EXP -> EXP diferente1 EXP
Rule 91    EXP -> EXP diferente2 EXP
Rule 92    EXP -> EXP punto EXP
Rule 93    EXP -> mas EXP
Rule 94    EXP -> menos EXP
Rule 95    EXP -> not EXP
Rule 96    EXP -> para EXP parc
Rule 97    EXP -> int
Rule 98    EXP -> decimales
Rule 99    EXP -> cadena
Rule 100   EXP -> char_er
Rule 101   EXP -> true
Rule 102   EXP -> false
Rule 103   EXP -> id

Terminals, with rules where they appear

add                  : 
alter                : 
and                  : 83
as                   : 37 39
between              : 
bigint               : 50
boolean              : 70
by                   : 42
cadena               : 99
char                 : 59
char_er              : 100
character            : 56 58
check                : 18 28
column               : 
coma                 : 9 34 46
constraint           : 12 17 18
create               : 7 8
databases            : 
date                 : 63
day                  : 73
decimal              : 51
decimales            : 98
default              : 19
diferente1           : 90
diferente2           : 91
distinct             : 30
division             : 80
dospuntos            : 
double               : 54
drop                 : 
elevado              : 82
enum                 : 
error                : 
exist                : 
false                : 102
foreign              : 26
group                : 42
having               : 44
hour                 : 74
id                   : 6 7 8 12 13 14 17 18 22 37 39 103
if                   : 
igual                : 6 89
ilike                : 
in                   : 
inherits             : 29
insert               : 
int                  : 56 57 58 59 62 65 67 69 97
integer              : 49
interval             : 66 67 68 69
into                 : 
isnull               : 
key                  : 21 25 26
like                 : 
llavea               : 
llavec               : 
mas                  : 77 93
mayor                : 85
mayor_igual          : 87
menor                : 86
menor_igual          : 88
menos                : 78 94
minute               : 75
mode                 : 
modulo               : 81
money                : 55
month                : 72
multiplicacion       : 33 79
not                  : 23 95
notnull              : 
null                 : 23 24
numeric              : 52
or                   : 84
owner                : 
para                 : 7 8 18 25 26 26 27 28 29 38 39 51 52 56 57 58 59 62 65 67 69 96
parac                : 
parc                 : 7 8 18 25 26 26 27 28 29 38 39 51 52 56 57 58 59 62 65 67 69 96
precision            : 54
primary              : 21 25
ptcoma               : 6 7 8 45
punto                : 92
r_from               : 30 31
real                 : 53
references           : 22 26
rename               : 
replace              : 
second               : 76
select               : 30 31
set                  : 
show                 : 
simboloor            : 
similar              : 
smallint             : 48
symetric             : 
table                : 7 8 26
text                 : 60
time                 : 64 65
timestamp            : 61 62
to                   : 
true                 : 101
type                 : 
unique               : 17 27
unknown              : 
update               : 
values               : 
varchar              : 57
varying              : 56
where                : 40
without              : 
year                 : 71
zone                 : 

Nonterminals, with rules where they appear

COLDEF               : 9 10
CREATETABLE          : 5
EXP                  : 6 18 19 28 36 37 40 42 44 46 47 77 77 78 78 79 79 80 80 81 81 82 82 83 83 84 84 85 85 86 86 87 87 88 88 89 89 90 90 91 91 92 92 93 94 95 96
FIELDS               : 68 69
FROM                 : 34 35
GROUP                : 30 31
HAVING               : 30 31
HERENCIA             : 8
LDEF                 : 7 8 9
LEXP                 : 25 26 26 27 29 32 46 51 52
LFROM                : 30 31 34
LOPCOLUMN            : 14 15
LSELECT              : 30 31
OPCOLUMN             : 15 16
OPCONST              : 11 12
PNULL                : 20
SELECT               : 4 38 39
TIPO                 : 13 14
WHERE                : 30 31
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . SELECT
    (5) instruccion -> . CREATETABLE
    (6) instruccion -> . id igual EXP ptcoma
    (30) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING
    (31) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING
    (7) CREATETABLE -> . create table id para LDEF parc ptcoma
    (8) CREATETABLE -> . create table id para LDEF parc HERENCIA ptcoma

    id              shift and go to state 6
    select          shift and go to state 7
    create          shift and go to state 8

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    SELECT                         shift and go to state 4
    CREATETABLE                    shift and go to state 5

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . SELECT
    (5) instruccion -> . CREATETABLE
    (6) instruccion -> . id igual EXP ptcoma
    (30) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING
    (31) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING
    (7) CREATETABLE -> . create table id para LDEF parc ptcoma
    (8) CREATETABLE -> . create table id para LDEF parc HERENCIA ptcoma

    $end            reduce using rule 1 (init -> instrucciones .)
    id              shift and go to state 6
    select          shift and go to state 7
    create          shift and go to state 8

    instruccion                    shift and go to state 9
    SELECT                         shift and go to state 4
    CREATETABLE                    shift and go to state 5

state 3

    (3) instrucciones -> instruccion .

    id              reduce using rule 3 (instrucciones -> instruccion .)
    select          reduce using rule 3 (instrucciones -> instruccion .)
    create          reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> SELECT .

    id              reduce using rule 4 (instruccion -> SELECT .)
    select          reduce using rule 4 (instruccion -> SELECT .)
    create          reduce using rule 4 (instruccion -> SELECT .)
    $end            reduce using rule 4 (instruccion -> SELECT .)


state 5

    (5) instruccion -> CREATETABLE .

    id              reduce using rule 5 (instruccion -> CREATETABLE .)
    select          reduce using rule 5 (instruccion -> CREATETABLE .)
    create          reduce using rule 5 (instruccion -> CREATETABLE .)
    $end            reduce using rule 5 (instruccion -> CREATETABLE .)


state 6

    (6) instruccion -> id . igual EXP ptcoma

    igual           shift and go to state 10


state 7

    (30) SELECT -> select . distinct LSELECT r_from LFROM WHERE GROUP HAVING
    (31) SELECT -> select . LSELECT r_from LFROM WHERE GROUP HAVING
    (32) LSELECT -> . LEXP
    (33) LSELECT -> . multiplicacion
    (46) LEXP -> . LEXP coma EXP
    (47) LEXP -> . EXP
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    distinct        shift and go to state 11
    multiplicacion  shift and go to state 14
    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    LSELECT                        shift and go to state 12
    LEXP                           shift and go to state 13
    EXP                            shift and go to state 15

state 8

    (7) CREATETABLE -> create . table id para LDEF parc ptcoma
    (8) CREATETABLE -> create . table id para LDEF parc HERENCIA ptcoma

    table           shift and go to state 27


state 9

    (2) instrucciones -> instrucciones instruccion .

    id              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    select          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    create          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 10

    (6) instruccion -> id igual . EXP ptcoma
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    EXP                            shift and go to state 28

state 11

    (30) SELECT -> select distinct . LSELECT r_from LFROM WHERE GROUP HAVING
    (32) LSELECT -> . LEXP
    (33) LSELECT -> . multiplicacion
    (46) LEXP -> . LEXP coma EXP
    (47) LEXP -> . EXP
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    multiplicacion  shift and go to state 14
    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    LSELECT                        shift and go to state 29
    LEXP                           shift and go to state 13
    EXP                            shift and go to state 15

state 12

    (31) SELECT -> select LSELECT . r_from LFROM WHERE GROUP HAVING

    r_from          shift and go to state 30


state 13

    (32) LSELECT -> LEXP .
    (46) LEXP -> LEXP . coma EXP

    r_from          reduce using rule 32 (LSELECT -> LEXP .)
    coma            shift and go to state 31


state 14

    (33) LSELECT -> multiplicacion .

    r_from          reduce using rule 33 (LSELECT -> multiplicacion .)


state 15

    (47) LEXP -> EXP .
    (77) EXP -> EXP . mas EXP
    (78) EXP -> EXP . menos EXP
    (79) EXP -> EXP . multiplicacion EXP
    (80) EXP -> EXP . division EXP
    (81) EXP -> EXP . modulo EXP
    (82) EXP -> EXP . elevado EXP
    (83) EXP -> EXP . and EXP
    (84) EXP -> EXP . or EXP
    (85) EXP -> EXP . mayor EXP
    (86) EXP -> EXP . menor EXP
    (87) EXP -> EXP . mayor_igual EXP
    (88) EXP -> EXP . menor_igual EXP
    (89) EXP -> EXP . igual EXP
    (90) EXP -> EXP . diferente1 EXP
    (91) EXP -> EXP . diferente2 EXP
    (92) EXP -> EXP . punto EXP

    coma            reduce using rule 47 (LEXP -> EXP .)
    r_from          reduce using rule 47 (LEXP -> EXP .)
    parc            reduce using rule 47 (LEXP -> EXP .)
    mas             shift and go to state 32
    menos           shift and go to state 33
    multiplicacion  shift and go to state 34
    division        shift and go to state 35
    modulo          shift and go to state 36
    elevado         shift and go to state 37
    and             shift and go to state 38
    or              shift and go to state 39
    mayor           shift and go to state 40
    menor           shift and go to state 41
    mayor_igual     shift and go to state 42
    menor_igual     shift and go to state 43
    igual           shift and go to state 44
    diferente1      shift and go to state 45
    diferente2      shift and go to state 46
    punto           shift and go to state 47


state 16

    (93) EXP -> mas . EXP
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    EXP                            shift and go to state 48

state 17

    (94) EXP -> menos . EXP
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    EXP                            shift and go to state 49

state 18

    (95) EXP -> not . EXP
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    EXP                            shift and go to state 50

state 19

    (96) EXP -> para . EXP parc
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    EXP                            shift and go to state 51

state 20

    (97) EXP -> int .

    mas             reduce using rule 97 (EXP -> int .)
    menos           reduce using rule 97 (EXP -> int .)
    multiplicacion  reduce using rule 97 (EXP -> int .)
    division        reduce using rule 97 (EXP -> int .)
    modulo          reduce using rule 97 (EXP -> int .)
    elevado         reduce using rule 97 (EXP -> int .)
    and             reduce using rule 97 (EXP -> int .)
    or              reduce using rule 97 (EXP -> int .)
    mayor           reduce using rule 97 (EXP -> int .)
    menor           reduce using rule 97 (EXP -> int .)
    mayor_igual     reduce using rule 97 (EXP -> int .)
    menor_igual     reduce using rule 97 (EXP -> int .)
    igual           reduce using rule 97 (EXP -> int .)
    diferente1      reduce using rule 97 (EXP -> int .)
    diferente2      reduce using rule 97 (EXP -> int .)
    punto           reduce using rule 97 (EXP -> int .)
    coma            reduce using rule 97 (EXP -> int .)
    r_from          reduce using rule 97 (EXP -> int .)
    ptcoma          reduce using rule 97 (EXP -> int .)
    parc            reduce using rule 97 (EXP -> int .)
    as              reduce using rule 97 (EXP -> int .)
    where           reduce using rule 97 (EXP -> int .)
    group           reduce using rule 97 (EXP -> int .)
    having          reduce using rule 97 (EXP -> int .)
    id              reduce using rule 97 (EXP -> int .)
    select          reduce using rule 97 (EXP -> int .)
    create          reduce using rule 97 (EXP -> int .)
    $end            reduce using rule 97 (EXP -> int .)
    constraint      reduce using rule 97 (EXP -> int .)
    default         reduce using rule 97 (EXP -> int .)
    primary         reduce using rule 97 (EXP -> int .)
    references      reduce using rule 97 (EXP -> int .)
    not             reduce using rule 97 (EXP -> int .)
    null            reduce using rule 97 (EXP -> int .)


state 21

    (98) EXP -> decimales .

    mas             reduce using rule 98 (EXP -> decimales .)
    menos           reduce using rule 98 (EXP -> decimales .)
    multiplicacion  reduce using rule 98 (EXP -> decimales .)
    division        reduce using rule 98 (EXP -> decimales .)
    modulo          reduce using rule 98 (EXP -> decimales .)
    elevado         reduce using rule 98 (EXP -> decimales .)
    and             reduce using rule 98 (EXP -> decimales .)
    or              reduce using rule 98 (EXP -> decimales .)
    mayor           reduce using rule 98 (EXP -> decimales .)
    menor           reduce using rule 98 (EXP -> decimales .)
    mayor_igual     reduce using rule 98 (EXP -> decimales .)
    menor_igual     reduce using rule 98 (EXP -> decimales .)
    igual           reduce using rule 98 (EXP -> decimales .)
    diferente1      reduce using rule 98 (EXP -> decimales .)
    diferente2      reduce using rule 98 (EXP -> decimales .)
    punto           reduce using rule 98 (EXP -> decimales .)
    coma            reduce using rule 98 (EXP -> decimales .)
    r_from          reduce using rule 98 (EXP -> decimales .)
    ptcoma          reduce using rule 98 (EXP -> decimales .)
    parc            reduce using rule 98 (EXP -> decimales .)
    as              reduce using rule 98 (EXP -> decimales .)
    where           reduce using rule 98 (EXP -> decimales .)
    group           reduce using rule 98 (EXP -> decimales .)
    having          reduce using rule 98 (EXP -> decimales .)
    id              reduce using rule 98 (EXP -> decimales .)
    select          reduce using rule 98 (EXP -> decimales .)
    create          reduce using rule 98 (EXP -> decimales .)
    $end            reduce using rule 98 (EXP -> decimales .)
    constraint      reduce using rule 98 (EXP -> decimales .)
    default         reduce using rule 98 (EXP -> decimales .)
    primary         reduce using rule 98 (EXP -> decimales .)
    references      reduce using rule 98 (EXP -> decimales .)
    not             reduce using rule 98 (EXP -> decimales .)
    null            reduce using rule 98 (EXP -> decimales .)


state 22

    (99) EXP -> cadena .

    mas             reduce using rule 99 (EXP -> cadena .)
    menos           reduce using rule 99 (EXP -> cadena .)
    multiplicacion  reduce using rule 99 (EXP -> cadena .)
    division        reduce using rule 99 (EXP -> cadena .)
    modulo          reduce using rule 99 (EXP -> cadena .)
    elevado         reduce using rule 99 (EXP -> cadena .)
    and             reduce using rule 99 (EXP -> cadena .)
    or              reduce using rule 99 (EXP -> cadena .)
    mayor           reduce using rule 99 (EXP -> cadena .)
    menor           reduce using rule 99 (EXP -> cadena .)
    mayor_igual     reduce using rule 99 (EXP -> cadena .)
    menor_igual     reduce using rule 99 (EXP -> cadena .)
    igual           reduce using rule 99 (EXP -> cadena .)
    diferente1      reduce using rule 99 (EXP -> cadena .)
    diferente2      reduce using rule 99 (EXP -> cadena .)
    punto           reduce using rule 99 (EXP -> cadena .)
    coma            reduce using rule 99 (EXP -> cadena .)
    r_from          reduce using rule 99 (EXP -> cadena .)
    ptcoma          reduce using rule 99 (EXP -> cadena .)
    parc            reduce using rule 99 (EXP -> cadena .)
    as              reduce using rule 99 (EXP -> cadena .)
    where           reduce using rule 99 (EXP -> cadena .)
    group           reduce using rule 99 (EXP -> cadena .)
    having          reduce using rule 99 (EXP -> cadena .)
    id              reduce using rule 99 (EXP -> cadena .)
    select          reduce using rule 99 (EXP -> cadena .)
    create          reduce using rule 99 (EXP -> cadena .)
    $end            reduce using rule 99 (EXP -> cadena .)
    constraint      reduce using rule 99 (EXP -> cadena .)
    default         reduce using rule 99 (EXP -> cadena .)
    primary         reduce using rule 99 (EXP -> cadena .)
    references      reduce using rule 99 (EXP -> cadena .)
    not             reduce using rule 99 (EXP -> cadena .)
    null            reduce using rule 99 (EXP -> cadena .)


state 23

    (100) EXP -> char_er .

    mas             reduce using rule 100 (EXP -> char_er .)
    menos           reduce using rule 100 (EXP -> char_er .)
    multiplicacion  reduce using rule 100 (EXP -> char_er .)
    division        reduce using rule 100 (EXP -> char_er .)
    modulo          reduce using rule 100 (EXP -> char_er .)
    elevado         reduce using rule 100 (EXP -> char_er .)
    and             reduce using rule 100 (EXP -> char_er .)
    or              reduce using rule 100 (EXP -> char_er .)
    mayor           reduce using rule 100 (EXP -> char_er .)
    menor           reduce using rule 100 (EXP -> char_er .)
    mayor_igual     reduce using rule 100 (EXP -> char_er .)
    menor_igual     reduce using rule 100 (EXP -> char_er .)
    igual           reduce using rule 100 (EXP -> char_er .)
    diferente1      reduce using rule 100 (EXP -> char_er .)
    diferente2      reduce using rule 100 (EXP -> char_er .)
    punto           reduce using rule 100 (EXP -> char_er .)
    coma            reduce using rule 100 (EXP -> char_er .)
    r_from          reduce using rule 100 (EXP -> char_er .)
    ptcoma          reduce using rule 100 (EXP -> char_er .)
    parc            reduce using rule 100 (EXP -> char_er .)
    as              reduce using rule 100 (EXP -> char_er .)
    where           reduce using rule 100 (EXP -> char_er .)
    group           reduce using rule 100 (EXP -> char_er .)
    having          reduce using rule 100 (EXP -> char_er .)
    id              reduce using rule 100 (EXP -> char_er .)
    select          reduce using rule 100 (EXP -> char_er .)
    create          reduce using rule 100 (EXP -> char_er .)
    $end            reduce using rule 100 (EXP -> char_er .)
    constraint      reduce using rule 100 (EXP -> char_er .)
    default         reduce using rule 100 (EXP -> char_er .)
    primary         reduce using rule 100 (EXP -> char_er .)
    references      reduce using rule 100 (EXP -> char_er .)
    not             reduce using rule 100 (EXP -> char_er .)
    null            reduce using rule 100 (EXP -> char_er .)


state 24

    (101) EXP -> true .

    mas             reduce using rule 101 (EXP -> true .)
    menos           reduce using rule 101 (EXP -> true .)
    multiplicacion  reduce using rule 101 (EXP -> true .)
    division        reduce using rule 101 (EXP -> true .)
    modulo          reduce using rule 101 (EXP -> true .)
    elevado         reduce using rule 101 (EXP -> true .)
    and             reduce using rule 101 (EXP -> true .)
    or              reduce using rule 101 (EXP -> true .)
    mayor           reduce using rule 101 (EXP -> true .)
    menor           reduce using rule 101 (EXP -> true .)
    mayor_igual     reduce using rule 101 (EXP -> true .)
    menor_igual     reduce using rule 101 (EXP -> true .)
    igual           reduce using rule 101 (EXP -> true .)
    diferente1      reduce using rule 101 (EXP -> true .)
    diferente2      reduce using rule 101 (EXP -> true .)
    punto           reduce using rule 101 (EXP -> true .)
    coma            reduce using rule 101 (EXP -> true .)
    r_from          reduce using rule 101 (EXP -> true .)
    ptcoma          reduce using rule 101 (EXP -> true .)
    parc            reduce using rule 101 (EXP -> true .)
    as              reduce using rule 101 (EXP -> true .)
    where           reduce using rule 101 (EXP -> true .)
    group           reduce using rule 101 (EXP -> true .)
    having          reduce using rule 101 (EXP -> true .)
    id              reduce using rule 101 (EXP -> true .)
    select          reduce using rule 101 (EXP -> true .)
    create          reduce using rule 101 (EXP -> true .)
    $end            reduce using rule 101 (EXP -> true .)
    constraint      reduce using rule 101 (EXP -> true .)
    default         reduce using rule 101 (EXP -> true .)
    primary         reduce using rule 101 (EXP -> true .)
    references      reduce using rule 101 (EXP -> true .)
    not             reduce using rule 101 (EXP -> true .)
    null            reduce using rule 101 (EXP -> true .)


state 25

    (102) EXP -> false .

    mas             reduce using rule 102 (EXP -> false .)
    menos           reduce using rule 102 (EXP -> false .)
    multiplicacion  reduce using rule 102 (EXP -> false .)
    division        reduce using rule 102 (EXP -> false .)
    modulo          reduce using rule 102 (EXP -> false .)
    elevado         reduce using rule 102 (EXP -> false .)
    and             reduce using rule 102 (EXP -> false .)
    or              reduce using rule 102 (EXP -> false .)
    mayor           reduce using rule 102 (EXP -> false .)
    menor           reduce using rule 102 (EXP -> false .)
    mayor_igual     reduce using rule 102 (EXP -> false .)
    menor_igual     reduce using rule 102 (EXP -> false .)
    igual           reduce using rule 102 (EXP -> false .)
    diferente1      reduce using rule 102 (EXP -> false .)
    diferente2      reduce using rule 102 (EXP -> false .)
    punto           reduce using rule 102 (EXP -> false .)
    coma            reduce using rule 102 (EXP -> false .)
    r_from          reduce using rule 102 (EXP -> false .)
    ptcoma          reduce using rule 102 (EXP -> false .)
    parc            reduce using rule 102 (EXP -> false .)
    as              reduce using rule 102 (EXP -> false .)
    where           reduce using rule 102 (EXP -> false .)
    group           reduce using rule 102 (EXP -> false .)
    having          reduce using rule 102 (EXP -> false .)
    id              reduce using rule 102 (EXP -> false .)
    select          reduce using rule 102 (EXP -> false .)
    create          reduce using rule 102 (EXP -> false .)
    $end            reduce using rule 102 (EXP -> false .)
    constraint      reduce using rule 102 (EXP -> false .)
    default         reduce using rule 102 (EXP -> false .)
    primary         reduce using rule 102 (EXP -> false .)
    references      reduce using rule 102 (EXP -> false .)
    not             reduce using rule 102 (EXP -> false .)
    null            reduce using rule 102 (EXP -> false .)


state 26

    (103) EXP -> id .

    mas             reduce using rule 103 (EXP -> id .)
    menos           reduce using rule 103 (EXP -> id .)
    multiplicacion  reduce using rule 103 (EXP -> id .)
    division        reduce using rule 103 (EXP -> id .)
    modulo          reduce using rule 103 (EXP -> id .)
    elevado         reduce using rule 103 (EXP -> id .)
    and             reduce using rule 103 (EXP -> id .)
    or              reduce using rule 103 (EXP -> id .)
    mayor           reduce using rule 103 (EXP -> id .)
    menor           reduce using rule 103 (EXP -> id .)
    mayor_igual     reduce using rule 103 (EXP -> id .)
    menor_igual     reduce using rule 103 (EXP -> id .)
    igual           reduce using rule 103 (EXP -> id .)
    diferente1      reduce using rule 103 (EXP -> id .)
    diferente2      reduce using rule 103 (EXP -> id .)
    punto           reduce using rule 103 (EXP -> id .)
    coma            reduce using rule 103 (EXP -> id .)
    r_from          reduce using rule 103 (EXP -> id .)
    ptcoma          reduce using rule 103 (EXP -> id .)
    parc            reduce using rule 103 (EXP -> id .)
    as              reduce using rule 103 (EXP -> id .)
    where           reduce using rule 103 (EXP -> id .)
    group           reduce using rule 103 (EXP -> id .)
    having          reduce using rule 103 (EXP -> id .)
    id              reduce using rule 103 (EXP -> id .)
    select          reduce using rule 103 (EXP -> id .)
    create          reduce using rule 103 (EXP -> id .)
    $end            reduce using rule 103 (EXP -> id .)
    constraint      reduce using rule 103 (EXP -> id .)
    default         reduce using rule 103 (EXP -> id .)
    primary         reduce using rule 103 (EXP -> id .)
    references      reduce using rule 103 (EXP -> id .)
    not             reduce using rule 103 (EXP -> id .)
    null            reduce using rule 103 (EXP -> id .)


state 27

    (7) CREATETABLE -> create table . id para LDEF parc ptcoma
    (8) CREATETABLE -> create table . id para LDEF parc HERENCIA ptcoma

    id              shift and go to state 52


state 28

    (6) instruccion -> id igual EXP . ptcoma
    (77) EXP -> EXP . mas EXP
    (78) EXP -> EXP . menos EXP
    (79) EXP -> EXP . multiplicacion EXP
    (80) EXP -> EXP . division EXP
    (81) EXP -> EXP . modulo EXP
    (82) EXP -> EXP . elevado EXP
    (83) EXP -> EXP . and EXP
    (84) EXP -> EXP . or EXP
    (85) EXP -> EXP . mayor EXP
    (86) EXP -> EXP . menor EXP
    (87) EXP -> EXP . mayor_igual EXP
    (88) EXP -> EXP . menor_igual EXP
    (89) EXP -> EXP . igual EXP
    (90) EXP -> EXP . diferente1 EXP
    (91) EXP -> EXP . diferente2 EXP
    (92) EXP -> EXP . punto EXP

    ptcoma          shift and go to state 53
    mas             shift and go to state 32
    menos           shift and go to state 33
    multiplicacion  shift and go to state 34
    division        shift and go to state 35
    modulo          shift and go to state 36
    elevado         shift and go to state 37
    and             shift and go to state 38
    or              shift and go to state 39
    mayor           shift and go to state 40
    menor           shift and go to state 41
    mayor_igual     shift and go to state 42
    menor_igual     shift and go to state 43
    igual           shift and go to state 44
    diferente1      shift and go to state 45
    diferente2      shift and go to state 46
    punto           shift and go to state 47


state 29

    (30) SELECT -> select distinct LSELECT . r_from LFROM WHERE GROUP HAVING

    r_from          shift and go to state 54


state 30

    (31) SELECT -> select LSELECT r_from . LFROM WHERE GROUP HAVING
    (34) LFROM -> . LFROM coma FROM
    (35) LFROM -> . FROM
    (36) FROM -> . EXP
    (37) FROM -> . EXP as id
    (38) FROM -> . para SELECT parc
    (39) FROM -> . para SELECT parc as id
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    para            shift and go to state 58
    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    LFROM                          shift and go to state 55
    FROM                           shift and go to state 56
    EXP                            shift and go to state 57

state 31

    (46) LEXP -> LEXP coma . EXP
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    EXP                            shift and go to state 59

state 32

    (77) EXP -> EXP mas . EXP
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    EXP                            shift and go to state 60

state 33

    (78) EXP -> EXP menos . EXP
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    EXP                            shift and go to state 61

state 34

    (79) EXP -> EXP multiplicacion . EXP
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    EXP                            shift and go to state 62

state 35

    (80) EXP -> EXP division . EXP
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    EXP                            shift and go to state 63

state 36

    (81) EXP -> EXP modulo . EXP
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    EXP                            shift and go to state 64

state 37

    (82) EXP -> EXP elevado . EXP
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    EXP                            shift and go to state 65

state 38

    (83) EXP -> EXP and . EXP
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    EXP                            shift and go to state 66

state 39

    (84) EXP -> EXP or . EXP
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    EXP                            shift and go to state 67

state 40

    (85) EXP -> EXP mayor . EXP
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    EXP                            shift and go to state 68

state 41

    (86) EXP -> EXP menor . EXP
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    EXP                            shift and go to state 69

state 42

    (87) EXP -> EXP mayor_igual . EXP
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    EXP                            shift and go to state 70

state 43

    (88) EXP -> EXP menor_igual . EXP
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    EXP                            shift and go to state 71

state 44

    (89) EXP -> EXP igual . EXP
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    EXP                            shift and go to state 72

state 45

    (90) EXP -> EXP diferente1 . EXP
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    EXP                            shift and go to state 73

state 46

    (91) EXP -> EXP diferente2 . EXP
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    EXP                            shift and go to state 74

state 47

    (92) EXP -> EXP punto . EXP
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    EXP                            shift and go to state 75

state 48

    (93) EXP -> mas EXP .
    (77) EXP -> EXP . mas EXP
    (78) EXP -> EXP . menos EXP
    (79) EXP -> EXP . multiplicacion EXP
    (80) EXP -> EXP . division EXP
    (81) EXP -> EXP . modulo EXP
    (82) EXP -> EXP . elevado EXP
    (83) EXP -> EXP . and EXP
    (84) EXP -> EXP . or EXP
    (85) EXP -> EXP . mayor EXP
    (86) EXP -> EXP . menor EXP
    (87) EXP -> EXP . mayor_igual EXP
    (88) EXP -> EXP . menor_igual EXP
    (89) EXP -> EXP . igual EXP
    (90) EXP -> EXP . diferente1 EXP
    (91) EXP -> EXP . diferente2 EXP
    (92) EXP -> EXP . punto EXP

    punto           reduce using rule 93 (EXP -> mas EXP .)
    coma            reduce using rule 93 (EXP -> mas EXP .)
    r_from          reduce using rule 93 (EXP -> mas EXP .)
    ptcoma          reduce using rule 93 (EXP -> mas EXP .)
    parc            reduce using rule 93 (EXP -> mas EXP .)
    as              reduce using rule 93 (EXP -> mas EXP .)
    where           reduce using rule 93 (EXP -> mas EXP .)
    group           reduce using rule 93 (EXP -> mas EXP .)
    having          reduce using rule 93 (EXP -> mas EXP .)
    id              reduce using rule 93 (EXP -> mas EXP .)
    select          reduce using rule 93 (EXP -> mas EXP .)
    create          reduce using rule 93 (EXP -> mas EXP .)
    $end            reduce using rule 93 (EXP -> mas EXP .)
    constraint      reduce using rule 93 (EXP -> mas EXP .)
    default         reduce using rule 93 (EXP -> mas EXP .)
    primary         reduce using rule 93 (EXP -> mas EXP .)
    references      reduce using rule 93 (EXP -> mas EXP .)
    not             reduce using rule 93 (EXP -> mas EXP .)
    null            reduce using rule 93 (EXP -> mas EXP .)
    mas             shift and go to state 32
    menos           shift and go to state 33
    multiplicacion  shift and go to state 34
    division        shift and go to state 35
    modulo          shift and go to state 36
    elevado         shift and go to state 37
    and             shift and go to state 38
    or              shift and go to state 39
    mayor           shift and go to state 40
    menor           shift and go to state 41
    mayor_igual     shift and go to state 42
    menor_igual     shift and go to state 43
    igual           shift and go to state 44
    diferente1      shift and go to state 45
    diferente2      shift and go to state 46

  ! mas             [ reduce using rule 93 (EXP -> mas EXP .) ]
  ! menos           [ reduce using rule 93 (EXP -> mas EXP .) ]
  ! multiplicacion  [ reduce using rule 93 (EXP -> mas EXP .) ]
  ! division        [ reduce using rule 93 (EXP -> mas EXP .) ]
  ! modulo          [ reduce using rule 93 (EXP -> mas EXP .) ]
  ! elevado         [ reduce using rule 93 (EXP -> mas EXP .) ]
  ! and             [ reduce using rule 93 (EXP -> mas EXP .) ]
  ! or              [ reduce using rule 93 (EXP -> mas EXP .) ]
  ! mayor           [ reduce using rule 93 (EXP -> mas EXP .) ]
  ! menor           [ reduce using rule 93 (EXP -> mas EXP .) ]
  ! mayor_igual     [ reduce using rule 93 (EXP -> mas EXP .) ]
  ! menor_igual     [ reduce using rule 93 (EXP -> mas EXP .) ]
  ! igual           [ reduce using rule 93 (EXP -> mas EXP .) ]
  ! diferente1      [ reduce using rule 93 (EXP -> mas EXP .) ]
  ! diferente2      [ reduce using rule 93 (EXP -> mas EXP .) ]
  ! punto           [ shift and go to state 47 ]


state 49

    (94) EXP -> menos EXP .
    (77) EXP -> EXP . mas EXP
    (78) EXP -> EXP . menos EXP
    (79) EXP -> EXP . multiplicacion EXP
    (80) EXP -> EXP . division EXP
    (81) EXP -> EXP . modulo EXP
    (82) EXP -> EXP . elevado EXP
    (83) EXP -> EXP . and EXP
    (84) EXP -> EXP . or EXP
    (85) EXP -> EXP . mayor EXP
    (86) EXP -> EXP . menor EXP
    (87) EXP -> EXP . mayor_igual EXP
    (88) EXP -> EXP . menor_igual EXP
    (89) EXP -> EXP . igual EXP
    (90) EXP -> EXP . diferente1 EXP
    (91) EXP -> EXP . diferente2 EXP
    (92) EXP -> EXP . punto EXP

    punto           reduce using rule 94 (EXP -> menos EXP .)
    coma            reduce using rule 94 (EXP -> menos EXP .)
    r_from          reduce using rule 94 (EXP -> menos EXP .)
    ptcoma          reduce using rule 94 (EXP -> menos EXP .)
    parc            reduce using rule 94 (EXP -> menos EXP .)
    as              reduce using rule 94 (EXP -> menos EXP .)
    where           reduce using rule 94 (EXP -> menos EXP .)
    group           reduce using rule 94 (EXP -> menos EXP .)
    having          reduce using rule 94 (EXP -> menos EXP .)
    id              reduce using rule 94 (EXP -> menos EXP .)
    select          reduce using rule 94 (EXP -> menos EXP .)
    create          reduce using rule 94 (EXP -> menos EXP .)
    $end            reduce using rule 94 (EXP -> menos EXP .)
    constraint      reduce using rule 94 (EXP -> menos EXP .)
    default         reduce using rule 94 (EXP -> menos EXP .)
    primary         reduce using rule 94 (EXP -> menos EXP .)
    references      reduce using rule 94 (EXP -> menos EXP .)
    not             reduce using rule 94 (EXP -> menos EXP .)
    null            reduce using rule 94 (EXP -> menos EXP .)
    mas             shift and go to state 32
    menos           shift and go to state 33
    multiplicacion  shift and go to state 34
    division        shift and go to state 35
    modulo          shift and go to state 36
    elevado         shift and go to state 37
    and             shift and go to state 38
    or              shift and go to state 39
    mayor           shift and go to state 40
    menor           shift and go to state 41
    mayor_igual     shift and go to state 42
    menor_igual     shift and go to state 43
    igual           shift and go to state 44
    diferente1      shift and go to state 45
    diferente2      shift and go to state 46

  ! mas             [ reduce using rule 94 (EXP -> menos EXP .) ]
  ! menos           [ reduce using rule 94 (EXP -> menos EXP .) ]
  ! multiplicacion  [ reduce using rule 94 (EXP -> menos EXP .) ]
  ! division        [ reduce using rule 94 (EXP -> menos EXP .) ]
  ! modulo          [ reduce using rule 94 (EXP -> menos EXP .) ]
  ! elevado         [ reduce using rule 94 (EXP -> menos EXP .) ]
  ! and             [ reduce using rule 94 (EXP -> menos EXP .) ]
  ! or              [ reduce using rule 94 (EXP -> menos EXP .) ]
  ! mayor           [ reduce using rule 94 (EXP -> menos EXP .) ]
  ! menor           [ reduce using rule 94 (EXP -> menos EXP .) ]
  ! mayor_igual     [ reduce using rule 94 (EXP -> menos EXP .) ]
  ! menor_igual     [ reduce using rule 94 (EXP -> menos EXP .) ]
  ! igual           [ reduce using rule 94 (EXP -> menos EXP .) ]
  ! diferente1      [ reduce using rule 94 (EXP -> menos EXP .) ]
  ! diferente2      [ reduce using rule 94 (EXP -> menos EXP .) ]
  ! punto           [ shift and go to state 47 ]


state 50

    (95) EXP -> not EXP .
    (77) EXP -> EXP . mas EXP
    (78) EXP -> EXP . menos EXP
    (79) EXP -> EXP . multiplicacion EXP
    (80) EXP -> EXP . division EXP
    (81) EXP -> EXP . modulo EXP
    (82) EXP -> EXP . elevado EXP
    (83) EXP -> EXP . and EXP
    (84) EXP -> EXP . or EXP
    (85) EXP -> EXP . mayor EXP
    (86) EXP -> EXP . menor EXP
    (87) EXP -> EXP . mayor_igual EXP
    (88) EXP -> EXP . menor_igual EXP
    (89) EXP -> EXP . igual EXP
    (90) EXP -> EXP . diferente1 EXP
    (91) EXP -> EXP . diferente2 EXP
    (92) EXP -> EXP . punto EXP

    mas             reduce using rule 95 (EXP -> not EXP .)
    menos           reduce using rule 95 (EXP -> not EXP .)
    multiplicacion  reduce using rule 95 (EXP -> not EXP .)
    division        reduce using rule 95 (EXP -> not EXP .)
    modulo          reduce using rule 95 (EXP -> not EXP .)
    elevado         reduce using rule 95 (EXP -> not EXP .)
    mayor           reduce using rule 95 (EXP -> not EXP .)
    menor           reduce using rule 95 (EXP -> not EXP .)
    mayor_igual     reduce using rule 95 (EXP -> not EXP .)
    menor_igual     reduce using rule 95 (EXP -> not EXP .)
    igual           reduce using rule 95 (EXP -> not EXP .)
    diferente1      reduce using rule 95 (EXP -> not EXP .)
    diferente2      reduce using rule 95 (EXP -> not EXP .)
    punto           reduce using rule 95 (EXP -> not EXP .)
    coma            reduce using rule 95 (EXP -> not EXP .)
    r_from          reduce using rule 95 (EXP -> not EXP .)
    ptcoma          reduce using rule 95 (EXP -> not EXP .)
    parc            reduce using rule 95 (EXP -> not EXP .)
    as              reduce using rule 95 (EXP -> not EXP .)
    where           reduce using rule 95 (EXP -> not EXP .)
    group           reduce using rule 95 (EXP -> not EXP .)
    having          reduce using rule 95 (EXP -> not EXP .)
    id              reduce using rule 95 (EXP -> not EXP .)
    select          reduce using rule 95 (EXP -> not EXP .)
    create          reduce using rule 95 (EXP -> not EXP .)
    $end            reduce using rule 95 (EXP -> not EXP .)
    constraint      reduce using rule 95 (EXP -> not EXP .)
    default         reduce using rule 95 (EXP -> not EXP .)
    primary         reduce using rule 95 (EXP -> not EXP .)
    references      reduce using rule 95 (EXP -> not EXP .)
    not             reduce using rule 95 (EXP -> not EXP .)
    null            reduce using rule 95 (EXP -> not EXP .)
    and             shift and go to state 38
    or              shift and go to state 39

  ! and             [ reduce using rule 95 (EXP -> not EXP .) ]
  ! or              [ reduce using rule 95 (EXP -> not EXP .) ]
  ! mas             [ shift and go to state 32 ]
  ! menos           [ shift and go to state 33 ]
  ! multiplicacion  [ shift and go to state 34 ]
  ! division        [ shift and go to state 35 ]
  ! modulo          [ shift and go to state 36 ]
  ! elevado         [ shift and go to state 37 ]
  ! mayor           [ shift and go to state 40 ]
  ! menor           [ shift and go to state 41 ]
  ! mayor_igual     [ shift and go to state 42 ]
  ! menor_igual     [ shift and go to state 43 ]
  ! igual           [ shift and go to state 44 ]
  ! diferente1      [ shift and go to state 45 ]
  ! diferente2      [ shift and go to state 46 ]
  ! punto           [ shift and go to state 47 ]


state 51

    (96) EXP -> para EXP . parc
    (77) EXP -> EXP . mas EXP
    (78) EXP -> EXP . menos EXP
    (79) EXP -> EXP . multiplicacion EXP
    (80) EXP -> EXP . division EXP
    (81) EXP -> EXP . modulo EXP
    (82) EXP -> EXP . elevado EXP
    (83) EXP -> EXP . and EXP
    (84) EXP -> EXP . or EXP
    (85) EXP -> EXP . mayor EXP
    (86) EXP -> EXP . menor EXP
    (87) EXP -> EXP . mayor_igual EXP
    (88) EXP -> EXP . menor_igual EXP
    (89) EXP -> EXP . igual EXP
    (90) EXP -> EXP . diferente1 EXP
    (91) EXP -> EXP . diferente2 EXP
    (92) EXP -> EXP . punto EXP

    parc            shift and go to state 76
    mas             shift and go to state 32
    menos           shift and go to state 33
    multiplicacion  shift and go to state 34
    division        shift and go to state 35
    modulo          shift and go to state 36
    elevado         shift and go to state 37
    and             shift and go to state 38
    or              shift and go to state 39
    mayor           shift and go to state 40
    menor           shift and go to state 41
    mayor_igual     shift and go to state 42
    menor_igual     shift and go to state 43
    igual           shift and go to state 44
    diferente1      shift and go to state 45
    diferente2      shift and go to state 46
    punto           shift and go to state 47


state 52

    (7) CREATETABLE -> create table id . para LDEF parc ptcoma
    (8) CREATETABLE -> create table id . para LDEF parc HERENCIA ptcoma

    para            shift and go to state 77


state 53

    (6) instruccion -> id igual EXP ptcoma .

    id              reduce using rule 6 (instruccion -> id igual EXP ptcoma .)
    select          reduce using rule 6 (instruccion -> id igual EXP ptcoma .)
    create          reduce using rule 6 (instruccion -> id igual EXP ptcoma .)
    $end            reduce using rule 6 (instruccion -> id igual EXP ptcoma .)


state 54

    (30) SELECT -> select distinct LSELECT r_from . LFROM WHERE GROUP HAVING
    (34) LFROM -> . LFROM coma FROM
    (35) LFROM -> . FROM
    (36) FROM -> . EXP
    (37) FROM -> . EXP as id
    (38) FROM -> . para SELECT parc
    (39) FROM -> . para SELECT parc as id
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    para            shift and go to state 58
    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    LFROM                          shift and go to state 78
    FROM                           shift and go to state 56
    EXP                            shift and go to state 57

state 55

    (31) SELECT -> select LSELECT r_from LFROM . WHERE GROUP HAVING
    (34) LFROM -> LFROM . coma FROM
    (40) WHERE -> . where EXP
    (41) WHERE -> .

    coma            shift and go to state 80
    where           shift and go to state 81
    group           reduce using rule 41 (WHERE -> .)
    having          reduce using rule 41 (WHERE -> .)
    ptcoma          reduce using rule 41 (WHERE -> .)

    WHERE                          shift and go to state 79

state 56

    (35) LFROM -> FROM .

    coma            reduce using rule 35 (LFROM -> FROM .)
    where           reduce using rule 35 (LFROM -> FROM .)
    group           reduce using rule 35 (LFROM -> FROM .)
    having          reduce using rule 35 (LFROM -> FROM .)
    ptcoma          reduce using rule 35 (LFROM -> FROM .)


state 57

    (36) FROM -> EXP .
    (37) FROM -> EXP . as id
    (77) EXP -> EXP . mas EXP
    (78) EXP -> EXP . menos EXP
    (79) EXP -> EXP . multiplicacion EXP
    (80) EXP -> EXP . division EXP
    (81) EXP -> EXP . modulo EXP
    (82) EXP -> EXP . elevado EXP
    (83) EXP -> EXP . and EXP
    (84) EXP -> EXP . or EXP
    (85) EXP -> EXP . mayor EXP
    (86) EXP -> EXP . menor EXP
    (87) EXP -> EXP . mayor_igual EXP
    (88) EXP -> EXP . menor_igual EXP
    (89) EXP -> EXP . igual EXP
    (90) EXP -> EXP . diferente1 EXP
    (91) EXP -> EXP . diferente2 EXP
    (92) EXP -> EXP . punto EXP

    coma            reduce using rule 36 (FROM -> EXP .)
    where           reduce using rule 36 (FROM -> EXP .)
    group           reduce using rule 36 (FROM -> EXP .)
    having          reduce using rule 36 (FROM -> EXP .)
    ptcoma          reduce using rule 36 (FROM -> EXP .)
    as              shift and go to state 82
    mas             shift and go to state 32
    menos           shift and go to state 33
    multiplicacion  shift and go to state 34
    division        shift and go to state 35
    modulo          shift and go to state 36
    elevado         shift and go to state 37
    and             shift and go to state 38
    or              shift and go to state 39
    mayor           shift and go to state 40
    menor           shift and go to state 41
    mayor_igual     shift and go to state 42
    menor_igual     shift and go to state 43
    igual           shift and go to state 44
    diferente1      shift and go to state 45
    diferente2      shift and go to state 46
    punto           shift and go to state 47


state 58

    (38) FROM -> para . SELECT parc
    (39) FROM -> para . SELECT parc as id
    (96) EXP -> para . EXP parc
    (30) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING
    (31) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    select          shift and go to state 7
    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    SELECT                         shift and go to state 83
    EXP                            shift and go to state 51

state 59

    (46) LEXP -> LEXP coma EXP .
    (77) EXP -> EXP . mas EXP
    (78) EXP -> EXP . menos EXP
    (79) EXP -> EXP . multiplicacion EXP
    (80) EXP -> EXP . division EXP
    (81) EXP -> EXP . modulo EXP
    (82) EXP -> EXP . elevado EXP
    (83) EXP -> EXP . and EXP
    (84) EXP -> EXP . or EXP
    (85) EXP -> EXP . mayor EXP
    (86) EXP -> EXP . menor EXP
    (87) EXP -> EXP . mayor_igual EXP
    (88) EXP -> EXP . menor_igual EXP
    (89) EXP -> EXP . igual EXP
    (90) EXP -> EXP . diferente1 EXP
    (91) EXP -> EXP . diferente2 EXP
    (92) EXP -> EXP . punto EXP

    coma            reduce using rule 46 (LEXP -> LEXP coma EXP .)
    r_from          reduce using rule 46 (LEXP -> LEXP coma EXP .)
    parc            reduce using rule 46 (LEXP -> LEXP coma EXP .)
    mas             shift and go to state 32
    menos           shift and go to state 33
    multiplicacion  shift and go to state 34
    division        shift and go to state 35
    modulo          shift and go to state 36
    elevado         shift and go to state 37
    and             shift and go to state 38
    or              shift and go to state 39
    mayor           shift and go to state 40
    menor           shift and go to state 41
    mayor_igual     shift and go to state 42
    menor_igual     shift and go to state 43
    igual           shift and go to state 44
    diferente1      shift and go to state 45
    diferente2      shift and go to state 46
    punto           shift and go to state 47


state 60

    (77) EXP -> EXP mas EXP .
    (77) EXP -> EXP . mas EXP
    (78) EXP -> EXP . menos EXP
    (79) EXP -> EXP . multiplicacion EXP
    (80) EXP -> EXP . division EXP
    (81) EXP -> EXP . modulo EXP
    (82) EXP -> EXP . elevado EXP
    (83) EXP -> EXP . and EXP
    (84) EXP -> EXP . or EXP
    (85) EXP -> EXP . mayor EXP
    (86) EXP -> EXP . menor EXP
    (87) EXP -> EXP . mayor_igual EXP
    (88) EXP -> EXP . menor_igual EXP
    (89) EXP -> EXP . igual EXP
    (90) EXP -> EXP . diferente1 EXP
    (91) EXP -> EXP . diferente2 EXP
    (92) EXP -> EXP . punto EXP

    mas             reduce using rule 77 (EXP -> EXP mas EXP .)
    menos           reduce using rule 77 (EXP -> EXP mas EXP .)
    multiplicacion  reduce using rule 77 (EXP -> EXP mas EXP .)
    division        reduce using rule 77 (EXP -> EXP mas EXP .)
    modulo          reduce using rule 77 (EXP -> EXP mas EXP .)
    elevado         reduce using rule 77 (EXP -> EXP mas EXP .)
    punto           reduce using rule 77 (EXP -> EXP mas EXP .)
    coma            reduce using rule 77 (EXP -> EXP mas EXP .)
    r_from          reduce using rule 77 (EXP -> EXP mas EXP .)
    ptcoma          reduce using rule 77 (EXP -> EXP mas EXP .)
    parc            reduce using rule 77 (EXP -> EXP mas EXP .)
    as              reduce using rule 77 (EXP -> EXP mas EXP .)
    where           reduce using rule 77 (EXP -> EXP mas EXP .)
    group           reduce using rule 77 (EXP -> EXP mas EXP .)
    having          reduce using rule 77 (EXP -> EXP mas EXP .)
    id              reduce using rule 77 (EXP -> EXP mas EXP .)
    select          reduce using rule 77 (EXP -> EXP mas EXP .)
    create          reduce using rule 77 (EXP -> EXP mas EXP .)
    $end            reduce using rule 77 (EXP -> EXP mas EXP .)
    constraint      reduce using rule 77 (EXP -> EXP mas EXP .)
    default         reduce using rule 77 (EXP -> EXP mas EXP .)
    primary         reduce using rule 77 (EXP -> EXP mas EXP .)
    references      reduce using rule 77 (EXP -> EXP mas EXP .)
    not             reduce using rule 77 (EXP -> EXP mas EXP .)
    null            reduce using rule 77 (EXP -> EXP mas EXP .)
    and             shift and go to state 38
    or              shift and go to state 39
    mayor           shift and go to state 40
    menor           shift and go to state 41
    mayor_igual     shift and go to state 42
    menor_igual     shift and go to state 43
    igual           shift and go to state 44
    diferente1      shift and go to state 45
    diferente2      shift and go to state 46

  ! and             [ reduce using rule 77 (EXP -> EXP mas EXP .) ]
  ! or              [ reduce using rule 77 (EXP -> EXP mas EXP .) ]
  ! mayor           [ reduce using rule 77 (EXP -> EXP mas EXP .) ]
  ! menor           [ reduce using rule 77 (EXP -> EXP mas EXP .) ]
  ! mayor_igual     [ reduce using rule 77 (EXP -> EXP mas EXP .) ]
  ! menor_igual     [ reduce using rule 77 (EXP -> EXP mas EXP .) ]
  ! igual           [ reduce using rule 77 (EXP -> EXP mas EXP .) ]
  ! diferente1      [ reduce using rule 77 (EXP -> EXP mas EXP .) ]
  ! diferente2      [ reduce using rule 77 (EXP -> EXP mas EXP .) ]
  ! mas             [ shift and go to state 32 ]
  ! menos           [ shift and go to state 33 ]
  ! multiplicacion  [ shift and go to state 34 ]
  ! division        [ shift and go to state 35 ]
  ! modulo          [ shift and go to state 36 ]
  ! elevado         [ shift and go to state 37 ]
  ! punto           [ shift and go to state 47 ]


state 61

    (78) EXP -> EXP menos EXP .
    (77) EXP -> EXP . mas EXP
    (78) EXP -> EXP . menos EXP
    (79) EXP -> EXP . multiplicacion EXP
    (80) EXP -> EXP . division EXP
    (81) EXP -> EXP . modulo EXP
    (82) EXP -> EXP . elevado EXP
    (83) EXP -> EXP . and EXP
    (84) EXP -> EXP . or EXP
    (85) EXP -> EXP . mayor EXP
    (86) EXP -> EXP . menor EXP
    (87) EXP -> EXP . mayor_igual EXP
    (88) EXP -> EXP . menor_igual EXP
    (89) EXP -> EXP . igual EXP
    (90) EXP -> EXP . diferente1 EXP
    (91) EXP -> EXP . diferente2 EXP
    (92) EXP -> EXP . punto EXP

    mas             reduce using rule 78 (EXP -> EXP menos EXP .)
    menos           reduce using rule 78 (EXP -> EXP menos EXP .)
    multiplicacion  reduce using rule 78 (EXP -> EXP menos EXP .)
    division        reduce using rule 78 (EXP -> EXP menos EXP .)
    modulo          reduce using rule 78 (EXP -> EXP menos EXP .)
    elevado         reduce using rule 78 (EXP -> EXP menos EXP .)
    punto           reduce using rule 78 (EXP -> EXP menos EXP .)
    coma            reduce using rule 78 (EXP -> EXP menos EXP .)
    r_from          reduce using rule 78 (EXP -> EXP menos EXP .)
    ptcoma          reduce using rule 78 (EXP -> EXP menos EXP .)
    parc            reduce using rule 78 (EXP -> EXP menos EXP .)
    as              reduce using rule 78 (EXP -> EXP menos EXP .)
    where           reduce using rule 78 (EXP -> EXP menos EXP .)
    group           reduce using rule 78 (EXP -> EXP menos EXP .)
    having          reduce using rule 78 (EXP -> EXP menos EXP .)
    id              reduce using rule 78 (EXP -> EXP menos EXP .)
    select          reduce using rule 78 (EXP -> EXP menos EXP .)
    create          reduce using rule 78 (EXP -> EXP menos EXP .)
    $end            reduce using rule 78 (EXP -> EXP menos EXP .)
    constraint      reduce using rule 78 (EXP -> EXP menos EXP .)
    default         reduce using rule 78 (EXP -> EXP menos EXP .)
    primary         reduce using rule 78 (EXP -> EXP menos EXP .)
    references      reduce using rule 78 (EXP -> EXP menos EXP .)
    not             reduce using rule 78 (EXP -> EXP menos EXP .)
    null            reduce using rule 78 (EXP -> EXP menos EXP .)
    and             shift and go to state 38
    or              shift and go to state 39
    mayor           shift and go to state 40
    menor           shift and go to state 41
    mayor_igual     shift and go to state 42
    menor_igual     shift and go to state 43
    igual           shift and go to state 44
    diferente1      shift and go to state 45
    diferente2      shift and go to state 46

  ! and             [ reduce using rule 78 (EXP -> EXP menos EXP .) ]
  ! or              [ reduce using rule 78 (EXP -> EXP menos EXP .) ]
  ! mayor           [ reduce using rule 78 (EXP -> EXP menos EXP .) ]
  ! menor           [ reduce using rule 78 (EXP -> EXP menos EXP .) ]
  ! mayor_igual     [ reduce using rule 78 (EXP -> EXP menos EXP .) ]
  ! menor_igual     [ reduce using rule 78 (EXP -> EXP menos EXP .) ]
  ! igual           [ reduce using rule 78 (EXP -> EXP menos EXP .) ]
  ! diferente1      [ reduce using rule 78 (EXP -> EXP menos EXP .) ]
  ! diferente2      [ reduce using rule 78 (EXP -> EXP menos EXP .) ]
  ! mas             [ shift and go to state 32 ]
  ! menos           [ shift and go to state 33 ]
  ! multiplicacion  [ shift and go to state 34 ]
  ! division        [ shift and go to state 35 ]
  ! modulo          [ shift and go to state 36 ]
  ! elevado         [ shift and go to state 37 ]
  ! punto           [ shift and go to state 47 ]


state 62

    (79) EXP -> EXP multiplicacion EXP .
    (77) EXP -> EXP . mas EXP
    (78) EXP -> EXP . menos EXP
    (79) EXP -> EXP . multiplicacion EXP
    (80) EXP -> EXP . division EXP
    (81) EXP -> EXP . modulo EXP
    (82) EXP -> EXP . elevado EXP
    (83) EXP -> EXP . and EXP
    (84) EXP -> EXP . or EXP
    (85) EXP -> EXP . mayor EXP
    (86) EXP -> EXP . menor EXP
    (87) EXP -> EXP . mayor_igual EXP
    (88) EXP -> EXP . menor_igual EXP
    (89) EXP -> EXP . igual EXP
    (90) EXP -> EXP . diferente1 EXP
    (91) EXP -> EXP . diferente2 EXP
    (92) EXP -> EXP . punto EXP

    multiplicacion  reduce using rule 79 (EXP -> EXP multiplicacion EXP .)
    division        reduce using rule 79 (EXP -> EXP multiplicacion EXP .)
    modulo          reduce using rule 79 (EXP -> EXP multiplicacion EXP .)
    elevado         reduce using rule 79 (EXP -> EXP multiplicacion EXP .)
    punto           reduce using rule 79 (EXP -> EXP multiplicacion EXP .)
    coma            reduce using rule 79 (EXP -> EXP multiplicacion EXP .)
    r_from          reduce using rule 79 (EXP -> EXP multiplicacion EXP .)
    ptcoma          reduce using rule 79 (EXP -> EXP multiplicacion EXP .)
    parc            reduce using rule 79 (EXP -> EXP multiplicacion EXP .)
    as              reduce using rule 79 (EXP -> EXP multiplicacion EXP .)
    where           reduce using rule 79 (EXP -> EXP multiplicacion EXP .)
    group           reduce using rule 79 (EXP -> EXP multiplicacion EXP .)
    having          reduce using rule 79 (EXP -> EXP multiplicacion EXP .)
    id              reduce using rule 79 (EXP -> EXP multiplicacion EXP .)
    select          reduce using rule 79 (EXP -> EXP multiplicacion EXP .)
    create          reduce using rule 79 (EXP -> EXP multiplicacion EXP .)
    $end            reduce using rule 79 (EXP -> EXP multiplicacion EXP .)
    constraint      reduce using rule 79 (EXP -> EXP multiplicacion EXP .)
    default         reduce using rule 79 (EXP -> EXP multiplicacion EXP .)
    primary         reduce using rule 79 (EXP -> EXP multiplicacion EXP .)
    references      reduce using rule 79 (EXP -> EXP multiplicacion EXP .)
    not             reduce using rule 79 (EXP -> EXP multiplicacion EXP .)
    null            reduce using rule 79 (EXP -> EXP multiplicacion EXP .)
    mas             shift and go to state 32
    menos           shift and go to state 33
    and             shift and go to state 38
    or              shift and go to state 39
    mayor           shift and go to state 40
    menor           shift and go to state 41
    mayor_igual     shift and go to state 42
    menor_igual     shift and go to state 43
    igual           shift and go to state 44
    diferente1      shift and go to state 45
    diferente2      shift and go to state 46

  ! mas             [ reduce using rule 79 (EXP -> EXP multiplicacion EXP .) ]
  ! menos           [ reduce using rule 79 (EXP -> EXP multiplicacion EXP .) ]
  ! and             [ reduce using rule 79 (EXP -> EXP multiplicacion EXP .) ]
  ! or              [ reduce using rule 79 (EXP -> EXP multiplicacion EXP .) ]
  ! mayor           [ reduce using rule 79 (EXP -> EXP multiplicacion EXP .) ]
  ! menor           [ reduce using rule 79 (EXP -> EXP multiplicacion EXP .) ]
  ! mayor_igual     [ reduce using rule 79 (EXP -> EXP multiplicacion EXP .) ]
  ! menor_igual     [ reduce using rule 79 (EXP -> EXP multiplicacion EXP .) ]
  ! igual           [ reduce using rule 79 (EXP -> EXP multiplicacion EXP .) ]
  ! diferente1      [ reduce using rule 79 (EXP -> EXP multiplicacion EXP .) ]
  ! diferente2      [ reduce using rule 79 (EXP -> EXP multiplicacion EXP .) ]
  ! multiplicacion  [ shift and go to state 34 ]
  ! division        [ shift and go to state 35 ]
  ! modulo          [ shift and go to state 36 ]
  ! elevado         [ shift and go to state 37 ]
  ! punto           [ shift and go to state 47 ]


state 63

    (80) EXP -> EXP division EXP .
    (77) EXP -> EXP . mas EXP
    (78) EXP -> EXP . menos EXP
    (79) EXP -> EXP . multiplicacion EXP
    (80) EXP -> EXP . division EXP
    (81) EXP -> EXP . modulo EXP
    (82) EXP -> EXP . elevado EXP
    (83) EXP -> EXP . and EXP
    (84) EXP -> EXP . or EXP
    (85) EXP -> EXP . mayor EXP
    (86) EXP -> EXP . menor EXP
    (87) EXP -> EXP . mayor_igual EXP
    (88) EXP -> EXP . menor_igual EXP
    (89) EXP -> EXP . igual EXP
    (90) EXP -> EXP . diferente1 EXP
    (91) EXP -> EXP . diferente2 EXP
    (92) EXP -> EXP . punto EXP

    multiplicacion  reduce using rule 80 (EXP -> EXP division EXP .)
    division        reduce using rule 80 (EXP -> EXP division EXP .)
    modulo          reduce using rule 80 (EXP -> EXP division EXP .)
    elevado         reduce using rule 80 (EXP -> EXP division EXP .)
    punto           reduce using rule 80 (EXP -> EXP division EXP .)
    coma            reduce using rule 80 (EXP -> EXP division EXP .)
    r_from          reduce using rule 80 (EXP -> EXP division EXP .)
    ptcoma          reduce using rule 80 (EXP -> EXP division EXP .)
    parc            reduce using rule 80 (EXP -> EXP division EXP .)
    as              reduce using rule 80 (EXP -> EXP division EXP .)
    where           reduce using rule 80 (EXP -> EXP division EXP .)
    group           reduce using rule 80 (EXP -> EXP division EXP .)
    having          reduce using rule 80 (EXP -> EXP division EXP .)
    id              reduce using rule 80 (EXP -> EXP division EXP .)
    select          reduce using rule 80 (EXP -> EXP division EXP .)
    create          reduce using rule 80 (EXP -> EXP division EXP .)
    $end            reduce using rule 80 (EXP -> EXP division EXP .)
    constraint      reduce using rule 80 (EXP -> EXP division EXP .)
    default         reduce using rule 80 (EXP -> EXP division EXP .)
    primary         reduce using rule 80 (EXP -> EXP division EXP .)
    references      reduce using rule 80 (EXP -> EXP division EXP .)
    not             reduce using rule 80 (EXP -> EXP division EXP .)
    null            reduce using rule 80 (EXP -> EXP division EXP .)
    mas             shift and go to state 32
    menos           shift and go to state 33
    and             shift and go to state 38
    or              shift and go to state 39
    mayor           shift and go to state 40
    menor           shift and go to state 41
    mayor_igual     shift and go to state 42
    menor_igual     shift and go to state 43
    igual           shift and go to state 44
    diferente1      shift and go to state 45
    diferente2      shift and go to state 46

  ! mas             [ reduce using rule 80 (EXP -> EXP division EXP .) ]
  ! menos           [ reduce using rule 80 (EXP -> EXP division EXP .) ]
  ! and             [ reduce using rule 80 (EXP -> EXP division EXP .) ]
  ! or              [ reduce using rule 80 (EXP -> EXP division EXP .) ]
  ! mayor           [ reduce using rule 80 (EXP -> EXP division EXP .) ]
  ! menor           [ reduce using rule 80 (EXP -> EXP division EXP .) ]
  ! mayor_igual     [ reduce using rule 80 (EXP -> EXP division EXP .) ]
  ! menor_igual     [ reduce using rule 80 (EXP -> EXP division EXP .) ]
  ! igual           [ reduce using rule 80 (EXP -> EXP division EXP .) ]
  ! diferente1      [ reduce using rule 80 (EXP -> EXP division EXP .) ]
  ! diferente2      [ reduce using rule 80 (EXP -> EXP division EXP .) ]
  ! multiplicacion  [ shift and go to state 34 ]
  ! division        [ shift and go to state 35 ]
  ! modulo          [ shift and go to state 36 ]
  ! elevado         [ shift and go to state 37 ]
  ! punto           [ shift and go to state 47 ]


state 64

    (81) EXP -> EXP modulo EXP .
    (77) EXP -> EXP . mas EXP
    (78) EXP -> EXP . menos EXP
    (79) EXP -> EXP . multiplicacion EXP
    (80) EXP -> EXP . division EXP
    (81) EXP -> EXP . modulo EXP
    (82) EXP -> EXP . elevado EXP
    (83) EXP -> EXP . and EXP
    (84) EXP -> EXP . or EXP
    (85) EXP -> EXP . mayor EXP
    (86) EXP -> EXP . menor EXP
    (87) EXP -> EXP . mayor_igual EXP
    (88) EXP -> EXP . menor_igual EXP
    (89) EXP -> EXP . igual EXP
    (90) EXP -> EXP . diferente1 EXP
    (91) EXP -> EXP . diferente2 EXP
    (92) EXP -> EXP . punto EXP

    multiplicacion  reduce using rule 81 (EXP -> EXP modulo EXP .)
    division        reduce using rule 81 (EXP -> EXP modulo EXP .)
    modulo          reduce using rule 81 (EXP -> EXP modulo EXP .)
    elevado         reduce using rule 81 (EXP -> EXP modulo EXP .)
    punto           reduce using rule 81 (EXP -> EXP modulo EXP .)
    coma            reduce using rule 81 (EXP -> EXP modulo EXP .)
    r_from          reduce using rule 81 (EXP -> EXP modulo EXP .)
    ptcoma          reduce using rule 81 (EXP -> EXP modulo EXP .)
    parc            reduce using rule 81 (EXP -> EXP modulo EXP .)
    as              reduce using rule 81 (EXP -> EXP modulo EXP .)
    where           reduce using rule 81 (EXP -> EXP modulo EXP .)
    group           reduce using rule 81 (EXP -> EXP modulo EXP .)
    having          reduce using rule 81 (EXP -> EXP modulo EXP .)
    id              reduce using rule 81 (EXP -> EXP modulo EXP .)
    select          reduce using rule 81 (EXP -> EXP modulo EXP .)
    create          reduce using rule 81 (EXP -> EXP modulo EXP .)
    $end            reduce using rule 81 (EXP -> EXP modulo EXP .)
    constraint      reduce using rule 81 (EXP -> EXP modulo EXP .)
    default         reduce using rule 81 (EXP -> EXP modulo EXP .)
    primary         reduce using rule 81 (EXP -> EXP modulo EXP .)
    references      reduce using rule 81 (EXP -> EXP modulo EXP .)
    not             reduce using rule 81 (EXP -> EXP modulo EXP .)
    null            reduce using rule 81 (EXP -> EXP modulo EXP .)
    mas             shift and go to state 32
    menos           shift and go to state 33
    and             shift and go to state 38
    or              shift and go to state 39
    mayor           shift and go to state 40
    menor           shift and go to state 41
    mayor_igual     shift and go to state 42
    menor_igual     shift and go to state 43
    igual           shift and go to state 44
    diferente1      shift and go to state 45
    diferente2      shift and go to state 46

  ! mas             [ reduce using rule 81 (EXP -> EXP modulo EXP .) ]
  ! menos           [ reduce using rule 81 (EXP -> EXP modulo EXP .) ]
  ! and             [ reduce using rule 81 (EXP -> EXP modulo EXP .) ]
  ! or              [ reduce using rule 81 (EXP -> EXP modulo EXP .) ]
  ! mayor           [ reduce using rule 81 (EXP -> EXP modulo EXP .) ]
  ! menor           [ reduce using rule 81 (EXP -> EXP modulo EXP .) ]
  ! mayor_igual     [ reduce using rule 81 (EXP -> EXP modulo EXP .) ]
  ! menor_igual     [ reduce using rule 81 (EXP -> EXP modulo EXP .) ]
  ! igual           [ reduce using rule 81 (EXP -> EXP modulo EXP .) ]
  ! diferente1      [ reduce using rule 81 (EXP -> EXP modulo EXP .) ]
  ! diferente2      [ reduce using rule 81 (EXP -> EXP modulo EXP .) ]
  ! multiplicacion  [ shift and go to state 34 ]
  ! division        [ shift and go to state 35 ]
  ! modulo          [ shift and go to state 36 ]
  ! elevado         [ shift and go to state 37 ]
  ! punto           [ shift and go to state 47 ]


state 65

    (82) EXP -> EXP elevado EXP .
    (77) EXP -> EXP . mas EXP
    (78) EXP -> EXP . menos EXP
    (79) EXP -> EXP . multiplicacion EXP
    (80) EXP -> EXP . division EXP
    (81) EXP -> EXP . modulo EXP
    (82) EXP -> EXP . elevado EXP
    (83) EXP -> EXP . and EXP
    (84) EXP -> EXP . or EXP
    (85) EXP -> EXP . mayor EXP
    (86) EXP -> EXP . menor EXP
    (87) EXP -> EXP . mayor_igual EXP
    (88) EXP -> EXP . menor_igual EXP
    (89) EXP -> EXP . igual EXP
    (90) EXP -> EXP . diferente1 EXP
    (91) EXP -> EXP . diferente2 EXP
    (92) EXP -> EXP . punto EXP

    elevado         reduce using rule 82 (EXP -> EXP elevado EXP .)
    punto           reduce using rule 82 (EXP -> EXP elevado EXP .)
    coma            reduce using rule 82 (EXP -> EXP elevado EXP .)
    r_from          reduce using rule 82 (EXP -> EXP elevado EXP .)
    ptcoma          reduce using rule 82 (EXP -> EXP elevado EXP .)
    parc            reduce using rule 82 (EXP -> EXP elevado EXP .)
    as              reduce using rule 82 (EXP -> EXP elevado EXP .)
    where           reduce using rule 82 (EXP -> EXP elevado EXP .)
    group           reduce using rule 82 (EXP -> EXP elevado EXP .)
    having          reduce using rule 82 (EXP -> EXP elevado EXP .)
    id              reduce using rule 82 (EXP -> EXP elevado EXP .)
    select          reduce using rule 82 (EXP -> EXP elevado EXP .)
    create          reduce using rule 82 (EXP -> EXP elevado EXP .)
    $end            reduce using rule 82 (EXP -> EXP elevado EXP .)
    constraint      reduce using rule 82 (EXP -> EXP elevado EXP .)
    default         reduce using rule 82 (EXP -> EXP elevado EXP .)
    primary         reduce using rule 82 (EXP -> EXP elevado EXP .)
    references      reduce using rule 82 (EXP -> EXP elevado EXP .)
    not             reduce using rule 82 (EXP -> EXP elevado EXP .)
    null            reduce using rule 82 (EXP -> EXP elevado EXP .)
    mas             shift and go to state 32
    menos           shift and go to state 33
    multiplicacion  shift and go to state 34
    division        shift and go to state 35
    modulo          shift and go to state 36
    and             shift and go to state 38
    or              shift and go to state 39
    mayor           shift and go to state 40
    menor           shift and go to state 41
    mayor_igual     shift and go to state 42
    menor_igual     shift and go to state 43
    igual           shift and go to state 44
    diferente1      shift and go to state 45
    diferente2      shift and go to state 46

  ! mas             [ reduce using rule 82 (EXP -> EXP elevado EXP .) ]
  ! menos           [ reduce using rule 82 (EXP -> EXP elevado EXP .) ]
  ! multiplicacion  [ reduce using rule 82 (EXP -> EXP elevado EXP .) ]
  ! division        [ reduce using rule 82 (EXP -> EXP elevado EXP .) ]
  ! modulo          [ reduce using rule 82 (EXP -> EXP elevado EXP .) ]
  ! and             [ reduce using rule 82 (EXP -> EXP elevado EXP .) ]
  ! or              [ reduce using rule 82 (EXP -> EXP elevado EXP .) ]
  ! mayor           [ reduce using rule 82 (EXP -> EXP elevado EXP .) ]
  ! menor           [ reduce using rule 82 (EXP -> EXP elevado EXP .) ]
  ! mayor_igual     [ reduce using rule 82 (EXP -> EXP elevado EXP .) ]
  ! menor_igual     [ reduce using rule 82 (EXP -> EXP elevado EXP .) ]
  ! igual           [ reduce using rule 82 (EXP -> EXP elevado EXP .) ]
  ! diferente1      [ reduce using rule 82 (EXP -> EXP elevado EXP .) ]
  ! diferente2      [ reduce using rule 82 (EXP -> EXP elevado EXP .) ]
  ! elevado         [ shift and go to state 37 ]
  ! punto           [ shift and go to state 47 ]


state 66

    (83) EXP -> EXP and EXP .
    (77) EXP -> EXP . mas EXP
    (78) EXP -> EXP . menos EXP
    (79) EXP -> EXP . multiplicacion EXP
    (80) EXP -> EXP . division EXP
    (81) EXP -> EXP . modulo EXP
    (82) EXP -> EXP . elevado EXP
    (83) EXP -> EXP . and EXP
    (84) EXP -> EXP . or EXP
    (85) EXP -> EXP . mayor EXP
    (86) EXP -> EXP . menor EXP
    (87) EXP -> EXP . mayor_igual EXP
    (88) EXP -> EXP . menor_igual EXP
    (89) EXP -> EXP . igual EXP
    (90) EXP -> EXP . diferente1 EXP
    (91) EXP -> EXP . diferente2 EXP
    (92) EXP -> EXP . punto EXP

    mas             reduce using rule 83 (EXP -> EXP and EXP .)
    menos           reduce using rule 83 (EXP -> EXP and EXP .)
    multiplicacion  reduce using rule 83 (EXP -> EXP and EXP .)
    division        reduce using rule 83 (EXP -> EXP and EXP .)
    modulo          reduce using rule 83 (EXP -> EXP and EXP .)
    elevado         reduce using rule 83 (EXP -> EXP and EXP .)
    and             reduce using rule 83 (EXP -> EXP and EXP .)
    mayor           reduce using rule 83 (EXP -> EXP and EXP .)
    menor           reduce using rule 83 (EXP -> EXP and EXP .)
    mayor_igual     reduce using rule 83 (EXP -> EXP and EXP .)
    menor_igual     reduce using rule 83 (EXP -> EXP and EXP .)
    igual           reduce using rule 83 (EXP -> EXP and EXP .)
    diferente1      reduce using rule 83 (EXP -> EXP and EXP .)
    diferente2      reduce using rule 83 (EXP -> EXP and EXP .)
    punto           reduce using rule 83 (EXP -> EXP and EXP .)
    coma            reduce using rule 83 (EXP -> EXP and EXP .)
    r_from          reduce using rule 83 (EXP -> EXP and EXP .)
    ptcoma          reduce using rule 83 (EXP -> EXP and EXP .)
    parc            reduce using rule 83 (EXP -> EXP and EXP .)
    as              reduce using rule 83 (EXP -> EXP and EXP .)
    where           reduce using rule 83 (EXP -> EXP and EXP .)
    group           reduce using rule 83 (EXP -> EXP and EXP .)
    having          reduce using rule 83 (EXP -> EXP and EXP .)
    id              reduce using rule 83 (EXP -> EXP and EXP .)
    select          reduce using rule 83 (EXP -> EXP and EXP .)
    create          reduce using rule 83 (EXP -> EXP and EXP .)
    $end            reduce using rule 83 (EXP -> EXP and EXP .)
    constraint      reduce using rule 83 (EXP -> EXP and EXP .)
    default         reduce using rule 83 (EXP -> EXP and EXP .)
    primary         reduce using rule 83 (EXP -> EXP and EXP .)
    references      reduce using rule 83 (EXP -> EXP and EXP .)
    not             reduce using rule 83 (EXP -> EXP and EXP .)
    null            reduce using rule 83 (EXP -> EXP and EXP .)
    or              shift and go to state 39

  ! or              [ reduce using rule 83 (EXP -> EXP and EXP .) ]
  ! mas             [ shift and go to state 32 ]
  ! menos           [ shift and go to state 33 ]
  ! multiplicacion  [ shift and go to state 34 ]
  ! division        [ shift and go to state 35 ]
  ! modulo          [ shift and go to state 36 ]
  ! elevado         [ shift and go to state 37 ]
  ! and             [ shift and go to state 38 ]
  ! mayor           [ shift and go to state 40 ]
  ! menor           [ shift and go to state 41 ]
  ! mayor_igual     [ shift and go to state 42 ]
  ! menor_igual     [ shift and go to state 43 ]
  ! igual           [ shift and go to state 44 ]
  ! diferente1      [ shift and go to state 45 ]
  ! diferente2      [ shift and go to state 46 ]
  ! punto           [ shift and go to state 47 ]


state 67

    (84) EXP -> EXP or EXP .
    (77) EXP -> EXP . mas EXP
    (78) EXP -> EXP . menos EXP
    (79) EXP -> EXP . multiplicacion EXP
    (80) EXP -> EXP . division EXP
    (81) EXP -> EXP . modulo EXP
    (82) EXP -> EXP . elevado EXP
    (83) EXP -> EXP . and EXP
    (84) EXP -> EXP . or EXP
    (85) EXP -> EXP . mayor EXP
    (86) EXP -> EXP . menor EXP
    (87) EXP -> EXP . mayor_igual EXP
    (88) EXP -> EXP . menor_igual EXP
    (89) EXP -> EXP . igual EXP
    (90) EXP -> EXP . diferente1 EXP
    (91) EXP -> EXP . diferente2 EXP
    (92) EXP -> EXP . punto EXP

    mas             reduce using rule 84 (EXP -> EXP or EXP .)
    menos           reduce using rule 84 (EXP -> EXP or EXP .)
    multiplicacion  reduce using rule 84 (EXP -> EXP or EXP .)
    division        reduce using rule 84 (EXP -> EXP or EXP .)
    modulo          reduce using rule 84 (EXP -> EXP or EXP .)
    elevado         reduce using rule 84 (EXP -> EXP or EXP .)
    and             reduce using rule 84 (EXP -> EXP or EXP .)
    or              reduce using rule 84 (EXP -> EXP or EXP .)
    mayor           reduce using rule 84 (EXP -> EXP or EXP .)
    menor           reduce using rule 84 (EXP -> EXP or EXP .)
    mayor_igual     reduce using rule 84 (EXP -> EXP or EXP .)
    menor_igual     reduce using rule 84 (EXP -> EXP or EXP .)
    igual           reduce using rule 84 (EXP -> EXP or EXP .)
    diferente1      reduce using rule 84 (EXP -> EXP or EXP .)
    diferente2      reduce using rule 84 (EXP -> EXP or EXP .)
    punto           reduce using rule 84 (EXP -> EXP or EXP .)
    coma            reduce using rule 84 (EXP -> EXP or EXP .)
    r_from          reduce using rule 84 (EXP -> EXP or EXP .)
    ptcoma          reduce using rule 84 (EXP -> EXP or EXP .)
    parc            reduce using rule 84 (EXP -> EXP or EXP .)
    as              reduce using rule 84 (EXP -> EXP or EXP .)
    where           reduce using rule 84 (EXP -> EXP or EXP .)
    group           reduce using rule 84 (EXP -> EXP or EXP .)
    having          reduce using rule 84 (EXP -> EXP or EXP .)
    id              reduce using rule 84 (EXP -> EXP or EXP .)
    select          reduce using rule 84 (EXP -> EXP or EXP .)
    create          reduce using rule 84 (EXP -> EXP or EXP .)
    $end            reduce using rule 84 (EXP -> EXP or EXP .)
    constraint      reduce using rule 84 (EXP -> EXP or EXP .)
    default         reduce using rule 84 (EXP -> EXP or EXP .)
    primary         reduce using rule 84 (EXP -> EXP or EXP .)
    references      reduce using rule 84 (EXP -> EXP or EXP .)
    not             reduce using rule 84 (EXP -> EXP or EXP .)
    null            reduce using rule 84 (EXP -> EXP or EXP .)

  ! mas             [ shift and go to state 32 ]
  ! menos           [ shift and go to state 33 ]
  ! multiplicacion  [ shift and go to state 34 ]
  ! division        [ shift and go to state 35 ]
  ! modulo          [ shift and go to state 36 ]
  ! elevado         [ shift and go to state 37 ]
  ! and             [ shift and go to state 38 ]
  ! or              [ shift and go to state 39 ]
  ! mayor           [ shift and go to state 40 ]
  ! menor           [ shift and go to state 41 ]
  ! mayor_igual     [ shift and go to state 42 ]
  ! menor_igual     [ shift and go to state 43 ]
  ! igual           [ shift and go to state 44 ]
  ! diferente1      [ shift and go to state 45 ]
  ! diferente2      [ shift and go to state 46 ]
  ! punto           [ shift and go to state 47 ]


state 68

    (85) EXP -> EXP mayor EXP .
    (77) EXP -> EXP . mas EXP
    (78) EXP -> EXP . menos EXP
    (79) EXP -> EXP . multiplicacion EXP
    (80) EXP -> EXP . division EXP
    (81) EXP -> EXP . modulo EXP
    (82) EXP -> EXP . elevado EXP
    (83) EXP -> EXP . and EXP
    (84) EXP -> EXP . or EXP
    (85) EXP -> EXP . mayor EXP
    (86) EXP -> EXP . menor EXP
    (87) EXP -> EXP . mayor_igual EXP
    (88) EXP -> EXP . menor_igual EXP
    (89) EXP -> EXP . igual EXP
    (90) EXP -> EXP . diferente1 EXP
    (91) EXP -> EXP . diferente2 EXP
    (92) EXP -> EXP . punto EXP

    mas             reduce using rule 85 (EXP -> EXP mayor EXP .)
    menos           reduce using rule 85 (EXP -> EXP mayor EXP .)
    multiplicacion  reduce using rule 85 (EXP -> EXP mayor EXP .)
    division        reduce using rule 85 (EXP -> EXP mayor EXP .)
    modulo          reduce using rule 85 (EXP -> EXP mayor EXP .)
    elevado         reduce using rule 85 (EXP -> EXP mayor EXP .)
    mayor           reduce using rule 85 (EXP -> EXP mayor EXP .)
    menor           reduce using rule 85 (EXP -> EXP mayor EXP .)
    mayor_igual     reduce using rule 85 (EXP -> EXP mayor EXP .)
    menor_igual     reduce using rule 85 (EXP -> EXP mayor EXP .)
    igual           reduce using rule 85 (EXP -> EXP mayor EXP .)
    diferente1      reduce using rule 85 (EXP -> EXP mayor EXP .)
    diferente2      reduce using rule 85 (EXP -> EXP mayor EXP .)
    punto           reduce using rule 85 (EXP -> EXP mayor EXP .)
    coma            reduce using rule 85 (EXP -> EXP mayor EXP .)
    r_from          reduce using rule 85 (EXP -> EXP mayor EXP .)
    ptcoma          reduce using rule 85 (EXP -> EXP mayor EXP .)
    parc            reduce using rule 85 (EXP -> EXP mayor EXP .)
    as              reduce using rule 85 (EXP -> EXP mayor EXP .)
    where           reduce using rule 85 (EXP -> EXP mayor EXP .)
    group           reduce using rule 85 (EXP -> EXP mayor EXP .)
    having          reduce using rule 85 (EXP -> EXP mayor EXP .)
    id              reduce using rule 85 (EXP -> EXP mayor EXP .)
    select          reduce using rule 85 (EXP -> EXP mayor EXP .)
    create          reduce using rule 85 (EXP -> EXP mayor EXP .)
    $end            reduce using rule 85 (EXP -> EXP mayor EXP .)
    constraint      reduce using rule 85 (EXP -> EXP mayor EXP .)
    default         reduce using rule 85 (EXP -> EXP mayor EXP .)
    primary         reduce using rule 85 (EXP -> EXP mayor EXP .)
    references      reduce using rule 85 (EXP -> EXP mayor EXP .)
    not             reduce using rule 85 (EXP -> EXP mayor EXP .)
    null            reduce using rule 85 (EXP -> EXP mayor EXP .)
    and             shift and go to state 38
    or              shift and go to state 39

  ! and             [ reduce using rule 85 (EXP -> EXP mayor EXP .) ]
  ! or              [ reduce using rule 85 (EXP -> EXP mayor EXP .) ]
  ! mas             [ shift and go to state 32 ]
  ! menos           [ shift and go to state 33 ]
  ! multiplicacion  [ shift and go to state 34 ]
  ! division        [ shift and go to state 35 ]
  ! modulo          [ shift and go to state 36 ]
  ! elevado         [ shift and go to state 37 ]
  ! mayor           [ shift and go to state 40 ]
  ! menor           [ shift and go to state 41 ]
  ! mayor_igual     [ shift and go to state 42 ]
  ! menor_igual     [ shift and go to state 43 ]
  ! igual           [ shift and go to state 44 ]
  ! diferente1      [ shift and go to state 45 ]
  ! diferente2      [ shift and go to state 46 ]
  ! punto           [ shift and go to state 47 ]


state 69

    (86) EXP -> EXP menor EXP .
    (77) EXP -> EXP . mas EXP
    (78) EXP -> EXP . menos EXP
    (79) EXP -> EXP . multiplicacion EXP
    (80) EXP -> EXP . division EXP
    (81) EXP -> EXP . modulo EXP
    (82) EXP -> EXP . elevado EXP
    (83) EXP -> EXP . and EXP
    (84) EXP -> EXP . or EXP
    (85) EXP -> EXP . mayor EXP
    (86) EXP -> EXP . menor EXP
    (87) EXP -> EXP . mayor_igual EXP
    (88) EXP -> EXP . menor_igual EXP
    (89) EXP -> EXP . igual EXP
    (90) EXP -> EXP . diferente1 EXP
    (91) EXP -> EXP . diferente2 EXP
    (92) EXP -> EXP . punto EXP

    mas             reduce using rule 86 (EXP -> EXP menor EXP .)
    menos           reduce using rule 86 (EXP -> EXP menor EXP .)
    multiplicacion  reduce using rule 86 (EXP -> EXP menor EXP .)
    division        reduce using rule 86 (EXP -> EXP menor EXP .)
    modulo          reduce using rule 86 (EXP -> EXP menor EXP .)
    elevado         reduce using rule 86 (EXP -> EXP menor EXP .)
    mayor           reduce using rule 86 (EXP -> EXP menor EXP .)
    menor           reduce using rule 86 (EXP -> EXP menor EXP .)
    mayor_igual     reduce using rule 86 (EXP -> EXP menor EXP .)
    menor_igual     reduce using rule 86 (EXP -> EXP menor EXP .)
    igual           reduce using rule 86 (EXP -> EXP menor EXP .)
    diferente1      reduce using rule 86 (EXP -> EXP menor EXP .)
    diferente2      reduce using rule 86 (EXP -> EXP menor EXP .)
    punto           reduce using rule 86 (EXP -> EXP menor EXP .)
    coma            reduce using rule 86 (EXP -> EXP menor EXP .)
    r_from          reduce using rule 86 (EXP -> EXP menor EXP .)
    ptcoma          reduce using rule 86 (EXP -> EXP menor EXP .)
    parc            reduce using rule 86 (EXP -> EXP menor EXP .)
    as              reduce using rule 86 (EXP -> EXP menor EXP .)
    where           reduce using rule 86 (EXP -> EXP menor EXP .)
    group           reduce using rule 86 (EXP -> EXP menor EXP .)
    having          reduce using rule 86 (EXP -> EXP menor EXP .)
    id              reduce using rule 86 (EXP -> EXP menor EXP .)
    select          reduce using rule 86 (EXP -> EXP menor EXP .)
    create          reduce using rule 86 (EXP -> EXP menor EXP .)
    $end            reduce using rule 86 (EXP -> EXP menor EXP .)
    constraint      reduce using rule 86 (EXP -> EXP menor EXP .)
    default         reduce using rule 86 (EXP -> EXP menor EXP .)
    primary         reduce using rule 86 (EXP -> EXP menor EXP .)
    references      reduce using rule 86 (EXP -> EXP menor EXP .)
    not             reduce using rule 86 (EXP -> EXP menor EXP .)
    null            reduce using rule 86 (EXP -> EXP menor EXP .)
    and             shift and go to state 38
    or              shift and go to state 39

  ! and             [ reduce using rule 86 (EXP -> EXP menor EXP .) ]
  ! or              [ reduce using rule 86 (EXP -> EXP menor EXP .) ]
  ! mas             [ shift and go to state 32 ]
  ! menos           [ shift and go to state 33 ]
  ! multiplicacion  [ shift and go to state 34 ]
  ! division        [ shift and go to state 35 ]
  ! modulo          [ shift and go to state 36 ]
  ! elevado         [ shift and go to state 37 ]
  ! mayor           [ shift and go to state 40 ]
  ! menor           [ shift and go to state 41 ]
  ! mayor_igual     [ shift and go to state 42 ]
  ! menor_igual     [ shift and go to state 43 ]
  ! igual           [ shift and go to state 44 ]
  ! diferente1      [ shift and go to state 45 ]
  ! diferente2      [ shift and go to state 46 ]
  ! punto           [ shift and go to state 47 ]


state 70

    (87) EXP -> EXP mayor_igual EXP .
    (77) EXP -> EXP . mas EXP
    (78) EXP -> EXP . menos EXP
    (79) EXP -> EXP . multiplicacion EXP
    (80) EXP -> EXP . division EXP
    (81) EXP -> EXP . modulo EXP
    (82) EXP -> EXP . elevado EXP
    (83) EXP -> EXP . and EXP
    (84) EXP -> EXP . or EXP
    (85) EXP -> EXP . mayor EXP
    (86) EXP -> EXP . menor EXP
    (87) EXP -> EXP . mayor_igual EXP
    (88) EXP -> EXP . menor_igual EXP
    (89) EXP -> EXP . igual EXP
    (90) EXP -> EXP . diferente1 EXP
    (91) EXP -> EXP . diferente2 EXP
    (92) EXP -> EXP . punto EXP

    mas             reduce using rule 87 (EXP -> EXP mayor_igual EXP .)
    menos           reduce using rule 87 (EXP -> EXP mayor_igual EXP .)
    multiplicacion  reduce using rule 87 (EXP -> EXP mayor_igual EXP .)
    division        reduce using rule 87 (EXP -> EXP mayor_igual EXP .)
    modulo          reduce using rule 87 (EXP -> EXP mayor_igual EXP .)
    elevado         reduce using rule 87 (EXP -> EXP mayor_igual EXP .)
    mayor           reduce using rule 87 (EXP -> EXP mayor_igual EXP .)
    menor           reduce using rule 87 (EXP -> EXP mayor_igual EXP .)
    mayor_igual     reduce using rule 87 (EXP -> EXP mayor_igual EXP .)
    menor_igual     reduce using rule 87 (EXP -> EXP mayor_igual EXP .)
    igual           reduce using rule 87 (EXP -> EXP mayor_igual EXP .)
    diferente1      reduce using rule 87 (EXP -> EXP mayor_igual EXP .)
    diferente2      reduce using rule 87 (EXP -> EXP mayor_igual EXP .)
    punto           reduce using rule 87 (EXP -> EXP mayor_igual EXP .)
    coma            reduce using rule 87 (EXP -> EXP mayor_igual EXP .)
    r_from          reduce using rule 87 (EXP -> EXP mayor_igual EXP .)
    ptcoma          reduce using rule 87 (EXP -> EXP mayor_igual EXP .)
    parc            reduce using rule 87 (EXP -> EXP mayor_igual EXP .)
    as              reduce using rule 87 (EXP -> EXP mayor_igual EXP .)
    where           reduce using rule 87 (EXP -> EXP mayor_igual EXP .)
    group           reduce using rule 87 (EXP -> EXP mayor_igual EXP .)
    having          reduce using rule 87 (EXP -> EXP mayor_igual EXP .)
    id              reduce using rule 87 (EXP -> EXP mayor_igual EXP .)
    select          reduce using rule 87 (EXP -> EXP mayor_igual EXP .)
    create          reduce using rule 87 (EXP -> EXP mayor_igual EXP .)
    $end            reduce using rule 87 (EXP -> EXP mayor_igual EXP .)
    constraint      reduce using rule 87 (EXP -> EXP mayor_igual EXP .)
    default         reduce using rule 87 (EXP -> EXP mayor_igual EXP .)
    primary         reduce using rule 87 (EXP -> EXP mayor_igual EXP .)
    references      reduce using rule 87 (EXP -> EXP mayor_igual EXP .)
    not             reduce using rule 87 (EXP -> EXP mayor_igual EXP .)
    null            reduce using rule 87 (EXP -> EXP mayor_igual EXP .)
    and             shift and go to state 38
    or              shift and go to state 39

  ! and             [ reduce using rule 87 (EXP -> EXP mayor_igual EXP .) ]
  ! or              [ reduce using rule 87 (EXP -> EXP mayor_igual EXP .) ]
  ! mas             [ shift and go to state 32 ]
  ! menos           [ shift and go to state 33 ]
  ! multiplicacion  [ shift and go to state 34 ]
  ! division        [ shift and go to state 35 ]
  ! modulo          [ shift and go to state 36 ]
  ! elevado         [ shift and go to state 37 ]
  ! mayor           [ shift and go to state 40 ]
  ! menor           [ shift and go to state 41 ]
  ! mayor_igual     [ shift and go to state 42 ]
  ! menor_igual     [ shift and go to state 43 ]
  ! igual           [ shift and go to state 44 ]
  ! diferente1      [ shift and go to state 45 ]
  ! diferente2      [ shift and go to state 46 ]
  ! punto           [ shift and go to state 47 ]


state 71

    (88) EXP -> EXP menor_igual EXP .
    (77) EXP -> EXP . mas EXP
    (78) EXP -> EXP . menos EXP
    (79) EXP -> EXP . multiplicacion EXP
    (80) EXP -> EXP . division EXP
    (81) EXP -> EXP . modulo EXP
    (82) EXP -> EXP . elevado EXP
    (83) EXP -> EXP . and EXP
    (84) EXP -> EXP . or EXP
    (85) EXP -> EXP . mayor EXP
    (86) EXP -> EXP . menor EXP
    (87) EXP -> EXP . mayor_igual EXP
    (88) EXP -> EXP . menor_igual EXP
    (89) EXP -> EXP . igual EXP
    (90) EXP -> EXP . diferente1 EXP
    (91) EXP -> EXP . diferente2 EXP
    (92) EXP -> EXP . punto EXP

    mas             reduce using rule 88 (EXP -> EXP menor_igual EXP .)
    menos           reduce using rule 88 (EXP -> EXP menor_igual EXP .)
    multiplicacion  reduce using rule 88 (EXP -> EXP menor_igual EXP .)
    division        reduce using rule 88 (EXP -> EXP menor_igual EXP .)
    modulo          reduce using rule 88 (EXP -> EXP menor_igual EXP .)
    elevado         reduce using rule 88 (EXP -> EXP menor_igual EXP .)
    mayor           reduce using rule 88 (EXP -> EXP menor_igual EXP .)
    menor           reduce using rule 88 (EXP -> EXP menor_igual EXP .)
    mayor_igual     reduce using rule 88 (EXP -> EXP menor_igual EXP .)
    menor_igual     reduce using rule 88 (EXP -> EXP menor_igual EXP .)
    igual           reduce using rule 88 (EXP -> EXP menor_igual EXP .)
    diferente1      reduce using rule 88 (EXP -> EXP menor_igual EXP .)
    diferente2      reduce using rule 88 (EXP -> EXP menor_igual EXP .)
    punto           reduce using rule 88 (EXP -> EXP menor_igual EXP .)
    coma            reduce using rule 88 (EXP -> EXP menor_igual EXP .)
    r_from          reduce using rule 88 (EXP -> EXP menor_igual EXP .)
    ptcoma          reduce using rule 88 (EXP -> EXP menor_igual EXP .)
    parc            reduce using rule 88 (EXP -> EXP menor_igual EXP .)
    as              reduce using rule 88 (EXP -> EXP menor_igual EXP .)
    where           reduce using rule 88 (EXP -> EXP menor_igual EXP .)
    group           reduce using rule 88 (EXP -> EXP menor_igual EXP .)
    having          reduce using rule 88 (EXP -> EXP menor_igual EXP .)
    id              reduce using rule 88 (EXP -> EXP menor_igual EXP .)
    select          reduce using rule 88 (EXP -> EXP menor_igual EXP .)
    create          reduce using rule 88 (EXP -> EXP menor_igual EXP .)
    $end            reduce using rule 88 (EXP -> EXP menor_igual EXP .)
    constraint      reduce using rule 88 (EXP -> EXP menor_igual EXP .)
    default         reduce using rule 88 (EXP -> EXP menor_igual EXP .)
    primary         reduce using rule 88 (EXP -> EXP menor_igual EXP .)
    references      reduce using rule 88 (EXP -> EXP menor_igual EXP .)
    not             reduce using rule 88 (EXP -> EXP menor_igual EXP .)
    null            reduce using rule 88 (EXP -> EXP menor_igual EXP .)
    and             shift and go to state 38
    or              shift and go to state 39

  ! and             [ reduce using rule 88 (EXP -> EXP menor_igual EXP .) ]
  ! or              [ reduce using rule 88 (EXP -> EXP menor_igual EXP .) ]
  ! mas             [ shift and go to state 32 ]
  ! menos           [ shift and go to state 33 ]
  ! multiplicacion  [ shift and go to state 34 ]
  ! division        [ shift and go to state 35 ]
  ! modulo          [ shift and go to state 36 ]
  ! elevado         [ shift and go to state 37 ]
  ! mayor           [ shift and go to state 40 ]
  ! menor           [ shift and go to state 41 ]
  ! mayor_igual     [ shift and go to state 42 ]
  ! menor_igual     [ shift and go to state 43 ]
  ! igual           [ shift and go to state 44 ]
  ! diferente1      [ shift and go to state 45 ]
  ! diferente2      [ shift and go to state 46 ]
  ! punto           [ shift and go to state 47 ]


state 72

    (89) EXP -> EXP igual EXP .
    (77) EXP -> EXP . mas EXP
    (78) EXP -> EXP . menos EXP
    (79) EXP -> EXP . multiplicacion EXP
    (80) EXP -> EXP . division EXP
    (81) EXP -> EXP . modulo EXP
    (82) EXP -> EXP . elevado EXP
    (83) EXP -> EXP . and EXP
    (84) EXP -> EXP . or EXP
    (85) EXP -> EXP . mayor EXP
    (86) EXP -> EXP . menor EXP
    (87) EXP -> EXP . mayor_igual EXP
    (88) EXP -> EXP . menor_igual EXP
    (89) EXP -> EXP . igual EXP
    (90) EXP -> EXP . diferente1 EXP
    (91) EXP -> EXP . diferente2 EXP
    (92) EXP -> EXP . punto EXP

    mas             reduce using rule 89 (EXP -> EXP igual EXP .)
    menos           reduce using rule 89 (EXP -> EXP igual EXP .)
    multiplicacion  reduce using rule 89 (EXP -> EXP igual EXP .)
    division        reduce using rule 89 (EXP -> EXP igual EXP .)
    modulo          reduce using rule 89 (EXP -> EXP igual EXP .)
    elevado         reduce using rule 89 (EXP -> EXP igual EXP .)
    mayor           reduce using rule 89 (EXP -> EXP igual EXP .)
    menor           reduce using rule 89 (EXP -> EXP igual EXP .)
    mayor_igual     reduce using rule 89 (EXP -> EXP igual EXP .)
    menor_igual     reduce using rule 89 (EXP -> EXP igual EXP .)
    igual           reduce using rule 89 (EXP -> EXP igual EXP .)
    diferente1      reduce using rule 89 (EXP -> EXP igual EXP .)
    diferente2      reduce using rule 89 (EXP -> EXP igual EXP .)
    punto           reduce using rule 89 (EXP -> EXP igual EXP .)
    coma            reduce using rule 89 (EXP -> EXP igual EXP .)
    r_from          reduce using rule 89 (EXP -> EXP igual EXP .)
    ptcoma          reduce using rule 89 (EXP -> EXP igual EXP .)
    parc            reduce using rule 89 (EXP -> EXP igual EXP .)
    as              reduce using rule 89 (EXP -> EXP igual EXP .)
    where           reduce using rule 89 (EXP -> EXP igual EXP .)
    group           reduce using rule 89 (EXP -> EXP igual EXP .)
    having          reduce using rule 89 (EXP -> EXP igual EXP .)
    id              reduce using rule 89 (EXP -> EXP igual EXP .)
    select          reduce using rule 89 (EXP -> EXP igual EXP .)
    create          reduce using rule 89 (EXP -> EXP igual EXP .)
    $end            reduce using rule 89 (EXP -> EXP igual EXP .)
    constraint      reduce using rule 89 (EXP -> EXP igual EXP .)
    default         reduce using rule 89 (EXP -> EXP igual EXP .)
    primary         reduce using rule 89 (EXP -> EXP igual EXP .)
    references      reduce using rule 89 (EXP -> EXP igual EXP .)
    not             reduce using rule 89 (EXP -> EXP igual EXP .)
    null            reduce using rule 89 (EXP -> EXP igual EXP .)
    and             shift and go to state 38
    or              shift and go to state 39

  ! and             [ reduce using rule 89 (EXP -> EXP igual EXP .) ]
  ! or              [ reduce using rule 89 (EXP -> EXP igual EXP .) ]
  ! mas             [ shift and go to state 32 ]
  ! menos           [ shift and go to state 33 ]
  ! multiplicacion  [ shift and go to state 34 ]
  ! division        [ shift and go to state 35 ]
  ! modulo          [ shift and go to state 36 ]
  ! elevado         [ shift and go to state 37 ]
  ! mayor           [ shift and go to state 40 ]
  ! menor           [ shift and go to state 41 ]
  ! mayor_igual     [ shift and go to state 42 ]
  ! menor_igual     [ shift and go to state 43 ]
  ! igual           [ shift and go to state 44 ]
  ! diferente1      [ shift and go to state 45 ]
  ! diferente2      [ shift and go to state 46 ]
  ! punto           [ shift and go to state 47 ]


state 73

    (90) EXP -> EXP diferente1 EXP .
    (77) EXP -> EXP . mas EXP
    (78) EXP -> EXP . menos EXP
    (79) EXP -> EXP . multiplicacion EXP
    (80) EXP -> EXP . division EXP
    (81) EXP -> EXP . modulo EXP
    (82) EXP -> EXP . elevado EXP
    (83) EXP -> EXP . and EXP
    (84) EXP -> EXP . or EXP
    (85) EXP -> EXP . mayor EXP
    (86) EXP -> EXP . menor EXP
    (87) EXP -> EXP . mayor_igual EXP
    (88) EXP -> EXP . menor_igual EXP
    (89) EXP -> EXP . igual EXP
    (90) EXP -> EXP . diferente1 EXP
    (91) EXP -> EXP . diferente2 EXP
    (92) EXP -> EXP . punto EXP

    mas             reduce using rule 90 (EXP -> EXP diferente1 EXP .)
    menos           reduce using rule 90 (EXP -> EXP diferente1 EXP .)
    multiplicacion  reduce using rule 90 (EXP -> EXP diferente1 EXP .)
    division        reduce using rule 90 (EXP -> EXP diferente1 EXP .)
    modulo          reduce using rule 90 (EXP -> EXP diferente1 EXP .)
    elevado         reduce using rule 90 (EXP -> EXP diferente1 EXP .)
    mayor           reduce using rule 90 (EXP -> EXP diferente1 EXP .)
    menor           reduce using rule 90 (EXP -> EXP diferente1 EXP .)
    mayor_igual     reduce using rule 90 (EXP -> EXP diferente1 EXP .)
    menor_igual     reduce using rule 90 (EXP -> EXP diferente1 EXP .)
    igual           reduce using rule 90 (EXP -> EXP diferente1 EXP .)
    diferente1      reduce using rule 90 (EXP -> EXP diferente1 EXP .)
    diferente2      reduce using rule 90 (EXP -> EXP diferente1 EXP .)
    punto           reduce using rule 90 (EXP -> EXP diferente1 EXP .)
    coma            reduce using rule 90 (EXP -> EXP diferente1 EXP .)
    r_from          reduce using rule 90 (EXP -> EXP diferente1 EXP .)
    ptcoma          reduce using rule 90 (EXP -> EXP diferente1 EXP .)
    parc            reduce using rule 90 (EXP -> EXP diferente1 EXP .)
    as              reduce using rule 90 (EXP -> EXP diferente1 EXP .)
    where           reduce using rule 90 (EXP -> EXP diferente1 EXP .)
    group           reduce using rule 90 (EXP -> EXP diferente1 EXP .)
    having          reduce using rule 90 (EXP -> EXP diferente1 EXP .)
    id              reduce using rule 90 (EXP -> EXP diferente1 EXP .)
    select          reduce using rule 90 (EXP -> EXP diferente1 EXP .)
    create          reduce using rule 90 (EXP -> EXP diferente1 EXP .)
    $end            reduce using rule 90 (EXP -> EXP diferente1 EXP .)
    constraint      reduce using rule 90 (EXP -> EXP diferente1 EXP .)
    default         reduce using rule 90 (EXP -> EXP diferente1 EXP .)
    primary         reduce using rule 90 (EXP -> EXP diferente1 EXP .)
    references      reduce using rule 90 (EXP -> EXP diferente1 EXP .)
    not             reduce using rule 90 (EXP -> EXP diferente1 EXP .)
    null            reduce using rule 90 (EXP -> EXP diferente1 EXP .)
    and             shift and go to state 38
    or              shift and go to state 39

  ! and             [ reduce using rule 90 (EXP -> EXP diferente1 EXP .) ]
  ! or              [ reduce using rule 90 (EXP -> EXP diferente1 EXP .) ]
  ! mas             [ shift and go to state 32 ]
  ! menos           [ shift and go to state 33 ]
  ! multiplicacion  [ shift and go to state 34 ]
  ! division        [ shift and go to state 35 ]
  ! modulo          [ shift and go to state 36 ]
  ! elevado         [ shift and go to state 37 ]
  ! mayor           [ shift and go to state 40 ]
  ! menor           [ shift and go to state 41 ]
  ! mayor_igual     [ shift and go to state 42 ]
  ! menor_igual     [ shift and go to state 43 ]
  ! igual           [ shift and go to state 44 ]
  ! diferente1      [ shift and go to state 45 ]
  ! diferente2      [ shift and go to state 46 ]
  ! punto           [ shift and go to state 47 ]


state 74

    (91) EXP -> EXP diferente2 EXP .
    (77) EXP -> EXP . mas EXP
    (78) EXP -> EXP . menos EXP
    (79) EXP -> EXP . multiplicacion EXP
    (80) EXP -> EXP . division EXP
    (81) EXP -> EXP . modulo EXP
    (82) EXP -> EXP . elevado EXP
    (83) EXP -> EXP . and EXP
    (84) EXP -> EXP . or EXP
    (85) EXP -> EXP . mayor EXP
    (86) EXP -> EXP . menor EXP
    (87) EXP -> EXP . mayor_igual EXP
    (88) EXP -> EXP . menor_igual EXP
    (89) EXP -> EXP . igual EXP
    (90) EXP -> EXP . diferente1 EXP
    (91) EXP -> EXP . diferente2 EXP
    (92) EXP -> EXP . punto EXP

    mas             reduce using rule 91 (EXP -> EXP diferente2 EXP .)
    menos           reduce using rule 91 (EXP -> EXP diferente2 EXP .)
    multiplicacion  reduce using rule 91 (EXP -> EXP diferente2 EXP .)
    division        reduce using rule 91 (EXP -> EXP diferente2 EXP .)
    modulo          reduce using rule 91 (EXP -> EXP diferente2 EXP .)
    elevado         reduce using rule 91 (EXP -> EXP diferente2 EXP .)
    mayor           reduce using rule 91 (EXP -> EXP diferente2 EXP .)
    menor           reduce using rule 91 (EXP -> EXP diferente2 EXP .)
    mayor_igual     reduce using rule 91 (EXP -> EXP diferente2 EXP .)
    menor_igual     reduce using rule 91 (EXP -> EXP diferente2 EXP .)
    igual           reduce using rule 91 (EXP -> EXP diferente2 EXP .)
    diferente1      reduce using rule 91 (EXP -> EXP diferente2 EXP .)
    diferente2      reduce using rule 91 (EXP -> EXP diferente2 EXP .)
    punto           reduce using rule 91 (EXP -> EXP diferente2 EXP .)
    coma            reduce using rule 91 (EXP -> EXP diferente2 EXP .)
    r_from          reduce using rule 91 (EXP -> EXP diferente2 EXP .)
    ptcoma          reduce using rule 91 (EXP -> EXP diferente2 EXP .)
    parc            reduce using rule 91 (EXP -> EXP diferente2 EXP .)
    as              reduce using rule 91 (EXP -> EXP diferente2 EXP .)
    where           reduce using rule 91 (EXP -> EXP diferente2 EXP .)
    group           reduce using rule 91 (EXP -> EXP diferente2 EXP .)
    having          reduce using rule 91 (EXP -> EXP diferente2 EXP .)
    id              reduce using rule 91 (EXP -> EXP diferente2 EXP .)
    select          reduce using rule 91 (EXP -> EXP diferente2 EXP .)
    create          reduce using rule 91 (EXP -> EXP diferente2 EXP .)
    $end            reduce using rule 91 (EXP -> EXP diferente2 EXP .)
    constraint      reduce using rule 91 (EXP -> EXP diferente2 EXP .)
    default         reduce using rule 91 (EXP -> EXP diferente2 EXP .)
    primary         reduce using rule 91 (EXP -> EXP diferente2 EXP .)
    references      reduce using rule 91 (EXP -> EXP diferente2 EXP .)
    not             reduce using rule 91 (EXP -> EXP diferente2 EXP .)
    null            reduce using rule 91 (EXP -> EXP diferente2 EXP .)
    and             shift and go to state 38
    or              shift and go to state 39

  ! and             [ reduce using rule 91 (EXP -> EXP diferente2 EXP .) ]
  ! or              [ reduce using rule 91 (EXP -> EXP diferente2 EXP .) ]
  ! mas             [ shift and go to state 32 ]
  ! menos           [ shift and go to state 33 ]
  ! multiplicacion  [ shift and go to state 34 ]
  ! division        [ shift and go to state 35 ]
  ! modulo          [ shift and go to state 36 ]
  ! elevado         [ shift and go to state 37 ]
  ! mayor           [ shift and go to state 40 ]
  ! menor           [ shift and go to state 41 ]
  ! mayor_igual     [ shift and go to state 42 ]
  ! menor_igual     [ shift and go to state 43 ]
  ! igual           [ shift and go to state 44 ]
  ! diferente1      [ shift and go to state 45 ]
  ! diferente2      [ shift and go to state 46 ]
  ! punto           [ shift and go to state 47 ]


state 75

    (92) EXP -> EXP punto EXP .
    (77) EXP -> EXP . mas EXP
    (78) EXP -> EXP . menos EXP
    (79) EXP -> EXP . multiplicacion EXP
    (80) EXP -> EXP . division EXP
    (81) EXP -> EXP . modulo EXP
    (82) EXP -> EXP . elevado EXP
    (83) EXP -> EXP . and EXP
    (84) EXP -> EXP . or EXP
    (85) EXP -> EXP . mayor EXP
    (86) EXP -> EXP . menor EXP
    (87) EXP -> EXP . mayor_igual EXP
    (88) EXP -> EXP . menor_igual EXP
    (89) EXP -> EXP . igual EXP
    (90) EXP -> EXP . diferente1 EXP
    (91) EXP -> EXP . diferente2 EXP
    (92) EXP -> EXP . punto EXP

    punto           reduce using rule 92 (EXP -> EXP punto EXP .)
    coma            reduce using rule 92 (EXP -> EXP punto EXP .)
    r_from          reduce using rule 92 (EXP -> EXP punto EXP .)
    ptcoma          reduce using rule 92 (EXP -> EXP punto EXP .)
    parc            reduce using rule 92 (EXP -> EXP punto EXP .)
    as              reduce using rule 92 (EXP -> EXP punto EXP .)
    where           reduce using rule 92 (EXP -> EXP punto EXP .)
    group           reduce using rule 92 (EXP -> EXP punto EXP .)
    having          reduce using rule 92 (EXP -> EXP punto EXP .)
    id              reduce using rule 92 (EXP -> EXP punto EXP .)
    select          reduce using rule 92 (EXP -> EXP punto EXP .)
    create          reduce using rule 92 (EXP -> EXP punto EXP .)
    $end            reduce using rule 92 (EXP -> EXP punto EXP .)
    constraint      reduce using rule 92 (EXP -> EXP punto EXP .)
    default         reduce using rule 92 (EXP -> EXP punto EXP .)
    primary         reduce using rule 92 (EXP -> EXP punto EXP .)
    references      reduce using rule 92 (EXP -> EXP punto EXP .)
    not             reduce using rule 92 (EXP -> EXP punto EXP .)
    null            reduce using rule 92 (EXP -> EXP punto EXP .)
    mas             shift and go to state 32
    menos           shift and go to state 33
    multiplicacion  shift and go to state 34
    division        shift and go to state 35
    modulo          shift and go to state 36
    elevado         shift and go to state 37
    and             shift and go to state 38
    or              shift and go to state 39
    mayor           shift and go to state 40
    menor           shift and go to state 41
    mayor_igual     shift and go to state 42
    menor_igual     shift and go to state 43
    igual           shift and go to state 44
    diferente1      shift and go to state 45
    diferente2      shift and go to state 46

  ! mas             [ reduce using rule 92 (EXP -> EXP punto EXP .) ]
  ! menos           [ reduce using rule 92 (EXP -> EXP punto EXP .) ]
  ! multiplicacion  [ reduce using rule 92 (EXP -> EXP punto EXP .) ]
  ! division        [ reduce using rule 92 (EXP -> EXP punto EXP .) ]
  ! modulo          [ reduce using rule 92 (EXP -> EXP punto EXP .) ]
  ! elevado         [ reduce using rule 92 (EXP -> EXP punto EXP .) ]
  ! and             [ reduce using rule 92 (EXP -> EXP punto EXP .) ]
  ! or              [ reduce using rule 92 (EXP -> EXP punto EXP .) ]
  ! mayor           [ reduce using rule 92 (EXP -> EXP punto EXP .) ]
  ! menor           [ reduce using rule 92 (EXP -> EXP punto EXP .) ]
  ! mayor_igual     [ reduce using rule 92 (EXP -> EXP punto EXP .) ]
  ! menor_igual     [ reduce using rule 92 (EXP -> EXP punto EXP .) ]
  ! igual           [ reduce using rule 92 (EXP -> EXP punto EXP .) ]
  ! diferente1      [ reduce using rule 92 (EXP -> EXP punto EXP .) ]
  ! diferente2      [ reduce using rule 92 (EXP -> EXP punto EXP .) ]
  ! punto           [ shift and go to state 47 ]


state 76

    (96) EXP -> para EXP parc .

    mas             reduce using rule 96 (EXP -> para EXP parc .)
    menos           reduce using rule 96 (EXP -> para EXP parc .)
    multiplicacion  reduce using rule 96 (EXP -> para EXP parc .)
    division        reduce using rule 96 (EXP -> para EXP parc .)
    modulo          reduce using rule 96 (EXP -> para EXP parc .)
    elevado         reduce using rule 96 (EXP -> para EXP parc .)
    and             reduce using rule 96 (EXP -> para EXP parc .)
    or              reduce using rule 96 (EXP -> para EXP parc .)
    mayor           reduce using rule 96 (EXP -> para EXP parc .)
    menor           reduce using rule 96 (EXP -> para EXP parc .)
    mayor_igual     reduce using rule 96 (EXP -> para EXP parc .)
    menor_igual     reduce using rule 96 (EXP -> para EXP parc .)
    igual           reduce using rule 96 (EXP -> para EXP parc .)
    diferente1      reduce using rule 96 (EXP -> para EXP parc .)
    diferente2      reduce using rule 96 (EXP -> para EXP parc .)
    punto           reduce using rule 96 (EXP -> para EXP parc .)
    coma            reduce using rule 96 (EXP -> para EXP parc .)
    r_from          reduce using rule 96 (EXP -> para EXP parc .)
    ptcoma          reduce using rule 96 (EXP -> para EXP parc .)
    parc            reduce using rule 96 (EXP -> para EXP parc .)
    as              reduce using rule 96 (EXP -> para EXP parc .)
    where           reduce using rule 96 (EXP -> para EXP parc .)
    group           reduce using rule 96 (EXP -> para EXP parc .)
    having          reduce using rule 96 (EXP -> para EXP parc .)
    id              reduce using rule 96 (EXP -> para EXP parc .)
    select          reduce using rule 96 (EXP -> para EXP parc .)
    create          reduce using rule 96 (EXP -> para EXP parc .)
    $end            reduce using rule 96 (EXP -> para EXP parc .)
    constraint      reduce using rule 96 (EXP -> para EXP parc .)
    default         reduce using rule 96 (EXP -> para EXP parc .)
    primary         reduce using rule 96 (EXP -> para EXP parc .)
    references      reduce using rule 96 (EXP -> para EXP parc .)
    not             reduce using rule 96 (EXP -> para EXP parc .)
    null            reduce using rule 96 (EXP -> para EXP parc .)


state 77

    (7) CREATETABLE -> create table id para . LDEF parc ptcoma
    (8) CREATETABLE -> create table id para . LDEF parc HERENCIA ptcoma
    (9) LDEF -> . LDEF coma COLDEF
    (10) LDEF -> . COLDEF
    (11) COLDEF -> . OPCONST
    (12) COLDEF -> . constraint id OPCONST
    (13) COLDEF -> . id TIPO
    (14) COLDEF -> . id TIPO LOPCOLUMN
    (25) OPCONST -> . primary key para LEXP parc
    (26) OPCONST -> . foreign key para LEXP parc references table para LEXP parc
    (27) OPCONST -> . unique para LEXP parc
    (28) OPCONST -> . check para EXP parc

    constraint      shift and go to state 88
    id              shift and go to state 84
    primary         shift and go to state 89
    foreign         shift and go to state 90
    unique          shift and go to state 91
    check           shift and go to state 92

    LDEF                           shift and go to state 85
    COLDEF                         shift and go to state 86
    OPCONST                        shift and go to state 87

state 78

    (30) SELECT -> select distinct LSELECT r_from LFROM . WHERE GROUP HAVING
    (34) LFROM -> LFROM . coma FROM
    (40) WHERE -> . where EXP
    (41) WHERE -> .

    coma            shift and go to state 80
    where           shift and go to state 81
    group           reduce using rule 41 (WHERE -> .)
    having          reduce using rule 41 (WHERE -> .)
    ptcoma          reduce using rule 41 (WHERE -> .)

    WHERE                          shift and go to state 93

state 79

    (31) SELECT -> select LSELECT r_from LFROM WHERE . GROUP HAVING
    (42) GROUP -> . group by EXP
    (43) GROUP -> .

    group           shift and go to state 95
    having          reduce using rule 43 (GROUP -> .)
    ptcoma          reduce using rule 43 (GROUP -> .)

    GROUP                          shift and go to state 94

state 80

    (34) LFROM -> LFROM coma . FROM
    (36) FROM -> . EXP
    (37) FROM -> . EXP as id
    (38) FROM -> . para SELECT parc
    (39) FROM -> . para SELECT parc as id
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    para            shift and go to state 58
    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    FROM                           shift and go to state 96
    EXP                            shift and go to state 57

state 81

    (40) WHERE -> where . EXP
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    EXP                            shift and go to state 97

state 82

    (37) FROM -> EXP as . id

    id              shift and go to state 98


state 83

    (38) FROM -> para SELECT . parc
    (39) FROM -> para SELECT . parc as id

    parc            shift and go to state 99


state 84

    (13) COLDEF -> id . TIPO
    (14) COLDEF -> id . TIPO LOPCOLUMN
    (48) TIPO -> . smallint
    (49) TIPO -> . integer
    (50) TIPO -> . bigint
    (51) TIPO -> . decimal para LEXP parc
    (52) TIPO -> . numeric para LEXP parc
    (53) TIPO -> . real
    (54) TIPO -> . double precision
    (55) TIPO -> . money
    (56) TIPO -> . character varying para int parc
    (57) TIPO -> . varchar para int parc
    (58) TIPO -> . character para int parc
    (59) TIPO -> . char para int parc
    (60) TIPO -> . text
    (61) TIPO -> . timestamp
    (62) TIPO -> . timestamp para int parc
    (63) TIPO -> . date
    (64) TIPO -> . time
    (65) TIPO -> . time para int parc
    (66) TIPO -> . interval
    (67) TIPO -> . interval para int parc
    (68) TIPO -> . interval FIELDS
    (69) TIPO -> . interval para int parc FIELDS
    (70) TIPO -> . boolean

    smallint        shift and go to state 101
    integer         shift and go to state 102
    bigint          shift and go to state 103
    decimal         shift and go to state 104
    numeric         shift and go to state 105
    real            shift and go to state 106
    double          shift and go to state 107
    money           shift and go to state 108
    character       shift and go to state 109
    varchar         shift and go to state 110
    char            shift and go to state 111
    text            shift and go to state 112
    timestamp       shift and go to state 113
    date            shift and go to state 114
    time            shift and go to state 115
    interval        shift and go to state 116
    boolean         shift and go to state 117

    TIPO                           shift and go to state 100

state 85

    (7) CREATETABLE -> create table id para LDEF . parc ptcoma
    (8) CREATETABLE -> create table id para LDEF . parc HERENCIA ptcoma
    (9) LDEF -> LDEF . coma COLDEF

    parc            shift and go to state 118
    coma            shift and go to state 119


state 86

    (10) LDEF -> COLDEF .

    parc            reduce using rule 10 (LDEF -> COLDEF .)
    coma            reduce using rule 10 (LDEF -> COLDEF .)


state 87

    (11) COLDEF -> OPCONST .

    parc            reduce using rule 11 (COLDEF -> OPCONST .)
    coma            reduce using rule 11 (COLDEF -> OPCONST .)


state 88

    (12) COLDEF -> constraint . id OPCONST

    id              shift and go to state 120


state 89

    (25) OPCONST -> primary . key para LEXP parc

    key             shift and go to state 121


state 90

    (26) OPCONST -> foreign . key para LEXP parc references table para LEXP parc

    key             shift and go to state 122


state 91

    (27) OPCONST -> unique . para LEXP parc

    para            shift and go to state 123


state 92

    (28) OPCONST -> check . para EXP parc

    para            shift and go to state 124


state 93

    (30) SELECT -> select distinct LSELECT r_from LFROM WHERE . GROUP HAVING
    (42) GROUP -> . group by EXP
    (43) GROUP -> .

    group           shift and go to state 95
    having          reduce using rule 43 (GROUP -> .)
    ptcoma          reduce using rule 43 (GROUP -> .)

    GROUP                          shift and go to state 125

state 94

    (31) SELECT -> select LSELECT r_from LFROM WHERE GROUP . HAVING
    (44) HAVING -> . having EXP
    (45) HAVING -> . ptcoma

    having          shift and go to state 127
    ptcoma          shift and go to state 128

    HAVING                         shift and go to state 126

state 95

    (42) GROUP -> group . by EXP

    by              shift and go to state 129


state 96

    (34) LFROM -> LFROM coma FROM .

    coma            reduce using rule 34 (LFROM -> LFROM coma FROM .)
    where           reduce using rule 34 (LFROM -> LFROM coma FROM .)
    group           reduce using rule 34 (LFROM -> LFROM coma FROM .)
    having          reduce using rule 34 (LFROM -> LFROM coma FROM .)
    ptcoma          reduce using rule 34 (LFROM -> LFROM coma FROM .)


state 97

    (40) WHERE -> where EXP .
    (77) EXP -> EXP . mas EXP
    (78) EXP -> EXP . menos EXP
    (79) EXP -> EXP . multiplicacion EXP
    (80) EXP -> EXP . division EXP
    (81) EXP -> EXP . modulo EXP
    (82) EXP -> EXP . elevado EXP
    (83) EXP -> EXP . and EXP
    (84) EXP -> EXP . or EXP
    (85) EXP -> EXP . mayor EXP
    (86) EXP -> EXP . menor EXP
    (87) EXP -> EXP . mayor_igual EXP
    (88) EXP -> EXP . menor_igual EXP
    (89) EXP -> EXP . igual EXP
    (90) EXP -> EXP . diferente1 EXP
    (91) EXP -> EXP . diferente2 EXP
    (92) EXP -> EXP . punto EXP

    group           reduce using rule 40 (WHERE -> where EXP .)
    having          reduce using rule 40 (WHERE -> where EXP .)
    ptcoma          reduce using rule 40 (WHERE -> where EXP .)
    mas             shift and go to state 32
    menos           shift and go to state 33
    multiplicacion  shift and go to state 34
    division        shift and go to state 35
    modulo          shift and go to state 36
    elevado         shift and go to state 37
    and             shift and go to state 38
    or              shift and go to state 39
    mayor           shift and go to state 40
    menor           shift and go to state 41
    mayor_igual     shift and go to state 42
    menor_igual     shift and go to state 43
    igual           shift and go to state 44
    diferente1      shift and go to state 45
    diferente2      shift and go to state 46
    punto           shift and go to state 47


state 98

    (37) FROM -> EXP as id .

    coma            reduce using rule 37 (FROM -> EXP as id .)
    where           reduce using rule 37 (FROM -> EXP as id .)
    group           reduce using rule 37 (FROM -> EXP as id .)
    having          reduce using rule 37 (FROM -> EXP as id .)
    ptcoma          reduce using rule 37 (FROM -> EXP as id .)


state 99

    (38) FROM -> para SELECT parc .
    (39) FROM -> para SELECT parc . as id

    coma            reduce using rule 38 (FROM -> para SELECT parc .)
    where           reduce using rule 38 (FROM -> para SELECT parc .)
    group           reduce using rule 38 (FROM -> para SELECT parc .)
    having          reduce using rule 38 (FROM -> para SELECT parc .)
    ptcoma          reduce using rule 38 (FROM -> para SELECT parc .)
    as              shift and go to state 130


state 100

    (13) COLDEF -> id TIPO .
    (14) COLDEF -> id TIPO . LOPCOLUMN
    (15) LOPCOLUMN -> . LOPCOLUMN OPCOLUMN
    (16) LOPCOLUMN -> . OPCOLUMN
    (17) OPCOLUMN -> . constraint id unique
    (18) OPCOLUMN -> . constraint id check para EXP parc
    (19) OPCOLUMN -> . default EXP
    (20) OPCOLUMN -> . PNULL
    (21) OPCOLUMN -> . primary key
    (22) OPCOLUMN -> . references id
    (23) PNULL -> . not null
    (24) PNULL -> . null

    parc            reduce using rule 13 (COLDEF -> id TIPO .)
    coma            reduce using rule 13 (COLDEF -> id TIPO .)
    constraint      shift and go to state 133
    default         shift and go to state 134
    primary         shift and go to state 136
    references      shift and go to state 137
    not             shift and go to state 138
    null            shift and go to state 139

    LOPCOLUMN                      shift and go to state 131
    OPCOLUMN                       shift and go to state 132
    PNULL                          shift and go to state 135

state 101

    (48) TIPO -> smallint .

    constraint      reduce using rule 48 (TIPO -> smallint .)
    default         reduce using rule 48 (TIPO -> smallint .)
    primary         reduce using rule 48 (TIPO -> smallint .)
    references      reduce using rule 48 (TIPO -> smallint .)
    not             reduce using rule 48 (TIPO -> smallint .)
    null            reduce using rule 48 (TIPO -> smallint .)
    parc            reduce using rule 48 (TIPO -> smallint .)
    coma            reduce using rule 48 (TIPO -> smallint .)


state 102

    (49) TIPO -> integer .

    constraint      reduce using rule 49 (TIPO -> integer .)
    default         reduce using rule 49 (TIPO -> integer .)
    primary         reduce using rule 49 (TIPO -> integer .)
    references      reduce using rule 49 (TIPO -> integer .)
    not             reduce using rule 49 (TIPO -> integer .)
    null            reduce using rule 49 (TIPO -> integer .)
    parc            reduce using rule 49 (TIPO -> integer .)
    coma            reduce using rule 49 (TIPO -> integer .)


state 103

    (50) TIPO -> bigint .

    constraint      reduce using rule 50 (TIPO -> bigint .)
    default         reduce using rule 50 (TIPO -> bigint .)
    primary         reduce using rule 50 (TIPO -> bigint .)
    references      reduce using rule 50 (TIPO -> bigint .)
    not             reduce using rule 50 (TIPO -> bigint .)
    null            reduce using rule 50 (TIPO -> bigint .)
    parc            reduce using rule 50 (TIPO -> bigint .)
    coma            reduce using rule 50 (TIPO -> bigint .)


state 104

    (51) TIPO -> decimal . para LEXP parc

    para            shift and go to state 140


state 105

    (52) TIPO -> numeric . para LEXP parc

    para            shift and go to state 141


state 106

    (53) TIPO -> real .

    constraint      reduce using rule 53 (TIPO -> real .)
    default         reduce using rule 53 (TIPO -> real .)
    primary         reduce using rule 53 (TIPO -> real .)
    references      reduce using rule 53 (TIPO -> real .)
    not             reduce using rule 53 (TIPO -> real .)
    null            reduce using rule 53 (TIPO -> real .)
    parc            reduce using rule 53 (TIPO -> real .)
    coma            reduce using rule 53 (TIPO -> real .)


state 107

    (54) TIPO -> double . precision

    precision       shift and go to state 142


state 108

    (55) TIPO -> money .

    constraint      reduce using rule 55 (TIPO -> money .)
    default         reduce using rule 55 (TIPO -> money .)
    primary         reduce using rule 55 (TIPO -> money .)
    references      reduce using rule 55 (TIPO -> money .)
    not             reduce using rule 55 (TIPO -> money .)
    null            reduce using rule 55 (TIPO -> money .)
    parc            reduce using rule 55 (TIPO -> money .)
    coma            reduce using rule 55 (TIPO -> money .)


state 109

    (56) TIPO -> character . varying para int parc
    (58) TIPO -> character . para int parc

    varying         shift and go to state 143
    para            shift and go to state 144


state 110

    (57) TIPO -> varchar . para int parc

    para            shift and go to state 145


state 111

    (59) TIPO -> char . para int parc

    para            shift and go to state 146


state 112

    (60) TIPO -> text .

    constraint      reduce using rule 60 (TIPO -> text .)
    default         reduce using rule 60 (TIPO -> text .)
    primary         reduce using rule 60 (TIPO -> text .)
    references      reduce using rule 60 (TIPO -> text .)
    not             reduce using rule 60 (TIPO -> text .)
    null            reduce using rule 60 (TIPO -> text .)
    parc            reduce using rule 60 (TIPO -> text .)
    coma            reduce using rule 60 (TIPO -> text .)


state 113

    (61) TIPO -> timestamp .
    (62) TIPO -> timestamp . para int parc

    constraint      reduce using rule 61 (TIPO -> timestamp .)
    default         reduce using rule 61 (TIPO -> timestamp .)
    primary         reduce using rule 61 (TIPO -> timestamp .)
    references      reduce using rule 61 (TIPO -> timestamp .)
    not             reduce using rule 61 (TIPO -> timestamp .)
    null            reduce using rule 61 (TIPO -> timestamp .)
    parc            reduce using rule 61 (TIPO -> timestamp .)
    coma            reduce using rule 61 (TIPO -> timestamp .)
    para            shift and go to state 147


state 114

    (63) TIPO -> date .

    constraint      reduce using rule 63 (TIPO -> date .)
    default         reduce using rule 63 (TIPO -> date .)
    primary         reduce using rule 63 (TIPO -> date .)
    references      reduce using rule 63 (TIPO -> date .)
    not             reduce using rule 63 (TIPO -> date .)
    null            reduce using rule 63 (TIPO -> date .)
    parc            reduce using rule 63 (TIPO -> date .)
    coma            reduce using rule 63 (TIPO -> date .)


state 115

    (64) TIPO -> time .
    (65) TIPO -> time . para int parc

    constraint      reduce using rule 64 (TIPO -> time .)
    default         reduce using rule 64 (TIPO -> time .)
    primary         reduce using rule 64 (TIPO -> time .)
    references      reduce using rule 64 (TIPO -> time .)
    not             reduce using rule 64 (TIPO -> time .)
    null            reduce using rule 64 (TIPO -> time .)
    parc            reduce using rule 64 (TIPO -> time .)
    coma            reduce using rule 64 (TIPO -> time .)
    para            shift and go to state 148


state 116

    (66) TIPO -> interval .
    (67) TIPO -> interval . para int parc
    (68) TIPO -> interval . FIELDS
    (69) TIPO -> interval . para int parc FIELDS
    (71) FIELDS -> . year
    (72) FIELDS -> . month
    (73) FIELDS -> . day
    (74) FIELDS -> . hour
    (75) FIELDS -> . minute
    (76) FIELDS -> . second

    constraint      reduce using rule 66 (TIPO -> interval .)
    default         reduce using rule 66 (TIPO -> interval .)
    primary         reduce using rule 66 (TIPO -> interval .)
    references      reduce using rule 66 (TIPO -> interval .)
    not             reduce using rule 66 (TIPO -> interval .)
    null            reduce using rule 66 (TIPO -> interval .)
    parc            reduce using rule 66 (TIPO -> interval .)
    coma            reduce using rule 66 (TIPO -> interval .)
    para            shift and go to state 149
    year            shift and go to state 151
    month           shift and go to state 152
    day             shift and go to state 153
    hour            shift and go to state 154
    minute          shift and go to state 155
    second          shift and go to state 156

    FIELDS                         shift and go to state 150

state 117

    (70) TIPO -> boolean .

    constraint      reduce using rule 70 (TIPO -> boolean .)
    default         reduce using rule 70 (TIPO -> boolean .)
    primary         reduce using rule 70 (TIPO -> boolean .)
    references      reduce using rule 70 (TIPO -> boolean .)
    not             reduce using rule 70 (TIPO -> boolean .)
    null            reduce using rule 70 (TIPO -> boolean .)
    parc            reduce using rule 70 (TIPO -> boolean .)
    coma            reduce using rule 70 (TIPO -> boolean .)


state 118

    (7) CREATETABLE -> create table id para LDEF parc . ptcoma
    (8) CREATETABLE -> create table id para LDEF parc . HERENCIA ptcoma
    (29) HERENCIA -> . inherits para LEXP parc

    ptcoma          shift and go to state 157
    inherits        shift and go to state 159

    HERENCIA                       shift and go to state 158

state 119

    (9) LDEF -> LDEF coma . COLDEF
    (11) COLDEF -> . OPCONST
    (12) COLDEF -> . constraint id OPCONST
    (13) COLDEF -> . id TIPO
    (14) COLDEF -> . id TIPO LOPCOLUMN
    (25) OPCONST -> . primary key para LEXP parc
    (26) OPCONST -> . foreign key para LEXP parc references table para LEXP parc
    (27) OPCONST -> . unique para LEXP parc
    (28) OPCONST -> . check para EXP parc

    constraint      shift and go to state 88
    id              shift and go to state 84
    primary         shift and go to state 89
    foreign         shift and go to state 90
    unique          shift and go to state 91
    check           shift and go to state 92

    COLDEF                         shift and go to state 160
    OPCONST                        shift and go to state 87

state 120

    (12) COLDEF -> constraint id . OPCONST
    (25) OPCONST -> . primary key para LEXP parc
    (26) OPCONST -> . foreign key para LEXP parc references table para LEXP parc
    (27) OPCONST -> . unique para LEXP parc
    (28) OPCONST -> . check para EXP parc

    primary         shift and go to state 89
    foreign         shift and go to state 90
    unique          shift and go to state 91
    check           shift and go to state 92

    OPCONST                        shift and go to state 161

state 121

    (25) OPCONST -> primary key . para LEXP parc

    para            shift and go to state 162


state 122

    (26) OPCONST -> foreign key . para LEXP parc references table para LEXP parc

    para            shift and go to state 163


state 123

    (27) OPCONST -> unique para . LEXP parc
    (46) LEXP -> . LEXP coma EXP
    (47) LEXP -> . EXP
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    LEXP                           shift and go to state 164
    EXP                            shift and go to state 15

state 124

    (28) OPCONST -> check para . EXP parc
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    EXP                            shift and go to state 165

state 125

    (30) SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP . HAVING
    (44) HAVING -> . having EXP
    (45) HAVING -> . ptcoma

    having          shift and go to state 127
    ptcoma          shift and go to state 128

    HAVING                         shift and go to state 166

state 126

    (31) SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING .

    id              reduce using rule 31 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING .)
    select          reduce using rule 31 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING .)
    create          reduce using rule 31 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING .)
    $end            reduce using rule 31 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING .)
    parc            reduce using rule 31 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING .)


state 127

    (44) HAVING -> having . EXP
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    EXP                            shift and go to state 167

state 128

    (45) HAVING -> ptcoma .

    id              reduce using rule 45 (HAVING -> ptcoma .)
    select          reduce using rule 45 (HAVING -> ptcoma .)
    create          reduce using rule 45 (HAVING -> ptcoma .)
    $end            reduce using rule 45 (HAVING -> ptcoma .)
    parc            reduce using rule 45 (HAVING -> ptcoma .)


state 129

    (42) GROUP -> group by . EXP
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    EXP                            shift and go to state 168

state 130

    (39) FROM -> para SELECT parc as . id

    id              shift and go to state 169


state 131

    (14) COLDEF -> id TIPO LOPCOLUMN .
    (15) LOPCOLUMN -> LOPCOLUMN . OPCOLUMN
    (17) OPCOLUMN -> . constraint id unique
    (18) OPCOLUMN -> . constraint id check para EXP parc
    (19) OPCOLUMN -> . default EXP
    (20) OPCOLUMN -> . PNULL
    (21) OPCOLUMN -> . primary key
    (22) OPCOLUMN -> . references id
    (23) PNULL -> . not null
    (24) PNULL -> . null

    parc            reduce using rule 14 (COLDEF -> id TIPO LOPCOLUMN .)
    coma            reduce using rule 14 (COLDEF -> id TIPO LOPCOLUMN .)
    constraint      shift and go to state 133
    default         shift and go to state 134
    primary         shift and go to state 136
    references      shift and go to state 137
    not             shift and go to state 138
    null            shift and go to state 139

    OPCOLUMN                       shift and go to state 170
    PNULL                          shift and go to state 135

state 132

    (16) LOPCOLUMN -> OPCOLUMN .

    constraint      reduce using rule 16 (LOPCOLUMN -> OPCOLUMN .)
    default         reduce using rule 16 (LOPCOLUMN -> OPCOLUMN .)
    primary         reduce using rule 16 (LOPCOLUMN -> OPCOLUMN .)
    references      reduce using rule 16 (LOPCOLUMN -> OPCOLUMN .)
    not             reduce using rule 16 (LOPCOLUMN -> OPCOLUMN .)
    null            reduce using rule 16 (LOPCOLUMN -> OPCOLUMN .)
    parc            reduce using rule 16 (LOPCOLUMN -> OPCOLUMN .)
    coma            reduce using rule 16 (LOPCOLUMN -> OPCOLUMN .)


state 133

    (17) OPCOLUMN -> constraint . id unique
    (18) OPCOLUMN -> constraint . id check para EXP parc

    id              shift and go to state 171


state 134

    (19) OPCOLUMN -> default . EXP
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    EXP                            shift and go to state 172

state 135

    (20) OPCOLUMN -> PNULL .

    constraint      reduce using rule 20 (OPCOLUMN -> PNULL .)
    default         reduce using rule 20 (OPCOLUMN -> PNULL .)
    primary         reduce using rule 20 (OPCOLUMN -> PNULL .)
    references      reduce using rule 20 (OPCOLUMN -> PNULL .)
    not             reduce using rule 20 (OPCOLUMN -> PNULL .)
    null            reduce using rule 20 (OPCOLUMN -> PNULL .)
    parc            reduce using rule 20 (OPCOLUMN -> PNULL .)
    coma            reduce using rule 20 (OPCOLUMN -> PNULL .)


state 136

    (21) OPCOLUMN -> primary . key

    key             shift and go to state 173


state 137

    (22) OPCOLUMN -> references . id

    id              shift and go to state 174


state 138

    (23) PNULL -> not . null

    null            shift and go to state 175


state 139

    (24) PNULL -> null .

    constraint      reduce using rule 24 (PNULL -> null .)
    default         reduce using rule 24 (PNULL -> null .)
    primary         reduce using rule 24 (PNULL -> null .)
    references      reduce using rule 24 (PNULL -> null .)
    not             reduce using rule 24 (PNULL -> null .)
    null            reduce using rule 24 (PNULL -> null .)
    parc            reduce using rule 24 (PNULL -> null .)
    coma            reduce using rule 24 (PNULL -> null .)


state 140

    (51) TIPO -> decimal para . LEXP parc
    (46) LEXP -> . LEXP coma EXP
    (47) LEXP -> . EXP
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    LEXP                           shift and go to state 176
    EXP                            shift and go to state 15

state 141

    (52) TIPO -> numeric para . LEXP parc
    (46) LEXP -> . LEXP coma EXP
    (47) LEXP -> . EXP
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    LEXP                           shift and go to state 177
    EXP                            shift and go to state 15

state 142

    (54) TIPO -> double precision .

    constraint      reduce using rule 54 (TIPO -> double precision .)
    default         reduce using rule 54 (TIPO -> double precision .)
    primary         reduce using rule 54 (TIPO -> double precision .)
    references      reduce using rule 54 (TIPO -> double precision .)
    not             reduce using rule 54 (TIPO -> double precision .)
    null            reduce using rule 54 (TIPO -> double precision .)
    parc            reduce using rule 54 (TIPO -> double precision .)
    coma            reduce using rule 54 (TIPO -> double precision .)


state 143

    (56) TIPO -> character varying . para int parc

    para            shift and go to state 178


state 144

    (58) TIPO -> character para . int parc

    int             shift and go to state 179


state 145

    (57) TIPO -> varchar para . int parc

    int             shift and go to state 180


state 146

    (59) TIPO -> char para . int parc

    int             shift and go to state 181


state 147

    (62) TIPO -> timestamp para . int parc

    int             shift and go to state 182


state 148

    (65) TIPO -> time para . int parc

    int             shift and go to state 183


state 149

    (67) TIPO -> interval para . int parc
    (69) TIPO -> interval para . int parc FIELDS

    int             shift and go to state 184


state 150

    (68) TIPO -> interval FIELDS .

    constraint      reduce using rule 68 (TIPO -> interval FIELDS .)
    default         reduce using rule 68 (TIPO -> interval FIELDS .)
    primary         reduce using rule 68 (TIPO -> interval FIELDS .)
    references      reduce using rule 68 (TIPO -> interval FIELDS .)
    not             reduce using rule 68 (TIPO -> interval FIELDS .)
    null            reduce using rule 68 (TIPO -> interval FIELDS .)
    parc            reduce using rule 68 (TIPO -> interval FIELDS .)
    coma            reduce using rule 68 (TIPO -> interval FIELDS .)


state 151

    (71) FIELDS -> year .

    constraint      reduce using rule 71 (FIELDS -> year .)
    default         reduce using rule 71 (FIELDS -> year .)
    primary         reduce using rule 71 (FIELDS -> year .)
    references      reduce using rule 71 (FIELDS -> year .)
    not             reduce using rule 71 (FIELDS -> year .)
    null            reduce using rule 71 (FIELDS -> year .)
    parc            reduce using rule 71 (FIELDS -> year .)
    coma            reduce using rule 71 (FIELDS -> year .)


state 152

    (72) FIELDS -> month .

    constraint      reduce using rule 72 (FIELDS -> month .)
    default         reduce using rule 72 (FIELDS -> month .)
    primary         reduce using rule 72 (FIELDS -> month .)
    references      reduce using rule 72 (FIELDS -> month .)
    not             reduce using rule 72 (FIELDS -> month .)
    null            reduce using rule 72 (FIELDS -> month .)
    parc            reduce using rule 72 (FIELDS -> month .)
    coma            reduce using rule 72 (FIELDS -> month .)


state 153

    (73) FIELDS -> day .

    constraint      reduce using rule 73 (FIELDS -> day .)
    default         reduce using rule 73 (FIELDS -> day .)
    primary         reduce using rule 73 (FIELDS -> day .)
    references      reduce using rule 73 (FIELDS -> day .)
    not             reduce using rule 73 (FIELDS -> day .)
    null            reduce using rule 73 (FIELDS -> day .)
    parc            reduce using rule 73 (FIELDS -> day .)
    coma            reduce using rule 73 (FIELDS -> day .)


state 154

    (74) FIELDS -> hour .

    constraint      reduce using rule 74 (FIELDS -> hour .)
    default         reduce using rule 74 (FIELDS -> hour .)
    primary         reduce using rule 74 (FIELDS -> hour .)
    references      reduce using rule 74 (FIELDS -> hour .)
    not             reduce using rule 74 (FIELDS -> hour .)
    null            reduce using rule 74 (FIELDS -> hour .)
    parc            reduce using rule 74 (FIELDS -> hour .)
    coma            reduce using rule 74 (FIELDS -> hour .)


state 155

    (75) FIELDS -> minute .

    constraint      reduce using rule 75 (FIELDS -> minute .)
    default         reduce using rule 75 (FIELDS -> minute .)
    primary         reduce using rule 75 (FIELDS -> minute .)
    references      reduce using rule 75 (FIELDS -> minute .)
    not             reduce using rule 75 (FIELDS -> minute .)
    null            reduce using rule 75 (FIELDS -> minute .)
    parc            reduce using rule 75 (FIELDS -> minute .)
    coma            reduce using rule 75 (FIELDS -> minute .)


state 156

    (76) FIELDS -> second .

    constraint      reduce using rule 76 (FIELDS -> second .)
    default         reduce using rule 76 (FIELDS -> second .)
    primary         reduce using rule 76 (FIELDS -> second .)
    references      reduce using rule 76 (FIELDS -> second .)
    not             reduce using rule 76 (FIELDS -> second .)
    null            reduce using rule 76 (FIELDS -> second .)
    parc            reduce using rule 76 (FIELDS -> second .)
    coma            reduce using rule 76 (FIELDS -> second .)


state 157

    (7) CREATETABLE -> create table id para LDEF parc ptcoma .

    id              reduce using rule 7 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    select          reduce using rule 7 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    create          reduce using rule 7 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    $end            reduce using rule 7 (CREATETABLE -> create table id para LDEF parc ptcoma .)


state 158

    (8) CREATETABLE -> create table id para LDEF parc HERENCIA . ptcoma

    ptcoma          shift and go to state 185


state 159

    (29) HERENCIA -> inherits . para LEXP parc

    para            shift and go to state 186


state 160

    (9) LDEF -> LDEF coma COLDEF .

    parc            reduce using rule 9 (LDEF -> LDEF coma COLDEF .)
    coma            reduce using rule 9 (LDEF -> LDEF coma COLDEF .)


state 161

    (12) COLDEF -> constraint id OPCONST .

    parc            reduce using rule 12 (COLDEF -> constraint id OPCONST .)
    coma            reduce using rule 12 (COLDEF -> constraint id OPCONST .)


state 162

    (25) OPCONST -> primary key para . LEXP parc
    (46) LEXP -> . LEXP coma EXP
    (47) LEXP -> . EXP
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    LEXP                           shift and go to state 187
    EXP                            shift and go to state 15

state 163

    (26) OPCONST -> foreign key para . LEXP parc references table para LEXP parc
    (46) LEXP -> . LEXP coma EXP
    (47) LEXP -> . EXP
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    LEXP                           shift and go to state 188
    EXP                            shift and go to state 15

state 164

    (27) OPCONST -> unique para LEXP . parc
    (46) LEXP -> LEXP . coma EXP

    parc            shift and go to state 189
    coma            shift and go to state 31


state 165

    (28) OPCONST -> check para EXP . parc
    (77) EXP -> EXP . mas EXP
    (78) EXP -> EXP . menos EXP
    (79) EXP -> EXP . multiplicacion EXP
    (80) EXP -> EXP . division EXP
    (81) EXP -> EXP . modulo EXP
    (82) EXP -> EXP . elevado EXP
    (83) EXP -> EXP . and EXP
    (84) EXP -> EXP . or EXP
    (85) EXP -> EXP . mayor EXP
    (86) EXP -> EXP . menor EXP
    (87) EXP -> EXP . mayor_igual EXP
    (88) EXP -> EXP . menor_igual EXP
    (89) EXP -> EXP . igual EXP
    (90) EXP -> EXP . diferente1 EXP
    (91) EXP -> EXP . diferente2 EXP
    (92) EXP -> EXP . punto EXP

    parc            shift and go to state 190
    mas             shift and go to state 32
    menos           shift and go to state 33
    multiplicacion  shift and go to state 34
    division        shift and go to state 35
    modulo          shift and go to state 36
    elevado         shift and go to state 37
    and             shift and go to state 38
    or              shift and go to state 39
    mayor           shift and go to state 40
    menor           shift and go to state 41
    mayor_igual     shift and go to state 42
    menor_igual     shift and go to state 43
    igual           shift and go to state 44
    diferente1      shift and go to state 45
    diferente2      shift and go to state 46
    punto           shift and go to state 47


state 166

    (30) SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING .

    id              reduce using rule 30 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING .)
    select          reduce using rule 30 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING .)
    create          reduce using rule 30 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING .)
    $end            reduce using rule 30 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING .)
    parc            reduce using rule 30 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING .)


state 167

    (44) HAVING -> having EXP .
    (77) EXP -> EXP . mas EXP
    (78) EXP -> EXP . menos EXP
    (79) EXP -> EXP . multiplicacion EXP
    (80) EXP -> EXP . division EXP
    (81) EXP -> EXP . modulo EXP
    (82) EXP -> EXP . elevado EXP
    (83) EXP -> EXP . and EXP
    (84) EXP -> EXP . or EXP
    (85) EXP -> EXP . mayor EXP
    (86) EXP -> EXP . menor EXP
    (87) EXP -> EXP . mayor_igual EXP
    (88) EXP -> EXP . menor_igual EXP
    (89) EXP -> EXP . igual EXP
    (90) EXP -> EXP . diferente1 EXP
    (91) EXP -> EXP . diferente2 EXP
    (92) EXP -> EXP . punto EXP

    id              reduce using rule 44 (HAVING -> having EXP .)
    select          reduce using rule 44 (HAVING -> having EXP .)
    create          reduce using rule 44 (HAVING -> having EXP .)
    $end            reduce using rule 44 (HAVING -> having EXP .)
    parc            reduce using rule 44 (HAVING -> having EXP .)
    mas             shift and go to state 32
    menos           shift and go to state 33
    multiplicacion  shift and go to state 34
    division        shift and go to state 35
    modulo          shift and go to state 36
    elevado         shift and go to state 37
    and             shift and go to state 38
    or              shift and go to state 39
    mayor           shift and go to state 40
    menor           shift and go to state 41
    mayor_igual     shift and go to state 42
    menor_igual     shift and go to state 43
    igual           shift and go to state 44
    diferente1      shift and go to state 45
    diferente2      shift and go to state 46
    punto           shift and go to state 47


state 168

    (42) GROUP -> group by EXP .
    (77) EXP -> EXP . mas EXP
    (78) EXP -> EXP . menos EXP
    (79) EXP -> EXP . multiplicacion EXP
    (80) EXP -> EXP . division EXP
    (81) EXP -> EXP . modulo EXP
    (82) EXP -> EXP . elevado EXP
    (83) EXP -> EXP . and EXP
    (84) EXP -> EXP . or EXP
    (85) EXP -> EXP . mayor EXP
    (86) EXP -> EXP . menor EXP
    (87) EXP -> EXP . mayor_igual EXP
    (88) EXP -> EXP . menor_igual EXP
    (89) EXP -> EXP . igual EXP
    (90) EXP -> EXP . diferente1 EXP
    (91) EXP -> EXP . diferente2 EXP
    (92) EXP -> EXP . punto EXP

    having          reduce using rule 42 (GROUP -> group by EXP .)
    ptcoma          reduce using rule 42 (GROUP -> group by EXP .)
    mas             shift and go to state 32
    menos           shift and go to state 33
    multiplicacion  shift and go to state 34
    division        shift and go to state 35
    modulo          shift and go to state 36
    elevado         shift and go to state 37
    and             shift and go to state 38
    or              shift and go to state 39
    mayor           shift and go to state 40
    menor           shift and go to state 41
    mayor_igual     shift and go to state 42
    menor_igual     shift and go to state 43
    igual           shift and go to state 44
    diferente1      shift and go to state 45
    diferente2      shift and go to state 46
    punto           shift and go to state 47


state 169

    (39) FROM -> para SELECT parc as id .

    coma            reduce using rule 39 (FROM -> para SELECT parc as id .)
    where           reduce using rule 39 (FROM -> para SELECT parc as id .)
    group           reduce using rule 39 (FROM -> para SELECT parc as id .)
    having          reduce using rule 39 (FROM -> para SELECT parc as id .)
    ptcoma          reduce using rule 39 (FROM -> para SELECT parc as id .)


state 170

    (15) LOPCOLUMN -> LOPCOLUMN OPCOLUMN .

    constraint      reduce using rule 15 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    default         reduce using rule 15 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    primary         reduce using rule 15 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    references      reduce using rule 15 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    not             reduce using rule 15 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    null            reduce using rule 15 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    parc            reduce using rule 15 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    coma            reduce using rule 15 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)


state 171

    (17) OPCOLUMN -> constraint id . unique
    (18) OPCOLUMN -> constraint id . check para EXP parc

    unique          shift and go to state 191
    check           shift and go to state 192


state 172

    (19) OPCOLUMN -> default EXP .
    (77) EXP -> EXP . mas EXP
    (78) EXP -> EXP . menos EXP
    (79) EXP -> EXP . multiplicacion EXP
    (80) EXP -> EXP . division EXP
    (81) EXP -> EXP . modulo EXP
    (82) EXP -> EXP . elevado EXP
    (83) EXP -> EXP . and EXP
    (84) EXP -> EXP . or EXP
    (85) EXP -> EXP . mayor EXP
    (86) EXP -> EXP . menor EXP
    (87) EXP -> EXP . mayor_igual EXP
    (88) EXP -> EXP . menor_igual EXP
    (89) EXP -> EXP . igual EXP
    (90) EXP -> EXP . diferente1 EXP
    (91) EXP -> EXP . diferente2 EXP
    (92) EXP -> EXP . punto EXP

    constraint      reduce using rule 19 (OPCOLUMN -> default EXP .)
    default         reduce using rule 19 (OPCOLUMN -> default EXP .)
    primary         reduce using rule 19 (OPCOLUMN -> default EXP .)
    references      reduce using rule 19 (OPCOLUMN -> default EXP .)
    not             reduce using rule 19 (OPCOLUMN -> default EXP .)
    null            reduce using rule 19 (OPCOLUMN -> default EXP .)
    parc            reduce using rule 19 (OPCOLUMN -> default EXP .)
    coma            reduce using rule 19 (OPCOLUMN -> default EXP .)
    mas             shift and go to state 32
    menos           shift and go to state 33
    multiplicacion  shift and go to state 34
    division        shift and go to state 35
    modulo          shift and go to state 36
    elevado         shift and go to state 37
    and             shift and go to state 38
    or              shift and go to state 39
    mayor           shift and go to state 40
    menor           shift and go to state 41
    mayor_igual     shift and go to state 42
    menor_igual     shift and go to state 43
    igual           shift and go to state 44
    diferente1      shift and go to state 45
    diferente2      shift and go to state 46
    punto           shift and go to state 47


state 173

    (21) OPCOLUMN -> primary key .

    constraint      reduce using rule 21 (OPCOLUMN -> primary key .)
    default         reduce using rule 21 (OPCOLUMN -> primary key .)
    primary         reduce using rule 21 (OPCOLUMN -> primary key .)
    references      reduce using rule 21 (OPCOLUMN -> primary key .)
    not             reduce using rule 21 (OPCOLUMN -> primary key .)
    null            reduce using rule 21 (OPCOLUMN -> primary key .)
    parc            reduce using rule 21 (OPCOLUMN -> primary key .)
    coma            reduce using rule 21 (OPCOLUMN -> primary key .)


state 174

    (22) OPCOLUMN -> references id .

    constraint      reduce using rule 22 (OPCOLUMN -> references id .)
    default         reduce using rule 22 (OPCOLUMN -> references id .)
    primary         reduce using rule 22 (OPCOLUMN -> references id .)
    references      reduce using rule 22 (OPCOLUMN -> references id .)
    not             reduce using rule 22 (OPCOLUMN -> references id .)
    null            reduce using rule 22 (OPCOLUMN -> references id .)
    parc            reduce using rule 22 (OPCOLUMN -> references id .)
    coma            reduce using rule 22 (OPCOLUMN -> references id .)


state 175

    (23) PNULL -> not null .

    constraint      reduce using rule 23 (PNULL -> not null .)
    default         reduce using rule 23 (PNULL -> not null .)
    primary         reduce using rule 23 (PNULL -> not null .)
    references      reduce using rule 23 (PNULL -> not null .)
    not             reduce using rule 23 (PNULL -> not null .)
    null            reduce using rule 23 (PNULL -> not null .)
    parc            reduce using rule 23 (PNULL -> not null .)
    coma            reduce using rule 23 (PNULL -> not null .)


state 176

    (51) TIPO -> decimal para LEXP . parc
    (46) LEXP -> LEXP . coma EXP

    parc            shift and go to state 193
    coma            shift and go to state 31


state 177

    (52) TIPO -> numeric para LEXP . parc
    (46) LEXP -> LEXP . coma EXP

    parc            shift and go to state 194
    coma            shift and go to state 31


state 178

    (56) TIPO -> character varying para . int parc

    int             shift and go to state 195


state 179

    (58) TIPO -> character para int . parc

    parc            shift and go to state 196


state 180

    (57) TIPO -> varchar para int . parc

    parc            shift and go to state 197


state 181

    (59) TIPO -> char para int . parc

    parc            shift and go to state 198


state 182

    (62) TIPO -> timestamp para int . parc

    parc            shift and go to state 199


state 183

    (65) TIPO -> time para int . parc

    parc            shift and go to state 200


state 184

    (67) TIPO -> interval para int . parc
    (69) TIPO -> interval para int . parc FIELDS

    parc            shift and go to state 201


state 185

    (8) CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .

    id              reduce using rule 8 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    select          reduce using rule 8 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    create          reduce using rule 8 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    $end            reduce using rule 8 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)


state 186

    (29) HERENCIA -> inherits para . LEXP parc
    (46) LEXP -> . LEXP coma EXP
    (47) LEXP -> . EXP
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    LEXP                           shift and go to state 202
    EXP                            shift and go to state 15

state 187

    (25) OPCONST -> primary key para LEXP . parc
    (46) LEXP -> LEXP . coma EXP

    parc            shift and go to state 203
    coma            shift and go to state 31


state 188

    (26) OPCONST -> foreign key para LEXP . parc references table para LEXP parc
    (46) LEXP -> LEXP . coma EXP

    parc            shift and go to state 204
    coma            shift and go to state 31


state 189

    (27) OPCONST -> unique para LEXP parc .

    parc            reduce using rule 27 (OPCONST -> unique para LEXP parc .)
    coma            reduce using rule 27 (OPCONST -> unique para LEXP parc .)


state 190

    (28) OPCONST -> check para EXP parc .

    parc            reduce using rule 28 (OPCONST -> check para EXP parc .)
    coma            reduce using rule 28 (OPCONST -> check para EXP parc .)


state 191

    (17) OPCOLUMN -> constraint id unique .

    constraint      reduce using rule 17 (OPCOLUMN -> constraint id unique .)
    default         reduce using rule 17 (OPCOLUMN -> constraint id unique .)
    primary         reduce using rule 17 (OPCOLUMN -> constraint id unique .)
    references      reduce using rule 17 (OPCOLUMN -> constraint id unique .)
    not             reduce using rule 17 (OPCOLUMN -> constraint id unique .)
    null            reduce using rule 17 (OPCOLUMN -> constraint id unique .)
    parc            reduce using rule 17 (OPCOLUMN -> constraint id unique .)
    coma            reduce using rule 17 (OPCOLUMN -> constraint id unique .)


state 192

    (18) OPCOLUMN -> constraint id check . para EXP parc

    para            shift and go to state 205


state 193

    (51) TIPO -> decimal para LEXP parc .

    constraint      reduce using rule 51 (TIPO -> decimal para LEXP parc .)
    default         reduce using rule 51 (TIPO -> decimal para LEXP parc .)
    primary         reduce using rule 51 (TIPO -> decimal para LEXP parc .)
    references      reduce using rule 51 (TIPO -> decimal para LEXP parc .)
    not             reduce using rule 51 (TIPO -> decimal para LEXP parc .)
    null            reduce using rule 51 (TIPO -> decimal para LEXP parc .)
    parc            reduce using rule 51 (TIPO -> decimal para LEXP parc .)
    coma            reduce using rule 51 (TIPO -> decimal para LEXP parc .)


state 194

    (52) TIPO -> numeric para LEXP parc .

    constraint      reduce using rule 52 (TIPO -> numeric para LEXP parc .)
    default         reduce using rule 52 (TIPO -> numeric para LEXP parc .)
    primary         reduce using rule 52 (TIPO -> numeric para LEXP parc .)
    references      reduce using rule 52 (TIPO -> numeric para LEXP parc .)
    not             reduce using rule 52 (TIPO -> numeric para LEXP parc .)
    null            reduce using rule 52 (TIPO -> numeric para LEXP parc .)
    parc            reduce using rule 52 (TIPO -> numeric para LEXP parc .)
    coma            reduce using rule 52 (TIPO -> numeric para LEXP parc .)


state 195

    (56) TIPO -> character varying para int . parc

    parc            shift and go to state 206


state 196

    (58) TIPO -> character para int parc .

    constraint      reduce using rule 58 (TIPO -> character para int parc .)
    default         reduce using rule 58 (TIPO -> character para int parc .)
    primary         reduce using rule 58 (TIPO -> character para int parc .)
    references      reduce using rule 58 (TIPO -> character para int parc .)
    not             reduce using rule 58 (TIPO -> character para int parc .)
    null            reduce using rule 58 (TIPO -> character para int parc .)
    parc            reduce using rule 58 (TIPO -> character para int parc .)
    coma            reduce using rule 58 (TIPO -> character para int parc .)


state 197

    (57) TIPO -> varchar para int parc .

    constraint      reduce using rule 57 (TIPO -> varchar para int parc .)
    default         reduce using rule 57 (TIPO -> varchar para int parc .)
    primary         reduce using rule 57 (TIPO -> varchar para int parc .)
    references      reduce using rule 57 (TIPO -> varchar para int parc .)
    not             reduce using rule 57 (TIPO -> varchar para int parc .)
    null            reduce using rule 57 (TIPO -> varchar para int parc .)
    parc            reduce using rule 57 (TIPO -> varchar para int parc .)
    coma            reduce using rule 57 (TIPO -> varchar para int parc .)


state 198

    (59) TIPO -> char para int parc .

    constraint      reduce using rule 59 (TIPO -> char para int parc .)
    default         reduce using rule 59 (TIPO -> char para int parc .)
    primary         reduce using rule 59 (TIPO -> char para int parc .)
    references      reduce using rule 59 (TIPO -> char para int parc .)
    not             reduce using rule 59 (TIPO -> char para int parc .)
    null            reduce using rule 59 (TIPO -> char para int parc .)
    parc            reduce using rule 59 (TIPO -> char para int parc .)
    coma            reduce using rule 59 (TIPO -> char para int parc .)


state 199

    (62) TIPO -> timestamp para int parc .

    constraint      reduce using rule 62 (TIPO -> timestamp para int parc .)
    default         reduce using rule 62 (TIPO -> timestamp para int parc .)
    primary         reduce using rule 62 (TIPO -> timestamp para int parc .)
    references      reduce using rule 62 (TIPO -> timestamp para int parc .)
    not             reduce using rule 62 (TIPO -> timestamp para int parc .)
    null            reduce using rule 62 (TIPO -> timestamp para int parc .)
    parc            reduce using rule 62 (TIPO -> timestamp para int parc .)
    coma            reduce using rule 62 (TIPO -> timestamp para int parc .)


state 200

    (65) TIPO -> time para int parc .

    constraint      reduce using rule 65 (TIPO -> time para int parc .)
    default         reduce using rule 65 (TIPO -> time para int parc .)
    primary         reduce using rule 65 (TIPO -> time para int parc .)
    references      reduce using rule 65 (TIPO -> time para int parc .)
    not             reduce using rule 65 (TIPO -> time para int parc .)
    null            reduce using rule 65 (TIPO -> time para int parc .)
    parc            reduce using rule 65 (TIPO -> time para int parc .)
    coma            reduce using rule 65 (TIPO -> time para int parc .)


state 201

    (67) TIPO -> interval para int parc .
    (69) TIPO -> interval para int parc . FIELDS
    (71) FIELDS -> . year
    (72) FIELDS -> . month
    (73) FIELDS -> . day
    (74) FIELDS -> . hour
    (75) FIELDS -> . minute
    (76) FIELDS -> . second

    constraint      reduce using rule 67 (TIPO -> interval para int parc .)
    default         reduce using rule 67 (TIPO -> interval para int parc .)
    primary         reduce using rule 67 (TIPO -> interval para int parc .)
    references      reduce using rule 67 (TIPO -> interval para int parc .)
    not             reduce using rule 67 (TIPO -> interval para int parc .)
    null            reduce using rule 67 (TIPO -> interval para int parc .)
    parc            reduce using rule 67 (TIPO -> interval para int parc .)
    coma            reduce using rule 67 (TIPO -> interval para int parc .)
    year            shift and go to state 151
    month           shift and go to state 152
    day             shift and go to state 153
    hour            shift and go to state 154
    minute          shift and go to state 155
    second          shift and go to state 156

    FIELDS                         shift and go to state 207

state 202

    (29) HERENCIA -> inherits para LEXP . parc
    (46) LEXP -> LEXP . coma EXP

    parc            shift and go to state 208
    coma            shift and go to state 31


state 203

    (25) OPCONST -> primary key para LEXP parc .

    parc            reduce using rule 25 (OPCONST -> primary key para LEXP parc .)
    coma            reduce using rule 25 (OPCONST -> primary key para LEXP parc .)


state 204

    (26) OPCONST -> foreign key para LEXP parc . references table para LEXP parc

    references      shift and go to state 209


state 205

    (18) OPCOLUMN -> constraint id check para . EXP parc
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    EXP                            shift and go to state 210

state 206

    (56) TIPO -> character varying para int parc .

    constraint      reduce using rule 56 (TIPO -> character varying para int parc .)
    default         reduce using rule 56 (TIPO -> character varying para int parc .)
    primary         reduce using rule 56 (TIPO -> character varying para int parc .)
    references      reduce using rule 56 (TIPO -> character varying para int parc .)
    not             reduce using rule 56 (TIPO -> character varying para int parc .)
    null            reduce using rule 56 (TIPO -> character varying para int parc .)
    parc            reduce using rule 56 (TIPO -> character varying para int parc .)
    coma            reduce using rule 56 (TIPO -> character varying para int parc .)


state 207

    (69) TIPO -> interval para int parc FIELDS .

    constraint      reduce using rule 69 (TIPO -> interval para int parc FIELDS .)
    default         reduce using rule 69 (TIPO -> interval para int parc FIELDS .)
    primary         reduce using rule 69 (TIPO -> interval para int parc FIELDS .)
    references      reduce using rule 69 (TIPO -> interval para int parc FIELDS .)
    not             reduce using rule 69 (TIPO -> interval para int parc FIELDS .)
    null            reduce using rule 69 (TIPO -> interval para int parc FIELDS .)
    parc            reduce using rule 69 (TIPO -> interval para int parc FIELDS .)
    coma            reduce using rule 69 (TIPO -> interval para int parc FIELDS .)


state 208

    (29) HERENCIA -> inherits para LEXP parc .

    ptcoma          reduce using rule 29 (HERENCIA -> inherits para LEXP parc .)


state 209

    (26) OPCONST -> foreign key para LEXP parc references . table para LEXP parc

    table           shift and go to state 211


state 210

    (18) OPCOLUMN -> constraint id check para EXP . parc
    (77) EXP -> EXP . mas EXP
    (78) EXP -> EXP . menos EXP
    (79) EXP -> EXP . multiplicacion EXP
    (80) EXP -> EXP . division EXP
    (81) EXP -> EXP . modulo EXP
    (82) EXP -> EXP . elevado EXP
    (83) EXP -> EXP . and EXP
    (84) EXP -> EXP . or EXP
    (85) EXP -> EXP . mayor EXP
    (86) EXP -> EXP . menor EXP
    (87) EXP -> EXP . mayor_igual EXP
    (88) EXP -> EXP . menor_igual EXP
    (89) EXP -> EXP . igual EXP
    (90) EXP -> EXP . diferente1 EXP
    (91) EXP -> EXP . diferente2 EXP
    (92) EXP -> EXP . punto EXP

    parc            shift and go to state 212
    mas             shift and go to state 32
    menos           shift and go to state 33
    multiplicacion  shift and go to state 34
    division        shift and go to state 35
    modulo          shift and go to state 36
    elevado         shift and go to state 37
    and             shift and go to state 38
    or              shift and go to state 39
    mayor           shift and go to state 40
    menor           shift and go to state 41
    mayor_igual     shift and go to state 42
    menor_igual     shift and go to state 43
    igual           shift and go to state 44
    diferente1      shift and go to state 45
    diferente2      shift and go to state 46
    punto           shift and go to state 47


state 211

    (26) OPCONST -> foreign key para LEXP parc references table . para LEXP parc

    para            shift and go to state 213


state 212

    (18) OPCOLUMN -> constraint id check para EXP parc .

    constraint      reduce using rule 18 (OPCOLUMN -> constraint id check para EXP parc .)
    default         reduce using rule 18 (OPCOLUMN -> constraint id check para EXP parc .)
    primary         reduce using rule 18 (OPCOLUMN -> constraint id check para EXP parc .)
    references      reduce using rule 18 (OPCOLUMN -> constraint id check para EXP parc .)
    not             reduce using rule 18 (OPCOLUMN -> constraint id check para EXP parc .)
    null            reduce using rule 18 (OPCOLUMN -> constraint id check para EXP parc .)
    parc            reduce using rule 18 (OPCOLUMN -> constraint id check para EXP parc .)
    coma            reduce using rule 18 (OPCOLUMN -> constraint id check para EXP parc .)


state 213

    (26) OPCONST -> foreign key para LEXP parc references table para . LEXP parc
    (46) LEXP -> . LEXP coma EXP
    (47) LEXP -> . EXP
    (77) EXP -> . EXP mas EXP
    (78) EXP -> . EXP menos EXP
    (79) EXP -> . EXP multiplicacion EXP
    (80) EXP -> . EXP division EXP
    (81) EXP -> . EXP modulo EXP
    (82) EXP -> . EXP elevado EXP
    (83) EXP -> . EXP and EXP
    (84) EXP -> . EXP or EXP
    (85) EXP -> . EXP mayor EXP
    (86) EXP -> . EXP menor EXP
    (87) EXP -> . EXP mayor_igual EXP
    (88) EXP -> . EXP menor_igual EXP
    (89) EXP -> . EXP igual EXP
    (90) EXP -> . EXP diferente1 EXP
    (91) EXP -> . EXP diferente2 EXP
    (92) EXP -> . EXP punto EXP
    (93) EXP -> . mas EXP
    (94) EXP -> . menos EXP
    (95) EXP -> . not EXP
    (96) EXP -> . para EXP parc
    (97) EXP -> . int
    (98) EXP -> . decimales
    (99) EXP -> . cadena
    (100) EXP -> . char_er
    (101) EXP -> . true
    (102) EXP -> . false
    (103) EXP -> . id

    mas             shift and go to state 16
    menos           shift and go to state 17
    not             shift and go to state 18
    para            shift and go to state 19
    int             shift and go to state 20
    decimales       shift and go to state 21
    cadena          shift and go to state 22
    char_er         shift and go to state 23
    true            shift and go to state 24
    false           shift and go to state 25
    id              shift and go to state 26

    LEXP                           shift and go to state 214
    EXP                            shift and go to state 15

state 214

    (26) OPCONST -> foreign key para LEXP parc references table para LEXP . parc
    (46) LEXP -> LEXP . coma EXP

    parc            shift and go to state 215
    coma            shift and go to state 31


state 215

    (26) OPCONST -> foreign key para LEXP parc references table para LEXP parc .

    parc            reduce using rule 26 (OPCONST -> foreign key para LEXP parc references table para LEXP parc .)
    coma            reduce using rule 26 (OPCONST -> foreign key para LEXP parc references table para LEXP parc .)

