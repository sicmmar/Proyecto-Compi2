Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    declare

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> SELECT ptcoma
Rule 5     instruccion -> CREATETABLE
Rule 6     instruccion -> UPDATE ptcoma
Rule 7     instruccion -> DELETE ptcoma
Rule 8     instruccion -> ALTER ptcoma
Rule 9     instruccion -> DROP ptcoma
Rule 10    instruccion -> INSERT ptcoma
Rule 11    instruccion -> CREATETYPE ptcoma
Rule 12    instruccion -> CASE
Rule 13    instruccion -> CREATEDB ptcoma
Rule 14    instruccion -> SHOWDB ptcoma
Rule 15    instruccion -> SHOW ptcoma
Rule 16    instruccion -> use id ptcoma
Rule 17    instruccion -> CREATEINDEX ptcoma
Rule 18    instruccion -> CREATEINDEX WHERE ptcoma
Rule 19    instruccion -> DECLARACIONES ptcoma
Rule 20    instruccion -> ASIGNACION ptcoma
Rule 21    instruccion -> CONDICIONIF ptcoma
Rule 22    instruccion -> PROCEDIMIENTOS
Rule 23    instruccion -> FUNCIONES
Rule 24    RETURN -> return LEXP
Rule 25    RETURN -> return id para LEXP parc
Rule 26    FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP
Rule 27    FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE
Rule 28    RETURNP -> returns TIPO as dolarn
Rule 29    CALLPROCEDURE -> call id para LEXP parc
Rule 30    PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP
Rule 31    PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE
Rule 32    LCONTENIDOP -> LCONTENIDOP CONTENIDOP
Rule 33    LCONTENIDOP -> CONTENIDOP
Rule 34    CONTENIDOP -> as dolarn LISTACONTENIDO dolarn ptcoma
Rule 35    CONTENIDOP -> do dolarn LISTACONTENIDO dolarn ptcoma
Rule 36    CONTENIDOP -> LISTACONTENIDO
Rule 37    LPARAM -> LPARAM coma inout id TIPO
Rule 38    LPARAM -> LPARAM coma id TIPO
Rule 39    LPARAM -> inout id TIPO
Rule 40    LPARAM -> id TIPO
Rule 41    LENGUAJE -> language plpgsql
Rule 42    LENGUAJE -> dolarn language plpgsql
Rule 43    LENGUAJE -> dolarn language plpgsql ptcoma
Rule 44    BEGINEND -> begin LISTACONTENIDO end
Rule 45    CREATEINDEX -> create index id on id para LEXP parc
Rule 46    CREATEINDEX -> create unique index id on id para LEXP parc
Rule 47    CREATEINDEX -> create index id on id using hash para LEXP parc
Rule 48    CREATEINDEX -> create index id on id para id ORDEN parc
Rule 49    CREATEINDEX -> create index id on id para id id ORDEN parc
Rule 50    ORDEN -> asc
Rule 51    ORDEN -> desc
Rule 52    ORDEN -> nulls first
Rule 53    ORDEN -> nulls last
Rule 54    ORDEN -> asc nulls first
Rule 55    ORDEN -> desc nulls last
Rule 56    ORDEN -> desc nulls first
Rule 57    ORDEN -> asc nulls last
Rule 58    ORDEN -> <empty>
Rule 59    DECLARACIONES -> id TIPO not null ASIG
Rule 60    DECLARACIONES -> id TIPO ASIG
Rule 61    DECLARACIONES -> id constant TIPO not null ASIG
Rule 62    DECLARACIONES -> id constant TIPO ASIG
Rule 63    ASIG -> default EXP
Rule 64    ASIG -> dospuntos igual EXP
Rule 65    ASIG -> igual EXP
Rule 66    ASIG -> <empty>
Rule 67    ASIGNACION -> id dospuntos igual EXP
Rule 68    ASIGNACION -> id igual EXP
Rule 69    CONDICIONIF -> if EXP then LISTACONTENIDO ELSEF end if
Rule 70    CONDICIONIF -> if EXP then LISTACONTENIDO LELIF end if
Rule 71    CONDICIONIF -> if EXP then LISTACONTENIDO end if
Rule 72    CONDICIONIF -> if EXP then LISTACONTENIDO LELIF ELSEF end if
Rule 73    LELIF -> LELIF elsif EXP then LISTACONTENIDO
Rule 74    LELIF -> elsif EXP then LISTACONTENIDO
Rule 75    ELSEF -> else LISTACONTENIDO
Rule 76    CASE -> case LEXP LISTAWHEN ELSEF end case
Rule 77    CASE -> case LEXP LISTAWHEN end case
Rule 78    CASE -> case LISTAWHEN ELSE end
Rule 79    CASE -> case LISTAWHEN end
Rule 80    LISTACONTENIDO -> LISTACONTENIDO CONTENIDO
Rule 81    LISTACONTENIDO -> CONTENIDO
Rule 82    CONTENIDO -> ASIGNACION ptcoma
Rule 83    CONTENIDO -> DECLARACIONES ptcoma
Rule 84    CONTENIDO -> CONDICIONIF ptcoma
Rule 85    CONTENIDO -> RAISE ptcoma
Rule 86    CONTENIDO -> BEGINEND ptcoma
Rule 87    CONTENIDO -> CALLPROCEDURE ptcoma
Rule 88    CONTENIDO -> RETURN ptcoma
Rule 89    CONTENIDO -> CASE ptcoma
Rule 90    RAISE -> raise LEVEL FORMAT
Rule 91    RAISE -> raise LEVEL EXP
Rule 92    RAISE -> raise LEVEL
Rule 93    RAISE -> raise
Rule 94    RAISE -> raise LEVEL cadena coma id
Rule 95    LEVEL -> info
Rule 96    LEVEL -> debug
Rule 97    LEVEL -> log
Rule 98    LEVEL -> notice
Rule 99    LEVEL -> warning
Rule 100   LEVEL -> exception
Rule 101   FORMAT -> format para EXP coma LEXP parc
Rule 102   LISTAWHEN -> LISTAWHEN WHEN
Rule 103   LISTAWHEN -> WHEN
Rule 104   WHEN -> when LEXP then LISTACONTENIDO
Rule 105   WHEN -> when LEXP then LEXP
Rule 106   ELSE -> else LEXP
Rule 107   INSERT -> insert into id values para LEXP parc
Rule 108   INSERT -> insert into id para LEXP parc values para LEXP parc
Rule 109   DROP -> drop all para parc
Rule 110   DROP -> drop table id
Rule 111   DROP -> drop databases if exist id
Rule 112   DROP -> drop databases id
Rule 113   ALTER -> alter databases id rename to id
Rule 114   ALTER -> alter databases id owner to id
Rule 115   ALTER -> alter table id LOP
Rule 116   LOP -> LOP coma OP
Rule 117   LOP -> OP
Rule 118   OP -> add column id TIPO
Rule 119   OP -> add check para CONDCHECK parc
Rule 120   OP -> add constraint id check para CONDCHECK parc
Rule 121   OP -> add constraint id unique para LEXP parc
Rule 122   OP -> add unique para LEXP parc
Rule 123   OP -> add foreign key para LEXP parc references id para LEXP parc
Rule 124   OP -> add constraint id foreign key para LEXP parc references id para LEXP parc
Rule 125   OP -> alter column id set not null
Rule 126   OP -> alter column id set null
Rule 127   OP -> drop constraint id
Rule 128   OP -> drop column LEXP
Rule 129   OP -> drop check id
Rule 130   OP -> rename column id to id
Rule 131   OP -> alter column id type TIPO
Rule 132   SHOWDB -> show dbs
Rule 133   SHOW -> show tables para id parc
Rule 134   SHOW -> show collection para parc
Rule 135   CREATEDB -> create RD if not exist id
Rule 136   CREATEDB -> create RD if not exist id OPCCDB
Rule 137   CREATEDB -> create RD id
Rule 138   CREATEDB -> create RD id OPCCDB
Rule 139   OPCCDB -> PROPIETARIO
Rule 140   OPCCDB -> MODO
Rule 141   OPCCDB -> PROPIETARIO MODO
Rule 142   RD -> or replace databases
Rule 143   RD -> databases
Rule 144   PROPIETARIO -> owner igual id
Rule 145   PROPIETARIO -> owner igual cadena
Rule 146   PROPIETARIO -> owner igual cadenaString
Rule 147   PROPIETARIO -> owner id
Rule 148   PROPIETARIO -> owner cadena
Rule 149   PROPIETARIO -> owner cadenaString
Rule 150   MODO -> mode igual int
Rule 151   MODO -> mode int
Rule 152   CREATETABLE -> create table id para LDEF parc ptcoma
Rule 153   CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma
Rule 154   LDEF -> LDEF coma COLDEF
Rule 155   LDEF -> COLDEF
Rule 156   COLDEF -> OPCONST
Rule 157   COLDEF -> constraint id OPCONST
Rule 158   COLDEF -> id TIPO
Rule 159   COLDEF -> id TIPO LOPCOLUMN
Rule 160   LOPCOLUMN -> LOPCOLUMN OPCOLUMN
Rule 161   LOPCOLUMN -> OPCOLUMN
Rule 162   OPCOLUMN -> constraint id unique
Rule 163   OPCOLUMN -> unique
Rule 164   OPCOLUMN -> constraint id check para CONDCHECK parc
Rule 165   OPCOLUMN -> check para CONDCHECK parc
Rule 166   OPCOLUMN -> default EXP
Rule 167   OPCOLUMN -> not null
Rule 168   OPCOLUMN -> null
Rule 169   OPCOLUMN -> primary key
Rule 170   OPCOLUMN -> references id
Rule 171   OPCONST -> primary key para LEXP parc
Rule 172   OPCONST -> foreign key para LEXP parc references id para LEXP parc
Rule 173   OPCONST -> unique para LEXP parc
Rule 174   OPCONST -> check para CONDCHECK parc
Rule 175   CONDCHECK -> EXP mayor EXP
Rule 176   CONDCHECK -> EXP menor EXP
Rule 177   CONDCHECK -> EXP mayor_igual EXP
Rule 178   CONDCHECK -> EXP menor_igual EXP
Rule 179   CONDCHECK -> EXP igual EXP
Rule 180   CONDCHECK -> EXP diferente1 EXP
Rule 181   CONDCHECK -> EXP diferente2 EXP
Rule 182   HERENCIA -> inherits para id parc
Rule 183   CREATETYPE -> create type id as enum para LEXP parc
Rule 184   SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
Rule 185   SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
Rule 186   SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
Rule 187   LIMIT -> limit int
Rule 188   LIMIT -> limit all
Rule 189   LIMIT -> offset int
Rule 190   LIMIT -> limit int offset int
Rule 191   LIMIT -> offset int limit int
Rule 192   LIMIT -> limit all offset int
Rule 193   LIMIT -> offset int limit all
Rule 194   LIMIT -> <empty>
Rule 195   WHERE -> where EXP
Rule 196   WHERE -> where EXIST
Rule 197   WHERE -> <empty>
Rule 198   COMBINING -> union EXP
Rule 199   COMBINING -> union all EXP
Rule 200   COMBINING -> intersect EXP
Rule 201   COMBINING -> except EXP
Rule 202   COMBINING -> <empty>
Rule 203   GROUP -> group by LEXP
Rule 204   GROUP -> <empty>
Rule 205   HAVING -> having EXP
Rule 206   HAVING -> <empty>
Rule 207   ORDER -> order by LEXP ORD
Rule 208   ORDER -> order by LEXP
Rule 209   ORDER -> <empty>
Rule 210   ORD -> asc
Rule 211   ORD -> desc
Rule 212   UPDATE -> update id set LCAMPOS WHERE
Rule 213   LCAMPOS -> LCAMPOS coma id igual EXP
Rule 214   LCAMPOS -> id igual EXP
Rule 215   DELETE -> delete r_from id WHERE
Rule 216   EXIST -> exist para SELECT parc
Rule 217   EXIST -> not exist para SELECT parc
Rule 218   LEXP -> LEXP coma EXP
Rule 219   LEXP -> EXP
Rule 220   TIPO -> interval cadena
Rule 221   TIPO -> decimal para int coma int parc
Rule 222   TIPO -> decimal para int parc
Rule 223   TIPO -> decimal
Rule 224   TIPO -> numeric para int coma int parc
Rule 225   TIPO -> numeric para int parc
Rule 226   TIPO -> numeric
Rule 227   TIPO -> varchar para int parc
Rule 228   TIPO -> timestamp para int parc
Rule 229   TIPO -> character para int parc
Rule 230   TIPO -> interval para int parc
Rule 231   TIPO -> char para int parc
Rule 232   TIPO -> time para int parc
Rule 233   TIPO -> character varying para int parc
Rule 234   TIPO -> id modulo rowtype
Rule 235   TIPO -> idPunto modulo type
Rule 236   TIPO -> timestamp para int parc without time zone
Rule 237   TIPO -> timestamp para int parc with time zone
Rule 238   TIPO -> time para int parc without time zone
Rule 239   TIPO -> time para int parc with time zone
Rule 240   TIPO -> interval para int parc cadena
Rule 241   TIPO -> smallint
Rule 242   TIPO -> integer
Rule 243   TIPO -> r_int
Rule 244   TIPO -> bigint
Rule 245   TIPO -> real
Rule 246   TIPO -> double precision
Rule 247   TIPO -> money
Rule 248   TIPO -> text
Rule 249   TIPO -> timestamp
Rule 250   TIPO -> date
Rule 251   TIPO -> time
Rule 252   TIPO -> interval
Rule 253   TIPO -> boolean
Rule 254   TIPO -> record
Rule 255   TIPO -> varchar
Rule 256   TIPO -> timestamp without time zone
Rule 257   TIPO -> timestamp with time zone
Rule 258   TIPO -> time without time zone
Rule 259   TIPO -> time with time zone
Rule 260   TIPO -> id
Rule 261   FIELDS -> year
Rule 262   FIELDS -> month
Rule 263   FIELDS -> day
Rule 264   FIELDS -> hour
Rule 265   FIELDS -> minute
Rule 266   FIELDS -> second
Rule 267   EXP -> EXP mas EXP
Rule 268   EXP -> EXP menos EXP
Rule 269   EXP -> EXP multiplicacion EXP
Rule 270   EXP -> EXP division EXP
Rule 271   EXP -> EXP modulo EXP
Rule 272   EXP -> EXP elevado EXP
Rule 273   EXP -> EXP and EXP
Rule 274   EXP -> EXP or EXP
Rule 275   EXP -> EXP mayor EXP
Rule 276   EXP -> EXP menor EXP
Rule 277   EXP -> EXP mayor_igual EXP
Rule 278   EXP -> EXP menor_igual EXP
Rule 279   EXP -> EXP igual EXP
Rule 280   EXP -> EXP diferente1 EXP
Rule 281   EXP -> EXP diferente2 EXP
Rule 282   EXP -> EXP between EXP
Rule 283   EXP -> EXP is not null
Rule 284   EXP -> EXP is null
Rule 285   EXP -> EXP isnull
Rule 286   EXP -> EXP notnull
Rule 287   EXP -> EXP is true
Rule 288   EXP -> EXP is not true
Rule 289   EXP -> EXP is false
Rule 290   EXP -> EXP is not false
Rule 291   EXP -> EXP is unknown
Rule 292   EXP -> EXP is not unknown
Rule 293   EXP -> EXP as cadenaString
Rule 294   EXP -> EXP cadenaString
Rule 295   EXP -> EXP as id
Rule 296   EXP -> EXP id
Rule 297   EXP -> EXP as cadena
Rule 298   EXP -> EXP cadena
Rule 299   EXP -> mas EXP
Rule 300   EXP -> menos EXP
Rule 301   EXP -> not EXP
Rule 302   EXP -> EXP in para EXP parc
Rule 303   EXP -> EXP not in para EXP parc
Rule 304   EXP -> EXP not between EXP
Rule 305   EXP -> EXP between symetric EXP
Rule 306   EXP -> EXP not between symetric EXP
Rule 307   EXP -> EXP is distinct r_from EXP
Rule 308   EXP -> EXP is not distinct r_from EXP
Rule 309   EXP -> EXP like cadena
Rule 310   EXP -> EXP not like cadena
Rule 311   EXP -> SELECT
Rule 312   EXP -> para EXP parc
Rule 313   EXP -> CASE
Rule 314   EXP -> id para LEXP parc
Rule 315   EXP -> id para parc
Rule 316   EXP -> any para LEXP parc
Rule 317   EXP -> all para LEXP parc
Rule 318   EXP -> some para LEXP parc
Rule 319   EXP -> extract para FIELDS r_from timestamp cadena parc
Rule 320   EXP -> int
Rule 321   EXP -> decimales
Rule 322   EXP -> cadena
Rule 323   EXP -> cadenaString
Rule 324   EXP -> true
Rule 325   EXP -> false
Rule 326   EXP -> id
Rule 327   EXP -> multiplicacion
Rule 328   EXP -> null
Rule 329   EXP -> current_time
Rule 330   EXP -> current_date
Rule 331   EXP -> timestamp cadena
Rule 332   EXP -> interval cadena
Rule 333   EXP -> cadena as TIPO
Rule 334   EXP -> default
Rule 335   EXP -> idPunto

Terminals, with rules where they appear

add                  : 118 119 120 121 122 123 124
all                  : 109 188 192 193 199 317
alter                : 113 114 115 125 126 131
and                  : 273
any                  : 316
as                   : 28 34 183 293 295 297 333
asc                  : 50 54 57 210
begin                : 44
between              : 282 304 305 306
bigint               : 244
boolean              : 253
by                   : 203 207 208
cadena               : 94 145 148 220 240 297 298 309 310 319 322 331 332 333
cadenaString         : 146 149 293 294 323
call                 : 29
case                 : 76 76 77 77 78 79
char                 : 231
character            : 229 233
check                : 119 120 129 164 165 174
collection           : 134
column               : 118 125 126 128 130 131
coma                 : 37 38 94 101 116 154 213 218 221 224
constant             : 61 62
constraint           : 120 121 124 127 157 162 164
create               : 26 27 30 31 45 46 47 48 49 135 136 137 138 152 153 183
current_date         : 330
current_time         : 329
databases            : 111 112 113 114 142 143
date                 : 250
day                  : 263
dbs                  : 132
debug                : 96
decimal              : 221 222 223
decimales            : 321
declare              : 
default              : 63 166 334
delete               : 215
desc                 : 51 55 56 211
diferente1           : 180 280
diferente2           : 181 281
distinct             : 184 307 308
division             : 270
do                   : 35
dolarn               : 28 34 34 35 35 42 43
dospuntos            : 64 67
double               : 246
drop                 : 109 110 111 112 127 128 129
elevado              : 272
else                 : 75 106
elsif                : 73 74
end                  : 44 69 70 71 72 76 77 78 79
enum                 : 183
error                : 
except               : 201
exception            : 100
exist                : 111 135 136 216 217
extract              : 319
false                : 289 290 325
first                : 52 54 56
foreign              : 123 124 172
format               : 101
function             : 26 27
group                : 203
hash                 : 47
having               : 205
hour                 : 264
id                   : 16 25 26 27 29 30 31 37 38 39 40 45 45 46 46 47 47 48 48 48 49 49 49 49 59 60 61 62 67 68 94 107 108 110 111 112 113 113 114 114 115 118 120 121 123 124 124 125 126 127 129 130 130 131 133 135 136 137 138 144 147 152 153 157 158 159 162 164 170 172 182 183 212 213 214 215 234 260 295 296 314 315 326
idPunto              : 235 335
if                   : 69 69 70 70 71 71 72 72 111 135 136
igual                : 64 65 67 68 144 145 146 150 179 213 214 279
in                   : 302 303
index                : 45 46 47 48 49
info                 : 95
inherits             : 182
inout                : 37 39
insert               : 107 108
int                  : 150 151 187 189 190 190 191 191 192 193 221 221 222 224 224 225 227 228 229 230 231 232 233 236 237 238 239 240 320
integer              : 242
intersect            : 200
interval             : 220 230 240 252 332
into                 : 107 108
is                   : 283 284 287 288 289 290 291 292 307 308
isnull               : 285
key                  : 123 124 169 171 172
language             : 41 42 43
last                 : 53 55 57
like                 : 309 310
limit                : 187 188 190 191 192 193
log                  : 97
mas                  : 267 299
mayor                : 175 275
mayor_igual          : 177 277
menor                : 176 276
menor_igual          : 178 278
menos                : 268 300
minute               : 265
mode                 : 150 151
modulo               : 234 235 271
money                : 247
month                : 262
multiplicacion       : 269 327
not                  : 59 61 125 135 136 167 217 283 288 290 292 301 303 304 306 308 310
notice               : 98
notnull              : 286
null                 : 59 61 125 126 167 168 283 284 328
nulls                : 52 53 54 55 56 57
numeric              : 224 225 226
offset               : 189 190 191 192 193
on                   : 45 46 47 48 49
or                   : 142 274
order                : 207 208
owner                : 114 144 145 146 147 148 149
para                 : 25 26 27 29 30 31 45 46 47 48 49 101 107 108 108 109 119 120 121 122 123 123 124 124 133 134 152 153 164 165 171 172 172 173 174 182 183 216 217 221 222 224 225 227 228 229 230 231 232 233 236 237 238 239 240 302 303 312 314 315 316 317 318 319
parc                 : 25 26 27 29 30 31 45 46 47 48 49 101 107 108 108 109 119 120 121 122 123 123 124 124 133 134 152 153 164 165 171 172 172 173 174 182 183 216 217 221 222 224 225 227 228 229 230 231 232 233 236 237 238 239 240 302 303 312 314 315 316 317 318 319
plpgsql              : 41 42 43
precision            : 246
primary              : 169 171
procedure            : 30 31
ptcoma               : 4 6 7 8 9 10 11 13 14 15 16 17 18 19 20 21 34 35 43 82 83 84 85 86 87 88 89 152 153
r_from               : 184 185 215 307 308 319
r_int                : 243
raise                : 90 91 92 93 94
real                 : 245
record               : 254
references           : 123 124 170 172
rename               : 113 130
replace              : 142
return               : 24 25
returns              : 28
rowtype              : 234
second               : 266
select               : 184 185 186
set                  : 125 126 212
show                 : 132 133 134
smallint             : 241
some                 : 318
symetric             : 305 306
table                : 110 115 152 153
tables               : 133
text                 : 248
then                 : 69 70 71 72 73 74 104 105
time                 : 232 236 237 238 238 239 239 251 256 257 258 258 259 259
timestamp            : 228 236 237 249 256 257 319 331
to                   : 113 114 130
true                 : 287 288 324
type                 : 131 183 235
union                : 198 199
unique               : 46 121 122 162 163 173
unknown              : 291 292
update               : 212
use                  : 16
using                : 47
values               : 107 108
varchar              : 227 255
varying              : 233
warning              : 99
when                 : 104 105
where                : 195 196
with                 : 237 239 257 259
without              : 236 238 256 258
year                 : 261
zone                 : 236 237 238 239 256 257 258 259

Nonterminals, with rules where they appear

ALTER                : 8
ASIG                 : 59 60 61 62
ASIGNACION           : 20 82
BEGINEND             : 86
CALLPROCEDURE        : 87
CASE                 : 12 89 313
COLDEF               : 154 155
COMBINING            : 184 185 186
CONDCHECK            : 119 120 164 165 174
CONDICIONIF          : 21 84
CONTENIDO            : 80 81
CONTENIDOP           : 32 33
CREATEDB             : 13
CREATEINDEX          : 17 18
CREATETABLE          : 5
CREATETYPE           : 11
DECLARACIONES        : 19 83
DELETE               : 7
DROP                 : 9
ELSE                 : 78
ELSEF                : 69 72 76
EXIST                : 196
EXP                  : 63 64 65 67 68 69 70 71 72 73 74 91 101 166 175 175 176 176 177 177 178 178 179 179 180 180 181 181 195 198 199 200 201 205 213 214 218 219 267 267 268 268 269 269 270 270 271 271 272 272 273 273 274 274 275 275 276 276 277 277 278 278 279 279 280 280 281 281 282 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 302 303 303 304 304 305 305 306 306 307 307 308 308 309 310 312
FIELDS               : 319
FORMAT               : 90
FUNCIONES            : 23
GROUP                : 184 185 186
HAVING               : 184 185 186
HERENCIA             : 153
INSERT               : 10
LCAMPOS              : 212 213
LCONTENIDOP          : 26 27 30 31 32
LDEF                 : 152 153 154
LELIF                : 70 72 73
LENGUAJE             : 26 27 30 31
LEVEL                : 90 91 92 94
LEXP                 : 24 25 29 45 46 47 76 77 101 104 105 105 106 107 108 108 121 122 123 123 124 124 128 171 172 172 173 183 184 184 185 185 186 203 207 208 218 314 316 317 318
LIMIT                : 184 185 186
LISTACONTENIDO       : 34 35 36 44 69 70 71 72 73 74 75 80 104
LISTAWHEN            : 76 77 78 79 102
LOP                  : 115 116
LOPCOLUMN            : 159 160
LPARAM               : 26 27 30 31 37 38
MODO                 : 140 141
OP                   : 116 117
OPCCDB               : 136 138
OPCOLUMN             : 160 161
OPCONST              : 156 157
ORD                  : 207
ORDEN                : 48 49
ORDER                : 184 185 186
PROCEDIMIENTOS       : 22
PROPIETARIO          : 139 141
RAISE                : 85
RD                   : 135 136 137 138
RETURN               : 88
RETURNP              : 26 27
SELECT               : 4 216 217 311
SHOW                 : 15
SHOWDB               : 14
TIPO                 : 28 37 38 39 40 59 60 61 62 118 131 158 159 333
UPDATE               : 6
WHEN                 : 102 103
WHERE                : 18 184 185 186 212 215
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . SELECT ptcoma
    (5) instruccion -> . CREATETABLE
    (6) instruccion -> . UPDATE ptcoma
    (7) instruccion -> . DELETE ptcoma
    (8) instruccion -> . ALTER ptcoma
    (9) instruccion -> . DROP ptcoma
    (10) instruccion -> . INSERT ptcoma
    (11) instruccion -> . CREATETYPE ptcoma
    (12) instruccion -> . CASE
    (13) instruccion -> . CREATEDB ptcoma
    (14) instruccion -> . SHOWDB ptcoma
    (15) instruccion -> . SHOW ptcoma
    (16) instruccion -> . use id ptcoma
    (17) instruccion -> . CREATEINDEX ptcoma
    (18) instruccion -> . CREATEINDEX WHERE ptcoma
    (19) instruccion -> . DECLARACIONES ptcoma
    (20) instruccion -> . ASIGNACION ptcoma
    (21) instruccion -> . CONDICIONIF ptcoma
    (22) instruccion -> . PROCEDIMIENTOS
    (23) instruccion -> . FUNCIONES
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (152) CREATETABLE -> . create table id para LDEF parc ptcoma
    (153) CREATETABLE -> . create table id para LDEF parc HERENCIA ptcoma
    (212) UPDATE -> . update id set LCAMPOS WHERE
    (215) DELETE -> . delete r_from id WHERE
    (113) ALTER -> . alter databases id rename to id
    (114) ALTER -> . alter databases id owner to id
    (115) ALTER -> . alter table id LOP
    (109) DROP -> . drop all para parc
    (110) DROP -> . drop table id
    (111) DROP -> . drop databases if exist id
    (112) DROP -> . drop databases id
    (107) INSERT -> . insert into id values para LEXP parc
    (108) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (183) CREATETYPE -> . create type id as enum para LEXP parc
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end
    (135) CREATEDB -> . create RD if not exist id
    (136) CREATEDB -> . create RD if not exist id OPCCDB
    (137) CREATEDB -> . create RD id
    (138) CREATEDB -> . create RD id OPCCDB
    (132) SHOWDB -> . show dbs
    (133) SHOW -> . show tables para id parc
    (134) SHOW -> . show collection para parc
    (45) CREATEINDEX -> . create index id on id para LEXP parc
    (46) CREATEINDEX -> . create unique index id on id para LEXP parc
    (47) CREATEINDEX -> . create index id on id using hash para LEXP parc
    (48) CREATEINDEX -> . create index id on id para id ORDEN parc
    (49) CREATEINDEX -> . create index id on id para id id ORDEN parc
    (59) DECLARACIONES -> . id TIPO not null ASIG
    (60) DECLARACIONES -> . id TIPO ASIG
    (61) DECLARACIONES -> . id constant TIPO not null ASIG
    (62) DECLARACIONES -> . id constant TIPO ASIG
    (67) ASIGNACION -> . id dospuntos igual EXP
    (68) ASIGNACION -> . id igual EXP
    (69) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (70) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (71) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (72) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (30) PROCEDIMIENTOS -> . create procedure id para LPARAM parc LENGUAJE LCONTENIDOP
    (31) PROCEDIMIENTOS -> . create procedure id para LPARAM parc LCONTENIDOP LENGUAJE
    (26) FUNCIONES -> . create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP
    (27) FUNCIONES -> . create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE

    use             shift and go to state 16
    select          shift and go to state 24
    create          shift and go to state 25
    update          shift and go to state 26
    delete          shift and go to state 27
    alter           shift and go to state 28
    drop            shift and go to state 29
    insert          shift and go to state 31
    case            shift and go to state 32
    show            shift and go to state 33
    id              shift and go to state 17
    if              shift and go to state 30

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    SELECT                         shift and go to state 4
    CREATETABLE                    shift and go to state 5
    UPDATE                         shift and go to state 6
    DELETE                         shift and go to state 7
    ALTER                          shift and go to state 8
    DROP                           shift and go to state 9
    INSERT                         shift and go to state 10
    CREATETYPE                     shift and go to state 11
    CASE                           shift and go to state 12
    CREATEDB                       shift and go to state 13
    SHOWDB                         shift and go to state 14
    SHOW                           shift and go to state 15
    CREATEINDEX                    shift and go to state 18
    DECLARACIONES                  shift and go to state 19
    ASIGNACION                     shift and go to state 20
    CONDICIONIF                    shift and go to state 21
    PROCEDIMIENTOS                 shift and go to state 22
    FUNCIONES                      shift and go to state 23

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . SELECT ptcoma
    (5) instruccion -> . CREATETABLE
    (6) instruccion -> . UPDATE ptcoma
    (7) instruccion -> . DELETE ptcoma
    (8) instruccion -> . ALTER ptcoma
    (9) instruccion -> . DROP ptcoma
    (10) instruccion -> . INSERT ptcoma
    (11) instruccion -> . CREATETYPE ptcoma
    (12) instruccion -> . CASE
    (13) instruccion -> . CREATEDB ptcoma
    (14) instruccion -> . SHOWDB ptcoma
    (15) instruccion -> . SHOW ptcoma
    (16) instruccion -> . use id ptcoma
    (17) instruccion -> . CREATEINDEX ptcoma
    (18) instruccion -> . CREATEINDEX WHERE ptcoma
    (19) instruccion -> . DECLARACIONES ptcoma
    (20) instruccion -> . ASIGNACION ptcoma
    (21) instruccion -> . CONDICIONIF ptcoma
    (22) instruccion -> . PROCEDIMIENTOS
    (23) instruccion -> . FUNCIONES
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (152) CREATETABLE -> . create table id para LDEF parc ptcoma
    (153) CREATETABLE -> . create table id para LDEF parc HERENCIA ptcoma
    (212) UPDATE -> . update id set LCAMPOS WHERE
    (215) DELETE -> . delete r_from id WHERE
    (113) ALTER -> . alter databases id rename to id
    (114) ALTER -> . alter databases id owner to id
    (115) ALTER -> . alter table id LOP
    (109) DROP -> . drop all para parc
    (110) DROP -> . drop table id
    (111) DROP -> . drop databases if exist id
    (112) DROP -> . drop databases id
    (107) INSERT -> . insert into id values para LEXP parc
    (108) INSERT -> . insert into id para LEXP parc values para LEXP parc
    (183) CREATETYPE -> . create type id as enum para LEXP parc
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end
    (135) CREATEDB -> . create RD if not exist id
    (136) CREATEDB -> . create RD if not exist id OPCCDB
    (137) CREATEDB -> . create RD id
    (138) CREATEDB -> . create RD id OPCCDB
    (132) SHOWDB -> . show dbs
    (133) SHOW -> . show tables para id parc
    (134) SHOW -> . show collection para parc
    (45) CREATEINDEX -> . create index id on id para LEXP parc
    (46) CREATEINDEX -> . create unique index id on id para LEXP parc
    (47) CREATEINDEX -> . create index id on id using hash para LEXP parc
    (48) CREATEINDEX -> . create index id on id para id ORDEN parc
    (49) CREATEINDEX -> . create index id on id para id id ORDEN parc
    (59) DECLARACIONES -> . id TIPO not null ASIG
    (60) DECLARACIONES -> . id TIPO ASIG
    (61) DECLARACIONES -> . id constant TIPO not null ASIG
    (62) DECLARACIONES -> . id constant TIPO ASIG
    (67) ASIGNACION -> . id dospuntos igual EXP
    (68) ASIGNACION -> . id igual EXP
    (69) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (70) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (71) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (72) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (30) PROCEDIMIENTOS -> . create procedure id para LPARAM parc LENGUAJE LCONTENIDOP
    (31) PROCEDIMIENTOS -> . create procedure id para LPARAM parc LCONTENIDOP LENGUAJE
    (26) FUNCIONES -> . create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP
    (27) FUNCIONES -> . create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE

    $end            reduce using rule 1 (init -> instrucciones .)
    use             shift and go to state 16
    select          shift and go to state 24
    create          shift and go to state 25
    update          shift and go to state 26
    delete          shift and go to state 27
    alter           shift and go to state 28
    drop            shift and go to state 29
    insert          shift and go to state 31
    case            shift and go to state 32
    show            shift and go to state 33
    id              shift and go to state 17
    if              shift and go to state 30

    instruccion                    shift and go to state 34
    SELECT                         shift and go to state 4
    CREATETABLE                    shift and go to state 5
    UPDATE                         shift and go to state 6
    DELETE                         shift and go to state 7
    ALTER                          shift and go to state 8
    DROP                           shift and go to state 9
    INSERT                         shift and go to state 10
    CREATETYPE                     shift and go to state 11
    CASE                           shift and go to state 12
    CREATEDB                       shift and go to state 13
    SHOWDB                         shift and go to state 14
    SHOW                           shift and go to state 15
    CREATEINDEX                    shift and go to state 18
    DECLARACIONES                  shift and go to state 19
    ASIGNACION                     shift and go to state 20
    CONDICIONIF                    shift and go to state 21
    PROCEDIMIENTOS                 shift and go to state 22
    FUNCIONES                      shift and go to state 23

state 3

    (3) instrucciones -> instruccion .

    use             reduce using rule 3 (instrucciones -> instruccion .)
    select          reduce using rule 3 (instrucciones -> instruccion .)
    create          reduce using rule 3 (instrucciones -> instruccion .)
    update          reduce using rule 3 (instrucciones -> instruccion .)
    delete          reduce using rule 3 (instrucciones -> instruccion .)
    alter           reduce using rule 3 (instrucciones -> instruccion .)
    drop            reduce using rule 3 (instrucciones -> instruccion .)
    insert          reduce using rule 3 (instrucciones -> instruccion .)
    case            reduce using rule 3 (instrucciones -> instruccion .)
    show            reduce using rule 3 (instrucciones -> instruccion .)
    id              reduce using rule 3 (instrucciones -> instruccion .)
    if              reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> SELECT . ptcoma

    ptcoma          shift and go to state 35


state 5

    (5) instruccion -> CREATETABLE .

    use             reduce using rule 5 (instruccion -> CREATETABLE .)
    select          reduce using rule 5 (instruccion -> CREATETABLE .)
    create          reduce using rule 5 (instruccion -> CREATETABLE .)
    update          reduce using rule 5 (instruccion -> CREATETABLE .)
    delete          reduce using rule 5 (instruccion -> CREATETABLE .)
    alter           reduce using rule 5 (instruccion -> CREATETABLE .)
    drop            reduce using rule 5 (instruccion -> CREATETABLE .)
    insert          reduce using rule 5 (instruccion -> CREATETABLE .)
    case            reduce using rule 5 (instruccion -> CREATETABLE .)
    show            reduce using rule 5 (instruccion -> CREATETABLE .)
    id              reduce using rule 5 (instruccion -> CREATETABLE .)
    if              reduce using rule 5 (instruccion -> CREATETABLE .)
    $end            reduce using rule 5 (instruccion -> CREATETABLE .)


state 6

    (6) instruccion -> UPDATE . ptcoma

    ptcoma          shift and go to state 36


state 7

    (7) instruccion -> DELETE . ptcoma

    ptcoma          shift and go to state 37


state 8

    (8) instruccion -> ALTER . ptcoma

    ptcoma          shift and go to state 38


state 9

    (9) instruccion -> DROP . ptcoma

    ptcoma          shift and go to state 39


state 10

    (10) instruccion -> INSERT . ptcoma

    ptcoma          shift and go to state 40


state 11

    (11) instruccion -> CREATETYPE . ptcoma

    ptcoma          shift and go to state 41


state 12

    (12) instruccion -> CASE .

    use             reduce using rule 12 (instruccion -> CASE .)
    select          reduce using rule 12 (instruccion -> CASE .)
    create          reduce using rule 12 (instruccion -> CASE .)
    update          reduce using rule 12 (instruccion -> CASE .)
    delete          reduce using rule 12 (instruccion -> CASE .)
    alter           reduce using rule 12 (instruccion -> CASE .)
    drop            reduce using rule 12 (instruccion -> CASE .)
    insert          reduce using rule 12 (instruccion -> CASE .)
    case            reduce using rule 12 (instruccion -> CASE .)
    show            reduce using rule 12 (instruccion -> CASE .)
    id              reduce using rule 12 (instruccion -> CASE .)
    if              reduce using rule 12 (instruccion -> CASE .)
    $end            reduce using rule 12 (instruccion -> CASE .)


state 13

    (13) instruccion -> CREATEDB . ptcoma

    ptcoma          shift and go to state 42


state 14

    (14) instruccion -> SHOWDB . ptcoma

    ptcoma          shift and go to state 43


state 15

    (15) instruccion -> SHOW . ptcoma

    ptcoma          shift and go to state 44


state 16

    (16) instruccion -> use . id ptcoma

    id              shift and go to state 45


state 17

    (59) DECLARACIONES -> id . TIPO not null ASIG
    (60) DECLARACIONES -> id . TIPO ASIG
    (61) DECLARACIONES -> id . constant TIPO not null ASIG
    (62) DECLARACIONES -> id . constant TIPO ASIG
    (67) ASIGNACION -> id . dospuntos igual EXP
    (68) ASIGNACION -> id . igual EXP
    (220) TIPO -> . interval cadena
    (221) TIPO -> . decimal para int coma int parc
    (222) TIPO -> . decimal para int parc
    (223) TIPO -> . decimal
    (224) TIPO -> . numeric para int coma int parc
    (225) TIPO -> . numeric para int parc
    (226) TIPO -> . numeric
    (227) TIPO -> . varchar para int parc
    (228) TIPO -> . timestamp para int parc
    (229) TIPO -> . character para int parc
    (230) TIPO -> . interval para int parc
    (231) TIPO -> . char para int parc
    (232) TIPO -> . time para int parc
    (233) TIPO -> . character varying para int parc
    (234) TIPO -> . id modulo rowtype
    (235) TIPO -> . idPunto modulo type
    (236) TIPO -> . timestamp para int parc without time zone
    (237) TIPO -> . timestamp para int parc with time zone
    (238) TIPO -> . time para int parc without time zone
    (239) TIPO -> . time para int parc with time zone
    (240) TIPO -> . interval para int parc cadena
    (241) TIPO -> . smallint
    (242) TIPO -> . integer
    (243) TIPO -> . r_int
    (244) TIPO -> . bigint
    (245) TIPO -> . real
    (246) TIPO -> . double precision
    (247) TIPO -> . money
    (248) TIPO -> . text
    (249) TIPO -> . timestamp
    (250) TIPO -> . date
    (251) TIPO -> . time
    (252) TIPO -> . interval
    (253) TIPO -> . boolean
    (254) TIPO -> . record
    (255) TIPO -> . varchar
    (256) TIPO -> . timestamp without time zone
    (257) TIPO -> . timestamp with time zone
    (258) TIPO -> . time without time zone
    (259) TIPO -> . time with time zone
    (260) TIPO -> . id

    constant        shift and go to state 48
    dospuntos       shift and go to state 49
    igual           shift and go to state 50
    interval        shift and go to state 51
    decimal         shift and go to state 52
    numeric         shift and go to state 53
    varchar         shift and go to state 54
    timestamp       shift and go to state 55
    character       shift and go to state 56
    char            shift and go to state 57
    time            shift and go to state 58
    id              shift and go to state 46
    idPunto         shift and go to state 59
    smallint        shift and go to state 60
    integer         shift and go to state 61
    r_int           shift and go to state 62
    bigint          shift and go to state 63
    real            shift and go to state 64
    double          shift and go to state 65
    money           shift and go to state 66
    text            shift and go to state 67
    date            shift and go to state 68
    boolean         shift and go to state 69
    record          shift and go to state 70

    TIPO                           shift and go to state 47

state 18

    (17) instruccion -> CREATEINDEX . ptcoma
    (18) instruccion -> CREATEINDEX . WHERE ptcoma
    (195) WHERE -> . where EXP
    (196) WHERE -> . where EXIST
    (197) WHERE -> .

  ! shift/reduce conflict for ptcoma resolved as shift
    ptcoma          shift and go to state 71
    where           shift and go to state 73

  ! ptcoma          [ reduce using rule 197 (WHERE -> .) ]

    WHERE                          shift and go to state 72

state 19

    (19) instruccion -> DECLARACIONES . ptcoma

    ptcoma          shift and go to state 74


state 20

    (20) instruccion -> ASIGNACION . ptcoma

    ptcoma          shift and go to state 75


state 21

    (21) instruccion -> CONDICIONIF . ptcoma

    ptcoma          shift and go to state 76


state 22

    (22) instruccion -> PROCEDIMIENTOS .

    use             reduce using rule 22 (instruccion -> PROCEDIMIENTOS .)
    select          reduce using rule 22 (instruccion -> PROCEDIMIENTOS .)
    create          reduce using rule 22 (instruccion -> PROCEDIMIENTOS .)
    update          reduce using rule 22 (instruccion -> PROCEDIMIENTOS .)
    delete          reduce using rule 22 (instruccion -> PROCEDIMIENTOS .)
    alter           reduce using rule 22 (instruccion -> PROCEDIMIENTOS .)
    drop            reduce using rule 22 (instruccion -> PROCEDIMIENTOS .)
    insert          reduce using rule 22 (instruccion -> PROCEDIMIENTOS .)
    case            reduce using rule 22 (instruccion -> PROCEDIMIENTOS .)
    show            reduce using rule 22 (instruccion -> PROCEDIMIENTOS .)
    id              reduce using rule 22 (instruccion -> PROCEDIMIENTOS .)
    if              reduce using rule 22 (instruccion -> PROCEDIMIENTOS .)
    $end            reduce using rule 22 (instruccion -> PROCEDIMIENTOS .)


state 23

    (23) instruccion -> FUNCIONES .

    use             reduce using rule 23 (instruccion -> FUNCIONES .)
    select          reduce using rule 23 (instruccion -> FUNCIONES .)
    create          reduce using rule 23 (instruccion -> FUNCIONES .)
    update          reduce using rule 23 (instruccion -> FUNCIONES .)
    delete          reduce using rule 23 (instruccion -> FUNCIONES .)
    alter           reduce using rule 23 (instruccion -> FUNCIONES .)
    drop            reduce using rule 23 (instruccion -> FUNCIONES .)
    insert          reduce using rule 23 (instruccion -> FUNCIONES .)
    case            reduce using rule 23 (instruccion -> FUNCIONES .)
    show            reduce using rule 23 (instruccion -> FUNCIONES .)
    id              reduce using rule 23 (instruccion -> FUNCIONES .)
    if              reduce using rule 23 (instruccion -> FUNCIONES .)
    $end            reduce using rule 23 (instruccion -> FUNCIONES .)


state 24

    (184) SELECT -> select . distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> select . LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> select . LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    distinct        shift and go to state 77
    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 78
    EXP                            shift and go to state 79
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 25

    (152) CREATETABLE -> create . table id para LDEF parc ptcoma
    (153) CREATETABLE -> create . table id para LDEF parc HERENCIA ptcoma
    (183) CREATETYPE -> create . type id as enum para LEXP parc
    (135) CREATEDB -> create . RD if not exist id
    (136) CREATEDB -> create . RD if not exist id OPCCDB
    (137) CREATEDB -> create . RD id
    (138) CREATEDB -> create . RD id OPCCDB
    (45) CREATEINDEX -> create . index id on id para LEXP parc
    (46) CREATEINDEX -> create . unique index id on id para LEXP parc
    (47) CREATEINDEX -> create . index id on id using hash para LEXP parc
    (48) CREATEINDEX -> create . index id on id para id ORDEN parc
    (49) CREATEINDEX -> create . index id on id para id id ORDEN parc
    (30) PROCEDIMIENTOS -> create . procedure id para LPARAM parc LENGUAJE LCONTENIDOP
    (31) PROCEDIMIENTOS -> create . procedure id para LPARAM parc LCONTENIDOP LENGUAJE
    (26) FUNCIONES -> create . function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP
    (27) FUNCIONES -> create . function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE
    (142) RD -> . or replace databases
    (143) RD -> . databases

    table           shift and go to state 105
    type            shift and go to state 106
    index           shift and go to state 108
    unique          shift and go to state 109
    procedure       shift and go to state 110
    function        shift and go to state 111
    or              shift and go to state 112
    databases       shift and go to state 113

    RD                             shift and go to state 107

state 26

    (212) UPDATE -> update . id set LCAMPOS WHERE

    id              shift and go to state 114


state 27

    (215) DELETE -> delete . r_from id WHERE

    r_from          shift and go to state 115


state 28

    (113) ALTER -> alter . databases id rename to id
    (114) ALTER -> alter . databases id owner to id
    (115) ALTER -> alter . table id LOP

    databases       shift and go to state 116
    table           shift and go to state 117


state 29

    (109) DROP -> drop . all para parc
    (110) DROP -> drop . table id
    (111) DROP -> drop . databases if exist id
    (112) DROP -> drop . databases id

    all             shift and go to state 118
    table           shift and go to state 119
    databases       shift and go to state 120


state 30

    (69) CONDICIONIF -> if . EXP then LISTACONTENIDO ELSEF end if
    (70) CONDICIONIF -> if . EXP then LISTACONTENIDO LELIF end if
    (71) CONDICIONIF -> if . EXP then LISTACONTENIDO end if
    (72) CONDICIONIF -> if . EXP then LISTACONTENIDO LELIF ELSEF end if
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 121
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 31

    (107) INSERT -> insert . into id values para LEXP parc
    (108) INSERT -> insert . into id para LEXP parc values para LEXP parc

    into            shift and go to state 122


state 32

    (76) CASE -> case . LEXP LISTAWHEN ELSEF end case
    (77) CASE -> case . LEXP LISTAWHEN end case
    (78) CASE -> case . LISTAWHEN ELSE end
    (79) CASE -> case . LISTAWHEN end
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (102) LISTAWHEN -> . LISTAWHEN WHEN
    (103) LISTAWHEN -> . WHEN
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (104) WHEN -> . when LEXP then LISTACONTENIDO
    (105) WHEN -> . when LEXP then LEXP
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    when            shift and go to state 126
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 123
    LISTAWHEN                      shift and go to state 124
    EXP                            shift and go to state 79
    WHEN                           shift and go to state 125
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 33

    (132) SHOWDB -> show . dbs
    (133) SHOW -> show . tables para id parc
    (134) SHOW -> show . collection para parc

    dbs             shift and go to state 127
    tables          shift and go to state 128
    collection      shift and go to state 129


state 34

    (2) instrucciones -> instrucciones instruccion .

    use             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    select          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    create          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    update          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    delete          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    alter           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    drop            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    insert          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    case            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    show            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    id              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    if              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 35

    (4) instruccion -> SELECT ptcoma .

    use             reduce using rule 4 (instruccion -> SELECT ptcoma .)
    select          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    create          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    update          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    delete          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    alter           reduce using rule 4 (instruccion -> SELECT ptcoma .)
    drop            reduce using rule 4 (instruccion -> SELECT ptcoma .)
    insert          reduce using rule 4 (instruccion -> SELECT ptcoma .)
    case            reduce using rule 4 (instruccion -> SELECT ptcoma .)
    show            reduce using rule 4 (instruccion -> SELECT ptcoma .)
    id              reduce using rule 4 (instruccion -> SELECT ptcoma .)
    if              reduce using rule 4 (instruccion -> SELECT ptcoma .)
    $end            reduce using rule 4 (instruccion -> SELECT ptcoma .)


state 36

    (6) instruccion -> UPDATE ptcoma .

    use             reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    select          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    create          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    update          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    delete          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    alter           reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    drop            reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    insert          reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    case            reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    show            reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    id              reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    if              reduce using rule 6 (instruccion -> UPDATE ptcoma .)
    $end            reduce using rule 6 (instruccion -> UPDATE ptcoma .)


state 37

    (7) instruccion -> DELETE ptcoma .

    use             reduce using rule 7 (instruccion -> DELETE ptcoma .)
    select          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    create          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    update          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    delete          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    alter           reduce using rule 7 (instruccion -> DELETE ptcoma .)
    drop            reduce using rule 7 (instruccion -> DELETE ptcoma .)
    insert          reduce using rule 7 (instruccion -> DELETE ptcoma .)
    case            reduce using rule 7 (instruccion -> DELETE ptcoma .)
    show            reduce using rule 7 (instruccion -> DELETE ptcoma .)
    id              reduce using rule 7 (instruccion -> DELETE ptcoma .)
    if              reduce using rule 7 (instruccion -> DELETE ptcoma .)
    $end            reduce using rule 7 (instruccion -> DELETE ptcoma .)


state 38

    (8) instruccion -> ALTER ptcoma .

    use             reduce using rule 8 (instruccion -> ALTER ptcoma .)
    select          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    create          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    update          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    delete          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    alter           reduce using rule 8 (instruccion -> ALTER ptcoma .)
    drop            reduce using rule 8 (instruccion -> ALTER ptcoma .)
    insert          reduce using rule 8 (instruccion -> ALTER ptcoma .)
    case            reduce using rule 8 (instruccion -> ALTER ptcoma .)
    show            reduce using rule 8 (instruccion -> ALTER ptcoma .)
    id              reduce using rule 8 (instruccion -> ALTER ptcoma .)
    if              reduce using rule 8 (instruccion -> ALTER ptcoma .)
    $end            reduce using rule 8 (instruccion -> ALTER ptcoma .)


state 39

    (9) instruccion -> DROP ptcoma .

    use             reduce using rule 9 (instruccion -> DROP ptcoma .)
    select          reduce using rule 9 (instruccion -> DROP ptcoma .)
    create          reduce using rule 9 (instruccion -> DROP ptcoma .)
    update          reduce using rule 9 (instruccion -> DROP ptcoma .)
    delete          reduce using rule 9 (instruccion -> DROP ptcoma .)
    alter           reduce using rule 9 (instruccion -> DROP ptcoma .)
    drop            reduce using rule 9 (instruccion -> DROP ptcoma .)
    insert          reduce using rule 9 (instruccion -> DROP ptcoma .)
    case            reduce using rule 9 (instruccion -> DROP ptcoma .)
    show            reduce using rule 9 (instruccion -> DROP ptcoma .)
    id              reduce using rule 9 (instruccion -> DROP ptcoma .)
    if              reduce using rule 9 (instruccion -> DROP ptcoma .)
    $end            reduce using rule 9 (instruccion -> DROP ptcoma .)


state 40

    (10) instruccion -> INSERT ptcoma .

    use             reduce using rule 10 (instruccion -> INSERT ptcoma .)
    select          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    create          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    update          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    delete          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    alter           reduce using rule 10 (instruccion -> INSERT ptcoma .)
    drop            reduce using rule 10 (instruccion -> INSERT ptcoma .)
    insert          reduce using rule 10 (instruccion -> INSERT ptcoma .)
    case            reduce using rule 10 (instruccion -> INSERT ptcoma .)
    show            reduce using rule 10 (instruccion -> INSERT ptcoma .)
    id              reduce using rule 10 (instruccion -> INSERT ptcoma .)
    if              reduce using rule 10 (instruccion -> INSERT ptcoma .)
    $end            reduce using rule 10 (instruccion -> INSERT ptcoma .)


state 41

    (11) instruccion -> CREATETYPE ptcoma .

    use             reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    select          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    create          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    update          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    delete          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    alter           reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    drop            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    insert          reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    case            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    show            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    id              reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    if              reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)
    $end            reduce using rule 11 (instruccion -> CREATETYPE ptcoma .)


state 42

    (13) instruccion -> CREATEDB ptcoma .

    use             reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    select          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    create          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    update          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    delete          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    alter           reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    drop            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    insert          reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    case            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    show            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    id              reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    if              reduce using rule 13 (instruccion -> CREATEDB ptcoma .)
    $end            reduce using rule 13 (instruccion -> CREATEDB ptcoma .)


state 43

    (14) instruccion -> SHOWDB ptcoma .

    use             reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    select          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    create          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    update          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    delete          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    alter           reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    drop            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    insert          reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    case            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    show            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    id              reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    if              reduce using rule 14 (instruccion -> SHOWDB ptcoma .)
    $end            reduce using rule 14 (instruccion -> SHOWDB ptcoma .)


state 44

    (15) instruccion -> SHOW ptcoma .

    use             reduce using rule 15 (instruccion -> SHOW ptcoma .)
    select          reduce using rule 15 (instruccion -> SHOW ptcoma .)
    create          reduce using rule 15 (instruccion -> SHOW ptcoma .)
    update          reduce using rule 15 (instruccion -> SHOW ptcoma .)
    delete          reduce using rule 15 (instruccion -> SHOW ptcoma .)
    alter           reduce using rule 15 (instruccion -> SHOW ptcoma .)
    drop            reduce using rule 15 (instruccion -> SHOW ptcoma .)
    insert          reduce using rule 15 (instruccion -> SHOW ptcoma .)
    case            reduce using rule 15 (instruccion -> SHOW ptcoma .)
    show            reduce using rule 15 (instruccion -> SHOW ptcoma .)
    id              reduce using rule 15 (instruccion -> SHOW ptcoma .)
    if              reduce using rule 15 (instruccion -> SHOW ptcoma .)
    $end            reduce using rule 15 (instruccion -> SHOW ptcoma .)


state 45

    (16) instruccion -> use id . ptcoma

    ptcoma          shift and go to state 130


state 46

    (234) TIPO -> id . modulo rowtype
    (260) TIPO -> id .

  ! shift/reduce conflict for modulo resolved as shift
    modulo          shift and go to state 131
    not             reduce using rule 260 (TIPO -> id .)
    default         reduce using rule 260 (TIPO -> id .)
    dospuntos       reduce using rule 260 (TIPO -> id .)
    igual           reduce using rule 260 (TIPO -> id .)
    ptcoma          reduce using rule 260 (TIPO -> id .)
    r_from          reduce using rule 260 (TIPO -> id .)
    coma            reduce using rule 260 (TIPO -> id .)
    where           reduce using rule 260 (TIPO -> id .)
    group           reduce using rule 260 (TIPO -> id .)
    having          reduce using rule 260 (TIPO -> id .)
    union           reduce using rule 260 (TIPO -> id .)
    intersect       reduce using rule 260 (TIPO -> id .)
    except          reduce using rule 260 (TIPO -> id .)
    order           reduce using rule 260 (TIPO -> id .)
    limit           reduce using rule 260 (TIPO -> id .)
    offset          reduce using rule 260 (TIPO -> id .)
    mas             reduce using rule 260 (TIPO -> id .)
    menos           reduce using rule 260 (TIPO -> id .)
    multiplicacion  reduce using rule 260 (TIPO -> id .)
    division        reduce using rule 260 (TIPO -> id .)
    elevado         reduce using rule 260 (TIPO -> id .)
    and             reduce using rule 260 (TIPO -> id .)
    or              reduce using rule 260 (TIPO -> id .)
    mayor           reduce using rule 260 (TIPO -> id .)
    menor           reduce using rule 260 (TIPO -> id .)
    mayor_igual     reduce using rule 260 (TIPO -> id .)
    menor_igual     reduce using rule 260 (TIPO -> id .)
    diferente1      reduce using rule 260 (TIPO -> id .)
    diferente2      reduce using rule 260 (TIPO -> id .)
    between         reduce using rule 260 (TIPO -> id .)
    is              reduce using rule 260 (TIPO -> id .)
    isnull          reduce using rule 260 (TIPO -> id .)
    notnull         reduce using rule 260 (TIPO -> id .)
    as              reduce using rule 260 (TIPO -> id .)
    cadenaString    reduce using rule 260 (TIPO -> id .)
    id              reduce using rule 260 (TIPO -> id .)
    cadena          reduce using rule 260 (TIPO -> id .)
    in              reduce using rule 260 (TIPO -> id .)
    like            reduce using rule 260 (TIPO -> id .)
    then            reduce using rule 260 (TIPO -> id .)
    when            reduce using rule 260 (TIPO -> id .)
    parc            reduce using rule 260 (TIPO -> id .)
    end             reduce using rule 260 (TIPO -> id .)
    else            reduce using rule 260 (TIPO -> id .)
    constraint      reduce using rule 260 (TIPO -> id .)
    unique          reduce using rule 260 (TIPO -> id .)
    check           reduce using rule 260 (TIPO -> id .)
    null            reduce using rule 260 (TIPO -> id .)
    primary         reduce using rule 260 (TIPO -> id .)
    references      reduce using rule 260 (TIPO -> id .)
    asc             reduce using rule 260 (TIPO -> id .)
    desc            reduce using rule 260 (TIPO -> id .)

  ! modulo          [ reduce using rule 260 (TIPO -> id .) ]


state 47

    (59) DECLARACIONES -> id TIPO . not null ASIG
    (60) DECLARACIONES -> id TIPO . ASIG
    (63) ASIG -> . default EXP
    (64) ASIG -> . dospuntos igual EXP
    (65) ASIG -> . igual EXP
    (66) ASIG -> .

    not             shift and go to state 132
    default         shift and go to state 134
    dospuntos       shift and go to state 135
    igual           shift and go to state 136
    ptcoma          reduce using rule 66 (ASIG -> .)

    ASIG                           shift and go to state 133

state 48

    (61) DECLARACIONES -> id constant . TIPO not null ASIG
    (62) DECLARACIONES -> id constant . TIPO ASIG
    (220) TIPO -> . interval cadena
    (221) TIPO -> . decimal para int coma int parc
    (222) TIPO -> . decimal para int parc
    (223) TIPO -> . decimal
    (224) TIPO -> . numeric para int coma int parc
    (225) TIPO -> . numeric para int parc
    (226) TIPO -> . numeric
    (227) TIPO -> . varchar para int parc
    (228) TIPO -> . timestamp para int parc
    (229) TIPO -> . character para int parc
    (230) TIPO -> . interval para int parc
    (231) TIPO -> . char para int parc
    (232) TIPO -> . time para int parc
    (233) TIPO -> . character varying para int parc
    (234) TIPO -> . id modulo rowtype
    (235) TIPO -> . idPunto modulo type
    (236) TIPO -> . timestamp para int parc without time zone
    (237) TIPO -> . timestamp para int parc with time zone
    (238) TIPO -> . time para int parc without time zone
    (239) TIPO -> . time para int parc with time zone
    (240) TIPO -> . interval para int parc cadena
    (241) TIPO -> . smallint
    (242) TIPO -> . integer
    (243) TIPO -> . r_int
    (244) TIPO -> . bigint
    (245) TIPO -> . real
    (246) TIPO -> . double precision
    (247) TIPO -> . money
    (248) TIPO -> . text
    (249) TIPO -> . timestamp
    (250) TIPO -> . date
    (251) TIPO -> . time
    (252) TIPO -> . interval
    (253) TIPO -> . boolean
    (254) TIPO -> . record
    (255) TIPO -> . varchar
    (256) TIPO -> . timestamp without time zone
    (257) TIPO -> . timestamp with time zone
    (258) TIPO -> . time without time zone
    (259) TIPO -> . time with time zone
    (260) TIPO -> . id

    interval        shift and go to state 51
    decimal         shift and go to state 52
    numeric         shift and go to state 53
    varchar         shift and go to state 54
    timestamp       shift and go to state 55
    character       shift and go to state 56
    char            shift and go to state 57
    time            shift and go to state 58
    id              shift and go to state 46
    idPunto         shift and go to state 59
    smallint        shift and go to state 60
    integer         shift and go to state 61
    r_int           shift and go to state 62
    bigint          shift and go to state 63
    real            shift and go to state 64
    double          shift and go to state 65
    money           shift and go to state 66
    text            shift and go to state 67
    date            shift and go to state 68
    boolean         shift and go to state 69
    record          shift and go to state 70

    TIPO                           shift and go to state 137

state 49

    (67) ASIGNACION -> id dospuntos . igual EXP

    igual           shift and go to state 138


state 50

    (68) ASIGNACION -> id igual . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 139
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 51

    (220) TIPO -> interval . cadena
    (230) TIPO -> interval . para int parc
    (240) TIPO -> interval . para int parc cadena
    (252) TIPO -> interval .

  ! shift/reduce conflict for cadena resolved as shift
    cadena          shift and go to state 140
    para            shift and go to state 141
    not             reduce using rule 252 (TIPO -> interval .)
    default         reduce using rule 252 (TIPO -> interval .)
    dospuntos       reduce using rule 252 (TIPO -> interval .)
    igual           reduce using rule 252 (TIPO -> interval .)
    ptcoma          reduce using rule 252 (TIPO -> interval .)
    r_from          reduce using rule 252 (TIPO -> interval .)
    coma            reduce using rule 252 (TIPO -> interval .)
    where           reduce using rule 252 (TIPO -> interval .)
    group           reduce using rule 252 (TIPO -> interval .)
    having          reduce using rule 252 (TIPO -> interval .)
    union           reduce using rule 252 (TIPO -> interval .)
    intersect       reduce using rule 252 (TIPO -> interval .)
    except          reduce using rule 252 (TIPO -> interval .)
    order           reduce using rule 252 (TIPO -> interval .)
    limit           reduce using rule 252 (TIPO -> interval .)
    offset          reduce using rule 252 (TIPO -> interval .)
    mas             reduce using rule 252 (TIPO -> interval .)
    menos           reduce using rule 252 (TIPO -> interval .)
    multiplicacion  reduce using rule 252 (TIPO -> interval .)
    division        reduce using rule 252 (TIPO -> interval .)
    modulo          reduce using rule 252 (TIPO -> interval .)
    elevado         reduce using rule 252 (TIPO -> interval .)
    and             reduce using rule 252 (TIPO -> interval .)
    or              reduce using rule 252 (TIPO -> interval .)
    mayor           reduce using rule 252 (TIPO -> interval .)
    menor           reduce using rule 252 (TIPO -> interval .)
    mayor_igual     reduce using rule 252 (TIPO -> interval .)
    menor_igual     reduce using rule 252 (TIPO -> interval .)
    diferente1      reduce using rule 252 (TIPO -> interval .)
    diferente2      reduce using rule 252 (TIPO -> interval .)
    between         reduce using rule 252 (TIPO -> interval .)
    is              reduce using rule 252 (TIPO -> interval .)
    isnull          reduce using rule 252 (TIPO -> interval .)
    notnull         reduce using rule 252 (TIPO -> interval .)
    as              reduce using rule 252 (TIPO -> interval .)
    cadenaString    reduce using rule 252 (TIPO -> interval .)
    id              reduce using rule 252 (TIPO -> interval .)
    in              reduce using rule 252 (TIPO -> interval .)
    like            reduce using rule 252 (TIPO -> interval .)
    then            reduce using rule 252 (TIPO -> interval .)
    when            reduce using rule 252 (TIPO -> interval .)
    parc            reduce using rule 252 (TIPO -> interval .)
    end             reduce using rule 252 (TIPO -> interval .)
    else            reduce using rule 252 (TIPO -> interval .)
    constraint      reduce using rule 252 (TIPO -> interval .)
    unique          reduce using rule 252 (TIPO -> interval .)
    check           reduce using rule 252 (TIPO -> interval .)
    null            reduce using rule 252 (TIPO -> interval .)
    primary         reduce using rule 252 (TIPO -> interval .)
    references      reduce using rule 252 (TIPO -> interval .)
    asc             reduce using rule 252 (TIPO -> interval .)
    desc            reduce using rule 252 (TIPO -> interval .)

  ! cadena          [ reduce using rule 252 (TIPO -> interval .) ]


state 52

    (221) TIPO -> decimal . para int coma int parc
    (222) TIPO -> decimal . para int parc
    (223) TIPO -> decimal .

    para            shift and go to state 142
    not             reduce using rule 223 (TIPO -> decimal .)
    default         reduce using rule 223 (TIPO -> decimal .)
    dospuntos       reduce using rule 223 (TIPO -> decimal .)
    igual           reduce using rule 223 (TIPO -> decimal .)
    ptcoma          reduce using rule 223 (TIPO -> decimal .)
    r_from          reduce using rule 223 (TIPO -> decimal .)
    coma            reduce using rule 223 (TIPO -> decimal .)
    where           reduce using rule 223 (TIPO -> decimal .)
    group           reduce using rule 223 (TIPO -> decimal .)
    having          reduce using rule 223 (TIPO -> decimal .)
    union           reduce using rule 223 (TIPO -> decimal .)
    intersect       reduce using rule 223 (TIPO -> decimal .)
    except          reduce using rule 223 (TIPO -> decimal .)
    order           reduce using rule 223 (TIPO -> decimal .)
    limit           reduce using rule 223 (TIPO -> decimal .)
    offset          reduce using rule 223 (TIPO -> decimal .)
    mas             reduce using rule 223 (TIPO -> decimal .)
    menos           reduce using rule 223 (TIPO -> decimal .)
    multiplicacion  reduce using rule 223 (TIPO -> decimal .)
    division        reduce using rule 223 (TIPO -> decimal .)
    modulo          reduce using rule 223 (TIPO -> decimal .)
    elevado         reduce using rule 223 (TIPO -> decimal .)
    and             reduce using rule 223 (TIPO -> decimal .)
    or              reduce using rule 223 (TIPO -> decimal .)
    mayor           reduce using rule 223 (TIPO -> decimal .)
    menor           reduce using rule 223 (TIPO -> decimal .)
    mayor_igual     reduce using rule 223 (TIPO -> decimal .)
    menor_igual     reduce using rule 223 (TIPO -> decimal .)
    diferente1      reduce using rule 223 (TIPO -> decimal .)
    diferente2      reduce using rule 223 (TIPO -> decimal .)
    between         reduce using rule 223 (TIPO -> decimal .)
    is              reduce using rule 223 (TIPO -> decimal .)
    isnull          reduce using rule 223 (TIPO -> decimal .)
    notnull         reduce using rule 223 (TIPO -> decimal .)
    as              reduce using rule 223 (TIPO -> decimal .)
    cadenaString    reduce using rule 223 (TIPO -> decimal .)
    id              reduce using rule 223 (TIPO -> decimal .)
    cadena          reduce using rule 223 (TIPO -> decimal .)
    in              reduce using rule 223 (TIPO -> decimal .)
    like            reduce using rule 223 (TIPO -> decimal .)
    then            reduce using rule 223 (TIPO -> decimal .)
    when            reduce using rule 223 (TIPO -> decimal .)
    parc            reduce using rule 223 (TIPO -> decimal .)
    end             reduce using rule 223 (TIPO -> decimal .)
    else            reduce using rule 223 (TIPO -> decimal .)
    constraint      reduce using rule 223 (TIPO -> decimal .)
    unique          reduce using rule 223 (TIPO -> decimal .)
    check           reduce using rule 223 (TIPO -> decimal .)
    null            reduce using rule 223 (TIPO -> decimal .)
    primary         reduce using rule 223 (TIPO -> decimal .)
    references      reduce using rule 223 (TIPO -> decimal .)
    asc             reduce using rule 223 (TIPO -> decimal .)
    desc            reduce using rule 223 (TIPO -> decimal .)


state 53

    (224) TIPO -> numeric . para int coma int parc
    (225) TIPO -> numeric . para int parc
    (226) TIPO -> numeric .

    para            shift and go to state 143
    not             reduce using rule 226 (TIPO -> numeric .)
    default         reduce using rule 226 (TIPO -> numeric .)
    dospuntos       reduce using rule 226 (TIPO -> numeric .)
    igual           reduce using rule 226 (TIPO -> numeric .)
    ptcoma          reduce using rule 226 (TIPO -> numeric .)
    r_from          reduce using rule 226 (TIPO -> numeric .)
    coma            reduce using rule 226 (TIPO -> numeric .)
    where           reduce using rule 226 (TIPO -> numeric .)
    group           reduce using rule 226 (TIPO -> numeric .)
    having          reduce using rule 226 (TIPO -> numeric .)
    union           reduce using rule 226 (TIPO -> numeric .)
    intersect       reduce using rule 226 (TIPO -> numeric .)
    except          reduce using rule 226 (TIPO -> numeric .)
    order           reduce using rule 226 (TIPO -> numeric .)
    limit           reduce using rule 226 (TIPO -> numeric .)
    offset          reduce using rule 226 (TIPO -> numeric .)
    mas             reduce using rule 226 (TIPO -> numeric .)
    menos           reduce using rule 226 (TIPO -> numeric .)
    multiplicacion  reduce using rule 226 (TIPO -> numeric .)
    division        reduce using rule 226 (TIPO -> numeric .)
    modulo          reduce using rule 226 (TIPO -> numeric .)
    elevado         reduce using rule 226 (TIPO -> numeric .)
    and             reduce using rule 226 (TIPO -> numeric .)
    or              reduce using rule 226 (TIPO -> numeric .)
    mayor           reduce using rule 226 (TIPO -> numeric .)
    menor           reduce using rule 226 (TIPO -> numeric .)
    mayor_igual     reduce using rule 226 (TIPO -> numeric .)
    menor_igual     reduce using rule 226 (TIPO -> numeric .)
    diferente1      reduce using rule 226 (TIPO -> numeric .)
    diferente2      reduce using rule 226 (TIPO -> numeric .)
    between         reduce using rule 226 (TIPO -> numeric .)
    is              reduce using rule 226 (TIPO -> numeric .)
    isnull          reduce using rule 226 (TIPO -> numeric .)
    notnull         reduce using rule 226 (TIPO -> numeric .)
    as              reduce using rule 226 (TIPO -> numeric .)
    cadenaString    reduce using rule 226 (TIPO -> numeric .)
    id              reduce using rule 226 (TIPO -> numeric .)
    cadena          reduce using rule 226 (TIPO -> numeric .)
    in              reduce using rule 226 (TIPO -> numeric .)
    like            reduce using rule 226 (TIPO -> numeric .)
    then            reduce using rule 226 (TIPO -> numeric .)
    when            reduce using rule 226 (TIPO -> numeric .)
    parc            reduce using rule 226 (TIPO -> numeric .)
    end             reduce using rule 226 (TIPO -> numeric .)
    else            reduce using rule 226 (TIPO -> numeric .)
    constraint      reduce using rule 226 (TIPO -> numeric .)
    unique          reduce using rule 226 (TIPO -> numeric .)
    check           reduce using rule 226 (TIPO -> numeric .)
    null            reduce using rule 226 (TIPO -> numeric .)
    primary         reduce using rule 226 (TIPO -> numeric .)
    references      reduce using rule 226 (TIPO -> numeric .)
    asc             reduce using rule 226 (TIPO -> numeric .)
    desc            reduce using rule 226 (TIPO -> numeric .)


state 54

    (227) TIPO -> varchar . para int parc
    (255) TIPO -> varchar .

    para            shift and go to state 144
    not             reduce using rule 255 (TIPO -> varchar .)
    default         reduce using rule 255 (TIPO -> varchar .)
    dospuntos       reduce using rule 255 (TIPO -> varchar .)
    igual           reduce using rule 255 (TIPO -> varchar .)
    ptcoma          reduce using rule 255 (TIPO -> varchar .)
    r_from          reduce using rule 255 (TIPO -> varchar .)
    coma            reduce using rule 255 (TIPO -> varchar .)
    where           reduce using rule 255 (TIPO -> varchar .)
    group           reduce using rule 255 (TIPO -> varchar .)
    having          reduce using rule 255 (TIPO -> varchar .)
    union           reduce using rule 255 (TIPO -> varchar .)
    intersect       reduce using rule 255 (TIPO -> varchar .)
    except          reduce using rule 255 (TIPO -> varchar .)
    order           reduce using rule 255 (TIPO -> varchar .)
    limit           reduce using rule 255 (TIPO -> varchar .)
    offset          reduce using rule 255 (TIPO -> varchar .)
    mas             reduce using rule 255 (TIPO -> varchar .)
    menos           reduce using rule 255 (TIPO -> varchar .)
    multiplicacion  reduce using rule 255 (TIPO -> varchar .)
    division        reduce using rule 255 (TIPO -> varchar .)
    modulo          reduce using rule 255 (TIPO -> varchar .)
    elevado         reduce using rule 255 (TIPO -> varchar .)
    and             reduce using rule 255 (TIPO -> varchar .)
    or              reduce using rule 255 (TIPO -> varchar .)
    mayor           reduce using rule 255 (TIPO -> varchar .)
    menor           reduce using rule 255 (TIPO -> varchar .)
    mayor_igual     reduce using rule 255 (TIPO -> varchar .)
    menor_igual     reduce using rule 255 (TIPO -> varchar .)
    diferente1      reduce using rule 255 (TIPO -> varchar .)
    diferente2      reduce using rule 255 (TIPO -> varchar .)
    between         reduce using rule 255 (TIPO -> varchar .)
    is              reduce using rule 255 (TIPO -> varchar .)
    isnull          reduce using rule 255 (TIPO -> varchar .)
    notnull         reduce using rule 255 (TIPO -> varchar .)
    as              reduce using rule 255 (TIPO -> varchar .)
    cadenaString    reduce using rule 255 (TIPO -> varchar .)
    id              reduce using rule 255 (TIPO -> varchar .)
    cadena          reduce using rule 255 (TIPO -> varchar .)
    in              reduce using rule 255 (TIPO -> varchar .)
    like            reduce using rule 255 (TIPO -> varchar .)
    then            reduce using rule 255 (TIPO -> varchar .)
    when            reduce using rule 255 (TIPO -> varchar .)
    parc            reduce using rule 255 (TIPO -> varchar .)
    end             reduce using rule 255 (TIPO -> varchar .)
    else            reduce using rule 255 (TIPO -> varchar .)
    constraint      reduce using rule 255 (TIPO -> varchar .)
    unique          reduce using rule 255 (TIPO -> varchar .)
    check           reduce using rule 255 (TIPO -> varchar .)
    null            reduce using rule 255 (TIPO -> varchar .)
    primary         reduce using rule 255 (TIPO -> varchar .)
    references      reduce using rule 255 (TIPO -> varchar .)
    asc             reduce using rule 255 (TIPO -> varchar .)
    desc            reduce using rule 255 (TIPO -> varchar .)


state 55

    (228) TIPO -> timestamp . para int parc
    (236) TIPO -> timestamp . para int parc without time zone
    (237) TIPO -> timestamp . para int parc with time zone
    (249) TIPO -> timestamp .
    (256) TIPO -> timestamp . without time zone
    (257) TIPO -> timestamp . with time zone

    para            shift and go to state 145
    not             reduce using rule 249 (TIPO -> timestamp .)
    default         reduce using rule 249 (TIPO -> timestamp .)
    dospuntos       reduce using rule 249 (TIPO -> timestamp .)
    igual           reduce using rule 249 (TIPO -> timestamp .)
    ptcoma          reduce using rule 249 (TIPO -> timestamp .)
    r_from          reduce using rule 249 (TIPO -> timestamp .)
    coma            reduce using rule 249 (TIPO -> timestamp .)
    where           reduce using rule 249 (TIPO -> timestamp .)
    group           reduce using rule 249 (TIPO -> timestamp .)
    having          reduce using rule 249 (TIPO -> timestamp .)
    union           reduce using rule 249 (TIPO -> timestamp .)
    intersect       reduce using rule 249 (TIPO -> timestamp .)
    except          reduce using rule 249 (TIPO -> timestamp .)
    order           reduce using rule 249 (TIPO -> timestamp .)
    limit           reduce using rule 249 (TIPO -> timestamp .)
    offset          reduce using rule 249 (TIPO -> timestamp .)
    mas             reduce using rule 249 (TIPO -> timestamp .)
    menos           reduce using rule 249 (TIPO -> timestamp .)
    multiplicacion  reduce using rule 249 (TIPO -> timestamp .)
    division        reduce using rule 249 (TIPO -> timestamp .)
    modulo          reduce using rule 249 (TIPO -> timestamp .)
    elevado         reduce using rule 249 (TIPO -> timestamp .)
    and             reduce using rule 249 (TIPO -> timestamp .)
    or              reduce using rule 249 (TIPO -> timestamp .)
    mayor           reduce using rule 249 (TIPO -> timestamp .)
    menor           reduce using rule 249 (TIPO -> timestamp .)
    mayor_igual     reduce using rule 249 (TIPO -> timestamp .)
    menor_igual     reduce using rule 249 (TIPO -> timestamp .)
    diferente1      reduce using rule 249 (TIPO -> timestamp .)
    diferente2      reduce using rule 249 (TIPO -> timestamp .)
    between         reduce using rule 249 (TIPO -> timestamp .)
    is              reduce using rule 249 (TIPO -> timestamp .)
    isnull          reduce using rule 249 (TIPO -> timestamp .)
    notnull         reduce using rule 249 (TIPO -> timestamp .)
    as              reduce using rule 249 (TIPO -> timestamp .)
    cadenaString    reduce using rule 249 (TIPO -> timestamp .)
    id              reduce using rule 249 (TIPO -> timestamp .)
    cadena          reduce using rule 249 (TIPO -> timestamp .)
    in              reduce using rule 249 (TIPO -> timestamp .)
    like            reduce using rule 249 (TIPO -> timestamp .)
    then            reduce using rule 249 (TIPO -> timestamp .)
    when            reduce using rule 249 (TIPO -> timestamp .)
    parc            reduce using rule 249 (TIPO -> timestamp .)
    end             reduce using rule 249 (TIPO -> timestamp .)
    else            reduce using rule 249 (TIPO -> timestamp .)
    constraint      reduce using rule 249 (TIPO -> timestamp .)
    unique          reduce using rule 249 (TIPO -> timestamp .)
    check           reduce using rule 249 (TIPO -> timestamp .)
    null            reduce using rule 249 (TIPO -> timestamp .)
    primary         reduce using rule 249 (TIPO -> timestamp .)
    references      reduce using rule 249 (TIPO -> timestamp .)
    asc             reduce using rule 249 (TIPO -> timestamp .)
    desc            reduce using rule 249 (TIPO -> timestamp .)
    without         shift and go to state 146
    with            shift and go to state 147


state 56

    (229) TIPO -> character . para int parc
    (233) TIPO -> character . varying para int parc

    para            shift and go to state 148
    varying         shift and go to state 149


state 57

    (231) TIPO -> char . para int parc

    para            shift and go to state 150


state 58

    (232) TIPO -> time . para int parc
    (238) TIPO -> time . para int parc without time zone
    (239) TIPO -> time . para int parc with time zone
    (251) TIPO -> time .
    (258) TIPO -> time . without time zone
    (259) TIPO -> time . with time zone

    para            shift and go to state 151
    not             reduce using rule 251 (TIPO -> time .)
    default         reduce using rule 251 (TIPO -> time .)
    dospuntos       reduce using rule 251 (TIPO -> time .)
    igual           reduce using rule 251 (TIPO -> time .)
    ptcoma          reduce using rule 251 (TIPO -> time .)
    r_from          reduce using rule 251 (TIPO -> time .)
    coma            reduce using rule 251 (TIPO -> time .)
    where           reduce using rule 251 (TIPO -> time .)
    group           reduce using rule 251 (TIPO -> time .)
    having          reduce using rule 251 (TIPO -> time .)
    union           reduce using rule 251 (TIPO -> time .)
    intersect       reduce using rule 251 (TIPO -> time .)
    except          reduce using rule 251 (TIPO -> time .)
    order           reduce using rule 251 (TIPO -> time .)
    limit           reduce using rule 251 (TIPO -> time .)
    offset          reduce using rule 251 (TIPO -> time .)
    mas             reduce using rule 251 (TIPO -> time .)
    menos           reduce using rule 251 (TIPO -> time .)
    multiplicacion  reduce using rule 251 (TIPO -> time .)
    division        reduce using rule 251 (TIPO -> time .)
    modulo          reduce using rule 251 (TIPO -> time .)
    elevado         reduce using rule 251 (TIPO -> time .)
    and             reduce using rule 251 (TIPO -> time .)
    or              reduce using rule 251 (TIPO -> time .)
    mayor           reduce using rule 251 (TIPO -> time .)
    menor           reduce using rule 251 (TIPO -> time .)
    mayor_igual     reduce using rule 251 (TIPO -> time .)
    menor_igual     reduce using rule 251 (TIPO -> time .)
    diferente1      reduce using rule 251 (TIPO -> time .)
    diferente2      reduce using rule 251 (TIPO -> time .)
    between         reduce using rule 251 (TIPO -> time .)
    is              reduce using rule 251 (TIPO -> time .)
    isnull          reduce using rule 251 (TIPO -> time .)
    notnull         reduce using rule 251 (TIPO -> time .)
    as              reduce using rule 251 (TIPO -> time .)
    cadenaString    reduce using rule 251 (TIPO -> time .)
    id              reduce using rule 251 (TIPO -> time .)
    cadena          reduce using rule 251 (TIPO -> time .)
    in              reduce using rule 251 (TIPO -> time .)
    like            reduce using rule 251 (TIPO -> time .)
    then            reduce using rule 251 (TIPO -> time .)
    when            reduce using rule 251 (TIPO -> time .)
    parc            reduce using rule 251 (TIPO -> time .)
    end             reduce using rule 251 (TIPO -> time .)
    else            reduce using rule 251 (TIPO -> time .)
    constraint      reduce using rule 251 (TIPO -> time .)
    unique          reduce using rule 251 (TIPO -> time .)
    check           reduce using rule 251 (TIPO -> time .)
    null            reduce using rule 251 (TIPO -> time .)
    primary         reduce using rule 251 (TIPO -> time .)
    references      reduce using rule 251 (TIPO -> time .)
    asc             reduce using rule 251 (TIPO -> time .)
    desc            reduce using rule 251 (TIPO -> time .)
    without         shift and go to state 152
    with            shift and go to state 153


state 59

    (235) TIPO -> idPunto . modulo type

    modulo          shift and go to state 154


state 60

    (241) TIPO -> smallint .

    not             reduce using rule 241 (TIPO -> smallint .)
    default         reduce using rule 241 (TIPO -> smallint .)
    dospuntos       reduce using rule 241 (TIPO -> smallint .)
    igual           reduce using rule 241 (TIPO -> smallint .)
    ptcoma          reduce using rule 241 (TIPO -> smallint .)
    r_from          reduce using rule 241 (TIPO -> smallint .)
    coma            reduce using rule 241 (TIPO -> smallint .)
    where           reduce using rule 241 (TIPO -> smallint .)
    group           reduce using rule 241 (TIPO -> smallint .)
    having          reduce using rule 241 (TIPO -> smallint .)
    union           reduce using rule 241 (TIPO -> smallint .)
    intersect       reduce using rule 241 (TIPO -> smallint .)
    except          reduce using rule 241 (TIPO -> smallint .)
    order           reduce using rule 241 (TIPO -> smallint .)
    limit           reduce using rule 241 (TIPO -> smallint .)
    offset          reduce using rule 241 (TIPO -> smallint .)
    mas             reduce using rule 241 (TIPO -> smallint .)
    menos           reduce using rule 241 (TIPO -> smallint .)
    multiplicacion  reduce using rule 241 (TIPO -> smallint .)
    division        reduce using rule 241 (TIPO -> smallint .)
    modulo          reduce using rule 241 (TIPO -> smallint .)
    elevado         reduce using rule 241 (TIPO -> smallint .)
    and             reduce using rule 241 (TIPO -> smallint .)
    or              reduce using rule 241 (TIPO -> smallint .)
    mayor           reduce using rule 241 (TIPO -> smallint .)
    menor           reduce using rule 241 (TIPO -> smallint .)
    mayor_igual     reduce using rule 241 (TIPO -> smallint .)
    menor_igual     reduce using rule 241 (TIPO -> smallint .)
    diferente1      reduce using rule 241 (TIPO -> smallint .)
    diferente2      reduce using rule 241 (TIPO -> smallint .)
    between         reduce using rule 241 (TIPO -> smallint .)
    is              reduce using rule 241 (TIPO -> smallint .)
    isnull          reduce using rule 241 (TIPO -> smallint .)
    notnull         reduce using rule 241 (TIPO -> smallint .)
    as              reduce using rule 241 (TIPO -> smallint .)
    cadenaString    reduce using rule 241 (TIPO -> smallint .)
    id              reduce using rule 241 (TIPO -> smallint .)
    cadena          reduce using rule 241 (TIPO -> smallint .)
    in              reduce using rule 241 (TIPO -> smallint .)
    like            reduce using rule 241 (TIPO -> smallint .)
    then            reduce using rule 241 (TIPO -> smallint .)
    when            reduce using rule 241 (TIPO -> smallint .)
    parc            reduce using rule 241 (TIPO -> smallint .)
    end             reduce using rule 241 (TIPO -> smallint .)
    else            reduce using rule 241 (TIPO -> smallint .)
    constraint      reduce using rule 241 (TIPO -> smallint .)
    unique          reduce using rule 241 (TIPO -> smallint .)
    check           reduce using rule 241 (TIPO -> smallint .)
    null            reduce using rule 241 (TIPO -> smallint .)
    primary         reduce using rule 241 (TIPO -> smallint .)
    references      reduce using rule 241 (TIPO -> smallint .)
    asc             reduce using rule 241 (TIPO -> smallint .)
    desc            reduce using rule 241 (TIPO -> smallint .)


state 61

    (242) TIPO -> integer .

    not             reduce using rule 242 (TIPO -> integer .)
    default         reduce using rule 242 (TIPO -> integer .)
    dospuntos       reduce using rule 242 (TIPO -> integer .)
    igual           reduce using rule 242 (TIPO -> integer .)
    ptcoma          reduce using rule 242 (TIPO -> integer .)
    r_from          reduce using rule 242 (TIPO -> integer .)
    coma            reduce using rule 242 (TIPO -> integer .)
    where           reduce using rule 242 (TIPO -> integer .)
    group           reduce using rule 242 (TIPO -> integer .)
    having          reduce using rule 242 (TIPO -> integer .)
    union           reduce using rule 242 (TIPO -> integer .)
    intersect       reduce using rule 242 (TIPO -> integer .)
    except          reduce using rule 242 (TIPO -> integer .)
    order           reduce using rule 242 (TIPO -> integer .)
    limit           reduce using rule 242 (TIPO -> integer .)
    offset          reduce using rule 242 (TIPO -> integer .)
    mas             reduce using rule 242 (TIPO -> integer .)
    menos           reduce using rule 242 (TIPO -> integer .)
    multiplicacion  reduce using rule 242 (TIPO -> integer .)
    division        reduce using rule 242 (TIPO -> integer .)
    modulo          reduce using rule 242 (TIPO -> integer .)
    elevado         reduce using rule 242 (TIPO -> integer .)
    and             reduce using rule 242 (TIPO -> integer .)
    or              reduce using rule 242 (TIPO -> integer .)
    mayor           reduce using rule 242 (TIPO -> integer .)
    menor           reduce using rule 242 (TIPO -> integer .)
    mayor_igual     reduce using rule 242 (TIPO -> integer .)
    menor_igual     reduce using rule 242 (TIPO -> integer .)
    diferente1      reduce using rule 242 (TIPO -> integer .)
    diferente2      reduce using rule 242 (TIPO -> integer .)
    between         reduce using rule 242 (TIPO -> integer .)
    is              reduce using rule 242 (TIPO -> integer .)
    isnull          reduce using rule 242 (TIPO -> integer .)
    notnull         reduce using rule 242 (TIPO -> integer .)
    as              reduce using rule 242 (TIPO -> integer .)
    cadenaString    reduce using rule 242 (TIPO -> integer .)
    id              reduce using rule 242 (TIPO -> integer .)
    cadena          reduce using rule 242 (TIPO -> integer .)
    in              reduce using rule 242 (TIPO -> integer .)
    like            reduce using rule 242 (TIPO -> integer .)
    then            reduce using rule 242 (TIPO -> integer .)
    when            reduce using rule 242 (TIPO -> integer .)
    parc            reduce using rule 242 (TIPO -> integer .)
    end             reduce using rule 242 (TIPO -> integer .)
    else            reduce using rule 242 (TIPO -> integer .)
    constraint      reduce using rule 242 (TIPO -> integer .)
    unique          reduce using rule 242 (TIPO -> integer .)
    check           reduce using rule 242 (TIPO -> integer .)
    null            reduce using rule 242 (TIPO -> integer .)
    primary         reduce using rule 242 (TIPO -> integer .)
    references      reduce using rule 242 (TIPO -> integer .)
    asc             reduce using rule 242 (TIPO -> integer .)
    desc            reduce using rule 242 (TIPO -> integer .)


state 62

    (243) TIPO -> r_int .

    not             reduce using rule 243 (TIPO -> r_int .)
    default         reduce using rule 243 (TIPO -> r_int .)
    dospuntos       reduce using rule 243 (TIPO -> r_int .)
    igual           reduce using rule 243 (TIPO -> r_int .)
    ptcoma          reduce using rule 243 (TIPO -> r_int .)
    r_from          reduce using rule 243 (TIPO -> r_int .)
    coma            reduce using rule 243 (TIPO -> r_int .)
    where           reduce using rule 243 (TIPO -> r_int .)
    group           reduce using rule 243 (TIPO -> r_int .)
    having          reduce using rule 243 (TIPO -> r_int .)
    union           reduce using rule 243 (TIPO -> r_int .)
    intersect       reduce using rule 243 (TIPO -> r_int .)
    except          reduce using rule 243 (TIPO -> r_int .)
    order           reduce using rule 243 (TIPO -> r_int .)
    limit           reduce using rule 243 (TIPO -> r_int .)
    offset          reduce using rule 243 (TIPO -> r_int .)
    mas             reduce using rule 243 (TIPO -> r_int .)
    menos           reduce using rule 243 (TIPO -> r_int .)
    multiplicacion  reduce using rule 243 (TIPO -> r_int .)
    division        reduce using rule 243 (TIPO -> r_int .)
    modulo          reduce using rule 243 (TIPO -> r_int .)
    elevado         reduce using rule 243 (TIPO -> r_int .)
    and             reduce using rule 243 (TIPO -> r_int .)
    or              reduce using rule 243 (TIPO -> r_int .)
    mayor           reduce using rule 243 (TIPO -> r_int .)
    menor           reduce using rule 243 (TIPO -> r_int .)
    mayor_igual     reduce using rule 243 (TIPO -> r_int .)
    menor_igual     reduce using rule 243 (TIPO -> r_int .)
    diferente1      reduce using rule 243 (TIPO -> r_int .)
    diferente2      reduce using rule 243 (TIPO -> r_int .)
    between         reduce using rule 243 (TIPO -> r_int .)
    is              reduce using rule 243 (TIPO -> r_int .)
    isnull          reduce using rule 243 (TIPO -> r_int .)
    notnull         reduce using rule 243 (TIPO -> r_int .)
    as              reduce using rule 243 (TIPO -> r_int .)
    cadenaString    reduce using rule 243 (TIPO -> r_int .)
    id              reduce using rule 243 (TIPO -> r_int .)
    cadena          reduce using rule 243 (TIPO -> r_int .)
    in              reduce using rule 243 (TIPO -> r_int .)
    like            reduce using rule 243 (TIPO -> r_int .)
    then            reduce using rule 243 (TIPO -> r_int .)
    when            reduce using rule 243 (TIPO -> r_int .)
    parc            reduce using rule 243 (TIPO -> r_int .)
    end             reduce using rule 243 (TIPO -> r_int .)
    else            reduce using rule 243 (TIPO -> r_int .)
    constraint      reduce using rule 243 (TIPO -> r_int .)
    unique          reduce using rule 243 (TIPO -> r_int .)
    check           reduce using rule 243 (TIPO -> r_int .)
    null            reduce using rule 243 (TIPO -> r_int .)
    primary         reduce using rule 243 (TIPO -> r_int .)
    references      reduce using rule 243 (TIPO -> r_int .)
    asc             reduce using rule 243 (TIPO -> r_int .)
    desc            reduce using rule 243 (TIPO -> r_int .)


state 63

    (244) TIPO -> bigint .

    not             reduce using rule 244 (TIPO -> bigint .)
    default         reduce using rule 244 (TIPO -> bigint .)
    dospuntos       reduce using rule 244 (TIPO -> bigint .)
    igual           reduce using rule 244 (TIPO -> bigint .)
    ptcoma          reduce using rule 244 (TIPO -> bigint .)
    r_from          reduce using rule 244 (TIPO -> bigint .)
    coma            reduce using rule 244 (TIPO -> bigint .)
    where           reduce using rule 244 (TIPO -> bigint .)
    group           reduce using rule 244 (TIPO -> bigint .)
    having          reduce using rule 244 (TIPO -> bigint .)
    union           reduce using rule 244 (TIPO -> bigint .)
    intersect       reduce using rule 244 (TIPO -> bigint .)
    except          reduce using rule 244 (TIPO -> bigint .)
    order           reduce using rule 244 (TIPO -> bigint .)
    limit           reduce using rule 244 (TIPO -> bigint .)
    offset          reduce using rule 244 (TIPO -> bigint .)
    mas             reduce using rule 244 (TIPO -> bigint .)
    menos           reduce using rule 244 (TIPO -> bigint .)
    multiplicacion  reduce using rule 244 (TIPO -> bigint .)
    division        reduce using rule 244 (TIPO -> bigint .)
    modulo          reduce using rule 244 (TIPO -> bigint .)
    elevado         reduce using rule 244 (TIPO -> bigint .)
    and             reduce using rule 244 (TIPO -> bigint .)
    or              reduce using rule 244 (TIPO -> bigint .)
    mayor           reduce using rule 244 (TIPO -> bigint .)
    menor           reduce using rule 244 (TIPO -> bigint .)
    mayor_igual     reduce using rule 244 (TIPO -> bigint .)
    menor_igual     reduce using rule 244 (TIPO -> bigint .)
    diferente1      reduce using rule 244 (TIPO -> bigint .)
    diferente2      reduce using rule 244 (TIPO -> bigint .)
    between         reduce using rule 244 (TIPO -> bigint .)
    is              reduce using rule 244 (TIPO -> bigint .)
    isnull          reduce using rule 244 (TIPO -> bigint .)
    notnull         reduce using rule 244 (TIPO -> bigint .)
    as              reduce using rule 244 (TIPO -> bigint .)
    cadenaString    reduce using rule 244 (TIPO -> bigint .)
    id              reduce using rule 244 (TIPO -> bigint .)
    cadena          reduce using rule 244 (TIPO -> bigint .)
    in              reduce using rule 244 (TIPO -> bigint .)
    like            reduce using rule 244 (TIPO -> bigint .)
    then            reduce using rule 244 (TIPO -> bigint .)
    when            reduce using rule 244 (TIPO -> bigint .)
    parc            reduce using rule 244 (TIPO -> bigint .)
    end             reduce using rule 244 (TIPO -> bigint .)
    else            reduce using rule 244 (TIPO -> bigint .)
    constraint      reduce using rule 244 (TIPO -> bigint .)
    unique          reduce using rule 244 (TIPO -> bigint .)
    check           reduce using rule 244 (TIPO -> bigint .)
    null            reduce using rule 244 (TIPO -> bigint .)
    primary         reduce using rule 244 (TIPO -> bigint .)
    references      reduce using rule 244 (TIPO -> bigint .)
    asc             reduce using rule 244 (TIPO -> bigint .)
    desc            reduce using rule 244 (TIPO -> bigint .)


state 64

    (245) TIPO -> real .

    not             reduce using rule 245 (TIPO -> real .)
    default         reduce using rule 245 (TIPO -> real .)
    dospuntos       reduce using rule 245 (TIPO -> real .)
    igual           reduce using rule 245 (TIPO -> real .)
    ptcoma          reduce using rule 245 (TIPO -> real .)
    r_from          reduce using rule 245 (TIPO -> real .)
    coma            reduce using rule 245 (TIPO -> real .)
    where           reduce using rule 245 (TIPO -> real .)
    group           reduce using rule 245 (TIPO -> real .)
    having          reduce using rule 245 (TIPO -> real .)
    union           reduce using rule 245 (TIPO -> real .)
    intersect       reduce using rule 245 (TIPO -> real .)
    except          reduce using rule 245 (TIPO -> real .)
    order           reduce using rule 245 (TIPO -> real .)
    limit           reduce using rule 245 (TIPO -> real .)
    offset          reduce using rule 245 (TIPO -> real .)
    mas             reduce using rule 245 (TIPO -> real .)
    menos           reduce using rule 245 (TIPO -> real .)
    multiplicacion  reduce using rule 245 (TIPO -> real .)
    division        reduce using rule 245 (TIPO -> real .)
    modulo          reduce using rule 245 (TIPO -> real .)
    elevado         reduce using rule 245 (TIPO -> real .)
    and             reduce using rule 245 (TIPO -> real .)
    or              reduce using rule 245 (TIPO -> real .)
    mayor           reduce using rule 245 (TIPO -> real .)
    menor           reduce using rule 245 (TIPO -> real .)
    mayor_igual     reduce using rule 245 (TIPO -> real .)
    menor_igual     reduce using rule 245 (TIPO -> real .)
    diferente1      reduce using rule 245 (TIPO -> real .)
    diferente2      reduce using rule 245 (TIPO -> real .)
    between         reduce using rule 245 (TIPO -> real .)
    is              reduce using rule 245 (TIPO -> real .)
    isnull          reduce using rule 245 (TIPO -> real .)
    notnull         reduce using rule 245 (TIPO -> real .)
    as              reduce using rule 245 (TIPO -> real .)
    cadenaString    reduce using rule 245 (TIPO -> real .)
    id              reduce using rule 245 (TIPO -> real .)
    cadena          reduce using rule 245 (TIPO -> real .)
    in              reduce using rule 245 (TIPO -> real .)
    like            reduce using rule 245 (TIPO -> real .)
    then            reduce using rule 245 (TIPO -> real .)
    when            reduce using rule 245 (TIPO -> real .)
    parc            reduce using rule 245 (TIPO -> real .)
    end             reduce using rule 245 (TIPO -> real .)
    else            reduce using rule 245 (TIPO -> real .)
    constraint      reduce using rule 245 (TIPO -> real .)
    unique          reduce using rule 245 (TIPO -> real .)
    check           reduce using rule 245 (TIPO -> real .)
    null            reduce using rule 245 (TIPO -> real .)
    primary         reduce using rule 245 (TIPO -> real .)
    references      reduce using rule 245 (TIPO -> real .)
    asc             reduce using rule 245 (TIPO -> real .)
    desc            reduce using rule 245 (TIPO -> real .)


state 65

    (246) TIPO -> double . precision

    precision       shift and go to state 155


state 66

    (247) TIPO -> money .

    not             reduce using rule 247 (TIPO -> money .)
    default         reduce using rule 247 (TIPO -> money .)
    dospuntos       reduce using rule 247 (TIPO -> money .)
    igual           reduce using rule 247 (TIPO -> money .)
    ptcoma          reduce using rule 247 (TIPO -> money .)
    r_from          reduce using rule 247 (TIPO -> money .)
    coma            reduce using rule 247 (TIPO -> money .)
    where           reduce using rule 247 (TIPO -> money .)
    group           reduce using rule 247 (TIPO -> money .)
    having          reduce using rule 247 (TIPO -> money .)
    union           reduce using rule 247 (TIPO -> money .)
    intersect       reduce using rule 247 (TIPO -> money .)
    except          reduce using rule 247 (TIPO -> money .)
    order           reduce using rule 247 (TIPO -> money .)
    limit           reduce using rule 247 (TIPO -> money .)
    offset          reduce using rule 247 (TIPO -> money .)
    mas             reduce using rule 247 (TIPO -> money .)
    menos           reduce using rule 247 (TIPO -> money .)
    multiplicacion  reduce using rule 247 (TIPO -> money .)
    division        reduce using rule 247 (TIPO -> money .)
    modulo          reduce using rule 247 (TIPO -> money .)
    elevado         reduce using rule 247 (TIPO -> money .)
    and             reduce using rule 247 (TIPO -> money .)
    or              reduce using rule 247 (TIPO -> money .)
    mayor           reduce using rule 247 (TIPO -> money .)
    menor           reduce using rule 247 (TIPO -> money .)
    mayor_igual     reduce using rule 247 (TIPO -> money .)
    menor_igual     reduce using rule 247 (TIPO -> money .)
    diferente1      reduce using rule 247 (TIPO -> money .)
    diferente2      reduce using rule 247 (TIPO -> money .)
    between         reduce using rule 247 (TIPO -> money .)
    is              reduce using rule 247 (TIPO -> money .)
    isnull          reduce using rule 247 (TIPO -> money .)
    notnull         reduce using rule 247 (TIPO -> money .)
    as              reduce using rule 247 (TIPO -> money .)
    cadenaString    reduce using rule 247 (TIPO -> money .)
    id              reduce using rule 247 (TIPO -> money .)
    cadena          reduce using rule 247 (TIPO -> money .)
    in              reduce using rule 247 (TIPO -> money .)
    like            reduce using rule 247 (TIPO -> money .)
    then            reduce using rule 247 (TIPO -> money .)
    when            reduce using rule 247 (TIPO -> money .)
    parc            reduce using rule 247 (TIPO -> money .)
    end             reduce using rule 247 (TIPO -> money .)
    else            reduce using rule 247 (TIPO -> money .)
    constraint      reduce using rule 247 (TIPO -> money .)
    unique          reduce using rule 247 (TIPO -> money .)
    check           reduce using rule 247 (TIPO -> money .)
    null            reduce using rule 247 (TIPO -> money .)
    primary         reduce using rule 247 (TIPO -> money .)
    references      reduce using rule 247 (TIPO -> money .)
    asc             reduce using rule 247 (TIPO -> money .)
    desc            reduce using rule 247 (TIPO -> money .)


state 67

    (248) TIPO -> text .

    not             reduce using rule 248 (TIPO -> text .)
    default         reduce using rule 248 (TIPO -> text .)
    dospuntos       reduce using rule 248 (TIPO -> text .)
    igual           reduce using rule 248 (TIPO -> text .)
    ptcoma          reduce using rule 248 (TIPO -> text .)
    r_from          reduce using rule 248 (TIPO -> text .)
    coma            reduce using rule 248 (TIPO -> text .)
    where           reduce using rule 248 (TIPO -> text .)
    group           reduce using rule 248 (TIPO -> text .)
    having          reduce using rule 248 (TIPO -> text .)
    union           reduce using rule 248 (TIPO -> text .)
    intersect       reduce using rule 248 (TIPO -> text .)
    except          reduce using rule 248 (TIPO -> text .)
    order           reduce using rule 248 (TIPO -> text .)
    limit           reduce using rule 248 (TIPO -> text .)
    offset          reduce using rule 248 (TIPO -> text .)
    mas             reduce using rule 248 (TIPO -> text .)
    menos           reduce using rule 248 (TIPO -> text .)
    multiplicacion  reduce using rule 248 (TIPO -> text .)
    division        reduce using rule 248 (TIPO -> text .)
    modulo          reduce using rule 248 (TIPO -> text .)
    elevado         reduce using rule 248 (TIPO -> text .)
    and             reduce using rule 248 (TIPO -> text .)
    or              reduce using rule 248 (TIPO -> text .)
    mayor           reduce using rule 248 (TIPO -> text .)
    menor           reduce using rule 248 (TIPO -> text .)
    mayor_igual     reduce using rule 248 (TIPO -> text .)
    menor_igual     reduce using rule 248 (TIPO -> text .)
    diferente1      reduce using rule 248 (TIPO -> text .)
    diferente2      reduce using rule 248 (TIPO -> text .)
    between         reduce using rule 248 (TIPO -> text .)
    is              reduce using rule 248 (TIPO -> text .)
    isnull          reduce using rule 248 (TIPO -> text .)
    notnull         reduce using rule 248 (TIPO -> text .)
    as              reduce using rule 248 (TIPO -> text .)
    cadenaString    reduce using rule 248 (TIPO -> text .)
    id              reduce using rule 248 (TIPO -> text .)
    cadena          reduce using rule 248 (TIPO -> text .)
    in              reduce using rule 248 (TIPO -> text .)
    like            reduce using rule 248 (TIPO -> text .)
    then            reduce using rule 248 (TIPO -> text .)
    when            reduce using rule 248 (TIPO -> text .)
    parc            reduce using rule 248 (TIPO -> text .)
    end             reduce using rule 248 (TIPO -> text .)
    else            reduce using rule 248 (TIPO -> text .)
    constraint      reduce using rule 248 (TIPO -> text .)
    unique          reduce using rule 248 (TIPO -> text .)
    check           reduce using rule 248 (TIPO -> text .)
    null            reduce using rule 248 (TIPO -> text .)
    primary         reduce using rule 248 (TIPO -> text .)
    references      reduce using rule 248 (TIPO -> text .)
    asc             reduce using rule 248 (TIPO -> text .)
    desc            reduce using rule 248 (TIPO -> text .)


state 68

    (250) TIPO -> date .

    not             reduce using rule 250 (TIPO -> date .)
    default         reduce using rule 250 (TIPO -> date .)
    dospuntos       reduce using rule 250 (TIPO -> date .)
    igual           reduce using rule 250 (TIPO -> date .)
    ptcoma          reduce using rule 250 (TIPO -> date .)
    r_from          reduce using rule 250 (TIPO -> date .)
    coma            reduce using rule 250 (TIPO -> date .)
    where           reduce using rule 250 (TIPO -> date .)
    group           reduce using rule 250 (TIPO -> date .)
    having          reduce using rule 250 (TIPO -> date .)
    union           reduce using rule 250 (TIPO -> date .)
    intersect       reduce using rule 250 (TIPO -> date .)
    except          reduce using rule 250 (TIPO -> date .)
    order           reduce using rule 250 (TIPO -> date .)
    limit           reduce using rule 250 (TIPO -> date .)
    offset          reduce using rule 250 (TIPO -> date .)
    mas             reduce using rule 250 (TIPO -> date .)
    menos           reduce using rule 250 (TIPO -> date .)
    multiplicacion  reduce using rule 250 (TIPO -> date .)
    division        reduce using rule 250 (TIPO -> date .)
    modulo          reduce using rule 250 (TIPO -> date .)
    elevado         reduce using rule 250 (TIPO -> date .)
    and             reduce using rule 250 (TIPO -> date .)
    or              reduce using rule 250 (TIPO -> date .)
    mayor           reduce using rule 250 (TIPO -> date .)
    menor           reduce using rule 250 (TIPO -> date .)
    mayor_igual     reduce using rule 250 (TIPO -> date .)
    menor_igual     reduce using rule 250 (TIPO -> date .)
    diferente1      reduce using rule 250 (TIPO -> date .)
    diferente2      reduce using rule 250 (TIPO -> date .)
    between         reduce using rule 250 (TIPO -> date .)
    is              reduce using rule 250 (TIPO -> date .)
    isnull          reduce using rule 250 (TIPO -> date .)
    notnull         reduce using rule 250 (TIPO -> date .)
    as              reduce using rule 250 (TIPO -> date .)
    cadenaString    reduce using rule 250 (TIPO -> date .)
    id              reduce using rule 250 (TIPO -> date .)
    cadena          reduce using rule 250 (TIPO -> date .)
    in              reduce using rule 250 (TIPO -> date .)
    like            reduce using rule 250 (TIPO -> date .)
    then            reduce using rule 250 (TIPO -> date .)
    when            reduce using rule 250 (TIPO -> date .)
    parc            reduce using rule 250 (TIPO -> date .)
    end             reduce using rule 250 (TIPO -> date .)
    else            reduce using rule 250 (TIPO -> date .)
    constraint      reduce using rule 250 (TIPO -> date .)
    unique          reduce using rule 250 (TIPO -> date .)
    check           reduce using rule 250 (TIPO -> date .)
    null            reduce using rule 250 (TIPO -> date .)
    primary         reduce using rule 250 (TIPO -> date .)
    references      reduce using rule 250 (TIPO -> date .)
    asc             reduce using rule 250 (TIPO -> date .)
    desc            reduce using rule 250 (TIPO -> date .)


state 69

    (253) TIPO -> boolean .

    not             reduce using rule 253 (TIPO -> boolean .)
    default         reduce using rule 253 (TIPO -> boolean .)
    dospuntos       reduce using rule 253 (TIPO -> boolean .)
    igual           reduce using rule 253 (TIPO -> boolean .)
    ptcoma          reduce using rule 253 (TIPO -> boolean .)
    r_from          reduce using rule 253 (TIPO -> boolean .)
    coma            reduce using rule 253 (TIPO -> boolean .)
    where           reduce using rule 253 (TIPO -> boolean .)
    group           reduce using rule 253 (TIPO -> boolean .)
    having          reduce using rule 253 (TIPO -> boolean .)
    union           reduce using rule 253 (TIPO -> boolean .)
    intersect       reduce using rule 253 (TIPO -> boolean .)
    except          reduce using rule 253 (TIPO -> boolean .)
    order           reduce using rule 253 (TIPO -> boolean .)
    limit           reduce using rule 253 (TIPO -> boolean .)
    offset          reduce using rule 253 (TIPO -> boolean .)
    mas             reduce using rule 253 (TIPO -> boolean .)
    menos           reduce using rule 253 (TIPO -> boolean .)
    multiplicacion  reduce using rule 253 (TIPO -> boolean .)
    division        reduce using rule 253 (TIPO -> boolean .)
    modulo          reduce using rule 253 (TIPO -> boolean .)
    elevado         reduce using rule 253 (TIPO -> boolean .)
    and             reduce using rule 253 (TIPO -> boolean .)
    or              reduce using rule 253 (TIPO -> boolean .)
    mayor           reduce using rule 253 (TIPO -> boolean .)
    menor           reduce using rule 253 (TIPO -> boolean .)
    mayor_igual     reduce using rule 253 (TIPO -> boolean .)
    menor_igual     reduce using rule 253 (TIPO -> boolean .)
    diferente1      reduce using rule 253 (TIPO -> boolean .)
    diferente2      reduce using rule 253 (TIPO -> boolean .)
    between         reduce using rule 253 (TIPO -> boolean .)
    is              reduce using rule 253 (TIPO -> boolean .)
    isnull          reduce using rule 253 (TIPO -> boolean .)
    notnull         reduce using rule 253 (TIPO -> boolean .)
    as              reduce using rule 253 (TIPO -> boolean .)
    cadenaString    reduce using rule 253 (TIPO -> boolean .)
    id              reduce using rule 253 (TIPO -> boolean .)
    cadena          reduce using rule 253 (TIPO -> boolean .)
    in              reduce using rule 253 (TIPO -> boolean .)
    like            reduce using rule 253 (TIPO -> boolean .)
    then            reduce using rule 253 (TIPO -> boolean .)
    when            reduce using rule 253 (TIPO -> boolean .)
    parc            reduce using rule 253 (TIPO -> boolean .)
    end             reduce using rule 253 (TIPO -> boolean .)
    else            reduce using rule 253 (TIPO -> boolean .)
    constraint      reduce using rule 253 (TIPO -> boolean .)
    unique          reduce using rule 253 (TIPO -> boolean .)
    check           reduce using rule 253 (TIPO -> boolean .)
    null            reduce using rule 253 (TIPO -> boolean .)
    primary         reduce using rule 253 (TIPO -> boolean .)
    references      reduce using rule 253 (TIPO -> boolean .)
    asc             reduce using rule 253 (TIPO -> boolean .)
    desc            reduce using rule 253 (TIPO -> boolean .)


state 70

    (254) TIPO -> record .

    not             reduce using rule 254 (TIPO -> record .)
    default         reduce using rule 254 (TIPO -> record .)
    dospuntos       reduce using rule 254 (TIPO -> record .)
    igual           reduce using rule 254 (TIPO -> record .)
    ptcoma          reduce using rule 254 (TIPO -> record .)
    r_from          reduce using rule 254 (TIPO -> record .)
    coma            reduce using rule 254 (TIPO -> record .)
    where           reduce using rule 254 (TIPO -> record .)
    group           reduce using rule 254 (TIPO -> record .)
    having          reduce using rule 254 (TIPO -> record .)
    union           reduce using rule 254 (TIPO -> record .)
    intersect       reduce using rule 254 (TIPO -> record .)
    except          reduce using rule 254 (TIPO -> record .)
    order           reduce using rule 254 (TIPO -> record .)
    limit           reduce using rule 254 (TIPO -> record .)
    offset          reduce using rule 254 (TIPO -> record .)
    mas             reduce using rule 254 (TIPO -> record .)
    menos           reduce using rule 254 (TIPO -> record .)
    multiplicacion  reduce using rule 254 (TIPO -> record .)
    division        reduce using rule 254 (TIPO -> record .)
    modulo          reduce using rule 254 (TIPO -> record .)
    elevado         reduce using rule 254 (TIPO -> record .)
    and             reduce using rule 254 (TIPO -> record .)
    or              reduce using rule 254 (TIPO -> record .)
    mayor           reduce using rule 254 (TIPO -> record .)
    menor           reduce using rule 254 (TIPO -> record .)
    mayor_igual     reduce using rule 254 (TIPO -> record .)
    menor_igual     reduce using rule 254 (TIPO -> record .)
    diferente1      reduce using rule 254 (TIPO -> record .)
    diferente2      reduce using rule 254 (TIPO -> record .)
    between         reduce using rule 254 (TIPO -> record .)
    is              reduce using rule 254 (TIPO -> record .)
    isnull          reduce using rule 254 (TIPO -> record .)
    notnull         reduce using rule 254 (TIPO -> record .)
    as              reduce using rule 254 (TIPO -> record .)
    cadenaString    reduce using rule 254 (TIPO -> record .)
    id              reduce using rule 254 (TIPO -> record .)
    cadena          reduce using rule 254 (TIPO -> record .)
    in              reduce using rule 254 (TIPO -> record .)
    like            reduce using rule 254 (TIPO -> record .)
    then            reduce using rule 254 (TIPO -> record .)
    when            reduce using rule 254 (TIPO -> record .)
    parc            reduce using rule 254 (TIPO -> record .)
    end             reduce using rule 254 (TIPO -> record .)
    else            reduce using rule 254 (TIPO -> record .)
    constraint      reduce using rule 254 (TIPO -> record .)
    unique          reduce using rule 254 (TIPO -> record .)
    check           reduce using rule 254 (TIPO -> record .)
    null            reduce using rule 254 (TIPO -> record .)
    primary         reduce using rule 254 (TIPO -> record .)
    references      reduce using rule 254 (TIPO -> record .)
    asc             reduce using rule 254 (TIPO -> record .)
    desc            reduce using rule 254 (TIPO -> record .)


state 71

    (17) instruccion -> CREATEINDEX ptcoma .

    use             reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    select          reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    create          reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    update          reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    delete          reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    alter           reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    drop            reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    insert          reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    case            reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    show            reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    id              reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    if              reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)
    $end            reduce using rule 17 (instruccion -> CREATEINDEX ptcoma .)


state 72

    (18) instruccion -> CREATEINDEX WHERE . ptcoma

    ptcoma          shift and go to state 156


state 73

    (195) WHERE -> where . EXP
    (196) WHERE -> where . EXIST
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (216) EXIST -> . exist para SELECT parc
    (217) EXIST -> . not exist para SELECT parc
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 159
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    exist           shift and go to state 160
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 157
    EXIST                          shift and go to state 158
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 74

    (19) instruccion -> DECLARACIONES ptcoma .

    use             reduce using rule 19 (instruccion -> DECLARACIONES ptcoma .)
    select          reduce using rule 19 (instruccion -> DECLARACIONES ptcoma .)
    create          reduce using rule 19 (instruccion -> DECLARACIONES ptcoma .)
    update          reduce using rule 19 (instruccion -> DECLARACIONES ptcoma .)
    delete          reduce using rule 19 (instruccion -> DECLARACIONES ptcoma .)
    alter           reduce using rule 19 (instruccion -> DECLARACIONES ptcoma .)
    drop            reduce using rule 19 (instruccion -> DECLARACIONES ptcoma .)
    insert          reduce using rule 19 (instruccion -> DECLARACIONES ptcoma .)
    case            reduce using rule 19 (instruccion -> DECLARACIONES ptcoma .)
    show            reduce using rule 19 (instruccion -> DECLARACIONES ptcoma .)
    id              reduce using rule 19 (instruccion -> DECLARACIONES ptcoma .)
    if              reduce using rule 19 (instruccion -> DECLARACIONES ptcoma .)
    $end            reduce using rule 19 (instruccion -> DECLARACIONES ptcoma .)


state 75

    (20) instruccion -> ASIGNACION ptcoma .

    use             reduce using rule 20 (instruccion -> ASIGNACION ptcoma .)
    select          reduce using rule 20 (instruccion -> ASIGNACION ptcoma .)
    create          reduce using rule 20 (instruccion -> ASIGNACION ptcoma .)
    update          reduce using rule 20 (instruccion -> ASIGNACION ptcoma .)
    delete          reduce using rule 20 (instruccion -> ASIGNACION ptcoma .)
    alter           reduce using rule 20 (instruccion -> ASIGNACION ptcoma .)
    drop            reduce using rule 20 (instruccion -> ASIGNACION ptcoma .)
    insert          reduce using rule 20 (instruccion -> ASIGNACION ptcoma .)
    case            reduce using rule 20 (instruccion -> ASIGNACION ptcoma .)
    show            reduce using rule 20 (instruccion -> ASIGNACION ptcoma .)
    id              reduce using rule 20 (instruccion -> ASIGNACION ptcoma .)
    if              reduce using rule 20 (instruccion -> ASIGNACION ptcoma .)
    $end            reduce using rule 20 (instruccion -> ASIGNACION ptcoma .)


state 76

    (21) instruccion -> CONDICIONIF ptcoma .

    use             reduce using rule 21 (instruccion -> CONDICIONIF ptcoma .)
    select          reduce using rule 21 (instruccion -> CONDICIONIF ptcoma .)
    create          reduce using rule 21 (instruccion -> CONDICIONIF ptcoma .)
    update          reduce using rule 21 (instruccion -> CONDICIONIF ptcoma .)
    delete          reduce using rule 21 (instruccion -> CONDICIONIF ptcoma .)
    alter           reduce using rule 21 (instruccion -> CONDICIONIF ptcoma .)
    drop            reduce using rule 21 (instruccion -> CONDICIONIF ptcoma .)
    insert          reduce using rule 21 (instruccion -> CONDICIONIF ptcoma .)
    case            reduce using rule 21 (instruccion -> CONDICIONIF ptcoma .)
    show            reduce using rule 21 (instruccion -> CONDICIONIF ptcoma .)
    id              reduce using rule 21 (instruccion -> CONDICIONIF ptcoma .)
    if              reduce using rule 21 (instruccion -> CONDICIONIF ptcoma .)
    $end            reduce using rule 21 (instruccion -> CONDICIONIF ptcoma .)


state 77

    (184) SELECT -> select distinct . LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 161
    EXP                            shift and go to state 79
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 78

    (185) SELECT -> select LEXP . r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> select LEXP . WHERE GROUP HAVING COMBINING ORDER LIMIT
    (218) LEXP -> LEXP . coma EXP
    (195) WHERE -> . where EXP
    (196) WHERE -> . where EXIST
    (197) WHERE -> .

  ! shift/reduce conflict for r_from resolved as shift
  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for where resolved as shift
    r_from          shift and go to state 162
    coma            shift and go to state 164
    where           shift and go to state 73
    group           reduce using rule 197 (WHERE -> .)
    having          reduce using rule 197 (WHERE -> .)
    union           reduce using rule 197 (WHERE -> .)
    intersect       reduce using rule 197 (WHERE -> .)
    except          reduce using rule 197 (WHERE -> .)
    order           reduce using rule 197 (WHERE -> .)
    limit           reduce using rule 197 (WHERE -> .)
    offset          reduce using rule 197 (WHERE -> .)
    ptcoma          reduce using rule 197 (WHERE -> .)
    mas             reduce using rule 197 (WHERE -> .)
    menos           reduce using rule 197 (WHERE -> .)
    multiplicacion  reduce using rule 197 (WHERE -> .)
    division        reduce using rule 197 (WHERE -> .)
    modulo          reduce using rule 197 (WHERE -> .)
    elevado         reduce using rule 197 (WHERE -> .)
    and             reduce using rule 197 (WHERE -> .)
    or              reduce using rule 197 (WHERE -> .)
    mayor           reduce using rule 197 (WHERE -> .)
    menor           reduce using rule 197 (WHERE -> .)
    mayor_igual     reduce using rule 197 (WHERE -> .)
    menor_igual     reduce using rule 197 (WHERE -> .)
    igual           reduce using rule 197 (WHERE -> .)
    diferente1      reduce using rule 197 (WHERE -> .)
    diferente2      reduce using rule 197 (WHERE -> .)
    between         reduce using rule 197 (WHERE -> .)
    is              reduce using rule 197 (WHERE -> .)
    isnull          reduce using rule 197 (WHERE -> .)
    notnull         reduce using rule 197 (WHERE -> .)
    as              reduce using rule 197 (WHERE -> .)
    cadenaString    reduce using rule 197 (WHERE -> .)
    id              reduce using rule 197 (WHERE -> .)
    cadena          reduce using rule 197 (WHERE -> .)
    in              reduce using rule 197 (WHERE -> .)
    not             reduce using rule 197 (WHERE -> .)
    like            reduce using rule 197 (WHERE -> .)
    then            reduce using rule 197 (WHERE -> .)
    when            reduce using rule 197 (WHERE -> .)
    parc            reduce using rule 197 (WHERE -> .)
    end             reduce using rule 197 (WHERE -> .)
    else            reduce using rule 197 (WHERE -> .)
    constraint      reduce using rule 197 (WHERE -> .)
    unique          reduce using rule 197 (WHERE -> .)
    check           reduce using rule 197 (WHERE -> .)
    default         reduce using rule 197 (WHERE -> .)
    null            reduce using rule 197 (WHERE -> .)
    primary         reduce using rule 197 (WHERE -> .)
    references      reduce using rule 197 (WHERE -> .)
    asc             reduce using rule 197 (WHERE -> .)
    desc            reduce using rule 197 (WHERE -> .)

  ! r_from          [ reduce using rule 197 (WHERE -> .) ]
  ! coma            [ reduce using rule 197 (WHERE -> .) ]
  ! where           [ reduce using rule 197 (WHERE -> .) ]

    WHERE                          shift and go to state 163

state 79

    (219) LEXP -> EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    r_from          reduce using rule 219 (LEXP -> EXP .)
    coma            reduce using rule 219 (LEXP -> EXP .)
    where           reduce using rule 219 (LEXP -> EXP .)
    group           reduce using rule 219 (LEXP -> EXP .)
    having          reduce using rule 219 (LEXP -> EXP .)
    union           reduce using rule 219 (LEXP -> EXP .)
    intersect       reduce using rule 219 (LEXP -> EXP .)
    except          reduce using rule 219 (LEXP -> EXP .)
    order           reduce using rule 219 (LEXP -> EXP .)
    limit           reduce using rule 219 (LEXP -> EXP .)
    offset          reduce using rule 219 (LEXP -> EXP .)
    ptcoma          reduce using rule 219 (LEXP -> EXP .)
    then            reduce using rule 219 (LEXP -> EXP .)
    when            reduce using rule 219 (LEXP -> EXP .)
    parc            reduce using rule 219 (LEXP -> EXP .)
    end             reduce using rule 219 (LEXP -> EXP .)
    else            reduce using rule 219 (LEXP -> EXP .)
    constraint      reduce using rule 219 (LEXP -> EXP .)
    unique          reduce using rule 219 (LEXP -> EXP .)
    check           reduce using rule 219 (LEXP -> EXP .)
    default         reduce using rule 219 (LEXP -> EXP .)
    null            reduce using rule 219 (LEXP -> EXP .)
    primary         reduce using rule 219 (LEXP -> EXP .)
    references      reduce using rule 219 (LEXP -> EXP .)
    asc             reduce using rule 219 (LEXP -> EXP .)
    desc            reduce using rule 219 (LEXP -> EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170
    and             shift and go to state 171
    or              shift and go to state 172
    mayor           shift and go to state 173
    menor           shift and go to state 174
    mayor_igual     shift and go to state 175
    menor_igual     shift and go to state 176
    igual           shift and go to state 177
    diferente1      shift and go to state 178
    diferente2      shift and go to state 179
    between         shift and go to state 180
    is              shift and go to state 181
    isnull          shift and go to state 183
    notnull         shift and go to state 184
    as              shift and go to state 185
    cadenaString    shift and go to state 186
    id              shift and go to state 187
    cadena          shift and go to state 188
    in              shift and go to state 189
    not             shift and go to state 182
    like            shift and go to state 190

  ! mas             [ reduce using rule 219 (LEXP -> EXP .) ]
  ! menos           [ reduce using rule 219 (LEXP -> EXP .) ]
  ! multiplicacion  [ reduce using rule 219 (LEXP -> EXP .) ]
  ! division        [ reduce using rule 219 (LEXP -> EXP .) ]
  ! modulo          [ reduce using rule 219 (LEXP -> EXP .) ]
  ! elevado         [ reduce using rule 219 (LEXP -> EXP .) ]
  ! and             [ reduce using rule 219 (LEXP -> EXP .) ]
  ! or              [ reduce using rule 219 (LEXP -> EXP .) ]
  ! mayor           [ reduce using rule 219 (LEXP -> EXP .) ]
  ! menor           [ reduce using rule 219 (LEXP -> EXP .) ]
  ! mayor_igual     [ reduce using rule 219 (LEXP -> EXP .) ]
  ! menor_igual     [ reduce using rule 219 (LEXP -> EXP .) ]
  ! igual           [ reduce using rule 219 (LEXP -> EXP .) ]
  ! diferente1      [ reduce using rule 219 (LEXP -> EXP .) ]
  ! diferente2      [ reduce using rule 219 (LEXP -> EXP .) ]
  ! between         [ reduce using rule 219 (LEXP -> EXP .) ]
  ! is              [ reduce using rule 219 (LEXP -> EXP .) ]
  ! isnull          [ reduce using rule 219 (LEXP -> EXP .) ]
  ! notnull         [ reduce using rule 219 (LEXP -> EXP .) ]
  ! as              [ reduce using rule 219 (LEXP -> EXP .) ]
  ! cadenaString    [ reduce using rule 219 (LEXP -> EXP .) ]
  ! id              [ reduce using rule 219 (LEXP -> EXP .) ]
  ! cadena          [ reduce using rule 219 (LEXP -> EXP .) ]
  ! in              [ reduce using rule 219 (LEXP -> EXP .) ]
  ! not             [ reduce using rule 219 (LEXP -> EXP .) ]
  ! like            [ reduce using rule 219 (LEXP -> EXP .) ]


state 80

    (299) EXP -> mas . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 191
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 81

    (300) EXP -> menos . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 192
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 82

    (327) EXP -> multiplicacion .

    r_from          reduce using rule 327 (EXP -> multiplicacion .)
    coma            reduce using rule 327 (EXP -> multiplicacion .)
    where           reduce using rule 327 (EXP -> multiplicacion .)
    group           reduce using rule 327 (EXP -> multiplicacion .)
    having          reduce using rule 327 (EXP -> multiplicacion .)
    union           reduce using rule 327 (EXP -> multiplicacion .)
    intersect       reduce using rule 327 (EXP -> multiplicacion .)
    except          reduce using rule 327 (EXP -> multiplicacion .)
    order           reduce using rule 327 (EXP -> multiplicacion .)
    limit           reduce using rule 327 (EXP -> multiplicacion .)
    offset          reduce using rule 327 (EXP -> multiplicacion .)
    ptcoma          reduce using rule 327 (EXP -> multiplicacion .)
    mas             reduce using rule 327 (EXP -> multiplicacion .)
    menos           reduce using rule 327 (EXP -> multiplicacion .)
    multiplicacion  reduce using rule 327 (EXP -> multiplicacion .)
    division        reduce using rule 327 (EXP -> multiplicacion .)
    modulo          reduce using rule 327 (EXP -> multiplicacion .)
    elevado         reduce using rule 327 (EXP -> multiplicacion .)
    and             reduce using rule 327 (EXP -> multiplicacion .)
    or              reduce using rule 327 (EXP -> multiplicacion .)
    mayor           reduce using rule 327 (EXP -> multiplicacion .)
    menor           reduce using rule 327 (EXP -> multiplicacion .)
    mayor_igual     reduce using rule 327 (EXP -> multiplicacion .)
    menor_igual     reduce using rule 327 (EXP -> multiplicacion .)
    igual           reduce using rule 327 (EXP -> multiplicacion .)
    diferente1      reduce using rule 327 (EXP -> multiplicacion .)
    diferente2      reduce using rule 327 (EXP -> multiplicacion .)
    between         reduce using rule 327 (EXP -> multiplicacion .)
    is              reduce using rule 327 (EXP -> multiplicacion .)
    isnull          reduce using rule 327 (EXP -> multiplicacion .)
    notnull         reduce using rule 327 (EXP -> multiplicacion .)
    as              reduce using rule 327 (EXP -> multiplicacion .)
    cadenaString    reduce using rule 327 (EXP -> multiplicacion .)
    id              reduce using rule 327 (EXP -> multiplicacion .)
    cadena          reduce using rule 327 (EXP -> multiplicacion .)
    in              reduce using rule 327 (EXP -> multiplicacion .)
    not             reduce using rule 327 (EXP -> multiplicacion .)
    like            reduce using rule 327 (EXP -> multiplicacion .)
    then            reduce using rule 327 (EXP -> multiplicacion .)
    when            reduce using rule 327 (EXP -> multiplicacion .)
    parc            reduce using rule 327 (EXP -> multiplicacion .)
    end             reduce using rule 327 (EXP -> multiplicacion .)
    else            reduce using rule 327 (EXP -> multiplicacion .)
    constraint      reduce using rule 327 (EXP -> multiplicacion .)
    unique          reduce using rule 327 (EXP -> multiplicacion .)
    check           reduce using rule 327 (EXP -> multiplicacion .)
    default         reduce using rule 327 (EXP -> multiplicacion .)
    null            reduce using rule 327 (EXP -> multiplicacion .)
    primary         reduce using rule 327 (EXP -> multiplicacion .)
    references      reduce using rule 327 (EXP -> multiplicacion .)
    asc             reduce using rule 327 (EXP -> multiplicacion .)
    desc            reduce using rule 327 (EXP -> multiplicacion .)


state 83

    (301) EXP -> not . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 193
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 84

    (328) EXP -> null .

    r_from          reduce using rule 328 (EXP -> null .)
    coma            reduce using rule 328 (EXP -> null .)
    where           reduce using rule 328 (EXP -> null .)
    group           reduce using rule 328 (EXP -> null .)
    having          reduce using rule 328 (EXP -> null .)
    union           reduce using rule 328 (EXP -> null .)
    intersect       reduce using rule 328 (EXP -> null .)
    except          reduce using rule 328 (EXP -> null .)
    order           reduce using rule 328 (EXP -> null .)
    limit           reduce using rule 328 (EXP -> null .)
    offset          reduce using rule 328 (EXP -> null .)
    ptcoma          reduce using rule 328 (EXP -> null .)
    mas             reduce using rule 328 (EXP -> null .)
    menos           reduce using rule 328 (EXP -> null .)
    multiplicacion  reduce using rule 328 (EXP -> null .)
    division        reduce using rule 328 (EXP -> null .)
    modulo          reduce using rule 328 (EXP -> null .)
    elevado         reduce using rule 328 (EXP -> null .)
    and             reduce using rule 328 (EXP -> null .)
    or              reduce using rule 328 (EXP -> null .)
    mayor           reduce using rule 328 (EXP -> null .)
    menor           reduce using rule 328 (EXP -> null .)
    mayor_igual     reduce using rule 328 (EXP -> null .)
    menor_igual     reduce using rule 328 (EXP -> null .)
    igual           reduce using rule 328 (EXP -> null .)
    diferente1      reduce using rule 328 (EXP -> null .)
    diferente2      reduce using rule 328 (EXP -> null .)
    between         reduce using rule 328 (EXP -> null .)
    is              reduce using rule 328 (EXP -> null .)
    isnull          reduce using rule 328 (EXP -> null .)
    notnull         reduce using rule 328 (EXP -> null .)
    as              reduce using rule 328 (EXP -> null .)
    cadenaString    reduce using rule 328 (EXP -> null .)
    id              reduce using rule 328 (EXP -> null .)
    cadena          reduce using rule 328 (EXP -> null .)
    in              reduce using rule 328 (EXP -> null .)
    not             reduce using rule 328 (EXP -> null .)
    like            reduce using rule 328 (EXP -> null .)
    then            reduce using rule 328 (EXP -> null .)
    when            reduce using rule 328 (EXP -> null .)
    parc            reduce using rule 328 (EXP -> null .)
    end             reduce using rule 328 (EXP -> null .)
    else            reduce using rule 328 (EXP -> null .)
    constraint      reduce using rule 328 (EXP -> null .)
    unique          reduce using rule 328 (EXP -> null .)
    check           reduce using rule 328 (EXP -> null .)
    default         reduce using rule 328 (EXP -> null .)
    null            reduce using rule 328 (EXP -> null .)
    primary         reduce using rule 328 (EXP -> null .)
    references      reduce using rule 328 (EXP -> null .)
    asc             reduce using rule 328 (EXP -> null .)
    desc            reduce using rule 328 (EXP -> null .)


state 85

    (324) EXP -> true .

    r_from          reduce using rule 324 (EXP -> true .)
    coma            reduce using rule 324 (EXP -> true .)
    where           reduce using rule 324 (EXP -> true .)
    group           reduce using rule 324 (EXP -> true .)
    having          reduce using rule 324 (EXP -> true .)
    union           reduce using rule 324 (EXP -> true .)
    intersect       reduce using rule 324 (EXP -> true .)
    except          reduce using rule 324 (EXP -> true .)
    order           reduce using rule 324 (EXP -> true .)
    limit           reduce using rule 324 (EXP -> true .)
    offset          reduce using rule 324 (EXP -> true .)
    ptcoma          reduce using rule 324 (EXP -> true .)
    mas             reduce using rule 324 (EXP -> true .)
    menos           reduce using rule 324 (EXP -> true .)
    multiplicacion  reduce using rule 324 (EXP -> true .)
    division        reduce using rule 324 (EXP -> true .)
    modulo          reduce using rule 324 (EXP -> true .)
    elevado         reduce using rule 324 (EXP -> true .)
    and             reduce using rule 324 (EXP -> true .)
    or              reduce using rule 324 (EXP -> true .)
    mayor           reduce using rule 324 (EXP -> true .)
    menor           reduce using rule 324 (EXP -> true .)
    mayor_igual     reduce using rule 324 (EXP -> true .)
    menor_igual     reduce using rule 324 (EXP -> true .)
    igual           reduce using rule 324 (EXP -> true .)
    diferente1      reduce using rule 324 (EXP -> true .)
    diferente2      reduce using rule 324 (EXP -> true .)
    between         reduce using rule 324 (EXP -> true .)
    is              reduce using rule 324 (EXP -> true .)
    isnull          reduce using rule 324 (EXP -> true .)
    notnull         reduce using rule 324 (EXP -> true .)
    as              reduce using rule 324 (EXP -> true .)
    cadenaString    reduce using rule 324 (EXP -> true .)
    id              reduce using rule 324 (EXP -> true .)
    cadena          reduce using rule 324 (EXP -> true .)
    in              reduce using rule 324 (EXP -> true .)
    not             reduce using rule 324 (EXP -> true .)
    like            reduce using rule 324 (EXP -> true .)
    then            reduce using rule 324 (EXP -> true .)
    when            reduce using rule 324 (EXP -> true .)
    parc            reduce using rule 324 (EXP -> true .)
    end             reduce using rule 324 (EXP -> true .)
    else            reduce using rule 324 (EXP -> true .)
    constraint      reduce using rule 324 (EXP -> true .)
    unique          reduce using rule 324 (EXP -> true .)
    check           reduce using rule 324 (EXP -> true .)
    default         reduce using rule 324 (EXP -> true .)
    null            reduce using rule 324 (EXP -> true .)
    primary         reduce using rule 324 (EXP -> true .)
    references      reduce using rule 324 (EXP -> true .)
    asc             reduce using rule 324 (EXP -> true .)
    desc            reduce using rule 324 (EXP -> true .)


state 86

    (325) EXP -> false .

    r_from          reduce using rule 325 (EXP -> false .)
    coma            reduce using rule 325 (EXP -> false .)
    where           reduce using rule 325 (EXP -> false .)
    group           reduce using rule 325 (EXP -> false .)
    having          reduce using rule 325 (EXP -> false .)
    union           reduce using rule 325 (EXP -> false .)
    intersect       reduce using rule 325 (EXP -> false .)
    except          reduce using rule 325 (EXP -> false .)
    order           reduce using rule 325 (EXP -> false .)
    limit           reduce using rule 325 (EXP -> false .)
    offset          reduce using rule 325 (EXP -> false .)
    ptcoma          reduce using rule 325 (EXP -> false .)
    mas             reduce using rule 325 (EXP -> false .)
    menos           reduce using rule 325 (EXP -> false .)
    multiplicacion  reduce using rule 325 (EXP -> false .)
    division        reduce using rule 325 (EXP -> false .)
    modulo          reduce using rule 325 (EXP -> false .)
    elevado         reduce using rule 325 (EXP -> false .)
    and             reduce using rule 325 (EXP -> false .)
    or              reduce using rule 325 (EXP -> false .)
    mayor           reduce using rule 325 (EXP -> false .)
    menor           reduce using rule 325 (EXP -> false .)
    mayor_igual     reduce using rule 325 (EXP -> false .)
    menor_igual     reduce using rule 325 (EXP -> false .)
    igual           reduce using rule 325 (EXP -> false .)
    diferente1      reduce using rule 325 (EXP -> false .)
    diferente2      reduce using rule 325 (EXP -> false .)
    between         reduce using rule 325 (EXP -> false .)
    is              reduce using rule 325 (EXP -> false .)
    isnull          reduce using rule 325 (EXP -> false .)
    notnull         reduce using rule 325 (EXP -> false .)
    as              reduce using rule 325 (EXP -> false .)
    cadenaString    reduce using rule 325 (EXP -> false .)
    id              reduce using rule 325 (EXP -> false .)
    cadena          reduce using rule 325 (EXP -> false .)
    in              reduce using rule 325 (EXP -> false .)
    not             reduce using rule 325 (EXP -> false .)
    like            reduce using rule 325 (EXP -> false .)
    then            reduce using rule 325 (EXP -> false .)
    when            reduce using rule 325 (EXP -> false .)
    parc            reduce using rule 325 (EXP -> false .)
    end             reduce using rule 325 (EXP -> false .)
    else            reduce using rule 325 (EXP -> false .)
    constraint      reduce using rule 325 (EXP -> false .)
    unique          reduce using rule 325 (EXP -> false .)
    check           reduce using rule 325 (EXP -> false .)
    default         reduce using rule 325 (EXP -> false .)
    null            reduce using rule 325 (EXP -> false .)
    primary         reduce using rule 325 (EXP -> false .)
    references      reduce using rule 325 (EXP -> false .)
    asc             reduce using rule 325 (EXP -> false .)
    desc            reduce using rule 325 (EXP -> false .)


state 87

    (323) EXP -> cadenaString .

    r_from          reduce using rule 323 (EXP -> cadenaString .)
    coma            reduce using rule 323 (EXP -> cadenaString .)
    where           reduce using rule 323 (EXP -> cadenaString .)
    group           reduce using rule 323 (EXP -> cadenaString .)
    having          reduce using rule 323 (EXP -> cadenaString .)
    union           reduce using rule 323 (EXP -> cadenaString .)
    intersect       reduce using rule 323 (EXP -> cadenaString .)
    except          reduce using rule 323 (EXP -> cadenaString .)
    order           reduce using rule 323 (EXP -> cadenaString .)
    limit           reduce using rule 323 (EXP -> cadenaString .)
    offset          reduce using rule 323 (EXP -> cadenaString .)
    ptcoma          reduce using rule 323 (EXP -> cadenaString .)
    mas             reduce using rule 323 (EXP -> cadenaString .)
    menos           reduce using rule 323 (EXP -> cadenaString .)
    multiplicacion  reduce using rule 323 (EXP -> cadenaString .)
    division        reduce using rule 323 (EXP -> cadenaString .)
    modulo          reduce using rule 323 (EXP -> cadenaString .)
    elevado         reduce using rule 323 (EXP -> cadenaString .)
    and             reduce using rule 323 (EXP -> cadenaString .)
    or              reduce using rule 323 (EXP -> cadenaString .)
    mayor           reduce using rule 323 (EXP -> cadenaString .)
    menor           reduce using rule 323 (EXP -> cadenaString .)
    mayor_igual     reduce using rule 323 (EXP -> cadenaString .)
    menor_igual     reduce using rule 323 (EXP -> cadenaString .)
    igual           reduce using rule 323 (EXP -> cadenaString .)
    diferente1      reduce using rule 323 (EXP -> cadenaString .)
    diferente2      reduce using rule 323 (EXP -> cadenaString .)
    between         reduce using rule 323 (EXP -> cadenaString .)
    is              reduce using rule 323 (EXP -> cadenaString .)
    isnull          reduce using rule 323 (EXP -> cadenaString .)
    notnull         reduce using rule 323 (EXP -> cadenaString .)
    as              reduce using rule 323 (EXP -> cadenaString .)
    cadenaString    reduce using rule 323 (EXP -> cadenaString .)
    id              reduce using rule 323 (EXP -> cadenaString .)
    cadena          reduce using rule 323 (EXP -> cadenaString .)
    in              reduce using rule 323 (EXP -> cadenaString .)
    not             reduce using rule 323 (EXP -> cadenaString .)
    like            reduce using rule 323 (EXP -> cadenaString .)
    then            reduce using rule 323 (EXP -> cadenaString .)
    when            reduce using rule 323 (EXP -> cadenaString .)
    parc            reduce using rule 323 (EXP -> cadenaString .)
    end             reduce using rule 323 (EXP -> cadenaString .)
    else            reduce using rule 323 (EXP -> cadenaString .)
    constraint      reduce using rule 323 (EXP -> cadenaString .)
    unique          reduce using rule 323 (EXP -> cadenaString .)
    check           reduce using rule 323 (EXP -> cadenaString .)
    default         reduce using rule 323 (EXP -> cadenaString .)
    null            reduce using rule 323 (EXP -> cadenaString .)
    primary         reduce using rule 323 (EXP -> cadenaString .)
    references      reduce using rule 323 (EXP -> cadenaString .)
    asc             reduce using rule 323 (EXP -> cadenaString .)
    desc            reduce using rule 323 (EXP -> cadenaString .)


state 88

    (314) EXP -> id . para LEXP parc
    (315) EXP -> id . para parc
    (326) EXP -> id .

    para            shift and go to state 194
    r_from          reduce using rule 326 (EXP -> id .)
    coma            reduce using rule 326 (EXP -> id .)
    where           reduce using rule 326 (EXP -> id .)
    group           reduce using rule 326 (EXP -> id .)
    having          reduce using rule 326 (EXP -> id .)
    union           reduce using rule 326 (EXP -> id .)
    intersect       reduce using rule 326 (EXP -> id .)
    except          reduce using rule 326 (EXP -> id .)
    order           reduce using rule 326 (EXP -> id .)
    limit           reduce using rule 326 (EXP -> id .)
    offset          reduce using rule 326 (EXP -> id .)
    ptcoma          reduce using rule 326 (EXP -> id .)
    mas             reduce using rule 326 (EXP -> id .)
    menos           reduce using rule 326 (EXP -> id .)
    multiplicacion  reduce using rule 326 (EXP -> id .)
    division        reduce using rule 326 (EXP -> id .)
    modulo          reduce using rule 326 (EXP -> id .)
    elevado         reduce using rule 326 (EXP -> id .)
    and             reduce using rule 326 (EXP -> id .)
    or              reduce using rule 326 (EXP -> id .)
    mayor           reduce using rule 326 (EXP -> id .)
    menor           reduce using rule 326 (EXP -> id .)
    mayor_igual     reduce using rule 326 (EXP -> id .)
    menor_igual     reduce using rule 326 (EXP -> id .)
    igual           reduce using rule 326 (EXP -> id .)
    diferente1      reduce using rule 326 (EXP -> id .)
    diferente2      reduce using rule 326 (EXP -> id .)
    between         reduce using rule 326 (EXP -> id .)
    is              reduce using rule 326 (EXP -> id .)
    isnull          reduce using rule 326 (EXP -> id .)
    notnull         reduce using rule 326 (EXP -> id .)
    as              reduce using rule 326 (EXP -> id .)
    cadenaString    reduce using rule 326 (EXP -> id .)
    id              reduce using rule 326 (EXP -> id .)
    cadena          reduce using rule 326 (EXP -> id .)
    in              reduce using rule 326 (EXP -> id .)
    not             reduce using rule 326 (EXP -> id .)
    like            reduce using rule 326 (EXP -> id .)
    then            reduce using rule 326 (EXP -> id .)
    when            reduce using rule 326 (EXP -> id .)
    parc            reduce using rule 326 (EXP -> id .)
    end             reduce using rule 326 (EXP -> id .)
    else            reduce using rule 326 (EXP -> id .)
    constraint      reduce using rule 326 (EXP -> id .)
    unique          reduce using rule 326 (EXP -> id .)
    check           reduce using rule 326 (EXP -> id .)
    default         reduce using rule 326 (EXP -> id .)
    null            reduce using rule 326 (EXP -> id .)
    primary         reduce using rule 326 (EXP -> id .)
    references      reduce using rule 326 (EXP -> id .)
    asc             reduce using rule 326 (EXP -> id .)
    desc            reduce using rule 326 (EXP -> id .)


state 89

    (322) EXP -> cadena .
    (333) EXP -> cadena . as TIPO

  ! shift/reduce conflict for as resolved as shift
    r_from          reduce using rule 322 (EXP -> cadena .)
    coma            reduce using rule 322 (EXP -> cadena .)
    where           reduce using rule 322 (EXP -> cadena .)
    group           reduce using rule 322 (EXP -> cadena .)
    having          reduce using rule 322 (EXP -> cadena .)
    union           reduce using rule 322 (EXP -> cadena .)
    intersect       reduce using rule 322 (EXP -> cadena .)
    except          reduce using rule 322 (EXP -> cadena .)
    order           reduce using rule 322 (EXP -> cadena .)
    limit           reduce using rule 322 (EXP -> cadena .)
    offset          reduce using rule 322 (EXP -> cadena .)
    ptcoma          reduce using rule 322 (EXP -> cadena .)
    mas             reduce using rule 322 (EXP -> cadena .)
    menos           reduce using rule 322 (EXP -> cadena .)
    multiplicacion  reduce using rule 322 (EXP -> cadena .)
    division        reduce using rule 322 (EXP -> cadena .)
    modulo          reduce using rule 322 (EXP -> cadena .)
    elevado         reduce using rule 322 (EXP -> cadena .)
    and             reduce using rule 322 (EXP -> cadena .)
    or              reduce using rule 322 (EXP -> cadena .)
    mayor           reduce using rule 322 (EXP -> cadena .)
    menor           reduce using rule 322 (EXP -> cadena .)
    mayor_igual     reduce using rule 322 (EXP -> cadena .)
    menor_igual     reduce using rule 322 (EXP -> cadena .)
    igual           reduce using rule 322 (EXP -> cadena .)
    diferente1      reduce using rule 322 (EXP -> cadena .)
    diferente2      reduce using rule 322 (EXP -> cadena .)
    between         reduce using rule 322 (EXP -> cadena .)
    is              reduce using rule 322 (EXP -> cadena .)
    isnull          reduce using rule 322 (EXP -> cadena .)
    notnull         reduce using rule 322 (EXP -> cadena .)
    cadenaString    reduce using rule 322 (EXP -> cadena .)
    id              reduce using rule 322 (EXP -> cadena .)
    cadena          reduce using rule 322 (EXP -> cadena .)
    in              reduce using rule 322 (EXP -> cadena .)
    not             reduce using rule 322 (EXP -> cadena .)
    like            reduce using rule 322 (EXP -> cadena .)
    then            reduce using rule 322 (EXP -> cadena .)
    when            reduce using rule 322 (EXP -> cadena .)
    parc            reduce using rule 322 (EXP -> cadena .)
    end             reduce using rule 322 (EXP -> cadena .)
    else            reduce using rule 322 (EXP -> cadena .)
    constraint      reduce using rule 322 (EXP -> cadena .)
    unique          reduce using rule 322 (EXP -> cadena .)
    check           reduce using rule 322 (EXP -> cadena .)
    default         reduce using rule 322 (EXP -> cadena .)
    null            reduce using rule 322 (EXP -> cadena .)
    primary         reduce using rule 322 (EXP -> cadena .)
    references      reduce using rule 322 (EXP -> cadena .)
    asc             reduce using rule 322 (EXP -> cadena .)
    desc            reduce using rule 322 (EXP -> cadena .)
    as              shift and go to state 195

  ! as              [ reduce using rule 322 (EXP -> cadena .) ]


state 90

    (312) EXP -> para . EXP parc
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 196
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 91

    (311) EXP -> SELECT .

    r_from          reduce using rule 311 (EXP -> SELECT .)
    coma            reduce using rule 311 (EXP -> SELECT .)
    where           reduce using rule 311 (EXP -> SELECT .)
    group           reduce using rule 311 (EXP -> SELECT .)
    having          reduce using rule 311 (EXP -> SELECT .)
    union           reduce using rule 311 (EXP -> SELECT .)
    intersect       reduce using rule 311 (EXP -> SELECT .)
    except          reduce using rule 311 (EXP -> SELECT .)
    order           reduce using rule 311 (EXP -> SELECT .)
    limit           reduce using rule 311 (EXP -> SELECT .)
    offset          reduce using rule 311 (EXP -> SELECT .)
    ptcoma          reduce using rule 311 (EXP -> SELECT .)
    mas             reduce using rule 311 (EXP -> SELECT .)
    menos           reduce using rule 311 (EXP -> SELECT .)
    multiplicacion  reduce using rule 311 (EXP -> SELECT .)
    division        reduce using rule 311 (EXP -> SELECT .)
    modulo          reduce using rule 311 (EXP -> SELECT .)
    elevado         reduce using rule 311 (EXP -> SELECT .)
    and             reduce using rule 311 (EXP -> SELECT .)
    or              reduce using rule 311 (EXP -> SELECT .)
    mayor           reduce using rule 311 (EXP -> SELECT .)
    menor           reduce using rule 311 (EXP -> SELECT .)
    mayor_igual     reduce using rule 311 (EXP -> SELECT .)
    menor_igual     reduce using rule 311 (EXP -> SELECT .)
    igual           reduce using rule 311 (EXP -> SELECT .)
    diferente1      reduce using rule 311 (EXP -> SELECT .)
    diferente2      reduce using rule 311 (EXP -> SELECT .)
    between         reduce using rule 311 (EXP -> SELECT .)
    is              reduce using rule 311 (EXP -> SELECT .)
    isnull          reduce using rule 311 (EXP -> SELECT .)
    notnull         reduce using rule 311 (EXP -> SELECT .)
    as              reduce using rule 311 (EXP -> SELECT .)
    cadenaString    reduce using rule 311 (EXP -> SELECT .)
    id              reduce using rule 311 (EXP -> SELECT .)
    cadena          reduce using rule 311 (EXP -> SELECT .)
    in              reduce using rule 311 (EXP -> SELECT .)
    not             reduce using rule 311 (EXP -> SELECT .)
    like            reduce using rule 311 (EXP -> SELECT .)
    then            reduce using rule 311 (EXP -> SELECT .)
    when            reduce using rule 311 (EXP -> SELECT .)
    parc            reduce using rule 311 (EXP -> SELECT .)
    end             reduce using rule 311 (EXP -> SELECT .)
    else            reduce using rule 311 (EXP -> SELECT .)
    constraint      reduce using rule 311 (EXP -> SELECT .)
    unique          reduce using rule 311 (EXP -> SELECT .)
    check           reduce using rule 311 (EXP -> SELECT .)
    default         reduce using rule 311 (EXP -> SELECT .)
    null            reduce using rule 311 (EXP -> SELECT .)
    primary         reduce using rule 311 (EXP -> SELECT .)
    references      reduce using rule 311 (EXP -> SELECT .)
    asc             reduce using rule 311 (EXP -> SELECT .)
    desc            reduce using rule 311 (EXP -> SELECT .)


state 92

    (313) EXP -> CASE .

    r_from          reduce using rule 313 (EXP -> CASE .)
    coma            reduce using rule 313 (EXP -> CASE .)
    where           reduce using rule 313 (EXP -> CASE .)
    group           reduce using rule 313 (EXP -> CASE .)
    having          reduce using rule 313 (EXP -> CASE .)
    union           reduce using rule 313 (EXP -> CASE .)
    intersect       reduce using rule 313 (EXP -> CASE .)
    except          reduce using rule 313 (EXP -> CASE .)
    order           reduce using rule 313 (EXP -> CASE .)
    limit           reduce using rule 313 (EXP -> CASE .)
    offset          reduce using rule 313 (EXP -> CASE .)
    ptcoma          reduce using rule 313 (EXP -> CASE .)
    mas             reduce using rule 313 (EXP -> CASE .)
    menos           reduce using rule 313 (EXP -> CASE .)
    multiplicacion  reduce using rule 313 (EXP -> CASE .)
    division        reduce using rule 313 (EXP -> CASE .)
    modulo          reduce using rule 313 (EXP -> CASE .)
    elevado         reduce using rule 313 (EXP -> CASE .)
    and             reduce using rule 313 (EXP -> CASE .)
    or              reduce using rule 313 (EXP -> CASE .)
    mayor           reduce using rule 313 (EXP -> CASE .)
    menor           reduce using rule 313 (EXP -> CASE .)
    mayor_igual     reduce using rule 313 (EXP -> CASE .)
    menor_igual     reduce using rule 313 (EXP -> CASE .)
    igual           reduce using rule 313 (EXP -> CASE .)
    diferente1      reduce using rule 313 (EXP -> CASE .)
    diferente2      reduce using rule 313 (EXP -> CASE .)
    between         reduce using rule 313 (EXP -> CASE .)
    is              reduce using rule 313 (EXP -> CASE .)
    isnull          reduce using rule 313 (EXP -> CASE .)
    notnull         reduce using rule 313 (EXP -> CASE .)
    as              reduce using rule 313 (EXP -> CASE .)
    cadenaString    reduce using rule 313 (EXP -> CASE .)
    id              reduce using rule 313 (EXP -> CASE .)
    cadena          reduce using rule 313 (EXP -> CASE .)
    in              reduce using rule 313 (EXP -> CASE .)
    not             reduce using rule 313 (EXP -> CASE .)
    like            reduce using rule 313 (EXP -> CASE .)
    then            reduce using rule 313 (EXP -> CASE .)
    when            reduce using rule 313 (EXP -> CASE .)
    parc            reduce using rule 313 (EXP -> CASE .)
    end             reduce using rule 313 (EXP -> CASE .)
    else            reduce using rule 313 (EXP -> CASE .)
    constraint      reduce using rule 313 (EXP -> CASE .)
    unique          reduce using rule 313 (EXP -> CASE .)
    check           reduce using rule 313 (EXP -> CASE .)
    default         reduce using rule 313 (EXP -> CASE .)
    null            reduce using rule 313 (EXP -> CASE .)
    primary         reduce using rule 313 (EXP -> CASE .)
    references      reduce using rule 313 (EXP -> CASE .)
    asc             reduce using rule 313 (EXP -> CASE .)
    desc            reduce using rule 313 (EXP -> CASE .)


state 93

    (316) EXP -> any . para LEXP parc

    para            shift and go to state 197


state 94

    (317) EXP -> all . para LEXP parc

    para            shift and go to state 198


state 95

    (318) EXP -> some . para LEXP parc

    para            shift and go to state 199


state 96

    (319) EXP -> extract . para FIELDS r_from timestamp cadena parc

    para            shift and go to state 200


state 97

    (331) EXP -> timestamp . cadena

    cadena          shift and go to state 201


state 98

    (320) EXP -> int .

    r_from          reduce using rule 320 (EXP -> int .)
    coma            reduce using rule 320 (EXP -> int .)
    where           reduce using rule 320 (EXP -> int .)
    group           reduce using rule 320 (EXP -> int .)
    having          reduce using rule 320 (EXP -> int .)
    union           reduce using rule 320 (EXP -> int .)
    intersect       reduce using rule 320 (EXP -> int .)
    except          reduce using rule 320 (EXP -> int .)
    order           reduce using rule 320 (EXP -> int .)
    limit           reduce using rule 320 (EXP -> int .)
    offset          reduce using rule 320 (EXP -> int .)
    ptcoma          reduce using rule 320 (EXP -> int .)
    mas             reduce using rule 320 (EXP -> int .)
    menos           reduce using rule 320 (EXP -> int .)
    multiplicacion  reduce using rule 320 (EXP -> int .)
    division        reduce using rule 320 (EXP -> int .)
    modulo          reduce using rule 320 (EXP -> int .)
    elevado         reduce using rule 320 (EXP -> int .)
    and             reduce using rule 320 (EXP -> int .)
    or              reduce using rule 320 (EXP -> int .)
    mayor           reduce using rule 320 (EXP -> int .)
    menor           reduce using rule 320 (EXP -> int .)
    mayor_igual     reduce using rule 320 (EXP -> int .)
    menor_igual     reduce using rule 320 (EXP -> int .)
    igual           reduce using rule 320 (EXP -> int .)
    diferente1      reduce using rule 320 (EXP -> int .)
    diferente2      reduce using rule 320 (EXP -> int .)
    between         reduce using rule 320 (EXP -> int .)
    is              reduce using rule 320 (EXP -> int .)
    isnull          reduce using rule 320 (EXP -> int .)
    notnull         reduce using rule 320 (EXP -> int .)
    as              reduce using rule 320 (EXP -> int .)
    cadenaString    reduce using rule 320 (EXP -> int .)
    id              reduce using rule 320 (EXP -> int .)
    cadena          reduce using rule 320 (EXP -> int .)
    in              reduce using rule 320 (EXP -> int .)
    not             reduce using rule 320 (EXP -> int .)
    like            reduce using rule 320 (EXP -> int .)
    then            reduce using rule 320 (EXP -> int .)
    when            reduce using rule 320 (EXP -> int .)
    parc            reduce using rule 320 (EXP -> int .)
    end             reduce using rule 320 (EXP -> int .)
    else            reduce using rule 320 (EXP -> int .)
    constraint      reduce using rule 320 (EXP -> int .)
    unique          reduce using rule 320 (EXP -> int .)
    check           reduce using rule 320 (EXP -> int .)
    default         reduce using rule 320 (EXP -> int .)
    null            reduce using rule 320 (EXP -> int .)
    primary         reduce using rule 320 (EXP -> int .)
    references      reduce using rule 320 (EXP -> int .)
    asc             reduce using rule 320 (EXP -> int .)
    desc            reduce using rule 320 (EXP -> int .)


state 99

    (321) EXP -> decimales .

    r_from          reduce using rule 321 (EXP -> decimales .)
    coma            reduce using rule 321 (EXP -> decimales .)
    where           reduce using rule 321 (EXP -> decimales .)
    group           reduce using rule 321 (EXP -> decimales .)
    having          reduce using rule 321 (EXP -> decimales .)
    union           reduce using rule 321 (EXP -> decimales .)
    intersect       reduce using rule 321 (EXP -> decimales .)
    except          reduce using rule 321 (EXP -> decimales .)
    order           reduce using rule 321 (EXP -> decimales .)
    limit           reduce using rule 321 (EXP -> decimales .)
    offset          reduce using rule 321 (EXP -> decimales .)
    ptcoma          reduce using rule 321 (EXP -> decimales .)
    mas             reduce using rule 321 (EXP -> decimales .)
    menos           reduce using rule 321 (EXP -> decimales .)
    multiplicacion  reduce using rule 321 (EXP -> decimales .)
    division        reduce using rule 321 (EXP -> decimales .)
    modulo          reduce using rule 321 (EXP -> decimales .)
    elevado         reduce using rule 321 (EXP -> decimales .)
    and             reduce using rule 321 (EXP -> decimales .)
    or              reduce using rule 321 (EXP -> decimales .)
    mayor           reduce using rule 321 (EXP -> decimales .)
    menor           reduce using rule 321 (EXP -> decimales .)
    mayor_igual     reduce using rule 321 (EXP -> decimales .)
    menor_igual     reduce using rule 321 (EXP -> decimales .)
    igual           reduce using rule 321 (EXP -> decimales .)
    diferente1      reduce using rule 321 (EXP -> decimales .)
    diferente2      reduce using rule 321 (EXP -> decimales .)
    between         reduce using rule 321 (EXP -> decimales .)
    is              reduce using rule 321 (EXP -> decimales .)
    isnull          reduce using rule 321 (EXP -> decimales .)
    notnull         reduce using rule 321 (EXP -> decimales .)
    as              reduce using rule 321 (EXP -> decimales .)
    cadenaString    reduce using rule 321 (EXP -> decimales .)
    id              reduce using rule 321 (EXP -> decimales .)
    cadena          reduce using rule 321 (EXP -> decimales .)
    in              reduce using rule 321 (EXP -> decimales .)
    not             reduce using rule 321 (EXP -> decimales .)
    like            reduce using rule 321 (EXP -> decimales .)
    then            reduce using rule 321 (EXP -> decimales .)
    when            reduce using rule 321 (EXP -> decimales .)
    parc            reduce using rule 321 (EXP -> decimales .)
    end             reduce using rule 321 (EXP -> decimales .)
    else            reduce using rule 321 (EXP -> decimales .)
    constraint      reduce using rule 321 (EXP -> decimales .)
    unique          reduce using rule 321 (EXP -> decimales .)
    check           reduce using rule 321 (EXP -> decimales .)
    default         reduce using rule 321 (EXP -> decimales .)
    null            reduce using rule 321 (EXP -> decimales .)
    primary         reduce using rule 321 (EXP -> decimales .)
    references      reduce using rule 321 (EXP -> decimales .)
    asc             reduce using rule 321 (EXP -> decimales .)
    desc            reduce using rule 321 (EXP -> decimales .)


state 100

    (329) EXP -> current_time .

    r_from          reduce using rule 329 (EXP -> current_time .)
    coma            reduce using rule 329 (EXP -> current_time .)
    where           reduce using rule 329 (EXP -> current_time .)
    group           reduce using rule 329 (EXP -> current_time .)
    having          reduce using rule 329 (EXP -> current_time .)
    union           reduce using rule 329 (EXP -> current_time .)
    intersect       reduce using rule 329 (EXP -> current_time .)
    except          reduce using rule 329 (EXP -> current_time .)
    order           reduce using rule 329 (EXP -> current_time .)
    limit           reduce using rule 329 (EXP -> current_time .)
    offset          reduce using rule 329 (EXP -> current_time .)
    ptcoma          reduce using rule 329 (EXP -> current_time .)
    mas             reduce using rule 329 (EXP -> current_time .)
    menos           reduce using rule 329 (EXP -> current_time .)
    multiplicacion  reduce using rule 329 (EXP -> current_time .)
    division        reduce using rule 329 (EXP -> current_time .)
    modulo          reduce using rule 329 (EXP -> current_time .)
    elevado         reduce using rule 329 (EXP -> current_time .)
    and             reduce using rule 329 (EXP -> current_time .)
    or              reduce using rule 329 (EXP -> current_time .)
    mayor           reduce using rule 329 (EXP -> current_time .)
    menor           reduce using rule 329 (EXP -> current_time .)
    mayor_igual     reduce using rule 329 (EXP -> current_time .)
    menor_igual     reduce using rule 329 (EXP -> current_time .)
    igual           reduce using rule 329 (EXP -> current_time .)
    diferente1      reduce using rule 329 (EXP -> current_time .)
    diferente2      reduce using rule 329 (EXP -> current_time .)
    between         reduce using rule 329 (EXP -> current_time .)
    is              reduce using rule 329 (EXP -> current_time .)
    isnull          reduce using rule 329 (EXP -> current_time .)
    notnull         reduce using rule 329 (EXP -> current_time .)
    as              reduce using rule 329 (EXP -> current_time .)
    cadenaString    reduce using rule 329 (EXP -> current_time .)
    id              reduce using rule 329 (EXP -> current_time .)
    cadena          reduce using rule 329 (EXP -> current_time .)
    in              reduce using rule 329 (EXP -> current_time .)
    not             reduce using rule 329 (EXP -> current_time .)
    like            reduce using rule 329 (EXP -> current_time .)
    then            reduce using rule 329 (EXP -> current_time .)
    when            reduce using rule 329 (EXP -> current_time .)
    parc            reduce using rule 329 (EXP -> current_time .)
    end             reduce using rule 329 (EXP -> current_time .)
    else            reduce using rule 329 (EXP -> current_time .)
    constraint      reduce using rule 329 (EXP -> current_time .)
    unique          reduce using rule 329 (EXP -> current_time .)
    check           reduce using rule 329 (EXP -> current_time .)
    default         reduce using rule 329 (EXP -> current_time .)
    null            reduce using rule 329 (EXP -> current_time .)
    primary         reduce using rule 329 (EXP -> current_time .)
    references      reduce using rule 329 (EXP -> current_time .)
    asc             reduce using rule 329 (EXP -> current_time .)
    desc            reduce using rule 329 (EXP -> current_time .)


state 101

    (330) EXP -> current_date .

    r_from          reduce using rule 330 (EXP -> current_date .)
    coma            reduce using rule 330 (EXP -> current_date .)
    where           reduce using rule 330 (EXP -> current_date .)
    group           reduce using rule 330 (EXP -> current_date .)
    having          reduce using rule 330 (EXP -> current_date .)
    union           reduce using rule 330 (EXP -> current_date .)
    intersect       reduce using rule 330 (EXP -> current_date .)
    except          reduce using rule 330 (EXP -> current_date .)
    order           reduce using rule 330 (EXP -> current_date .)
    limit           reduce using rule 330 (EXP -> current_date .)
    offset          reduce using rule 330 (EXP -> current_date .)
    ptcoma          reduce using rule 330 (EXP -> current_date .)
    mas             reduce using rule 330 (EXP -> current_date .)
    menos           reduce using rule 330 (EXP -> current_date .)
    multiplicacion  reduce using rule 330 (EXP -> current_date .)
    division        reduce using rule 330 (EXP -> current_date .)
    modulo          reduce using rule 330 (EXP -> current_date .)
    elevado         reduce using rule 330 (EXP -> current_date .)
    and             reduce using rule 330 (EXP -> current_date .)
    or              reduce using rule 330 (EXP -> current_date .)
    mayor           reduce using rule 330 (EXP -> current_date .)
    menor           reduce using rule 330 (EXP -> current_date .)
    mayor_igual     reduce using rule 330 (EXP -> current_date .)
    menor_igual     reduce using rule 330 (EXP -> current_date .)
    igual           reduce using rule 330 (EXP -> current_date .)
    diferente1      reduce using rule 330 (EXP -> current_date .)
    diferente2      reduce using rule 330 (EXP -> current_date .)
    between         reduce using rule 330 (EXP -> current_date .)
    is              reduce using rule 330 (EXP -> current_date .)
    isnull          reduce using rule 330 (EXP -> current_date .)
    notnull         reduce using rule 330 (EXP -> current_date .)
    as              reduce using rule 330 (EXP -> current_date .)
    cadenaString    reduce using rule 330 (EXP -> current_date .)
    id              reduce using rule 330 (EXP -> current_date .)
    cadena          reduce using rule 330 (EXP -> current_date .)
    in              reduce using rule 330 (EXP -> current_date .)
    not             reduce using rule 330 (EXP -> current_date .)
    like            reduce using rule 330 (EXP -> current_date .)
    then            reduce using rule 330 (EXP -> current_date .)
    when            reduce using rule 330 (EXP -> current_date .)
    parc            reduce using rule 330 (EXP -> current_date .)
    end             reduce using rule 330 (EXP -> current_date .)
    else            reduce using rule 330 (EXP -> current_date .)
    constraint      reduce using rule 330 (EXP -> current_date .)
    unique          reduce using rule 330 (EXP -> current_date .)
    check           reduce using rule 330 (EXP -> current_date .)
    default         reduce using rule 330 (EXP -> current_date .)
    null            reduce using rule 330 (EXP -> current_date .)
    primary         reduce using rule 330 (EXP -> current_date .)
    references      reduce using rule 330 (EXP -> current_date .)
    asc             reduce using rule 330 (EXP -> current_date .)
    desc            reduce using rule 330 (EXP -> current_date .)


state 102

    (332) EXP -> interval . cadena

    cadena          shift and go to state 202


state 103

    (334) EXP -> default .

    r_from          reduce using rule 334 (EXP -> default .)
    coma            reduce using rule 334 (EXP -> default .)
    where           reduce using rule 334 (EXP -> default .)
    group           reduce using rule 334 (EXP -> default .)
    having          reduce using rule 334 (EXP -> default .)
    union           reduce using rule 334 (EXP -> default .)
    intersect       reduce using rule 334 (EXP -> default .)
    except          reduce using rule 334 (EXP -> default .)
    order           reduce using rule 334 (EXP -> default .)
    limit           reduce using rule 334 (EXP -> default .)
    offset          reduce using rule 334 (EXP -> default .)
    ptcoma          reduce using rule 334 (EXP -> default .)
    mas             reduce using rule 334 (EXP -> default .)
    menos           reduce using rule 334 (EXP -> default .)
    multiplicacion  reduce using rule 334 (EXP -> default .)
    division        reduce using rule 334 (EXP -> default .)
    modulo          reduce using rule 334 (EXP -> default .)
    elevado         reduce using rule 334 (EXP -> default .)
    and             reduce using rule 334 (EXP -> default .)
    or              reduce using rule 334 (EXP -> default .)
    mayor           reduce using rule 334 (EXP -> default .)
    menor           reduce using rule 334 (EXP -> default .)
    mayor_igual     reduce using rule 334 (EXP -> default .)
    menor_igual     reduce using rule 334 (EXP -> default .)
    igual           reduce using rule 334 (EXP -> default .)
    diferente1      reduce using rule 334 (EXP -> default .)
    diferente2      reduce using rule 334 (EXP -> default .)
    between         reduce using rule 334 (EXP -> default .)
    is              reduce using rule 334 (EXP -> default .)
    isnull          reduce using rule 334 (EXP -> default .)
    notnull         reduce using rule 334 (EXP -> default .)
    as              reduce using rule 334 (EXP -> default .)
    cadenaString    reduce using rule 334 (EXP -> default .)
    id              reduce using rule 334 (EXP -> default .)
    cadena          reduce using rule 334 (EXP -> default .)
    in              reduce using rule 334 (EXP -> default .)
    not             reduce using rule 334 (EXP -> default .)
    like            reduce using rule 334 (EXP -> default .)
    then            reduce using rule 334 (EXP -> default .)
    when            reduce using rule 334 (EXP -> default .)
    parc            reduce using rule 334 (EXP -> default .)
    end             reduce using rule 334 (EXP -> default .)
    else            reduce using rule 334 (EXP -> default .)
    constraint      reduce using rule 334 (EXP -> default .)
    unique          reduce using rule 334 (EXP -> default .)
    check           reduce using rule 334 (EXP -> default .)
    default         reduce using rule 334 (EXP -> default .)
    null            reduce using rule 334 (EXP -> default .)
    primary         reduce using rule 334 (EXP -> default .)
    references      reduce using rule 334 (EXP -> default .)
    asc             reduce using rule 334 (EXP -> default .)
    desc            reduce using rule 334 (EXP -> default .)


state 104

    (335) EXP -> idPunto .

    r_from          reduce using rule 335 (EXP -> idPunto .)
    coma            reduce using rule 335 (EXP -> idPunto .)
    where           reduce using rule 335 (EXP -> idPunto .)
    group           reduce using rule 335 (EXP -> idPunto .)
    having          reduce using rule 335 (EXP -> idPunto .)
    union           reduce using rule 335 (EXP -> idPunto .)
    intersect       reduce using rule 335 (EXP -> idPunto .)
    except          reduce using rule 335 (EXP -> idPunto .)
    order           reduce using rule 335 (EXP -> idPunto .)
    limit           reduce using rule 335 (EXP -> idPunto .)
    offset          reduce using rule 335 (EXP -> idPunto .)
    ptcoma          reduce using rule 335 (EXP -> idPunto .)
    mas             reduce using rule 335 (EXP -> idPunto .)
    menos           reduce using rule 335 (EXP -> idPunto .)
    multiplicacion  reduce using rule 335 (EXP -> idPunto .)
    division        reduce using rule 335 (EXP -> idPunto .)
    modulo          reduce using rule 335 (EXP -> idPunto .)
    elevado         reduce using rule 335 (EXP -> idPunto .)
    and             reduce using rule 335 (EXP -> idPunto .)
    or              reduce using rule 335 (EXP -> idPunto .)
    mayor           reduce using rule 335 (EXP -> idPunto .)
    menor           reduce using rule 335 (EXP -> idPunto .)
    mayor_igual     reduce using rule 335 (EXP -> idPunto .)
    menor_igual     reduce using rule 335 (EXP -> idPunto .)
    igual           reduce using rule 335 (EXP -> idPunto .)
    diferente1      reduce using rule 335 (EXP -> idPunto .)
    diferente2      reduce using rule 335 (EXP -> idPunto .)
    between         reduce using rule 335 (EXP -> idPunto .)
    is              reduce using rule 335 (EXP -> idPunto .)
    isnull          reduce using rule 335 (EXP -> idPunto .)
    notnull         reduce using rule 335 (EXP -> idPunto .)
    as              reduce using rule 335 (EXP -> idPunto .)
    cadenaString    reduce using rule 335 (EXP -> idPunto .)
    id              reduce using rule 335 (EXP -> idPunto .)
    cadena          reduce using rule 335 (EXP -> idPunto .)
    in              reduce using rule 335 (EXP -> idPunto .)
    not             reduce using rule 335 (EXP -> idPunto .)
    like            reduce using rule 335 (EXP -> idPunto .)
    then            reduce using rule 335 (EXP -> idPunto .)
    when            reduce using rule 335 (EXP -> idPunto .)
    parc            reduce using rule 335 (EXP -> idPunto .)
    end             reduce using rule 335 (EXP -> idPunto .)
    else            reduce using rule 335 (EXP -> idPunto .)
    constraint      reduce using rule 335 (EXP -> idPunto .)
    unique          reduce using rule 335 (EXP -> idPunto .)
    check           reduce using rule 335 (EXP -> idPunto .)
    default         reduce using rule 335 (EXP -> idPunto .)
    null            reduce using rule 335 (EXP -> idPunto .)
    primary         reduce using rule 335 (EXP -> idPunto .)
    references      reduce using rule 335 (EXP -> idPunto .)
    asc             reduce using rule 335 (EXP -> idPunto .)
    desc            reduce using rule 335 (EXP -> idPunto .)


state 105

    (152) CREATETABLE -> create table . id para LDEF parc ptcoma
    (153) CREATETABLE -> create table . id para LDEF parc HERENCIA ptcoma

    id              shift and go to state 203


state 106

    (183) CREATETYPE -> create type . id as enum para LEXP parc

    id              shift and go to state 204


state 107

    (135) CREATEDB -> create RD . if not exist id
    (136) CREATEDB -> create RD . if not exist id OPCCDB
    (137) CREATEDB -> create RD . id
    (138) CREATEDB -> create RD . id OPCCDB

    if              shift and go to state 205
    id              shift and go to state 206


state 108

    (45) CREATEINDEX -> create index . id on id para LEXP parc
    (47) CREATEINDEX -> create index . id on id using hash para LEXP parc
    (48) CREATEINDEX -> create index . id on id para id ORDEN parc
    (49) CREATEINDEX -> create index . id on id para id id ORDEN parc

    id              shift and go to state 207


state 109

    (46) CREATEINDEX -> create unique . index id on id para LEXP parc

    index           shift and go to state 208


state 110

    (30) PROCEDIMIENTOS -> create procedure . id para LPARAM parc LENGUAJE LCONTENIDOP
    (31) PROCEDIMIENTOS -> create procedure . id para LPARAM parc LCONTENIDOP LENGUAJE

    id              shift and go to state 209


state 111

    (26) FUNCIONES -> create function . id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP
    (27) FUNCIONES -> create function . id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE

    id              shift and go to state 210


state 112

    (142) RD -> or . replace databases

    replace         shift and go to state 211


state 113

    (143) RD -> databases .

    if              reduce using rule 143 (RD -> databases .)
    id              reduce using rule 143 (RD -> databases .)


state 114

    (212) UPDATE -> update id . set LCAMPOS WHERE

    set             shift and go to state 212


state 115

    (215) DELETE -> delete r_from . id WHERE

    id              shift and go to state 213


state 116

    (113) ALTER -> alter databases . id rename to id
    (114) ALTER -> alter databases . id owner to id

    id              shift and go to state 214


state 117

    (115) ALTER -> alter table . id LOP

    id              shift and go to state 215


state 118

    (109) DROP -> drop all . para parc

    para            shift and go to state 216


state 119

    (110) DROP -> drop table . id

    id              shift and go to state 217


state 120

    (111) DROP -> drop databases . if exist id
    (112) DROP -> drop databases . id

    if              shift and go to state 218
    id              shift and go to state 219


state 121

    (69) CONDICIONIF -> if EXP . then LISTACONTENIDO ELSEF end if
    (70) CONDICIONIF -> if EXP . then LISTACONTENIDO LELIF end if
    (71) CONDICIONIF -> if EXP . then LISTACONTENIDO end if
    (72) CONDICIONIF -> if EXP . then LISTACONTENIDO LELIF ELSEF end if
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    then            shift and go to state 220
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170
    and             shift and go to state 171
    or              shift and go to state 172
    mayor           shift and go to state 173
    menor           shift and go to state 174
    mayor_igual     shift and go to state 175
    menor_igual     shift and go to state 176
    igual           shift and go to state 177
    diferente1      shift and go to state 178
    diferente2      shift and go to state 179
    between         shift and go to state 180
    is              shift and go to state 181
    isnull          shift and go to state 183
    notnull         shift and go to state 184
    as              shift and go to state 185
    cadenaString    shift and go to state 186
    id              shift and go to state 187
    cadena          shift and go to state 188
    in              shift and go to state 189
    not             shift and go to state 182
    like            shift and go to state 190


state 122

    (107) INSERT -> insert into . id values para LEXP parc
    (108) INSERT -> insert into . id para LEXP parc values para LEXP parc

    id              shift and go to state 221


state 123

    (76) CASE -> case LEXP . LISTAWHEN ELSEF end case
    (77) CASE -> case LEXP . LISTAWHEN end case
    (218) LEXP -> LEXP . coma EXP
    (102) LISTAWHEN -> . LISTAWHEN WHEN
    (103) LISTAWHEN -> . WHEN
    (104) WHEN -> . when LEXP then LISTACONTENIDO
    (105) WHEN -> . when LEXP then LEXP

    coma            shift and go to state 164
    when            shift and go to state 126

    LISTAWHEN                      shift and go to state 222
    WHEN                           shift and go to state 125

state 124

    (78) CASE -> case LISTAWHEN . ELSE end
    (79) CASE -> case LISTAWHEN . end
    (102) LISTAWHEN -> LISTAWHEN . WHEN
    (106) ELSE -> . else LEXP
    (104) WHEN -> . when LEXP then LISTACONTENIDO
    (105) WHEN -> . when LEXP then LEXP

    end             shift and go to state 224
    else            shift and go to state 226
    when            shift and go to state 126

    ELSE                           shift and go to state 223
    WHEN                           shift and go to state 225

state 125

    (103) LISTAWHEN -> WHEN .

    end             reduce using rule 103 (LISTAWHEN -> WHEN .)
    else            reduce using rule 103 (LISTAWHEN -> WHEN .)
    when            reduce using rule 103 (LISTAWHEN -> WHEN .)


state 126

    (104) WHEN -> when . LEXP then LISTACONTENIDO
    (105) WHEN -> when . LEXP then LEXP
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 227
    EXP                            shift and go to state 79
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 127

    (132) SHOWDB -> show dbs .

    ptcoma          reduce using rule 132 (SHOWDB -> show dbs .)


state 128

    (133) SHOW -> show tables . para id parc

    para            shift and go to state 228


state 129

    (134) SHOW -> show collection . para parc

    para            shift and go to state 229


state 130

    (16) instruccion -> use id ptcoma .

    use             reduce using rule 16 (instruccion -> use id ptcoma .)
    select          reduce using rule 16 (instruccion -> use id ptcoma .)
    create          reduce using rule 16 (instruccion -> use id ptcoma .)
    update          reduce using rule 16 (instruccion -> use id ptcoma .)
    delete          reduce using rule 16 (instruccion -> use id ptcoma .)
    alter           reduce using rule 16 (instruccion -> use id ptcoma .)
    drop            reduce using rule 16 (instruccion -> use id ptcoma .)
    insert          reduce using rule 16 (instruccion -> use id ptcoma .)
    case            reduce using rule 16 (instruccion -> use id ptcoma .)
    show            reduce using rule 16 (instruccion -> use id ptcoma .)
    id              reduce using rule 16 (instruccion -> use id ptcoma .)
    if              reduce using rule 16 (instruccion -> use id ptcoma .)
    $end            reduce using rule 16 (instruccion -> use id ptcoma .)


state 131

    (234) TIPO -> id modulo . rowtype

    rowtype         shift and go to state 230


state 132

    (59) DECLARACIONES -> id TIPO not . null ASIG

    null            shift and go to state 231


state 133

    (60) DECLARACIONES -> id TIPO ASIG .

    ptcoma          reduce using rule 60 (DECLARACIONES -> id TIPO ASIG .)


state 134

    (63) ASIG -> default . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 232
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 135

    (64) ASIG -> dospuntos . igual EXP

    igual           shift and go to state 233


state 136

    (65) ASIG -> igual . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 234
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 137

    (61) DECLARACIONES -> id constant TIPO . not null ASIG
    (62) DECLARACIONES -> id constant TIPO . ASIG
    (63) ASIG -> . default EXP
    (64) ASIG -> . dospuntos igual EXP
    (65) ASIG -> . igual EXP
    (66) ASIG -> .

    not             shift and go to state 235
    default         shift and go to state 134
    dospuntos       shift and go to state 135
    igual           shift and go to state 136
    ptcoma          reduce using rule 66 (ASIG -> .)

    ASIG                           shift and go to state 236

state 138

    (67) ASIGNACION -> id dospuntos igual . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 237
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 139

    (68) ASIGNACION -> id igual EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    ptcoma          reduce using rule 68 (ASIGNACION -> id igual EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170
    and             shift and go to state 171
    or              shift and go to state 172
    mayor           shift and go to state 173
    menor           shift and go to state 174
    mayor_igual     shift and go to state 175
    menor_igual     shift and go to state 176
    igual           shift and go to state 177
    diferente1      shift and go to state 178
    diferente2      shift and go to state 179
    between         shift and go to state 180
    is              shift and go to state 181
    isnull          shift and go to state 183
    notnull         shift and go to state 184
    as              shift and go to state 185
    cadenaString    shift and go to state 186
    id              shift and go to state 187
    cadena          shift and go to state 188
    in              shift and go to state 189
    not             shift and go to state 182
    like            shift and go to state 190


state 140

    (220) TIPO -> interval cadena .

    not             reduce using rule 220 (TIPO -> interval cadena .)
    default         reduce using rule 220 (TIPO -> interval cadena .)
    dospuntos       reduce using rule 220 (TIPO -> interval cadena .)
    igual           reduce using rule 220 (TIPO -> interval cadena .)
    ptcoma          reduce using rule 220 (TIPO -> interval cadena .)
    r_from          reduce using rule 220 (TIPO -> interval cadena .)
    coma            reduce using rule 220 (TIPO -> interval cadena .)
    where           reduce using rule 220 (TIPO -> interval cadena .)
    group           reduce using rule 220 (TIPO -> interval cadena .)
    having          reduce using rule 220 (TIPO -> interval cadena .)
    union           reduce using rule 220 (TIPO -> interval cadena .)
    intersect       reduce using rule 220 (TIPO -> interval cadena .)
    except          reduce using rule 220 (TIPO -> interval cadena .)
    order           reduce using rule 220 (TIPO -> interval cadena .)
    limit           reduce using rule 220 (TIPO -> interval cadena .)
    offset          reduce using rule 220 (TIPO -> interval cadena .)
    mas             reduce using rule 220 (TIPO -> interval cadena .)
    menos           reduce using rule 220 (TIPO -> interval cadena .)
    multiplicacion  reduce using rule 220 (TIPO -> interval cadena .)
    division        reduce using rule 220 (TIPO -> interval cadena .)
    modulo          reduce using rule 220 (TIPO -> interval cadena .)
    elevado         reduce using rule 220 (TIPO -> interval cadena .)
    and             reduce using rule 220 (TIPO -> interval cadena .)
    or              reduce using rule 220 (TIPO -> interval cadena .)
    mayor           reduce using rule 220 (TIPO -> interval cadena .)
    menor           reduce using rule 220 (TIPO -> interval cadena .)
    mayor_igual     reduce using rule 220 (TIPO -> interval cadena .)
    menor_igual     reduce using rule 220 (TIPO -> interval cadena .)
    diferente1      reduce using rule 220 (TIPO -> interval cadena .)
    diferente2      reduce using rule 220 (TIPO -> interval cadena .)
    between         reduce using rule 220 (TIPO -> interval cadena .)
    is              reduce using rule 220 (TIPO -> interval cadena .)
    isnull          reduce using rule 220 (TIPO -> interval cadena .)
    notnull         reduce using rule 220 (TIPO -> interval cadena .)
    as              reduce using rule 220 (TIPO -> interval cadena .)
    cadenaString    reduce using rule 220 (TIPO -> interval cadena .)
    id              reduce using rule 220 (TIPO -> interval cadena .)
    cadena          reduce using rule 220 (TIPO -> interval cadena .)
    in              reduce using rule 220 (TIPO -> interval cadena .)
    like            reduce using rule 220 (TIPO -> interval cadena .)
    then            reduce using rule 220 (TIPO -> interval cadena .)
    when            reduce using rule 220 (TIPO -> interval cadena .)
    parc            reduce using rule 220 (TIPO -> interval cadena .)
    end             reduce using rule 220 (TIPO -> interval cadena .)
    else            reduce using rule 220 (TIPO -> interval cadena .)
    constraint      reduce using rule 220 (TIPO -> interval cadena .)
    unique          reduce using rule 220 (TIPO -> interval cadena .)
    check           reduce using rule 220 (TIPO -> interval cadena .)
    null            reduce using rule 220 (TIPO -> interval cadena .)
    primary         reduce using rule 220 (TIPO -> interval cadena .)
    references      reduce using rule 220 (TIPO -> interval cadena .)
    asc             reduce using rule 220 (TIPO -> interval cadena .)
    desc            reduce using rule 220 (TIPO -> interval cadena .)


state 141

    (230) TIPO -> interval para . int parc
    (240) TIPO -> interval para . int parc cadena

    int             shift and go to state 238


state 142

    (221) TIPO -> decimal para . int coma int parc
    (222) TIPO -> decimal para . int parc

    int             shift and go to state 239


state 143

    (224) TIPO -> numeric para . int coma int parc
    (225) TIPO -> numeric para . int parc

    int             shift and go to state 240


state 144

    (227) TIPO -> varchar para . int parc

    int             shift and go to state 241


state 145

    (228) TIPO -> timestamp para . int parc
    (236) TIPO -> timestamp para . int parc without time zone
    (237) TIPO -> timestamp para . int parc with time zone

    int             shift and go to state 242


state 146

    (256) TIPO -> timestamp without . time zone

    time            shift and go to state 243


state 147

    (257) TIPO -> timestamp with . time zone

    time            shift and go to state 244


state 148

    (229) TIPO -> character para . int parc

    int             shift and go to state 245


state 149

    (233) TIPO -> character varying . para int parc

    para            shift and go to state 246


state 150

    (231) TIPO -> char para . int parc

    int             shift and go to state 247


state 151

    (232) TIPO -> time para . int parc
    (238) TIPO -> time para . int parc without time zone
    (239) TIPO -> time para . int parc with time zone

    int             shift and go to state 248


state 152

    (258) TIPO -> time without . time zone

    time            shift and go to state 249


state 153

    (259) TIPO -> time with . time zone

    time            shift and go to state 250


state 154

    (235) TIPO -> idPunto modulo . type

    type            shift and go to state 251


state 155

    (246) TIPO -> double precision .

    not             reduce using rule 246 (TIPO -> double precision .)
    default         reduce using rule 246 (TIPO -> double precision .)
    dospuntos       reduce using rule 246 (TIPO -> double precision .)
    igual           reduce using rule 246 (TIPO -> double precision .)
    ptcoma          reduce using rule 246 (TIPO -> double precision .)
    r_from          reduce using rule 246 (TIPO -> double precision .)
    coma            reduce using rule 246 (TIPO -> double precision .)
    where           reduce using rule 246 (TIPO -> double precision .)
    group           reduce using rule 246 (TIPO -> double precision .)
    having          reduce using rule 246 (TIPO -> double precision .)
    union           reduce using rule 246 (TIPO -> double precision .)
    intersect       reduce using rule 246 (TIPO -> double precision .)
    except          reduce using rule 246 (TIPO -> double precision .)
    order           reduce using rule 246 (TIPO -> double precision .)
    limit           reduce using rule 246 (TIPO -> double precision .)
    offset          reduce using rule 246 (TIPO -> double precision .)
    mas             reduce using rule 246 (TIPO -> double precision .)
    menos           reduce using rule 246 (TIPO -> double precision .)
    multiplicacion  reduce using rule 246 (TIPO -> double precision .)
    division        reduce using rule 246 (TIPO -> double precision .)
    modulo          reduce using rule 246 (TIPO -> double precision .)
    elevado         reduce using rule 246 (TIPO -> double precision .)
    and             reduce using rule 246 (TIPO -> double precision .)
    or              reduce using rule 246 (TIPO -> double precision .)
    mayor           reduce using rule 246 (TIPO -> double precision .)
    menor           reduce using rule 246 (TIPO -> double precision .)
    mayor_igual     reduce using rule 246 (TIPO -> double precision .)
    menor_igual     reduce using rule 246 (TIPO -> double precision .)
    diferente1      reduce using rule 246 (TIPO -> double precision .)
    diferente2      reduce using rule 246 (TIPO -> double precision .)
    between         reduce using rule 246 (TIPO -> double precision .)
    is              reduce using rule 246 (TIPO -> double precision .)
    isnull          reduce using rule 246 (TIPO -> double precision .)
    notnull         reduce using rule 246 (TIPO -> double precision .)
    as              reduce using rule 246 (TIPO -> double precision .)
    cadenaString    reduce using rule 246 (TIPO -> double precision .)
    id              reduce using rule 246 (TIPO -> double precision .)
    cadena          reduce using rule 246 (TIPO -> double precision .)
    in              reduce using rule 246 (TIPO -> double precision .)
    like            reduce using rule 246 (TIPO -> double precision .)
    then            reduce using rule 246 (TIPO -> double precision .)
    when            reduce using rule 246 (TIPO -> double precision .)
    parc            reduce using rule 246 (TIPO -> double precision .)
    end             reduce using rule 246 (TIPO -> double precision .)
    else            reduce using rule 246 (TIPO -> double precision .)
    constraint      reduce using rule 246 (TIPO -> double precision .)
    unique          reduce using rule 246 (TIPO -> double precision .)
    check           reduce using rule 246 (TIPO -> double precision .)
    null            reduce using rule 246 (TIPO -> double precision .)
    primary         reduce using rule 246 (TIPO -> double precision .)
    references      reduce using rule 246 (TIPO -> double precision .)
    asc             reduce using rule 246 (TIPO -> double precision .)
    desc            reduce using rule 246 (TIPO -> double precision .)


state 156

    (18) instruccion -> CREATEINDEX WHERE ptcoma .

    use             reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    select          reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    create          reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    update          reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    delete          reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    alter           reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    drop            reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    insert          reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    case            reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    show            reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    id              reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    if              reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)
    $end            reduce using rule 18 (instruccion -> CREATEINDEX WHERE ptcoma .)


state 157

    (195) WHERE -> where EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    ptcoma          reduce using rule 195 (WHERE -> where EXP .)
    r_from          reduce using rule 195 (WHERE -> where EXP .)
    coma            reduce using rule 195 (WHERE -> where EXP .)
    where           reduce using rule 195 (WHERE -> where EXP .)
    group           reduce using rule 195 (WHERE -> where EXP .)
    having          reduce using rule 195 (WHERE -> where EXP .)
    union           reduce using rule 195 (WHERE -> where EXP .)
    intersect       reduce using rule 195 (WHERE -> where EXP .)
    except          reduce using rule 195 (WHERE -> where EXP .)
    order           reduce using rule 195 (WHERE -> where EXP .)
    limit           reduce using rule 195 (WHERE -> where EXP .)
    offset          reduce using rule 195 (WHERE -> where EXP .)
    then            reduce using rule 195 (WHERE -> where EXP .)
    when            reduce using rule 195 (WHERE -> where EXP .)
    parc            reduce using rule 195 (WHERE -> where EXP .)
    end             reduce using rule 195 (WHERE -> where EXP .)
    else            reduce using rule 195 (WHERE -> where EXP .)
    constraint      reduce using rule 195 (WHERE -> where EXP .)
    unique          reduce using rule 195 (WHERE -> where EXP .)
    check           reduce using rule 195 (WHERE -> where EXP .)
    default         reduce using rule 195 (WHERE -> where EXP .)
    null            reduce using rule 195 (WHERE -> where EXP .)
    primary         reduce using rule 195 (WHERE -> where EXP .)
    references      reduce using rule 195 (WHERE -> where EXP .)
    asc             reduce using rule 195 (WHERE -> where EXP .)
    desc            reduce using rule 195 (WHERE -> where EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170
    and             shift and go to state 171
    or              shift and go to state 172
    mayor           shift and go to state 173
    menor           shift and go to state 174
    mayor_igual     shift and go to state 175
    menor_igual     shift and go to state 176
    igual           shift and go to state 177
    diferente1      shift and go to state 178
    diferente2      shift and go to state 179
    between         shift and go to state 180
    is              shift and go to state 181
    isnull          shift and go to state 183
    notnull         shift and go to state 184
    as              shift and go to state 185
    cadenaString    shift and go to state 186
    id              shift and go to state 187
    cadena          shift and go to state 188
    in              shift and go to state 189
    not             shift and go to state 182
    like            shift and go to state 190

  ! mas             [ reduce using rule 195 (WHERE -> where EXP .) ]
  ! menos           [ reduce using rule 195 (WHERE -> where EXP .) ]
  ! multiplicacion  [ reduce using rule 195 (WHERE -> where EXP .) ]
  ! division        [ reduce using rule 195 (WHERE -> where EXP .) ]
  ! modulo          [ reduce using rule 195 (WHERE -> where EXP .) ]
  ! elevado         [ reduce using rule 195 (WHERE -> where EXP .) ]
  ! and             [ reduce using rule 195 (WHERE -> where EXP .) ]
  ! or              [ reduce using rule 195 (WHERE -> where EXP .) ]
  ! mayor           [ reduce using rule 195 (WHERE -> where EXP .) ]
  ! menor           [ reduce using rule 195 (WHERE -> where EXP .) ]
  ! mayor_igual     [ reduce using rule 195 (WHERE -> where EXP .) ]
  ! menor_igual     [ reduce using rule 195 (WHERE -> where EXP .) ]
  ! igual           [ reduce using rule 195 (WHERE -> where EXP .) ]
  ! diferente1      [ reduce using rule 195 (WHERE -> where EXP .) ]
  ! diferente2      [ reduce using rule 195 (WHERE -> where EXP .) ]
  ! between         [ reduce using rule 195 (WHERE -> where EXP .) ]
  ! is              [ reduce using rule 195 (WHERE -> where EXP .) ]
  ! isnull          [ reduce using rule 195 (WHERE -> where EXP .) ]
  ! notnull         [ reduce using rule 195 (WHERE -> where EXP .) ]
  ! as              [ reduce using rule 195 (WHERE -> where EXP .) ]
  ! cadenaString    [ reduce using rule 195 (WHERE -> where EXP .) ]
  ! id              [ reduce using rule 195 (WHERE -> where EXP .) ]
  ! cadena          [ reduce using rule 195 (WHERE -> where EXP .) ]
  ! in              [ reduce using rule 195 (WHERE -> where EXP .) ]
  ! not             [ reduce using rule 195 (WHERE -> where EXP .) ]
  ! like            [ reduce using rule 195 (WHERE -> where EXP .) ]


state 158

    (196) WHERE -> where EXIST .

    ptcoma          reduce using rule 196 (WHERE -> where EXIST .)
    r_from          reduce using rule 196 (WHERE -> where EXIST .)
    coma            reduce using rule 196 (WHERE -> where EXIST .)
    where           reduce using rule 196 (WHERE -> where EXIST .)
    group           reduce using rule 196 (WHERE -> where EXIST .)
    having          reduce using rule 196 (WHERE -> where EXIST .)
    union           reduce using rule 196 (WHERE -> where EXIST .)
    intersect       reduce using rule 196 (WHERE -> where EXIST .)
    except          reduce using rule 196 (WHERE -> where EXIST .)
    order           reduce using rule 196 (WHERE -> where EXIST .)
    limit           reduce using rule 196 (WHERE -> where EXIST .)
    offset          reduce using rule 196 (WHERE -> where EXIST .)
    mas             reduce using rule 196 (WHERE -> where EXIST .)
    menos           reduce using rule 196 (WHERE -> where EXIST .)
    multiplicacion  reduce using rule 196 (WHERE -> where EXIST .)
    division        reduce using rule 196 (WHERE -> where EXIST .)
    modulo          reduce using rule 196 (WHERE -> where EXIST .)
    elevado         reduce using rule 196 (WHERE -> where EXIST .)
    and             reduce using rule 196 (WHERE -> where EXIST .)
    or              reduce using rule 196 (WHERE -> where EXIST .)
    mayor           reduce using rule 196 (WHERE -> where EXIST .)
    menor           reduce using rule 196 (WHERE -> where EXIST .)
    mayor_igual     reduce using rule 196 (WHERE -> where EXIST .)
    menor_igual     reduce using rule 196 (WHERE -> where EXIST .)
    igual           reduce using rule 196 (WHERE -> where EXIST .)
    diferente1      reduce using rule 196 (WHERE -> where EXIST .)
    diferente2      reduce using rule 196 (WHERE -> where EXIST .)
    between         reduce using rule 196 (WHERE -> where EXIST .)
    is              reduce using rule 196 (WHERE -> where EXIST .)
    isnull          reduce using rule 196 (WHERE -> where EXIST .)
    notnull         reduce using rule 196 (WHERE -> where EXIST .)
    as              reduce using rule 196 (WHERE -> where EXIST .)
    cadenaString    reduce using rule 196 (WHERE -> where EXIST .)
    id              reduce using rule 196 (WHERE -> where EXIST .)
    cadena          reduce using rule 196 (WHERE -> where EXIST .)
    in              reduce using rule 196 (WHERE -> where EXIST .)
    not             reduce using rule 196 (WHERE -> where EXIST .)
    like            reduce using rule 196 (WHERE -> where EXIST .)
    then            reduce using rule 196 (WHERE -> where EXIST .)
    when            reduce using rule 196 (WHERE -> where EXIST .)
    parc            reduce using rule 196 (WHERE -> where EXIST .)
    end             reduce using rule 196 (WHERE -> where EXIST .)
    else            reduce using rule 196 (WHERE -> where EXIST .)
    constraint      reduce using rule 196 (WHERE -> where EXIST .)
    unique          reduce using rule 196 (WHERE -> where EXIST .)
    check           reduce using rule 196 (WHERE -> where EXIST .)
    default         reduce using rule 196 (WHERE -> where EXIST .)
    null            reduce using rule 196 (WHERE -> where EXIST .)
    primary         reduce using rule 196 (WHERE -> where EXIST .)
    references      reduce using rule 196 (WHERE -> where EXIST .)
    asc             reduce using rule 196 (WHERE -> where EXIST .)
    desc            reduce using rule 196 (WHERE -> where EXIST .)


state 159

    (301) EXP -> not . EXP
    (217) EXIST -> not . exist para SELECT parc
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    exist           shift and go to state 252
    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 193
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 160

    (216) EXIST -> exist . para SELECT parc

    para            shift and go to state 253


state 161

    (184) SELECT -> select distinct LEXP . r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (218) LEXP -> LEXP . coma EXP

    r_from          shift and go to state 254
    coma            shift and go to state 164


state 162

    (185) SELECT -> select LEXP r_from . LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 255
    EXP                            shift and go to state 79
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 163

    (186) SELECT -> select LEXP WHERE . GROUP HAVING COMBINING ORDER LIMIT
    (203) GROUP -> . group by LEXP
    (204) GROUP -> .

  ! shift/reduce conflict for group resolved as shift
    group           shift and go to state 257
    r_from          reduce using rule 204 (GROUP -> .)
    coma            reduce using rule 204 (GROUP -> .)
    where           reduce using rule 204 (GROUP -> .)
    having          reduce using rule 204 (GROUP -> .)
    union           reduce using rule 204 (GROUP -> .)
    intersect       reduce using rule 204 (GROUP -> .)
    except          reduce using rule 204 (GROUP -> .)
    order           reduce using rule 204 (GROUP -> .)
    limit           reduce using rule 204 (GROUP -> .)
    offset          reduce using rule 204 (GROUP -> .)
    ptcoma          reduce using rule 204 (GROUP -> .)
    mas             reduce using rule 204 (GROUP -> .)
    menos           reduce using rule 204 (GROUP -> .)
    multiplicacion  reduce using rule 204 (GROUP -> .)
    division        reduce using rule 204 (GROUP -> .)
    modulo          reduce using rule 204 (GROUP -> .)
    elevado         reduce using rule 204 (GROUP -> .)
    and             reduce using rule 204 (GROUP -> .)
    or              reduce using rule 204 (GROUP -> .)
    mayor           reduce using rule 204 (GROUP -> .)
    menor           reduce using rule 204 (GROUP -> .)
    mayor_igual     reduce using rule 204 (GROUP -> .)
    menor_igual     reduce using rule 204 (GROUP -> .)
    igual           reduce using rule 204 (GROUP -> .)
    diferente1      reduce using rule 204 (GROUP -> .)
    diferente2      reduce using rule 204 (GROUP -> .)
    between         reduce using rule 204 (GROUP -> .)
    is              reduce using rule 204 (GROUP -> .)
    isnull          reduce using rule 204 (GROUP -> .)
    notnull         reduce using rule 204 (GROUP -> .)
    as              reduce using rule 204 (GROUP -> .)
    cadenaString    reduce using rule 204 (GROUP -> .)
    id              reduce using rule 204 (GROUP -> .)
    cadena          reduce using rule 204 (GROUP -> .)
    in              reduce using rule 204 (GROUP -> .)
    not             reduce using rule 204 (GROUP -> .)
    like            reduce using rule 204 (GROUP -> .)
    then            reduce using rule 204 (GROUP -> .)
    when            reduce using rule 204 (GROUP -> .)
    parc            reduce using rule 204 (GROUP -> .)
    end             reduce using rule 204 (GROUP -> .)
    else            reduce using rule 204 (GROUP -> .)
    constraint      reduce using rule 204 (GROUP -> .)
    unique          reduce using rule 204 (GROUP -> .)
    check           reduce using rule 204 (GROUP -> .)
    default         reduce using rule 204 (GROUP -> .)
    null            reduce using rule 204 (GROUP -> .)
    primary         reduce using rule 204 (GROUP -> .)
    references      reduce using rule 204 (GROUP -> .)
    asc             reduce using rule 204 (GROUP -> .)
    desc            reduce using rule 204 (GROUP -> .)

  ! group           [ reduce using rule 204 (GROUP -> .) ]

    GROUP                          shift and go to state 256

state 164

    (218) LEXP -> LEXP coma . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 258
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 165

    (267) EXP -> EXP mas . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 259
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 166

    (268) EXP -> EXP menos . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 260
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 167

    (269) EXP -> EXP multiplicacion . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 261
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 168

    (270) EXP -> EXP division . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 262
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 169

    (271) EXP -> EXP modulo . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 263
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 170

    (272) EXP -> EXP elevado . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 264
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 171

    (273) EXP -> EXP and . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 265
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 172

    (274) EXP -> EXP or . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 266
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 173

    (275) EXP -> EXP mayor . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 267
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 174

    (276) EXP -> EXP menor . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 268
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 175

    (277) EXP -> EXP mayor_igual . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 269
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 176

    (278) EXP -> EXP menor_igual . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 270
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 177

    (279) EXP -> EXP igual . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 271
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 178

    (280) EXP -> EXP diferente1 . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 272
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 179

    (281) EXP -> EXP diferente2 . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 273
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 180

    (282) EXP -> EXP between . EXP
    (305) EXP -> EXP between . symetric EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    symetric        shift and go to state 275
    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 274
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 181

    (283) EXP -> EXP is . not null
    (284) EXP -> EXP is . null
    (287) EXP -> EXP is . true
    (288) EXP -> EXP is . not true
    (289) EXP -> EXP is . false
    (290) EXP -> EXP is . not false
    (291) EXP -> EXP is . unknown
    (292) EXP -> EXP is . not unknown
    (307) EXP -> EXP is . distinct r_from EXP
    (308) EXP -> EXP is . not distinct r_from EXP

    not             shift and go to state 276
    null            shift and go to state 277
    true            shift and go to state 278
    false           shift and go to state 279
    unknown         shift and go to state 280
    distinct        shift and go to state 281


state 182

    (303) EXP -> EXP not . in para EXP parc
    (304) EXP -> EXP not . between EXP
    (306) EXP -> EXP not . between symetric EXP
    (310) EXP -> EXP not . like cadena

    in              shift and go to state 282
    between         shift and go to state 283
    like            shift and go to state 284


state 183

    (285) EXP -> EXP isnull .

    r_from          reduce using rule 285 (EXP -> EXP isnull .)
    coma            reduce using rule 285 (EXP -> EXP isnull .)
    where           reduce using rule 285 (EXP -> EXP isnull .)
    group           reduce using rule 285 (EXP -> EXP isnull .)
    having          reduce using rule 285 (EXP -> EXP isnull .)
    union           reduce using rule 285 (EXP -> EXP isnull .)
    intersect       reduce using rule 285 (EXP -> EXP isnull .)
    except          reduce using rule 285 (EXP -> EXP isnull .)
    order           reduce using rule 285 (EXP -> EXP isnull .)
    limit           reduce using rule 285 (EXP -> EXP isnull .)
    offset          reduce using rule 285 (EXP -> EXP isnull .)
    ptcoma          reduce using rule 285 (EXP -> EXP isnull .)
    mas             reduce using rule 285 (EXP -> EXP isnull .)
    menos           reduce using rule 285 (EXP -> EXP isnull .)
    multiplicacion  reduce using rule 285 (EXP -> EXP isnull .)
    division        reduce using rule 285 (EXP -> EXP isnull .)
    modulo          reduce using rule 285 (EXP -> EXP isnull .)
    elevado         reduce using rule 285 (EXP -> EXP isnull .)
    and             reduce using rule 285 (EXP -> EXP isnull .)
    or              reduce using rule 285 (EXP -> EXP isnull .)
    mayor           reduce using rule 285 (EXP -> EXP isnull .)
    menor           reduce using rule 285 (EXP -> EXP isnull .)
    mayor_igual     reduce using rule 285 (EXP -> EXP isnull .)
    menor_igual     reduce using rule 285 (EXP -> EXP isnull .)
    igual           reduce using rule 285 (EXP -> EXP isnull .)
    diferente1      reduce using rule 285 (EXP -> EXP isnull .)
    diferente2      reduce using rule 285 (EXP -> EXP isnull .)
    between         reduce using rule 285 (EXP -> EXP isnull .)
    is              reduce using rule 285 (EXP -> EXP isnull .)
    isnull          reduce using rule 285 (EXP -> EXP isnull .)
    notnull         reduce using rule 285 (EXP -> EXP isnull .)
    as              reduce using rule 285 (EXP -> EXP isnull .)
    cadenaString    reduce using rule 285 (EXP -> EXP isnull .)
    id              reduce using rule 285 (EXP -> EXP isnull .)
    cadena          reduce using rule 285 (EXP -> EXP isnull .)
    in              reduce using rule 285 (EXP -> EXP isnull .)
    not             reduce using rule 285 (EXP -> EXP isnull .)
    like            reduce using rule 285 (EXP -> EXP isnull .)
    then            reduce using rule 285 (EXP -> EXP isnull .)
    when            reduce using rule 285 (EXP -> EXP isnull .)
    parc            reduce using rule 285 (EXP -> EXP isnull .)
    end             reduce using rule 285 (EXP -> EXP isnull .)
    else            reduce using rule 285 (EXP -> EXP isnull .)
    constraint      reduce using rule 285 (EXP -> EXP isnull .)
    unique          reduce using rule 285 (EXP -> EXP isnull .)
    check           reduce using rule 285 (EXP -> EXP isnull .)
    default         reduce using rule 285 (EXP -> EXP isnull .)
    null            reduce using rule 285 (EXP -> EXP isnull .)
    primary         reduce using rule 285 (EXP -> EXP isnull .)
    references      reduce using rule 285 (EXP -> EXP isnull .)
    asc             reduce using rule 285 (EXP -> EXP isnull .)
    desc            reduce using rule 285 (EXP -> EXP isnull .)


state 184

    (286) EXP -> EXP notnull .

    r_from          reduce using rule 286 (EXP -> EXP notnull .)
    coma            reduce using rule 286 (EXP -> EXP notnull .)
    where           reduce using rule 286 (EXP -> EXP notnull .)
    group           reduce using rule 286 (EXP -> EXP notnull .)
    having          reduce using rule 286 (EXP -> EXP notnull .)
    union           reduce using rule 286 (EXP -> EXP notnull .)
    intersect       reduce using rule 286 (EXP -> EXP notnull .)
    except          reduce using rule 286 (EXP -> EXP notnull .)
    order           reduce using rule 286 (EXP -> EXP notnull .)
    limit           reduce using rule 286 (EXP -> EXP notnull .)
    offset          reduce using rule 286 (EXP -> EXP notnull .)
    ptcoma          reduce using rule 286 (EXP -> EXP notnull .)
    mas             reduce using rule 286 (EXP -> EXP notnull .)
    menos           reduce using rule 286 (EXP -> EXP notnull .)
    multiplicacion  reduce using rule 286 (EXP -> EXP notnull .)
    division        reduce using rule 286 (EXP -> EXP notnull .)
    modulo          reduce using rule 286 (EXP -> EXP notnull .)
    elevado         reduce using rule 286 (EXP -> EXP notnull .)
    and             reduce using rule 286 (EXP -> EXP notnull .)
    or              reduce using rule 286 (EXP -> EXP notnull .)
    mayor           reduce using rule 286 (EXP -> EXP notnull .)
    menor           reduce using rule 286 (EXP -> EXP notnull .)
    mayor_igual     reduce using rule 286 (EXP -> EXP notnull .)
    menor_igual     reduce using rule 286 (EXP -> EXP notnull .)
    igual           reduce using rule 286 (EXP -> EXP notnull .)
    diferente1      reduce using rule 286 (EXP -> EXP notnull .)
    diferente2      reduce using rule 286 (EXP -> EXP notnull .)
    between         reduce using rule 286 (EXP -> EXP notnull .)
    is              reduce using rule 286 (EXP -> EXP notnull .)
    isnull          reduce using rule 286 (EXP -> EXP notnull .)
    notnull         reduce using rule 286 (EXP -> EXP notnull .)
    as              reduce using rule 286 (EXP -> EXP notnull .)
    cadenaString    reduce using rule 286 (EXP -> EXP notnull .)
    id              reduce using rule 286 (EXP -> EXP notnull .)
    cadena          reduce using rule 286 (EXP -> EXP notnull .)
    in              reduce using rule 286 (EXP -> EXP notnull .)
    not             reduce using rule 286 (EXP -> EXP notnull .)
    like            reduce using rule 286 (EXP -> EXP notnull .)
    then            reduce using rule 286 (EXP -> EXP notnull .)
    when            reduce using rule 286 (EXP -> EXP notnull .)
    parc            reduce using rule 286 (EXP -> EXP notnull .)
    end             reduce using rule 286 (EXP -> EXP notnull .)
    else            reduce using rule 286 (EXP -> EXP notnull .)
    constraint      reduce using rule 286 (EXP -> EXP notnull .)
    unique          reduce using rule 286 (EXP -> EXP notnull .)
    check           reduce using rule 286 (EXP -> EXP notnull .)
    default         reduce using rule 286 (EXP -> EXP notnull .)
    null            reduce using rule 286 (EXP -> EXP notnull .)
    primary         reduce using rule 286 (EXP -> EXP notnull .)
    references      reduce using rule 286 (EXP -> EXP notnull .)
    asc             reduce using rule 286 (EXP -> EXP notnull .)
    desc            reduce using rule 286 (EXP -> EXP notnull .)


state 185

    (293) EXP -> EXP as . cadenaString
    (295) EXP -> EXP as . id
    (297) EXP -> EXP as . cadena

    cadenaString    shift and go to state 285
    id              shift and go to state 286
    cadena          shift and go to state 287


state 186

    (294) EXP -> EXP cadenaString .

    r_from          reduce using rule 294 (EXP -> EXP cadenaString .)
    coma            reduce using rule 294 (EXP -> EXP cadenaString .)
    where           reduce using rule 294 (EXP -> EXP cadenaString .)
    group           reduce using rule 294 (EXP -> EXP cadenaString .)
    having          reduce using rule 294 (EXP -> EXP cadenaString .)
    union           reduce using rule 294 (EXP -> EXP cadenaString .)
    intersect       reduce using rule 294 (EXP -> EXP cadenaString .)
    except          reduce using rule 294 (EXP -> EXP cadenaString .)
    order           reduce using rule 294 (EXP -> EXP cadenaString .)
    limit           reduce using rule 294 (EXP -> EXP cadenaString .)
    offset          reduce using rule 294 (EXP -> EXP cadenaString .)
    ptcoma          reduce using rule 294 (EXP -> EXP cadenaString .)
    mas             reduce using rule 294 (EXP -> EXP cadenaString .)
    menos           reduce using rule 294 (EXP -> EXP cadenaString .)
    multiplicacion  reduce using rule 294 (EXP -> EXP cadenaString .)
    division        reduce using rule 294 (EXP -> EXP cadenaString .)
    modulo          reduce using rule 294 (EXP -> EXP cadenaString .)
    elevado         reduce using rule 294 (EXP -> EXP cadenaString .)
    and             reduce using rule 294 (EXP -> EXP cadenaString .)
    or              reduce using rule 294 (EXP -> EXP cadenaString .)
    mayor           reduce using rule 294 (EXP -> EXP cadenaString .)
    menor           reduce using rule 294 (EXP -> EXP cadenaString .)
    mayor_igual     reduce using rule 294 (EXP -> EXP cadenaString .)
    menor_igual     reduce using rule 294 (EXP -> EXP cadenaString .)
    igual           reduce using rule 294 (EXP -> EXP cadenaString .)
    diferente1      reduce using rule 294 (EXP -> EXP cadenaString .)
    diferente2      reduce using rule 294 (EXP -> EXP cadenaString .)
    between         reduce using rule 294 (EXP -> EXP cadenaString .)
    is              reduce using rule 294 (EXP -> EXP cadenaString .)
    isnull          reduce using rule 294 (EXP -> EXP cadenaString .)
    notnull         reduce using rule 294 (EXP -> EXP cadenaString .)
    as              reduce using rule 294 (EXP -> EXP cadenaString .)
    cadenaString    reduce using rule 294 (EXP -> EXP cadenaString .)
    id              reduce using rule 294 (EXP -> EXP cadenaString .)
    cadena          reduce using rule 294 (EXP -> EXP cadenaString .)
    in              reduce using rule 294 (EXP -> EXP cadenaString .)
    not             reduce using rule 294 (EXP -> EXP cadenaString .)
    like            reduce using rule 294 (EXP -> EXP cadenaString .)
    then            reduce using rule 294 (EXP -> EXP cadenaString .)
    when            reduce using rule 294 (EXP -> EXP cadenaString .)
    parc            reduce using rule 294 (EXP -> EXP cadenaString .)
    end             reduce using rule 294 (EXP -> EXP cadenaString .)
    else            reduce using rule 294 (EXP -> EXP cadenaString .)
    constraint      reduce using rule 294 (EXP -> EXP cadenaString .)
    unique          reduce using rule 294 (EXP -> EXP cadenaString .)
    check           reduce using rule 294 (EXP -> EXP cadenaString .)
    default         reduce using rule 294 (EXP -> EXP cadenaString .)
    null            reduce using rule 294 (EXP -> EXP cadenaString .)
    primary         reduce using rule 294 (EXP -> EXP cadenaString .)
    references      reduce using rule 294 (EXP -> EXP cadenaString .)
    asc             reduce using rule 294 (EXP -> EXP cadenaString .)
    desc            reduce using rule 294 (EXP -> EXP cadenaString .)


state 187

    (296) EXP -> EXP id .

    r_from          reduce using rule 296 (EXP -> EXP id .)
    coma            reduce using rule 296 (EXP -> EXP id .)
    where           reduce using rule 296 (EXP -> EXP id .)
    group           reduce using rule 296 (EXP -> EXP id .)
    having          reduce using rule 296 (EXP -> EXP id .)
    union           reduce using rule 296 (EXP -> EXP id .)
    intersect       reduce using rule 296 (EXP -> EXP id .)
    except          reduce using rule 296 (EXP -> EXP id .)
    order           reduce using rule 296 (EXP -> EXP id .)
    limit           reduce using rule 296 (EXP -> EXP id .)
    offset          reduce using rule 296 (EXP -> EXP id .)
    ptcoma          reduce using rule 296 (EXP -> EXP id .)
    mas             reduce using rule 296 (EXP -> EXP id .)
    menos           reduce using rule 296 (EXP -> EXP id .)
    multiplicacion  reduce using rule 296 (EXP -> EXP id .)
    division        reduce using rule 296 (EXP -> EXP id .)
    modulo          reduce using rule 296 (EXP -> EXP id .)
    elevado         reduce using rule 296 (EXP -> EXP id .)
    and             reduce using rule 296 (EXP -> EXP id .)
    or              reduce using rule 296 (EXP -> EXP id .)
    mayor           reduce using rule 296 (EXP -> EXP id .)
    menor           reduce using rule 296 (EXP -> EXP id .)
    mayor_igual     reduce using rule 296 (EXP -> EXP id .)
    menor_igual     reduce using rule 296 (EXP -> EXP id .)
    igual           reduce using rule 296 (EXP -> EXP id .)
    diferente1      reduce using rule 296 (EXP -> EXP id .)
    diferente2      reduce using rule 296 (EXP -> EXP id .)
    between         reduce using rule 296 (EXP -> EXP id .)
    is              reduce using rule 296 (EXP -> EXP id .)
    isnull          reduce using rule 296 (EXP -> EXP id .)
    notnull         reduce using rule 296 (EXP -> EXP id .)
    as              reduce using rule 296 (EXP -> EXP id .)
    cadenaString    reduce using rule 296 (EXP -> EXP id .)
    id              reduce using rule 296 (EXP -> EXP id .)
    cadena          reduce using rule 296 (EXP -> EXP id .)
    in              reduce using rule 296 (EXP -> EXP id .)
    not             reduce using rule 296 (EXP -> EXP id .)
    like            reduce using rule 296 (EXP -> EXP id .)
    then            reduce using rule 296 (EXP -> EXP id .)
    when            reduce using rule 296 (EXP -> EXP id .)
    parc            reduce using rule 296 (EXP -> EXP id .)
    end             reduce using rule 296 (EXP -> EXP id .)
    else            reduce using rule 296 (EXP -> EXP id .)
    constraint      reduce using rule 296 (EXP -> EXP id .)
    unique          reduce using rule 296 (EXP -> EXP id .)
    check           reduce using rule 296 (EXP -> EXP id .)
    default         reduce using rule 296 (EXP -> EXP id .)
    null            reduce using rule 296 (EXP -> EXP id .)
    primary         reduce using rule 296 (EXP -> EXP id .)
    references      reduce using rule 296 (EXP -> EXP id .)
    asc             reduce using rule 296 (EXP -> EXP id .)
    desc            reduce using rule 296 (EXP -> EXP id .)


state 188

    (298) EXP -> EXP cadena .

    r_from          reduce using rule 298 (EXP -> EXP cadena .)
    coma            reduce using rule 298 (EXP -> EXP cadena .)
    where           reduce using rule 298 (EXP -> EXP cadena .)
    group           reduce using rule 298 (EXP -> EXP cadena .)
    having          reduce using rule 298 (EXP -> EXP cadena .)
    union           reduce using rule 298 (EXP -> EXP cadena .)
    intersect       reduce using rule 298 (EXP -> EXP cadena .)
    except          reduce using rule 298 (EXP -> EXP cadena .)
    order           reduce using rule 298 (EXP -> EXP cadena .)
    limit           reduce using rule 298 (EXP -> EXP cadena .)
    offset          reduce using rule 298 (EXP -> EXP cadena .)
    ptcoma          reduce using rule 298 (EXP -> EXP cadena .)
    mas             reduce using rule 298 (EXP -> EXP cadena .)
    menos           reduce using rule 298 (EXP -> EXP cadena .)
    multiplicacion  reduce using rule 298 (EXP -> EXP cadena .)
    division        reduce using rule 298 (EXP -> EXP cadena .)
    modulo          reduce using rule 298 (EXP -> EXP cadena .)
    elevado         reduce using rule 298 (EXP -> EXP cadena .)
    and             reduce using rule 298 (EXP -> EXP cadena .)
    or              reduce using rule 298 (EXP -> EXP cadena .)
    mayor           reduce using rule 298 (EXP -> EXP cadena .)
    menor           reduce using rule 298 (EXP -> EXP cadena .)
    mayor_igual     reduce using rule 298 (EXP -> EXP cadena .)
    menor_igual     reduce using rule 298 (EXP -> EXP cadena .)
    igual           reduce using rule 298 (EXP -> EXP cadena .)
    diferente1      reduce using rule 298 (EXP -> EXP cadena .)
    diferente2      reduce using rule 298 (EXP -> EXP cadena .)
    between         reduce using rule 298 (EXP -> EXP cadena .)
    is              reduce using rule 298 (EXP -> EXP cadena .)
    isnull          reduce using rule 298 (EXP -> EXP cadena .)
    notnull         reduce using rule 298 (EXP -> EXP cadena .)
    as              reduce using rule 298 (EXP -> EXP cadena .)
    cadenaString    reduce using rule 298 (EXP -> EXP cadena .)
    id              reduce using rule 298 (EXP -> EXP cadena .)
    cadena          reduce using rule 298 (EXP -> EXP cadena .)
    in              reduce using rule 298 (EXP -> EXP cadena .)
    not             reduce using rule 298 (EXP -> EXP cadena .)
    like            reduce using rule 298 (EXP -> EXP cadena .)
    then            reduce using rule 298 (EXP -> EXP cadena .)
    when            reduce using rule 298 (EXP -> EXP cadena .)
    parc            reduce using rule 298 (EXP -> EXP cadena .)
    end             reduce using rule 298 (EXP -> EXP cadena .)
    else            reduce using rule 298 (EXP -> EXP cadena .)
    constraint      reduce using rule 298 (EXP -> EXP cadena .)
    unique          reduce using rule 298 (EXP -> EXP cadena .)
    check           reduce using rule 298 (EXP -> EXP cadena .)
    default         reduce using rule 298 (EXP -> EXP cadena .)
    null            reduce using rule 298 (EXP -> EXP cadena .)
    primary         reduce using rule 298 (EXP -> EXP cadena .)
    references      reduce using rule 298 (EXP -> EXP cadena .)
    asc             reduce using rule 298 (EXP -> EXP cadena .)
    desc            reduce using rule 298 (EXP -> EXP cadena .)


state 189

    (302) EXP -> EXP in . para EXP parc

    para            shift and go to state 288


state 190

    (309) EXP -> EXP like . cadena

    cadena          shift and go to state 289


state 191

    (299) EXP -> mas EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    r_from          reduce using rule 299 (EXP -> mas EXP .)
    coma            reduce using rule 299 (EXP -> mas EXP .)
    where           reduce using rule 299 (EXP -> mas EXP .)
    group           reduce using rule 299 (EXP -> mas EXP .)
    having          reduce using rule 299 (EXP -> mas EXP .)
    union           reduce using rule 299 (EXP -> mas EXP .)
    intersect       reduce using rule 299 (EXP -> mas EXP .)
    except          reduce using rule 299 (EXP -> mas EXP .)
    order           reduce using rule 299 (EXP -> mas EXP .)
    limit           reduce using rule 299 (EXP -> mas EXP .)
    offset          reduce using rule 299 (EXP -> mas EXP .)
    ptcoma          reduce using rule 299 (EXP -> mas EXP .)
    mas             reduce using rule 299 (EXP -> mas EXP .)
    menos           reduce using rule 299 (EXP -> mas EXP .)
    multiplicacion  reduce using rule 299 (EXP -> mas EXP .)
    division        reduce using rule 299 (EXP -> mas EXP .)
    modulo          reduce using rule 299 (EXP -> mas EXP .)
    elevado         reduce using rule 299 (EXP -> mas EXP .)
    and             reduce using rule 299 (EXP -> mas EXP .)
    or              reduce using rule 299 (EXP -> mas EXP .)
    mayor           reduce using rule 299 (EXP -> mas EXP .)
    menor           reduce using rule 299 (EXP -> mas EXP .)
    mayor_igual     reduce using rule 299 (EXP -> mas EXP .)
    menor_igual     reduce using rule 299 (EXP -> mas EXP .)
    igual           reduce using rule 299 (EXP -> mas EXP .)
    diferente1      reduce using rule 299 (EXP -> mas EXP .)
    diferente2      reduce using rule 299 (EXP -> mas EXP .)
    between         reduce using rule 299 (EXP -> mas EXP .)
    is              reduce using rule 299 (EXP -> mas EXP .)
    isnull          reduce using rule 299 (EXP -> mas EXP .)
    notnull         reduce using rule 299 (EXP -> mas EXP .)
    as              reduce using rule 299 (EXP -> mas EXP .)
    cadenaString    reduce using rule 299 (EXP -> mas EXP .)
    id              reduce using rule 299 (EXP -> mas EXP .)
    cadena          reduce using rule 299 (EXP -> mas EXP .)
    in              reduce using rule 299 (EXP -> mas EXP .)
    not             reduce using rule 299 (EXP -> mas EXP .)
    like            reduce using rule 299 (EXP -> mas EXP .)
    then            reduce using rule 299 (EXP -> mas EXP .)
    when            reduce using rule 299 (EXP -> mas EXP .)
    parc            reduce using rule 299 (EXP -> mas EXP .)
    end             reduce using rule 299 (EXP -> mas EXP .)
    else            reduce using rule 299 (EXP -> mas EXP .)
    constraint      reduce using rule 299 (EXP -> mas EXP .)
    unique          reduce using rule 299 (EXP -> mas EXP .)
    check           reduce using rule 299 (EXP -> mas EXP .)
    default         reduce using rule 299 (EXP -> mas EXP .)
    null            reduce using rule 299 (EXP -> mas EXP .)
    primary         reduce using rule 299 (EXP -> mas EXP .)
    references      reduce using rule 299 (EXP -> mas EXP .)
    asc             reduce using rule 299 (EXP -> mas EXP .)
    desc            reduce using rule 299 (EXP -> mas EXP .)

  ! mas             [ shift and go to state 165 ]
  ! menos           [ shift and go to state 166 ]
  ! multiplicacion  [ shift and go to state 167 ]
  ! division        [ shift and go to state 168 ]
  ! modulo          [ shift and go to state 169 ]
  ! elevado         [ shift and go to state 170 ]
  ! and             [ shift and go to state 171 ]
  ! or              [ shift and go to state 172 ]
  ! mayor           [ shift and go to state 173 ]
  ! menor           [ shift and go to state 174 ]
  ! mayor_igual     [ shift and go to state 175 ]
  ! menor_igual     [ shift and go to state 176 ]
  ! igual           [ shift and go to state 177 ]
  ! diferente1      [ shift and go to state 178 ]
  ! diferente2      [ shift and go to state 179 ]
  ! between         [ shift and go to state 180 ]
  ! is              [ shift and go to state 181 ]
  ! isnull          [ shift and go to state 183 ]
  ! notnull         [ shift and go to state 184 ]
  ! as              [ shift and go to state 185 ]
  ! cadenaString    [ shift and go to state 186 ]
  ! id              [ shift and go to state 187 ]
  ! cadena          [ shift and go to state 188 ]
  ! in              [ shift and go to state 189 ]
  ! not             [ shift and go to state 182 ]
  ! like            [ shift and go to state 190 ]


state 192

    (300) EXP -> menos EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    r_from          reduce using rule 300 (EXP -> menos EXP .)
    coma            reduce using rule 300 (EXP -> menos EXP .)
    where           reduce using rule 300 (EXP -> menos EXP .)
    group           reduce using rule 300 (EXP -> menos EXP .)
    having          reduce using rule 300 (EXP -> menos EXP .)
    union           reduce using rule 300 (EXP -> menos EXP .)
    intersect       reduce using rule 300 (EXP -> menos EXP .)
    except          reduce using rule 300 (EXP -> menos EXP .)
    order           reduce using rule 300 (EXP -> menos EXP .)
    limit           reduce using rule 300 (EXP -> menos EXP .)
    offset          reduce using rule 300 (EXP -> menos EXP .)
    ptcoma          reduce using rule 300 (EXP -> menos EXP .)
    mas             reduce using rule 300 (EXP -> menos EXP .)
    menos           reduce using rule 300 (EXP -> menos EXP .)
    multiplicacion  reduce using rule 300 (EXP -> menos EXP .)
    division        reduce using rule 300 (EXP -> menos EXP .)
    modulo          reduce using rule 300 (EXP -> menos EXP .)
    elevado         reduce using rule 300 (EXP -> menos EXP .)
    and             reduce using rule 300 (EXP -> menos EXP .)
    or              reduce using rule 300 (EXP -> menos EXP .)
    mayor           reduce using rule 300 (EXP -> menos EXP .)
    menor           reduce using rule 300 (EXP -> menos EXP .)
    mayor_igual     reduce using rule 300 (EXP -> menos EXP .)
    menor_igual     reduce using rule 300 (EXP -> menos EXP .)
    igual           reduce using rule 300 (EXP -> menos EXP .)
    diferente1      reduce using rule 300 (EXP -> menos EXP .)
    diferente2      reduce using rule 300 (EXP -> menos EXP .)
    between         reduce using rule 300 (EXP -> menos EXP .)
    is              reduce using rule 300 (EXP -> menos EXP .)
    isnull          reduce using rule 300 (EXP -> menos EXP .)
    notnull         reduce using rule 300 (EXP -> menos EXP .)
    as              reduce using rule 300 (EXP -> menos EXP .)
    cadenaString    reduce using rule 300 (EXP -> menos EXP .)
    id              reduce using rule 300 (EXP -> menos EXP .)
    cadena          reduce using rule 300 (EXP -> menos EXP .)
    in              reduce using rule 300 (EXP -> menos EXP .)
    not             reduce using rule 300 (EXP -> menos EXP .)
    like            reduce using rule 300 (EXP -> menos EXP .)
    then            reduce using rule 300 (EXP -> menos EXP .)
    when            reduce using rule 300 (EXP -> menos EXP .)
    parc            reduce using rule 300 (EXP -> menos EXP .)
    end             reduce using rule 300 (EXP -> menos EXP .)
    else            reduce using rule 300 (EXP -> menos EXP .)
    constraint      reduce using rule 300 (EXP -> menos EXP .)
    unique          reduce using rule 300 (EXP -> menos EXP .)
    check           reduce using rule 300 (EXP -> menos EXP .)
    default         reduce using rule 300 (EXP -> menos EXP .)
    null            reduce using rule 300 (EXP -> menos EXP .)
    primary         reduce using rule 300 (EXP -> menos EXP .)
    references      reduce using rule 300 (EXP -> menos EXP .)
    asc             reduce using rule 300 (EXP -> menos EXP .)
    desc            reduce using rule 300 (EXP -> menos EXP .)

  ! mas             [ shift and go to state 165 ]
  ! menos           [ shift and go to state 166 ]
  ! multiplicacion  [ shift and go to state 167 ]
  ! division        [ shift and go to state 168 ]
  ! modulo          [ shift and go to state 169 ]
  ! elevado         [ shift and go to state 170 ]
  ! and             [ shift and go to state 171 ]
  ! or              [ shift and go to state 172 ]
  ! mayor           [ shift and go to state 173 ]
  ! menor           [ shift and go to state 174 ]
  ! mayor_igual     [ shift and go to state 175 ]
  ! menor_igual     [ shift and go to state 176 ]
  ! igual           [ shift and go to state 177 ]
  ! diferente1      [ shift and go to state 178 ]
  ! diferente2      [ shift and go to state 179 ]
  ! between         [ shift and go to state 180 ]
  ! is              [ shift and go to state 181 ]
  ! isnull          [ shift and go to state 183 ]
  ! notnull         [ shift and go to state 184 ]
  ! as              [ shift and go to state 185 ]
  ! cadenaString    [ shift and go to state 186 ]
  ! id              [ shift and go to state 187 ]
  ! cadena          [ shift and go to state 188 ]
  ! in              [ shift and go to state 189 ]
  ! not             [ shift and go to state 182 ]
  ! like            [ shift and go to state 190 ]


state 193

    (301) EXP -> not EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    r_from          reduce using rule 301 (EXP -> not EXP .)
    coma            reduce using rule 301 (EXP -> not EXP .)
    where           reduce using rule 301 (EXP -> not EXP .)
    group           reduce using rule 301 (EXP -> not EXP .)
    having          reduce using rule 301 (EXP -> not EXP .)
    union           reduce using rule 301 (EXP -> not EXP .)
    intersect       reduce using rule 301 (EXP -> not EXP .)
    except          reduce using rule 301 (EXP -> not EXP .)
    order           reduce using rule 301 (EXP -> not EXP .)
    limit           reduce using rule 301 (EXP -> not EXP .)
    offset          reduce using rule 301 (EXP -> not EXP .)
    ptcoma          reduce using rule 301 (EXP -> not EXP .)
    and             reduce using rule 301 (EXP -> not EXP .)
    or              reduce using rule 301 (EXP -> not EXP .)
    between         reduce using rule 301 (EXP -> not EXP .)
    is              reduce using rule 301 (EXP -> not EXP .)
    isnull          reduce using rule 301 (EXP -> not EXP .)
    notnull         reduce using rule 301 (EXP -> not EXP .)
    as              reduce using rule 301 (EXP -> not EXP .)
    cadenaString    reduce using rule 301 (EXP -> not EXP .)
    id              reduce using rule 301 (EXP -> not EXP .)
    cadena          reduce using rule 301 (EXP -> not EXP .)
    in              reduce using rule 301 (EXP -> not EXP .)
    like            reduce using rule 301 (EXP -> not EXP .)
    then            reduce using rule 301 (EXP -> not EXP .)
    when            reduce using rule 301 (EXP -> not EXP .)
    parc            reduce using rule 301 (EXP -> not EXP .)
    end             reduce using rule 301 (EXP -> not EXP .)
    else            reduce using rule 301 (EXP -> not EXP .)
    constraint      reduce using rule 301 (EXP -> not EXP .)
    unique          reduce using rule 301 (EXP -> not EXP .)
    check           reduce using rule 301 (EXP -> not EXP .)
    default         reduce using rule 301 (EXP -> not EXP .)
    null            reduce using rule 301 (EXP -> not EXP .)
    primary         reduce using rule 301 (EXP -> not EXP .)
    references      reduce using rule 301 (EXP -> not EXP .)
    asc             reduce using rule 301 (EXP -> not EXP .)
    desc            reduce using rule 301 (EXP -> not EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170
    mayor           shift and go to state 173
    menor           shift and go to state 174
    mayor_igual     shift and go to state 175
    menor_igual     shift and go to state 176
    igual           shift and go to state 177
    diferente1      shift and go to state 178
    diferente2      shift and go to state 179
    not             shift and go to state 182

  ! mas             [ reduce using rule 301 (EXP -> not EXP .) ]
  ! menos           [ reduce using rule 301 (EXP -> not EXP .) ]
  ! multiplicacion  [ reduce using rule 301 (EXP -> not EXP .) ]
  ! division        [ reduce using rule 301 (EXP -> not EXP .) ]
  ! modulo          [ reduce using rule 301 (EXP -> not EXP .) ]
  ! elevado         [ reduce using rule 301 (EXP -> not EXP .) ]
  ! mayor           [ reduce using rule 301 (EXP -> not EXP .) ]
  ! menor           [ reduce using rule 301 (EXP -> not EXP .) ]
  ! mayor_igual     [ reduce using rule 301 (EXP -> not EXP .) ]
  ! menor_igual     [ reduce using rule 301 (EXP -> not EXP .) ]
  ! igual           [ reduce using rule 301 (EXP -> not EXP .) ]
  ! diferente1      [ reduce using rule 301 (EXP -> not EXP .) ]
  ! diferente2      [ reduce using rule 301 (EXP -> not EXP .) ]
  ! not             [ reduce using rule 301 (EXP -> not EXP .) ]
  ! and             [ shift and go to state 171 ]
  ! or              [ shift and go to state 172 ]
  ! between         [ shift and go to state 180 ]
  ! is              [ shift and go to state 181 ]
  ! isnull          [ shift and go to state 183 ]
  ! notnull         [ shift and go to state 184 ]
  ! as              [ shift and go to state 185 ]
  ! cadenaString    [ shift and go to state 186 ]
  ! id              [ shift and go to state 187 ]
  ! cadena          [ shift and go to state 188 ]
  ! in              [ shift and go to state 189 ]
  ! like            [ shift and go to state 190 ]


state 194

    (314) EXP -> id para . LEXP parc
    (315) EXP -> id para . parc
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    parc            shift and go to state 291
    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 290
    EXP                            shift and go to state 79
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 195

    (333) EXP -> cadena as . TIPO
    (220) TIPO -> . interval cadena
    (221) TIPO -> . decimal para int coma int parc
    (222) TIPO -> . decimal para int parc
    (223) TIPO -> . decimal
    (224) TIPO -> . numeric para int coma int parc
    (225) TIPO -> . numeric para int parc
    (226) TIPO -> . numeric
    (227) TIPO -> . varchar para int parc
    (228) TIPO -> . timestamp para int parc
    (229) TIPO -> . character para int parc
    (230) TIPO -> . interval para int parc
    (231) TIPO -> . char para int parc
    (232) TIPO -> . time para int parc
    (233) TIPO -> . character varying para int parc
    (234) TIPO -> . id modulo rowtype
    (235) TIPO -> . idPunto modulo type
    (236) TIPO -> . timestamp para int parc without time zone
    (237) TIPO -> . timestamp para int parc with time zone
    (238) TIPO -> . time para int parc without time zone
    (239) TIPO -> . time para int parc with time zone
    (240) TIPO -> . interval para int parc cadena
    (241) TIPO -> . smallint
    (242) TIPO -> . integer
    (243) TIPO -> . r_int
    (244) TIPO -> . bigint
    (245) TIPO -> . real
    (246) TIPO -> . double precision
    (247) TIPO -> . money
    (248) TIPO -> . text
    (249) TIPO -> . timestamp
    (250) TIPO -> . date
    (251) TIPO -> . time
    (252) TIPO -> . interval
    (253) TIPO -> . boolean
    (254) TIPO -> . record
    (255) TIPO -> . varchar
    (256) TIPO -> . timestamp without time zone
    (257) TIPO -> . timestamp with time zone
    (258) TIPO -> . time without time zone
    (259) TIPO -> . time with time zone
    (260) TIPO -> . id

    interval        shift and go to state 51
    decimal         shift and go to state 52
    numeric         shift and go to state 53
    varchar         shift and go to state 54
    timestamp       shift and go to state 55
    character       shift and go to state 56
    char            shift and go to state 57
    time            shift and go to state 58
    id              shift and go to state 46
    idPunto         shift and go to state 59
    smallint        shift and go to state 60
    integer         shift and go to state 61
    r_int           shift and go to state 62
    bigint          shift and go to state 63
    real            shift and go to state 64
    double          shift and go to state 65
    money           shift and go to state 66
    text            shift and go to state 67
    date            shift and go to state 68
    boolean         shift and go to state 69
    record          shift and go to state 70

    TIPO                           shift and go to state 292

state 196

    (312) EXP -> para EXP . parc
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    parc            shift and go to state 293
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170
    and             shift and go to state 171
    or              shift and go to state 172
    mayor           shift and go to state 173
    menor           shift and go to state 174
    mayor_igual     shift and go to state 175
    menor_igual     shift and go to state 176
    igual           shift and go to state 177
    diferente1      shift and go to state 178
    diferente2      shift and go to state 179
    between         shift and go to state 180
    is              shift and go to state 181
    isnull          shift and go to state 183
    notnull         shift and go to state 184
    as              shift and go to state 185
    cadenaString    shift and go to state 186
    id              shift and go to state 187
    cadena          shift and go to state 188
    in              shift and go to state 189
    not             shift and go to state 182
    like            shift and go to state 190


state 197

    (316) EXP -> any para . LEXP parc
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 294
    EXP                            shift and go to state 79
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 198

    (317) EXP -> all para . LEXP parc
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 295
    EXP                            shift and go to state 79
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 199

    (318) EXP -> some para . LEXP parc
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 296
    EXP                            shift and go to state 79
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 200

    (319) EXP -> extract para . FIELDS r_from timestamp cadena parc
    (261) FIELDS -> . year
    (262) FIELDS -> . month
    (263) FIELDS -> . day
    (264) FIELDS -> . hour
    (265) FIELDS -> . minute
    (266) FIELDS -> . second

    year            shift and go to state 298
    month           shift and go to state 299
    day             shift and go to state 300
    hour            shift and go to state 301
    minute          shift and go to state 302
    second          shift and go to state 303

    FIELDS                         shift and go to state 297

state 201

    (331) EXP -> timestamp cadena .

    r_from          reduce using rule 331 (EXP -> timestamp cadena .)
    coma            reduce using rule 331 (EXP -> timestamp cadena .)
    where           reduce using rule 331 (EXP -> timestamp cadena .)
    group           reduce using rule 331 (EXP -> timestamp cadena .)
    having          reduce using rule 331 (EXP -> timestamp cadena .)
    union           reduce using rule 331 (EXP -> timestamp cadena .)
    intersect       reduce using rule 331 (EXP -> timestamp cadena .)
    except          reduce using rule 331 (EXP -> timestamp cadena .)
    order           reduce using rule 331 (EXP -> timestamp cadena .)
    limit           reduce using rule 331 (EXP -> timestamp cadena .)
    offset          reduce using rule 331 (EXP -> timestamp cadena .)
    ptcoma          reduce using rule 331 (EXP -> timestamp cadena .)
    mas             reduce using rule 331 (EXP -> timestamp cadena .)
    menos           reduce using rule 331 (EXP -> timestamp cadena .)
    multiplicacion  reduce using rule 331 (EXP -> timestamp cadena .)
    division        reduce using rule 331 (EXP -> timestamp cadena .)
    modulo          reduce using rule 331 (EXP -> timestamp cadena .)
    elevado         reduce using rule 331 (EXP -> timestamp cadena .)
    and             reduce using rule 331 (EXP -> timestamp cadena .)
    or              reduce using rule 331 (EXP -> timestamp cadena .)
    mayor           reduce using rule 331 (EXP -> timestamp cadena .)
    menor           reduce using rule 331 (EXP -> timestamp cadena .)
    mayor_igual     reduce using rule 331 (EXP -> timestamp cadena .)
    menor_igual     reduce using rule 331 (EXP -> timestamp cadena .)
    igual           reduce using rule 331 (EXP -> timestamp cadena .)
    diferente1      reduce using rule 331 (EXP -> timestamp cadena .)
    diferente2      reduce using rule 331 (EXP -> timestamp cadena .)
    between         reduce using rule 331 (EXP -> timestamp cadena .)
    is              reduce using rule 331 (EXP -> timestamp cadena .)
    isnull          reduce using rule 331 (EXP -> timestamp cadena .)
    notnull         reduce using rule 331 (EXP -> timestamp cadena .)
    as              reduce using rule 331 (EXP -> timestamp cadena .)
    cadenaString    reduce using rule 331 (EXP -> timestamp cadena .)
    id              reduce using rule 331 (EXP -> timestamp cadena .)
    cadena          reduce using rule 331 (EXP -> timestamp cadena .)
    in              reduce using rule 331 (EXP -> timestamp cadena .)
    not             reduce using rule 331 (EXP -> timestamp cadena .)
    like            reduce using rule 331 (EXP -> timestamp cadena .)
    then            reduce using rule 331 (EXP -> timestamp cadena .)
    when            reduce using rule 331 (EXP -> timestamp cadena .)
    parc            reduce using rule 331 (EXP -> timestamp cadena .)
    end             reduce using rule 331 (EXP -> timestamp cadena .)
    else            reduce using rule 331 (EXP -> timestamp cadena .)
    constraint      reduce using rule 331 (EXP -> timestamp cadena .)
    unique          reduce using rule 331 (EXP -> timestamp cadena .)
    check           reduce using rule 331 (EXP -> timestamp cadena .)
    default         reduce using rule 331 (EXP -> timestamp cadena .)
    null            reduce using rule 331 (EXP -> timestamp cadena .)
    primary         reduce using rule 331 (EXP -> timestamp cadena .)
    references      reduce using rule 331 (EXP -> timestamp cadena .)
    asc             reduce using rule 331 (EXP -> timestamp cadena .)
    desc            reduce using rule 331 (EXP -> timestamp cadena .)


state 202

    (332) EXP -> interval cadena .

    r_from          reduce using rule 332 (EXP -> interval cadena .)
    coma            reduce using rule 332 (EXP -> interval cadena .)
    where           reduce using rule 332 (EXP -> interval cadena .)
    group           reduce using rule 332 (EXP -> interval cadena .)
    having          reduce using rule 332 (EXP -> interval cadena .)
    union           reduce using rule 332 (EXP -> interval cadena .)
    intersect       reduce using rule 332 (EXP -> interval cadena .)
    except          reduce using rule 332 (EXP -> interval cadena .)
    order           reduce using rule 332 (EXP -> interval cadena .)
    limit           reduce using rule 332 (EXP -> interval cadena .)
    offset          reduce using rule 332 (EXP -> interval cadena .)
    ptcoma          reduce using rule 332 (EXP -> interval cadena .)
    mas             reduce using rule 332 (EXP -> interval cadena .)
    menos           reduce using rule 332 (EXP -> interval cadena .)
    multiplicacion  reduce using rule 332 (EXP -> interval cadena .)
    division        reduce using rule 332 (EXP -> interval cadena .)
    modulo          reduce using rule 332 (EXP -> interval cadena .)
    elevado         reduce using rule 332 (EXP -> interval cadena .)
    and             reduce using rule 332 (EXP -> interval cadena .)
    or              reduce using rule 332 (EXP -> interval cadena .)
    mayor           reduce using rule 332 (EXP -> interval cadena .)
    menor           reduce using rule 332 (EXP -> interval cadena .)
    mayor_igual     reduce using rule 332 (EXP -> interval cadena .)
    menor_igual     reduce using rule 332 (EXP -> interval cadena .)
    igual           reduce using rule 332 (EXP -> interval cadena .)
    diferente1      reduce using rule 332 (EXP -> interval cadena .)
    diferente2      reduce using rule 332 (EXP -> interval cadena .)
    between         reduce using rule 332 (EXP -> interval cadena .)
    is              reduce using rule 332 (EXP -> interval cadena .)
    isnull          reduce using rule 332 (EXP -> interval cadena .)
    notnull         reduce using rule 332 (EXP -> interval cadena .)
    as              reduce using rule 332 (EXP -> interval cadena .)
    cadenaString    reduce using rule 332 (EXP -> interval cadena .)
    id              reduce using rule 332 (EXP -> interval cadena .)
    cadena          reduce using rule 332 (EXP -> interval cadena .)
    in              reduce using rule 332 (EXP -> interval cadena .)
    not             reduce using rule 332 (EXP -> interval cadena .)
    like            reduce using rule 332 (EXP -> interval cadena .)
    then            reduce using rule 332 (EXP -> interval cadena .)
    when            reduce using rule 332 (EXP -> interval cadena .)
    parc            reduce using rule 332 (EXP -> interval cadena .)
    end             reduce using rule 332 (EXP -> interval cadena .)
    else            reduce using rule 332 (EXP -> interval cadena .)
    constraint      reduce using rule 332 (EXP -> interval cadena .)
    unique          reduce using rule 332 (EXP -> interval cadena .)
    check           reduce using rule 332 (EXP -> interval cadena .)
    default         reduce using rule 332 (EXP -> interval cadena .)
    null            reduce using rule 332 (EXP -> interval cadena .)
    primary         reduce using rule 332 (EXP -> interval cadena .)
    references      reduce using rule 332 (EXP -> interval cadena .)
    asc             reduce using rule 332 (EXP -> interval cadena .)
    desc            reduce using rule 332 (EXP -> interval cadena .)


state 203

    (152) CREATETABLE -> create table id . para LDEF parc ptcoma
    (153) CREATETABLE -> create table id . para LDEF parc HERENCIA ptcoma

    para            shift and go to state 304


state 204

    (183) CREATETYPE -> create type id . as enum para LEXP parc

    as              shift and go to state 305


state 205

    (135) CREATEDB -> create RD if . not exist id
    (136) CREATEDB -> create RD if . not exist id OPCCDB

    not             shift and go to state 306


state 206

    (137) CREATEDB -> create RD id .
    (138) CREATEDB -> create RD id . OPCCDB
    (139) OPCCDB -> . PROPIETARIO
    (140) OPCCDB -> . MODO
    (141) OPCCDB -> . PROPIETARIO MODO
    (144) PROPIETARIO -> . owner igual id
    (145) PROPIETARIO -> . owner igual cadena
    (146) PROPIETARIO -> . owner igual cadenaString
    (147) PROPIETARIO -> . owner id
    (148) PROPIETARIO -> . owner cadena
    (149) PROPIETARIO -> . owner cadenaString
    (150) MODO -> . mode igual int
    (151) MODO -> . mode int

    ptcoma          reduce using rule 137 (CREATEDB -> create RD id .)
    owner           shift and go to state 310
    mode            shift and go to state 311

    OPCCDB                         shift and go to state 307
    PROPIETARIO                    shift and go to state 308
    MODO                           shift and go to state 309

state 207

    (45) CREATEINDEX -> create index id . on id para LEXP parc
    (47) CREATEINDEX -> create index id . on id using hash para LEXP parc
    (48) CREATEINDEX -> create index id . on id para id ORDEN parc
    (49) CREATEINDEX -> create index id . on id para id id ORDEN parc

    on              shift and go to state 312


state 208

    (46) CREATEINDEX -> create unique index . id on id para LEXP parc

    id              shift and go to state 313


state 209

    (30) PROCEDIMIENTOS -> create procedure id . para LPARAM parc LENGUAJE LCONTENIDOP
    (31) PROCEDIMIENTOS -> create procedure id . para LPARAM parc LCONTENIDOP LENGUAJE

    para            shift and go to state 314


state 210

    (26) FUNCIONES -> create function id . para LPARAM parc RETURNP LENGUAJE LCONTENIDOP
    (27) FUNCIONES -> create function id . para LPARAM parc RETURNP LCONTENIDOP LENGUAJE

    para            shift and go to state 315


state 211

    (142) RD -> or replace . databases

    databases       shift and go to state 316


state 212

    (212) UPDATE -> update id set . LCAMPOS WHERE
    (213) LCAMPOS -> . LCAMPOS coma id igual EXP
    (214) LCAMPOS -> . id igual EXP

    id              shift and go to state 317

    LCAMPOS                        shift and go to state 318

state 213

    (215) DELETE -> delete r_from id . WHERE
    (195) WHERE -> . where EXP
    (196) WHERE -> . where EXIST
    (197) WHERE -> .

    where           shift and go to state 73
    ptcoma          reduce using rule 197 (WHERE -> .)

    WHERE                          shift and go to state 319

state 214

    (113) ALTER -> alter databases id . rename to id
    (114) ALTER -> alter databases id . owner to id

    rename          shift and go to state 320
    owner           shift and go to state 321


state 215

    (115) ALTER -> alter table id . LOP
    (116) LOP -> . LOP coma OP
    (117) LOP -> . OP
    (118) OP -> . add column id TIPO
    (119) OP -> . add check para CONDCHECK parc
    (120) OP -> . add constraint id check para CONDCHECK parc
    (121) OP -> . add constraint id unique para LEXP parc
    (122) OP -> . add unique para LEXP parc
    (123) OP -> . add foreign key para LEXP parc references id para LEXP parc
    (124) OP -> . add constraint id foreign key para LEXP parc references id para LEXP parc
    (125) OP -> . alter column id set not null
    (126) OP -> . alter column id set null
    (127) OP -> . drop constraint id
    (128) OP -> . drop column LEXP
    (129) OP -> . drop check id
    (130) OP -> . rename column id to id
    (131) OP -> . alter column id type TIPO

    add             shift and go to state 325
    alter           shift and go to state 322
    drop            shift and go to state 326
    rename          shift and go to state 327

    LOP                            shift and go to state 323
    OP                             shift and go to state 324

state 216

    (109) DROP -> drop all para . parc

    parc            shift and go to state 328


state 217

    (110) DROP -> drop table id .

    ptcoma          reduce using rule 110 (DROP -> drop table id .)


state 218

    (111) DROP -> drop databases if . exist id

    exist           shift and go to state 329


state 219

    (112) DROP -> drop databases id .

    ptcoma          reduce using rule 112 (DROP -> drop databases id .)


state 220

    (69) CONDICIONIF -> if EXP then . LISTACONTENIDO ELSEF end if
    (70) CONDICIONIF -> if EXP then . LISTACONTENIDO LELIF end if
    (71) CONDICIONIF -> if EXP then . LISTACONTENIDO end if
    (72) CONDICIONIF -> if EXP then . LISTACONTENIDO LELIF ELSEF end if
    (80) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (81) LISTACONTENIDO -> . CONTENIDO
    (82) CONTENIDO -> . ASIGNACION ptcoma
    (83) CONTENIDO -> . DECLARACIONES ptcoma
    (84) CONTENIDO -> . CONDICIONIF ptcoma
    (85) CONTENIDO -> . RAISE ptcoma
    (86) CONTENIDO -> . BEGINEND ptcoma
    (87) CONTENIDO -> . CALLPROCEDURE ptcoma
    (88) CONTENIDO -> . RETURN ptcoma
    (89) CONTENIDO -> . CASE ptcoma
    (67) ASIGNACION -> . id dospuntos igual EXP
    (68) ASIGNACION -> . id igual EXP
    (59) DECLARACIONES -> . id TIPO not null ASIG
    (60) DECLARACIONES -> . id TIPO ASIG
    (61) DECLARACIONES -> . id constant TIPO not null ASIG
    (62) DECLARACIONES -> . id constant TIPO ASIG
    (69) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (70) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (71) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (72) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (90) RAISE -> . raise LEVEL FORMAT
    (91) RAISE -> . raise LEVEL EXP
    (92) RAISE -> . raise LEVEL
    (93) RAISE -> . raise
    (94) RAISE -> . raise LEVEL cadena coma id
    (44) BEGINEND -> . begin LISTACONTENIDO end
    (29) CALLPROCEDURE -> . call id para LEXP parc
    (24) RETURN -> . return LEXP
    (25) RETURN -> . return id para LEXP parc
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    id              shift and go to state 340
    if              shift and go to state 30
    raise           shift and go to state 341
    begin           shift and go to state 342
    call            shift and go to state 343
    return          shift and go to state 344
    case            shift and go to state 32

    LISTACONTENIDO                 shift and go to state 330
    CONTENIDO                      shift and go to state 331
    ASIGNACION                     shift and go to state 332
    DECLARACIONES                  shift and go to state 333
    CONDICIONIF                    shift and go to state 334
    RAISE                          shift and go to state 335
    BEGINEND                       shift and go to state 336
    CALLPROCEDURE                  shift and go to state 337
    RETURN                         shift and go to state 338
    CASE                           shift and go to state 339

state 221

    (107) INSERT -> insert into id . values para LEXP parc
    (108) INSERT -> insert into id . para LEXP parc values para LEXP parc

    values          shift and go to state 345
    para            shift and go to state 346


state 222

    (76) CASE -> case LEXP LISTAWHEN . ELSEF end case
    (77) CASE -> case LEXP LISTAWHEN . end case
    (102) LISTAWHEN -> LISTAWHEN . WHEN
    (75) ELSEF -> . else LISTACONTENIDO
    (104) WHEN -> . when LEXP then LISTACONTENIDO
    (105) WHEN -> . when LEXP then LEXP

    end             shift and go to state 348
    else            shift and go to state 349
    when            shift and go to state 126

    ELSEF                          shift and go to state 347
    WHEN                           shift and go to state 225

state 223

    (78) CASE -> case LISTAWHEN ELSE . end

    end             shift and go to state 350


state 224

    (79) CASE -> case LISTAWHEN end .

    use             reduce using rule 79 (CASE -> case LISTAWHEN end .)
    select          reduce using rule 79 (CASE -> case LISTAWHEN end .)
    create          reduce using rule 79 (CASE -> case LISTAWHEN end .)
    update          reduce using rule 79 (CASE -> case LISTAWHEN end .)
    delete          reduce using rule 79 (CASE -> case LISTAWHEN end .)
    alter           reduce using rule 79 (CASE -> case LISTAWHEN end .)
    drop            reduce using rule 79 (CASE -> case LISTAWHEN end .)
    insert          reduce using rule 79 (CASE -> case LISTAWHEN end .)
    case            reduce using rule 79 (CASE -> case LISTAWHEN end .)
    show            reduce using rule 79 (CASE -> case LISTAWHEN end .)
    id              reduce using rule 79 (CASE -> case LISTAWHEN end .)
    if              reduce using rule 79 (CASE -> case LISTAWHEN end .)
    $end            reduce using rule 79 (CASE -> case LISTAWHEN end .)
    r_from          reduce using rule 79 (CASE -> case LISTAWHEN end .)
    coma            reduce using rule 79 (CASE -> case LISTAWHEN end .)
    where           reduce using rule 79 (CASE -> case LISTAWHEN end .)
    group           reduce using rule 79 (CASE -> case LISTAWHEN end .)
    having          reduce using rule 79 (CASE -> case LISTAWHEN end .)
    union           reduce using rule 79 (CASE -> case LISTAWHEN end .)
    intersect       reduce using rule 79 (CASE -> case LISTAWHEN end .)
    except          reduce using rule 79 (CASE -> case LISTAWHEN end .)
    order           reduce using rule 79 (CASE -> case LISTAWHEN end .)
    limit           reduce using rule 79 (CASE -> case LISTAWHEN end .)
    offset          reduce using rule 79 (CASE -> case LISTAWHEN end .)
    ptcoma          reduce using rule 79 (CASE -> case LISTAWHEN end .)
    mas             reduce using rule 79 (CASE -> case LISTAWHEN end .)
    menos           reduce using rule 79 (CASE -> case LISTAWHEN end .)
    multiplicacion  reduce using rule 79 (CASE -> case LISTAWHEN end .)
    division        reduce using rule 79 (CASE -> case LISTAWHEN end .)
    modulo          reduce using rule 79 (CASE -> case LISTAWHEN end .)
    elevado         reduce using rule 79 (CASE -> case LISTAWHEN end .)
    and             reduce using rule 79 (CASE -> case LISTAWHEN end .)
    or              reduce using rule 79 (CASE -> case LISTAWHEN end .)
    mayor           reduce using rule 79 (CASE -> case LISTAWHEN end .)
    menor           reduce using rule 79 (CASE -> case LISTAWHEN end .)
    mayor_igual     reduce using rule 79 (CASE -> case LISTAWHEN end .)
    menor_igual     reduce using rule 79 (CASE -> case LISTAWHEN end .)
    igual           reduce using rule 79 (CASE -> case LISTAWHEN end .)
    diferente1      reduce using rule 79 (CASE -> case LISTAWHEN end .)
    diferente2      reduce using rule 79 (CASE -> case LISTAWHEN end .)
    between         reduce using rule 79 (CASE -> case LISTAWHEN end .)
    is              reduce using rule 79 (CASE -> case LISTAWHEN end .)
    isnull          reduce using rule 79 (CASE -> case LISTAWHEN end .)
    notnull         reduce using rule 79 (CASE -> case LISTAWHEN end .)
    as              reduce using rule 79 (CASE -> case LISTAWHEN end .)
    cadenaString    reduce using rule 79 (CASE -> case LISTAWHEN end .)
    cadena          reduce using rule 79 (CASE -> case LISTAWHEN end .)
    in              reduce using rule 79 (CASE -> case LISTAWHEN end .)
    not             reduce using rule 79 (CASE -> case LISTAWHEN end .)
    like            reduce using rule 79 (CASE -> case LISTAWHEN end .)
    then            reduce using rule 79 (CASE -> case LISTAWHEN end .)
    when            reduce using rule 79 (CASE -> case LISTAWHEN end .)
    parc            reduce using rule 79 (CASE -> case LISTAWHEN end .)
    end             reduce using rule 79 (CASE -> case LISTAWHEN end .)
    else            reduce using rule 79 (CASE -> case LISTAWHEN end .)
    constraint      reduce using rule 79 (CASE -> case LISTAWHEN end .)
    unique          reduce using rule 79 (CASE -> case LISTAWHEN end .)
    check           reduce using rule 79 (CASE -> case LISTAWHEN end .)
    default         reduce using rule 79 (CASE -> case LISTAWHEN end .)
    null            reduce using rule 79 (CASE -> case LISTAWHEN end .)
    primary         reduce using rule 79 (CASE -> case LISTAWHEN end .)
    references      reduce using rule 79 (CASE -> case LISTAWHEN end .)
    asc             reduce using rule 79 (CASE -> case LISTAWHEN end .)
    desc            reduce using rule 79 (CASE -> case LISTAWHEN end .)


state 225

    (102) LISTAWHEN -> LISTAWHEN WHEN .

    end             reduce using rule 102 (LISTAWHEN -> LISTAWHEN WHEN .)
    else            reduce using rule 102 (LISTAWHEN -> LISTAWHEN WHEN .)
    when            reduce using rule 102 (LISTAWHEN -> LISTAWHEN WHEN .)


state 226

    (106) ELSE -> else . LEXP
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 351
    EXP                            shift and go to state 79
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 227

    (104) WHEN -> when LEXP . then LISTACONTENIDO
    (105) WHEN -> when LEXP . then LEXP
    (218) LEXP -> LEXP . coma EXP

    then            shift and go to state 352
    coma            shift and go to state 164


state 228

    (133) SHOW -> show tables para . id parc

    id              shift and go to state 353


state 229

    (134) SHOW -> show collection para . parc

    parc            shift and go to state 354


state 230

    (234) TIPO -> id modulo rowtype .

    not             reduce using rule 234 (TIPO -> id modulo rowtype .)
    default         reduce using rule 234 (TIPO -> id modulo rowtype .)
    dospuntos       reduce using rule 234 (TIPO -> id modulo rowtype .)
    igual           reduce using rule 234 (TIPO -> id modulo rowtype .)
    ptcoma          reduce using rule 234 (TIPO -> id modulo rowtype .)
    r_from          reduce using rule 234 (TIPO -> id modulo rowtype .)
    coma            reduce using rule 234 (TIPO -> id modulo rowtype .)
    where           reduce using rule 234 (TIPO -> id modulo rowtype .)
    group           reduce using rule 234 (TIPO -> id modulo rowtype .)
    having          reduce using rule 234 (TIPO -> id modulo rowtype .)
    union           reduce using rule 234 (TIPO -> id modulo rowtype .)
    intersect       reduce using rule 234 (TIPO -> id modulo rowtype .)
    except          reduce using rule 234 (TIPO -> id modulo rowtype .)
    order           reduce using rule 234 (TIPO -> id modulo rowtype .)
    limit           reduce using rule 234 (TIPO -> id modulo rowtype .)
    offset          reduce using rule 234 (TIPO -> id modulo rowtype .)
    mas             reduce using rule 234 (TIPO -> id modulo rowtype .)
    menos           reduce using rule 234 (TIPO -> id modulo rowtype .)
    multiplicacion  reduce using rule 234 (TIPO -> id modulo rowtype .)
    division        reduce using rule 234 (TIPO -> id modulo rowtype .)
    modulo          reduce using rule 234 (TIPO -> id modulo rowtype .)
    elevado         reduce using rule 234 (TIPO -> id modulo rowtype .)
    and             reduce using rule 234 (TIPO -> id modulo rowtype .)
    or              reduce using rule 234 (TIPO -> id modulo rowtype .)
    mayor           reduce using rule 234 (TIPO -> id modulo rowtype .)
    menor           reduce using rule 234 (TIPO -> id modulo rowtype .)
    mayor_igual     reduce using rule 234 (TIPO -> id modulo rowtype .)
    menor_igual     reduce using rule 234 (TIPO -> id modulo rowtype .)
    diferente1      reduce using rule 234 (TIPO -> id modulo rowtype .)
    diferente2      reduce using rule 234 (TIPO -> id modulo rowtype .)
    between         reduce using rule 234 (TIPO -> id modulo rowtype .)
    is              reduce using rule 234 (TIPO -> id modulo rowtype .)
    isnull          reduce using rule 234 (TIPO -> id modulo rowtype .)
    notnull         reduce using rule 234 (TIPO -> id modulo rowtype .)
    as              reduce using rule 234 (TIPO -> id modulo rowtype .)
    cadenaString    reduce using rule 234 (TIPO -> id modulo rowtype .)
    id              reduce using rule 234 (TIPO -> id modulo rowtype .)
    cadena          reduce using rule 234 (TIPO -> id modulo rowtype .)
    in              reduce using rule 234 (TIPO -> id modulo rowtype .)
    like            reduce using rule 234 (TIPO -> id modulo rowtype .)
    then            reduce using rule 234 (TIPO -> id modulo rowtype .)
    when            reduce using rule 234 (TIPO -> id modulo rowtype .)
    parc            reduce using rule 234 (TIPO -> id modulo rowtype .)
    end             reduce using rule 234 (TIPO -> id modulo rowtype .)
    else            reduce using rule 234 (TIPO -> id modulo rowtype .)
    constraint      reduce using rule 234 (TIPO -> id modulo rowtype .)
    unique          reduce using rule 234 (TIPO -> id modulo rowtype .)
    check           reduce using rule 234 (TIPO -> id modulo rowtype .)
    null            reduce using rule 234 (TIPO -> id modulo rowtype .)
    primary         reduce using rule 234 (TIPO -> id modulo rowtype .)
    references      reduce using rule 234 (TIPO -> id modulo rowtype .)
    asc             reduce using rule 234 (TIPO -> id modulo rowtype .)
    desc            reduce using rule 234 (TIPO -> id modulo rowtype .)


state 231

    (59) DECLARACIONES -> id TIPO not null . ASIG
    (63) ASIG -> . default EXP
    (64) ASIG -> . dospuntos igual EXP
    (65) ASIG -> . igual EXP
    (66) ASIG -> .

    default         shift and go to state 134
    dospuntos       shift and go to state 135
    igual           shift and go to state 136
    ptcoma          reduce using rule 66 (ASIG -> .)

    ASIG                           shift and go to state 355

state 232

    (63) ASIG -> default EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    ptcoma          reduce using rule 63 (ASIG -> default EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170
    and             shift and go to state 171
    or              shift and go to state 172
    mayor           shift and go to state 173
    menor           shift and go to state 174
    mayor_igual     shift and go to state 175
    menor_igual     shift and go to state 176
    igual           shift and go to state 177
    diferente1      shift and go to state 178
    diferente2      shift and go to state 179
    between         shift and go to state 180
    is              shift and go to state 181
    isnull          shift and go to state 183
    notnull         shift and go to state 184
    as              shift and go to state 185
    cadenaString    shift and go to state 186
    id              shift and go to state 187
    cadena          shift and go to state 188
    in              shift and go to state 189
    not             shift and go to state 182
    like            shift and go to state 190


state 233

    (64) ASIG -> dospuntos igual . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 356
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 234

    (65) ASIG -> igual EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    ptcoma          reduce using rule 65 (ASIG -> igual EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170
    and             shift and go to state 171
    or              shift and go to state 172
    mayor           shift and go to state 173
    menor           shift and go to state 174
    mayor_igual     shift and go to state 175
    menor_igual     shift and go to state 176
    igual           shift and go to state 177
    diferente1      shift and go to state 178
    diferente2      shift and go to state 179
    between         shift and go to state 180
    is              shift and go to state 181
    isnull          shift and go to state 183
    notnull         shift and go to state 184
    as              shift and go to state 185
    cadenaString    shift and go to state 186
    id              shift and go to state 187
    cadena          shift and go to state 188
    in              shift and go to state 189
    not             shift and go to state 182
    like            shift and go to state 190


state 235

    (61) DECLARACIONES -> id constant TIPO not . null ASIG

    null            shift and go to state 357


state 236

    (62) DECLARACIONES -> id constant TIPO ASIG .

    ptcoma          reduce using rule 62 (DECLARACIONES -> id constant TIPO ASIG .)


state 237

    (67) ASIGNACION -> id dospuntos igual EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    ptcoma          reduce using rule 67 (ASIGNACION -> id dospuntos igual EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170
    and             shift and go to state 171
    or              shift and go to state 172
    mayor           shift and go to state 173
    menor           shift and go to state 174
    mayor_igual     shift and go to state 175
    menor_igual     shift and go to state 176
    igual           shift and go to state 177
    diferente1      shift and go to state 178
    diferente2      shift and go to state 179
    between         shift and go to state 180
    is              shift and go to state 181
    isnull          shift and go to state 183
    notnull         shift and go to state 184
    as              shift and go to state 185
    cadenaString    shift and go to state 186
    id              shift and go to state 187
    cadena          shift and go to state 188
    in              shift and go to state 189
    not             shift and go to state 182
    like            shift and go to state 190


state 238

    (230) TIPO -> interval para int . parc
    (240) TIPO -> interval para int . parc cadena

    parc            shift and go to state 358


state 239

    (221) TIPO -> decimal para int . coma int parc
    (222) TIPO -> decimal para int . parc

    coma            shift and go to state 359
    parc            shift and go to state 360


state 240

    (224) TIPO -> numeric para int . coma int parc
    (225) TIPO -> numeric para int . parc

    coma            shift and go to state 361
    parc            shift and go to state 362


state 241

    (227) TIPO -> varchar para int . parc

    parc            shift and go to state 363


state 242

    (228) TIPO -> timestamp para int . parc
    (236) TIPO -> timestamp para int . parc without time zone
    (237) TIPO -> timestamp para int . parc with time zone

    parc            shift and go to state 364


state 243

    (256) TIPO -> timestamp without time . zone

    zone            shift and go to state 365


state 244

    (257) TIPO -> timestamp with time . zone

    zone            shift and go to state 366


state 245

    (229) TIPO -> character para int . parc

    parc            shift and go to state 367


state 246

    (233) TIPO -> character varying para . int parc

    int             shift and go to state 368


state 247

    (231) TIPO -> char para int . parc

    parc            shift and go to state 369


state 248

    (232) TIPO -> time para int . parc
    (238) TIPO -> time para int . parc without time zone
    (239) TIPO -> time para int . parc with time zone

    parc            shift and go to state 370


state 249

    (258) TIPO -> time without time . zone

    zone            shift and go to state 371


state 250

    (259) TIPO -> time with time . zone

    zone            shift and go to state 372


state 251

    (235) TIPO -> idPunto modulo type .

    not             reduce using rule 235 (TIPO -> idPunto modulo type .)
    default         reduce using rule 235 (TIPO -> idPunto modulo type .)
    dospuntos       reduce using rule 235 (TIPO -> idPunto modulo type .)
    igual           reduce using rule 235 (TIPO -> idPunto modulo type .)
    ptcoma          reduce using rule 235 (TIPO -> idPunto modulo type .)
    r_from          reduce using rule 235 (TIPO -> idPunto modulo type .)
    coma            reduce using rule 235 (TIPO -> idPunto modulo type .)
    where           reduce using rule 235 (TIPO -> idPunto modulo type .)
    group           reduce using rule 235 (TIPO -> idPunto modulo type .)
    having          reduce using rule 235 (TIPO -> idPunto modulo type .)
    union           reduce using rule 235 (TIPO -> idPunto modulo type .)
    intersect       reduce using rule 235 (TIPO -> idPunto modulo type .)
    except          reduce using rule 235 (TIPO -> idPunto modulo type .)
    order           reduce using rule 235 (TIPO -> idPunto modulo type .)
    limit           reduce using rule 235 (TIPO -> idPunto modulo type .)
    offset          reduce using rule 235 (TIPO -> idPunto modulo type .)
    mas             reduce using rule 235 (TIPO -> idPunto modulo type .)
    menos           reduce using rule 235 (TIPO -> idPunto modulo type .)
    multiplicacion  reduce using rule 235 (TIPO -> idPunto modulo type .)
    division        reduce using rule 235 (TIPO -> idPunto modulo type .)
    modulo          reduce using rule 235 (TIPO -> idPunto modulo type .)
    elevado         reduce using rule 235 (TIPO -> idPunto modulo type .)
    and             reduce using rule 235 (TIPO -> idPunto modulo type .)
    or              reduce using rule 235 (TIPO -> idPunto modulo type .)
    mayor           reduce using rule 235 (TIPO -> idPunto modulo type .)
    menor           reduce using rule 235 (TIPO -> idPunto modulo type .)
    mayor_igual     reduce using rule 235 (TIPO -> idPunto modulo type .)
    menor_igual     reduce using rule 235 (TIPO -> idPunto modulo type .)
    diferente1      reduce using rule 235 (TIPO -> idPunto modulo type .)
    diferente2      reduce using rule 235 (TIPO -> idPunto modulo type .)
    between         reduce using rule 235 (TIPO -> idPunto modulo type .)
    is              reduce using rule 235 (TIPO -> idPunto modulo type .)
    isnull          reduce using rule 235 (TIPO -> idPunto modulo type .)
    notnull         reduce using rule 235 (TIPO -> idPunto modulo type .)
    as              reduce using rule 235 (TIPO -> idPunto modulo type .)
    cadenaString    reduce using rule 235 (TIPO -> idPunto modulo type .)
    id              reduce using rule 235 (TIPO -> idPunto modulo type .)
    cadena          reduce using rule 235 (TIPO -> idPunto modulo type .)
    in              reduce using rule 235 (TIPO -> idPunto modulo type .)
    like            reduce using rule 235 (TIPO -> idPunto modulo type .)
    then            reduce using rule 235 (TIPO -> idPunto modulo type .)
    when            reduce using rule 235 (TIPO -> idPunto modulo type .)
    parc            reduce using rule 235 (TIPO -> idPunto modulo type .)
    end             reduce using rule 235 (TIPO -> idPunto modulo type .)
    else            reduce using rule 235 (TIPO -> idPunto modulo type .)
    constraint      reduce using rule 235 (TIPO -> idPunto modulo type .)
    unique          reduce using rule 235 (TIPO -> idPunto modulo type .)
    check           reduce using rule 235 (TIPO -> idPunto modulo type .)
    null            reduce using rule 235 (TIPO -> idPunto modulo type .)
    primary         reduce using rule 235 (TIPO -> idPunto modulo type .)
    references      reduce using rule 235 (TIPO -> idPunto modulo type .)
    asc             reduce using rule 235 (TIPO -> idPunto modulo type .)
    desc            reduce using rule 235 (TIPO -> idPunto modulo type .)


state 252

    (217) EXIST -> not exist . para SELECT parc

    para            shift and go to state 373


state 253

    (216) EXIST -> exist para . SELECT parc
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    select          shift and go to state 24

    SELECT                         shift and go to state 374

state 254

    (184) SELECT -> select distinct LEXP r_from . LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 375
    EXP                            shift and go to state 79
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 255

    (185) SELECT -> select LEXP r_from LEXP . WHERE GROUP HAVING COMBINING ORDER LIMIT
    (218) LEXP -> LEXP . coma EXP
    (195) WHERE -> . where EXP
    (196) WHERE -> . where EXIST
    (197) WHERE -> .

  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for where resolved as shift
    coma            shift and go to state 164
    where           shift and go to state 73
    r_from          reduce using rule 197 (WHERE -> .)
    group           reduce using rule 197 (WHERE -> .)
    having          reduce using rule 197 (WHERE -> .)
    union           reduce using rule 197 (WHERE -> .)
    intersect       reduce using rule 197 (WHERE -> .)
    except          reduce using rule 197 (WHERE -> .)
    order           reduce using rule 197 (WHERE -> .)
    limit           reduce using rule 197 (WHERE -> .)
    offset          reduce using rule 197 (WHERE -> .)
    ptcoma          reduce using rule 197 (WHERE -> .)
    mas             reduce using rule 197 (WHERE -> .)
    menos           reduce using rule 197 (WHERE -> .)
    multiplicacion  reduce using rule 197 (WHERE -> .)
    division        reduce using rule 197 (WHERE -> .)
    modulo          reduce using rule 197 (WHERE -> .)
    elevado         reduce using rule 197 (WHERE -> .)
    and             reduce using rule 197 (WHERE -> .)
    or              reduce using rule 197 (WHERE -> .)
    mayor           reduce using rule 197 (WHERE -> .)
    menor           reduce using rule 197 (WHERE -> .)
    mayor_igual     reduce using rule 197 (WHERE -> .)
    menor_igual     reduce using rule 197 (WHERE -> .)
    igual           reduce using rule 197 (WHERE -> .)
    diferente1      reduce using rule 197 (WHERE -> .)
    diferente2      reduce using rule 197 (WHERE -> .)
    between         reduce using rule 197 (WHERE -> .)
    is              reduce using rule 197 (WHERE -> .)
    isnull          reduce using rule 197 (WHERE -> .)
    notnull         reduce using rule 197 (WHERE -> .)
    as              reduce using rule 197 (WHERE -> .)
    cadenaString    reduce using rule 197 (WHERE -> .)
    id              reduce using rule 197 (WHERE -> .)
    cadena          reduce using rule 197 (WHERE -> .)
    in              reduce using rule 197 (WHERE -> .)
    not             reduce using rule 197 (WHERE -> .)
    like            reduce using rule 197 (WHERE -> .)
    then            reduce using rule 197 (WHERE -> .)
    when            reduce using rule 197 (WHERE -> .)
    parc            reduce using rule 197 (WHERE -> .)
    end             reduce using rule 197 (WHERE -> .)
    else            reduce using rule 197 (WHERE -> .)
    constraint      reduce using rule 197 (WHERE -> .)
    unique          reduce using rule 197 (WHERE -> .)
    check           reduce using rule 197 (WHERE -> .)
    default         reduce using rule 197 (WHERE -> .)
    null            reduce using rule 197 (WHERE -> .)
    primary         reduce using rule 197 (WHERE -> .)
    references      reduce using rule 197 (WHERE -> .)
    asc             reduce using rule 197 (WHERE -> .)
    desc            reduce using rule 197 (WHERE -> .)

  ! coma            [ reduce using rule 197 (WHERE -> .) ]
  ! where           [ reduce using rule 197 (WHERE -> .) ]

    WHERE                          shift and go to state 376

state 256

    (186) SELECT -> select LEXP WHERE GROUP . HAVING COMBINING ORDER LIMIT
    (205) HAVING -> . having EXP
    (206) HAVING -> .

  ! shift/reduce conflict for having resolved as shift
    having          shift and go to state 378
    r_from          reduce using rule 206 (HAVING -> .)
    coma            reduce using rule 206 (HAVING -> .)
    where           reduce using rule 206 (HAVING -> .)
    group           reduce using rule 206 (HAVING -> .)
    union           reduce using rule 206 (HAVING -> .)
    intersect       reduce using rule 206 (HAVING -> .)
    except          reduce using rule 206 (HAVING -> .)
    order           reduce using rule 206 (HAVING -> .)
    limit           reduce using rule 206 (HAVING -> .)
    offset          reduce using rule 206 (HAVING -> .)
    ptcoma          reduce using rule 206 (HAVING -> .)
    mas             reduce using rule 206 (HAVING -> .)
    menos           reduce using rule 206 (HAVING -> .)
    multiplicacion  reduce using rule 206 (HAVING -> .)
    division        reduce using rule 206 (HAVING -> .)
    modulo          reduce using rule 206 (HAVING -> .)
    elevado         reduce using rule 206 (HAVING -> .)
    and             reduce using rule 206 (HAVING -> .)
    or              reduce using rule 206 (HAVING -> .)
    mayor           reduce using rule 206 (HAVING -> .)
    menor           reduce using rule 206 (HAVING -> .)
    mayor_igual     reduce using rule 206 (HAVING -> .)
    menor_igual     reduce using rule 206 (HAVING -> .)
    igual           reduce using rule 206 (HAVING -> .)
    diferente1      reduce using rule 206 (HAVING -> .)
    diferente2      reduce using rule 206 (HAVING -> .)
    between         reduce using rule 206 (HAVING -> .)
    is              reduce using rule 206 (HAVING -> .)
    isnull          reduce using rule 206 (HAVING -> .)
    notnull         reduce using rule 206 (HAVING -> .)
    as              reduce using rule 206 (HAVING -> .)
    cadenaString    reduce using rule 206 (HAVING -> .)
    id              reduce using rule 206 (HAVING -> .)
    cadena          reduce using rule 206 (HAVING -> .)
    in              reduce using rule 206 (HAVING -> .)
    not             reduce using rule 206 (HAVING -> .)
    like            reduce using rule 206 (HAVING -> .)
    then            reduce using rule 206 (HAVING -> .)
    when            reduce using rule 206 (HAVING -> .)
    parc            reduce using rule 206 (HAVING -> .)
    end             reduce using rule 206 (HAVING -> .)
    else            reduce using rule 206 (HAVING -> .)
    constraint      reduce using rule 206 (HAVING -> .)
    unique          reduce using rule 206 (HAVING -> .)
    check           reduce using rule 206 (HAVING -> .)
    default         reduce using rule 206 (HAVING -> .)
    null            reduce using rule 206 (HAVING -> .)
    primary         reduce using rule 206 (HAVING -> .)
    references      reduce using rule 206 (HAVING -> .)
    asc             reduce using rule 206 (HAVING -> .)
    desc            reduce using rule 206 (HAVING -> .)

  ! having          [ reduce using rule 206 (HAVING -> .) ]

    HAVING                         shift and go to state 377

state 257

    (203) GROUP -> group . by LEXP

    by              shift and go to state 379


state 258

    (218) LEXP -> LEXP coma EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    r_from          reduce using rule 218 (LEXP -> LEXP coma EXP .)
    coma            reduce using rule 218 (LEXP -> LEXP coma EXP .)
    where           reduce using rule 218 (LEXP -> LEXP coma EXP .)
    group           reduce using rule 218 (LEXP -> LEXP coma EXP .)
    having          reduce using rule 218 (LEXP -> LEXP coma EXP .)
    union           reduce using rule 218 (LEXP -> LEXP coma EXP .)
    intersect       reduce using rule 218 (LEXP -> LEXP coma EXP .)
    except          reduce using rule 218 (LEXP -> LEXP coma EXP .)
    order           reduce using rule 218 (LEXP -> LEXP coma EXP .)
    limit           reduce using rule 218 (LEXP -> LEXP coma EXP .)
    offset          reduce using rule 218 (LEXP -> LEXP coma EXP .)
    ptcoma          reduce using rule 218 (LEXP -> LEXP coma EXP .)
    then            reduce using rule 218 (LEXP -> LEXP coma EXP .)
    when            reduce using rule 218 (LEXP -> LEXP coma EXP .)
    parc            reduce using rule 218 (LEXP -> LEXP coma EXP .)
    end             reduce using rule 218 (LEXP -> LEXP coma EXP .)
    else            reduce using rule 218 (LEXP -> LEXP coma EXP .)
    constraint      reduce using rule 218 (LEXP -> LEXP coma EXP .)
    unique          reduce using rule 218 (LEXP -> LEXP coma EXP .)
    check           reduce using rule 218 (LEXP -> LEXP coma EXP .)
    default         reduce using rule 218 (LEXP -> LEXP coma EXP .)
    null            reduce using rule 218 (LEXP -> LEXP coma EXP .)
    primary         reduce using rule 218 (LEXP -> LEXP coma EXP .)
    references      reduce using rule 218 (LEXP -> LEXP coma EXP .)
    asc             reduce using rule 218 (LEXP -> LEXP coma EXP .)
    desc            reduce using rule 218 (LEXP -> LEXP coma EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170
    and             shift and go to state 171
    or              shift and go to state 172
    mayor           shift and go to state 173
    menor           shift and go to state 174
    mayor_igual     shift and go to state 175
    menor_igual     shift and go to state 176
    igual           shift and go to state 177
    diferente1      shift and go to state 178
    diferente2      shift and go to state 179
    between         shift and go to state 180
    is              shift and go to state 181
    isnull          shift and go to state 183
    notnull         shift and go to state 184
    as              shift and go to state 185
    cadenaString    shift and go to state 186
    id              shift and go to state 187
    cadena          shift and go to state 188
    in              shift and go to state 189
    not             shift and go to state 182
    like            shift and go to state 190

  ! mas             [ reduce using rule 218 (LEXP -> LEXP coma EXP .) ]
  ! menos           [ reduce using rule 218 (LEXP -> LEXP coma EXP .) ]
  ! multiplicacion  [ reduce using rule 218 (LEXP -> LEXP coma EXP .) ]
  ! division        [ reduce using rule 218 (LEXP -> LEXP coma EXP .) ]
  ! modulo          [ reduce using rule 218 (LEXP -> LEXP coma EXP .) ]
  ! elevado         [ reduce using rule 218 (LEXP -> LEXP coma EXP .) ]
  ! and             [ reduce using rule 218 (LEXP -> LEXP coma EXP .) ]
  ! or              [ reduce using rule 218 (LEXP -> LEXP coma EXP .) ]
  ! mayor           [ reduce using rule 218 (LEXP -> LEXP coma EXP .) ]
  ! menor           [ reduce using rule 218 (LEXP -> LEXP coma EXP .) ]
  ! mayor_igual     [ reduce using rule 218 (LEXP -> LEXP coma EXP .) ]
  ! menor_igual     [ reduce using rule 218 (LEXP -> LEXP coma EXP .) ]
  ! igual           [ reduce using rule 218 (LEXP -> LEXP coma EXP .) ]
  ! diferente1      [ reduce using rule 218 (LEXP -> LEXP coma EXP .) ]
  ! diferente2      [ reduce using rule 218 (LEXP -> LEXP coma EXP .) ]
  ! between         [ reduce using rule 218 (LEXP -> LEXP coma EXP .) ]
  ! is              [ reduce using rule 218 (LEXP -> LEXP coma EXP .) ]
  ! isnull          [ reduce using rule 218 (LEXP -> LEXP coma EXP .) ]
  ! notnull         [ reduce using rule 218 (LEXP -> LEXP coma EXP .) ]
  ! as              [ reduce using rule 218 (LEXP -> LEXP coma EXP .) ]
  ! cadenaString    [ reduce using rule 218 (LEXP -> LEXP coma EXP .) ]
  ! id              [ reduce using rule 218 (LEXP -> LEXP coma EXP .) ]
  ! cadena          [ reduce using rule 218 (LEXP -> LEXP coma EXP .) ]
  ! in              [ reduce using rule 218 (LEXP -> LEXP coma EXP .) ]
  ! not             [ reduce using rule 218 (LEXP -> LEXP coma EXP .) ]
  ! like            [ reduce using rule 218 (LEXP -> LEXP coma EXP .) ]


state 259

    (267) EXP -> EXP mas EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    r_from          reduce using rule 267 (EXP -> EXP mas EXP .)
    coma            reduce using rule 267 (EXP -> EXP mas EXP .)
    where           reduce using rule 267 (EXP -> EXP mas EXP .)
    group           reduce using rule 267 (EXP -> EXP mas EXP .)
    having          reduce using rule 267 (EXP -> EXP mas EXP .)
    union           reduce using rule 267 (EXP -> EXP mas EXP .)
    intersect       reduce using rule 267 (EXP -> EXP mas EXP .)
    except          reduce using rule 267 (EXP -> EXP mas EXP .)
    order           reduce using rule 267 (EXP -> EXP mas EXP .)
    limit           reduce using rule 267 (EXP -> EXP mas EXP .)
    offset          reduce using rule 267 (EXP -> EXP mas EXP .)
    ptcoma          reduce using rule 267 (EXP -> EXP mas EXP .)
    mas             reduce using rule 267 (EXP -> EXP mas EXP .)
    menos           reduce using rule 267 (EXP -> EXP mas EXP .)
    and             reduce using rule 267 (EXP -> EXP mas EXP .)
    or              reduce using rule 267 (EXP -> EXP mas EXP .)
    mayor           reduce using rule 267 (EXP -> EXP mas EXP .)
    menor           reduce using rule 267 (EXP -> EXP mas EXP .)
    mayor_igual     reduce using rule 267 (EXP -> EXP mas EXP .)
    menor_igual     reduce using rule 267 (EXP -> EXP mas EXP .)
    igual           reduce using rule 267 (EXP -> EXP mas EXP .)
    diferente1      reduce using rule 267 (EXP -> EXP mas EXP .)
    diferente2      reduce using rule 267 (EXP -> EXP mas EXP .)
    between         reduce using rule 267 (EXP -> EXP mas EXP .)
    is              reduce using rule 267 (EXP -> EXP mas EXP .)
    isnull          reduce using rule 267 (EXP -> EXP mas EXP .)
    notnull         reduce using rule 267 (EXP -> EXP mas EXP .)
    as              reduce using rule 267 (EXP -> EXP mas EXP .)
    cadenaString    reduce using rule 267 (EXP -> EXP mas EXP .)
    id              reduce using rule 267 (EXP -> EXP mas EXP .)
    cadena          reduce using rule 267 (EXP -> EXP mas EXP .)
    in              reduce using rule 267 (EXP -> EXP mas EXP .)
    not             reduce using rule 267 (EXP -> EXP mas EXP .)
    like            reduce using rule 267 (EXP -> EXP mas EXP .)
    then            reduce using rule 267 (EXP -> EXP mas EXP .)
    when            reduce using rule 267 (EXP -> EXP mas EXP .)
    parc            reduce using rule 267 (EXP -> EXP mas EXP .)
    end             reduce using rule 267 (EXP -> EXP mas EXP .)
    else            reduce using rule 267 (EXP -> EXP mas EXP .)
    constraint      reduce using rule 267 (EXP -> EXP mas EXP .)
    unique          reduce using rule 267 (EXP -> EXP mas EXP .)
    check           reduce using rule 267 (EXP -> EXP mas EXP .)
    default         reduce using rule 267 (EXP -> EXP mas EXP .)
    null            reduce using rule 267 (EXP -> EXP mas EXP .)
    primary         reduce using rule 267 (EXP -> EXP mas EXP .)
    references      reduce using rule 267 (EXP -> EXP mas EXP .)
    asc             reduce using rule 267 (EXP -> EXP mas EXP .)
    desc            reduce using rule 267 (EXP -> EXP mas EXP .)
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170

  ! multiplicacion  [ reduce using rule 267 (EXP -> EXP mas EXP .) ]
  ! division        [ reduce using rule 267 (EXP -> EXP mas EXP .) ]
  ! modulo          [ reduce using rule 267 (EXP -> EXP mas EXP .) ]
  ! elevado         [ reduce using rule 267 (EXP -> EXP mas EXP .) ]
  ! mas             [ shift and go to state 165 ]
  ! menos           [ shift and go to state 166 ]
  ! and             [ shift and go to state 171 ]
  ! or              [ shift and go to state 172 ]
  ! mayor           [ shift and go to state 173 ]
  ! menor           [ shift and go to state 174 ]
  ! mayor_igual     [ shift and go to state 175 ]
  ! menor_igual     [ shift and go to state 176 ]
  ! igual           [ shift and go to state 177 ]
  ! diferente1      [ shift and go to state 178 ]
  ! diferente2      [ shift and go to state 179 ]
  ! between         [ shift and go to state 180 ]
  ! is              [ shift and go to state 181 ]
  ! isnull          [ shift and go to state 183 ]
  ! notnull         [ shift and go to state 184 ]
  ! as              [ shift and go to state 185 ]
  ! cadenaString    [ shift and go to state 186 ]
  ! id              [ shift and go to state 187 ]
  ! cadena          [ shift and go to state 188 ]
  ! in              [ shift and go to state 189 ]
  ! not             [ shift and go to state 182 ]
  ! like            [ shift and go to state 190 ]


state 260

    (268) EXP -> EXP menos EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    r_from          reduce using rule 268 (EXP -> EXP menos EXP .)
    coma            reduce using rule 268 (EXP -> EXP menos EXP .)
    where           reduce using rule 268 (EXP -> EXP menos EXP .)
    group           reduce using rule 268 (EXP -> EXP menos EXP .)
    having          reduce using rule 268 (EXP -> EXP menos EXP .)
    union           reduce using rule 268 (EXP -> EXP menos EXP .)
    intersect       reduce using rule 268 (EXP -> EXP menos EXP .)
    except          reduce using rule 268 (EXP -> EXP menos EXP .)
    order           reduce using rule 268 (EXP -> EXP menos EXP .)
    limit           reduce using rule 268 (EXP -> EXP menos EXP .)
    offset          reduce using rule 268 (EXP -> EXP menos EXP .)
    ptcoma          reduce using rule 268 (EXP -> EXP menos EXP .)
    mas             reduce using rule 268 (EXP -> EXP menos EXP .)
    menos           reduce using rule 268 (EXP -> EXP menos EXP .)
    and             reduce using rule 268 (EXP -> EXP menos EXP .)
    or              reduce using rule 268 (EXP -> EXP menos EXP .)
    mayor           reduce using rule 268 (EXP -> EXP menos EXP .)
    menor           reduce using rule 268 (EXP -> EXP menos EXP .)
    mayor_igual     reduce using rule 268 (EXP -> EXP menos EXP .)
    menor_igual     reduce using rule 268 (EXP -> EXP menos EXP .)
    igual           reduce using rule 268 (EXP -> EXP menos EXP .)
    diferente1      reduce using rule 268 (EXP -> EXP menos EXP .)
    diferente2      reduce using rule 268 (EXP -> EXP menos EXP .)
    between         reduce using rule 268 (EXP -> EXP menos EXP .)
    is              reduce using rule 268 (EXP -> EXP menos EXP .)
    isnull          reduce using rule 268 (EXP -> EXP menos EXP .)
    notnull         reduce using rule 268 (EXP -> EXP menos EXP .)
    as              reduce using rule 268 (EXP -> EXP menos EXP .)
    cadenaString    reduce using rule 268 (EXP -> EXP menos EXP .)
    id              reduce using rule 268 (EXP -> EXP menos EXP .)
    cadena          reduce using rule 268 (EXP -> EXP menos EXP .)
    in              reduce using rule 268 (EXP -> EXP menos EXP .)
    not             reduce using rule 268 (EXP -> EXP menos EXP .)
    like            reduce using rule 268 (EXP -> EXP menos EXP .)
    then            reduce using rule 268 (EXP -> EXP menos EXP .)
    when            reduce using rule 268 (EXP -> EXP menos EXP .)
    parc            reduce using rule 268 (EXP -> EXP menos EXP .)
    end             reduce using rule 268 (EXP -> EXP menos EXP .)
    else            reduce using rule 268 (EXP -> EXP menos EXP .)
    constraint      reduce using rule 268 (EXP -> EXP menos EXP .)
    unique          reduce using rule 268 (EXP -> EXP menos EXP .)
    check           reduce using rule 268 (EXP -> EXP menos EXP .)
    default         reduce using rule 268 (EXP -> EXP menos EXP .)
    null            reduce using rule 268 (EXP -> EXP menos EXP .)
    primary         reduce using rule 268 (EXP -> EXP menos EXP .)
    references      reduce using rule 268 (EXP -> EXP menos EXP .)
    asc             reduce using rule 268 (EXP -> EXP menos EXP .)
    desc            reduce using rule 268 (EXP -> EXP menos EXP .)
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170

  ! multiplicacion  [ reduce using rule 268 (EXP -> EXP menos EXP .) ]
  ! division        [ reduce using rule 268 (EXP -> EXP menos EXP .) ]
  ! modulo          [ reduce using rule 268 (EXP -> EXP menos EXP .) ]
  ! elevado         [ reduce using rule 268 (EXP -> EXP menos EXP .) ]
  ! mas             [ shift and go to state 165 ]
  ! menos           [ shift and go to state 166 ]
  ! and             [ shift and go to state 171 ]
  ! or              [ shift and go to state 172 ]
  ! mayor           [ shift and go to state 173 ]
  ! menor           [ shift and go to state 174 ]
  ! mayor_igual     [ shift and go to state 175 ]
  ! menor_igual     [ shift and go to state 176 ]
  ! igual           [ shift and go to state 177 ]
  ! diferente1      [ shift and go to state 178 ]
  ! diferente2      [ shift and go to state 179 ]
  ! between         [ shift and go to state 180 ]
  ! is              [ shift and go to state 181 ]
  ! isnull          [ shift and go to state 183 ]
  ! notnull         [ shift and go to state 184 ]
  ! as              [ shift and go to state 185 ]
  ! cadenaString    [ shift and go to state 186 ]
  ! id              [ shift and go to state 187 ]
  ! cadena          [ shift and go to state 188 ]
  ! in              [ shift and go to state 189 ]
  ! not             [ shift and go to state 182 ]
  ! like            [ shift and go to state 190 ]


state 261

    (269) EXP -> EXP multiplicacion EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    r_from          reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    coma            reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    where           reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    group           reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    having          reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    union           reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    intersect       reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    except          reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    order           reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    limit           reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    offset          reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    ptcoma          reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    mas             reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    menos           reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    multiplicacion  reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    division        reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    modulo          reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    and             reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    or              reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    mayor           reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    menor           reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    mayor_igual     reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    menor_igual     reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    igual           reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    diferente1      reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    diferente2      reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    between         reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    is              reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    isnull          reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    notnull         reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    as              reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    cadenaString    reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    id              reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    cadena          reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    in              reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    not             reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    like            reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    then            reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    when            reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    parc            reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    end             reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    else            reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    constraint      reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    unique          reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    check           reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    default         reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    null            reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    primary         reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    references      reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    asc             reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    desc            reduce using rule 269 (EXP -> EXP multiplicacion EXP .)
    elevado         shift and go to state 170

  ! elevado         [ reduce using rule 269 (EXP -> EXP multiplicacion EXP .) ]
  ! mas             [ shift and go to state 165 ]
  ! menos           [ shift and go to state 166 ]
  ! multiplicacion  [ shift and go to state 167 ]
  ! division        [ shift and go to state 168 ]
  ! modulo          [ shift and go to state 169 ]
  ! and             [ shift and go to state 171 ]
  ! or              [ shift and go to state 172 ]
  ! mayor           [ shift and go to state 173 ]
  ! menor           [ shift and go to state 174 ]
  ! mayor_igual     [ shift and go to state 175 ]
  ! menor_igual     [ shift and go to state 176 ]
  ! igual           [ shift and go to state 177 ]
  ! diferente1      [ shift and go to state 178 ]
  ! diferente2      [ shift and go to state 179 ]
  ! between         [ shift and go to state 180 ]
  ! is              [ shift and go to state 181 ]
  ! isnull          [ shift and go to state 183 ]
  ! notnull         [ shift and go to state 184 ]
  ! as              [ shift and go to state 185 ]
  ! cadenaString    [ shift and go to state 186 ]
  ! id              [ shift and go to state 187 ]
  ! cadena          [ shift and go to state 188 ]
  ! in              [ shift and go to state 189 ]
  ! not             [ shift and go to state 182 ]
  ! like            [ shift and go to state 190 ]


state 262

    (270) EXP -> EXP division EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    r_from          reduce using rule 270 (EXP -> EXP division EXP .)
    coma            reduce using rule 270 (EXP -> EXP division EXP .)
    where           reduce using rule 270 (EXP -> EXP division EXP .)
    group           reduce using rule 270 (EXP -> EXP division EXP .)
    having          reduce using rule 270 (EXP -> EXP division EXP .)
    union           reduce using rule 270 (EXP -> EXP division EXP .)
    intersect       reduce using rule 270 (EXP -> EXP division EXP .)
    except          reduce using rule 270 (EXP -> EXP division EXP .)
    order           reduce using rule 270 (EXP -> EXP division EXP .)
    limit           reduce using rule 270 (EXP -> EXP division EXP .)
    offset          reduce using rule 270 (EXP -> EXP division EXP .)
    ptcoma          reduce using rule 270 (EXP -> EXP division EXP .)
    mas             reduce using rule 270 (EXP -> EXP division EXP .)
    menos           reduce using rule 270 (EXP -> EXP division EXP .)
    multiplicacion  reduce using rule 270 (EXP -> EXP division EXP .)
    division        reduce using rule 270 (EXP -> EXP division EXP .)
    modulo          reduce using rule 270 (EXP -> EXP division EXP .)
    and             reduce using rule 270 (EXP -> EXP division EXP .)
    or              reduce using rule 270 (EXP -> EXP division EXP .)
    mayor           reduce using rule 270 (EXP -> EXP division EXP .)
    menor           reduce using rule 270 (EXP -> EXP division EXP .)
    mayor_igual     reduce using rule 270 (EXP -> EXP division EXP .)
    menor_igual     reduce using rule 270 (EXP -> EXP division EXP .)
    igual           reduce using rule 270 (EXP -> EXP division EXP .)
    diferente1      reduce using rule 270 (EXP -> EXP division EXP .)
    diferente2      reduce using rule 270 (EXP -> EXP division EXP .)
    between         reduce using rule 270 (EXP -> EXP division EXP .)
    is              reduce using rule 270 (EXP -> EXP division EXP .)
    isnull          reduce using rule 270 (EXP -> EXP division EXP .)
    notnull         reduce using rule 270 (EXP -> EXP division EXP .)
    as              reduce using rule 270 (EXP -> EXP division EXP .)
    cadenaString    reduce using rule 270 (EXP -> EXP division EXP .)
    id              reduce using rule 270 (EXP -> EXP division EXP .)
    cadena          reduce using rule 270 (EXP -> EXP division EXP .)
    in              reduce using rule 270 (EXP -> EXP division EXP .)
    not             reduce using rule 270 (EXP -> EXP division EXP .)
    like            reduce using rule 270 (EXP -> EXP division EXP .)
    then            reduce using rule 270 (EXP -> EXP division EXP .)
    when            reduce using rule 270 (EXP -> EXP division EXP .)
    parc            reduce using rule 270 (EXP -> EXP division EXP .)
    end             reduce using rule 270 (EXP -> EXP division EXP .)
    else            reduce using rule 270 (EXP -> EXP division EXP .)
    constraint      reduce using rule 270 (EXP -> EXP division EXP .)
    unique          reduce using rule 270 (EXP -> EXP division EXP .)
    check           reduce using rule 270 (EXP -> EXP division EXP .)
    default         reduce using rule 270 (EXP -> EXP division EXP .)
    null            reduce using rule 270 (EXP -> EXP division EXP .)
    primary         reduce using rule 270 (EXP -> EXP division EXP .)
    references      reduce using rule 270 (EXP -> EXP division EXP .)
    asc             reduce using rule 270 (EXP -> EXP division EXP .)
    desc            reduce using rule 270 (EXP -> EXP division EXP .)
    elevado         shift and go to state 170

  ! elevado         [ reduce using rule 270 (EXP -> EXP division EXP .) ]
  ! mas             [ shift and go to state 165 ]
  ! menos           [ shift and go to state 166 ]
  ! multiplicacion  [ shift and go to state 167 ]
  ! division        [ shift and go to state 168 ]
  ! modulo          [ shift and go to state 169 ]
  ! and             [ shift and go to state 171 ]
  ! or              [ shift and go to state 172 ]
  ! mayor           [ shift and go to state 173 ]
  ! menor           [ shift and go to state 174 ]
  ! mayor_igual     [ shift and go to state 175 ]
  ! menor_igual     [ shift and go to state 176 ]
  ! igual           [ shift and go to state 177 ]
  ! diferente1      [ shift and go to state 178 ]
  ! diferente2      [ shift and go to state 179 ]
  ! between         [ shift and go to state 180 ]
  ! is              [ shift and go to state 181 ]
  ! isnull          [ shift and go to state 183 ]
  ! notnull         [ shift and go to state 184 ]
  ! as              [ shift and go to state 185 ]
  ! cadenaString    [ shift and go to state 186 ]
  ! id              [ shift and go to state 187 ]
  ! cadena          [ shift and go to state 188 ]
  ! in              [ shift and go to state 189 ]
  ! not             [ shift and go to state 182 ]
  ! like            [ shift and go to state 190 ]


state 263

    (271) EXP -> EXP modulo EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    r_from          reduce using rule 271 (EXP -> EXP modulo EXP .)
    coma            reduce using rule 271 (EXP -> EXP modulo EXP .)
    where           reduce using rule 271 (EXP -> EXP modulo EXP .)
    group           reduce using rule 271 (EXP -> EXP modulo EXP .)
    having          reduce using rule 271 (EXP -> EXP modulo EXP .)
    union           reduce using rule 271 (EXP -> EXP modulo EXP .)
    intersect       reduce using rule 271 (EXP -> EXP modulo EXP .)
    except          reduce using rule 271 (EXP -> EXP modulo EXP .)
    order           reduce using rule 271 (EXP -> EXP modulo EXP .)
    limit           reduce using rule 271 (EXP -> EXP modulo EXP .)
    offset          reduce using rule 271 (EXP -> EXP modulo EXP .)
    ptcoma          reduce using rule 271 (EXP -> EXP modulo EXP .)
    mas             reduce using rule 271 (EXP -> EXP modulo EXP .)
    menos           reduce using rule 271 (EXP -> EXP modulo EXP .)
    multiplicacion  reduce using rule 271 (EXP -> EXP modulo EXP .)
    division        reduce using rule 271 (EXP -> EXP modulo EXP .)
    modulo          reduce using rule 271 (EXP -> EXP modulo EXP .)
    and             reduce using rule 271 (EXP -> EXP modulo EXP .)
    or              reduce using rule 271 (EXP -> EXP modulo EXP .)
    mayor           reduce using rule 271 (EXP -> EXP modulo EXP .)
    menor           reduce using rule 271 (EXP -> EXP modulo EXP .)
    mayor_igual     reduce using rule 271 (EXP -> EXP modulo EXP .)
    menor_igual     reduce using rule 271 (EXP -> EXP modulo EXP .)
    igual           reduce using rule 271 (EXP -> EXP modulo EXP .)
    diferente1      reduce using rule 271 (EXP -> EXP modulo EXP .)
    diferente2      reduce using rule 271 (EXP -> EXP modulo EXP .)
    between         reduce using rule 271 (EXP -> EXP modulo EXP .)
    is              reduce using rule 271 (EXP -> EXP modulo EXP .)
    isnull          reduce using rule 271 (EXP -> EXP modulo EXP .)
    notnull         reduce using rule 271 (EXP -> EXP modulo EXP .)
    as              reduce using rule 271 (EXP -> EXP modulo EXP .)
    cadenaString    reduce using rule 271 (EXP -> EXP modulo EXP .)
    id              reduce using rule 271 (EXP -> EXP modulo EXP .)
    cadena          reduce using rule 271 (EXP -> EXP modulo EXP .)
    in              reduce using rule 271 (EXP -> EXP modulo EXP .)
    not             reduce using rule 271 (EXP -> EXP modulo EXP .)
    like            reduce using rule 271 (EXP -> EXP modulo EXP .)
    then            reduce using rule 271 (EXP -> EXP modulo EXP .)
    when            reduce using rule 271 (EXP -> EXP modulo EXP .)
    parc            reduce using rule 271 (EXP -> EXP modulo EXP .)
    end             reduce using rule 271 (EXP -> EXP modulo EXP .)
    else            reduce using rule 271 (EXP -> EXP modulo EXP .)
    constraint      reduce using rule 271 (EXP -> EXP modulo EXP .)
    unique          reduce using rule 271 (EXP -> EXP modulo EXP .)
    check           reduce using rule 271 (EXP -> EXP modulo EXP .)
    default         reduce using rule 271 (EXP -> EXP modulo EXP .)
    null            reduce using rule 271 (EXP -> EXP modulo EXP .)
    primary         reduce using rule 271 (EXP -> EXP modulo EXP .)
    references      reduce using rule 271 (EXP -> EXP modulo EXP .)
    asc             reduce using rule 271 (EXP -> EXP modulo EXP .)
    desc            reduce using rule 271 (EXP -> EXP modulo EXP .)
    elevado         shift and go to state 170

  ! elevado         [ reduce using rule 271 (EXP -> EXP modulo EXP .) ]
  ! mas             [ shift and go to state 165 ]
  ! menos           [ shift and go to state 166 ]
  ! multiplicacion  [ shift and go to state 167 ]
  ! division        [ shift and go to state 168 ]
  ! modulo          [ shift and go to state 169 ]
  ! and             [ shift and go to state 171 ]
  ! or              [ shift and go to state 172 ]
  ! mayor           [ shift and go to state 173 ]
  ! menor           [ shift and go to state 174 ]
  ! mayor_igual     [ shift and go to state 175 ]
  ! menor_igual     [ shift and go to state 176 ]
  ! igual           [ shift and go to state 177 ]
  ! diferente1      [ shift and go to state 178 ]
  ! diferente2      [ shift and go to state 179 ]
  ! between         [ shift and go to state 180 ]
  ! is              [ shift and go to state 181 ]
  ! isnull          [ shift and go to state 183 ]
  ! notnull         [ shift and go to state 184 ]
  ! as              [ shift and go to state 185 ]
  ! cadenaString    [ shift and go to state 186 ]
  ! id              [ shift and go to state 187 ]
  ! cadena          [ shift and go to state 188 ]
  ! in              [ shift and go to state 189 ]
  ! not             [ shift and go to state 182 ]
  ! like            [ shift and go to state 190 ]


state 264

    (272) EXP -> EXP elevado EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    r_from          reduce using rule 272 (EXP -> EXP elevado EXP .)
    coma            reduce using rule 272 (EXP -> EXP elevado EXP .)
    where           reduce using rule 272 (EXP -> EXP elevado EXP .)
    group           reduce using rule 272 (EXP -> EXP elevado EXP .)
    having          reduce using rule 272 (EXP -> EXP elevado EXP .)
    union           reduce using rule 272 (EXP -> EXP elevado EXP .)
    intersect       reduce using rule 272 (EXP -> EXP elevado EXP .)
    except          reduce using rule 272 (EXP -> EXP elevado EXP .)
    order           reduce using rule 272 (EXP -> EXP elevado EXP .)
    limit           reduce using rule 272 (EXP -> EXP elevado EXP .)
    offset          reduce using rule 272 (EXP -> EXP elevado EXP .)
    ptcoma          reduce using rule 272 (EXP -> EXP elevado EXP .)
    mas             reduce using rule 272 (EXP -> EXP elevado EXP .)
    menos           reduce using rule 272 (EXP -> EXP elevado EXP .)
    multiplicacion  reduce using rule 272 (EXP -> EXP elevado EXP .)
    division        reduce using rule 272 (EXP -> EXP elevado EXP .)
    modulo          reduce using rule 272 (EXP -> EXP elevado EXP .)
    elevado         reduce using rule 272 (EXP -> EXP elevado EXP .)
    and             reduce using rule 272 (EXP -> EXP elevado EXP .)
    or              reduce using rule 272 (EXP -> EXP elevado EXP .)
    mayor           reduce using rule 272 (EXP -> EXP elevado EXP .)
    menor           reduce using rule 272 (EXP -> EXP elevado EXP .)
    mayor_igual     reduce using rule 272 (EXP -> EXP elevado EXP .)
    menor_igual     reduce using rule 272 (EXP -> EXP elevado EXP .)
    igual           reduce using rule 272 (EXP -> EXP elevado EXP .)
    diferente1      reduce using rule 272 (EXP -> EXP elevado EXP .)
    diferente2      reduce using rule 272 (EXP -> EXP elevado EXP .)
    between         reduce using rule 272 (EXP -> EXP elevado EXP .)
    is              reduce using rule 272 (EXP -> EXP elevado EXP .)
    isnull          reduce using rule 272 (EXP -> EXP elevado EXP .)
    notnull         reduce using rule 272 (EXP -> EXP elevado EXP .)
    as              reduce using rule 272 (EXP -> EXP elevado EXP .)
    cadenaString    reduce using rule 272 (EXP -> EXP elevado EXP .)
    id              reduce using rule 272 (EXP -> EXP elevado EXP .)
    cadena          reduce using rule 272 (EXP -> EXP elevado EXP .)
    in              reduce using rule 272 (EXP -> EXP elevado EXP .)
    not             reduce using rule 272 (EXP -> EXP elevado EXP .)
    like            reduce using rule 272 (EXP -> EXP elevado EXP .)
    then            reduce using rule 272 (EXP -> EXP elevado EXP .)
    when            reduce using rule 272 (EXP -> EXP elevado EXP .)
    parc            reduce using rule 272 (EXP -> EXP elevado EXP .)
    end             reduce using rule 272 (EXP -> EXP elevado EXP .)
    else            reduce using rule 272 (EXP -> EXP elevado EXP .)
    constraint      reduce using rule 272 (EXP -> EXP elevado EXP .)
    unique          reduce using rule 272 (EXP -> EXP elevado EXP .)
    check           reduce using rule 272 (EXP -> EXP elevado EXP .)
    default         reduce using rule 272 (EXP -> EXP elevado EXP .)
    null            reduce using rule 272 (EXP -> EXP elevado EXP .)
    primary         reduce using rule 272 (EXP -> EXP elevado EXP .)
    references      reduce using rule 272 (EXP -> EXP elevado EXP .)
    asc             reduce using rule 272 (EXP -> EXP elevado EXP .)
    desc            reduce using rule 272 (EXP -> EXP elevado EXP .)

  ! mas             [ shift and go to state 165 ]
  ! menos           [ shift and go to state 166 ]
  ! multiplicacion  [ shift and go to state 167 ]
  ! division        [ shift and go to state 168 ]
  ! modulo          [ shift and go to state 169 ]
  ! elevado         [ shift and go to state 170 ]
  ! and             [ shift and go to state 171 ]
  ! or              [ shift and go to state 172 ]
  ! mayor           [ shift and go to state 173 ]
  ! menor           [ shift and go to state 174 ]
  ! mayor_igual     [ shift and go to state 175 ]
  ! menor_igual     [ shift and go to state 176 ]
  ! igual           [ shift and go to state 177 ]
  ! diferente1      [ shift and go to state 178 ]
  ! diferente2      [ shift and go to state 179 ]
  ! between         [ shift and go to state 180 ]
  ! is              [ shift and go to state 181 ]
  ! isnull          [ shift and go to state 183 ]
  ! notnull         [ shift and go to state 184 ]
  ! as              [ shift and go to state 185 ]
  ! cadenaString    [ shift and go to state 186 ]
  ! id              [ shift and go to state 187 ]
  ! cadena          [ shift and go to state 188 ]
  ! in              [ shift and go to state 189 ]
  ! not             [ shift and go to state 182 ]
  ! like            [ shift and go to state 190 ]


state 265

    (273) EXP -> EXP and EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    r_from          reduce using rule 273 (EXP -> EXP and EXP .)
    coma            reduce using rule 273 (EXP -> EXP and EXP .)
    where           reduce using rule 273 (EXP -> EXP and EXP .)
    group           reduce using rule 273 (EXP -> EXP and EXP .)
    having          reduce using rule 273 (EXP -> EXP and EXP .)
    union           reduce using rule 273 (EXP -> EXP and EXP .)
    intersect       reduce using rule 273 (EXP -> EXP and EXP .)
    except          reduce using rule 273 (EXP -> EXP and EXP .)
    order           reduce using rule 273 (EXP -> EXP and EXP .)
    limit           reduce using rule 273 (EXP -> EXP and EXP .)
    offset          reduce using rule 273 (EXP -> EXP and EXP .)
    ptcoma          reduce using rule 273 (EXP -> EXP and EXP .)
    and             reduce using rule 273 (EXP -> EXP and EXP .)
    or              reduce using rule 273 (EXP -> EXP and EXP .)
    between         reduce using rule 273 (EXP -> EXP and EXP .)
    is              reduce using rule 273 (EXP -> EXP and EXP .)
    isnull          reduce using rule 273 (EXP -> EXP and EXP .)
    notnull         reduce using rule 273 (EXP -> EXP and EXP .)
    as              reduce using rule 273 (EXP -> EXP and EXP .)
    cadenaString    reduce using rule 273 (EXP -> EXP and EXP .)
    id              reduce using rule 273 (EXP -> EXP and EXP .)
    cadena          reduce using rule 273 (EXP -> EXP and EXP .)
    in              reduce using rule 273 (EXP -> EXP and EXP .)
    like            reduce using rule 273 (EXP -> EXP and EXP .)
    then            reduce using rule 273 (EXP -> EXP and EXP .)
    when            reduce using rule 273 (EXP -> EXP and EXP .)
    parc            reduce using rule 273 (EXP -> EXP and EXP .)
    end             reduce using rule 273 (EXP -> EXP and EXP .)
    else            reduce using rule 273 (EXP -> EXP and EXP .)
    constraint      reduce using rule 273 (EXP -> EXP and EXP .)
    unique          reduce using rule 273 (EXP -> EXP and EXP .)
    check           reduce using rule 273 (EXP -> EXP and EXP .)
    default         reduce using rule 273 (EXP -> EXP and EXP .)
    null            reduce using rule 273 (EXP -> EXP and EXP .)
    primary         reduce using rule 273 (EXP -> EXP and EXP .)
    references      reduce using rule 273 (EXP -> EXP and EXP .)
    asc             reduce using rule 273 (EXP -> EXP and EXP .)
    desc            reduce using rule 273 (EXP -> EXP and EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170
    mayor           shift and go to state 173
    menor           shift and go to state 174
    mayor_igual     shift and go to state 175
    menor_igual     shift and go to state 176
    igual           shift and go to state 177
    diferente1      shift and go to state 178
    diferente2      shift and go to state 179
    not             shift and go to state 182

  ! mas             [ reduce using rule 273 (EXP -> EXP and EXP .) ]
  ! menos           [ reduce using rule 273 (EXP -> EXP and EXP .) ]
  ! multiplicacion  [ reduce using rule 273 (EXP -> EXP and EXP .) ]
  ! division        [ reduce using rule 273 (EXP -> EXP and EXP .) ]
  ! modulo          [ reduce using rule 273 (EXP -> EXP and EXP .) ]
  ! elevado         [ reduce using rule 273 (EXP -> EXP and EXP .) ]
  ! mayor           [ reduce using rule 273 (EXP -> EXP and EXP .) ]
  ! menor           [ reduce using rule 273 (EXP -> EXP and EXP .) ]
  ! mayor_igual     [ reduce using rule 273 (EXP -> EXP and EXP .) ]
  ! menor_igual     [ reduce using rule 273 (EXP -> EXP and EXP .) ]
  ! igual           [ reduce using rule 273 (EXP -> EXP and EXP .) ]
  ! diferente1      [ reduce using rule 273 (EXP -> EXP and EXP .) ]
  ! diferente2      [ reduce using rule 273 (EXP -> EXP and EXP .) ]
  ! not             [ reduce using rule 273 (EXP -> EXP and EXP .) ]
  ! and             [ shift and go to state 171 ]
  ! or              [ shift and go to state 172 ]
  ! between         [ shift and go to state 180 ]
  ! is              [ shift and go to state 181 ]
  ! isnull          [ shift and go to state 183 ]
  ! notnull         [ shift and go to state 184 ]
  ! as              [ shift and go to state 185 ]
  ! cadenaString    [ shift and go to state 186 ]
  ! id              [ shift and go to state 187 ]
  ! cadena          [ shift and go to state 188 ]
  ! in              [ shift and go to state 189 ]
  ! like            [ shift and go to state 190 ]


state 266

    (274) EXP -> EXP or EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    r_from          reduce using rule 274 (EXP -> EXP or EXP .)
    coma            reduce using rule 274 (EXP -> EXP or EXP .)
    where           reduce using rule 274 (EXP -> EXP or EXP .)
    group           reduce using rule 274 (EXP -> EXP or EXP .)
    having          reduce using rule 274 (EXP -> EXP or EXP .)
    union           reduce using rule 274 (EXP -> EXP or EXP .)
    intersect       reduce using rule 274 (EXP -> EXP or EXP .)
    except          reduce using rule 274 (EXP -> EXP or EXP .)
    order           reduce using rule 274 (EXP -> EXP or EXP .)
    limit           reduce using rule 274 (EXP -> EXP or EXP .)
    offset          reduce using rule 274 (EXP -> EXP or EXP .)
    ptcoma          reduce using rule 274 (EXP -> EXP or EXP .)
    or              reduce using rule 274 (EXP -> EXP or EXP .)
    between         reduce using rule 274 (EXP -> EXP or EXP .)
    is              reduce using rule 274 (EXP -> EXP or EXP .)
    isnull          reduce using rule 274 (EXP -> EXP or EXP .)
    notnull         reduce using rule 274 (EXP -> EXP or EXP .)
    as              reduce using rule 274 (EXP -> EXP or EXP .)
    cadenaString    reduce using rule 274 (EXP -> EXP or EXP .)
    id              reduce using rule 274 (EXP -> EXP or EXP .)
    cadena          reduce using rule 274 (EXP -> EXP or EXP .)
    in              reduce using rule 274 (EXP -> EXP or EXP .)
    like            reduce using rule 274 (EXP -> EXP or EXP .)
    then            reduce using rule 274 (EXP -> EXP or EXP .)
    when            reduce using rule 274 (EXP -> EXP or EXP .)
    parc            reduce using rule 274 (EXP -> EXP or EXP .)
    end             reduce using rule 274 (EXP -> EXP or EXP .)
    else            reduce using rule 274 (EXP -> EXP or EXP .)
    constraint      reduce using rule 274 (EXP -> EXP or EXP .)
    unique          reduce using rule 274 (EXP -> EXP or EXP .)
    check           reduce using rule 274 (EXP -> EXP or EXP .)
    default         reduce using rule 274 (EXP -> EXP or EXP .)
    null            reduce using rule 274 (EXP -> EXP or EXP .)
    primary         reduce using rule 274 (EXP -> EXP or EXP .)
    references      reduce using rule 274 (EXP -> EXP or EXP .)
    asc             reduce using rule 274 (EXP -> EXP or EXP .)
    desc            reduce using rule 274 (EXP -> EXP or EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170
    and             shift and go to state 171
    mayor           shift and go to state 173
    menor           shift and go to state 174
    mayor_igual     shift and go to state 175
    menor_igual     shift and go to state 176
    igual           shift and go to state 177
    diferente1      shift and go to state 178
    diferente2      shift and go to state 179
    not             shift and go to state 182

  ! mas             [ reduce using rule 274 (EXP -> EXP or EXP .) ]
  ! menos           [ reduce using rule 274 (EXP -> EXP or EXP .) ]
  ! multiplicacion  [ reduce using rule 274 (EXP -> EXP or EXP .) ]
  ! division        [ reduce using rule 274 (EXP -> EXP or EXP .) ]
  ! modulo          [ reduce using rule 274 (EXP -> EXP or EXP .) ]
  ! elevado         [ reduce using rule 274 (EXP -> EXP or EXP .) ]
  ! and             [ reduce using rule 274 (EXP -> EXP or EXP .) ]
  ! mayor           [ reduce using rule 274 (EXP -> EXP or EXP .) ]
  ! menor           [ reduce using rule 274 (EXP -> EXP or EXP .) ]
  ! mayor_igual     [ reduce using rule 274 (EXP -> EXP or EXP .) ]
  ! menor_igual     [ reduce using rule 274 (EXP -> EXP or EXP .) ]
  ! igual           [ reduce using rule 274 (EXP -> EXP or EXP .) ]
  ! diferente1      [ reduce using rule 274 (EXP -> EXP or EXP .) ]
  ! diferente2      [ reduce using rule 274 (EXP -> EXP or EXP .) ]
  ! not             [ reduce using rule 274 (EXP -> EXP or EXP .) ]
  ! or              [ shift and go to state 172 ]
  ! between         [ shift and go to state 180 ]
  ! is              [ shift and go to state 181 ]
  ! isnull          [ shift and go to state 183 ]
  ! notnull         [ shift and go to state 184 ]
  ! as              [ shift and go to state 185 ]
  ! cadenaString    [ shift and go to state 186 ]
  ! id              [ shift and go to state 187 ]
  ! cadena          [ shift and go to state 188 ]
  ! in              [ shift and go to state 189 ]
  ! like            [ shift and go to state 190 ]


state 267

    (275) EXP -> EXP mayor EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    r_from          reduce using rule 275 (EXP -> EXP mayor EXP .)
    coma            reduce using rule 275 (EXP -> EXP mayor EXP .)
    where           reduce using rule 275 (EXP -> EXP mayor EXP .)
    group           reduce using rule 275 (EXP -> EXP mayor EXP .)
    having          reduce using rule 275 (EXP -> EXP mayor EXP .)
    union           reduce using rule 275 (EXP -> EXP mayor EXP .)
    intersect       reduce using rule 275 (EXP -> EXP mayor EXP .)
    except          reduce using rule 275 (EXP -> EXP mayor EXP .)
    order           reduce using rule 275 (EXP -> EXP mayor EXP .)
    limit           reduce using rule 275 (EXP -> EXP mayor EXP .)
    offset          reduce using rule 275 (EXP -> EXP mayor EXP .)
    ptcoma          reduce using rule 275 (EXP -> EXP mayor EXP .)
    and             reduce using rule 275 (EXP -> EXP mayor EXP .)
    or              reduce using rule 275 (EXP -> EXP mayor EXP .)
    mayor           reduce using rule 275 (EXP -> EXP mayor EXP .)
    menor           reduce using rule 275 (EXP -> EXP mayor EXP .)
    mayor_igual     reduce using rule 275 (EXP -> EXP mayor EXP .)
    menor_igual     reduce using rule 275 (EXP -> EXP mayor EXP .)
    igual           reduce using rule 275 (EXP -> EXP mayor EXP .)
    diferente1      reduce using rule 275 (EXP -> EXP mayor EXP .)
    diferente2      reduce using rule 275 (EXP -> EXP mayor EXP .)
    between         reduce using rule 275 (EXP -> EXP mayor EXP .)
    is              reduce using rule 275 (EXP -> EXP mayor EXP .)
    isnull          reduce using rule 275 (EXP -> EXP mayor EXP .)
    notnull         reduce using rule 275 (EXP -> EXP mayor EXP .)
    as              reduce using rule 275 (EXP -> EXP mayor EXP .)
    cadenaString    reduce using rule 275 (EXP -> EXP mayor EXP .)
    id              reduce using rule 275 (EXP -> EXP mayor EXP .)
    cadena          reduce using rule 275 (EXP -> EXP mayor EXP .)
    in              reduce using rule 275 (EXP -> EXP mayor EXP .)
    not             reduce using rule 275 (EXP -> EXP mayor EXP .)
    like            reduce using rule 275 (EXP -> EXP mayor EXP .)
    then            reduce using rule 275 (EXP -> EXP mayor EXP .)
    when            reduce using rule 275 (EXP -> EXP mayor EXP .)
    parc            reduce using rule 275 (EXP -> EXP mayor EXP .)
    end             reduce using rule 275 (EXP -> EXP mayor EXP .)
    else            reduce using rule 275 (EXP -> EXP mayor EXP .)
    constraint      reduce using rule 275 (EXP -> EXP mayor EXP .)
    unique          reduce using rule 275 (EXP -> EXP mayor EXP .)
    check           reduce using rule 275 (EXP -> EXP mayor EXP .)
    default         reduce using rule 275 (EXP -> EXP mayor EXP .)
    null            reduce using rule 275 (EXP -> EXP mayor EXP .)
    primary         reduce using rule 275 (EXP -> EXP mayor EXP .)
    references      reduce using rule 275 (EXP -> EXP mayor EXP .)
    asc             reduce using rule 275 (EXP -> EXP mayor EXP .)
    desc            reduce using rule 275 (EXP -> EXP mayor EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170

  ! mas             [ reduce using rule 275 (EXP -> EXP mayor EXP .) ]
  ! menos           [ reduce using rule 275 (EXP -> EXP mayor EXP .) ]
  ! multiplicacion  [ reduce using rule 275 (EXP -> EXP mayor EXP .) ]
  ! division        [ reduce using rule 275 (EXP -> EXP mayor EXP .) ]
  ! modulo          [ reduce using rule 275 (EXP -> EXP mayor EXP .) ]
  ! elevado         [ reduce using rule 275 (EXP -> EXP mayor EXP .) ]
  ! and             [ shift and go to state 171 ]
  ! or              [ shift and go to state 172 ]
  ! mayor           [ shift and go to state 173 ]
  ! menor           [ shift and go to state 174 ]
  ! mayor_igual     [ shift and go to state 175 ]
  ! menor_igual     [ shift and go to state 176 ]
  ! igual           [ shift and go to state 177 ]
  ! diferente1      [ shift and go to state 178 ]
  ! diferente2      [ shift and go to state 179 ]
  ! between         [ shift and go to state 180 ]
  ! is              [ shift and go to state 181 ]
  ! isnull          [ shift and go to state 183 ]
  ! notnull         [ shift and go to state 184 ]
  ! as              [ shift and go to state 185 ]
  ! cadenaString    [ shift and go to state 186 ]
  ! id              [ shift and go to state 187 ]
  ! cadena          [ shift and go to state 188 ]
  ! in              [ shift and go to state 189 ]
  ! not             [ shift and go to state 182 ]
  ! like            [ shift and go to state 190 ]


state 268

    (276) EXP -> EXP menor EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    r_from          reduce using rule 276 (EXP -> EXP menor EXP .)
    coma            reduce using rule 276 (EXP -> EXP menor EXP .)
    where           reduce using rule 276 (EXP -> EXP menor EXP .)
    group           reduce using rule 276 (EXP -> EXP menor EXP .)
    having          reduce using rule 276 (EXP -> EXP menor EXP .)
    union           reduce using rule 276 (EXP -> EXP menor EXP .)
    intersect       reduce using rule 276 (EXP -> EXP menor EXP .)
    except          reduce using rule 276 (EXP -> EXP menor EXP .)
    order           reduce using rule 276 (EXP -> EXP menor EXP .)
    limit           reduce using rule 276 (EXP -> EXP menor EXP .)
    offset          reduce using rule 276 (EXP -> EXP menor EXP .)
    ptcoma          reduce using rule 276 (EXP -> EXP menor EXP .)
    and             reduce using rule 276 (EXP -> EXP menor EXP .)
    or              reduce using rule 276 (EXP -> EXP menor EXP .)
    mayor           reduce using rule 276 (EXP -> EXP menor EXP .)
    menor           reduce using rule 276 (EXP -> EXP menor EXP .)
    mayor_igual     reduce using rule 276 (EXP -> EXP menor EXP .)
    menor_igual     reduce using rule 276 (EXP -> EXP menor EXP .)
    igual           reduce using rule 276 (EXP -> EXP menor EXP .)
    diferente1      reduce using rule 276 (EXP -> EXP menor EXP .)
    diferente2      reduce using rule 276 (EXP -> EXP menor EXP .)
    between         reduce using rule 276 (EXP -> EXP menor EXP .)
    is              reduce using rule 276 (EXP -> EXP menor EXP .)
    isnull          reduce using rule 276 (EXP -> EXP menor EXP .)
    notnull         reduce using rule 276 (EXP -> EXP menor EXP .)
    as              reduce using rule 276 (EXP -> EXP menor EXP .)
    cadenaString    reduce using rule 276 (EXP -> EXP menor EXP .)
    id              reduce using rule 276 (EXP -> EXP menor EXP .)
    cadena          reduce using rule 276 (EXP -> EXP menor EXP .)
    in              reduce using rule 276 (EXP -> EXP menor EXP .)
    not             reduce using rule 276 (EXP -> EXP menor EXP .)
    like            reduce using rule 276 (EXP -> EXP menor EXP .)
    then            reduce using rule 276 (EXP -> EXP menor EXP .)
    when            reduce using rule 276 (EXP -> EXP menor EXP .)
    parc            reduce using rule 276 (EXP -> EXP menor EXP .)
    end             reduce using rule 276 (EXP -> EXP menor EXP .)
    else            reduce using rule 276 (EXP -> EXP menor EXP .)
    constraint      reduce using rule 276 (EXP -> EXP menor EXP .)
    unique          reduce using rule 276 (EXP -> EXP menor EXP .)
    check           reduce using rule 276 (EXP -> EXP menor EXP .)
    default         reduce using rule 276 (EXP -> EXP menor EXP .)
    null            reduce using rule 276 (EXP -> EXP menor EXP .)
    primary         reduce using rule 276 (EXP -> EXP menor EXP .)
    references      reduce using rule 276 (EXP -> EXP menor EXP .)
    asc             reduce using rule 276 (EXP -> EXP menor EXP .)
    desc            reduce using rule 276 (EXP -> EXP menor EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170

  ! mas             [ reduce using rule 276 (EXP -> EXP menor EXP .) ]
  ! menos           [ reduce using rule 276 (EXP -> EXP menor EXP .) ]
  ! multiplicacion  [ reduce using rule 276 (EXP -> EXP menor EXP .) ]
  ! division        [ reduce using rule 276 (EXP -> EXP menor EXP .) ]
  ! modulo          [ reduce using rule 276 (EXP -> EXP menor EXP .) ]
  ! elevado         [ reduce using rule 276 (EXP -> EXP menor EXP .) ]
  ! and             [ shift and go to state 171 ]
  ! or              [ shift and go to state 172 ]
  ! mayor           [ shift and go to state 173 ]
  ! menor           [ shift and go to state 174 ]
  ! mayor_igual     [ shift and go to state 175 ]
  ! menor_igual     [ shift and go to state 176 ]
  ! igual           [ shift and go to state 177 ]
  ! diferente1      [ shift and go to state 178 ]
  ! diferente2      [ shift and go to state 179 ]
  ! between         [ shift and go to state 180 ]
  ! is              [ shift and go to state 181 ]
  ! isnull          [ shift and go to state 183 ]
  ! notnull         [ shift and go to state 184 ]
  ! as              [ shift and go to state 185 ]
  ! cadenaString    [ shift and go to state 186 ]
  ! id              [ shift and go to state 187 ]
  ! cadena          [ shift and go to state 188 ]
  ! in              [ shift and go to state 189 ]
  ! not             [ shift and go to state 182 ]
  ! like            [ shift and go to state 190 ]


state 269

    (277) EXP -> EXP mayor_igual EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    r_from          reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    coma            reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    where           reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    group           reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    having          reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    union           reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    intersect       reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    except          reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    order           reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    limit           reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    offset          reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    ptcoma          reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    and             reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    or              reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    mayor           reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    menor           reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    mayor_igual     reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    menor_igual     reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    igual           reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    diferente1      reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    diferente2      reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    between         reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    is              reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    isnull          reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    notnull         reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    as              reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    cadenaString    reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    id              reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    cadena          reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    in              reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    not             reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    like            reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    then            reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    when            reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    parc            reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    end             reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    else            reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    constraint      reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    unique          reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    check           reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    default         reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    null            reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    primary         reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    references      reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    asc             reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    desc            reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170

  ! mas             [ reduce using rule 277 (EXP -> EXP mayor_igual EXP .) ]
  ! menos           [ reduce using rule 277 (EXP -> EXP mayor_igual EXP .) ]
  ! multiplicacion  [ reduce using rule 277 (EXP -> EXP mayor_igual EXP .) ]
  ! division        [ reduce using rule 277 (EXP -> EXP mayor_igual EXP .) ]
  ! modulo          [ reduce using rule 277 (EXP -> EXP mayor_igual EXP .) ]
  ! elevado         [ reduce using rule 277 (EXP -> EXP mayor_igual EXP .) ]
  ! and             [ shift and go to state 171 ]
  ! or              [ shift and go to state 172 ]
  ! mayor           [ shift and go to state 173 ]
  ! menor           [ shift and go to state 174 ]
  ! mayor_igual     [ shift and go to state 175 ]
  ! menor_igual     [ shift and go to state 176 ]
  ! igual           [ shift and go to state 177 ]
  ! diferente1      [ shift and go to state 178 ]
  ! diferente2      [ shift and go to state 179 ]
  ! between         [ shift and go to state 180 ]
  ! is              [ shift and go to state 181 ]
  ! isnull          [ shift and go to state 183 ]
  ! notnull         [ shift and go to state 184 ]
  ! as              [ shift and go to state 185 ]
  ! cadenaString    [ shift and go to state 186 ]
  ! id              [ shift and go to state 187 ]
  ! cadena          [ shift and go to state 188 ]
  ! in              [ shift and go to state 189 ]
  ! not             [ shift and go to state 182 ]
  ! like            [ shift and go to state 190 ]


state 270

    (278) EXP -> EXP menor_igual EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    r_from          reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    coma            reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    where           reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    group           reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    having          reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    union           reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    intersect       reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    except          reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    order           reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    limit           reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    offset          reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    ptcoma          reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    and             reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    or              reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    mayor           reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    menor           reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    mayor_igual     reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    menor_igual     reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    igual           reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    diferente1      reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    diferente2      reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    between         reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    is              reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    isnull          reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    notnull         reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    as              reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    cadenaString    reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    id              reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    cadena          reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    in              reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    not             reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    like            reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    then            reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    when            reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    parc            reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    end             reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    else            reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    constraint      reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    unique          reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    check           reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    default         reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    null            reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    primary         reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    references      reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    asc             reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    desc            reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170

  ! mas             [ reduce using rule 278 (EXP -> EXP menor_igual EXP .) ]
  ! menos           [ reduce using rule 278 (EXP -> EXP menor_igual EXP .) ]
  ! multiplicacion  [ reduce using rule 278 (EXP -> EXP menor_igual EXP .) ]
  ! division        [ reduce using rule 278 (EXP -> EXP menor_igual EXP .) ]
  ! modulo          [ reduce using rule 278 (EXP -> EXP menor_igual EXP .) ]
  ! elevado         [ reduce using rule 278 (EXP -> EXP menor_igual EXP .) ]
  ! and             [ shift and go to state 171 ]
  ! or              [ shift and go to state 172 ]
  ! mayor           [ shift and go to state 173 ]
  ! menor           [ shift and go to state 174 ]
  ! mayor_igual     [ shift and go to state 175 ]
  ! menor_igual     [ shift and go to state 176 ]
  ! igual           [ shift and go to state 177 ]
  ! diferente1      [ shift and go to state 178 ]
  ! diferente2      [ shift and go to state 179 ]
  ! between         [ shift and go to state 180 ]
  ! is              [ shift and go to state 181 ]
  ! isnull          [ shift and go to state 183 ]
  ! notnull         [ shift and go to state 184 ]
  ! as              [ shift and go to state 185 ]
  ! cadenaString    [ shift and go to state 186 ]
  ! id              [ shift and go to state 187 ]
  ! cadena          [ shift and go to state 188 ]
  ! in              [ shift and go to state 189 ]
  ! not             [ shift and go to state 182 ]
  ! like            [ shift and go to state 190 ]


state 271

    (279) EXP -> EXP igual EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    r_from          reduce using rule 279 (EXP -> EXP igual EXP .)
    coma            reduce using rule 279 (EXP -> EXP igual EXP .)
    where           reduce using rule 279 (EXP -> EXP igual EXP .)
    group           reduce using rule 279 (EXP -> EXP igual EXP .)
    having          reduce using rule 279 (EXP -> EXP igual EXP .)
    union           reduce using rule 279 (EXP -> EXP igual EXP .)
    intersect       reduce using rule 279 (EXP -> EXP igual EXP .)
    except          reduce using rule 279 (EXP -> EXP igual EXP .)
    order           reduce using rule 279 (EXP -> EXP igual EXP .)
    limit           reduce using rule 279 (EXP -> EXP igual EXP .)
    offset          reduce using rule 279 (EXP -> EXP igual EXP .)
    ptcoma          reduce using rule 279 (EXP -> EXP igual EXP .)
    and             reduce using rule 279 (EXP -> EXP igual EXP .)
    or              reduce using rule 279 (EXP -> EXP igual EXP .)
    mayor           reduce using rule 279 (EXP -> EXP igual EXP .)
    menor           reduce using rule 279 (EXP -> EXP igual EXP .)
    mayor_igual     reduce using rule 279 (EXP -> EXP igual EXP .)
    menor_igual     reduce using rule 279 (EXP -> EXP igual EXP .)
    igual           reduce using rule 279 (EXP -> EXP igual EXP .)
    diferente1      reduce using rule 279 (EXP -> EXP igual EXP .)
    diferente2      reduce using rule 279 (EXP -> EXP igual EXP .)
    between         reduce using rule 279 (EXP -> EXP igual EXP .)
    is              reduce using rule 279 (EXP -> EXP igual EXP .)
    isnull          reduce using rule 279 (EXP -> EXP igual EXP .)
    notnull         reduce using rule 279 (EXP -> EXP igual EXP .)
    as              reduce using rule 279 (EXP -> EXP igual EXP .)
    cadenaString    reduce using rule 279 (EXP -> EXP igual EXP .)
    id              reduce using rule 279 (EXP -> EXP igual EXP .)
    cadena          reduce using rule 279 (EXP -> EXP igual EXP .)
    in              reduce using rule 279 (EXP -> EXP igual EXP .)
    not             reduce using rule 279 (EXP -> EXP igual EXP .)
    like            reduce using rule 279 (EXP -> EXP igual EXP .)
    then            reduce using rule 279 (EXP -> EXP igual EXP .)
    when            reduce using rule 279 (EXP -> EXP igual EXP .)
    parc            reduce using rule 279 (EXP -> EXP igual EXP .)
    end             reduce using rule 279 (EXP -> EXP igual EXP .)
    else            reduce using rule 279 (EXP -> EXP igual EXP .)
    constraint      reduce using rule 279 (EXP -> EXP igual EXP .)
    unique          reduce using rule 279 (EXP -> EXP igual EXP .)
    check           reduce using rule 279 (EXP -> EXP igual EXP .)
    default         reduce using rule 279 (EXP -> EXP igual EXP .)
    null            reduce using rule 279 (EXP -> EXP igual EXP .)
    primary         reduce using rule 279 (EXP -> EXP igual EXP .)
    references      reduce using rule 279 (EXP -> EXP igual EXP .)
    asc             reduce using rule 279 (EXP -> EXP igual EXP .)
    desc            reduce using rule 279 (EXP -> EXP igual EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170

  ! mas             [ reduce using rule 279 (EXP -> EXP igual EXP .) ]
  ! menos           [ reduce using rule 279 (EXP -> EXP igual EXP .) ]
  ! multiplicacion  [ reduce using rule 279 (EXP -> EXP igual EXP .) ]
  ! division        [ reduce using rule 279 (EXP -> EXP igual EXP .) ]
  ! modulo          [ reduce using rule 279 (EXP -> EXP igual EXP .) ]
  ! elevado         [ reduce using rule 279 (EXP -> EXP igual EXP .) ]
  ! and             [ shift and go to state 171 ]
  ! or              [ shift and go to state 172 ]
  ! mayor           [ shift and go to state 173 ]
  ! menor           [ shift and go to state 174 ]
  ! mayor_igual     [ shift and go to state 175 ]
  ! menor_igual     [ shift and go to state 176 ]
  ! igual           [ shift and go to state 177 ]
  ! diferente1      [ shift and go to state 178 ]
  ! diferente2      [ shift and go to state 179 ]
  ! between         [ shift and go to state 180 ]
  ! is              [ shift and go to state 181 ]
  ! isnull          [ shift and go to state 183 ]
  ! notnull         [ shift and go to state 184 ]
  ! as              [ shift and go to state 185 ]
  ! cadenaString    [ shift and go to state 186 ]
  ! id              [ shift and go to state 187 ]
  ! cadena          [ shift and go to state 188 ]
  ! in              [ shift and go to state 189 ]
  ! not             [ shift and go to state 182 ]
  ! like            [ shift and go to state 190 ]


state 272

    (280) EXP -> EXP diferente1 EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    r_from          reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    coma            reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    where           reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    group           reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    having          reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    union           reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    intersect       reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    except          reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    order           reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    limit           reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    offset          reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    ptcoma          reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    and             reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    or              reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    mayor           reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    menor           reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    mayor_igual     reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    menor_igual     reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    igual           reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    diferente1      reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    diferente2      reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    between         reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    is              reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    isnull          reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    notnull         reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    as              reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    cadenaString    reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    id              reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    cadena          reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    in              reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    not             reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    like            reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    then            reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    when            reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    parc            reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    end             reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    else            reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    constraint      reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    unique          reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    check           reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    default         reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    null            reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    primary         reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    references      reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    asc             reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    desc            reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170

  ! mas             [ reduce using rule 280 (EXP -> EXP diferente1 EXP .) ]
  ! menos           [ reduce using rule 280 (EXP -> EXP diferente1 EXP .) ]
  ! multiplicacion  [ reduce using rule 280 (EXP -> EXP diferente1 EXP .) ]
  ! division        [ reduce using rule 280 (EXP -> EXP diferente1 EXP .) ]
  ! modulo          [ reduce using rule 280 (EXP -> EXP diferente1 EXP .) ]
  ! elevado         [ reduce using rule 280 (EXP -> EXP diferente1 EXP .) ]
  ! and             [ shift and go to state 171 ]
  ! or              [ shift and go to state 172 ]
  ! mayor           [ shift and go to state 173 ]
  ! menor           [ shift and go to state 174 ]
  ! mayor_igual     [ shift and go to state 175 ]
  ! menor_igual     [ shift and go to state 176 ]
  ! igual           [ shift and go to state 177 ]
  ! diferente1      [ shift and go to state 178 ]
  ! diferente2      [ shift and go to state 179 ]
  ! between         [ shift and go to state 180 ]
  ! is              [ shift and go to state 181 ]
  ! isnull          [ shift and go to state 183 ]
  ! notnull         [ shift and go to state 184 ]
  ! as              [ shift and go to state 185 ]
  ! cadenaString    [ shift and go to state 186 ]
  ! id              [ shift and go to state 187 ]
  ! cadena          [ shift and go to state 188 ]
  ! in              [ shift and go to state 189 ]
  ! not             [ shift and go to state 182 ]
  ! like            [ shift and go to state 190 ]


state 273

    (281) EXP -> EXP diferente2 EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    r_from          reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    coma            reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    where           reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    group           reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    having          reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    union           reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    intersect       reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    except          reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    order           reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    limit           reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    offset          reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    ptcoma          reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    and             reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    or              reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    mayor           reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    menor           reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    mayor_igual     reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    menor_igual     reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    igual           reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    diferente1      reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    diferente2      reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    between         reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    is              reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    isnull          reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    notnull         reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    as              reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    cadenaString    reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    id              reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    cadena          reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    in              reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    not             reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    like            reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    then            reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    when            reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    parc            reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    end             reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    else            reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    constraint      reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    unique          reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    check           reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    default         reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    null            reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    primary         reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    references      reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    asc             reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    desc            reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170

  ! mas             [ reduce using rule 281 (EXP -> EXP diferente2 EXP .) ]
  ! menos           [ reduce using rule 281 (EXP -> EXP diferente2 EXP .) ]
  ! multiplicacion  [ reduce using rule 281 (EXP -> EXP diferente2 EXP .) ]
  ! division        [ reduce using rule 281 (EXP -> EXP diferente2 EXP .) ]
  ! modulo          [ reduce using rule 281 (EXP -> EXP diferente2 EXP .) ]
  ! elevado         [ reduce using rule 281 (EXP -> EXP diferente2 EXP .) ]
  ! and             [ shift and go to state 171 ]
  ! or              [ shift and go to state 172 ]
  ! mayor           [ shift and go to state 173 ]
  ! menor           [ shift and go to state 174 ]
  ! mayor_igual     [ shift and go to state 175 ]
  ! menor_igual     [ shift and go to state 176 ]
  ! igual           [ shift and go to state 177 ]
  ! diferente1      [ shift and go to state 178 ]
  ! diferente2      [ shift and go to state 179 ]
  ! between         [ shift and go to state 180 ]
  ! is              [ shift and go to state 181 ]
  ! isnull          [ shift and go to state 183 ]
  ! notnull         [ shift and go to state 184 ]
  ! as              [ shift and go to state 185 ]
  ! cadenaString    [ shift and go to state 186 ]
  ! id              [ shift and go to state 187 ]
  ! cadena          [ shift and go to state 188 ]
  ! in              [ shift and go to state 189 ]
  ! not             [ shift and go to state 182 ]
  ! like            [ shift and go to state 190 ]


state 274

    (282) EXP -> EXP between EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    r_from          reduce using rule 282 (EXP -> EXP between EXP .)
    coma            reduce using rule 282 (EXP -> EXP between EXP .)
    where           reduce using rule 282 (EXP -> EXP between EXP .)
    group           reduce using rule 282 (EXP -> EXP between EXP .)
    having          reduce using rule 282 (EXP -> EXP between EXP .)
    union           reduce using rule 282 (EXP -> EXP between EXP .)
    intersect       reduce using rule 282 (EXP -> EXP between EXP .)
    except          reduce using rule 282 (EXP -> EXP between EXP .)
    order           reduce using rule 282 (EXP -> EXP between EXP .)
    limit           reduce using rule 282 (EXP -> EXP between EXP .)
    offset          reduce using rule 282 (EXP -> EXP between EXP .)
    ptcoma          reduce using rule 282 (EXP -> EXP between EXP .)
    and             reduce using rule 282 (EXP -> EXP between EXP .)
    or              reduce using rule 282 (EXP -> EXP between EXP .)
    between         reduce using rule 282 (EXP -> EXP between EXP .)
    is              reduce using rule 282 (EXP -> EXP between EXP .)
    isnull          reduce using rule 282 (EXP -> EXP between EXP .)
    notnull         reduce using rule 282 (EXP -> EXP between EXP .)
    as              reduce using rule 282 (EXP -> EXP between EXP .)
    cadenaString    reduce using rule 282 (EXP -> EXP between EXP .)
    id              reduce using rule 282 (EXP -> EXP between EXP .)
    cadena          reduce using rule 282 (EXP -> EXP between EXP .)
    in              reduce using rule 282 (EXP -> EXP between EXP .)
    not             reduce using rule 282 (EXP -> EXP between EXP .)
    like            reduce using rule 282 (EXP -> EXP between EXP .)
    then            reduce using rule 282 (EXP -> EXP between EXP .)
    when            reduce using rule 282 (EXP -> EXP between EXP .)
    parc            reduce using rule 282 (EXP -> EXP between EXP .)
    end             reduce using rule 282 (EXP -> EXP between EXP .)
    else            reduce using rule 282 (EXP -> EXP between EXP .)
    constraint      reduce using rule 282 (EXP -> EXP between EXP .)
    unique          reduce using rule 282 (EXP -> EXP between EXP .)
    check           reduce using rule 282 (EXP -> EXP between EXP .)
    default         reduce using rule 282 (EXP -> EXP between EXP .)
    null            reduce using rule 282 (EXP -> EXP between EXP .)
    primary         reduce using rule 282 (EXP -> EXP between EXP .)
    references      reduce using rule 282 (EXP -> EXP between EXP .)
    asc             reduce using rule 282 (EXP -> EXP between EXP .)
    desc            reduce using rule 282 (EXP -> EXP between EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170
    mayor           shift and go to state 173
    menor           shift and go to state 174
    mayor_igual     shift and go to state 175
    menor_igual     shift and go to state 176
    igual           shift and go to state 177
    diferente1      shift and go to state 178
    diferente2      shift and go to state 179

  ! mas             [ reduce using rule 282 (EXP -> EXP between EXP .) ]
  ! menos           [ reduce using rule 282 (EXP -> EXP between EXP .) ]
  ! multiplicacion  [ reduce using rule 282 (EXP -> EXP between EXP .) ]
  ! division        [ reduce using rule 282 (EXP -> EXP between EXP .) ]
  ! modulo          [ reduce using rule 282 (EXP -> EXP between EXP .) ]
  ! elevado         [ reduce using rule 282 (EXP -> EXP between EXP .) ]
  ! mayor           [ reduce using rule 282 (EXP -> EXP between EXP .) ]
  ! menor           [ reduce using rule 282 (EXP -> EXP between EXP .) ]
  ! mayor_igual     [ reduce using rule 282 (EXP -> EXP between EXP .) ]
  ! menor_igual     [ reduce using rule 282 (EXP -> EXP between EXP .) ]
  ! igual           [ reduce using rule 282 (EXP -> EXP between EXP .) ]
  ! diferente1      [ reduce using rule 282 (EXP -> EXP between EXP .) ]
  ! diferente2      [ reduce using rule 282 (EXP -> EXP between EXP .) ]
  ! and             [ shift and go to state 171 ]
  ! or              [ shift and go to state 172 ]
  ! between         [ shift and go to state 180 ]
  ! is              [ shift and go to state 181 ]
  ! isnull          [ shift and go to state 183 ]
  ! notnull         [ shift and go to state 184 ]
  ! as              [ shift and go to state 185 ]
  ! cadenaString    [ shift and go to state 186 ]
  ! id              [ shift and go to state 187 ]
  ! cadena          [ shift and go to state 188 ]
  ! in              [ shift and go to state 189 ]
  ! not             [ shift and go to state 182 ]
  ! like            [ shift and go to state 190 ]


state 275

    (305) EXP -> EXP between symetric . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 380
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 276

    (283) EXP -> EXP is not . null
    (288) EXP -> EXP is not . true
    (290) EXP -> EXP is not . false
    (292) EXP -> EXP is not . unknown
    (308) EXP -> EXP is not . distinct r_from EXP

    null            shift and go to state 381
    true            shift and go to state 382
    false           shift and go to state 383
    unknown         shift and go to state 384
    distinct        shift and go to state 385


state 277

    (284) EXP -> EXP is null .

    r_from          reduce using rule 284 (EXP -> EXP is null .)
    coma            reduce using rule 284 (EXP -> EXP is null .)
    where           reduce using rule 284 (EXP -> EXP is null .)
    group           reduce using rule 284 (EXP -> EXP is null .)
    having          reduce using rule 284 (EXP -> EXP is null .)
    union           reduce using rule 284 (EXP -> EXP is null .)
    intersect       reduce using rule 284 (EXP -> EXP is null .)
    except          reduce using rule 284 (EXP -> EXP is null .)
    order           reduce using rule 284 (EXP -> EXP is null .)
    limit           reduce using rule 284 (EXP -> EXP is null .)
    offset          reduce using rule 284 (EXP -> EXP is null .)
    ptcoma          reduce using rule 284 (EXP -> EXP is null .)
    mas             reduce using rule 284 (EXP -> EXP is null .)
    menos           reduce using rule 284 (EXP -> EXP is null .)
    multiplicacion  reduce using rule 284 (EXP -> EXP is null .)
    division        reduce using rule 284 (EXP -> EXP is null .)
    modulo          reduce using rule 284 (EXP -> EXP is null .)
    elevado         reduce using rule 284 (EXP -> EXP is null .)
    and             reduce using rule 284 (EXP -> EXP is null .)
    or              reduce using rule 284 (EXP -> EXP is null .)
    mayor           reduce using rule 284 (EXP -> EXP is null .)
    menor           reduce using rule 284 (EXP -> EXP is null .)
    mayor_igual     reduce using rule 284 (EXP -> EXP is null .)
    menor_igual     reduce using rule 284 (EXP -> EXP is null .)
    igual           reduce using rule 284 (EXP -> EXP is null .)
    diferente1      reduce using rule 284 (EXP -> EXP is null .)
    diferente2      reduce using rule 284 (EXP -> EXP is null .)
    between         reduce using rule 284 (EXP -> EXP is null .)
    is              reduce using rule 284 (EXP -> EXP is null .)
    isnull          reduce using rule 284 (EXP -> EXP is null .)
    notnull         reduce using rule 284 (EXP -> EXP is null .)
    as              reduce using rule 284 (EXP -> EXP is null .)
    cadenaString    reduce using rule 284 (EXP -> EXP is null .)
    id              reduce using rule 284 (EXP -> EXP is null .)
    cadena          reduce using rule 284 (EXP -> EXP is null .)
    in              reduce using rule 284 (EXP -> EXP is null .)
    not             reduce using rule 284 (EXP -> EXP is null .)
    like            reduce using rule 284 (EXP -> EXP is null .)
    then            reduce using rule 284 (EXP -> EXP is null .)
    when            reduce using rule 284 (EXP -> EXP is null .)
    parc            reduce using rule 284 (EXP -> EXP is null .)
    end             reduce using rule 284 (EXP -> EXP is null .)
    else            reduce using rule 284 (EXP -> EXP is null .)
    constraint      reduce using rule 284 (EXP -> EXP is null .)
    unique          reduce using rule 284 (EXP -> EXP is null .)
    check           reduce using rule 284 (EXP -> EXP is null .)
    default         reduce using rule 284 (EXP -> EXP is null .)
    null            reduce using rule 284 (EXP -> EXP is null .)
    primary         reduce using rule 284 (EXP -> EXP is null .)
    references      reduce using rule 284 (EXP -> EXP is null .)
    asc             reduce using rule 284 (EXP -> EXP is null .)
    desc            reduce using rule 284 (EXP -> EXP is null .)


state 278

    (287) EXP -> EXP is true .

    r_from          reduce using rule 287 (EXP -> EXP is true .)
    coma            reduce using rule 287 (EXP -> EXP is true .)
    where           reduce using rule 287 (EXP -> EXP is true .)
    group           reduce using rule 287 (EXP -> EXP is true .)
    having          reduce using rule 287 (EXP -> EXP is true .)
    union           reduce using rule 287 (EXP -> EXP is true .)
    intersect       reduce using rule 287 (EXP -> EXP is true .)
    except          reduce using rule 287 (EXP -> EXP is true .)
    order           reduce using rule 287 (EXP -> EXP is true .)
    limit           reduce using rule 287 (EXP -> EXP is true .)
    offset          reduce using rule 287 (EXP -> EXP is true .)
    ptcoma          reduce using rule 287 (EXP -> EXP is true .)
    mas             reduce using rule 287 (EXP -> EXP is true .)
    menos           reduce using rule 287 (EXP -> EXP is true .)
    multiplicacion  reduce using rule 287 (EXP -> EXP is true .)
    division        reduce using rule 287 (EXP -> EXP is true .)
    modulo          reduce using rule 287 (EXP -> EXP is true .)
    elevado         reduce using rule 287 (EXP -> EXP is true .)
    and             reduce using rule 287 (EXP -> EXP is true .)
    or              reduce using rule 287 (EXP -> EXP is true .)
    mayor           reduce using rule 287 (EXP -> EXP is true .)
    menor           reduce using rule 287 (EXP -> EXP is true .)
    mayor_igual     reduce using rule 287 (EXP -> EXP is true .)
    menor_igual     reduce using rule 287 (EXP -> EXP is true .)
    igual           reduce using rule 287 (EXP -> EXP is true .)
    diferente1      reduce using rule 287 (EXP -> EXP is true .)
    diferente2      reduce using rule 287 (EXP -> EXP is true .)
    between         reduce using rule 287 (EXP -> EXP is true .)
    is              reduce using rule 287 (EXP -> EXP is true .)
    isnull          reduce using rule 287 (EXP -> EXP is true .)
    notnull         reduce using rule 287 (EXP -> EXP is true .)
    as              reduce using rule 287 (EXP -> EXP is true .)
    cadenaString    reduce using rule 287 (EXP -> EXP is true .)
    id              reduce using rule 287 (EXP -> EXP is true .)
    cadena          reduce using rule 287 (EXP -> EXP is true .)
    in              reduce using rule 287 (EXP -> EXP is true .)
    not             reduce using rule 287 (EXP -> EXP is true .)
    like            reduce using rule 287 (EXP -> EXP is true .)
    then            reduce using rule 287 (EXP -> EXP is true .)
    when            reduce using rule 287 (EXP -> EXP is true .)
    parc            reduce using rule 287 (EXP -> EXP is true .)
    end             reduce using rule 287 (EXP -> EXP is true .)
    else            reduce using rule 287 (EXP -> EXP is true .)
    constraint      reduce using rule 287 (EXP -> EXP is true .)
    unique          reduce using rule 287 (EXP -> EXP is true .)
    check           reduce using rule 287 (EXP -> EXP is true .)
    default         reduce using rule 287 (EXP -> EXP is true .)
    null            reduce using rule 287 (EXP -> EXP is true .)
    primary         reduce using rule 287 (EXP -> EXP is true .)
    references      reduce using rule 287 (EXP -> EXP is true .)
    asc             reduce using rule 287 (EXP -> EXP is true .)
    desc            reduce using rule 287 (EXP -> EXP is true .)


state 279

    (289) EXP -> EXP is false .

    r_from          reduce using rule 289 (EXP -> EXP is false .)
    coma            reduce using rule 289 (EXP -> EXP is false .)
    where           reduce using rule 289 (EXP -> EXP is false .)
    group           reduce using rule 289 (EXP -> EXP is false .)
    having          reduce using rule 289 (EXP -> EXP is false .)
    union           reduce using rule 289 (EXP -> EXP is false .)
    intersect       reduce using rule 289 (EXP -> EXP is false .)
    except          reduce using rule 289 (EXP -> EXP is false .)
    order           reduce using rule 289 (EXP -> EXP is false .)
    limit           reduce using rule 289 (EXP -> EXP is false .)
    offset          reduce using rule 289 (EXP -> EXP is false .)
    ptcoma          reduce using rule 289 (EXP -> EXP is false .)
    mas             reduce using rule 289 (EXP -> EXP is false .)
    menos           reduce using rule 289 (EXP -> EXP is false .)
    multiplicacion  reduce using rule 289 (EXP -> EXP is false .)
    division        reduce using rule 289 (EXP -> EXP is false .)
    modulo          reduce using rule 289 (EXP -> EXP is false .)
    elevado         reduce using rule 289 (EXP -> EXP is false .)
    and             reduce using rule 289 (EXP -> EXP is false .)
    or              reduce using rule 289 (EXP -> EXP is false .)
    mayor           reduce using rule 289 (EXP -> EXP is false .)
    menor           reduce using rule 289 (EXP -> EXP is false .)
    mayor_igual     reduce using rule 289 (EXP -> EXP is false .)
    menor_igual     reduce using rule 289 (EXP -> EXP is false .)
    igual           reduce using rule 289 (EXP -> EXP is false .)
    diferente1      reduce using rule 289 (EXP -> EXP is false .)
    diferente2      reduce using rule 289 (EXP -> EXP is false .)
    between         reduce using rule 289 (EXP -> EXP is false .)
    is              reduce using rule 289 (EXP -> EXP is false .)
    isnull          reduce using rule 289 (EXP -> EXP is false .)
    notnull         reduce using rule 289 (EXP -> EXP is false .)
    as              reduce using rule 289 (EXP -> EXP is false .)
    cadenaString    reduce using rule 289 (EXP -> EXP is false .)
    id              reduce using rule 289 (EXP -> EXP is false .)
    cadena          reduce using rule 289 (EXP -> EXP is false .)
    in              reduce using rule 289 (EXP -> EXP is false .)
    not             reduce using rule 289 (EXP -> EXP is false .)
    like            reduce using rule 289 (EXP -> EXP is false .)
    then            reduce using rule 289 (EXP -> EXP is false .)
    when            reduce using rule 289 (EXP -> EXP is false .)
    parc            reduce using rule 289 (EXP -> EXP is false .)
    end             reduce using rule 289 (EXP -> EXP is false .)
    else            reduce using rule 289 (EXP -> EXP is false .)
    constraint      reduce using rule 289 (EXP -> EXP is false .)
    unique          reduce using rule 289 (EXP -> EXP is false .)
    check           reduce using rule 289 (EXP -> EXP is false .)
    default         reduce using rule 289 (EXP -> EXP is false .)
    null            reduce using rule 289 (EXP -> EXP is false .)
    primary         reduce using rule 289 (EXP -> EXP is false .)
    references      reduce using rule 289 (EXP -> EXP is false .)
    asc             reduce using rule 289 (EXP -> EXP is false .)
    desc            reduce using rule 289 (EXP -> EXP is false .)


state 280

    (291) EXP -> EXP is unknown .

    r_from          reduce using rule 291 (EXP -> EXP is unknown .)
    coma            reduce using rule 291 (EXP -> EXP is unknown .)
    where           reduce using rule 291 (EXP -> EXP is unknown .)
    group           reduce using rule 291 (EXP -> EXP is unknown .)
    having          reduce using rule 291 (EXP -> EXP is unknown .)
    union           reduce using rule 291 (EXP -> EXP is unknown .)
    intersect       reduce using rule 291 (EXP -> EXP is unknown .)
    except          reduce using rule 291 (EXP -> EXP is unknown .)
    order           reduce using rule 291 (EXP -> EXP is unknown .)
    limit           reduce using rule 291 (EXP -> EXP is unknown .)
    offset          reduce using rule 291 (EXP -> EXP is unknown .)
    ptcoma          reduce using rule 291 (EXP -> EXP is unknown .)
    mas             reduce using rule 291 (EXP -> EXP is unknown .)
    menos           reduce using rule 291 (EXP -> EXP is unknown .)
    multiplicacion  reduce using rule 291 (EXP -> EXP is unknown .)
    division        reduce using rule 291 (EXP -> EXP is unknown .)
    modulo          reduce using rule 291 (EXP -> EXP is unknown .)
    elevado         reduce using rule 291 (EXP -> EXP is unknown .)
    and             reduce using rule 291 (EXP -> EXP is unknown .)
    or              reduce using rule 291 (EXP -> EXP is unknown .)
    mayor           reduce using rule 291 (EXP -> EXP is unknown .)
    menor           reduce using rule 291 (EXP -> EXP is unknown .)
    mayor_igual     reduce using rule 291 (EXP -> EXP is unknown .)
    menor_igual     reduce using rule 291 (EXP -> EXP is unknown .)
    igual           reduce using rule 291 (EXP -> EXP is unknown .)
    diferente1      reduce using rule 291 (EXP -> EXP is unknown .)
    diferente2      reduce using rule 291 (EXP -> EXP is unknown .)
    between         reduce using rule 291 (EXP -> EXP is unknown .)
    is              reduce using rule 291 (EXP -> EXP is unknown .)
    isnull          reduce using rule 291 (EXP -> EXP is unknown .)
    notnull         reduce using rule 291 (EXP -> EXP is unknown .)
    as              reduce using rule 291 (EXP -> EXP is unknown .)
    cadenaString    reduce using rule 291 (EXP -> EXP is unknown .)
    id              reduce using rule 291 (EXP -> EXP is unknown .)
    cadena          reduce using rule 291 (EXP -> EXP is unknown .)
    in              reduce using rule 291 (EXP -> EXP is unknown .)
    not             reduce using rule 291 (EXP -> EXP is unknown .)
    like            reduce using rule 291 (EXP -> EXP is unknown .)
    then            reduce using rule 291 (EXP -> EXP is unknown .)
    when            reduce using rule 291 (EXP -> EXP is unknown .)
    parc            reduce using rule 291 (EXP -> EXP is unknown .)
    end             reduce using rule 291 (EXP -> EXP is unknown .)
    else            reduce using rule 291 (EXP -> EXP is unknown .)
    constraint      reduce using rule 291 (EXP -> EXP is unknown .)
    unique          reduce using rule 291 (EXP -> EXP is unknown .)
    check           reduce using rule 291 (EXP -> EXP is unknown .)
    default         reduce using rule 291 (EXP -> EXP is unknown .)
    null            reduce using rule 291 (EXP -> EXP is unknown .)
    primary         reduce using rule 291 (EXP -> EXP is unknown .)
    references      reduce using rule 291 (EXP -> EXP is unknown .)
    asc             reduce using rule 291 (EXP -> EXP is unknown .)
    desc            reduce using rule 291 (EXP -> EXP is unknown .)


state 281

    (307) EXP -> EXP is distinct . r_from EXP

    r_from          shift and go to state 386


state 282

    (303) EXP -> EXP not in . para EXP parc

    para            shift and go to state 387


state 283

    (304) EXP -> EXP not between . EXP
    (306) EXP -> EXP not between . symetric EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    symetric        shift and go to state 389
    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 388
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 284

    (310) EXP -> EXP not like . cadena

    cadena          shift and go to state 390


state 285

    (293) EXP -> EXP as cadenaString .

    r_from          reduce using rule 293 (EXP -> EXP as cadenaString .)
    coma            reduce using rule 293 (EXP -> EXP as cadenaString .)
    where           reduce using rule 293 (EXP -> EXP as cadenaString .)
    group           reduce using rule 293 (EXP -> EXP as cadenaString .)
    having          reduce using rule 293 (EXP -> EXP as cadenaString .)
    union           reduce using rule 293 (EXP -> EXP as cadenaString .)
    intersect       reduce using rule 293 (EXP -> EXP as cadenaString .)
    except          reduce using rule 293 (EXP -> EXP as cadenaString .)
    order           reduce using rule 293 (EXP -> EXP as cadenaString .)
    limit           reduce using rule 293 (EXP -> EXP as cadenaString .)
    offset          reduce using rule 293 (EXP -> EXP as cadenaString .)
    ptcoma          reduce using rule 293 (EXP -> EXP as cadenaString .)
    mas             reduce using rule 293 (EXP -> EXP as cadenaString .)
    menos           reduce using rule 293 (EXP -> EXP as cadenaString .)
    multiplicacion  reduce using rule 293 (EXP -> EXP as cadenaString .)
    division        reduce using rule 293 (EXP -> EXP as cadenaString .)
    modulo          reduce using rule 293 (EXP -> EXP as cadenaString .)
    elevado         reduce using rule 293 (EXP -> EXP as cadenaString .)
    and             reduce using rule 293 (EXP -> EXP as cadenaString .)
    or              reduce using rule 293 (EXP -> EXP as cadenaString .)
    mayor           reduce using rule 293 (EXP -> EXP as cadenaString .)
    menor           reduce using rule 293 (EXP -> EXP as cadenaString .)
    mayor_igual     reduce using rule 293 (EXP -> EXP as cadenaString .)
    menor_igual     reduce using rule 293 (EXP -> EXP as cadenaString .)
    igual           reduce using rule 293 (EXP -> EXP as cadenaString .)
    diferente1      reduce using rule 293 (EXP -> EXP as cadenaString .)
    diferente2      reduce using rule 293 (EXP -> EXP as cadenaString .)
    between         reduce using rule 293 (EXP -> EXP as cadenaString .)
    is              reduce using rule 293 (EXP -> EXP as cadenaString .)
    isnull          reduce using rule 293 (EXP -> EXP as cadenaString .)
    notnull         reduce using rule 293 (EXP -> EXP as cadenaString .)
    as              reduce using rule 293 (EXP -> EXP as cadenaString .)
    cadenaString    reduce using rule 293 (EXP -> EXP as cadenaString .)
    id              reduce using rule 293 (EXP -> EXP as cadenaString .)
    cadena          reduce using rule 293 (EXP -> EXP as cadenaString .)
    in              reduce using rule 293 (EXP -> EXP as cadenaString .)
    not             reduce using rule 293 (EXP -> EXP as cadenaString .)
    like            reduce using rule 293 (EXP -> EXP as cadenaString .)
    then            reduce using rule 293 (EXP -> EXP as cadenaString .)
    when            reduce using rule 293 (EXP -> EXP as cadenaString .)
    parc            reduce using rule 293 (EXP -> EXP as cadenaString .)
    end             reduce using rule 293 (EXP -> EXP as cadenaString .)
    else            reduce using rule 293 (EXP -> EXP as cadenaString .)
    constraint      reduce using rule 293 (EXP -> EXP as cadenaString .)
    unique          reduce using rule 293 (EXP -> EXP as cadenaString .)
    check           reduce using rule 293 (EXP -> EXP as cadenaString .)
    default         reduce using rule 293 (EXP -> EXP as cadenaString .)
    null            reduce using rule 293 (EXP -> EXP as cadenaString .)
    primary         reduce using rule 293 (EXP -> EXP as cadenaString .)
    references      reduce using rule 293 (EXP -> EXP as cadenaString .)
    asc             reduce using rule 293 (EXP -> EXP as cadenaString .)
    desc            reduce using rule 293 (EXP -> EXP as cadenaString .)


state 286

    (295) EXP -> EXP as id .

    r_from          reduce using rule 295 (EXP -> EXP as id .)
    coma            reduce using rule 295 (EXP -> EXP as id .)
    where           reduce using rule 295 (EXP -> EXP as id .)
    group           reduce using rule 295 (EXP -> EXP as id .)
    having          reduce using rule 295 (EXP -> EXP as id .)
    union           reduce using rule 295 (EXP -> EXP as id .)
    intersect       reduce using rule 295 (EXP -> EXP as id .)
    except          reduce using rule 295 (EXP -> EXP as id .)
    order           reduce using rule 295 (EXP -> EXP as id .)
    limit           reduce using rule 295 (EXP -> EXP as id .)
    offset          reduce using rule 295 (EXP -> EXP as id .)
    ptcoma          reduce using rule 295 (EXP -> EXP as id .)
    mas             reduce using rule 295 (EXP -> EXP as id .)
    menos           reduce using rule 295 (EXP -> EXP as id .)
    multiplicacion  reduce using rule 295 (EXP -> EXP as id .)
    division        reduce using rule 295 (EXP -> EXP as id .)
    modulo          reduce using rule 295 (EXP -> EXP as id .)
    elevado         reduce using rule 295 (EXP -> EXP as id .)
    and             reduce using rule 295 (EXP -> EXP as id .)
    or              reduce using rule 295 (EXP -> EXP as id .)
    mayor           reduce using rule 295 (EXP -> EXP as id .)
    menor           reduce using rule 295 (EXP -> EXP as id .)
    mayor_igual     reduce using rule 295 (EXP -> EXP as id .)
    menor_igual     reduce using rule 295 (EXP -> EXP as id .)
    igual           reduce using rule 295 (EXP -> EXP as id .)
    diferente1      reduce using rule 295 (EXP -> EXP as id .)
    diferente2      reduce using rule 295 (EXP -> EXP as id .)
    between         reduce using rule 295 (EXP -> EXP as id .)
    is              reduce using rule 295 (EXP -> EXP as id .)
    isnull          reduce using rule 295 (EXP -> EXP as id .)
    notnull         reduce using rule 295 (EXP -> EXP as id .)
    as              reduce using rule 295 (EXP -> EXP as id .)
    cadenaString    reduce using rule 295 (EXP -> EXP as id .)
    id              reduce using rule 295 (EXP -> EXP as id .)
    cadena          reduce using rule 295 (EXP -> EXP as id .)
    in              reduce using rule 295 (EXP -> EXP as id .)
    not             reduce using rule 295 (EXP -> EXP as id .)
    like            reduce using rule 295 (EXP -> EXP as id .)
    then            reduce using rule 295 (EXP -> EXP as id .)
    when            reduce using rule 295 (EXP -> EXP as id .)
    parc            reduce using rule 295 (EXP -> EXP as id .)
    end             reduce using rule 295 (EXP -> EXP as id .)
    else            reduce using rule 295 (EXP -> EXP as id .)
    constraint      reduce using rule 295 (EXP -> EXP as id .)
    unique          reduce using rule 295 (EXP -> EXP as id .)
    check           reduce using rule 295 (EXP -> EXP as id .)
    default         reduce using rule 295 (EXP -> EXP as id .)
    null            reduce using rule 295 (EXP -> EXP as id .)
    primary         reduce using rule 295 (EXP -> EXP as id .)
    references      reduce using rule 295 (EXP -> EXP as id .)
    asc             reduce using rule 295 (EXP -> EXP as id .)
    desc            reduce using rule 295 (EXP -> EXP as id .)


state 287

    (297) EXP -> EXP as cadena .

    r_from          reduce using rule 297 (EXP -> EXP as cadena .)
    coma            reduce using rule 297 (EXP -> EXP as cadena .)
    where           reduce using rule 297 (EXP -> EXP as cadena .)
    group           reduce using rule 297 (EXP -> EXP as cadena .)
    having          reduce using rule 297 (EXP -> EXP as cadena .)
    union           reduce using rule 297 (EXP -> EXP as cadena .)
    intersect       reduce using rule 297 (EXP -> EXP as cadena .)
    except          reduce using rule 297 (EXP -> EXP as cadena .)
    order           reduce using rule 297 (EXP -> EXP as cadena .)
    limit           reduce using rule 297 (EXP -> EXP as cadena .)
    offset          reduce using rule 297 (EXP -> EXP as cadena .)
    ptcoma          reduce using rule 297 (EXP -> EXP as cadena .)
    mas             reduce using rule 297 (EXP -> EXP as cadena .)
    menos           reduce using rule 297 (EXP -> EXP as cadena .)
    multiplicacion  reduce using rule 297 (EXP -> EXP as cadena .)
    division        reduce using rule 297 (EXP -> EXP as cadena .)
    modulo          reduce using rule 297 (EXP -> EXP as cadena .)
    elevado         reduce using rule 297 (EXP -> EXP as cadena .)
    and             reduce using rule 297 (EXP -> EXP as cadena .)
    or              reduce using rule 297 (EXP -> EXP as cadena .)
    mayor           reduce using rule 297 (EXP -> EXP as cadena .)
    menor           reduce using rule 297 (EXP -> EXP as cadena .)
    mayor_igual     reduce using rule 297 (EXP -> EXP as cadena .)
    menor_igual     reduce using rule 297 (EXP -> EXP as cadena .)
    igual           reduce using rule 297 (EXP -> EXP as cadena .)
    diferente1      reduce using rule 297 (EXP -> EXP as cadena .)
    diferente2      reduce using rule 297 (EXP -> EXP as cadena .)
    between         reduce using rule 297 (EXP -> EXP as cadena .)
    is              reduce using rule 297 (EXP -> EXP as cadena .)
    isnull          reduce using rule 297 (EXP -> EXP as cadena .)
    notnull         reduce using rule 297 (EXP -> EXP as cadena .)
    as              reduce using rule 297 (EXP -> EXP as cadena .)
    cadenaString    reduce using rule 297 (EXP -> EXP as cadena .)
    id              reduce using rule 297 (EXP -> EXP as cadena .)
    cadena          reduce using rule 297 (EXP -> EXP as cadena .)
    in              reduce using rule 297 (EXP -> EXP as cadena .)
    not             reduce using rule 297 (EXP -> EXP as cadena .)
    like            reduce using rule 297 (EXP -> EXP as cadena .)
    then            reduce using rule 297 (EXP -> EXP as cadena .)
    when            reduce using rule 297 (EXP -> EXP as cadena .)
    parc            reduce using rule 297 (EXP -> EXP as cadena .)
    end             reduce using rule 297 (EXP -> EXP as cadena .)
    else            reduce using rule 297 (EXP -> EXP as cadena .)
    constraint      reduce using rule 297 (EXP -> EXP as cadena .)
    unique          reduce using rule 297 (EXP -> EXP as cadena .)
    check           reduce using rule 297 (EXP -> EXP as cadena .)
    default         reduce using rule 297 (EXP -> EXP as cadena .)
    null            reduce using rule 297 (EXP -> EXP as cadena .)
    primary         reduce using rule 297 (EXP -> EXP as cadena .)
    references      reduce using rule 297 (EXP -> EXP as cadena .)
    asc             reduce using rule 297 (EXP -> EXP as cadena .)
    desc            reduce using rule 297 (EXP -> EXP as cadena .)


state 288

    (302) EXP -> EXP in para . EXP parc
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 391
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 289

    (309) EXP -> EXP like cadena .

    r_from          reduce using rule 309 (EXP -> EXP like cadena .)
    coma            reduce using rule 309 (EXP -> EXP like cadena .)
    where           reduce using rule 309 (EXP -> EXP like cadena .)
    group           reduce using rule 309 (EXP -> EXP like cadena .)
    having          reduce using rule 309 (EXP -> EXP like cadena .)
    union           reduce using rule 309 (EXP -> EXP like cadena .)
    intersect       reduce using rule 309 (EXP -> EXP like cadena .)
    except          reduce using rule 309 (EXP -> EXP like cadena .)
    order           reduce using rule 309 (EXP -> EXP like cadena .)
    limit           reduce using rule 309 (EXP -> EXP like cadena .)
    offset          reduce using rule 309 (EXP -> EXP like cadena .)
    ptcoma          reduce using rule 309 (EXP -> EXP like cadena .)
    mas             reduce using rule 309 (EXP -> EXP like cadena .)
    menos           reduce using rule 309 (EXP -> EXP like cadena .)
    multiplicacion  reduce using rule 309 (EXP -> EXP like cadena .)
    division        reduce using rule 309 (EXP -> EXP like cadena .)
    modulo          reduce using rule 309 (EXP -> EXP like cadena .)
    elevado         reduce using rule 309 (EXP -> EXP like cadena .)
    and             reduce using rule 309 (EXP -> EXP like cadena .)
    or              reduce using rule 309 (EXP -> EXP like cadena .)
    mayor           reduce using rule 309 (EXP -> EXP like cadena .)
    menor           reduce using rule 309 (EXP -> EXP like cadena .)
    mayor_igual     reduce using rule 309 (EXP -> EXP like cadena .)
    menor_igual     reduce using rule 309 (EXP -> EXP like cadena .)
    igual           reduce using rule 309 (EXP -> EXP like cadena .)
    diferente1      reduce using rule 309 (EXP -> EXP like cadena .)
    diferente2      reduce using rule 309 (EXP -> EXP like cadena .)
    between         reduce using rule 309 (EXP -> EXP like cadena .)
    is              reduce using rule 309 (EXP -> EXP like cadena .)
    isnull          reduce using rule 309 (EXP -> EXP like cadena .)
    notnull         reduce using rule 309 (EXP -> EXP like cadena .)
    as              reduce using rule 309 (EXP -> EXP like cadena .)
    cadenaString    reduce using rule 309 (EXP -> EXP like cadena .)
    id              reduce using rule 309 (EXP -> EXP like cadena .)
    cadena          reduce using rule 309 (EXP -> EXP like cadena .)
    in              reduce using rule 309 (EXP -> EXP like cadena .)
    not             reduce using rule 309 (EXP -> EXP like cadena .)
    like            reduce using rule 309 (EXP -> EXP like cadena .)
    then            reduce using rule 309 (EXP -> EXP like cadena .)
    when            reduce using rule 309 (EXP -> EXP like cadena .)
    parc            reduce using rule 309 (EXP -> EXP like cadena .)
    end             reduce using rule 309 (EXP -> EXP like cadena .)
    else            reduce using rule 309 (EXP -> EXP like cadena .)
    constraint      reduce using rule 309 (EXP -> EXP like cadena .)
    unique          reduce using rule 309 (EXP -> EXP like cadena .)
    check           reduce using rule 309 (EXP -> EXP like cadena .)
    default         reduce using rule 309 (EXP -> EXP like cadena .)
    null            reduce using rule 309 (EXP -> EXP like cadena .)
    primary         reduce using rule 309 (EXP -> EXP like cadena .)
    references      reduce using rule 309 (EXP -> EXP like cadena .)
    asc             reduce using rule 309 (EXP -> EXP like cadena .)
    desc            reduce using rule 309 (EXP -> EXP like cadena .)


state 290

    (314) EXP -> id para LEXP . parc
    (218) LEXP -> LEXP . coma EXP

    parc            shift and go to state 392
    coma            shift and go to state 164


state 291

    (315) EXP -> id para parc .

    r_from          reduce using rule 315 (EXP -> id para parc .)
    coma            reduce using rule 315 (EXP -> id para parc .)
    where           reduce using rule 315 (EXP -> id para parc .)
    group           reduce using rule 315 (EXP -> id para parc .)
    having          reduce using rule 315 (EXP -> id para parc .)
    union           reduce using rule 315 (EXP -> id para parc .)
    intersect       reduce using rule 315 (EXP -> id para parc .)
    except          reduce using rule 315 (EXP -> id para parc .)
    order           reduce using rule 315 (EXP -> id para parc .)
    limit           reduce using rule 315 (EXP -> id para parc .)
    offset          reduce using rule 315 (EXP -> id para parc .)
    ptcoma          reduce using rule 315 (EXP -> id para parc .)
    mas             reduce using rule 315 (EXP -> id para parc .)
    menos           reduce using rule 315 (EXP -> id para parc .)
    multiplicacion  reduce using rule 315 (EXP -> id para parc .)
    division        reduce using rule 315 (EXP -> id para parc .)
    modulo          reduce using rule 315 (EXP -> id para parc .)
    elevado         reduce using rule 315 (EXP -> id para parc .)
    and             reduce using rule 315 (EXP -> id para parc .)
    or              reduce using rule 315 (EXP -> id para parc .)
    mayor           reduce using rule 315 (EXP -> id para parc .)
    menor           reduce using rule 315 (EXP -> id para parc .)
    mayor_igual     reduce using rule 315 (EXP -> id para parc .)
    menor_igual     reduce using rule 315 (EXP -> id para parc .)
    igual           reduce using rule 315 (EXP -> id para parc .)
    diferente1      reduce using rule 315 (EXP -> id para parc .)
    diferente2      reduce using rule 315 (EXP -> id para parc .)
    between         reduce using rule 315 (EXP -> id para parc .)
    is              reduce using rule 315 (EXP -> id para parc .)
    isnull          reduce using rule 315 (EXP -> id para parc .)
    notnull         reduce using rule 315 (EXP -> id para parc .)
    as              reduce using rule 315 (EXP -> id para parc .)
    cadenaString    reduce using rule 315 (EXP -> id para parc .)
    id              reduce using rule 315 (EXP -> id para parc .)
    cadena          reduce using rule 315 (EXP -> id para parc .)
    in              reduce using rule 315 (EXP -> id para parc .)
    not             reduce using rule 315 (EXP -> id para parc .)
    like            reduce using rule 315 (EXP -> id para parc .)
    then            reduce using rule 315 (EXP -> id para parc .)
    when            reduce using rule 315 (EXP -> id para parc .)
    parc            reduce using rule 315 (EXP -> id para parc .)
    end             reduce using rule 315 (EXP -> id para parc .)
    else            reduce using rule 315 (EXP -> id para parc .)
    constraint      reduce using rule 315 (EXP -> id para parc .)
    unique          reduce using rule 315 (EXP -> id para parc .)
    check           reduce using rule 315 (EXP -> id para parc .)
    default         reduce using rule 315 (EXP -> id para parc .)
    null            reduce using rule 315 (EXP -> id para parc .)
    primary         reduce using rule 315 (EXP -> id para parc .)
    references      reduce using rule 315 (EXP -> id para parc .)
    asc             reduce using rule 315 (EXP -> id para parc .)
    desc            reduce using rule 315 (EXP -> id para parc .)


state 292

    (333) EXP -> cadena as TIPO .

    r_from          reduce using rule 333 (EXP -> cadena as TIPO .)
    coma            reduce using rule 333 (EXP -> cadena as TIPO .)
    where           reduce using rule 333 (EXP -> cadena as TIPO .)
    group           reduce using rule 333 (EXP -> cadena as TIPO .)
    having          reduce using rule 333 (EXP -> cadena as TIPO .)
    union           reduce using rule 333 (EXP -> cadena as TIPO .)
    intersect       reduce using rule 333 (EXP -> cadena as TIPO .)
    except          reduce using rule 333 (EXP -> cadena as TIPO .)
    order           reduce using rule 333 (EXP -> cadena as TIPO .)
    limit           reduce using rule 333 (EXP -> cadena as TIPO .)
    offset          reduce using rule 333 (EXP -> cadena as TIPO .)
    ptcoma          reduce using rule 333 (EXP -> cadena as TIPO .)
    mas             reduce using rule 333 (EXP -> cadena as TIPO .)
    menos           reduce using rule 333 (EXP -> cadena as TIPO .)
    multiplicacion  reduce using rule 333 (EXP -> cadena as TIPO .)
    division        reduce using rule 333 (EXP -> cadena as TIPO .)
    modulo          reduce using rule 333 (EXP -> cadena as TIPO .)
    elevado         reduce using rule 333 (EXP -> cadena as TIPO .)
    and             reduce using rule 333 (EXP -> cadena as TIPO .)
    or              reduce using rule 333 (EXP -> cadena as TIPO .)
    mayor           reduce using rule 333 (EXP -> cadena as TIPO .)
    menor           reduce using rule 333 (EXP -> cadena as TIPO .)
    mayor_igual     reduce using rule 333 (EXP -> cadena as TIPO .)
    menor_igual     reduce using rule 333 (EXP -> cadena as TIPO .)
    igual           reduce using rule 333 (EXP -> cadena as TIPO .)
    diferente1      reduce using rule 333 (EXP -> cadena as TIPO .)
    diferente2      reduce using rule 333 (EXP -> cadena as TIPO .)
    between         reduce using rule 333 (EXP -> cadena as TIPO .)
    is              reduce using rule 333 (EXP -> cadena as TIPO .)
    isnull          reduce using rule 333 (EXP -> cadena as TIPO .)
    notnull         reduce using rule 333 (EXP -> cadena as TIPO .)
    as              reduce using rule 333 (EXP -> cadena as TIPO .)
    cadenaString    reduce using rule 333 (EXP -> cadena as TIPO .)
    id              reduce using rule 333 (EXP -> cadena as TIPO .)
    cadena          reduce using rule 333 (EXP -> cadena as TIPO .)
    in              reduce using rule 333 (EXP -> cadena as TIPO .)
    not             reduce using rule 333 (EXP -> cadena as TIPO .)
    like            reduce using rule 333 (EXP -> cadena as TIPO .)
    then            reduce using rule 333 (EXP -> cadena as TIPO .)
    when            reduce using rule 333 (EXP -> cadena as TIPO .)
    parc            reduce using rule 333 (EXP -> cadena as TIPO .)
    end             reduce using rule 333 (EXP -> cadena as TIPO .)
    else            reduce using rule 333 (EXP -> cadena as TIPO .)
    constraint      reduce using rule 333 (EXP -> cadena as TIPO .)
    unique          reduce using rule 333 (EXP -> cadena as TIPO .)
    check           reduce using rule 333 (EXP -> cadena as TIPO .)
    default         reduce using rule 333 (EXP -> cadena as TIPO .)
    null            reduce using rule 333 (EXP -> cadena as TIPO .)
    primary         reduce using rule 333 (EXP -> cadena as TIPO .)
    references      reduce using rule 333 (EXP -> cadena as TIPO .)
    asc             reduce using rule 333 (EXP -> cadena as TIPO .)
    desc            reduce using rule 333 (EXP -> cadena as TIPO .)


state 293

    (312) EXP -> para EXP parc .

    r_from          reduce using rule 312 (EXP -> para EXP parc .)
    coma            reduce using rule 312 (EXP -> para EXP parc .)
    where           reduce using rule 312 (EXP -> para EXP parc .)
    group           reduce using rule 312 (EXP -> para EXP parc .)
    having          reduce using rule 312 (EXP -> para EXP parc .)
    union           reduce using rule 312 (EXP -> para EXP parc .)
    intersect       reduce using rule 312 (EXP -> para EXP parc .)
    except          reduce using rule 312 (EXP -> para EXP parc .)
    order           reduce using rule 312 (EXP -> para EXP parc .)
    limit           reduce using rule 312 (EXP -> para EXP parc .)
    offset          reduce using rule 312 (EXP -> para EXP parc .)
    ptcoma          reduce using rule 312 (EXP -> para EXP parc .)
    mas             reduce using rule 312 (EXP -> para EXP parc .)
    menos           reduce using rule 312 (EXP -> para EXP parc .)
    multiplicacion  reduce using rule 312 (EXP -> para EXP parc .)
    division        reduce using rule 312 (EXP -> para EXP parc .)
    modulo          reduce using rule 312 (EXP -> para EXP parc .)
    elevado         reduce using rule 312 (EXP -> para EXP parc .)
    and             reduce using rule 312 (EXP -> para EXP parc .)
    or              reduce using rule 312 (EXP -> para EXP parc .)
    mayor           reduce using rule 312 (EXP -> para EXP parc .)
    menor           reduce using rule 312 (EXP -> para EXP parc .)
    mayor_igual     reduce using rule 312 (EXP -> para EXP parc .)
    menor_igual     reduce using rule 312 (EXP -> para EXP parc .)
    igual           reduce using rule 312 (EXP -> para EXP parc .)
    diferente1      reduce using rule 312 (EXP -> para EXP parc .)
    diferente2      reduce using rule 312 (EXP -> para EXP parc .)
    between         reduce using rule 312 (EXP -> para EXP parc .)
    is              reduce using rule 312 (EXP -> para EXP parc .)
    isnull          reduce using rule 312 (EXP -> para EXP parc .)
    notnull         reduce using rule 312 (EXP -> para EXP parc .)
    as              reduce using rule 312 (EXP -> para EXP parc .)
    cadenaString    reduce using rule 312 (EXP -> para EXP parc .)
    id              reduce using rule 312 (EXP -> para EXP parc .)
    cadena          reduce using rule 312 (EXP -> para EXP parc .)
    in              reduce using rule 312 (EXP -> para EXP parc .)
    not             reduce using rule 312 (EXP -> para EXP parc .)
    like            reduce using rule 312 (EXP -> para EXP parc .)
    then            reduce using rule 312 (EXP -> para EXP parc .)
    when            reduce using rule 312 (EXP -> para EXP parc .)
    parc            reduce using rule 312 (EXP -> para EXP parc .)
    end             reduce using rule 312 (EXP -> para EXP parc .)
    else            reduce using rule 312 (EXP -> para EXP parc .)
    constraint      reduce using rule 312 (EXP -> para EXP parc .)
    unique          reduce using rule 312 (EXP -> para EXP parc .)
    check           reduce using rule 312 (EXP -> para EXP parc .)
    default         reduce using rule 312 (EXP -> para EXP parc .)
    null            reduce using rule 312 (EXP -> para EXP parc .)
    primary         reduce using rule 312 (EXP -> para EXP parc .)
    references      reduce using rule 312 (EXP -> para EXP parc .)
    asc             reduce using rule 312 (EXP -> para EXP parc .)
    desc            reduce using rule 312 (EXP -> para EXP parc .)


state 294

    (316) EXP -> any para LEXP . parc
    (218) LEXP -> LEXP . coma EXP

    parc            shift and go to state 393
    coma            shift and go to state 164


state 295

    (317) EXP -> all para LEXP . parc
    (218) LEXP -> LEXP . coma EXP

    parc            shift and go to state 394
    coma            shift and go to state 164


state 296

    (318) EXP -> some para LEXP . parc
    (218) LEXP -> LEXP . coma EXP

    parc            shift and go to state 395
    coma            shift and go to state 164


state 297

    (319) EXP -> extract para FIELDS . r_from timestamp cadena parc

    r_from          shift and go to state 396


state 298

    (261) FIELDS -> year .

    r_from          reduce using rule 261 (FIELDS -> year .)


state 299

    (262) FIELDS -> month .

    r_from          reduce using rule 262 (FIELDS -> month .)


state 300

    (263) FIELDS -> day .

    r_from          reduce using rule 263 (FIELDS -> day .)


state 301

    (264) FIELDS -> hour .

    r_from          reduce using rule 264 (FIELDS -> hour .)


state 302

    (265) FIELDS -> minute .

    r_from          reduce using rule 265 (FIELDS -> minute .)


state 303

    (266) FIELDS -> second .

    r_from          reduce using rule 266 (FIELDS -> second .)


state 304

    (152) CREATETABLE -> create table id para . LDEF parc ptcoma
    (153) CREATETABLE -> create table id para . LDEF parc HERENCIA ptcoma
    (154) LDEF -> . LDEF coma COLDEF
    (155) LDEF -> . COLDEF
    (156) COLDEF -> . OPCONST
    (157) COLDEF -> . constraint id OPCONST
    (158) COLDEF -> . id TIPO
    (159) COLDEF -> . id TIPO LOPCOLUMN
    (171) OPCONST -> . primary key para LEXP parc
    (172) OPCONST -> . foreign key para LEXP parc references id para LEXP parc
    (173) OPCONST -> . unique para LEXP parc
    (174) OPCONST -> . check para CONDCHECK parc

    constraint      shift and go to state 401
    id              shift and go to state 397
    primary         shift and go to state 402
    foreign         shift and go to state 403
    unique          shift and go to state 404
    check           shift and go to state 405

    LDEF                           shift and go to state 398
    COLDEF                         shift and go to state 399
    OPCONST                        shift and go to state 400

state 305

    (183) CREATETYPE -> create type id as . enum para LEXP parc

    enum            shift and go to state 406


state 306

    (135) CREATEDB -> create RD if not . exist id
    (136) CREATEDB -> create RD if not . exist id OPCCDB

    exist           shift and go to state 407


state 307

    (138) CREATEDB -> create RD id OPCCDB .

    ptcoma          reduce using rule 138 (CREATEDB -> create RD id OPCCDB .)


state 308

    (139) OPCCDB -> PROPIETARIO .
    (141) OPCCDB -> PROPIETARIO . MODO
    (150) MODO -> . mode igual int
    (151) MODO -> . mode int

    ptcoma          reduce using rule 139 (OPCCDB -> PROPIETARIO .)
    mode            shift and go to state 311

    MODO                           shift and go to state 408

state 309

    (140) OPCCDB -> MODO .

    ptcoma          reduce using rule 140 (OPCCDB -> MODO .)


state 310

    (144) PROPIETARIO -> owner . igual id
    (145) PROPIETARIO -> owner . igual cadena
    (146) PROPIETARIO -> owner . igual cadenaString
    (147) PROPIETARIO -> owner . id
    (148) PROPIETARIO -> owner . cadena
    (149) PROPIETARIO -> owner . cadenaString

    igual           shift and go to state 409
    id              shift and go to state 410
    cadena          shift and go to state 411
    cadenaString    shift and go to state 412


state 311

    (150) MODO -> mode . igual int
    (151) MODO -> mode . int

    igual           shift and go to state 413
    int             shift and go to state 414


state 312

    (45) CREATEINDEX -> create index id on . id para LEXP parc
    (47) CREATEINDEX -> create index id on . id using hash para LEXP parc
    (48) CREATEINDEX -> create index id on . id para id ORDEN parc
    (49) CREATEINDEX -> create index id on . id para id id ORDEN parc

    id              shift and go to state 415


state 313

    (46) CREATEINDEX -> create unique index id . on id para LEXP parc

    on              shift and go to state 416


state 314

    (30) PROCEDIMIENTOS -> create procedure id para . LPARAM parc LENGUAJE LCONTENIDOP
    (31) PROCEDIMIENTOS -> create procedure id para . LPARAM parc LCONTENIDOP LENGUAJE
    (37) LPARAM -> . LPARAM coma inout id TIPO
    (38) LPARAM -> . LPARAM coma id TIPO
    (39) LPARAM -> . inout id TIPO
    (40) LPARAM -> . id TIPO

    inout           shift and go to state 419
    id              shift and go to state 417

    LPARAM                         shift and go to state 418

state 315

    (26) FUNCIONES -> create function id para . LPARAM parc RETURNP LENGUAJE LCONTENIDOP
    (27) FUNCIONES -> create function id para . LPARAM parc RETURNP LCONTENIDOP LENGUAJE
    (37) LPARAM -> . LPARAM coma inout id TIPO
    (38) LPARAM -> . LPARAM coma id TIPO
    (39) LPARAM -> . inout id TIPO
    (40) LPARAM -> . id TIPO

    inout           shift and go to state 419
    id              shift and go to state 417

    LPARAM                         shift and go to state 420

state 316

    (142) RD -> or replace databases .

    if              reduce using rule 142 (RD -> or replace databases .)
    id              reduce using rule 142 (RD -> or replace databases .)


state 317

    (214) LCAMPOS -> id . igual EXP

    igual           shift and go to state 421


state 318

    (212) UPDATE -> update id set LCAMPOS . WHERE
    (213) LCAMPOS -> LCAMPOS . coma id igual EXP
    (195) WHERE -> . where EXP
    (196) WHERE -> . where EXIST
    (197) WHERE -> .

    coma            shift and go to state 423
    where           shift and go to state 73
    ptcoma          reduce using rule 197 (WHERE -> .)

    WHERE                          shift and go to state 422

state 319

    (215) DELETE -> delete r_from id WHERE .

    ptcoma          reduce using rule 215 (DELETE -> delete r_from id WHERE .)


state 320

    (113) ALTER -> alter databases id rename . to id

    to              shift and go to state 424


state 321

    (114) ALTER -> alter databases id owner . to id

    to              shift and go to state 425


state 322

    (125) OP -> alter . column id set not null
    (126) OP -> alter . column id set null
    (131) OP -> alter . column id type TIPO

    column          shift and go to state 426


state 323

    (115) ALTER -> alter table id LOP .
    (116) LOP -> LOP . coma OP

    ptcoma          reduce using rule 115 (ALTER -> alter table id LOP .)
    coma            shift and go to state 427


state 324

    (117) LOP -> OP .

    coma            reduce using rule 117 (LOP -> OP .)
    ptcoma          reduce using rule 117 (LOP -> OP .)


state 325

    (118) OP -> add . column id TIPO
    (119) OP -> add . check para CONDCHECK parc
    (120) OP -> add . constraint id check para CONDCHECK parc
    (121) OP -> add . constraint id unique para LEXP parc
    (122) OP -> add . unique para LEXP parc
    (123) OP -> add . foreign key para LEXP parc references id para LEXP parc
    (124) OP -> add . constraint id foreign key para LEXP parc references id para LEXP parc

    column          shift and go to state 428
    check           shift and go to state 429
    constraint      shift and go to state 430
    unique          shift and go to state 431
    foreign         shift and go to state 432


state 326

    (127) OP -> drop . constraint id
    (128) OP -> drop . column LEXP
    (129) OP -> drop . check id

    constraint      shift and go to state 433
    column          shift and go to state 434
    check           shift and go to state 435


state 327

    (130) OP -> rename . column id to id

    column          shift and go to state 436


state 328

    (109) DROP -> drop all para parc .

    ptcoma          reduce using rule 109 (DROP -> drop all para parc .)


state 329

    (111) DROP -> drop databases if exist . id

    id              shift and go to state 437


state 330

    (69) CONDICIONIF -> if EXP then LISTACONTENIDO . ELSEF end if
    (70) CONDICIONIF -> if EXP then LISTACONTENIDO . LELIF end if
    (71) CONDICIONIF -> if EXP then LISTACONTENIDO . end if
    (72) CONDICIONIF -> if EXP then LISTACONTENIDO . LELIF ELSEF end if
    (80) LISTACONTENIDO -> LISTACONTENIDO . CONTENIDO
    (75) ELSEF -> . else LISTACONTENIDO
    (73) LELIF -> . LELIF elsif EXP then LISTACONTENIDO
    (74) LELIF -> . elsif EXP then LISTACONTENIDO
    (82) CONTENIDO -> . ASIGNACION ptcoma
    (83) CONTENIDO -> . DECLARACIONES ptcoma
    (84) CONTENIDO -> . CONDICIONIF ptcoma
    (85) CONTENIDO -> . RAISE ptcoma
    (86) CONTENIDO -> . BEGINEND ptcoma
    (87) CONTENIDO -> . CALLPROCEDURE ptcoma
    (88) CONTENIDO -> . RETURN ptcoma
    (89) CONTENIDO -> . CASE ptcoma
    (67) ASIGNACION -> . id dospuntos igual EXP
    (68) ASIGNACION -> . id igual EXP
    (59) DECLARACIONES -> . id TIPO not null ASIG
    (60) DECLARACIONES -> . id TIPO ASIG
    (61) DECLARACIONES -> . id constant TIPO not null ASIG
    (62) DECLARACIONES -> . id constant TIPO ASIG
    (69) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (70) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (71) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (72) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (90) RAISE -> . raise LEVEL FORMAT
    (91) RAISE -> . raise LEVEL EXP
    (92) RAISE -> . raise LEVEL
    (93) RAISE -> . raise
    (94) RAISE -> . raise LEVEL cadena coma id
    (44) BEGINEND -> . begin LISTACONTENIDO end
    (29) CALLPROCEDURE -> . call id para LEXP parc
    (24) RETURN -> . return LEXP
    (25) RETURN -> . return id para LEXP parc
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    end             shift and go to state 439
    else            shift and go to state 349
    elsif           shift and go to state 442
    id              shift and go to state 340
    if              shift and go to state 30
    raise           shift and go to state 341
    begin           shift and go to state 342
    call            shift and go to state 343
    return          shift and go to state 344
    case            shift and go to state 32

    ELSEF                          shift and go to state 438
    LELIF                          shift and go to state 440
    CONTENIDO                      shift and go to state 441
    ASIGNACION                     shift and go to state 332
    DECLARACIONES                  shift and go to state 333
    CONDICIONIF                    shift and go to state 334
    RAISE                          shift and go to state 335
    BEGINEND                       shift and go to state 336
    CALLPROCEDURE                  shift and go to state 337
    RETURN                         shift and go to state 338
    CASE                           shift and go to state 339

state 331

    (81) LISTACONTENIDO -> CONTENIDO .

    end             reduce using rule 81 (LISTACONTENIDO -> CONTENIDO .)
    else            reduce using rule 81 (LISTACONTENIDO -> CONTENIDO .)
    elsif           reduce using rule 81 (LISTACONTENIDO -> CONTENIDO .)
    id              reduce using rule 81 (LISTACONTENIDO -> CONTENIDO .)
    if              reduce using rule 81 (LISTACONTENIDO -> CONTENIDO .)
    raise           reduce using rule 81 (LISTACONTENIDO -> CONTENIDO .)
    begin           reduce using rule 81 (LISTACONTENIDO -> CONTENIDO .)
    call            reduce using rule 81 (LISTACONTENIDO -> CONTENIDO .)
    return          reduce using rule 81 (LISTACONTENIDO -> CONTENIDO .)
    case            reduce using rule 81 (LISTACONTENIDO -> CONTENIDO .)
    when            reduce using rule 81 (LISTACONTENIDO -> CONTENIDO .)
    language        reduce using rule 81 (LISTACONTENIDO -> CONTENIDO .)
    dolarn          reduce using rule 81 (LISTACONTENIDO -> CONTENIDO .)
    as              reduce using rule 81 (LISTACONTENIDO -> CONTENIDO .)
    do              reduce using rule 81 (LISTACONTENIDO -> CONTENIDO .)
    use             reduce using rule 81 (LISTACONTENIDO -> CONTENIDO .)
    select          reduce using rule 81 (LISTACONTENIDO -> CONTENIDO .)
    create          reduce using rule 81 (LISTACONTENIDO -> CONTENIDO .)
    update          reduce using rule 81 (LISTACONTENIDO -> CONTENIDO .)
    delete          reduce using rule 81 (LISTACONTENIDO -> CONTENIDO .)
    alter           reduce using rule 81 (LISTACONTENIDO -> CONTENIDO .)
    drop            reduce using rule 81 (LISTACONTENIDO -> CONTENIDO .)
    insert          reduce using rule 81 (LISTACONTENIDO -> CONTENIDO .)
    show            reduce using rule 81 (LISTACONTENIDO -> CONTENIDO .)
    $end            reduce using rule 81 (LISTACONTENIDO -> CONTENIDO .)


state 332

    (82) CONTENIDO -> ASIGNACION . ptcoma

    ptcoma          shift and go to state 443


state 333

    (83) CONTENIDO -> DECLARACIONES . ptcoma

    ptcoma          shift and go to state 444


state 334

    (84) CONTENIDO -> CONDICIONIF . ptcoma

    ptcoma          shift and go to state 445


state 335

    (85) CONTENIDO -> RAISE . ptcoma

    ptcoma          shift and go to state 446


state 336

    (86) CONTENIDO -> BEGINEND . ptcoma

    ptcoma          shift and go to state 447


state 337

    (87) CONTENIDO -> CALLPROCEDURE . ptcoma

    ptcoma          shift and go to state 448


state 338

    (88) CONTENIDO -> RETURN . ptcoma

    ptcoma          shift and go to state 449


state 339

    (89) CONTENIDO -> CASE . ptcoma

    ptcoma          shift and go to state 450


state 340

    (67) ASIGNACION -> id . dospuntos igual EXP
    (68) ASIGNACION -> id . igual EXP
    (59) DECLARACIONES -> id . TIPO not null ASIG
    (60) DECLARACIONES -> id . TIPO ASIG
    (61) DECLARACIONES -> id . constant TIPO not null ASIG
    (62) DECLARACIONES -> id . constant TIPO ASIG
    (220) TIPO -> . interval cadena
    (221) TIPO -> . decimal para int coma int parc
    (222) TIPO -> . decimal para int parc
    (223) TIPO -> . decimal
    (224) TIPO -> . numeric para int coma int parc
    (225) TIPO -> . numeric para int parc
    (226) TIPO -> . numeric
    (227) TIPO -> . varchar para int parc
    (228) TIPO -> . timestamp para int parc
    (229) TIPO -> . character para int parc
    (230) TIPO -> . interval para int parc
    (231) TIPO -> . char para int parc
    (232) TIPO -> . time para int parc
    (233) TIPO -> . character varying para int parc
    (234) TIPO -> . id modulo rowtype
    (235) TIPO -> . idPunto modulo type
    (236) TIPO -> . timestamp para int parc without time zone
    (237) TIPO -> . timestamp para int parc with time zone
    (238) TIPO -> . time para int parc without time zone
    (239) TIPO -> . time para int parc with time zone
    (240) TIPO -> . interval para int parc cadena
    (241) TIPO -> . smallint
    (242) TIPO -> . integer
    (243) TIPO -> . r_int
    (244) TIPO -> . bigint
    (245) TIPO -> . real
    (246) TIPO -> . double precision
    (247) TIPO -> . money
    (248) TIPO -> . text
    (249) TIPO -> . timestamp
    (250) TIPO -> . date
    (251) TIPO -> . time
    (252) TIPO -> . interval
    (253) TIPO -> . boolean
    (254) TIPO -> . record
    (255) TIPO -> . varchar
    (256) TIPO -> . timestamp without time zone
    (257) TIPO -> . timestamp with time zone
    (258) TIPO -> . time without time zone
    (259) TIPO -> . time with time zone
    (260) TIPO -> . id

    dospuntos       shift and go to state 49
    igual           shift and go to state 50
    constant        shift and go to state 48
    interval        shift and go to state 51
    decimal         shift and go to state 52
    numeric         shift and go to state 53
    varchar         shift and go to state 54
    timestamp       shift and go to state 55
    character       shift and go to state 56
    char            shift and go to state 57
    time            shift and go to state 58
    id              shift and go to state 46
    idPunto         shift and go to state 59
    smallint        shift and go to state 60
    integer         shift and go to state 61
    r_int           shift and go to state 62
    bigint          shift and go to state 63
    real            shift and go to state 64
    double          shift and go to state 65
    money           shift and go to state 66
    text            shift and go to state 67
    date            shift and go to state 68
    boolean         shift and go to state 69
    record          shift and go to state 70

    TIPO                           shift and go to state 47

state 341

    (90) RAISE -> raise . LEVEL FORMAT
    (91) RAISE -> raise . LEVEL EXP
    (92) RAISE -> raise . LEVEL
    (93) RAISE -> raise .
    (94) RAISE -> raise . LEVEL cadena coma id
    (95) LEVEL -> . info
    (96) LEVEL -> . debug
    (97) LEVEL -> . log
    (98) LEVEL -> . notice
    (99) LEVEL -> . warning
    (100) LEVEL -> . exception

    ptcoma          reduce using rule 93 (RAISE -> raise .)
    info            shift and go to state 452
    debug           shift and go to state 453
    log             shift and go to state 454
    notice          shift and go to state 455
    warning         shift and go to state 456
    exception       shift and go to state 457

    LEVEL                          shift and go to state 451

state 342

    (44) BEGINEND -> begin . LISTACONTENIDO end
    (80) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (81) LISTACONTENIDO -> . CONTENIDO
    (82) CONTENIDO -> . ASIGNACION ptcoma
    (83) CONTENIDO -> . DECLARACIONES ptcoma
    (84) CONTENIDO -> . CONDICIONIF ptcoma
    (85) CONTENIDO -> . RAISE ptcoma
    (86) CONTENIDO -> . BEGINEND ptcoma
    (87) CONTENIDO -> . CALLPROCEDURE ptcoma
    (88) CONTENIDO -> . RETURN ptcoma
    (89) CONTENIDO -> . CASE ptcoma
    (67) ASIGNACION -> . id dospuntos igual EXP
    (68) ASIGNACION -> . id igual EXP
    (59) DECLARACIONES -> . id TIPO not null ASIG
    (60) DECLARACIONES -> . id TIPO ASIG
    (61) DECLARACIONES -> . id constant TIPO not null ASIG
    (62) DECLARACIONES -> . id constant TIPO ASIG
    (69) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (70) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (71) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (72) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (90) RAISE -> . raise LEVEL FORMAT
    (91) RAISE -> . raise LEVEL EXP
    (92) RAISE -> . raise LEVEL
    (93) RAISE -> . raise
    (94) RAISE -> . raise LEVEL cadena coma id
    (44) BEGINEND -> . begin LISTACONTENIDO end
    (29) CALLPROCEDURE -> . call id para LEXP parc
    (24) RETURN -> . return LEXP
    (25) RETURN -> . return id para LEXP parc
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    id              shift and go to state 340
    if              shift and go to state 30
    raise           shift and go to state 341
    begin           shift and go to state 342
    call            shift and go to state 343
    return          shift and go to state 344
    case            shift and go to state 32

    LISTACONTENIDO                 shift and go to state 458
    CONTENIDO                      shift and go to state 331
    ASIGNACION                     shift and go to state 332
    DECLARACIONES                  shift and go to state 333
    CONDICIONIF                    shift and go to state 334
    RAISE                          shift and go to state 335
    BEGINEND                       shift and go to state 336
    CALLPROCEDURE                  shift and go to state 337
    RETURN                         shift and go to state 338
    CASE                           shift and go to state 339

state 343

    (29) CALLPROCEDURE -> call . id para LEXP parc

    id              shift and go to state 459


state 344

    (24) RETURN -> return . LEXP
    (25) RETURN -> return . id para LEXP parc
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    id              shift and go to state 461
    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 460
    EXP                            shift and go to state 79
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 345

    (107) INSERT -> insert into id values . para LEXP parc

    para            shift and go to state 462


state 346

    (108) INSERT -> insert into id para . LEXP parc values para LEXP parc
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 463
    EXP                            shift and go to state 79
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 347

    (76) CASE -> case LEXP LISTAWHEN ELSEF . end case

    end             shift and go to state 464


state 348

    (77) CASE -> case LEXP LISTAWHEN end . case

    case            shift and go to state 465


state 349

    (75) ELSEF -> else . LISTACONTENIDO
    (80) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (81) LISTACONTENIDO -> . CONTENIDO
    (82) CONTENIDO -> . ASIGNACION ptcoma
    (83) CONTENIDO -> . DECLARACIONES ptcoma
    (84) CONTENIDO -> . CONDICIONIF ptcoma
    (85) CONTENIDO -> . RAISE ptcoma
    (86) CONTENIDO -> . BEGINEND ptcoma
    (87) CONTENIDO -> . CALLPROCEDURE ptcoma
    (88) CONTENIDO -> . RETURN ptcoma
    (89) CONTENIDO -> . CASE ptcoma
    (67) ASIGNACION -> . id dospuntos igual EXP
    (68) ASIGNACION -> . id igual EXP
    (59) DECLARACIONES -> . id TIPO not null ASIG
    (60) DECLARACIONES -> . id TIPO ASIG
    (61) DECLARACIONES -> . id constant TIPO not null ASIG
    (62) DECLARACIONES -> . id constant TIPO ASIG
    (69) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (70) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (71) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (72) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (90) RAISE -> . raise LEVEL FORMAT
    (91) RAISE -> . raise LEVEL EXP
    (92) RAISE -> . raise LEVEL
    (93) RAISE -> . raise
    (94) RAISE -> . raise LEVEL cadena coma id
    (44) BEGINEND -> . begin LISTACONTENIDO end
    (29) CALLPROCEDURE -> . call id para LEXP parc
    (24) RETURN -> . return LEXP
    (25) RETURN -> . return id para LEXP parc
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    id              shift and go to state 340
    if              shift and go to state 30
    raise           shift and go to state 341
    begin           shift and go to state 342
    call            shift and go to state 343
    return          shift and go to state 344
    case            shift and go to state 32

    LISTACONTENIDO                 shift and go to state 466
    CONTENIDO                      shift and go to state 331
    ASIGNACION                     shift and go to state 332
    DECLARACIONES                  shift and go to state 333
    CONDICIONIF                    shift and go to state 334
    RAISE                          shift and go to state 335
    BEGINEND                       shift and go to state 336
    CALLPROCEDURE                  shift and go to state 337
    RETURN                         shift and go to state 338
    CASE                           shift and go to state 339

state 350

    (78) CASE -> case LISTAWHEN ELSE end .

    use             reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    select          reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    create          reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    update          reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    delete          reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    alter           reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    drop            reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    insert          reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    case            reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    show            reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    id              reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    if              reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    $end            reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    r_from          reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    coma            reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    where           reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    group           reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    having          reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    union           reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    intersect       reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    except          reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    order           reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    limit           reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    offset          reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    ptcoma          reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    mas             reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    menos           reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    multiplicacion  reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    division        reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    modulo          reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    elevado         reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    and             reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    or              reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    mayor           reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    menor           reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    mayor_igual     reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    menor_igual     reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    igual           reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    diferente1      reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    diferente2      reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    between         reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    is              reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    isnull          reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    notnull         reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    as              reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    cadenaString    reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    cadena          reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    in              reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    not             reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    like            reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    then            reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    when            reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    parc            reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    end             reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    else            reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    constraint      reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    unique          reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    check           reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    default         reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    null            reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    primary         reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    references      reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    asc             reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)
    desc            reduce using rule 78 (CASE -> case LISTAWHEN ELSE end .)


state 351

    (106) ELSE -> else LEXP .
    (218) LEXP -> LEXP . coma EXP

    end             reduce using rule 106 (ELSE -> else LEXP .)
    coma            shift and go to state 164


state 352

    (104) WHEN -> when LEXP then . LISTACONTENIDO
    (105) WHEN -> when LEXP then . LEXP
    (80) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (81) LISTACONTENIDO -> . CONTENIDO
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (82) CONTENIDO -> . ASIGNACION ptcoma
    (83) CONTENIDO -> . DECLARACIONES ptcoma
    (84) CONTENIDO -> . CONDICIONIF ptcoma
    (85) CONTENIDO -> . RAISE ptcoma
    (86) CONTENIDO -> . BEGINEND ptcoma
    (87) CONTENIDO -> . CALLPROCEDURE ptcoma
    (88) CONTENIDO -> . RETURN ptcoma
    (89) CONTENIDO -> . CASE ptcoma
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (67) ASIGNACION -> . id dospuntos igual EXP
    (68) ASIGNACION -> . id igual EXP
    (59) DECLARACIONES -> . id TIPO not null ASIG
    (60) DECLARACIONES -> . id TIPO ASIG
    (61) DECLARACIONES -> . id constant TIPO not null ASIG
    (62) DECLARACIONES -> . id constant TIPO ASIG
    (69) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (70) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (71) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (72) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (90) RAISE -> . raise LEVEL FORMAT
    (91) RAISE -> . raise LEVEL EXP
    (92) RAISE -> . raise LEVEL
    (93) RAISE -> . raise
    (94) RAISE -> . raise LEVEL cadena coma id
    (44) BEGINEND -> . begin LISTACONTENIDO end
    (29) CALLPROCEDURE -> . call id para LEXP parc
    (24) RETURN -> . return LEXP
    (25) RETURN -> . return id para LEXP parc
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 470
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    if              shift and go to state 30
    raise           shift and go to state 341
    begin           shift and go to state 342
    call            shift and go to state 343
    return          shift and go to state 344
    case            shift and go to state 32
    select          shift and go to state 24

    LEXP                           shift and go to state 467
    LISTACONTENIDO                 shift and go to state 468
    CONTENIDO                      shift and go to state 331
    EXP                            shift and go to state 79
    ASIGNACION                     shift and go to state 332
    DECLARACIONES                  shift and go to state 333
    CONDICIONIF                    shift and go to state 334
    RAISE                          shift and go to state 335
    BEGINEND                       shift and go to state 336
    CALLPROCEDURE                  shift and go to state 337
    RETURN                         shift and go to state 338
    CASE                           shift and go to state 469
    SELECT                         shift and go to state 91

state 353

    (133) SHOW -> show tables para id . parc

    parc            shift and go to state 471


state 354

    (134) SHOW -> show collection para parc .

    ptcoma          reduce using rule 134 (SHOW -> show collection para parc .)


state 355

    (59) DECLARACIONES -> id TIPO not null ASIG .

    ptcoma          reduce using rule 59 (DECLARACIONES -> id TIPO not null ASIG .)


state 356

    (64) ASIG -> dospuntos igual EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    ptcoma          reduce using rule 64 (ASIG -> dospuntos igual EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170
    and             shift and go to state 171
    or              shift and go to state 172
    mayor           shift and go to state 173
    menor           shift and go to state 174
    mayor_igual     shift and go to state 175
    menor_igual     shift and go to state 176
    igual           shift and go to state 177
    diferente1      shift and go to state 178
    diferente2      shift and go to state 179
    between         shift and go to state 180
    is              shift and go to state 181
    isnull          shift and go to state 183
    notnull         shift and go to state 184
    as              shift and go to state 185
    cadenaString    shift and go to state 186
    id              shift and go to state 187
    cadena          shift and go to state 188
    in              shift and go to state 189
    not             shift and go to state 182
    like            shift and go to state 190


state 357

    (61) DECLARACIONES -> id constant TIPO not null . ASIG
    (63) ASIG -> . default EXP
    (64) ASIG -> . dospuntos igual EXP
    (65) ASIG -> . igual EXP
    (66) ASIG -> .

    default         shift and go to state 134
    dospuntos       shift and go to state 135
    igual           shift and go to state 136
    ptcoma          reduce using rule 66 (ASIG -> .)

    ASIG                           shift and go to state 472

state 358

    (230) TIPO -> interval para int parc .
    (240) TIPO -> interval para int parc . cadena

  ! shift/reduce conflict for cadena resolved as shift
    not             reduce using rule 230 (TIPO -> interval para int parc .)
    default         reduce using rule 230 (TIPO -> interval para int parc .)
    dospuntos       reduce using rule 230 (TIPO -> interval para int parc .)
    igual           reduce using rule 230 (TIPO -> interval para int parc .)
    ptcoma          reduce using rule 230 (TIPO -> interval para int parc .)
    r_from          reduce using rule 230 (TIPO -> interval para int parc .)
    coma            reduce using rule 230 (TIPO -> interval para int parc .)
    where           reduce using rule 230 (TIPO -> interval para int parc .)
    group           reduce using rule 230 (TIPO -> interval para int parc .)
    having          reduce using rule 230 (TIPO -> interval para int parc .)
    union           reduce using rule 230 (TIPO -> interval para int parc .)
    intersect       reduce using rule 230 (TIPO -> interval para int parc .)
    except          reduce using rule 230 (TIPO -> interval para int parc .)
    order           reduce using rule 230 (TIPO -> interval para int parc .)
    limit           reduce using rule 230 (TIPO -> interval para int parc .)
    offset          reduce using rule 230 (TIPO -> interval para int parc .)
    mas             reduce using rule 230 (TIPO -> interval para int parc .)
    menos           reduce using rule 230 (TIPO -> interval para int parc .)
    multiplicacion  reduce using rule 230 (TIPO -> interval para int parc .)
    division        reduce using rule 230 (TIPO -> interval para int parc .)
    modulo          reduce using rule 230 (TIPO -> interval para int parc .)
    elevado         reduce using rule 230 (TIPO -> interval para int parc .)
    and             reduce using rule 230 (TIPO -> interval para int parc .)
    or              reduce using rule 230 (TIPO -> interval para int parc .)
    mayor           reduce using rule 230 (TIPO -> interval para int parc .)
    menor           reduce using rule 230 (TIPO -> interval para int parc .)
    mayor_igual     reduce using rule 230 (TIPO -> interval para int parc .)
    menor_igual     reduce using rule 230 (TIPO -> interval para int parc .)
    diferente1      reduce using rule 230 (TIPO -> interval para int parc .)
    diferente2      reduce using rule 230 (TIPO -> interval para int parc .)
    between         reduce using rule 230 (TIPO -> interval para int parc .)
    is              reduce using rule 230 (TIPO -> interval para int parc .)
    isnull          reduce using rule 230 (TIPO -> interval para int parc .)
    notnull         reduce using rule 230 (TIPO -> interval para int parc .)
    as              reduce using rule 230 (TIPO -> interval para int parc .)
    cadenaString    reduce using rule 230 (TIPO -> interval para int parc .)
    id              reduce using rule 230 (TIPO -> interval para int parc .)
    in              reduce using rule 230 (TIPO -> interval para int parc .)
    like            reduce using rule 230 (TIPO -> interval para int parc .)
    then            reduce using rule 230 (TIPO -> interval para int parc .)
    when            reduce using rule 230 (TIPO -> interval para int parc .)
    parc            reduce using rule 230 (TIPO -> interval para int parc .)
    end             reduce using rule 230 (TIPO -> interval para int parc .)
    else            reduce using rule 230 (TIPO -> interval para int parc .)
    constraint      reduce using rule 230 (TIPO -> interval para int parc .)
    unique          reduce using rule 230 (TIPO -> interval para int parc .)
    check           reduce using rule 230 (TIPO -> interval para int parc .)
    null            reduce using rule 230 (TIPO -> interval para int parc .)
    primary         reduce using rule 230 (TIPO -> interval para int parc .)
    references      reduce using rule 230 (TIPO -> interval para int parc .)
    asc             reduce using rule 230 (TIPO -> interval para int parc .)
    desc            reduce using rule 230 (TIPO -> interval para int parc .)
    cadena          shift and go to state 473

  ! cadena          [ reduce using rule 230 (TIPO -> interval para int parc .) ]


state 359

    (221) TIPO -> decimal para int coma . int parc

    int             shift and go to state 474


state 360

    (222) TIPO -> decimal para int parc .

    not             reduce using rule 222 (TIPO -> decimal para int parc .)
    default         reduce using rule 222 (TIPO -> decimal para int parc .)
    dospuntos       reduce using rule 222 (TIPO -> decimal para int parc .)
    igual           reduce using rule 222 (TIPO -> decimal para int parc .)
    ptcoma          reduce using rule 222 (TIPO -> decimal para int parc .)
    r_from          reduce using rule 222 (TIPO -> decimal para int parc .)
    coma            reduce using rule 222 (TIPO -> decimal para int parc .)
    where           reduce using rule 222 (TIPO -> decimal para int parc .)
    group           reduce using rule 222 (TIPO -> decimal para int parc .)
    having          reduce using rule 222 (TIPO -> decimal para int parc .)
    union           reduce using rule 222 (TIPO -> decimal para int parc .)
    intersect       reduce using rule 222 (TIPO -> decimal para int parc .)
    except          reduce using rule 222 (TIPO -> decimal para int parc .)
    order           reduce using rule 222 (TIPO -> decimal para int parc .)
    limit           reduce using rule 222 (TIPO -> decimal para int parc .)
    offset          reduce using rule 222 (TIPO -> decimal para int parc .)
    mas             reduce using rule 222 (TIPO -> decimal para int parc .)
    menos           reduce using rule 222 (TIPO -> decimal para int parc .)
    multiplicacion  reduce using rule 222 (TIPO -> decimal para int parc .)
    division        reduce using rule 222 (TIPO -> decimal para int parc .)
    modulo          reduce using rule 222 (TIPO -> decimal para int parc .)
    elevado         reduce using rule 222 (TIPO -> decimal para int parc .)
    and             reduce using rule 222 (TIPO -> decimal para int parc .)
    or              reduce using rule 222 (TIPO -> decimal para int parc .)
    mayor           reduce using rule 222 (TIPO -> decimal para int parc .)
    menor           reduce using rule 222 (TIPO -> decimal para int parc .)
    mayor_igual     reduce using rule 222 (TIPO -> decimal para int parc .)
    menor_igual     reduce using rule 222 (TIPO -> decimal para int parc .)
    diferente1      reduce using rule 222 (TIPO -> decimal para int parc .)
    diferente2      reduce using rule 222 (TIPO -> decimal para int parc .)
    between         reduce using rule 222 (TIPO -> decimal para int parc .)
    is              reduce using rule 222 (TIPO -> decimal para int parc .)
    isnull          reduce using rule 222 (TIPO -> decimal para int parc .)
    notnull         reduce using rule 222 (TIPO -> decimal para int parc .)
    as              reduce using rule 222 (TIPO -> decimal para int parc .)
    cadenaString    reduce using rule 222 (TIPO -> decimal para int parc .)
    id              reduce using rule 222 (TIPO -> decimal para int parc .)
    cadena          reduce using rule 222 (TIPO -> decimal para int parc .)
    in              reduce using rule 222 (TIPO -> decimal para int parc .)
    like            reduce using rule 222 (TIPO -> decimal para int parc .)
    then            reduce using rule 222 (TIPO -> decimal para int parc .)
    when            reduce using rule 222 (TIPO -> decimal para int parc .)
    parc            reduce using rule 222 (TIPO -> decimal para int parc .)
    end             reduce using rule 222 (TIPO -> decimal para int parc .)
    else            reduce using rule 222 (TIPO -> decimal para int parc .)
    constraint      reduce using rule 222 (TIPO -> decimal para int parc .)
    unique          reduce using rule 222 (TIPO -> decimal para int parc .)
    check           reduce using rule 222 (TIPO -> decimal para int parc .)
    null            reduce using rule 222 (TIPO -> decimal para int parc .)
    primary         reduce using rule 222 (TIPO -> decimal para int parc .)
    references      reduce using rule 222 (TIPO -> decimal para int parc .)
    asc             reduce using rule 222 (TIPO -> decimal para int parc .)
    desc            reduce using rule 222 (TIPO -> decimal para int parc .)


state 361

    (224) TIPO -> numeric para int coma . int parc

    int             shift and go to state 475


state 362

    (225) TIPO -> numeric para int parc .

    not             reduce using rule 225 (TIPO -> numeric para int parc .)
    default         reduce using rule 225 (TIPO -> numeric para int parc .)
    dospuntos       reduce using rule 225 (TIPO -> numeric para int parc .)
    igual           reduce using rule 225 (TIPO -> numeric para int parc .)
    ptcoma          reduce using rule 225 (TIPO -> numeric para int parc .)
    r_from          reduce using rule 225 (TIPO -> numeric para int parc .)
    coma            reduce using rule 225 (TIPO -> numeric para int parc .)
    where           reduce using rule 225 (TIPO -> numeric para int parc .)
    group           reduce using rule 225 (TIPO -> numeric para int parc .)
    having          reduce using rule 225 (TIPO -> numeric para int parc .)
    union           reduce using rule 225 (TIPO -> numeric para int parc .)
    intersect       reduce using rule 225 (TIPO -> numeric para int parc .)
    except          reduce using rule 225 (TIPO -> numeric para int parc .)
    order           reduce using rule 225 (TIPO -> numeric para int parc .)
    limit           reduce using rule 225 (TIPO -> numeric para int parc .)
    offset          reduce using rule 225 (TIPO -> numeric para int parc .)
    mas             reduce using rule 225 (TIPO -> numeric para int parc .)
    menos           reduce using rule 225 (TIPO -> numeric para int parc .)
    multiplicacion  reduce using rule 225 (TIPO -> numeric para int parc .)
    division        reduce using rule 225 (TIPO -> numeric para int parc .)
    modulo          reduce using rule 225 (TIPO -> numeric para int parc .)
    elevado         reduce using rule 225 (TIPO -> numeric para int parc .)
    and             reduce using rule 225 (TIPO -> numeric para int parc .)
    or              reduce using rule 225 (TIPO -> numeric para int parc .)
    mayor           reduce using rule 225 (TIPO -> numeric para int parc .)
    menor           reduce using rule 225 (TIPO -> numeric para int parc .)
    mayor_igual     reduce using rule 225 (TIPO -> numeric para int parc .)
    menor_igual     reduce using rule 225 (TIPO -> numeric para int parc .)
    diferente1      reduce using rule 225 (TIPO -> numeric para int parc .)
    diferente2      reduce using rule 225 (TIPO -> numeric para int parc .)
    between         reduce using rule 225 (TIPO -> numeric para int parc .)
    is              reduce using rule 225 (TIPO -> numeric para int parc .)
    isnull          reduce using rule 225 (TIPO -> numeric para int parc .)
    notnull         reduce using rule 225 (TIPO -> numeric para int parc .)
    as              reduce using rule 225 (TIPO -> numeric para int parc .)
    cadenaString    reduce using rule 225 (TIPO -> numeric para int parc .)
    id              reduce using rule 225 (TIPO -> numeric para int parc .)
    cadena          reduce using rule 225 (TIPO -> numeric para int parc .)
    in              reduce using rule 225 (TIPO -> numeric para int parc .)
    like            reduce using rule 225 (TIPO -> numeric para int parc .)
    then            reduce using rule 225 (TIPO -> numeric para int parc .)
    when            reduce using rule 225 (TIPO -> numeric para int parc .)
    parc            reduce using rule 225 (TIPO -> numeric para int parc .)
    end             reduce using rule 225 (TIPO -> numeric para int parc .)
    else            reduce using rule 225 (TIPO -> numeric para int parc .)
    constraint      reduce using rule 225 (TIPO -> numeric para int parc .)
    unique          reduce using rule 225 (TIPO -> numeric para int parc .)
    check           reduce using rule 225 (TIPO -> numeric para int parc .)
    null            reduce using rule 225 (TIPO -> numeric para int parc .)
    primary         reduce using rule 225 (TIPO -> numeric para int parc .)
    references      reduce using rule 225 (TIPO -> numeric para int parc .)
    asc             reduce using rule 225 (TIPO -> numeric para int parc .)
    desc            reduce using rule 225 (TIPO -> numeric para int parc .)


state 363

    (227) TIPO -> varchar para int parc .

    not             reduce using rule 227 (TIPO -> varchar para int parc .)
    default         reduce using rule 227 (TIPO -> varchar para int parc .)
    dospuntos       reduce using rule 227 (TIPO -> varchar para int parc .)
    igual           reduce using rule 227 (TIPO -> varchar para int parc .)
    ptcoma          reduce using rule 227 (TIPO -> varchar para int parc .)
    r_from          reduce using rule 227 (TIPO -> varchar para int parc .)
    coma            reduce using rule 227 (TIPO -> varchar para int parc .)
    where           reduce using rule 227 (TIPO -> varchar para int parc .)
    group           reduce using rule 227 (TIPO -> varchar para int parc .)
    having          reduce using rule 227 (TIPO -> varchar para int parc .)
    union           reduce using rule 227 (TIPO -> varchar para int parc .)
    intersect       reduce using rule 227 (TIPO -> varchar para int parc .)
    except          reduce using rule 227 (TIPO -> varchar para int parc .)
    order           reduce using rule 227 (TIPO -> varchar para int parc .)
    limit           reduce using rule 227 (TIPO -> varchar para int parc .)
    offset          reduce using rule 227 (TIPO -> varchar para int parc .)
    mas             reduce using rule 227 (TIPO -> varchar para int parc .)
    menos           reduce using rule 227 (TIPO -> varchar para int parc .)
    multiplicacion  reduce using rule 227 (TIPO -> varchar para int parc .)
    division        reduce using rule 227 (TIPO -> varchar para int parc .)
    modulo          reduce using rule 227 (TIPO -> varchar para int parc .)
    elevado         reduce using rule 227 (TIPO -> varchar para int parc .)
    and             reduce using rule 227 (TIPO -> varchar para int parc .)
    or              reduce using rule 227 (TIPO -> varchar para int parc .)
    mayor           reduce using rule 227 (TIPO -> varchar para int parc .)
    menor           reduce using rule 227 (TIPO -> varchar para int parc .)
    mayor_igual     reduce using rule 227 (TIPO -> varchar para int parc .)
    menor_igual     reduce using rule 227 (TIPO -> varchar para int parc .)
    diferente1      reduce using rule 227 (TIPO -> varchar para int parc .)
    diferente2      reduce using rule 227 (TIPO -> varchar para int parc .)
    between         reduce using rule 227 (TIPO -> varchar para int parc .)
    is              reduce using rule 227 (TIPO -> varchar para int parc .)
    isnull          reduce using rule 227 (TIPO -> varchar para int parc .)
    notnull         reduce using rule 227 (TIPO -> varchar para int parc .)
    as              reduce using rule 227 (TIPO -> varchar para int parc .)
    cadenaString    reduce using rule 227 (TIPO -> varchar para int parc .)
    id              reduce using rule 227 (TIPO -> varchar para int parc .)
    cadena          reduce using rule 227 (TIPO -> varchar para int parc .)
    in              reduce using rule 227 (TIPO -> varchar para int parc .)
    like            reduce using rule 227 (TIPO -> varchar para int parc .)
    then            reduce using rule 227 (TIPO -> varchar para int parc .)
    when            reduce using rule 227 (TIPO -> varchar para int parc .)
    parc            reduce using rule 227 (TIPO -> varchar para int parc .)
    end             reduce using rule 227 (TIPO -> varchar para int parc .)
    else            reduce using rule 227 (TIPO -> varchar para int parc .)
    constraint      reduce using rule 227 (TIPO -> varchar para int parc .)
    unique          reduce using rule 227 (TIPO -> varchar para int parc .)
    check           reduce using rule 227 (TIPO -> varchar para int parc .)
    null            reduce using rule 227 (TIPO -> varchar para int parc .)
    primary         reduce using rule 227 (TIPO -> varchar para int parc .)
    references      reduce using rule 227 (TIPO -> varchar para int parc .)
    asc             reduce using rule 227 (TIPO -> varchar para int parc .)
    desc            reduce using rule 227 (TIPO -> varchar para int parc .)


state 364

    (228) TIPO -> timestamp para int parc .
    (236) TIPO -> timestamp para int parc . without time zone
    (237) TIPO -> timestamp para int parc . with time zone

    not             reduce using rule 228 (TIPO -> timestamp para int parc .)
    default         reduce using rule 228 (TIPO -> timestamp para int parc .)
    dospuntos       reduce using rule 228 (TIPO -> timestamp para int parc .)
    igual           reduce using rule 228 (TIPO -> timestamp para int parc .)
    ptcoma          reduce using rule 228 (TIPO -> timestamp para int parc .)
    r_from          reduce using rule 228 (TIPO -> timestamp para int parc .)
    coma            reduce using rule 228 (TIPO -> timestamp para int parc .)
    where           reduce using rule 228 (TIPO -> timestamp para int parc .)
    group           reduce using rule 228 (TIPO -> timestamp para int parc .)
    having          reduce using rule 228 (TIPO -> timestamp para int parc .)
    union           reduce using rule 228 (TIPO -> timestamp para int parc .)
    intersect       reduce using rule 228 (TIPO -> timestamp para int parc .)
    except          reduce using rule 228 (TIPO -> timestamp para int parc .)
    order           reduce using rule 228 (TIPO -> timestamp para int parc .)
    limit           reduce using rule 228 (TIPO -> timestamp para int parc .)
    offset          reduce using rule 228 (TIPO -> timestamp para int parc .)
    mas             reduce using rule 228 (TIPO -> timestamp para int parc .)
    menos           reduce using rule 228 (TIPO -> timestamp para int parc .)
    multiplicacion  reduce using rule 228 (TIPO -> timestamp para int parc .)
    division        reduce using rule 228 (TIPO -> timestamp para int parc .)
    modulo          reduce using rule 228 (TIPO -> timestamp para int parc .)
    elevado         reduce using rule 228 (TIPO -> timestamp para int parc .)
    and             reduce using rule 228 (TIPO -> timestamp para int parc .)
    or              reduce using rule 228 (TIPO -> timestamp para int parc .)
    mayor           reduce using rule 228 (TIPO -> timestamp para int parc .)
    menor           reduce using rule 228 (TIPO -> timestamp para int parc .)
    mayor_igual     reduce using rule 228 (TIPO -> timestamp para int parc .)
    menor_igual     reduce using rule 228 (TIPO -> timestamp para int parc .)
    diferente1      reduce using rule 228 (TIPO -> timestamp para int parc .)
    diferente2      reduce using rule 228 (TIPO -> timestamp para int parc .)
    between         reduce using rule 228 (TIPO -> timestamp para int parc .)
    is              reduce using rule 228 (TIPO -> timestamp para int parc .)
    isnull          reduce using rule 228 (TIPO -> timestamp para int parc .)
    notnull         reduce using rule 228 (TIPO -> timestamp para int parc .)
    as              reduce using rule 228 (TIPO -> timestamp para int parc .)
    cadenaString    reduce using rule 228 (TIPO -> timestamp para int parc .)
    id              reduce using rule 228 (TIPO -> timestamp para int parc .)
    cadena          reduce using rule 228 (TIPO -> timestamp para int parc .)
    in              reduce using rule 228 (TIPO -> timestamp para int parc .)
    like            reduce using rule 228 (TIPO -> timestamp para int parc .)
    then            reduce using rule 228 (TIPO -> timestamp para int parc .)
    when            reduce using rule 228 (TIPO -> timestamp para int parc .)
    parc            reduce using rule 228 (TIPO -> timestamp para int parc .)
    end             reduce using rule 228 (TIPO -> timestamp para int parc .)
    else            reduce using rule 228 (TIPO -> timestamp para int parc .)
    constraint      reduce using rule 228 (TIPO -> timestamp para int parc .)
    unique          reduce using rule 228 (TIPO -> timestamp para int parc .)
    check           reduce using rule 228 (TIPO -> timestamp para int parc .)
    null            reduce using rule 228 (TIPO -> timestamp para int parc .)
    primary         reduce using rule 228 (TIPO -> timestamp para int parc .)
    references      reduce using rule 228 (TIPO -> timestamp para int parc .)
    asc             reduce using rule 228 (TIPO -> timestamp para int parc .)
    desc            reduce using rule 228 (TIPO -> timestamp para int parc .)
    without         shift and go to state 476
    with            shift and go to state 477


state 365

    (256) TIPO -> timestamp without time zone .

    not             reduce using rule 256 (TIPO -> timestamp without time zone .)
    default         reduce using rule 256 (TIPO -> timestamp without time zone .)
    dospuntos       reduce using rule 256 (TIPO -> timestamp without time zone .)
    igual           reduce using rule 256 (TIPO -> timestamp without time zone .)
    ptcoma          reduce using rule 256 (TIPO -> timestamp without time zone .)
    r_from          reduce using rule 256 (TIPO -> timestamp without time zone .)
    coma            reduce using rule 256 (TIPO -> timestamp without time zone .)
    where           reduce using rule 256 (TIPO -> timestamp without time zone .)
    group           reduce using rule 256 (TIPO -> timestamp without time zone .)
    having          reduce using rule 256 (TIPO -> timestamp without time zone .)
    union           reduce using rule 256 (TIPO -> timestamp without time zone .)
    intersect       reduce using rule 256 (TIPO -> timestamp without time zone .)
    except          reduce using rule 256 (TIPO -> timestamp without time zone .)
    order           reduce using rule 256 (TIPO -> timestamp without time zone .)
    limit           reduce using rule 256 (TIPO -> timestamp without time zone .)
    offset          reduce using rule 256 (TIPO -> timestamp without time zone .)
    mas             reduce using rule 256 (TIPO -> timestamp without time zone .)
    menos           reduce using rule 256 (TIPO -> timestamp without time zone .)
    multiplicacion  reduce using rule 256 (TIPO -> timestamp without time zone .)
    division        reduce using rule 256 (TIPO -> timestamp without time zone .)
    modulo          reduce using rule 256 (TIPO -> timestamp without time zone .)
    elevado         reduce using rule 256 (TIPO -> timestamp without time zone .)
    and             reduce using rule 256 (TIPO -> timestamp without time zone .)
    or              reduce using rule 256 (TIPO -> timestamp without time zone .)
    mayor           reduce using rule 256 (TIPO -> timestamp without time zone .)
    menor           reduce using rule 256 (TIPO -> timestamp without time zone .)
    mayor_igual     reduce using rule 256 (TIPO -> timestamp without time zone .)
    menor_igual     reduce using rule 256 (TIPO -> timestamp without time zone .)
    diferente1      reduce using rule 256 (TIPO -> timestamp without time zone .)
    diferente2      reduce using rule 256 (TIPO -> timestamp without time zone .)
    between         reduce using rule 256 (TIPO -> timestamp without time zone .)
    is              reduce using rule 256 (TIPO -> timestamp without time zone .)
    isnull          reduce using rule 256 (TIPO -> timestamp without time zone .)
    notnull         reduce using rule 256 (TIPO -> timestamp without time zone .)
    as              reduce using rule 256 (TIPO -> timestamp without time zone .)
    cadenaString    reduce using rule 256 (TIPO -> timestamp without time zone .)
    id              reduce using rule 256 (TIPO -> timestamp without time zone .)
    cadena          reduce using rule 256 (TIPO -> timestamp without time zone .)
    in              reduce using rule 256 (TIPO -> timestamp without time zone .)
    like            reduce using rule 256 (TIPO -> timestamp without time zone .)
    then            reduce using rule 256 (TIPO -> timestamp without time zone .)
    when            reduce using rule 256 (TIPO -> timestamp without time zone .)
    parc            reduce using rule 256 (TIPO -> timestamp without time zone .)
    end             reduce using rule 256 (TIPO -> timestamp without time zone .)
    else            reduce using rule 256 (TIPO -> timestamp without time zone .)
    constraint      reduce using rule 256 (TIPO -> timestamp without time zone .)
    unique          reduce using rule 256 (TIPO -> timestamp without time zone .)
    check           reduce using rule 256 (TIPO -> timestamp without time zone .)
    null            reduce using rule 256 (TIPO -> timestamp without time zone .)
    primary         reduce using rule 256 (TIPO -> timestamp without time zone .)
    references      reduce using rule 256 (TIPO -> timestamp without time zone .)
    asc             reduce using rule 256 (TIPO -> timestamp without time zone .)
    desc            reduce using rule 256 (TIPO -> timestamp without time zone .)


state 366

    (257) TIPO -> timestamp with time zone .

    not             reduce using rule 257 (TIPO -> timestamp with time zone .)
    default         reduce using rule 257 (TIPO -> timestamp with time zone .)
    dospuntos       reduce using rule 257 (TIPO -> timestamp with time zone .)
    igual           reduce using rule 257 (TIPO -> timestamp with time zone .)
    ptcoma          reduce using rule 257 (TIPO -> timestamp with time zone .)
    r_from          reduce using rule 257 (TIPO -> timestamp with time zone .)
    coma            reduce using rule 257 (TIPO -> timestamp with time zone .)
    where           reduce using rule 257 (TIPO -> timestamp with time zone .)
    group           reduce using rule 257 (TIPO -> timestamp with time zone .)
    having          reduce using rule 257 (TIPO -> timestamp with time zone .)
    union           reduce using rule 257 (TIPO -> timestamp with time zone .)
    intersect       reduce using rule 257 (TIPO -> timestamp with time zone .)
    except          reduce using rule 257 (TIPO -> timestamp with time zone .)
    order           reduce using rule 257 (TIPO -> timestamp with time zone .)
    limit           reduce using rule 257 (TIPO -> timestamp with time zone .)
    offset          reduce using rule 257 (TIPO -> timestamp with time zone .)
    mas             reduce using rule 257 (TIPO -> timestamp with time zone .)
    menos           reduce using rule 257 (TIPO -> timestamp with time zone .)
    multiplicacion  reduce using rule 257 (TIPO -> timestamp with time zone .)
    division        reduce using rule 257 (TIPO -> timestamp with time zone .)
    modulo          reduce using rule 257 (TIPO -> timestamp with time zone .)
    elevado         reduce using rule 257 (TIPO -> timestamp with time zone .)
    and             reduce using rule 257 (TIPO -> timestamp with time zone .)
    or              reduce using rule 257 (TIPO -> timestamp with time zone .)
    mayor           reduce using rule 257 (TIPO -> timestamp with time zone .)
    menor           reduce using rule 257 (TIPO -> timestamp with time zone .)
    mayor_igual     reduce using rule 257 (TIPO -> timestamp with time zone .)
    menor_igual     reduce using rule 257 (TIPO -> timestamp with time zone .)
    diferente1      reduce using rule 257 (TIPO -> timestamp with time zone .)
    diferente2      reduce using rule 257 (TIPO -> timestamp with time zone .)
    between         reduce using rule 257 (TIPO -> timestamp with time zone .)
    is              reduce using rule 257 (TIPO -> timestamp with time zone .)
    isnull          reduce using rule 257 (TIPO -> timestamp with time zone .)
    notnull         reduce using rule 257 (TIPO -> timestamp with time zone .)
    as              reduce using rule 257 (TIPO -> timestamp with time zone .)
    cadenaString    reduce using rule 257 (TIPO -> timestamp with time zone .)
    id              reduce using rule 257 (TIPO -> timestamp with time zone .)
    cadena          reduce using rule 257 (TIPO -> timestamp with time zone .)
    in              reduce using rule 257 (TIPO -> timestamp with time zone .)
    like            reduce using rule 257 (TIPO -> timestamp with time zone .)
    then            reduce using rule 257 (TIPO -> timestamp with time zone .)
    when            reduce using rule 257 (TIPO -> timestamp with time zone .)
    parc            reduce using rule 257 (TIPO -> timestamp with time zone .)
    end             reduce using rule 257 (TIPO -> timestamp with time zone .)
    else            reduce using rule 257 (TIPO -> timestamp with time zone .)
    constraint      reduce using rule 257 (TIPO -> timestamp with time zone .)
    unique          reduce using rule 257 (TIPO -> timestamp with time zone .)
    check           reduce using rule 257 (TIPO -> timestamp with time zone .)
    null            reduce using rule 257 (TIPO -> timestamp with time zone .)
    primary         reduce using rule 257 (TIPO -> timestamp with time zone .)
    references      reduce using rule 257 (TIPO -> timestamp with time zone .)
    asc             reduce using rule 257 (TIPO -> timestamp with time zone .)
    desc            reduce using rule 257 (TIPO -> timestamp with time zone .)


state 367

    (229) TIPO -> character para int parc .

    not             reduce using rule 229 (TIPO -> character para int parc .)
    default         reduce using rule 229 (TIPO -> character para int parc .)
    dospuntos       reduce using rule 229 (TIPO -> character para int parc .)
    igual           reduce using rule 229 (TIPO -> character para int parc .)
    ptcoma          reduce using rule 229 (TIPO -> character para int parc .)
    r_from          reduce using rule 229 (TIPO -> character para int parc .)
    coma            reduce using rule 229 (TIPO -> character para int parc .)
    where           reduce using rule 229 (TIPO -> character para int parc .)
    group           reduce using rule 229 (TIPO -> character para int parc .)
    having          reduce using rule 229 (TIPO -> character para int parc .)
    union           reduce using rule 229 (TIPO -> character para int parc .)
    intersect       reduce using rule 229 (TIPO -> character para int parc .)
    except          reduce using rule 229 (TIPO -> character para int parc .)
    order           reduce using rule 229 (TIPO -> character para int parc .)
    limit           reduce using rule 229 (TIPO -> character para int parc .)
    offset          reduce using rule 229 (TIPO -> character para int parc .)
    mas             reduce using rule 229 (TIPO -> character para int parc .)
    menos           reduce using rule 229 (TIPO -> character para int parc .)
    multiplicacion  reduce using rule 229 (TIPO -> character para int parc .)
    division        reduce using rule 229 (TIPO -> character para int parc .)
    modulo          reduce using rule 229 (TIPO -> character para int parc .)
    elevado         reduce using rule 229 (TIPO -> character para int parc .)
    and             reduce using rule 229 (TIPO -> character para int parc .)
    or              reduce using rule 229 (TIPO -> character para int parc .)
    mayor           reduce using rule 229 (TIPO -> character para int parc .)
    menor           reduce using rule 229 (TIPO -> character para int parc .)
    mayor_igual     reduce using rule 229 (TIPO -> character para int parc .)
    menor_igual     reduce using rule 229 (TIPO -> character para int parc .)
    diferente1      reduce using rule 229 (TIPO -> character para int parc .)
    diferente2      reduce using rule 229 (TIPO -> character para int parc .)
    between         reduce using rule 229 (TIPO -> character para int parc .)
    is              reduce using rule 229 (TIPO -> character para int parc .)
    isnull          reduce using rule 229 (TIPO -> character para int parc .)
    notnull         reduce using rule 229 (TIPO -> character para int parc .)
    as              reduce using rule 229 (TIPO -> character para int parc .)
    cadenaString    reduce using rule 229 (TIPO -> character para int parc .)
    id              reduce using rule 229 (TIPO -> character para int parc .)
    cadena          reduce using rule 229 (TIPO -> character para int parc .)
    in              reduce using rule 229 (TIPO -> character para int parc .)
    like            reduce using rule 229 (TIPO -> character para int parc .)
    then            reduce using rule 229 (TIPO -> character para int parc .)
    when            reduce using rule 229 (TIPO -> character para int parc .)
    parc            reduce using rule 229 (TIPO -> character para int parc .)
    end             reduce using rule 229 (TIPO -> character para int parc .)
    else            reduce using rule 229 (TIPO -> character para int parc .)
    constraint      reduce using rule 229 (TIPO -> character para int parc .)
    unique          reduce using rule 229 (TIPO -> character para int parc .)
    check           reduce using rule 229 (TIPO -> character para int parc .)
    null            reduce using rule 229 (TIPO -> character para int parc .)
    primary         reduce using rule 229 (TIPO -> character para int parc .)
    references      reduce using rule 229 (TIPO -> character para int parc .)
    asc             reduce using rule 229 (TIPO -> character para int parc .)
    desc            reduce using rule 229 (TIPO -> character para int parc .)


state 368

    (233) TIPO -> character varying para int . parc

    parc            shift and go to state 478


state 369

    (231) TIPO -> char para int parc .

    not             reduce using rule 231 (TIPO -> char para int parc .)
    default         reduce using rule 231 (TIPO -> char para int parc .)
    dospuntos       reduce using rule 231 (TIPO -> char para int parc .)
    igual           reduce using rule 231 (TIPO -> char para int parc .)
    ptcoma          reduce using rule 231 (TIPO -> char para int parc .)
    r_from          reduce using rule 231 (TIPO -> char para int parc .)
    coma            reduce using rule 231 (TIPO -> char para int parc .)
    where           reduce using rule 231 (TIPO -> char para int parc .)
    group           reduce using rule 231 (TIPO -> char para int parc .)
    having          reduce using rule 231 (TIPO -> char para int parc .)
    union           reduce using rule 231 (TIPO -> char para int parc .)
    intersect       reduce using rule 231 (TIPO -> char para int parc .)
    except          reduce using rule 231 (TIPO -> char para int parc .)
    order           reduce using rule 231 (TIPO -> char para int parc .)
    limit           reduce using rule 231 (TIPO -> char para int parc .)
    offset          reduce using rule 231 (TIPO -> char para int parc .)
    mas             reduce using rule 231 (TIPO -> char para int parc .)
    menos           reduce using rule 231 (TIPO -> char para int parc .)
    multiplicacion  reduce using rule 231 (TIPO -> char para int parc .)
    division        reduce using rule 231 (TIPO -> char para int parc .)
    modulo          reduce using rule 231 (TIPO -> char para int parc .)
    elevado         reduce using rule 231 (TIPO -> char para int parc .)
    and             reduce using rule 231 (TIPO -> char para int parc .)
    or              reduce using rule 231 (TIPO -> char para int parc .)
    mayor           reduce using rule 231 (TIPO -> char para int parc .)
    menor           reduce using rule 231 (TIPO -> char para int parc .)
    mayor_igual     reduce using rule 231 (TIPO -> char para int parc .)
    menor_igual     reduce using rule 231 (TIPO -> char para int parc .)
    diferente1      reduce using rule 231 (TIPO -> char para int parc .)
    diferente2      reduce using rule 231 (TIPO -> char para int parc .)
    between         reduce using rule 231 (TIPO -> char para int parc .)
    is              reduce using rule 231 (TIPO -> char para int parc .)
    isnull          reduce using rule 231 (TIPO -> char para int parc .)
    notnull         reduce using rule 231 (TIPO -> char para int parc .)
    as              reduce using rule 231 (TIPO -> char para int parc .)
    cadenaString    reduce using rule 231 (TIPO -> char para int parc .)
    id              reduce using rule 231 (TIPO -> char para int parc .)
    cadena          reduce using rule 231 (TIPO -> char para int parc .)
    in              reduce using rule 231 (TIPO -> char para int parc .)
    like            reduce using rule 231 (TIPO -> char para int parc .)
    then            reduce using rule 231 (TIPO -> char para int parc .)
    when            reduce using rule 231 (TIPO -> char para int parc .)
    parc            reduce using rule 231 (TIPO -> char para int parc .)
    end             reduce using rule 231 (TIPO -> char para int parc .)
    else            reduce using rule 231 (TIPO -> char para int parc .)
    constraint      reduce using rule 231 (TIPO -> char para int parc .)
    unique          reduce using rule 231 (TIPO -> char para int parc .)
    check           reduce using rule 231 (TIPO -> char para int parc .)
    null            reduce using rule 231 (TIPO -> char para int parc .)
    primary         reduce using rule 231 (TIPO -> char para int parc .)
    references      reduce using rule 231 (TIPO -> char para int parc .)
    asc             reduce using rule 231 (TIPO -> char para int parc .)
    desc            reduce using rule 231 (TIPO -> char para int parc .)


state 370

    (232) TIPO -> time para int parc .
    (238) TIPO -> time para int parc . without time zone
    (239) TIPO -> time para int parc . with time zone

    not             reduce using rule 232 (TIPO -> time para int parc .)
    default         reduce using rule 232 (TIPO -> time para int parc .)
    dospuntos       reduce using rule 232 (TIPO -> time para int parc .)
    igual           reduce using rule 232 (TIPO -> time para int parc .)
    ptcoma          reduce using rule 232 (TIPO -> time para int parc .)
    r_from          reduce using rule 232 (TIPO -> time para int parc .)
    coma            reduce using rule 232 (TIPO -> time para int parc .)
    where           reduce using rule 232 (TIPO -> time para int parc .)
    group           reduce using rule 232 (TIPO -> time para int parc .)
    having          reduce using rule 232 (TIPO -> time para int parc .)
    union           reduce using rule 232 (TIPO -> time para int parc .)
    intersect       reduce using rule 232 (TIPO -> time para int parc .)
    except          reduce using rule 232 (TIPO -> time para int parc .)
    order           reduce using rule 232 (TIPO -> time para int parc .)
    limit           reduce using rule 232 (TIPO -> time para int parc .)
    offset          reduce using rule 232 (TIPO -> time para int parc .)
    mas             reduce using rule 232 (TIPO -> time para int parc .)
    menos           reduce using rule 232 (TIPO -> time para int parc .)
    multiplicacion  reduce using rule 232 (TIPO -> time para int parc .)
    division        reduce using rule 232 (TIPO -> time para int parc .)
    modulo          reduce using rule 232 (TIPO -> time para int parc .)
    elevado         reduce using rule 232 (TIPO -> time para int parc .)
    and             reduce using rule 232 (TIPO -> time para int parc .)
    or              reduce using rule 232 (TIPO -> time para int parc .)
    mayor           reduce using rule 232 (TIPO -> time para int parc .)
    menor           reduce using rule 232 (TIPO -> time para int parc .)
    mayor_igual     reduce using rule 232 (TIPO -> time para int parc .)
    menor_igual     reduce using rule 232 (TIPO -> time para int parc .)
    diferente1      reduce using rule 232 (TIPO -> time para int parc .)
    diferente2      reduce using rule 232 (TIPO -> time para int parc .)
    between         reduce using rule 232 (TIPO -> time para int parc .)
    is              reduce using rule 232 (TIPO -> time para int parc .)
    isnull          reduce using rule 232 (TIPO -> time para int parc .)
    notnull         reduce using rule 232 (TIPO -> time para int parc .)
    as              reduce using rule 232 (TIPO -> time para int parc .)
    cadenaString    reduce using rule 232 (TIPO -> time para int parc .)
    id              reduce using rule 232 (TIPO -> time para int parc .)
    cadena          reduce using rule 232 (TIPO -> time para int parc .)
    in              reduce using rule 232 (TIPO -> time para int parc .)
    like            reduce using rule 232 (TIPO -> time para int parc .)
    then            reduce using rule 232 (TIPO -> time para int parc .)
    when            reduce using rule 232 (TIPO -> time para int parc .)
    parc            reduce using rule 232 (TIPO -> time para int parc .)
    end             reduce using rule 232 (TIPO -> time para int parc .)
    else            reduce using rule 232 (TIPO -> time para int parc .)
    constraint      reduce using rule 232 (TIPO -> time para int parc .)
    unique          reduce using rule 232 (TIPO -> time para int parc .)
    check           reduce using rule 232 (TIPO -> time para int parc .)
    null            reduce using rule 232 (TIPO -> time para int parc .)
    primary         reduce using rule 232 (TIPO -> time para int parc .)
    references      reduce using rule 232 (TIPO -> time para int parc .)
    asc             reduce using rule 232 (TIPO -> time para int parc .)
    desc            reduce using rule 232 (TIPO -> time para int parc .)
    without         shift and go to state 479
    with            shift and go to state 480


state 371

    (258) TIPO -> time without time zone .

    not             reduce using rule 258 (TIPO -> time without time zone .)
    default         reduce using rule 258 (TIPO -> time without time zone .)
    dospuntos       reduce using rule 258 (TIPO -> time without time zone .)
    igual           reduce using rule 258 (TIPO -> time without time zone .)
    ptcoma          reduce using rule 258 (TIPO -> time without time zone .)
    r_from          reduce using rule 258 (TIPO -> time without time zone .)
    coma            reduce using rule 258 (TIPO -> time without time zone .)
    where           reduce using rule 258 (TIPO -> time without time zone .)
    group           reduce using rule 258 (TIPO -> time without time zone .)
    having          reduce using rule 258 (TIPO -> time without time zone .)
    union           reduce using rule 258 (TIPO -> time without time zone .)
    intersect       reduce using rule 258 (TIPO -> time without time zone .)
    except          reduce using rule 258 (TIPO -> time without time zone .)
    order           reduce using rule 258 (TIPO -> time without time zone .)
    limit           reduce using rule 258 (TIPO -> time without time zone .)
    offset          reduce using rule 258 (TIPO -> time without time zone .)
    mas             reduce using rule 258 (TIPO -> time without time zone .)
    menos           reduce using rule 258 (TIPO -> time without time zone .)
    multiplicacion  reduce using rule 258 (TIPO -> time without time zone .)
    division        reduce using rule 258 (TIPO -> time without time zone .)
    modulo          reduce using rule 258 (TIPO -> time without time zone .)
    elevado         reduce using rule 258 (TIPO -> time without time zone .)
    and             reduce using rule 258 (TIPO -> time without time zone .)
    or              reduce using rule 258 (TIPO -> time without time zone .)
    mayor           reduce using rule 258 (TIPO -> time without time zone .)
    menor           reduce using rule 258 (TIPO -> time without time zone .)
    mayor_igual     reduce using rule 258 (TIPO -> time without time zone .)
    menor_igual     reduce using rule 258 (TIPO -> time without time zone .)
    diferente1      reduce using rule 258 (TIPO -> time without time zone .)
    diferente2      reduce using rule 258 (TIPO -> time without time zone .)
    between         reduce using rule 258 (TIPO -> time without time zone .)
    is              reduce using rule 258 (TIPO -> time without time zone .)
    isnull          reduce using rule 258 (TIPO -> time without time zone .)
    notnull         reduce using rule 258 (TIPO -> time without time zone .)
    as              reduce using rule 258 (TIPO -> time without time zone .)
    cadenaString    reduce using rule 258 (TIPO -> time without time zone .)
    id              reduce using rule 258 (TIPO -> time without time zone .)
    cadena          reduce using rule 258 (TIPO -> time without time zone .)
    in              reduce using rule 258 (TIPO -> time without time zone .)
    like            reduce using rule 258 (TIPO -> time without time zone .)
    then            reduce using rule 258 (TIPO -> time without time zone .)
    when            reduce using rule 258 (TIPO -> time without time zone .)
    parc            reduce using rule 258 (TIPO -> time without time zone .)
    end             reduce using rule 258 (TIPO -> time without time zone .)
    else            reduce using rule 258 (TIPO -> time without time zone .)
    constraint      reduce using rule 258 (TIPO -> time without time zone .)
    unique          reduce using rule 258 (TIPO -> time without time zone .)
    check           reduce using rule 258 (TIPO -> time without time zone .)
    null            reduce using rule 258 (TIPO -> time without time zone .)
    primary         reduce using rule 258 (TIPO -> time without time zone .)
    references      reduce using rule 258 (TIPO -> time without time zone .)
    asc             reduce using rule 258 (TIPO -> time without time zone .)
    desc            reduce using rule 258 (TIPO -> time without time zone .)


state 372

    (259) TIPO -> time with time zone .

    not             reduce using rule 259 (TIPO -> time with time zone .)
    default         reduce using rule 259 (TIPO -> time with time zone .)
    dospuntos       reduce using rule 259 (TIPO -> time with time zone .)
    igual           reduce using rule 259 (TIPO -> time with time zone .)
    ptcoma          reduce using rule 259 (TIPO -> time with time zone .)
    r_from          reduce using rule 259 (TIPO -> time with time zone .)
    coma            reduce using rule 259 (TIPO -> time with time zone .)
    where           reduce using rule 259 (TIPO -> time with time zone .)
    group           reduce using rule 259 (TIPO -> time with time zone .)
    having          reduce using rule 259 (TIPO -> time with time zone .)
    union           reduce using rule 259 (TIPO -> time with time zone .)
    intersect       reduce using rule 259 (TIPO -> time with time zone .)
    except          reduce using rule 259 (TIPO -> time with time zone .)
    order           reduce using rule 259 (TIPO -> time with time zone .)
    limit           reduce using rule 259 (TIPO -> time with time zone .)
    offset          reduce using rule 259 (TIPO -> time with time zone .)
    mas             reduce using rule 259 (TIPO -> time with time zone .)
    menos           reduce using rule 259 (TIPO -> time with time zone .)
    multiplicacion  reduce using rule 259 (TIPO -> time with time zone .)
    division        reduce using rule 259 (TIPO -> time with time zone .)
    modulo          reduce using rule 259 (TIPO -> time with time zone .)
    elevado         reduce using rule 259 (TIPO -> time with time zone .)
    and             reduce using rule 259 (TIPO -> time with time zone .)
    or              reduce using rule 259 (TIPO -> time with time zone .)
    mayor           reduce using rule 259 (TIPO -> time with time zone .)
    menor           reduce using rule 259 (TIPO -> time with time zone .)
    mayor_igual     reduce using rule 259 (TIPO -> time with time zone .)
    menor_igual     reduce using rule 259 (TIPO -> time with time zone .)
    diferente1      reduce using rule 259 (TIPO -> time with time zone .)
    diferente2      reduce using rule 259 (TIPO -> time with time zone .)
    between         reduce using rule 259 (TIPO -> time with time zone .)
    is              reduce using rule 259 (TIPO -> time with time zone .)
    isnull          reduce using rule 259 (TIPO -> time with time zone .)
    notnull         reduce using rule 259 (TIPO -> time with time zone .)
    as              reduce using rule 259 (TIPO -> time with time zone .)
    cadenaString    reduce using rule 259 (TIPO -> time with time zone .)
    id              reduce using rule 259 (TIPO -> time with time zone .)
    cadena          reduce using rule 259 (TIPO -> time with time zone .)
    in              reduce using rule 259 (TIPO -> time with time zone .)
    like            reduce using rule 259 (TIPO -> time with time zone .)
    then            reduce using rule 259 (TIPO -> time with time zone .)
    when            reduce using rule 259 (TIPO -> time with time zone .)
    parc            reduce using rule 259 (TIPO -> time with time zone .)
    end             reduce using rule 259 (TIPO -> time with time zone .)
    else            reduce using rule 259 (TIPO -> time with time zone .)
    constraint      reduce using rule 259 (TIPO -> time with time zone .)
    unique          reduce using rule 259 (TIPO -> time with time zone .)
    check           reduce using rule 259 (TIPO -> time with time zone .)
    null            reduce using rule 259 (TIPO -> time with time zone .)
    primary         reduce using rule 259 (TIPO -> time with time zone .)
    references      reduce using rule 259 (TIPO -> time with time zone .)
    asc             reduce using rule 259 (TIPO -> time with time zone .)
    desc            reduce using rule 259 (TIPO -> time with time zone .)


state 373

    (217) EXIST -> not exist para . SELECT parc
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT

    select          shift and go to state 24

    SELECT                         shift and go to state 481

state 374

    (216) EXIST -> exist para SELECT . parc

    parc            shift and go to state 482


state 375

    (184) SELECT -> select distinct LEXP r_from LEXP . WHERE GROUP HAVING COMBINING ORDER LIMIT
    (218) LEXP -> LEXP . coma EXP
    (195) WHERE -> . where EXP
    (196) WHERE -> . where EXIST
    (197) WHERE -> .

  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for where resolved as shift
    coma            shift and go to state 164
    where           shift and go to state 73
    r_from          reduce using rule 197 (WHERE -> .)
    group           reduce using rule 197 (WHERE -> .)
    having          reduce using rule 197 (WHERE -> .)
    union           reduce using rule 197 (WHERE -> .)
    intersect       reduce using rule 197 (WHERE -> .)
    except          reduce using rule 197 (WHERE -> .)
    order           reduce using rule 197 (WHERE -> .)
    limit           reduce using rule 197 (WHERE -> .)
    offset          reduce using rule 197 (WHERE -> .)
    ptcoma          reduce using rule 197 (WHERE -> .)
    mas             reduce using rule 197 (WHERE -> .)
    menos           reduce using rule 197 (WHERE -> .)
    multiplicacion  reduce using rule 197 (WHERE -> .)
    division        reduce using rule 197 (WHERE -> .)
    modulo          reduce using rule 197 (WHERE -> .)
    elevado         reduce using rule 197 (WHERE -> .)
    and             reduce using rule 197 (WHERE -> .)
    or              reduce using rule 197 (WHERE -> .)
    mayor           reduce using rule 197 (WHERE -> .)
    menor           reduce using rule 197 (WHERE -> .)
    mayor_igual     reduce using rule 197 (WHERE -> .)
    menor_igual     reduce using rule 197 (WHERE -> .)
    igual           reduce using rule 197 (WHERE -> .)
    diferente1      reduce using rule 197 (WHERE -> .)
    diferente2      reduce using rule 197 (WHERE -> .)
    between         reduce using rule 197 (WHERE -> .)
    is              reduce using rule 197 (WHERE -> .)
    isnull          reduce using rule 197 (WHERE -> .)
    notnull         reduce using rule 197 (WHERE -> .)
    as              reduce using rule 197 (WHERE -> .)
    cadenaString    reduce using rule 197 (WHERE -> .)
    id              reduce using rule 197 (WHERE -> .)
    cadena          reduce using rule 197 (WHERE -> .)
    in              reduce using rule 197 (WHERE -> .)
    not             reduce using rule 197 (WHERE -> .)
    like            reduce using rule 197 (WHERE -> .)
    then            reduce using rule 197 (WHERE -> .)
    when            reduce using rule 197 (WHERE -> .)
    parc            reduce using rule 197 (WHERE -> .)
    end             reduce using rule 197 (WHERE -> .)
    else            reduce using rule 197 (WHERE -> .)
    constraint      reduce using rule 197 (WHERE -> .)
    unique          reduce using rule 197 (WHERE -> .)
    check           reduce using rule 197 (WHERE -> .)
    default         reduce using rule 197 (WHERE -> .)
    null            reduce using rule 197 (WHERE -> .)
    primary         reduce using rule 197 (WHERE -> .)
    references      reduce using rule 197 (WHERE -> .)
    asc             reduce using rule 197 (WHERE -> .)
    desc            reduce using rule 197 (WHERE -> .)

  ! coma            [ reduce using rule 197 (WHERE -> .) ]
  ! where           [ reduce using rule 197 (WHERE -> .) ]

    WHERE                          shift and go to state 483

state 376

    (185) SELECT -> select LEXP r_from LEXP WHERE . GROUP HAVING COMBINING ORDER LIMIT
    (203) GROUP -> . group by LEXP
    (204) GROUP -> .

  ! shift/reduce conflict for group resolved as shift
    group           shift and go to state 257
    r_from          reduce using rule 204 (GROUP -> .)
    coma            reduce using rule 204 (GROUP -> .)
    where           reduce using rule 204 (GROUP -> .)
    having          reduce using rule 204 (GROUP -> .)
    union           reduce using rule 204 (GROUP -> .)
    intersect       reduce using rule 204 (GROUP -> .)
    except          reduce using rule 204 (GROUP -> .)
    order           reduce using rule 204 (GROUP -> .)
    limit           reduce using rule 204 (GROUP -> .)
    offset          reduce using rule 204 (GROUP -> .)
    ptcoma          reduce using rule 204 (GROUP -> .)
    mas             reduce using rule 204 (GROUP -> .)
    menos           reduce using rule 204 (GROUP -> .)
    multiplicacion  reduce using rule 204 (GROUP -> .)
    division        reduce using rule 204 (GROUP -> .)
    modulo          reduce using rule 204 (GROUP -> .)
    elevado         reduce using rule 204 (GROUP -> .)
    and             reduce using rule 204 (GROUP -> .)
    or              reduce using rule 204 (GROUP -> .)
    mayor           reduce using rule 204 (GROUP -> .)
    menor           reduce using rule 204 (GROUP -> .)
    mayor_igual     reduce using rule 204 (GROUP -> .)
    menor_igual     reduce using rule 204 (GROUP -> .)
    igual           reduce using rule 204 (GROUP -> .)
    diferente1      reduce using rule 204 (GROUP -> .)
    diferente2      reduce using rule 204 (GROUP -> .)
    between         reduce using rule 204 (GROUP -> .)
    is              reduce using rule 204 (GROUP -> .)
    isnull          reduce using rule 204 (GROUP -> .)
    notnull         reduce using rule 204 (GROUP -> .)
    as              reduce using rule 204 (GROUP -> .)
    cadenaString    reduce using rule 204 (GROUP -> .)
    id              reduce using rule 204 (GROUP -> .)
    cadena          reduce using rule 204 (GROUP -> .)
    in              reduce using rule 204 (GROUP -> .)
    not             reduce using rule 204 (GROUP -> .)
    like            reduce using rule 204 (GROUP -> .)
    then            reduce using rule 204 (GROUP -> .)
    when            reduce using rule 204 (GROUP -> .)
    parc            reduce using rule 204 (GROUP -> .)
    end             reduce using rule 204 (GROUP -> .)
    else            reduce using rule 204 (GROUP -> .)
    constraint      reduce using rule 204 (GROUP -> .)
    unique          reduce using rule 204 (GROUP -> .)
    check           reduce using rule 204 (GROUP -> .)
    default         reduce using rule 204 (GROUP -> .)
    null            reduce using rule 204 (GROUP -> .)
    primary         reduce using rule 204 (GROUP -> .)
    references      reduce using rule 204 (GROUP -> .)
    asc             reduce using rule 204 (GROUP -> .)
    desc            reduce using rule 204 (GROUP -> .)

  ! group           [ reduce using rule 204 (GROUP -> .) ]

    GROUP                          shift and go to state 484

state 377

    (186) SELECT -> select LEXP WHERE GROUP HAVING . COMBINING ORDER LIMIT
    (198) COMBINING -> . union EXP
    (199) COMBINING -> . union all EXP
    (200) COMBINING -> . intersect EXP
    (201) COMBINING -> . except EXP
    (202) COMBINING -> .

  ! shift/reduce conflict for union resolved as shift
  ! shift/reduce conflict for intersect resolved as shift
  ! shift/reduce conflict for except resolved as shift
    union           shift and go to state 486
    intersect       shift and go to state 487
    except          shift and go to state 488
    r_from          reduce using rule 202 (COMBINING -> .)
    coma            reduce using rule 202 (COMBINING -> .)
    where           reduce using rule 202 (COMBINING -> .)
    group           reduce using rule 202 (COMBINING -> .)
    having          reduce using rule 202 (COMBINING -> .)
    order           reduce using rule 202 (COMBINING -> .)
    limit           reduce using rule 202 (COMBINING -> .)
    offset          reduce using rule 202 (COMBINING -> .)
    ptcoma          reduce using rule 202 (COMBINING -> .)
    mas             reduce using rule 202 (COMBINING -> .)
    menos           reduce using rule 202 (COMBINING -> .)
    multiplicacion  reduce using rule 202 (COMBINING -> .)
    division        reduce using rule 202 (COMBINING -> .)
    modulo          reduce using rule 202 (COMBINING -> .)
    elevado         reduce using rule 202 (COMBINING -> .)
    and             reduce using rule 202 (COMBINING -> .)
    or              reduce using rule 202 (COMBINING -> .)
    mayor           reduce using rule 202 (COMBINING -> .)
    menor           reduce using rule 202 (COMBINING -> .)
    mayor_igual     reduce using rule 202 (COMBINING -> .)
    menor_igual     reduce using rule 202 (COMBINING -> .)
    igual           reduce using rule 202 (COMBINING -> .)
    diferente1      reduce using rule 202 (COMBINING -> .)
    diferente2      reduce using rule 202 (COMBINING -> .)
    between         reduce using rule 202 (COMBINING -> .)
    is              reduce using rule 202 (COMBINING -> .)
    isnull          reduce using rule 202 (COMBINING -> .)
    notnull         reduce using rule 202 (COMBINING -> .)
    as              reduce using rule 202 (COMBINING -> .)
    cadenaString    reduce using rule 202 (COMBINING -> .)
    id              reduce using rule 202 (COMBINING -> .)
    cadena          reduce using rule 202 (COMBINING -> .)
    in              reduce using rule 202 (COMBINING -> .)
    not             reduce using rule 202 (COMBINING -> .)
    like            reduce using rule 202 (COMBINING -> .)
    then            reduce using rule 202 (COMBINING -> .)
    when            reduce using rule 202 (COMBINING -> .)
    parc            reduce using rule 202 (COMBINING -> .)
    end             reduce using rule 202 (COMBINING -> .)
    else            reduce using rule 202 (COMBINING -> .)
    constraint      reduce using rule 202 (COMBINING -> .)
    unique          reduce using rule 202 (COMBINING -> .)
    check           reduce using rule 202 (COMBINING -> .)
    default         reduce using rule 202 (COMBINING -> .)
    null            reduce using rule 202 (COMBINING -> .)
    primary         reduce using rule 202 (COMBINING -> .)
    references      reduce using rule 202 (COMBINING -> .)
    asc             reduce using rule 202 (COMBINING -> .)
    desc            reduce using rule 202 (COMBINING -> .)

  ! union           [ reduce using rule 202 (COMBINING -> .) ]
  ! intersect       [ reduce using rule 202 (COMBINING -> .) ]
  ! except          [ reduce using rule 202 (COMBINING -> .) ]

    COMBINING                      shift and go to state 485

state 378

    (205) HAVING -> having . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 489
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 379

    (203) GROUP -> group by . LEXP
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 490
    EXP                            shift and go to state 79
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 380

    (305) EXP -> EXP between symetric EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    r_from          reduce using rule 305 (EXP -> EXP between symetric EXP .)
    coma            reduce using rule 305 (EXP -> EXP between symetric EXP .)
    where           reduce using rule 305 (EXP -> EXP between symetric EXP .)
    group           reduce using rule 305 (EXP -> EXP between symetric EXP .)
    having          reduce using rule 305 (EXP -> EXP between symetric EXP .)
    union           reduce using rule 305 (EXP -> EXP between symetric EXP .)
    intersect       reduce using rule 305 (EXP -> EXP between symetric EXP .)
    except          reduce using rule 305 (EXP -> EXP between symetric EXP .)
    order           reduce using rule 305 (EXP -> EXP between symetric EXP .)
    limit           reduce using rule 305 (EXP -> EXP between symetric EXP .)
    offset          reduce using rule 305 (EXP -> EXP between symetric EXP .)
    ptcoma          reduce using rule 305 (EXP -> EXP between symetric EXP .)
    and             reduce using rule 305 (EXP -> EXP between symetric EXP .)
    or              reduce using rule 305 (EXP -> EXP between symetric EXP .)
    between         reduce using rule 305 (EXP -> EXP between symetric EXP .)
    is              reduce using rule 305 (EXP -> EXP between symetric EXP .)
    isnull          reduce using rule 305 (EXP -> EXP between symetric EXP .)
    notnull         reduce using rule 305 (EXP -> EXP between symetric EXP .)
    as              reduce using rule 305 (EXP -> EXP between symetric EXP .)
    cadenaString    reduce using rule 305 (EXP -> EXP between symetric EXP .)
    id              reduce using rule 305 (EXP -> EXP between symetric EXP .)
    cadena          reduce using rule 305 (EXP -> EXP between symetric EXP .)
    in              reduce using rule 305 (EXP -> EXP between symetric EXP .)
    not             reduce using rule 305 (EXP -> EXP between symetric EXP .)
    like            reduce using rule 305 (EXP -> EXP between symetric EXP .)
    then            reduce using rule 305 (EXP -> EXP between symetric EXP .)
    when            reduce using rule 305 (EXP -> EXP between symetric EXP .)
    parc            reduce using rule 305 (EXP -> EXP between symetric EXP .)
    end             reduce using rule 305 (EXP -> EXP between symetric EXP .)
    else            reduce using rule 305 (EXP -> EXP between symetric EXP .)
    constraint      reduce using rule 305 (EXP -> EXP between symetric EXP .)
    unique          reduce using rule 305 (EXP -> EXP between symetric EXP .)
    check           reduce using rule 305 (EXP -> EXP between symetric EXP .)
    default         reduce using rule 305 (EXP -> EXP between symetric EXP .)
    null            reduce using rule 305 (EXP -> EXP between symetric EXP .)
    primary         reduce using rule 305 (EXP -> EXP between symetric EXP .)
    references      reduce using rule 305 (EXP -> EXP between symetric EXP .)
    asc             reduce using rule 305 (EXP -> EXP between symetric EXP .)
    desc            reduce using rule 305 (EXP -> EXP between symetric EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170
    mayor           shift and go to state 173
    menor           shift and go to state 174
    mayor_igual     shift and go to state 175
    menor_igual     shift and go to state 176
    igual           shift and go to state 177
    diferente1      shift and go to state 178
    diferente2      shift and go to state 179

  ! mas             [ reduce using rule 305 (EXP -> EXP between symetric EXP .) ]
  ! menos           [ reduce using rule 305 (EXP -> EXP between symetric EXP .) ]
  ! multiplicacion  [ reduce using rule 305 (EXP -> EXP between symetric EXP .) ]
  ! division        [ reduce using rule 305 (EXP -> EXP between symetric EXP .) ]
  ! modulo          [ reduce using rule 305 (EXP -> EXP between symetric EXP .) ]
  ! elevado         [ reduce using rule 305 (EXP -> EXP between symetric EXP .) ]
  ! mayor           [ reduce using rule 305 (EXP -> EXP between symetric EXP .) ]
  ! menor           [ reduce using rule 305 (EXP -> EXP between symetric EXP .) ]
  ! mayor_igual     [ reduce using rule 305 (EXP -> EXP between symetric EXP .) ]
  ! menor_igual     [ reduce using rule 305 (EXP -> EXP between symetric EXP .) ]
  ! igual           [ reduce using rule 305 (EXP -> EXP between symetric EXP .) ]
  ! diferente1      [ reduce using rule 305 (EXP -> EXP between symetric EXP .) ]
  ! diferente2      [ reduce using rule 305 (EXP -> EXP between symetric EXP .) ]
  ! and             [ shift and go to state 171 ]
  ! or              [ shift and go to state 172 ]
  ! between         [ shift and go to state 180 ]
  ! is              [ shift and go to state 181 ]
  ! isnull          [ shift and go to state 183 ]
  ! notnull         [ shift and go to state 184 ]
  ! as              [ shift and go to state 185 ]
  ! cadenaString    [ shift and go to state 186 ]
  ! id              [ shift and go to state 187 ]
  ! cadena          [ shift and go to state 188 ]
  ! in              [ shift and go to state 189 ]
  ! not             [ shift and go to state 182 ]
  ! like            [ shift and go to state 190 ]


state 381

    (283) EXP -> EXP is not null .

    r_from          reduce using rule 283 (EXP -> EXP is not null .)
    coma            reduce using rule 283 (EXP -> EXP is not null .)
    where           reduce using rule 283 (EXP -> EXP is not null .)
    group           reduce using rule 283 (EXP -> EXP is not null .)
    having          reduce using rule 283 (EXP -> EXP is not null .)
    union           reduce using rule 283 (EXP -> EXP is not null .)
    intersect       reduce using rule 283 (EXP -> EXP is not null .)
    except          reduce using rule 283 (EXP -> EXP is not null .)
    order           reduce using rule 283 (EXP -> EXP is not null .)
    limit           reduce using rule 283 (EXP -> EXP is not null .)
    offset          reduce using rule 283 (EXP -> EXP is not null .)
    ptcoma          reduce using rule 283 (EXP -> EXP is not null .)
    mas             reduce using rule 283 (EXP -> EXP is not null .)
    menos           reduce using rule 283 (EXP -> EXP is not null .)
    multiplicacion  reduce using rule 283 (EXP -> EXP is not null .)
    division        reduce using rule 283 (EXP -> EXP is not null .)
    modulo          reduce using rule 283 (EXP -> EXP is not null .)
    elevado         reduce using rule 283 (EXP -> EXP is not null .)
    and             reduce using rule 283 (EXP -> EXP is not null .)
    or              reduce using rule 283 (EXP -> EXP is not null .)
    mayor           reduce using rule 283 (EXP -> EXP is not null .)
    menor           reduce using rule 283 (EXP -> EXP is not null .)
    mayor_igual     reduce using rule 283 (EXP -> EXP is not null .)
    menor_igual     reduce using rule 283 (EXP -> EXP is not null .)
    igual           reduce using rule 283 (EXP -> EXP is not null .)
    diferente1      reduce using rule 283 (EXP -> EXP is not null .)
    diferente2      reduce using rule 283 (EXP -> EXP is not null .)
    between         reduce using rule 283 (EXP -> EXP is not null .)
    is              reduce using rule 283 (EXP -> EXP is not null .)
    isnull          reduce using rule 283 (EXP -> EXP is not null .)
    notnull         reduce using rule 283 (EXP -> EXP is not null .)
    as              reduce using rule 283 (EXP -> EXP is not null .)
    cadenaString    reduce using rule 283 (EXP -> EXP is not null .)
    id              reduce using rule 283 (EXP -> EXP is not null .)
    cadena          reduce using rule 283 (EXP -> EXP is not null .)
    in              reduce using rule 283 (EXP -> EXP is not null .)
    not             reduce using rule 283 (EXP -> EXP is not null .)
    like            reduce using rule 283 (EXP -> EXP is not null .)
    then            reduce using rule 283 (EXP -> EXP is not null .)
    when            reduce using rule 283 (EXP -> EXP is not null .)
    parc            reduce using rule 283 (EXP -> EXP is not null .)
    end             reduce using rule 283 (EXP -> EXP is not null .)
    else            reduce using rule 283 (EXP -> EXP is not null .)
    constraint      reduce using rule 283 (EXP -> EXP is not null .)
    unique          reduce using rule 283 (EXP -> EXP is not null .)
    check           reduce using rule 283 (EXP -> EXP is not null .)
    default         reduce using rule 283 (EXP -> EXP is not null .)
    null            reduce using rule 283 (EXP -> EXP is not null .)
    primary         reduce using rule 283 (EXP -> EXP is not null .)
    references      reduce using rule 283 (EXP -> EXP is not null .)
    asc             reduce using rule 283 (EXP -> EXP is not null .)
    desc            reduce using rule 283 (EXP -> EXP is not null .)


state 382

    (288) EXP -> EXP is not true .

    r_from          reduce using rule 288 (EXP -> EXP is not true .)
    coma            reduce using rule 288 (EXP -> EXP is not true .)
    where           reduce using rule 288 (EXP -> EXP is not true .)
    group           reduce using rule 288 (EXP -> EXP is not true .)
    having          reduce using rule 288 (EXP -> EXP is not true .)
    union           reduce using rule 288 (EXP -> EXP is not true .)
    intersect       reduce using rule 288 (EXP -> EXP is not true .)
    except          reduce using rule 288 (EXP -> EXP is not true .)
    order           reduce using rule 288 (EXP -> EXP is not true .)
    limit           reduce using rule 288 (EXP -> EXP is not true .)
    offset          reduce using rule 288 (EXP -> EXP is not true .)
    ptcoma          reduce using rule 288 (EXP -> EXP is not true .)
    mas             reduce using rule 288 (EXP -> EXP is not true .)
    menos           reduce using rule 288 (EXP -> EXP is not true .)
    multiplicacion  reduce using rule 288 (EXP -> EXP is not true .)
    division        reduce using rule 288 (EXP -> EXP is not true .)
    modulo          reduce using rule 288 (EXP -> EXP is not true .)
    elevado         reduce using rule 288 (EXP -> EXP is not true .)
    and             reduce using rule 288 (EXP -> EXP is not true .)
    or              reduce using rule 288 (EXP -> EXP is not true .)
    mayor           reduce using rule 288 (EXP -> EXP is not true .)
    menor           reduce using rule 288 (EXP -> EXP is not true .)
    mayor_igual     reduce using rule 288 (EXP -> EXP is not true .)
    menor_igual     reduce using rule 288 (EXP -> EXP is not true .)
    igual           reduce using rule 288 (EXP -> EXP is not true .)
    diferente1      reduce using rule 288 (EXP -> EXP is not true .)
    diferente2      reduce using rule 288 (EXP -> EXP is not true .)
    between         reduce using rule 288 (EXP -> EXP is not true .)
    is              reduce using rule 288 (EXP -> EXP is not true .)
    isnull          reduce using rule 288 (EXP -> EXP is not true .)
    notnull         reduce using rule 288 (EXP -> EXP is not true .)
    as              reduce using rule 288 (EXP -> EXP is not true .)
    cadenaString    reduce using rule 288 (EXP -> EXP is not true .)
    id              reduce using rule 288 (EXP -> EXP is not true .)
    cadena          reduce using rule 288 (EXP -> EXP is not true .)
    in              reduce using rule 288 (EXP -> EXP is not true .)
    not             reduce using rule 288 (EXP -> EXP is not true .)
    like            reduce using rule 288 (EXP -> EXP is not true .)
    then            reduce using rule 288 (EXP -> EXP is not true .)
    when            reduce using rule 288 (EXP -> EXP is not true .)
    parc            reduce using rule 288 (EXP -> EXP is not true .)
    end             reduce using rule 288 (EXP -> EXP is not true .)
    else            reduce using rule 288 (EXP -> EXP is not true .)
    constraint      reduce using rule 288 (EXP -> EXP is not true .)
    unique          reduce using rule 288 (EXP -> EXP is not true .)
    check           reduce using rule 288 (EXP -> EXP is not true .)
    default         reduce using rule 288 (EXP -> EXP is not true .)
    null            reduce using rule 288 (EXP -> EXP is not true .)
    primary         reduce using rule 288 (EXP -> EXP is not true .)
    references      reduce using rule 288 (EXP -> EXP is not true .)
    asc             reduce using rule 288 (EXP -> EXP is not true .)
    desc            reduce using rule 288 (EXP -> EXP is not true .)


state 383

    (290) EXP -> EXP is not false .

    r_from          reduce using rule 290 (EXP -> EXP is not false .)
    coma            reduce using rule 290 (EXP -> EXP is not false .)
    where           reduce using rule 290 (EXP -> EXP is not false .)
    group           reduce using rule 290 (EXP -> EXP is not false .)
    having          reduce using rule 290 (EXP -> EXP is not false .)
    union           reduce using rule 290 (EXP -> EXP is not false .)
    intersect       reduce using rule 290 (EXP -> EXP is not false .)
    except          reduce using rule 290 (EXP -> EXP is not false .)
    order           reduce using rule 290 (EXP -> EXP is not false .)
    limit           reduce using rule 290 (EXP -> EXP is not false .)
    offset          reduce using rule 290 (EXP -> EXP is not false .)
    ptcoma          reduce using rule 290 (EXP -> EXP is not false .)
    mas             reduce using rule 290 (EXP -> EXP is not false .)
    menos           reduce using rule 290 (EXP -> EXP is not false .)
    multiplicacion  reduce using rule 290 (EXP -> EXP is not false .)
    division        reduce using rule 290 (EXP -> EXP is not false .)
    modulo          reduce using rule 290 (EXP -> EXP is not false .)
    elevado         reduce using rule 290 (EXP -> EXP is not false .)
    and             reduce using rule 290 (EXP -> EXP is not false .)
    or              reduce using rule 290 (EXP -> EXP is not false .)
    mayor           reduce using rule 290 (EXP -> EXP is not false .)
    menor           reduce using rule 290 (EXP -> EXP is not false .)
    mayor_igual     reduce using rule 290 (EXP -> EXP is not false .)
    menor_igual     reduce using rule 290 (EXP -> EXP is not false .)
    igual           reduce using rule 290 (EXP -> EXP is not false .)
    diferente1      reduce using rule 290 (EXP -> EXP is not false .)
    diferente2      reduce using rule 290 (EXP -> EXP is not false .)
    between         reduce using rule 290 (EXP -> EXP is not false .)
    is              reduce using rule 290 (EXP -> EXP is not false .)
    isnull          reduce using rule 290 (EXP -> EXP is not false .)
    notnull         reduce using rule 290 (EXP -> EXP is not false .)
    as              reduce using rule 290 (EXP -> EXP is not false .)
    cadenaString    reduce using rule 290 (EXP -> EXP is not false .)
    id              reduce using rule 290 (EXP -> EXP is not false .)
    cadena          reduce using rule 290 (EXP -> EXP is not false .)
    in              reduce using rule 290 (EXP -> EXP is not false .)
    not             reduce using rule 290 (EXP -> EXP is not false .)
    like            reduce using rule 290 (EXP -> EXP is not false .)
    then            reduce using rule 290 (EXP -> EXP is not false .)
    when            reduce using rule 290 (EXP -> EXP is not false .)
    parc            reduce using rule 290 (EXP -> EXP is not false .)
    end             reduce using rule 290 (EXP -> EXP is not false .)
    else            reduce using rule 290 (EXP -> EXP is not false .)
    constraint      reduce using rule 290 (EXP -> EXP is not false .)
    unique          reduce using rule 290 (EXP -> EXP is not false .)
    check           reduce using rule 290 (EXP -> EXP is not false .)
    default         reduce using rule 290 (EXP -> EXP is not false .)
    null            reduce using rule 290 (EXP -> EXP is not false .)
    primary         reduce using rule 290 (EXP -> EXP is not false .)
    references      reduce using rule 290 (EXP -> EXP is not false .)
    asc             reduce using rule 290 (EXP -> EXP is not false .)
    desc            reduce using rule 290 (EXP -> EXP is not false .)


state 384

    (292) EXP -> EXP is not unknown .

    r_from          reduce using rule 292 (EXP -> EXP is not unknown .)
    coma            reduce using rule 292 (EXP -> EXP is not unknown .)
    where           reduce using rule 292 (EXP -> EXP is not unknown .)
    group           reduce using rule 292 (EXP -> EXP is not unknown .)
    having          reduce using rule 292 (EXP -> EXP is not unknown .)
    union           reduce using rule 292 (EXP -> EXP is not unknown .)
    intersect       reduce using rule 292 (EXP -> EXP is not unknown .)
    except          reduce using rule 292 (EXP -> EXP is not unknown .)
    order           reduce using rule 292 (EXP -> EXP is not unknown .)
    limit           reduce using rule 292 (EXP -> EXP is not unknown .)
    offset          reduce using rule 292 (EXP -> EXP is not unknown .)
    ptcoma          reduce using rule 292 (EXP -> EXP is not unknown .)
    mas             reduce using rule 292 (EXP -> EXP is not unknown .)
    menos           reduce using rule 292 (EXP -> EXP is not unknown .)
    multiplicacion  reduce using rule 292 (EXP -> EXP is not unknown .)
    division        reduce using rule 292 (EXP -> EXP is not unknown .)
    modulo          reduce using rule 292 (EXP -> EXP is not unknown .)
    elevado         reduce using rule 292 (EXP -> EXP is not unknown .)
    and             reduce using rule 292 (EXP -> EXP is not unknown .)
    or              reduce using rule 292 (EXP -> EXP is not unknown .)
    mayor           reduce using rule 292 (EXP -> EXP is not unknown .)
    menor           reduce using rule 292 (EXP -> EXP is not unknown .)
    mayor_igual     reduce using rule 292 (EXP -> EXP is not unknown .)
    menor_igual     reduce using rule 292 (EXP -> EXP is not unknown .)
    igual           reduce using rule 292 (EXP -> EXP is not unknown .)
    diferente1      reduce using rule 292 (EXP -> EXP is not unknown .)
    diferente2      reduce using rule 292 (EXP -> EXP is not unknown .)
    between         reduce using rule 292 (EXP -> EXP is not unknown .)
    is              reduce using rule 292 (EXP -> EXP is not unknown .)
    isnull          reduce using rule 292 (EXP -> EXP is not unknown .)
    notnull         reduce using rule 292 (EXP -> EXP is not unknown .)
    as              reduce using rule 292 (EXP -> EXP is not unknown .)
    cadenaString    reduce using rule 292 (EXP -> EXP is not unknown .)
    id              reduce using rule 292 (EXP -> EXP is not unknown .)
    cadena          reduce using rule 292 (EXP -> EXP is not unknown .)
    in              reduce using rule 292 (EXP -> EXP is not unknown .)
    not             reduce using rule 292 (EXP -> EXP is not unknown .)
    like            reduce using rule 292 (EXP -> EXP is not unknown .)
    then            reduce using rule 292 (EXP -> EXP is not unknown .)
    when            reduce using rule 292 (EXP -> EXP is not unknown .)
    parc            reduce using rule 292 (EXP -> EXP is not unknown .)
    end             reduce using rule 292 (EXP -> EXP is not unknown .)
    else            reduce using rule 292 (EXP -> EXP is not unknown .)
    constraint      reduce using rule 292 (EXP -> EXP is not unknown .)
    unique          reduce using rule 292 (EXP -> EXP is not unknown .)
    check           reduce using rule 292 (EXP -> EXP is not unknown .)
    default         reduce using rule 292 (EXP -> EXP is not unknown .)
    null            reduce using rule 292 (EXP -> EXP is not unknown .)
    primary         reduce using rule 292 (EXP -> EXP is not unknown .)
    references      reduce using rule 292 (EXP -> EXP is not unknown .)
    asc             reduce using rule 292 (EXP -> EXP is not unknown .)
    desc            reduce using rule 292 (EXP -> EXP is not unknown .)


state 385

    (308) EXP -> EXP is not distinct . r_from EXP

    r_from          shift and go to state 491


state 386

    (307) EXP -> EXP is distinct r_from . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 492
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 387

    (303) EXP -> EXP not in para . EXP parc
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 493
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 388

    (304) EXP -> EXP not between EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    r_from          reduce using rule 304 (EXP -> EXP not between EXP .)
    coma            reduce using rule 304 (EXP -> EXP not between EXP .)
    where           reduce using rule 304 (EXP -> EXP not between EXP .)
    group           reduce using rule 304 (EXP -> EXP not between EXP .)
    having          reduce using rule 304 (EXP -> EXP not between EXP .)
    union           reduce using rule 304 (EXP -> EXP not between EXP .)
    intersect       reduce using rule 304 (EXP -> EXP not between EXP .)
    except          reduce using rule 304 (EXP -> EXP not between EXP .)
    order           reduce using rule 304 (EXP -> EXP not between EXP .)
    limit           reduce using rule 304 (EXP -> EXP not between EXP .)
    offset          reduce using rule 304 (EXP -> EXP not between EXP .)
    ptcoma          reduce using rule 304 (EXP -> EXP not between EXP .)
    and             reduce using rule 304 (EXP -> EXP not between EXP .)
    or              reduce using rule 304 (EXP -> EXP not between EXP .)
    between         reduce using rule 304 (EXP -> EXP not between EXP .)
    is              reduce using rule 304 (EXP -> EXP not between EXP .)
    isnull          reduce using rule 304 (EXP -> EXP not between EXP .)
    notnull         reduce using rule 304 (EXP -> EXP not between EXP .)
    as              reduce using rule 304 (EXP -> EXP not between EXP .)
    cadenaString    reduce using rule 304 (EXP -> EXP not between EXP .)
    id              reduce using rule 304 (EXP -> EXP not between EXP .)
    cadena          reduce using rule 304 (EXP -> EXP not between EXP .)
    in              reduce using rule 304 (EXP -> EXP not between EXP .)
    not             reduce using rule 304 (EXP -> EXP not between EXP .)
    like            reduce using rule 304 (EXP -> EXP not between EXP .)
    then            reduce using rule 304 (EXP -> EXP not between EXP .)
    when            reduce using rule 304 (EXP -> EXP not between EXP .)
    parc            reduce using rule 304 (EXP -> EXP not between EXP .)
    end             reduce using rule 304 (EXP -> EXP not between EXP .)
    else            reduce using rule 304 (EXP -> EXP not between EXP .)
    constraint      reduce using rule 304 (EXP -> EXP not between EXP .)
    unique          reduce using rule 304 (EXP -> EXP not between EXP .)
    check           reduce using rule 304 (EXP -> EXP not between EXP .)
    default         reduce using rule 304 (EXP -> EXP not between EXP .)
    null            reduce using rule 304 (EXP -> EXP not between EXP .)
    primary         reduce using rule 304 (EXP -> EXP not between EXP .)
    references      reduce using rule 304 (EXP -> EXP not between EXP .)
    asc             reduce using rule 304 (EXP -> EXP not between EXP .)
    desc            reduce using rule 304 (EXP -> EXP not between EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170
    mayor           shift and go to state 173
    menor           shift and go to state 174
    mayor_igual     shift and go to state 175
    menor_igual     shift and go to state 176
    igual           shift and go to state 177
    diferente1      shift and go to state 178
    diferente2      shift and go to state 179

  ! mas             [ reduce using rule 304 (EXP -> EXP not between EXP .) ]
  ! menos           [ reduce using rule 304 (EXP -> EXP not between EXP .) ]
  ! multiplicacion  [ reduce using rule 304 (EXP -> EXP not between EXP .) ]
  ! division        [ reduce using rule 304 (EXP -> EXP not between EXP .) ]
  ! modulo          [ reduce using rule 304 (EXP -> EXP not between EXP .) ]
  ! elevado         [ reduce using rule 304 (EXP -> EXP not between EXP .) ]
  ! mayor           [ reduce using rule 304 (EXP -> EXP not between EXP .) ]
  ! menor           [ reduce using rule 304 (EXP -> EXP not between EXP .) ]
  ! mayor_igual     [ reduce using rule 304 (EXP -> EXP not between EXP .) ]
  ! menor_igual     [ reduce using rule 304 (EXP -> EXP not between EXP .) ]
  ! igual           [ reduce using rule 304 (EXP -> EXP not between EXP .) ]
  ! diferente1      [ reduce using rule 304 (EXP -> EXP not between EXP .) ]
  ! diferente2      [ reduce using rule 304 (EXP -> EXP not between EXP .) ]
  ! and             [ shift and go to state 171 ]
  ! or              [ shift and go to state 172 ]
  ! between         [ shift and go to state 180 ]
  ! is              [ shift and go to state 181 ]
  ! isnull          [ shift and go to state 183 ]
  ! notnull         [ shift and go to state 184 ]
  ! as              [ shift and go to state 185 ]
  ! cadenaString    [ shift and go to state 186 ]
  ! id              [ shift and go to state 187 ]
  ! cadena          [ shift and go to state 188 ]
  ! in              [ shift and go to state 189 ]
  ! not             [ shift and go to state 182 ]
  ! like            [ shift and go to state 190 ]


state 389

    (306) EXP -> EXP not between symetric . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 494
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 390

    (310) EXP -> EXP not like cadena .

    r_from          reduce using rule 310 (EXP -> EXP not like cadena .)
    coma            reduce using rule 310 (EXP -> EXP not like cadena .)
    where           reduce using rule 310 (EXP -> EXP not like cadena .)
    group           reduce using rule 310 (EXP -> EXP not like cadena .)
    having          reduce using rule 310 (EXP -> EXP not like cadena .)
    union           reduce using rule 310 (EXP -> EXP not like cadena .)
    intersect       reduce using rule 310 (EXP -> EXP not like cadena .)
    except          reduce using rule 310 (EXP -> EXP not like cadena .)
    order           reduce using rule 310 (EXP -> EXP not like cadena .)
    limit           reduce using rule 310 (EXP -> EXP not like cadena .)
    offset          reduce using rule 310 (EXP -> EXP not like cadena .)
    ptcoma          reduce using rule 310 (EXP -> EXP not like cadena .)
    mas             reduce using rule 310 (EXP -> EXP not like cadena .)
    menos           reduce using rule 310 (EXP -> EXP not like cadena .)
    multiplicacion  reduce using rule 310 (EXP -> EXP not like cadena .)
    division        reduce using rule 310 (EXP -> EXP not like cadena .)
    modulo          reduce using rule 310 (EXP -> EXP not like cadena .)
    elevado         reduce using rule 310 (EXP -> EXP not like cadena .)
    and             reduce using rule 310 (EXP -> EXP not like cadena .)
    or              reduce using rule 310 (EXP -> EXP not like cadena .)
    mayor           reduce using rule 310 (EXP -> EXP not like cadena .)
    menor           reduce using rule 310 (EXP -> EXP not like cadena .)
    mayor_igual     reduce using rule 310 (EXP -> EXP not like cadena .)
    menor_igual     reduce using rule 310 (EXP -> EXP not like cadena .)
    igual           reduce using rule 310 (EXP -> EXP not like cadena .)
    diferente1      reduce using rule 310 (EXP -> EXP not like cadena .)
    diferente2      reduce using rule 310 (EXP -> EXP not like cadena .)
    between         reduce using rule 310 (EXP -> EXP not like cadena .)
    is              reduce using rule 310 (EXP -> EXP not like cadena .)
    isnull          reduce using rule 310 (EXP -> EXP not like cadena .)
    notnull         reduce using rule 310 (EXP -> EXP not like cadena .)
    as              reduce using rule 310 (EXP -> EXP not like cadena .)
    cadenaString    reduce using rule 310 (EXP -> EXP not like cadena .)
    id              reduce using rule 310 (EXP -> EXP not like cadena .)
    cadena          reduce using rule 310 (EXP -> EXP not like cadena .)
    in              reduce using rule 310 (EXP -> EXP not like cadena .)
    not             reduce using rule 310 (EXP -> EXP not like cadena .)
    like            reduce using rule 310 (EXP -> EXP not like cadena .)
    then            reduce using rule 310 (EXP -> EXP not like cadena .)
    when            reduce using rule 310 (EXP -> EXP not like cadena .)
    parc            reduce using rule 310 (EXP -> EXP not like cadena .)
    end             reduce using rule 310 (EXP -> EXP not like cadena .)
    else            reduce using rule 310 (EXP -> EXP not like cadena .)
    constraint      reduce using rule 310 (EXP -> EXP not like cadena .)
    unique          reduce using rule 310 (EXP -> EXP not like cadena .)
    check           reduce using rule 310 (EXP -> EXP not like cadena .)
    default         reduce using rule 310 (EXP -> EXP not like cadena .)
    null            reduce using rule 310 (EXP -> EXP not like cadena .)
    primary         reduce using rule 310 (EXP -> EXP not like cadena .)
    references      reduce using rule 310 (EXP -> EXP not like cadena .)
    asc             reduce using rule 310 (EXP -> EXP not like cadena .)
    desc            reduce using rule 310 (EXP -> EXP not like cadena .)


state 391

    (302) EXP -> EXP in para EXP . parc
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    parc            shift and go to state 495
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170
    and             shift and go to state 171
    or              shift and go to state 172
    mayor           shift and go to state 173
    menor           shift and go to state 174
    mayor_igual     shift and go to state 175
    menor_igual     shift and go to state 176
    igual           shift and go to state 177
    diferente1      shift and go to state 178
    diferente2      shift and go to state 179
    between         shift and go to state 180
    is              shift and go to state 181
    isnull          shift and go to state 183
    notnull         shift and go to state 184
    as              shift and go to state 185
    cadenaString    shift and go to state 186
    id              shift and go to state 187
    cadena          shift and go to state 188
    in              shift and go to state 189
    not             shift and go to state 182
    like            shift and go to state 190


state 392

    (314) EXP -> id para LEXP parc .

    r_from          reduce using rule 314 (EXP -> id para LEXP parc .)
    coma            reduce using rule 314 (EXP -> id para LEXP parc .)
    where           reduce using rule 314 (EXP -> id para LEXP parc .)
    group           reduce using rule 314 (EXP -> id para LEXP parc .)
    having          reduce using rule 314 (EXP -> id para LEXP parc .)
    union           reduce using rule 314 (EXP -> id para LEXP parc .)
    intersect       reduce using rule 314 (EXP -> id para LEXP parc .)
    except          reduce using rule 314 (EXP -> id para LEXP parc .)
    order           reduce using rule 314 (EXP -> id para LEXP parc .)
    limit           reduce using rule 314 (EXP -> id para LEXP parc .)
    offset          reduce using rule 314 (EXP -> id para LEXP parc .)
    ptcoma          reduce using rule 314 (EXP -> id para LEXP parc .)
    mas             reduce using rule 314 (EXP -> id para LEXP parc .)
    menos           reduce using rule 314 (EXP -> id para LEXP parc .)
    multiplicacion  reduce using rule 314 (EXP -> id para LEXP parc .)
    division        reduce using rule 314 (EXP -> id para LEXP parc .)
    modulo          reduce using rule 314 (EXP -> id para LEXP parc .)
    elevado         reduce using rule 314 (EXP -> id para LEXP parc .)
    and             reduce using rule 314 (EXP -> id para LEXP parc .)
    or              reduce using rule 314 (EXP -> id para LEXP parc .)
    mayor           reduce using rule 314 (EXP -> id para LEXP parc .)
    menor           reduce using rule 314 (EXP -> id para LEXP parc .)
    mayor_igual     reduce using rule 314 (EXP -> id para LEXP parc .)
    menor_igual     reduce using rule 314 (EXP -> id para LEXP parc .)
    igual           reduce using rule 314 (EXP -> id para LEXP parc .)
    diferente1      reduce using rule 314 (EXP -> id para LEXP parc .)
    diferente2      reduce using rule 314 (EXP -> id para LEXP parc .)
    between         reduce using rule 314 (EXP -> id para LEXP parc .)
    is              reduce using rule 314 (EXP -> id para LEXP parc .)
    isnull          reduce using rule 314 (EXP -> id para LEXP parc .)
    notnull         reduce using rule 314 (EXP -> id para LEXP parc .)
    as              reduce using rule 314 (EXP -> id para LEXP parc .)
    cadenaString    reduce using rule 314 (EXP -> id para LEXP parc .)
    id              reduce using rule 314 (EXP -> id para LEXP parc .)
    cadena          reduce using rule 314 (EXP -> id para LEXP parc .)
    in              reduce using rule 314 (EXP -> id para LEXP parc .)
    not             reduce using rule 314 (EXP -> id para LEXP parc .)
    like            reduce using rule 314 (EXP -> id para LEXP parc .)
    then            reduce using rule 314 (EXP -> id para LEXP parc .)
    when            reduce using rule 314 (EXP -> id para LEXP parc .)
    parc            reduce using rule 314 (EXP -> id para LEXP parc .)
    end             reduce using rule 314 (EXP -> id para LEXP parc .)
    else            reduce using rule 314 (EXP -> id para LEXP parc .)
    constraint      reduce using rule 314 (EXP -> id para LEXP parc .)
    unique          reduce using rule 314 (EXP -> id para LEXP parc .)
    check           reduce using rule 314 (EXP -> id para LEXP parc .)
    default         reduce using rule 314 (EXP -> id para LEXP parc .)
    null            reduce using rule 314 (EXP -> id para LEXP parc .)
    primary         reduce using rule 314 (EXP -> id para LEXP parc .)
    references      reduce using rule 314 (EXP -> id para LEXP parc .)
    asc             reduce using rule 314 (EXP -> id para LEXP parc .)
    desc            reduce using rule 314 (EXP -> id para LEXP parc .)


state 393

    (316) EXP -> any para LEXP parc .

    r_from          reduce using rule 316 (EXP -> any para LEXP parc .)
    coma            reduce using rule 316 (EXP -> any para LEXP parc .)
    where           reduce using rule 316 (EXP -> any para LEXP parc .)
    group           reduce using rule 316 (EXP -> any para LEXP parc .)
    having          reduce using rule 316 (EXP -> any para LEXP parc .)
    union           reduce using rule 316 (EXP -> any para LEXP parc .)
    intersect       reduce using rule 316 (EXP -> any para LEXP parc .)
    except          reduce using rule 316 (EXP -> any para LEXP parc .)
    order           reduce using rule 316 (EXP -> any para LEXP parc .)
    limit           reduce using rule 316 (EXP -> any para LEXP parc .)
    offset          reduce using rule 316 (EXP -> any para LEXP parc .)
    ptcoma          reduce using rule 316 (EXP -> any para LEXP parc .)
    mas             reduce using rule 316 (EXP -> any para LEXP parc .)
    menos           reduce using rule 316 (EXP -> any para LEXP parc .)
    multiplicacion  reduce using rule 316 (EXP -> any para LEXP parc .)
    division        reduce using rule 316 (EXP -> any para LEXP parc .)
    modulo          reduce using rule 316 (EXP -> any para LEXP parc .)
    elevado         reduce using rule 316 (EXP -> any para LEXP parc .)
    and             reduce using rule 316 (EXP -> any para LEXP parc .)
    or              reduce using rule 316 (EXP -> any para LEXP parc .)
    mayor           reduce using rule 316 (EXP -> any para LEXP parc .)
    menor           reduce using rule 316 (EXP -> any para LEXP parc .)
    mayor_igual     reduce using rule 316 (EXP -> any para LEXP parc .)
    menor_igual     reduce using rule 316 (EXP -> any para LEXP parc .)
    igual           reduce using rule 316 (EXP -> any para LEXP parc .)
    diferente1      reduce using rule 316 (EXP -> any para LEXP parc .)
    diferente2      reduce using rule 316 (EXP -> any para LEXP parc .)
    between         reduce using rule 316 (EXP -> any para LEXP parc .)
    is              reduce using rule 316 (EXP -> any para LEXP parc .)
    isnull          reduce using rule 316 (EXP -> any para LEXP parc .)
    notnull         reduce using rule 316 (EXP -> any para LEXP parc .)
    as              reduce using rule 316 (EXP -> any para LEXP parc .)
    cadenaString    reduce using rule 316 (EXP -> any para LEXP parc .)
    id              reduce using rule 316 (EXP -> any para LEXP parc .)
    cadena          reduce using rule 316 (EXP -> any para LEXP parc .)
    in              reduce using rule 316 (EXP -> any para LEXP parc .)
    not             reduce using rule 316 (EXP -> any para LEXP parc .)
    like            reduce using rule 316 (EXP -> any para LEXP parc .)
    then            reduce using rule 316 (EXP -> any para LEXP parc .)
    when            reduce using rule 316 (EXP -> any para LEXP parc .)
    parc            reduce using rule 316 (EXP -> any para LEXP parc .)
    end             reduce using rule 316 (EXP -> any para LEXP parc .)
    else            reduce using rule 316 (EXP -> any para LEXP parc .)
    constraint      reduce using rule 316 (EXP -> any para LEXP parc .)
    unique          reduce using rule 316 (EXP -> any para LEXP parc .)
    check           reduce using rule 316 (EXP -> any para LEXP parc .)
    default         reduce using rule 316 (EXP -> any para LEXP parc .)
    null            reduce using rule 316 (EXP -> any para LEXP parc .)
    primary         reduce using rule 316 (EXP -> any para LEXP parc .)
    references      reduce using rule 316 (EXP -> any para LEXP parc .)
    asc             reduce using rule 316 (EXP -> any para LEXP parc .)
    desc            reduce using rule 316 (EXP -> any para LEXP parc .)


state 394

    (317) EXP -> all para LEXP parc .

    r_from          reduce using rule 317 (EXP -> all para LEXP parc .)
    coma            reduce using rule 317 (EXP -> all para LEXP parc .)
    where           reduce using rule 317 (EXP -> all para LEXP parc .)
    group           reduce using rule 317 (EXP -> all para LEXP parc .)
    having          reduce using rule 317 (EXP -> all para LEXP parc .)
    union           reduce using rule 317 (EXP -> all para LEXP parc .)
    intersect       reduce using rule 317 (EXP -> all para LEXP parc .)
    except          reduce using rule 317 (EXP -> all para LEXP parc .)
    order           reduce using rule 317 (EXP -> all para LEXP parc .)
    limit           reduce using rule 317 (EXP -> all para LEXP parc .)
    offset          reduce using rule 317 (EXP -> all para LEXP parc .)
    ptcoma          reduce using rule 317 (EXP -> all para LEXP parc .)
    mas             reduce using rule 317 (EXP -> all para LEXP parc .)
    menos           reduce using rule 317 (EXP -> all para LEXP parc .)
    multiplicacion  reduce using rule 317 (EXP -> all para LEXP parc .)
    division        reduce using rule 317 (EXP -> all para LEXP parc .)
    modulo          reduce using rule 317 (EXP -> all para LEXP parc .)
    elevado         reduce using rule 317 (EXP -> all para LEXP parc .)
    and             reduce using rule 317 (EXP -> all para LEXP parc .)
    or              reduce using rule 317 (EXP -> all para LEXP parc .)
    mayor           reduce using rule 317 (EXP -> all para LEXP parc .)
    menor           reduce using rule 317 (EXP -> all para LEXP parc .)
    mayor_igual     reduce using rule 317 (EXP -> all para LEXP parc .)
    menor_igual     reduce using rule 317 (EXP -> all para LEXP parc .)
    igual           reduce using rule 317 (EXP -> all para LEXP parc .)
    diferente1      reduce using rule 317 (EXP -> all para LEXP parc .)
    diferente2      reduce using rule 317 (EXP -> all para LEXP parc .)
    between         reduce using rule 317 (EXP -> all para LEXP parc .)
    is              reduce using rule 317 (EXP -> all para LEXP parc .)
    isnull          reduce using rule 317 (EXP -> all para LEXP parc .)
    notnull         reduce using rule 317 (EXP -> all para LEXP parc .)
    as              reduce using rule 317 (EXP -> all para LEXP parc .)
    cadenaString    reduce using rule 317 (EXP -> all para LEXP parc .)
    id              reduce using rule 317 (EXP -> all para LEXP parc .)
    cadena          reduce using rule 317 (EXP -> all para LEXP parc .)
    in              reduce using rule 317 (EXP -> all para LEXP parc .)
    not             reduce using rule 317 (EXP -> all para LEXP parc .)
    like            reduce using rule 317 (EXP -> all para LEXP parc .)
    then            reduce using rule 317 (EXP -> all para LEXP parc .)
    when            reduce using rule 317 (EXP -> all para LEXP parc .)
    parc            reduce using rule 317 (EXP -> all para LEXP parc .)
    end             reduce using rule 317 (EXP -> all para LEXP parc .)
    else            reduce using rule 317 (EXP -> all para LEXP parc .)
    constraint      reduce using rule 317 (EXP -> all para LEXP parc .)
    unique          reduce using rule 317 (EXP -> all para LEXP parc .)
    check           reduce using rule 317 (EXP -> all para LEXP parc .)
    default         reduce using rule 317 (EXP -> all para LEXP parc .)
    null            reduce using rule 317 (EXP -> all para LEXP parc .)
    primary         reduce using rule 317 (EXP -> all para LEXP parc .)
    references      reduce using rule 317 (EXP -> all para LEXP parc .)
    asc             reduce using rule 317 (EXP -> all para LEXP parc .)
    desc            reduce using rule 317 (EXP -> all para LEXP parc .)


state 395

    (318) EXP -> some para LEXP parc .

    r_from          reduce using rule 318 (EXP -> some para LEXP parc .)
    coma            reduce using rule 318 (EXP -> some para LEXP parc .)
    where           reduce using rule 318 (EXP -> some para LEXP parc .)
    group           reduce using rule 318 (EXP -> some para LEXP parc .)
    having          reduce using rule 318 (EXP -> some para LEXP parc .)
    union           reduce using rule 318 (EXP -> some para LEXP parc .)
    intersect       reduce using rule 318 (EXP -> some para LEXP parc .)
    except          reduce using rule 318 (EXP -> some para LEXP parc .)
    order           reduce using rule 318 (EXP -> some para LEXP parc .)
    limit           reduce using rule 318 (EXP -> some para LEXP parc .)
    offset          reduce using rule 318 (EXP -> some para LEXP parc .)
    ptcoma          reduce using rule 318 (EXP -> some para LEXP parc .)
    mas             reduce using rule 318 (EXP -> some para LEXP parc .)
    menos           reduce using rule 318 (EXP -> some para LEXP parc .)
    multiplicacion  reduce using rule 318 (EXP -> some para LEXP parc .)
    division        reduce using rule 318 (EXP -> some para LEXP parc .)
    modulo          reduce using rule 318 (EXP -> some para LEXP parc .)
    elevado         reduce using rule 318 (EXP -> some para LEXP parc .)
    and             reduce using rule 318 (EXP -> some para LEXP parc .)
    or              reduce using rule 318 (EXP -> some para LEXP parc .)
    mayor           reduce using rule 318 (EXP -> some para LEXP parc .)
    menor           reduce using rule 318 (EXP -> some para LEXP parc .)
    mayor_igual     reduce using rule 318 (EXP -> some para LEXP parc .)
    menor_igual     reduce using rule 318 (EXP -> some para LEXP parc .)
    igual           reduce using rule 318 (EXP -> some para LEXP parc .)
    diferente1      reduce using rule 318 (EXP -> some para LEXP parc .)
    diferente2      reduce using rule 318 (EXP -> some para LEXP parc .)
    between         reduce using rule 318 (EXP -> some para LEXP parc .)
    is              reduce using rule 318 (EXP -> some para LEXP parc .)
    isnull          reduce using rule 318 (EXP -> some para LEXP parc .)
    notnull         reduce using rule 318 (EXP -> some para LEXP parc .)
    as              reduce using rule 318 (EXP -> some para LEXP parc .)
    cadenaString    reduce using rule 318 (EXP -> some para LEXP parc .)
    id              reduce using rule 318 (EXP -> some para LEXP parc .)
    cadena          reduce using rule 318 (EXP -> some para LEXP parc .)
    in              reduce using rule 318 (EXP -> some para LEXP parc .)
    not             reduce using rule 318 (EXP -> some para LEXP parc .)
    like            reduce using rule 318 (EXP -> some para LEXP parc .)
    then            reduce using rule 318 (EXP -> some para LEXP parc .)
    when            reduce using rule 318 (EXP -> some para LEXP parc .)
    parc            reduce using rule 318 (EXP -> some para LEXP parc .)
    end             reduce using rule 318 (EXP -> some para LEXP parc .)
    else            reduce using rule 318 (EXP -> some para LEXP parc .)
    constraint      reduce using rule 318 (EXP -> some para LEXP parc .)
    unique          reduce using rule 318 (EXP -> some para LEXP parc .)
    check           reduce using rule 318 (EXP -> some para LEXP parc .)
    default         reduce using rule 318 (EXP -> some para LEXP parc .)
    null            reduce using rule 318 (EXP -> some para LEXP parc .)
    primary         reduce using rule 318 (EXP -> some para LEXP parc .)
    references      reduce using rule 318 (EXP -> some para LEXP parc .)
    asc             reduce using rule 318 (EXP -> some para LEXP parc .)
    desc            reduce using rule 318 (EXP -> some para LEXP parc .)


state 396

    (319) EXP -> extract para FIELDS r_from . timestamp cadena parc

    timestamp       shift and go to state 496


state 397

    (158) COLDEF -> id . TIPO
    (159) COLDEF -> id . TIPO LOPCOLUMN
    (220) TIPO -> . interval cadena
    (221) TIPO -> . decimal para int coma int parc
    (222) TIPO -> . decimal para int parc
    (223) TIPO -> . decimal
    (224) TIPO -> . numeric para int coma int parc
    (225) TIPO -> . numeric para int parc
    (226) TIPO -> . numeric
    (227) TIPO -> . varchar para int parc
    (228) TIPO -> . timestamp para int parc
    (229) TIPO -> . character para int parc
    (230) TIPO -> . interval para int parc
    (231) TIPO -> . char para int parc
    (232) TIPO -> . time para int parc
    (233) TIPO -> . character varying para int parc
    (234) TIPO -> . id modulo rowtype
    (235) TIPO -> . idPunto modulo type
    (236) TIPO -> . timestamp para int parc without time zone
    (237) TIPO -> . timestamp para int parc with time zone
    (238) TIPO -> . time para int parc without time zone
    (239) TIPO -> . time para int parc with time zone
    (240) TIPO -> . interval para int parc cadena
    (241) TIPO -> . smallint
    (242) TIPO -> . integer
    (243) TIPO -> . r_int
    (244) TIPO -> . bigint
    (245) TIPO -> . real
    (246) TIPO -> . double precision
    (247) TIPO -> . money
    (248) TIPO -> . text
    (249) TIPO -> . timestamp
    (250) TIPO -> . date
    (251) TIPO -> . time
    (252) TIPO -> . interval
    (253) TIPO -> . boolean
    (254) TIPO -> . record
    (255) TIPO -> . varchar
    (256) TIPO -> . timestamp without time zone
    (257) TIPO -> . timestamp with time zone
    (258) TIPO -> . time without time zone
    (259) TIPO -> . time with time zone
    (260) TIPO -> . id

    interval        shift and go to state 51
    decimal         shift and go to state 52
    numeric         shift and go to state 53
    varchar         shift and go to state 54
    timestamp       shift and go to state 55
    character       shift and go to state 56
    char            shift and go to state 57
    time            shift and go to state 58
    id              shift and go to state 46
    idPunto         shift and go to state 59
    smallint        shift and go to state 60
    integer         shift and go to state 61
    r_int           shift and go to state 62
    bigint          shift and go to state 63
    real            shift and go to state 64
    double          shift and go to state 65
    money           shift and go to state 66
    text            shift and go to state 67
    date            shift and go to state 68
    boolean         shift and go to state 69
    record          shift and go to state 70

    TIPO                           shift and go to state 497

state 398

    (152) CREATETABLE -> create table id para LDEF . parc ptcoma
    (153) CREATETABLE -> create table id para LDEF . parc HERENCIA ptcoma
    (154) LDEF -> LDEF . coma COLDEF

    parc            shift and go to state 498
    coma            shift and go to state 499


state 399

    (155) LDEF -> COLDEF .

    parc            reduce using rule 155 (LDEF -> COLDEF .)
    coma            reduce using rule 155 (LDEF -> COLDEF .)


state 400

    (156) COLDEF -> OPCONST .

    parc            reduce using rule 156 (COLDEF -> OPCONST .)
    coma            reduce using rule 156 (COLDEF -> OPCONST .)


state 401

    (157) COLDEF -> constraint . id OPCONST

    id              shift and go to state 500


state 402

    (171) OPCONST -> primary . key para LEXP parc

    key             shift and go to state 501


state 403

    (172) OPCONST -> foreign . key para LEXP parc references id para LEXP parc

    key             shift and go to state 502


state 404

    (173) OPCONST -> unique . para LEXP parc

    para            shift and go to state 503


state 405

    (174) OPCONST -> check . para CONDCHECK parc

    para            shift and go to state 504


state 406

    (183) CREATETYPE -> create type id as enum . para LEXP parc

    para            shift and go to state 505


state 407

    (135) CREATEDB -> create RD if not exist . id
    (136) CREATEDB -> create RD if not exist . id OPCCDB

    id              shift and go to state 506


state 408

    (141) OPCCDB -> PROPIETARIO MODO .

    ptcoma          reduce using rule 141 (OPCCDB -> PROPIETARIO MODO .)


state 409

    (144) PROPIETARIO -> owner igual . id
    (145) PROPIETARIO -> owner igual . cadena
    (146) PROPIETARIO -> owner igual . cadenaString

    id              shift and go to state 507
    cadena          shift and go to state 508
    cadenaString    shift and go to state 509


state 410

    (147) PROPIETARIO -> owner id .

    mode            reduce using rule 147 (PROPIETARIO -> owner id .)
    ptcoma          reduce using rule 147 (PROPIETARIO -> owner id .)


state 411

    (148) PROPIETARIO -> owner cadena .

    mode            reduce using rule 148 (PROPIETARIO -> owner cadena .)
    ptcoma          reduce using rule 148 (PROPIETARIO -> owner cadena .)


state 412

    (149) PROPIETARIO -> owner cadenaString .

    mode            reduce using rule 149 (PROPIETARIO -> owner cadenaString .)
    ptcoma          reduce using rule 149 (PROPIETARIO -> owner cadenaString .)


state 413

    (150) MODO -> mode igual . int

    int             shift and go to state 510


state 414

    (151) MODO -> mode int .

    ptcoma          reduce using rule 151 (MODO -> mode int .)


state 415

    (45) CREATEINDEX -> create index id on id . para LEXP parc
    (47) CREATEINDEX -> create index id on id . using hash para LEXP parc
    (48) CREATEINDEX -> create index id on id . para id ORDEN parc
    (49) CREATEINDEX -> create index id on id . para id id ORDEN parc

    para            shift and go to state 511
    using           shift and go to state 512


state 416

    (46) CREATEINDEX -> create unique index id on . id para LEXP parc

    id              shift and go to state 513


state 417

    (40) LPARAM -> id . TIPO
    (220) TIPO -> . interval cadena
    (221) TIPO -> . decimal para int coma int parc
    (222) TIPO -> . decimal para int parc
    (223) TIPO -> . decimal
    (224) TIPO -> . numeric para int coma int parc
    (225) TIPO -> . numeric para int parc
    (226) TIPO -> . numeric
    (227) TIPO -> . varchar para int parc
    (228) TIPO -> . timestamp para int parc
    (229) TIPO -> . character para int parc
    (230) TIPO -> . interval para int parc
    (231) TIPO -> . char para int parc
    (232) TIPO -> . time para int parc
    (233) TIPO -> . character varying para int parc
    (234) TIPO -> . id modulo rowtype
    (235) TIPO -> . idPunto modulo type
    (236) TIPO -> . timestamp para int parc without time zone
    (237) TIPO -> . timestamp para int parc with time zone
    (238) TIPO -> . time para int parc without time zone
    (239) TIPO -> . time para int parc with time zone
    (240) TIPO -> . interval para int parc cadena
    (241) TIPO -> . smallint
    (242) TIPO -> . integer
    (243) TIPO -> . r_int
    (244) TIPO -> . bigint
    (245) TIPO -> . real
    (246) TIPO -> . double precision
    (247) TIPO -> . money
    (248) TIPO -> . text
    (249) TIPO -> . timestamp
    (250) TIPO -> . date
    (251) TIPO -> . time
    (252) TIPO -> . interval
    (253) TIPO -> . boolean
    (254) TIPO -> . record
    (255) TIPO -> . varchar
    (256) TIPO -> . timestamp without time zone
    (257) TIPO -> . timestamp with time zone
    (258) TIPO -> . time without time zone
    (259) TIPO -> . time with time zone
    (260) TIPO -> . id

    interval        shift and go to state 51
    decimal         shift and go to state 52
    numeric         shift and go to state 53
    varchar         shift and go to state 54
    timestamp       shift and go to state 55
    character       shift and go to state 56
    char            shift and go to state 57
    time            shift and go to state 58
    id              shift and go to state 46
    idPunto         shift and go to state 59
    smallint        shift and go to state 60
    integer         shift and go to state 61
    r_int           shift and go to state 62
    bigint          shift and go to state 63
    real            shift and go to state 64
    double          shift and go to state 65
    money           shift and go to state 66
    text            shift and go to state 67
    date            shift and go to state 68
    boolean         shift and go to state 69
    record          shift and go to state 70

    TIPO                           shift and go to state 514

state 418

    (30) PROCEDIMIENTOS -> create procedure id para LPARAM . parc LENGUAJE LCONTENIDOP
    (31) PROCEDIMIENTOS -> create procedure id para LPARAM . parc LCONTENIDOP LENGUAJE
    (37) LPARAM -> LPARAM . coma inout id TIPO
    (38) LPARAM -> LPARAM . coma id TIPO

    parc            shift and go to state 515
    coma            shift and go to state 516


state 419

    (39) LPARAM -> inout . id TIPO

    id              shift and go to state 517


state 420

    (26) FUNCIONES -> create function id para LPARAM . parc RETURNP LENGUAJE LCONTENIDOP
    (27) FUNCIONES -> create function id para LPARAM . parc RETURNP LCONTENIDOP LENGUAJE
    (37) LPARAM -> LPARAM . coma inout id TIPO
    (38) LPARAM -> LPARAM . coma id TIPO

    parc            shift and go to state 518
    coma            shift and go to state 516


state 421

    (214) LCAMPOS -> id igual . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 519
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 422

    (212) UPDATE -> update id set LCAMPOS WHERE .

    ptcoma          reduce using rule 212 (UPDATE -> update id set LCAMPOS WHERE .)


state 423

    (213) LCAMPOS -> LCAMPOS coma . id igual EXP

    id              shift and go to state 520


state 424

    (113) ALTER -> alter databases id rename to . id

    id              shift and go to state 521


state 425

    (114) ALTER -> alter databases id owner to . id

    id              shift and go to state 522


state 426

    (125) OP -> alter column . id set not null
    (126) OP -> alter column . id set null
    (131) OP -> alter column . id type TIPO

    id              shift and go to state 523


state 427

    (116) LOP -> LOP coma . OP
    (118) OP -> . add column id TIPO
    (119) OP -> . add check para CONDCHECK parc
    (120) OP -> . add constraint id check para CONDCHECK parc
    (121) OP -> . add constraint id unique para LEXP parc
    (122) OP -> . add unique para LEXP parc
    (123) OP -> . add foreign key para LEXP parc references id para LEXP parc
    (124) OP -> . add constraint id foreign key para LEXP parc references id para LEXP parc
    (125) OP -> . alter column id set not null
    (126) OP -> . alter column id set null
    (127) OP -> . drop constraint id
    (128) OP -> . drop column LEXP
    (129) OP -> . drop check id
    (130) OP -> . rename column id to id
    (131) OP -> . alter column id type TIPO

    add             shift and go to state 325
    alter           shift and go to state 322
    drop            shift and go to state 326
    rename          shift and go to state 327

    OP                             shift and go to state 524

state 428

    (118) OP -> add column . id TIPO

    id              shift and go to state 525


state 429

    (119) OP -> add check . para CONDCHECK parc

    para            shift and go to state 526


state 430

    (120) OP -> add constraint . id check para CONDCHECK parc
    (121) OP -> add constraint . id unique para LEXP parc
    (124) OP -> add constraint . id foreign key para LEXP parc references id para LEXP parc

    id              shift and go to state 527


state 431

    (122) OP -> add unique . para LEXP parc

    para            shift and go to state 528


state 432

    (123) OP -> add foreign . key para LEXP parc references id para LEXP parc

    key             shift and go to state 529


state 433

    (127) OP -> drop constraint . id

    id              shift and go to state 530


state 434

    (128) OP -> drop column . LEXP
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 531
    EXP                            shift and go to state 79
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 435

    (129) OP -> drop check . id

    id              shift and go to state 532


state 436

    (130) OP -> rename column . id to id

    id              shift and go to state 533


state 437

    (111) DROP -> drop databases if exist id .

    ptcoma          reduce using rule 111 (DROP -> drop databases if exist id .)


state 438

    (69) CONDICIONIF -> if EXP then LISTACONTENIDO ELSEF . end if

    end             shift and go to state 534


state 439

    (71) CONDICIONIF -> if EXP then LISTACONTENIDO end . if

    if              shift and go to state 535


state 440

    (70) CONDICIONIF -> if EXP then LISTACONTENIDO LELIF . end if
    (72) CONDICIONIF -> if EXP then LISTACONTENIDO LELIF . ELSEF end if
    (73) LELIF -> LELIF . elsif EXP then LISTACONTENIDO
    (75) ELSEF -> . else LISTACONTENIDO

    end             shift and go to state 536
    elsif           shift and go to state 538
    else            shift and go to state 349

    ELSEF                          shift and go to state 537

state 441

    (80) LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .

    end             reduce using rule 80 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    else            reduce using rule 80 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    elsif           reduce using rule 80 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    id              reduce using rule 80 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    if              reduce using rule 80 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    raise           reduce using rule 80 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    begin           reduce using rule 80 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    call            reduce using rule 80 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    return          reduce using rule 80 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    case            reduce using rule 80 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    when            reduce using rule 80 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    language        reduce using rule 80 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    dolarn          reduce using rule 80 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    as              reduce using rule 80 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    do              reduce using rule 80 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    use             reduce using rule 80 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    select          reduce using rule 80 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    create          reduce using rule 80 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    update          reduce using rule 80 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    delete          reduce using rule 80 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    alter           reduce using rule 80 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    drop            reduce using rule 80 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    insert          reduce using rule 80 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    show            reduce using rule 80 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)
    $end            reduce using rule 80 (LISTACONTENIDO -> LISTACONTENIDO CONTENIDO .)


state 442

    (74) LELIF -> elsif . EXP then LISTACONTENIDO
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 539
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 443

    (82) CONTENIDO -> ASIGNACION ptcoma .

    end             reduce using rule 82 (CONTENIDO -> ASIGNACION ptcoma .)
    else            reduce using rule 82 (CONTENIDO -> ASIGNACION ptcoma .)
    elsif           reduce using rule 82 (CONTENIDO -> ASIGNACION ptcoma .)
    id              reduce using rule 82 (CONTENIDO -> ASIGNACION ptcoma .)
    if              reduce using rule 82 (CONTENIDO -> ASIGNACION ptcoma .)
    raise           reduce using rule 82 (CONTENIDO -> ASIGNACION ptcoma .)
    begin           reduce using rule 82 (CONTENIDO -> ASIGNACION ptcoma .)
    call            reduce using rule 82 (CONTENIDO -> ASIGNACION ptcoma .)
    return          reduce using rule 82 (CONTENIDO -> ASIGNACION ptcoma .)
    case            reduce using rule 82 (CONTENIDO -> ASIGNACION ptcoma .)
    when            reduce using rule 82 (CONTENIDO -> ASIGNACION ptcoma .)
    language        reduce using rule 82 (CONTENIDO -> ASIGNACION ptcoma .)
    dolarn          reduce using rule 82 (CONTENIDO -> ASIGNACION ptcoma .)
    as              reduce using rule 82 (CONTENIDO -> ASIGNACION ptcoma .)
    do              reduce using rule 82 (CONTENIDO -> ASIGNACION ptcoma .)
    use             reduce using rule 82 (CONTENIDO -> ASIGNACION ptcoma .)
    select          reduce using rule 82 (CONTENIDO -> ASIGNACION ptcoma .)
    create          reduce using rule 82 (CONTENIDO -> ASIGNACION ptcoma .)
    update          reduce using rule 82 (CONTENIDO -> ASIGNACION ptcoma .)
    delete          reduce using rule 82 (CONTENIDO -> ASIGNACION ptcoma .)
    alter           reduce using rule 82 (CONTENIDO -> ASIGNACION ptcoma .)
    drop            reduce using rule 82 (CONTENIDO -> ASIGNACION ptcoma .)
    insert          reduce using rule 82 (CONTENIDO -> ASIGNACION ptcoma .)
    show            reduce using rule 82 (CONTENIDO -> ASIGNACION ptcoma .)
    $end            reduce using rule 82 (CONTENIDO -> ASIGNACION ptcoma .)


state 444

    (83) CONTENIDO -> DECLARACIONES ptcoma .

    end             reduce using rule 83 (CONTENIDO -> DECLARACIONES ptcoma .)
    else            reduce using rule 83 (CONTENIDO -> DECLARACIONES ptcoma .)
    elsif           reduce using rule 83 (CONTENIDO -> DECLARACIONES ptcoma .)
    id              reduce using rule 83 (CONTENIDO -> DECLARACIONES ptcoma .)
    if              reduce using rule 83 (CONTENIDO -> DECLARACIONES ptcoma .)
    raise           reduce using rule 83 (CONTENIDO -> DECLARACIONES ptcoma .)
    begin           reduce using rule 83 (CONTENIDO -> DECLARACIONES ptcoma .)
    call            reduce using rule 83 (CONTENIDO -> DECLARACIONES ptcoma .)
    return          reduce using rule 83 (CONTENIDO -> DECLARACIONES ptcoma .)
    case            reduce using rule 83 (CONTENIDO -> DECLARACIONES ptcoma .)
    when            reduce using rule 83 (CONTENIDO -> DECLARACIONES ptcoma .)
    language        reduce using rule 83 (CONTENIDO -> DECLARACIONES ptcoma .)
    dolarn          reduce using rule 83 (CONTENIDO -> DECLARACIONES ptcoma .)
    as              reduce using rule 83 (CONTENIDO -> DECLARACIONES ptcoma .)
    do              reduce using rule 83 (CONTENIDO -> DECLARACIONES ptcoma .)
    use             reduce using rule 83 (CONTENIDO -> DECLARACIONES ptcoma .)
    select          reduce using rule 83 (CONTENIDO -> DECLARACIONES ptcoma .)
    create          reduce using rule 83 (CONTENIDO -> DECLARACIONES ptcoma .)
    update          reduce using rule 83 (CONTENIDO -> DECLARACIONES ptcoma .)
    delete          reduce using rule 83 (CONTENIDO -> DECLARACIONES ptcoma .)
    alter           reduce using rule 83 (CONTENIDO -> DECLARACIONES ptcoma .)
    drop            reduce using rule 83 (CONTENIDO -> DECLARACIONES ptcoma .)
    insert          reduce using rule 83 (CONTENIDO -> DECLARACIONES ptcoma .)
    show            reduce using rule 83 (CONTENIDO -> DECLARACIONES ptcoma .)
    $end            reduce using rule 83 (CONTENIDO -> DECLARACIONES ptcoma .)


state 445

    (84) CONTENIDO -> CONDICIONIF ptcoma .

    end             reduce using rule 84 (CONTENIDO -> CONDICIONIF ptcoma .)
    else            reduce using rule 84 (CONTENIDO -> CONDICIONIF ptcoma .)
    elsif           reduce using rule 84 (CONTENIDO -> CONDICIONIF ptcoma .)
    id              reduce using rule 84 (CONTENIDO -> CONDICIONIF ptcoma .)
    if              reduce using rule 84 (CONTENIDO -> CONDICIONIF ptcoma .)
    raise           reduce using rule 84 (CONTENIDO -> CONDICIONIF ptcoma .)
    begin           reduce using rule 84 (CONTENIDO -> CONDICIONIF ptcoma .)
    call            reduce using rule 84 (CONTENIDO -> CONDICIONIF ptcoma .)
    return          reduce using rule 84 (CONTENIDO -> CONDICIONIF ptcoma .)
    case            reduce using rule 84 (CONTENIDO -> CONDICIONIF ptcoma .)
    when            reduce using rule 84 (CONTENIDO -> CONDICIONIF ptcoma .)
    language        reduce using rule 84 (CONTENIDO -> CONDICIONIF ptcoma .)
    dolarn          reduce using rule 84 (CONTENIDO -> CONDICIONIF ptcoma .)
    as              reduce using rule 84 (CONTENIDO -> CONDICIONIF ptcoma .)
    do              reduce using rule 84 (CONTENIDO -> CONDICIONIF ptcoma .)
    use             reduce using rule 84 (CONTENIDO -> CONDICIONIF ptcoma .)
    select          reduce using rule 84 (CONTENIDO -> CONDICIONIF ptcoma .)
    create          reduce using rule 84 (CONTENIDO -> CONDICIONIF ptcoma .)
    update          reduce using rule 84 (CONTENIDO -> CONDICIONIF ptcoma .)
    delete          reduce using rule 84 (CONTENIDO -> CONDICIONIF ptcoma .)
    alter           reduce using rule 84 (CONTENIDO -> CONDICIONIF ptcoma .)
    drop            reduce using rule 84 (CONTENIDO -> CONDICIONIF ptcoma .)
    insert          reduce using rule 84 (CONTENIDO -> CONDICIONIF ptcoma .)
    show            reduce using rule 84 (CONTENIDO -> CONDICIONIF ptcoma .)
    $end            reduce using rule 84 (CONTENIDO -> CONDICIONIF ptcoma .)


state 446

    (85) CONTENIDO -> RAISE ptcoma .

    end             reduce using rule 85 (CONTENIDO -> RAISE ptcoma .)
    else            reduce using rule 85 (CONTENIDO -> RAISE ptcoma .)
    elsif           reduce using rule 85 (CONTENIDO -> RAISE ptcoma .)
    id              reduce using rule 85 (CONTENIDO -> RAISE ptcoma .)
    if              reduce using rule 85 (CONTENIDO -> RAISE ptcoma .)
    raise           reduce using rule 85 (CONTENIDO -> RAISE ptcoma .)
    begin           reduce using rule 85 (CONTENIDO -> RAISE ptcoma .)
    call            reduce using rule 85 (CONTENIDO -> RAISE ptcoma .)
    return          reduce using rule 85 (CONTENIDO -> RAISE ptcoma .)
    case            reduce using rule 85 (CONTENIDO -> RAISE ptcoma .)
    when            reduce using rule 85 (CONTENIDO -> RAISE ptcoma .)
    language        reduce using rule 85 (CONTENIDO -> RAISE ptcoma .)
    dolarn          reduce using rule 85 (CONTENIDO -> RAISE ptcoma .)
    as              reduce using rule 85 (CONTENIDO -> RAISE ptcoma .)
    do              reduce using rule 85 (CONTENIDO -> RAISE ptcoma .)
    use             reduce using rule 85 (CONTENIDO -> RAISE ptcoma .)
    select          reduce using rule 85 (CONTENIDO -> RAISE ptcoma .)
    create          reduce using rule 85 (CONTENIDO -> RAISE ptcoma .)
    update          reduce using rule 85 (CONTENIDO -> RAISE ptcoma .)
    delete          reduce using rule 85 (CONTENIDO -> RAISE ptcoma .)
    alter           reduce using rule 85 (CONTENIDO -> RAISE ptcoma .)
    drop            reduce using rule 85 (CONTENIDO -> RAISE ptcoma .)
    insert          reduce using rule 85 (CONTENIDO -> RAISE ptcoma .)
    show            reduce using rule 85 (CONTENIDO -> RAISE ptcoma .)
    $end            reduce using rule 85 (CONTENIDO -> RAISE ptcoma .)


state 447

    (86) CONTENIDO -> BEGINEND ptcoma .

    end             reduce using rule 86 (CONTENIDO -> BEGINEND ptcoma .)
    else            reduce using rule 86 (CONTENIDO -> BEGINEND ptcoma .)
    elsif           reduce using rule 86 (CONTENIDO -> BEGINEND ptcoma .)
    id              reduce using rule 86 (CONTENIDO -> BEGINEND ptcoma .)
    if              reduce using rule 86 (CONTENIDO -> BEGINEND ptcoma .)
    raise           reduce using rule 86 (CONTENIDO -> BEGINEND ptcoma .)
    begin           reduce using rule 86 (CONTENIDO -> BEGINEND ptcoma .)
    call            reduce using rule 86 (CONTENIDO -> BEGINEND ptcoma .)
    return          reduce using rule 86 (CONTENIDO -> BEGINEND ptcoma .)
    case            reduce using rule 86 (CONTENIDO -> BEGINEND ptcoma .)
    when            reduce using rule 86 (CONTENIDO -> BEGINEND ptcoma .)
    language        reduce using rule 86 (CONTENIDO -> BEGINEND ptcoma .)
    dolarn          reduce using rule 86 (CONTENIDO -> BEGINEND ptcoma .)
    as              reduce using rule 86 (CONTENIDO -> BEGINEND ptcoma .)
    do              reduce using rule 86 (CONTENIDO -> BEGINEND ptcoma .)
    use             reduce using rule 86 (CONTENIDO -> BEGINEND ptcoma .)
    select          reduce using rule 86 (CONTENIDO -> BEGINEND ptcoma .)
    create          reduce using rule 86 (CONTENIDO -> BEGINEND ptcoma .)
    update          reduce using rule 86 (CONTENIDO -> BEGINEND ptcoma .)
    delete          reduce using rule 86 (CONTENIDO -> BEGINEND ptcoma .)
    alter           reduce using rule 86 (CONTENIDO -> BEGINEND ptcoma .)
    drop            reduce using rule 86 (CONTENIDO -> BEGINEND ptcoma .)
    insert          reduce using rule 86 (CONTENIDO -> BEGINEND ptcoma .)
    show            reduce using rule 86 (CONTENIDO -> BEGINEND ptcoma .)
    $end            reduce using rule 86 (CONTENIDO -> BEGINEND ptcoma .)


state 448

    (87) CONTENIDO -> CALLPROCEDURE ptcoma .

    end             reduce using rule 87 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    else            reduce using rule 87 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    elsif           reduce using rule 87 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    id              reduce using rule 87 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    if              reduce using rule 87 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    raise           reduce using rule 87 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    begin           reduce using rule 87 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    call            reduce using rule 87 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    return          reduce using rule 87 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    case            reduce using rule 87 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    when            reduce using rule 87 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    language        reduce using rule 87 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    dolarn          reduce using rule 87 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    as              reduce using rule 87 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    do              reduce using rule 87 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    use             reduce using rule 87 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    select          reduce using rule 87 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    create          reduce using rule 87 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    update          reduce using rule 87 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    delete          reduce using rule 87 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    alter           reduce using rule 87 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    drop            reduce using rule 87 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    insert          reduce using rule 87 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    show            reduce using rule 87 (CONTENIDO -> CALLPROCEDURE ptcoma .)
    $end            reduce using rule 87 (CONTENIDO -> CALLPROCEDURE ptcoma .)


state 449

    (88) CONTENIDO -> RETURN ptcoma .

    end             reduce using rule 88 (CONTENIDO -> RETURN ptcoma .)
    else            reduce using rule 88 (CONTENIDO -> RETURN ptcoma .)
    elsif           reduce using rule 88 (CONTENIDO -> RETURN ptcoma .)
    id              reduce using rule 88 (CONTENIDO -> RETURN ptcoma .)
    if              reduce using rule 88 (CONTENIDO -> RETURN ptcoma .)
    raise           reduce using rule 88 (CONTENIDO -> RETURN ptcoma .)
    begin           reduce using rule 88 (CONTENIDO -> RETURN ptcoma .)
    call            reduce using rule 88 (CONTENIDO -> RETURN ptcoma .)
    return          reduce using rule 88 (CONTENIDO -> RETURN ptcoma .)
    case            reduce using rule 88 (CONTENIDO -> RETURN ptcoma .)
    when            reduce using rule 88 (CONTENIDO -> RETURN ptcoma .)
    language        reduce using rule 88 (CONTENIDO -> RETURN ptcoma .)
    dolarn          reduce using rule 88 (CONTENIDO -> RETURN ptcoma .)
    as              reduce using rule 88 (CONTENIDO -> RETURN ptcoma .)
    do              reduce using rule 88 (CONTENIDO -> RETURN ptcoma .)
    use             reduce using rule 88 (CONTENIDO -> RETURN ptcoma .)
    select          reduce using rule 88 (CONTENIDO -> RETURN ptcoma .)
    create          reduce using rule 88 (CONTENIDO -> RETURN ptcoma .)
    update          reduce using rule 88 (CONTENIDO -> RETURN ptcoma .)
    delete          reduce using rule 88 (CONTENIDO -> RETURN ptcoma .)
    alter           reduce using rule 88 (CONTENIDO -> RETURN ptcoma .)
    drop            reduce using rule 88 (CONTENIDO -> RETURN ptcoma .)
    insert          reduce using rule 88 (CONTENIDO -> RETURN ptcoma .)
    show            reduce using rule 88 (CONTENIDO -> RETURN ptcoma .)
    $end            reduce using rule 88 (CONTENIDO -> RETURN ptcoma .)


state 450

    (89) CONTENIDO -> CASE ptcoma .

    end             reduce using rule 89 (CONTENIDO -> CASE ptcoma .)
    else            reduce using rule 89 (CONTENIDO -> CASE ptcoma .)
    elsif           reduce using rule 89 (CONTENIDO -> CASE ptcoma .)
    id              reduce using rule 89 (CONTENIDO -> CASE ptcoma .)
    if              reduce using rule 89 (CONTENIDO -> CASE ptcoma .)
    raise           reduce using rule 89 (CONTENIDO -> CASE ptcoma .)
    begin           reduce using rule 89 (CONTENIDO -> CASE ptcoma .)
    call            reduce using rule 89 (CONTENIDO -> CASE ptcoma .)
    return          reduce using rule 89 (CONTENIDO -> CASE ptcoma .)
    case            reduce using rule 89 (CONTENIDO -> CASE ptcoma .)
    when            reduce using rule 89 (CONTENIDO -> CASE ptcoma .)
    language        reduce using rule 89 (CONTENIDO -> CASE ptcoma .)
    dolarn          reduce using rule 89 (CONTENIDO -> CASE ptcoma .)
    as              reduce using rule 89 (CONTENIDO -> CASE ptcoma .)
    do              reduce using rule 89 (CONTENIDO -> CASE ptcoma .)
    use             reduce using rule 89 (CONTENIDO -> CASE ptcoma .)
    select          reduce using rule 89 (CONTENIDO -> CASE ptcoma .)
    create          reduce using rule 89 (CONTENIDO -> CASE ptcoma .)
    update          reduce using rule 89 (CONTENIDO -> CASE ptcoma .)
    delete          reduce using rule 89 (CONTENIDO -> CASE ptcoma .)
    alter           reduce using rule 89 (CONTENIDO -> CASE ptcoma .)
    drop            reduce using rule 89 (CONTENIDO -> CASE ptcoma .)
    insert          reduce using rule 89 (CONTENIDO -> CASE ptcoma .)
    show            reduce using rule 89 (CONTENIDO -> CASE ptcoma .)
    $end            reduce using rule 89 (CONTENIDO -> CASE ptcoma .)


state 451

    (90) RAISE -> raise LEVEL . FORMAT
    (91) RAISE -> raise LEVEL . EXP
    (92) RAISE -> raise LEVEL .
    (94) RAISE -> raise LEVEL . cadena coma id
    (101) FORMAT -> . format para EXP coma LEXP parc
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    ptcoma          reduce using rule 92 (RAISE -> raise LEVEL .)
    cadena          shift and go to state 542
    format          shift and go to state 543
    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    FORMAT                         shift and go to state 540
    EXP                            shift and go to state 541
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 452

    (95) LEVEL -> info .

    cadena          reduce using rule 95 (LEVEL -> info .)
    format          reduce using rule 95 (LEVEL -> info .)
    mas             reduce using rule 95 (LEVEL -> info .)
    menos           reduce using rule 95 (LEVEL -> info .)
    not             reduce using rule 95 (LEVEL -> info .)
    para            reduce using rule 95 (LEVEL -> info .)
    id              reduce using rule 95 (LEVEL -> info .)
    any             reduce using rule 95 (LEVEL -> info .)
    all             reduce using rule 95 (LEVEL -> info .)
    some            reduce using rule 95 (LEVEL -> info .)
    extract         reduce using rule 95 (LEVEL -> info .)
    int             reduce using rule 95 (LEVEL -> info .)
    decimales       reduce using rule 95 (LEVEL -> info .)
    cadenaString    reduce using rule 95 (LEVEL -> info .)
    true            reduce using rule 95 (LEVEL -> info .)
    false           reduce using rule 95 (LEVEL -> info .)
    multiplicacion  reduce using rule 95 (LEVEL -> info .)
    null            reduce using rule 95 (LEVEL -> info .)
    current_time    reduce using rule 95 (LEVEL -> info .)
    current_date    reduce using rule 95 (LEVEL -> info .)
    timestamp       reduce using rule 95 (LEVEL -> info .)
    interval        reduce using rule 95 (LEVEL -> info .)
    default         reduce using rule 95 (LEVEL -> info .)
    idPunto         reduce using rule 95 (LEVEL -> info .)
    select          reduce using rule 95 (LEVEL -> info .)
    case            reduce using rule 95 (LEVEL -> info .)
    ptcoma          reduce using rule 95 (LEVEL -> info .)


state 453

    (96) LEVEL -> debug .

    cadena          reduce using rule 96 (LEVEL -> debug .)
    format          reduce using rule 96 (LEVEL -> debug .)
    mas             reduce using rule 96 (LEVEL -> debug .)
    menos           reduce using rule 96 (LEVEL -> debug .)
    not             reduce using rule 96 (LEVEL -> debug .)
    para            reduce using rule 96 (LEVEL -> debug .)
    id              reduce using rule 96 (LEVEL -> debug .)
    any             reduce using rule 96 (LEVEL -> debug .)
    all             reduce using rule 96 (LEVEL -> debug .)
    some            reduce using rule 96 (LEVEL -> debug .)
    extract         reduce using rule 96 (LEVEL -> debug .)
    int             reduce using rule 96 (LEVEL -> debug .)
    decimales       reduce using rule 96 (LEVEL -> debug .)
    cadenaString    reduce using rule 96 (LEVEL -> debug .)
    true            reduce using rule 96 (LEVEL -> debug .)
    false           reduce using rule 96 (LEVEL -> debug .)
    multiplicacion  reduce using rule 96 (LEVEL -> debug .)
    null            reduce using rule 96 (LEVEL -> debug .)
    current_time    reduce using rule 96 (LEVEL -> debug .)
    current_date    reduce using rule 96 (LEVEL -> debug .)
    timestamp       reduce using rule 96 (LEVEL -> debug .)
    interval        reduce using rule 96 (LEVEL -> debug .)
    default         reduce using rule 96 (LEVEL -> debug .)
    idPunto         reduce using rule 96 (LEVEL -> debug .)
    select          reduce using rule 96 (LEVEL -> debug .)
    case            reduce using rule 96 (LEVEL -> debug .)
    ptcoma          reduce using rule 96 (LEVEL -> debug .)


state 454

    (97) LEVEL -> log .

    cadena          reduce using rule 97 (LEVEL -> log .)
    format          reduce using rule 97 (LEVEL -> log .)
    mas             reduce using rule 97 (LEVEL -> log .)
    menos           reduce using rule 97 (LEVEL -> log .)
    not             reduce using rule 97 (LEVEL -> log .)
    para            reduce using rule 97 (LEVEL -> log .)
    id              reduce using rule 97 (LEVEL -> log .)
    any             reduce using rule 97 (LEVEL -> log .)
    all             reduce using rule 97 (LEVEL -> log .)
    some            reduce using rule 97 (LEVEL -> log .)
    extract         reduce using rule 97 (LEVEL -> log .)
    int             reduce using rule 97 (LEVEL -> log .)
    decimales       reduce using rule 97 (LEVEL -> log .)
    cadenaString    reduce using rule 97 (LEVEL -> log .)
    true            reduce using rule 97 (LEVEL -> log .)
    false           reduce using rule 97 (LEVEL -> log .)
    multiplicacion  reduce using rule 97 (LEVEL -> log .)
    null            reduce using rule 97 (LEVEL -> log .)
    current_time    reduce using rule 97 (LEVEL -> log .)
    current_date    reduce using rule 97 (LEVEL -> log .)
    timestamp       reduce using rule 97 (LEVEL -> log .)
    interval        reduce using rule 97 (LEVEL -> log .)
    default         reduce using rule 97 (LEVEL -> log .)
    idPunto         reduce using rule 97 (LEVEL -> log .)
    select          reduce using rule 97 (LEVEL -> log .)
    case            reduce using rule 97 (LEVEL -> log .)
    ptcoma          reduce using rule 97 (LEVEL -> log .)


state 455

    (98) LEVEL -> notice .

    cadena          reduce using rule 98 (LEVEL -> notice .)
    format          reduce using rule 98 (LEVEL -> notice .)
    mas             reduce using rule 98 (LEVEL -> notice .)
    menos           reduce using rule 98 (LEVEL -> notice .)
    not             reduce using rule 98 (LEVEL -> notice .)
    para            reduce using rule 98 (LEVEL -> notice .)
    id              reduce using rule 98 (LEVEL -> notice .)
    any             reduce using rule 98 (LEVEL -> notice .)
    all             reduce using rule 98 (LEVEL -> notice .)
    some            reduce using rule 98 (LEVEL -> notice .)
    extract         reduce using rule 98 (LEVEL -> notice .)
    int             reduce using rule 98 (LEVEL -> notice .)
    decimales       reduce using rule 98 (LEVEL -> notice .)
    cadenaString    reduce using rule 98 (LEVEL -> notice .)
    true            reduce using rule 98 (LEVEL -> notice .)
    false           reduce using rule 98 (LEVEL -> notice .)
    multiplicacion  reduce using rule 98 (LEVEL -> notice .)
    null            reduce using rule 98 (LEVEL -> notice .)
    current_time    reduce using rule 98 (LEVEL -> notice .)
    current_date    reduce using rule 98 (LEVEL -> notice .)
    timestamp       reduce using rule 98 (LEVEL -> notice .)
    interval        reduce using rule 98 (LEVEL -> notice .)
    default         reduce using rule 98 (LEVEL -> notice .)
    idPunto         reduce using rule 98 (LEVEL -> notice .)
    select          reduce using rule 98 (LEVEL -> notice .)
    case            reduce using rule 98 (LEVEL -> notice .)
    ptcoma          reduce using rule 98 (LEVEL -> notice .)


state 456

    (99) LEVEL -> warning .

    cadena          reduce using rule 99 (LEVEL -> warning .)
    format          reduce using rule 99 (LEVEL -> warning .)
    mas             reduce using rule 99 (LEVEL -> warning .)
    menos           reduce using rule 99 (LEVEL -> warning .)
    not             reduce using rule 99 (LEVEL -> warning .)
    para            reduce using rule 99 (LEVEL -> warning .)
    id              reduce using rule 99 (LEVEL -> warning .)
    any             reduce using rule 99 (LEVEL -> warning .)
    all             reduce using rule 99 (LEVEL -> warning .)
    some            reduce using rule 99 (LEVEL -> warning .)
    extract         reduce using rule 99 (LEVEL -> warning .)
    int             reduce using rule 99 (LEVEL -> warning .)
    decimales       reduce using rule 99 (LEVEL -> warning .)
    cadenaString    reduce using rule 99 (LEVEL -> warning .)
    true            reduce using rule 99 (LEVEL -> warning .)
    false           reduce using rule 99 (LEVEL -> warning .)
    multiplicacion  reduce using rule 99 (LEVEL -> warning .)
    null            reduce using rule 99 (LEVEL -> warning .)
    current_time    reduce using rule 99 (LEVEL -> warning .)
    current_date    reduce using rule 99 (LEVEL -> warning .)
    timestamp       reduce using rule 99 (LEVEL -> warning .)
    interval        reduce using rule 99 (LEVEL -> warning .)
    default         reduce using rule 99 (LEVEL -> warning .)
    idPunto         reduce using rule 99 (LEVEL -> warning .)
    select          reduce using rule 99 (LEVEL -> warning .)
    case            reduce using rule 99 (LEVEL -> warning .)
    ptcoma          reduce using rule 99 (LEVEL -> warning .)


state 457

    (100) LEVEL -> exception .

    cadena          reduce using rule 100 (LEVEL -> exception .)
    format          reduce using rule 100 (LEVEL -> exception .)
    mas             reduce using rule 100 (LEVEL -> exception .)
    menos           reduce using rule 100 (LEVEL -> exception .)
    not             reduce using rule 100 (LEVEL -> exception .)
    para            reduce using rule 100 (LEVEL -> exception .)
    id              reduce using rule 100 (LEVEL -> exception .)
    any             reduce using rule 100 (LEVEL -> exception .)
    all             reduce using rule 100 (LEVEL -> exception .)
    some            reduce using rule 100 (LEVEL -> exception .)
    extract         reduce using rule 100 (LEVEL -> exception .)
    int             reduce using rule 100 (LEVEL -> exception .)
    decimales       reduce using rule 100 (LEVEL -> exception .)
    cadenaString    reduce using rule 100 (LEVEL -> exception .)
    true            reduce using rule 100 (LEVEL -> exception .)
    false           reduce using rule 100 (LEVEL -> exception .)
    multiplicacion  reduce using rule 100 (LEVEL -> exception .)
    null            reduce using rule 100 (LEVEL -> exception .)
    current_time    reduce using rule 100 (LEVEL -> exception .)
    current_date    reduce using rule 100 (LEVEL -> exception .)
    timestamp       reduce using rule 100 (LEVEL -> exception .)
    interval        reduce using rule 100 (LEVEL -> exception .)
    default         reduce using rule 100 (LEVEL -> exception .)
    idPunto         reduce using rule 100 (LEVEL -> exception .)
    select          reduce using rule 100 (LEVEL -> exception .)
    case            reduce using rule 100 (LEVEL -> exception .)
    ptcoma          reduce using rule 100 (LEVEL -> exception .)


state 458

    (44) BEGINEND -> begin LISTACONTENIDO . end
    (80) LISTACONTENIDO -> LISTACONTENIDO . CONTENIDO
    (82) CONTENIDO -> . ASIGNACION ptcoma
    (83) CONTENIDO -> . DECLARACIONES ptcoma
    (84) CONTENIDO -> . CONDICIONIF ptcoma
    (85) CONTENIDO -> . RAISE ptcoma
    (86) CONTENIDO -> . BEGINEND ptcoma
    (87) CONTENIDO -> . CALLPROCEDURE ptcoma
    (88) CONTENIDO -> . RETURN ptcoma
    (89) CONTENIDO -> . CASE ptcoma
    (67) ASIGNACION -> . id dospuntos igual EXP
    (68) ASIGNACION -> . id igual EXP
    (59) DECLARACIONES -> . id TIPO not null ASIG
    (60) DECLARACIONES -> . id TIPO ASIG
    (61) DECLARACIONES -> . id constant TIPO not null ASIG
    (62) DECLARACIONES -> . id constant TIPO ASIG
    (69) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (70) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (71) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (72) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (90) RAISE -> . raise LEVEL FORMAT
    (91) RAISE -> . raise LEVEL EXP
    (92) RAISE -> . raise LEVEL
    (93) RAISE -> . raise
    (94) RAISE -> . raise LEVEL cadena coma id
    (44) BEGINEND -> . begin LISTACONTENIDO end
    (29) CALLPROCEDURE -> . call id para LEXP parc
    (24) RETURN -> . return LEXP
    (25) RETURN -> . return id para LEXP parc
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    end             shift and go to state 544
    id              shift and go to state 340
    if              shift and go to state 30
    raise           shift and go to state 341
    begin           shift and go to state 342
    call            shift and go to state 343
    return          shift and go to state 344
    case            shift and go to state 32

    CONTENIDO                      shift and go to state 441
    ASIGNACION                     shift and go to state 332
    DECLARACIONES                  shift and go to state 333
    CONDICIONIF                    shift and go to state 334
    RAISE                          shift and go to state 335
    BEGINEND                       shift and go to state 336
    CALLPROCEDURE                  shift and go to state 337
    RETURN                         shift and go to state 338
    CASE                           shift and go to state 339

state 459

    (29) CALLPROCEDURE -> call id . para LEXP parc

    para            shift and go to state 545


state 460

    (24) RETURN -> return LEXP .
    (218) LEXP -> LEXP . coma EXP

    ptcoma          reduce using rule 24 (RETURN -> return LEXP .)
    coma            shift and go to state 164


state 461

    (25) RETURN -> return id . para LEXP parc
    (314) EXP -> id . para LEXP parc
    (315) EXP -> id . para parc
    (326) EXP -> id .

    para            shift and go to state 546
    mas             reduce using rule 326 (EXP -> id .)
    menos           reduce using rule 326 (EXP -> id .)
    multiplicacion  reduce using rule 326 (EXP -> id .)
    division        reduce using rule 326 (EXP -> id .)
    modulo          reduce using rule 326 (EXP -> id .)
    elevado         reduce using rule 326 (EXP -> id .)
    and             reduce using rule 326 (EXP -> id .)
    or              reduce using rule 326 (EXP -> id .)
    mayor           reduce using rule 326 (EXP -> id .)
    menor           reduce using rule 326 (EXP -> id .)
    mayor_igual     reduce using rule 326 (EXP -> id .)
    menor_igual     reduce using rule 326 (EXP -> id .)
    igual           reduce using rule 326 (EXP -> id .)
    diferente1      reduce using rule 326 (EXP -> id .)
    diferente2      reduce using rule 326 (EXP -> id .)
    between         reduce using rule 326 (EXP -> id .)
    is              reduce using rule 326 (EXP -> id .)
    isnull          reduce using rule 326 (EXP -> id .)
    notnull         reduce using rule 326 (EXP -> id .)
    as              reduce using rule 326 (EXP -> id .)
    cadenaString    reduce using rule 326 (EXP -> id .)
    id              reduce using rule 326 (EXP -> id .)
    cadena          reduce using rule 326 (EXP -> id .)
    in              reduce using rule 326 (EXP -> id .)
    not             reduce using rule 326 (EXP -> id .)
    like            reduce using rule 326 (EXP -> id .)
    coma            reduce using rule 326 (EXP -> id .)
    ptcoma          reduce using rule 326 (EXP -> id .)


state 462

    (107) INSERT -> insert into id values para . LEXP parc
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 547
    EXP                            shift and go to state 79
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 463

    (108) INSERT -> insert into id para LEXP . parc values para LEXP parc
    (218) LEXP -> LEXP . coma EXP

    parc            shift and go to state 548
    coma            shift and go to state 164


state 464

    (76) CASE -> case LEXP LISTAWHEN ELSEF end . case

    case            shift and go to state 549


state 465

    (77) CASE -> case LEXP LISTAWHEN end case .

    use             reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    select          reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    create          reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    update          reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    delete          reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    alter           reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    drop            reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    insert          reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    case            reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    show            reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    id              reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    if              reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    $end            reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    r_from          reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    coma            reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    where           reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    group           reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    having          reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    union           reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    intersect       reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    except          reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    order           reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    limit           reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    offset          reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    ptcoma          reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    mas             reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    menos           reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    multiplicacion  reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    division        reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    modulo          reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    elevado         reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    and             reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    or              reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    mayor           reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    menor           reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    mayor_igual     reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    menor_igual     reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    igual           reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    diferente1      reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    diferente2      reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    between         reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    is              reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    isnull          reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    notnull         reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    as              reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    cadenaString    reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    cadena          reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    in              reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    not             reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    like            reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    then            reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    when            reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    parc            reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    end             reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    else            reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    constraint      reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    unique          reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    check           reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    default         reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    null            reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    primary         reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    references      reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    asc             reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)
    desc            reduce using rule 77 (CASE -> case LEXP LISTAWHEN end case .)


state 466

    (75) ELSEF -> else LISTACONTENIDO .
    (80) LISTACONTENIDO -> LISTACONTENIDO . CONTENIDO
    (82) CONTENIDO -> . ASIGNACION ptcoma
    (83) CONTENIDO -> . DECLARACIONES ptcoma
    (84) CONTENIDO -> . CONDICIONIF ptcoma
    (85) CONTENIDO -> . RAISE ptcoma
    (86) CONTENIDO -> . BEGINEND ptcoma
    (87) CONTENIDO -> . CALLPROCEDURE ptcoma
    (88) CONTENIDO -> . RETURN ptcoma
    (89) CONTENIDO -> . CASE ptcoma
    (67) ASIGNACION -> . id dospuntos igual EXP
    (68) ASIGNACION -> . id igual EXP
    (59) DECLARACIONES -> . id TIPO not null ASIG
    (60) DECLARACIONES -> . id TIPO ASIG
    (61) DECLARACIONES -> . id constant TIPO not null ASIG
    (62) DECLARACIONES -> . id constant TIPO ASIG
    (69) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (70) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (71) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (72) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (90) RAISE -> . raise LEVEL FORMAT
    (91) RAISE -> . raise LEVEL EXP
    (92) RAISE -> . raise LEVEL
    (93) RAISE -> . raise
    (94) RAISE -> . raise LEVEL cadena coma id
    (44) BEGINEND -> . begin LISTACONTENIDO end
    (29) CALLPROCEDURE -> . call id para LEXP parc
    (24) RETURN -> . return LEXP
    (25) RETURN -> . return id para LEXP parc
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    end             reduce using rule 75 (ELSEF -> else LISTACONTENIDO .)
    id              shift and go to state 340
    if              shift and go to state 30
    raise           shift and go to state 341
    begin           shift and go to state 342
    call            shift and go to state 343
    return          shift and go to state 344
    case            shift and go to state 32

    CONTENIDO                      shift and go to state 441
    ASIGNACION                     shift and go to state 332
    DECLARACIONES                  shift and go to state 333
    CONDICIONIF                    shift and go to state 334
    RAISE                          shift and go to state 335
    BEGINEND                       shift and go to state 336
    CALLPROCEDURE                  shift and go to state 337
    RETURN                         shift and go to state 338
    CASE                           shift and go to state 339

state 467

    (105) WHEN -> when LEXP then LEXP .
    (218) LEXP -> LEXP . coma EXP

    end             reduce using rule 105 (WHEN -> when LEXP then LEXP .)
    else            reduce using rule 105 (WHEN -> when LEXP then LEXP .)
    when            reduce using rule 105 (WHEN -> when LEXP then LEXP .)
    coma            shift and go to state 164


state 468

    (104) WHEN -> when LEXP then LISTACONTENIDO .
    (80) LISTACONTENIDO -> LISTACONTENIDO . CONTENIDO
    (82) CONTENIDO -> . ASIGNACION ptcoma
    (83) CONTENIDO -> . DECLARACIONES ptcoma
    (84) CONTENIDO -> . CONDICIONIF ptcoma
    (85) CONTENIDO -> . RAISE ptcoma
    (86) CONTENIDO -> . BEGINEND ptcoma
    (87) CONTENIDO -> . CALLPROCEDURE ptcoma
    (88) CONTENIDO -> . RETURN ptcoma
    (89) CONTENIDO -> . CASE ptcoma
    (67) ASIGNACION -> . id dospuntos igual EXP
    (68) ASIGNACION -> . id igual EXP
    (59) DECLARACIONES -> . id TIPO not null ASIG
    (60) DECLARACIONES -> . id TIPO ASIG
    (61) DECLARACIONES -> . id constant TIPO not null ASIG
    (62) DECLARACIONES -> . id constant TIPO ASIG
    (69) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (70) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (71) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (72) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (90) RAISE -> . raise LEVEL FORMAT
    (91) RAISE -> . raise LEVEL EXP
    (92) RAISE -> . raise LEVEL
    (93) RAISE -> . raise
    (94) RAISE -> . raise LEVEL cadena coma id
    (44) BEGINEND -> . begin LISTACONTENIDO end
    (29) CALLPROCEDURE -> . call id para LEXP parc
    (24) RETURN -> . return LEXP
    (25) RETURN -> . return id para LEXP parc
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    end             reduce using rule 104 (WHEN -> when LEXP then LISTACONTENIDO .)
    else            reduce using rule 104 (WHEN -> when LEXP then LISTACONTENIDO .)
    when            reduce using rule 104 (WHEN -> when LEXP then LISTACONTENIDO .)
    id              shift and go to state 340
    if              shift and go to state 30
    raise           shift and go to state 341
    begin           shift and go to state 342
    call            shift and go to state 343
    return          shift and go to state 344
    case            shift and go to state 32

    CONTENIDO                      shift and go to state 441
    ASIGNACION                     shift and go to state 332
    DECLARACIONES                  shift and go to state 333
    CONDICIONIF                    shift and go to state 334
    RAISE                          shift and go to state 335
    BEGINEND                       shift and go to state 336
    CALLPROCEDURE                  shift and go to state 337
    RETURN                         shift and go to state 338
    CASE                           shift and go to state 339

state 469

    (89) CONTENIDO -> CASE . ptcoma
    (313) EXP -> CASE .

    ptcoma          shift and go to state 450
    mas             reduce using rule 313 (EXP -> CASE .)
    menos           reduce using rule 313 (EXP -> CASE .)
    multiplicacion  reduce using rule 313 (EXP -> CASE .)
    division        reduce using rule 313 (EXP -> CASE .)
    modulo          reduce using rule 313 (EXP -> CASE .)
    elevado         reduce using rule 313 (EXP -> CASE .)
    and             reduce using rule 313 (EXP -> CASE .)
    or              reduce using rule 313 (EXP -> CASE .)
    mayor           reduce using rule 313 (EXP -> CASE .)
    menor           reduce using rule 313 (EXP -> CASE .)
    mayor_igual     reduce using rule 313 (EXP -> CASE .)
    menor_igual     reduce using rule 313 (EXP -> CASE .)
    igual           reduce using rule 313 (EXP -> CASE .)
    diferente1      reduce using rule 313 (EXP -> CASE .)
    diferente2      reduce using rule 313 (EXP -> CASE .)
    between         reduce using rule 313 (EXP -> CASE .)
    is              reduce using rule 313 (EXP -> CASE .)
    isnull          reduce using rule 313 (EXP -> CASE .)
    notnull         reduce using rule 313 (EXP -> CASE .)
    as              reduce using rule 313 (EXP -> CASE .)
    cadenaString    reduce using rule 313 (EXP -> CASE .)
    id              reduce using rule 313 (EXP -> CASE .)
    cadena          reduce using rule 313 (EXP -> CASE .)
    in              reduce using rule 313 (EXP -> CASE .)
    not             reduce using rule 313 (EXP -> CASE .)
    like            reduce using rule 313 (EXP -> CASE .)
    coma            reduce using rule 313 (EXP -> CASE .)
    end             reduce using rule 313 (EXP -> CASE .)
    else            reduce using rule 313 (EXP -> CASE .)
    when            reduce using rule 313 (EXP -> CASE .)


state 470

    (314) EXP -> id . para LEXP parc
    (315) EXP -> id . para parc
    (326) EXP -> id .
    (67) ASIGNACION -> id . dospuntos igual EXP
    (68) ASIGNACION -> id . igual EXP
    (59) DECLARACIONES -> id . TIPO not null ASIG
    (60) DECLARACIONES -> id . TIPO ASIG
    (61) DECLARACIONES -> id . constant TIPO not null ASIG
    (62) DECLARACIONES -> id . constant TIPO ASIG
    (220) TIPO -> . interval cadena
    (221) TIPO -> . decimal para int coma int parc
    (222) TIPO -> . decimal para int parc
    (223) TIPO -> . decimal
    (224) TIPO -> . numeric para int coma int parc
    (225) TIPO -> . numeric para int parc
    (226) TIPO -> . numeric
    (227) TIPO -> . varchar para int parc
    (228) TIPO -> . timestamp para int parc
    (229) TIPO -> . character para int parc
    (230) TIPO -> . interval para int parc
    (231) TIPO -> . char para int parc
    (232) TIPO -> . time para int parc
    (233) TIPO -> . character varying para int parc
    (234) TIPO -> . id modulo rowtype
    (235) TIPO -> . idPunto modulo type
    (236) TIPO -> . timestamp para int parc without time zone
    (237) TIPO -> . timestamp para int parc with time zone
    (238) TIPO -> . time para int parc without time zone
    (239) TIPO -> . time para int parc with time zone
    (240) TIPO -> . interval para int parc cadena
    (241) TIPO -> . smallint
    (242) TIPO -> . integer
    (243) TIPO -> . r_int
    (244) TIPO -> . bigint
    (245) TIPO -> . real
    (246) TIPO -> . double precision
    (247) TIPO -> . money
    (248) TIPO -> . text
    (249) TIPO -> . timestamp
    (250) TIPO -> . date
    (251) TIPO -> . time
    (252) TIPO -> . interval
    (253) TIPO -> . boolean
    (254) TIPO -> . record
    (255) TIPO -> . varchar
    (256) TIPO -> . timestamp without time zone
    (257) TIPO -> . timestamp with time zone
    (258) TIPO -> . time without time zone
    (259) TIPO -> . time with time zone
    (260) TIPO -> . id

  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for id resolved as shift
    para            shift and go to state 194
    mas             reduce using rule 326 (EXP -> id .)
    menos           reduce using rule 326 (EXP -> id .)
    multiplicacion  reduce using rule 326 (EXP -> id .)
    division        reduce using rule 326 (EXP -> id .)
    modulo          reduce using rule 326 (EXP -> id .)
    elevado         reduce using rule 326 (EXP -> id .)
    and             reduce using rule 326 (EXP -> id .)
    or              reduce using rule 326 (EXP -> id .)
    mayor           reduce using rule 326 (EXP -> id .)
    menor           reduce using rule 326 (EXP -> id .)
    mayor_igual     reduce using rule 326 (EXP -> id .)
    menor_igual     reduce using rule 326 (EXP -> id .)
    diferente1      reduce using rule 326 (EXP -> id .)
    diferente2      reduce using rule 326 (EXP -> id .)
    between         reduce using rule 326 (EXP -> id .)
    is              reduce using rule 326 (EXP -> id .)
    isnull          reduce using rule 326 (EXP -> id .)
    notnull         reduce using rule 326 (EXP -> id .)
    as              reduce using rule 326 (EXP -> id .)
    cadenaString    reduce using rule 326 (EXP -> id .)
    cadena          reduce using rule 326 (EXP -> id .)
    in              reduce using rule 326 (EXP -> id .)
    not             reduce using rule 326 (EXP -> id .)
    like            reduce using rule 326 (EXP -> id .)
    coma            reduce using rule 326 (EXP -> id .)
    end             reduce using rule 326 (EXP -> id .)
    else            reduce using rule 326 (EXP -> id .)
    when            reduce using rule 326 (EXP -> id .)
    dospuntos       shift and go to state 49
    igual           shift and go to state 50
    constant        shift and go to state 48
    interval        shift and go to state 51
    decimal         shift and go to state 52
    numeric         shift and go to state 53
    varchar         shift and go to state 54
    timestamp       shift and go to state 55
    character       shift and go to state 56
    char            shift and go to state 57
    time            shift and go to state 58
    id              shift and go to state 46
    idPunto         shift and go to state 59
    smallint        shift and go to state 60
    integer         shift and go to state 61
    r_int           shift and go to state 62
    bigint          shift and go to state 63
    real            shift and go to state 64
    double          shift and go to state 65
    money           shift and go to state 66
    text            shift and go to state 67
    date            shift and go to state 68
    boolean         shift and go to state 69
    record          shift and go to state 70

  ! igual           [ reduce using rule 326 (EXP -> id .) ]
  ! id              [ reduce using rule 326 (EXP -> id .) ]

    TIPO                           shift and go to state 47

state 471

    (133) SHOW -> show tables para id parc .

    ptcoma          reduce using rule 133 (SHOW -> show tables para id parc .)


state 472

    (61) DECLARACIONES -> id constant TIPO not null ASIG .

    ptcoma          reduce using rule 61 (DECLARACIONES -> id constant TIPO not null ASIG .)


state 473

    (240) TIPO -> interval para int parc cadena .

    not             reduce using rule 240 (TIPO -> interval para int parc cadena .)
    default         reduce using rule 240 (TIPO -> interval para int parc cadena .)
    dospuntos       reduce using rule 240 (TIPO -> interval para int parc cadena .)
    igual           reduce using rule 240 (TIPO -> interval para int parc cadena .)
    ptcoma          reduce using rule 240 (TIPO -> interval para int parc cadena .)
    r_from          reduce using rule 240 (TIPO -> interval para int parc cadena .)
    coma            reduce using rule 240 (TIPO -> interval para int parc cadena .)
    where           reduce using rule 240 (TIPO -> interval para int parc cadena .)
    group           reduce using rule 240 (TIPO -> interval para int parc cadena .)
    having          reduce using rule 240 (TIPO -> interval para int parc cadena .)
    union           reduce using rule 240 (TIPO -> interval para int parc cadena .)
    intersect       reduce using rule 240 (TIPO -> interval para int parc cadena .)
    except          reduce using rule 240 (TIPO -> interval para int parc cadena .)
    order           reduce using rule 240 (TIPO -> interval para int parc cadena .)
    limit           reduce using rule 240 (TIPO -> interval para int parc cadena .)
    offset          reduce using rule 240 (TIPO -> interval para int parc cadena .)
    mas             reduce using rule 240 (TIPO -> interval para int parc cadena .)
    menos           reduce using rule 240 (TIPO -> interval para int parc cadena .)
    multiplicacion  reduce using rule 240 (TIPO -> interval para int parc cadena .)
    division        reduce using rule 240 (TIPO -> interval para int parc cadena .)
    modulo          reduce using rule 240 (TIPO -> interval para int parc cadena .)
    elevado         reduce using rule 240 (TIPO -> interval para int parc cadena .)
    and             reduce using rule 240 (TIPO -> interval para int parc cadena .)
    or              reduce using rule 240 (TIPO -> interval para int parc cadena .)
    mayor           reduce using rule 240 (TIPO -> interval para int parc cadena .)
    menor           reduce using rule 240 (TIPO -> interval para int parc cadena .)
    mayor_igual     reduce using rule 240 (TIPO -> interval para int parc cadena .)
    menor_igual     reduce using rule 240 (TIPO -> interval para int parc cadena .)
    diferente1      reduce using rule 240 (TIPO -> interval para int parc cadena .)
    diferente2      reduce using rule 240 (TIPO -> interval para int parc cadena .)
    between         reduce using rule 240 (TIPO -> interval para int parc cadena .)
    is              reduce using rule 240 (TIPO -> interval para int parc cadena .)
    isnull          reduce using rule 240 (TIPO -> interval para int parc cadena .)
    notnull         reduce using rule 240 (TIPO -> interval para int parc cadena .)
    as              reduce using rule 240 (TIPO -> interval para int parc cadena .)
    cadenaString    reduce using rule 240 (TIPO -> interval para int parc cadena .)
    id              reduce using rule 240 (TIPO -> interval para int parc cadena .)
    cadena          reduce using rule 240 (TIPO -> interval para int parc cadena .)
    in              reduce using rule 240 (TIPO -> interval para int parc cadena .)
    like            reduce using rule 240 (TIPO -> interval para int parc cadena .)
    then            reduce using rule 240 (TIPO -> interval para int parc cadena .)
    when            reduce using rule 240 (TIPO -> interval para int parc cadena .)
    parc            reduce using rule 240 (TIPO -> interval para int parc cadena .)
    end             reduce using rule 240 (TIPO -> interval para int parc cadena .)
    else            reduce using rule 240 (TIPO -> interval para int parc cadena .)
    constraint      reduce using rule 240 (TIPO -> interval para int parc cadena .)
    unique          reduce using rule 240 (TIPO -> interval para int parc cadena .)
    check           reduce using rule 240 (TIPO -> interval para int parc cadena .)
    null            reduce using rule 240 (TIPO -> interval para int parc cadena .)
    primary         reduce using rule 240 (TIPO -> interval para int parc cadena .)
    references      reduce using rule 240 (TIPO -> interval para int parc cadena .)
    asc             reduce using rule 240 (TIPO -> interval para int parc cadena .)
    desc            reduce using rule 240 (TIPO -> interval para int parc cadena .)


state 474

    (221) TIPO -> decimal para int coma int . parc

    parc            shift and go to state 550


state 475

    (224) TIPO -> numeric para int coma int . parc

    parc            shift and go to state 551


state 476

    (236) TIPO -> timestamp para int parc without . time zone

    time            shift and go to state 552


state 477

    (237) TIPO -> timestamp para int parc with . time zone

    time            shift and go to state 553


state 478

    (233) TIPO -> character varying para int parc .

    not             reduce using rule 233 (TIPO -> character varying para int parc .)
    default         reduce using rule 233 (TIPO -> character varying para int parc .)
    dospuntos       reduce using rule 233 (TIPO -> character varying para int parc .)
    igual           reduce using rule 233 (TIPO -> character varying para int parc .)
    ptcoma          reduce using rule 233 (TIPO -> character varying para int parc .)
    r_from          reduce using rule 233 (TIPO -> character varying para int parc .)
    coma            reduce using rule 233 (TIPO -> character varying para int parc .)
    where           reduce using rule 233 (TIPO -> character varying para int parc .)
    group           reduce using rule 233 (TIPO -> character varying para int parc .)
    having          reduce using rule 233 (TIPO -> character varying para int parc .)
    union           reduce using rule 233 (TIPO -> character varying para int parc .)
    intersect       reduce using rule 233 (TIPO -> character varying para int parc .)
    except          reduce using rule 233 (TIPO -> character varying para int parc .)
    order           reduce using rule 233 (TIPO -> character varying para int parc .)
    limit           reduce using rule 233 (TIPO -> character varying para int parc .)
    offset          reduce using rule 233 (TIPO -> character varying para int parc .)
    mas             reduce using rule 233 (TIPO -> character varying para int parc .)
    menos           reduce using rule 233 (TIPO -> character varying para int parc .)
    multiplicacion  reduce using rule 233 (TIPO -> character varying para int parc .)
    division        reduce using rule 233 (TIPO -> character varying para int parc .)
    modulo          reduce using rule 233 (TIPO -> character varying para int parc .)
    elevado         reduce using rule 233 (TIPO -> character varying para int parc .)
    and             reduce using rule 233 (TIPO -> character varying para int parc .)
    or              reduce using rule 233 (TIPO -> character varying para int parc .)
    mayor           reduce using rule 233 (TIPO -> character varying para int parc .)
    menor           reduce using rule 233 (TIPO -> character varying para int parc .)
    mayor_igual     reduce using rule 233 (TIPO -> character varying para int parc .)
    menor_igual     reduce using rule 233 (TIPO -> character varying para int parc .)
    diferente1      reduce using rule 233 (TIPO -> character varying para int parc .)
    diferente2      reduce using rule 233 (TIPO -> character varying para int parc .)
    between         reduce using rule 233 (TIPO -> character varying para int parc .)
    is              reduce using rule 233 (TIPO -> character varying para int parc .)
    isnull          reduce using rule 233 (TIPO -> character varying para int parc .)
    notnull         reduce using rule 233 (TIPO -> character varying para int parc .)
    as              reduce using rule 233 (TIPO -> character varying para int parc .)
    cadenaString    reduce using rule 233 (TIPO -> character varying para int parc .)
    id              reduce using rule 233 (TIPO -> character varying para int parc .)
    cadena          reduce using rule 233 (TIPO -> character varying para int parc .)
    in              reduce using rule 233 (TIPO -> character varying para int parc .)
    like            reduce using rule 233 (TIPO -> character varying para int parc .)
    then            reduce using rule 233 (TIPO -> character varying para int parc .)
    when            reduce using rule 233 (TIPO -> character varying para int parc .)
    parc            reduce using rule 233 (TIPO -> character varying para int parc .)
    end             reduce using rule 233 (TIPO -> character varying para int parc .)
    else            reduce using rule 233 (TIPO -> character varying para int parc .)
    constraint      reduce using rule 233 (TIPO -> character varying para int parc .)
    unique          reduce using rule 233 (TIPO -> character varying para int parc .)
    check           reduce using rule 233 (TIPO -> character varying para int parc .)
    null            reduce using rule 233 (TIPO -> character varying para int parc .)
    primary         reduce using rule 233 (TIPO -> character varying para int parc .)
    references      reduce using rule 233 (TIPO -> character varying para int parc .)
    asc             reduce using rule 233 (TIPO -> character varying para int parc .)
    desc            reduce using rule 233 (TIPO -> character varying para int parc .)


state 479

    (238) TIPO -> time para int parc without . time zone

    time            shift and go to state 554


state 480

    (239) TIPO -> time para int parc with . time zone

    time            shift and go to state 555


state 481

    (217) EXIST -> not exist para SELECT . parc

    parc            shift and go to state 556


state 482

    (216) EXIST -> exist para SELECT parc .

    ptcoma          reduce using rule 216 (EXIST -> exist para SELECT parc .)
    r_from          reduce using rule 216 (EXIST -> exist para SELECT parc .)
    coma            reduce using rule 216 (EXIST -> exist para SELECT parc .)
    where           reduce using rule 216 (EXIST -> exist para SELECT parc .)
    group           reduce using rule 216 (EXIST -> exist para SELECT parc .)
    having          reduce using rule 216 (EXIST -> exist para SELECT parc .)
    union           reduce using rule 216 (EXIST -> exist para SELECT parc .)
    intersect       reduce using rule 216 (EXIST -> exist para SELECT parc .)
    except          reduce using rule 216 (EXIST -> exist para SELECT parc .)
    order           reduce using rule 216 (EXIST -> exist para SELECT parc .)
    limit           reduce using rule 216 (EXIST -> exist para SELECT parc .)
    offset          reduce using rule 216 (EXIST -> exist para SELECT parc .)
    mas             reduce using rule 216 (EXIST -> exist para SELECT parc .)
    menos           reduce using rule 216 (EXIST -> exist para SELECT parc .)
    multiplicacion  reduce using rule 216 (EXIST -> exist para SELECT parc .)
    division        reduce using rule 216 (EXIST -> exist para SELECT parc .)
    modulo          reduce using rule 216 (EXIST -> exist para SELECT parc .)
    elevado         reduce using rule 216 (EXIST -> exist para SELECT parc .)
    and             reduce using rule 216 (EXIST -> exist para SELECT parc .)
    or              reduce using rule 216 (EXIST -> exist para SELECT parc .)
    mayor           reduce using rule 216 (EXIST -> exist para SELECT parc .)
    menor           reduce using rule 216 (EXIST -> exist para SELECT parc .)
    mayor_igual     reduce using rule 216 (EXIST -> exist para SELECT parc .)
    menor_igual     reduce using rule 216 (EXIST -> exist para SELECT parc .)
    igual           reduce using rule 216 (EXIST -> exist para SELECT parc .)
    diferente1      reduce using rule 216 (EXIST -> exist para SELECT parc .)
    diferente2      reduce using rule 216 (EXIST -> exist para SELECT parc .)
    between         reduce using rule 216 (EXIST -> exist para SELECT parc .)
    is              reduce using rule 216 (EXIST -> exist para SELECT parc .)
    isnull          reduce using rule 216 (EXIST -> exist para SELECT parc .)
    notnull         reduce using rule 216 (EXIST -> exist para SELECT parc .)
    as              reduce using rule 216 (EXIST -> exist para SELECT parc .)
    cadenaString    reduce using rule 216 (EXIST -> exist para SELECT parc .)
    id              reduce using rule 216 (EXIST -> exist para SELECT parc .)
    cadena          reduce using rule 216 (EXIST -> exist para SELECT parc .)
    in              reduce using rule 216 (EXIST -> exist para SELECT parc .)
    not             reduce using rule 216 (EXIST -> exist para SELECT parc .)
    like            reduce using rule 216 (EXIST -> exist para SELECT parc .)
    then            reduce using rule 216 (EXIST -> exist para SELECT parc .)
    when            reduce using rule 216 (EXIST -> exist para SELECT parc .)
    parc            reduce using rule 216 (EXIST -> exist para SELECT parc .)
    end             reduce using rule 216 (EXIST -> exist para SELECT parc .)
    else            reduce using rule 216 (EXIST -> exist para SELECT parc .)
    constraint      reduce using rule 216 (EXIST -> exist para SELECT parc .)
    unique          reduce using rule 216 (EXIST -> exist para SELECT parc .)
    check           reduce using rule 216 (EXIST -> exist para SELECT parc .)
    default         reduce using rule 216 (EXIST -> exist para SELECT parc .)
    null            reduce using rule 216 (EXIST -> exist para SELECT parc .)
    primary         reduce using rule 216 (EXIST -> exist para SELECT parc .)
    references      reduce using rule 216 (EXIST -> exist para SELECT parc .)
    asc             reduce using rule 216 (EXIST -> exist para SELECT parc .)
    desc            reduce using rule 216 (EXIST -> exist para SELECT parc .)


state 483

    (184) SELECT -> select distinct LEXP r_from LEXP WHERE . GROUP HAVING COMBINING ORDER LIMIT
    (203) GROUP -> . group by LEXP
    (204) GROUP -> .

  ! shift/reduce conflict for group resolved as shift
    group           shift and go to state 257
    r_from          reduce using rule 204 (GROUP -> .)
    coma            reduce using rule 204 (GROUP -> .)
    where           reduce using rule 204 (GROUP -> .)
    having          reduce using rule 204 (GROUP -> .)
    union           reduce using rule 204 (GROUP -> .)
    intersect       reduce using rule 204 (GROUP -> .)
    except          reduce using rule 204 (GROUP -> .)
    order           reduce using rule 204 (GROUP -> .)
    limit           reduce using rule 204 (GROUP -> .)
    offset          reduce using rule 204 (GROUP -> .)
    ptcoma          reduce using rule 204 (GROUP -> .)
    mas             reduce using rule 204 (GROUP -> .)
    menos           reduce using rule 204 (GROUP -> .)
    multiplicacion  reduce using rule 204 (GROUP -> .)
    division        reduce using rule 204 (GROUP -> .)
    modulo          reduce using rule 204 (GROUP -> .)
    elevado         reduce using rule 204 (GROUP -> .)
    and             reduce using rule 204 (GROUP -> .)
    or              reduce using rule 204 (GROUP -> .)
    mayor           reduce using rule 204 (GROUP -> .)
    menor           reduce using rule 204 (GROUP -> .)
    mayor_igual     reduce using rule 204 (GROUP -> .)
    menor_igual     reduce using rule 204 (GROUP -> .)
    igual           reduce using rule 204 (GROUP -> .)
    diferente1      reduce using rule 204 (GROUP -> .)
    diferente2      reduce using rule 204 (GROUP -> .)
    between         reduce using rule 204 (GROUP -> .)
    is              reduce using rule 204 (GROUP -> .)
    isnull          reduce using rule 204 (GROUP -> .)
    notnull         reduce using rule 204 (GROUP -> .)
    as              reduce using rule 204 (GROUP -> .)
    cadenaString    reduce using rule 204 (GROUP -> .)
    id              reduce using rule 204 (GROUP -> .)
    cadena          reduce using rule 204 (GROUP -> .)
    in              reduce using rule 204 (GROUP -> .)
    not             reduce using rule 204 (GROUP -> .)
    like            reduce using rule 204 (GROUP -> .)
    then            reduce using rule 204 (GROUP -> .)
    when            reduce using rule 204 (GROUP -> .)
    parc            reduce using rule 204 (GROUP -> .)
    end             reduce using rule 204 (GROUP -> .)
    else            reduce using rule 204 (GROUP -> .)
    constraint      reduce using rule 204 (GROUP -> .)
    unique          reduce using rule 204 (GROUP -> .)
    check           reduce using rule 204 (GROUP -> .)
    default         reduce using rule 204 (GROUP -> .)
    null            reduce using rule 204 (GROUP -> .)
    primary         reduce using rule 204 (GROUP -> .)
    references      reduce using rule 204 (GROUP -> .)
    asc             reduce using rule 204 (GROUP -> .)
    desc            reduce using rule 204 (GROUP -> .)

  ! group           [ reduce using rule 204 (GROUP -> .) ]

    GROUP                          shift and go to state 557

state 484

    (185) SELECT -> select LEXP r_from LEXP WHERE GROUP . HAVING COMBINING ORDER LIMIT
    (205) HAVING -> . having EXP
    (206) HAVING -> .

  ! shift/reduce conflict for having resolved as shift
    having          shift and go to state 378
    r_from          reduce using rule 206 (HAVING -> .)
    coma            reduce using rule 206 (HAVING -> .)
    where           reduce using rule 206 (HAVING -> .)
    group           reduce using rule 206 (HAVING -> .)
    union           reduce using rule 206 (HAVING -> .)
    intersect       reduce using rule 206 (HAVING -> .)
    except          reduce using rule 206 (HAVING -> .)
    order           reduce using rule 206 (HAVING -> .)
    limit           reduce using rule 206 (HAVING -> .)
    offset          reduce using rule 206 (HAVING -> .)
    ptcoma          reduce using rule 206 (HAVING -> .)
    mas             reduce using rule 206 (HAVING -> .)
    menos           reduce using rule 206 (HAVING -> .)
    multiplicacion  reduce using rule 206 (HAVING -> .)
    division        reduce using rule 206 (HAVING -> .)
    modulo          reduce using rule 206 (HAVING -> .)
    elevado         reduce using rule 206 (HAVING -> .)
    and             reduce using rule 206 (HAVING -> .)
    or              reduce using rule 206 (HAVING -> .)
    mayor           reduce using rule 206 (HAVING -> .)
    menor           reduce using rule 206 (HAVING -> .)
    mayor_igual     reduce using rule 206 (HAVING -> .)
    menor_igual     reduce using rule 206 (HAVING -> .)
    igual           reduce using rule 206 (HAVING -> .)
    diferente1      reduce using rule 206 (HAVING -> .)
    diferente2      reduce using rule 206 (HAVING -> .)
    between         reduce using rule 206 (HAVING -> .)
    is              reduce using rule 206 (HAVING -> .)
    isnull          reduce using rule 206 (HAVING -> .)
    notnull         reduce using rule 206 (HAVING -> .)
    as              reduce using rule 206 (HAVING -> .)
    cadenaString    reduce using rule 206 (HAVING -> .)
    id              reduce using rule 206 (HAVING -> .)
    cadena          reduce using rule 206 (HAVING -> .)
    in              reduce using rule 206 (HAVING -> .)
    not             reduce using rule 206 (HAVING -> .)
    like            reduce using rule 206 (HAVING -> .)
    then            reduce using rule 206 (HAVING -> .)
    when            reduce using rule 206 (HAVING -> .)
    parc            reduce using rule 206 (HAVING -> .)
    end             reduce using rule 206 (HAVING -> .)
    else            reduce using rule 206 (HAVING -> .)
    constraint      reduce using rule 206 (HAVING -> .)
    unique          reduce using rule 206 (HAVING -> .)
    check           reduce using rule 206 (HAVING -> .)
    default         reduce using rule 206 (HAVING -> .)
    null            reduce using rule 206 (HAVING -> .)
    primary         reduce using rule 206 (HAVING -> .)
    references      reduce using rule 206 (HAVING -> .)
    asc             reduce using rule 206 (HAVING -> .)
    desc            reduce using rule 206 (HAVING -> .)

  ! having          [ reduce using rule 206 (HAVING -> .) ]

    HAVING                         shift and go to state 558

state 485

    (186) SELECT -> select LEXP WHERE GROUP HAVING COMBINING . ORDER LIMIT
    (207) ORDER -> . order by LEXP ORD
    (208) ORDER -> . order by LEXP
    (209) ORDER -> .

  ! shift/reduce conflict for order resolved as shift
    order           shift and go to state 560
    r_from          reduce using rule 209 (ORDER -> .)
    coma            reduce using rule 209 (ORDER -> .)
    where           reduce using rule 209 (ORDER -> .)
    group           reduce using rule 209 (ORDER -> .)
    having          reduce using rule 209 (ORDER -> .)
    union           reduce using rule 209 (ORDER -> .)
    intersect       reduce using rule 209 (ORDER -> .)
    except          reduce using rule 209 (ORDER -> .)
    limit           reduce using rule 209 (ORDER -> .)
    offset          reduce using rule 209 (ORDER -> .)
    ptcoma          reduce using rule 209 (ORDER -> .)
    mas             reduce using rule 209 (ORDER -> .)
    menos           reduce using rule 209 (ORDER -> .)
    multiplicacion  reduce using rule 209 (ORDER -> .)
    division        reduce using rule 209 (ORDER -> .)
    modulo          reduce using rule 209 (ORDER -> .)
    elevado         reduce using rule 209 (ORDER -> .)
    and             reduce using rule 209 (ORDER -> .)
    or              reduce using rule 209 (ORDER -> .)
    mayor           reduce using rule 209 (ORDER -> .)
    menor           reduce using rule 209 (ORDER -> .)
    mayor_igual     reduce using rule 209 (ORDER -> .)
    menor_igual     reduce using rule 209 (ORDER -> .)
    igual           reduce using rule 209 (ORDER -> .)
    diferente1      reduce using rule 209 (ORDER -> .)
    diferente2      reduce using rule 209 (ORDER -> .)
    between         reduce using rule 209 (ORDER -> .)
    is              reduce using rule 209 (ORDER -> .)
    isnull          reduce using rule 209 (ORDER -> .)
    notnull         reduce using rule 209 (ORDER -> .)
    as              reduce using rule 209 (ORDER -> .)
    cadenaString    reduce using rule 209 (ORDER -> .)
    id              reduce using rule 209 (ORDER -> .)
    cadena          reduce using rule 209 (ORDER -> .)
    in              reduce using rule 209 (ORDER -> .)
    not             reduce using rule 209 (ORDER -> .)
    like            reduce using rule 209 (ORDER -> .)
    then            reduce using rule 209 (ORDER -> .)
    when            reduce using rule 209 (ORDER -> .)
    parc            reduce using rule 209 (ORDER -> .)
    end             reduce using rule 209 (ORDER -> .)
    else            reduce using rule 209 (ORDER -> .)
    constraint      reduce using rule 209 (ORDER -> .)
    unique          reduce using rule 209 (ORDER -> .)
    check           reduce using rule 209 (ORDER -> .)
    default         reduce using rule 209 (ORDER -> .)
    null            reduce using rule 209 (ORDER -> .)
    primary         reduce using rule 209 (ORDER -> .)
    references      reduce using rule 209 (ORDER -> .)
    asc             reduce using rule 209 (ORDER -> .)
    desc            reduce using rule 209 (ORDER -> .)

  ! order           [ reduce using rule 209 (ORDER -> .) ]

    ORDER                          shift and go to state 559

state 486

    (198) COMBINING -> union . EXP
    (199) COMBINING -> union . all EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    all             shift and go to state 562
    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 561
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 487

    (200) COMBINING -> intersect . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 563
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 488

    (201) COMBINING -> except . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 564
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 489

    (205) HAVING -> having EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    r_from          reduce using rule 205 (HAVING -> having EXP .)
    coma            reduce using rule 205 (HAVING -> having EXP .)
    where           reduce using rule 205 (HAVING -> having EXP .)
    group           reduce using rule 205 (HAVING -> having EXP .)
    having          reduce using rule 205 (HAVING -> having EXP .)
    union           reduce using rule 205 (HAVING -> having EXP .)
    intersect       reduce using rule 205 (HAVING -> having EXP .)
    except          reduce using rule 205 (HAVING -> having EXP .)
    order           reduce using rule 205 (HAVING -> having EXP .)
    limit           reduce using rule 205 (HAVING -> having EXP .)
    offset          reduce using rule 205 (HAVING -> having EXP .)
    ptcoma          reduce using rule 205 (HAVING -> having EXP .)
    then            reduce using rule 205 (HAVING -> having EXP .)
    when            reduce using rule 205 (HAVING -> having EXP .)
    parc            reduce using rule 205 (HAVING -> having EXP .)
    end             reduce using rule 205 (HAVING -> having EXP .)
    else            reduce using rule 205 (HAVING -> having EXP .)
    constraint      reduce using rule 205 (HAVING -> having EXP .)
    unique          reduce using rule 205 (HAVING -> having EXP .)
    check           reduce using rule 205 (HAVING -> having EXP .)
    default         reduce using rule 205 (HAVING -> having EXP .)
    null            reduce using rule 205 (HAVING -> having EXP .)
    primary         reduce using rule 205 (HAVING -> having EXP .)
    references      reduce using rule 205 (HAVING -> having EXP .)
    asc             reduce using rule 205 (HAVING -> having EXP .)
    desc            reduce using rule 205 (HAVING -> having EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170
    and             shift and go to state 171
    or              shift and go to state 172
    mayor           shift and go to state 173
    menor           shift and go to state 174
    mayor_igual     shift and go to state 175
    menor_igual     shift and go to state 176
    igual           shift and go to state 177
    diferente1      shift and go to state 178
    diferente2      shift and go to state 179
    between         shift and go to state 180
    is              shift and go to state 181
    isnull          shift and go to state 183
    notnull         shift and go to state 184
    as              shift and go to state 185
    cadenaString    shift and go to state 186
    id              shift and go to state 187
    cadena          shift and go to state 188
    in              shift and go to state 189
    not             shift and go to state 182
    like            shift and go to state 190

  ! mas             [ reduce using rule 205 (HAVING -> having EXP .) ]
  ! menos           [ reduce using rule 205 (HAVING -> having EXP .) ]
  ! multiplicacion  [ reduce using rule 205 (HAVING -> having EXP .) ]
  ! division        [ reduce using rule 205 (HAVING -> having EXP .) ]
  ! modulo          [ reduce using rule 205 (HAVING -> having EXP .) ]
  ! elevado         [ reduce using rule 205 (HAVING -> having EXP .) ]
  ! and             [ reduce using rule 205 (HAVING -> having EXP .) ]
  ! or              [ reduce using rule 205 (HAVING -> having EXP .) ]
  ! mayor           [ reduce using rule 205 (HAVING -> having EXP .) ]
  ! menor           [ reduce using rule 205 (HAVING -> having EXP .) ]
  ! mayor_igual     [ reduce using rule 205 (HAVING -> having EXP .) ]
  ! menor_igual     [ reduce using rule 205 (HAVING -> having EXP .) ]
  ! igual           [ reduce using rule 205 (HAVING -> having EXP .) ]
  ! diferente1      [ reduce using rule 205 (HAVING -> having EXP .) ]
  ! diferente2      [ reduce using rule 205 (HAVING -> having EXP .) ]
  ! between         [ reduce using rule 205 (HAVING -> having EXP .) ]
  ! is              [ reduce using rule 205 (HAVING -> having EXP .) ]
  ! isnull          [ reduce using rule 205 (HAVING -> having EXP .) ]
  ! notnull         [ reduce using rule 205 (HAVING -> having EXP .) ]
  ! as              [ reduce using rule 205 (HAVING -> having EXP .) ]
  ! cadenaString    [ reduce using rule 205 (HAVING -> having EXP .) ]
  ! id              [ reduce using rule 205 (HAVING -> having EXP .) ]
  ! cadena          [ reduce using rule 205 (HAVING -> having EXP .) ]
  ! in              [ reduce using rule 205 (HAVING -> having EXP .) ]
  ! not             [ reduce using rule 205 (HAVING -> having EXP .) ]
  ! like            [ reduce using rule 205 (HAVING -> having EXP .) ]


state 490

    (203) GROUP -> group by LEXP .
    (218) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    r_from          reduce using rule 203 (GROUP -> group by LEXP .)
    where           reduce using rule 203 (GROUP -> group by LEXP .)
    group           reduce using rule 203 (GROUP -> group by LEXP .)
    having          reduce using rule 203 (GROUP -> group by LEXP .)
    union           reduce using rule 203 (GROUP -> group by LEXP .)
    intersect       reduce using rule 203 (GROUP -> group by LEXP .)
    except          reduce using rule 203 (GROUP -> group by LEXP .)
    order           reduce using rule 203 (GROUP -> group by LEXP .)
    limit           reduce using rule 203 (GROUP -> group by LEXP .)
    offset          reduce using rule 203 (GROUP -> group by LEXP .)
    ptcoma          reduce using rule 203 (GROUP -> group by LEXP .)
    mas             reduce using rule 203 (GROUP -> group by LEXP .)
    menos           reduce using rule 203 (GROUP -> group by LEXP .)
    multiplicacion  reduce using rule 203 (GROUP -> group by LEXP .)
    division        reduce using rule 203 (GROUP -> group by LEXP .)
    modulo          reduce using rule 203 (GROUP -> group by LEXP .)
    elevado         reduce using rule 203 (GROUP -> group by LEXP .)
    and             reduce using rule 203 (GROUP -> group by LEXP .)
    or              reduce using rule 203 (GROUP -> group by LEXP .)
    mayor           reduce using rule 203 (GROUP -> group by LEXP .)
    menor           reduce using rule 203 (GROUP -> group by LEXP .)
    mayor_igual     reduce using rule 203 (GROUP -> group by LEXP .)
    menor_igual     reduce using rule 203 (GROUP -> group by LEXP .)
    igual           reduce using rule 203 (GROUP -> group by LEXP .)
    diferente1      reduce using rule 203 (GROUP -> group by LEXP .)
    diferente2      reduce using rule 203 (GROUP -> group by LEXP .)
    between         reduce using rule 203 (GROUP -> group by LEXP .)
    is              reduce using rule 203 (GROUP -> group by LEXP .)
    isnull          reduce using rule 203 (GROUP -> group by LEXP .)
    notnull         reduce using rule 203 (GROUP -> group by LEXP .)
    as              reduce using rule 203 (GROUP -> group by LEXP .)
    cadenaString    reduce using rule 203 (GROUP -> group by LEXP .)
    id              reduce using rule 203 (GROUP -> group by LEXP .)
    cadena          reduce using rule 203 (GROUP -> group by LEXP .)
    in              reduce using rule 203 (GROUP -> group by LEXP .)
    not             reduce using rule 203 (GROUP -> group by LEXP .)
    like            reduce using rule 203 (GROUP -> group by LEXP .)
    then            reduce using rule 203 (GROUP -> group by LEXP .)
    when            reduce using rule 203 (GROUP -> group by LEXP .)
    parc            reduce using rule 203 (GROUP -> group by LEXP .)
    end             reduce using rule 203 (GROUP -> group by LEXP .)
    else            reduce using rule 203 (GROUP -> group by LEXP .)
    constraint      reduce using rule 203 (GROUP -> group by LEXP .)
    unique          reduce using rule 203 (GROUP -> group by LEXP .)
    check           reduce using rule 203 (GROUP -> group by LEXP .)
    default         reduce using rule 203 (GROUP -> group by LEXP .)
    null            reduce using rule 203 (GROUP -> group by LEXP .)
    primary         reduce using rule 203 (GROUP -> group by LEXP .)
    references      reduce using rule 203 (GROUP -> group by LEXP .)
    asc             reduce using rule 203 (GROUP -> group by LEXP .)
    desc            reduce using rule 203 (GROUP -> group by LEXP .)
    coma            shift and go to state 164

  ! coma            [ reduce using rule 203 (GROUP -> group by LEXP .) ]


state 491

    (308) EXP -> EXP is not distinct r_from . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 565
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 492

    (307) EXP -> EXP is distinct r_from EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    r_from          reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    coma            reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    where           reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    group           reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    having          reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    union           reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    intersect       reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    except          reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    order           reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    limit           reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    offset          reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    ptcoma          reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    and             reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    or              reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    between         reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    is              reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    isnull          reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    notnull         reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    as              reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    cadenaString    reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    id              reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    cadena          reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    in              reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    not             reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    like            reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    then            reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    when            reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    parc            reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    end             reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    else            reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    constraint      reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    unique          reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    check           reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    default         reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    null            reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    primary         reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    references      reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    asc             reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    desc            reduce using rule 307 (EXP -> EXP is distinct r_from EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170
    mayor           shift and go to state 173
    menor           shift and go to state 174
    mayor_igual     shift and go to state 175
    menor_igual     shift and go to state 176
    igual           shift and go to state 177
    diferente1      shift and go to state 178
    diferente2      shift and go to state 179

  ! mas             [ reduce using rule 307 (EXP -> EXP is distinct r_from EXP .) ]
  ! menos           [ reduce using rule 307 (EXP -> EXP is distinct r_from EXP .) ]
  ! multiplicacion  [ reduce using rule 307 (EXP -> EXP is distinct r_from EXP .) ]
  ! division        [ reduce using rule 307 (EXP -> EXP is distinct r_from EXP .) ]
  ! modulo          [ reduce using rule 307 (EXP -> EXP is distinct r_from EXP .) ]
  ! elevado         [ reduce using rule 307 (EXP -> EXP is distinct r_from EXP .) ]
  ! mayor           [ reduce using rule 307 (EXP -> EXP is distinct r_from EXP .) ]
  ! menor           [ reduce using rule 307 (EXP -> EXP is distinct r_from EXP .) ]
  ! mayor_igual     [ reduce using rule 307 (EXP -> EXP is distinct r_from EXP .) ]
  ! menor_igual     [ reduce using rule 307 (EXP -> EXP is distinct r_from EXP .) ]
  ! igual           [ reduce using rule 307 (EXP -> EXP is distinct r_from EXP .) ]
  ! diferente1      [ reduce using rule 307 (EXP -> EXP is distinct r_from EXP .) ]
  ! diferente2      [ reduce using rule 307 (EXP -> EXP is distinct r_from EXP .) ]
  ! and             [ shift and go to state 171 ]
  ! or              [ shift and go to state 172 ]
  ! between         [ shift and go to state 180 ]
  ! is              [ shift and go to state 181 ]
  ! isnull          [ shift and go to state 183 ]
  ! notnull         [ shift and go to state 184 ]
  ! as              [ shift and go to state 185 ]
  ! cadenaString    [ shift and go to state 186 ]
  ! id              [ shift and go to state 187 ]
  ! cadena          [ shift and go to state 188 ]
  ! in              [ shift and go to state 189 ]
  ! not             [ shift and go to state 182 ]
  ! like            [ shift and go to state 190 ]


state 493

    (303) EXP -> EXP not in para EXP . parc
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    parc            shift and go to state 566
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170
    and             shift and go to state 171
    or              shift and go to state 172
    mayor           shift and go to state 173
    menor           shift and go to state 174
    mayor_igual     shift and go to state 175
    menor_igual     shift and go to state 176
    igual           shift and go to state 177
    diferente1      shift and go to state 178
    diferente2      shift and go to state 179
    between         shift and go to state 180
    is              shift and go to state 181
    isnull          shift and go to state 183
    notnull         shift and go to state 184
    as              shift and go to state 185
    cadenaString    shift and go to state 186
    id              shift and go to state 187
    cadena          shift and go to state 188
    in              shift and go to state 189
    not             shift and go to state 182
    like            shift and go to state 190


state 494

    (306) EXP -> EXP not between symetric EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    r_from          reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    coma            reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    where           reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    group           reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    having          reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    union           reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    intersect       reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    except          reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    order           reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    limit           reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    offset          reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    ptcoma          reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    and             reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    or              reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    between         reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    is              reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    isnull          reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    notnull         reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    as              reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    cadenaString    reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    id              reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    cadena          reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    in              reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    not             reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    like            reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    then            reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    when            reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    parc            reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    end             reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    else            reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    constraint      reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    unique          reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    check           reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    default         reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    null            reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    primary         reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    references      reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    asc             reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    desc            reduce using rule 306 (EXP -> EXP not between symetric EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170
    mayor           shift and go to state 173
    menor           shift and go to state 174
    mayor_igual     shift and go to state 175
    menor_igual     shift and go to state 176
    igual           shift and go to state 177
    diferente1      shift and go to state 178
    diferente2      shift and go to state 179

  ! mas             [ reduce using rule 306 (EXP -> EXP not between symetric EXP .) ]
  ! menos           [ reduce using rule 306 (EXP -> EXP not between symetric EXP .) ]
  ! multiplicacion  [ reduce using rule 306 (EXP -> EXP not between symetric EXP .) ]
  ! division        [ reduce using rule 306 (EXP -> EXP not between symetric EXP .) ]
  ! modulo          [ reduce using rule 306 (EXP -> EXP not between symetric EXP .) ]
  ! elevado         [ reduce using rule 306 (EXP -> EXP not between symetric EXP .) ]
  ! mayor           [ reduce using rule 306 (EXP -> EXP not between symetric EXP .) ]
  ! menor           [ reduce using rule 306 (EXP -> EXP not between symetric EXP .) ]
  ! mayor_igual     [ reduce using rule 306 (EXP -> EXP not between symetric EXP .) ]
  ! menor_igual     [ reduce using rule 306 (EXP -> EXP not between symetric EXP .) ]
  ! igual           [ reduce using rule 306 (EXP -> EXP not between symetric EXP .) ]
  ! diferente1      [ reduce using rule 306 (EXP -> EXP not between symetric EXP .) ]
  ! diferente2      [ reduce using rule 306 (EXP -> EXP not between symetric EXP .) ]
  ! and             [ shift and go to state 171 ]
  ! or              [ shift and go to state 172 ]
  ! between         [ shift and go to state 180 ]
  ! is              [ shift and go to state 181 ]
  ! isnull          [ shift and go to state 183 ]
  ! notnull         [ shift and go to state 184 ]
  ! as              [ shift and go to state 185 ]
  ! cadenaString    [ shift and go to state 186 ]
  ! id              [ shift and go to state 187 ]
  ! cadena          [ shift and go to state 188 ]
  ! in              [ shift and go to state 189 ]
  ! not             [ shift and go to state 182 ]
  ! like            [ shift and go to state 190 ]


state 495

    (302) EXP -> EXP in para EXP parc .

    r_from          reduce using rule 302 (EXP -> EXP in para EXP parc .)
    coma            reduce using rule 302 (EXP -> EXP in para EXP parc .)
    where           reduce using rule 302 (EXP -> EXP in para EXP parc .)
    group           reduce using rule 302 (EXP -> EXP in para EXP parc .)
    having          reduce using rule 302 (EXP -> EXP in para EXP parc .)
    union           reduce using rule 302 (EXP -> EXP in para EXP parc .)
    intersect       reduce using rule 302 (EXP -> EXP in para EXP parc .)
    except          reduce using rule 302 (EXP -> EXP in para EXP parc .)
    order           reduce using rule 302 (EXP -> EXP in para EXP parc .)
    limit           reduce using rule 302 (EXP -> EXP in para EXP parc .)
    offset          reduce using rule 302 (EXP -> EXP in para EXP parc .)
    ptcoma          reduce using rule 302 (EXP -> EXP in para EXP parc .)
    mas             reduce using rule 302 (EXP -> EXP in para EXP parc .)
    menos           reduce using rule 302 (EXP -> EXP in para EXP parc .)
    multiplicacion  reduce using rule 302 (EXP -> EXP in para EXP parc .)
    division        reduce using rule 302 (EXP -> EXP in para EXP parc .)
    modulo          reduce using rule 302 (EXP -> EXP in para EXP parc .)
    elevado         reduce using rule 302 (EXP -> EXP in para EXP parc .)
    and             reduce using rule 302 (EXP -> EXP in para EXP parc .)
    or              reduce using rule 302 (EXP -> EXP in para EXP parc .)
    mayor           reduce using rule 302 (EXP -> EXP in para EXP parc .)
    menor           reduce using rule 302 (EXP -> EXP in para EXP parc .)
    mayor_igual     reduce using rule 302 (EXP -> EXP in para EXP parc .)
    menor_igual     reduce using rule 302 (EXP -> EXP in para EXP parc .)
    igual           reduce using rule 302 (EXP -> EXP in para EXP parc .)
    diferente1      reduce using rule 302 (EXP -> EXP in para EXP parc .)
    diferente2      reduce using rule 302 (EXP -> EXP in para EXP parc .)
    between         reduce using rule 302 (EXP -> EXP in para EXP parc .)
    is              reduce using rule 302 (EXP -> EXP in para EXP parc .)
    isnull          reduce using rule 302 (EXP -> EXP in para EXP parc .)
    notnull         reduce using rule 302 (EXP -> EXP in para EXP parc .)
    as              reduce using rule 302 (EXP -> EXP in para EXP parc .)
    cadenaString    reduce using rule 302 (EXP -> EXP in para EXP parc .)
    id              reduce using rule 302 (EXP -> EXP in para EXP parc .)
    cadena          reduce using rule 302 (EXP -> EXP in para EXP parc .)
    in              reduce using rule 302 (EXP -> EXP in para EXP parc .)
    not             reduce using rule 302 (EXP -> EXP in para EXP parc .)
    like            reduce using rule 302 (EXP -> EXP in para EXP parc .)
    then            reduce using rule 302 (EXP -> EXP in para EXP parc .)
    when            reduce using rule 302 (EXP -> EXP in para EXP parc .)
    parc            reduce using rule 302 (EXP -> EXP in para EXP parc .)
    end             reduce using rule 302 (EXP -> EXP in para EXP parc .)
    else            reduce using rule 302 (EXP -> EXP in para EXP parc .)
    constraint      reduce using rule 302 (EXP -> EXP in para EXP parc .)
    unique          reduce using rule 302 (EXP -> EXP in para EXP parc .)
    check           reduce using rule 302 (EXP -> EXP in para EXP parc .)
    default         reduce using rule 302 (EXP -> EXP in para EXP parc .)
    null            reduce using rule 302 (EXP -> EXP in para EXP parc .)
    primary         reduce using rule 302 (EXP -> EXP in para EXP parc .)
    references      reduce using rule 302 (EXP -> EXP in para EXP parc .)
    asc             reduce using rule 302 (EXP -> EXP in para EXP parc .)
    desc            reduce using rule 302 (EXP -> EXP in para EXP parc .)


state 496

    (319) EXP -> extract para FIELDS r_from timestamp . cadena parc

    cadena          shift and go to state 567


state 497

    (158) COLDEF -> id TIPO .
    (159) COLDEF -> id TIPO . LOPCOLUMN
    (160) LOPCOLUMN -> . LOPCOLUMN OPCOLUMN
    (161) LOPCOLUMN -> . OPCOLUMN
    (162) OPCOLUMN -> . constraint id unique
    (163) OPCOLUMN -> . unique
    (164) OPCOLUMN -> . constraint id check para CONDCHECK parc
    (165) OPCOLUMN -> . check para CONDCHECK parc
    (166) OPCOLUMN -> . default EXP
    (167) OPCOLUMN -> . not null
    (168) OPCOLUMN -> . null
    (169) OPCOLUMN -> . primary key
    (170) OPCOLUMN -> . references id

    parc            reduce using rule 158 (COLDEF -> id TIPO .)
    coma            reduce using rule 158 (COLDEF -> id TIPO .)
    constraint      shift and go to state 570
    unique          shift and go to state 571
    check           shift and go to state 572
    default         shift and go to state 573
    not             shift and go to state 574
    null            shift and go to state 575
    primary         shift and go to state 576
    references      shift and go to state 577

    LOPCOLUMN                      shift and go to state 568
    OPCOLUMN                       shift and go to state 569

state 498

    (152) CREATETABLE -> create table id para LDEF parc . ptcoma
    (153) CREATETABLE -> create table id para LDEF parc . HERENCIA ptcoma
    (182) HERENCIA -> . inherits para id parc

    ptcoma          shift and go to state 578
    inherits        shift and go to state 580

    HERENCIA                       shift and go to state 579

state 499

    (154) LDEF -> LDEF coma . COLDEF
    (156) COLDEF -> . OPCONST
    (157) COLDEF -> . constraint id OPCONST
    (158) COLDEF -> . id TIPO
    (159) COLDEF -> . id TIPO LOPCOLUMN
    (171) OPCONST -> . primary key para LEXP parc
    (172) OPCONST -> . foreign key para LEXP parc references id para LEXP parc
    (173) OPCONST -> . unique para LEXP parc
    (174) OPCONST -> . check para CONDCHECK parc

    constraint      shift and go to state 401
    id              shift and go to state 397
    primary         shift and go to state 402
    foreign         shift and go to state 403
    unique          shift and go to state 404
    check           shift and go to state 405

    COLDEF                         shift and go to state 581
    OPCONST                        shift and go to state 400

state 500

    (157) COLDEF -> constraint id . OPCONST
    (171) OPCONST -> . primary key para LEXP parc
    (172) OPCONST -> . foreign key para LEXP parc references id para LEXP parc
    (173) OPCONST -> . unique para LEXP parc
    (174) OPCONST -> . check para CONDCHECK parc

    primary         shift and go to state 402
    foreign         shift and go to state 403
    unique          shift and go to state 404
    check           shift and go to state 405

    OPCONST                        shift and go to state 582

state 501

    (171) OPCONST -> primary key . para LEXP parc

    para            shift and go to state 583


state 502

    (172) OPCONST -> foreign key . para LEXP parc references id para LEXP parc

    para            shift and go to state 584


state 503

    (173) OPCONST -> unique para . LEXP parc
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 585
    EXP                            shift and go to state 79
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 504

    (174) OPCONST -> check para . CONDCHECK parc
    (175) CONDCHECK -> . EXP mayor EXP
    (176) CONDCHECK -> . EXP menor EXP
    (177) CONDCHECK -> . EXP mayor_igual EXP
    (178) CONDCHECK -> . EXP menor_igual EXP
    (179) CONDCHECK -> . EXP igual EXP
    (180) CONDCHECK -> . EXP diferente1 EXP
    (181) CONDCHECK -> . EXP diferente2 EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    CONDCHECK                      shift and go to state 586
    EXP                            shift and go to state 587
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 505

    (183) CREATETYPE -> create type id as enum para . LEXP parc
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 588
    EXP                            shift and go to state 79
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 506

    (135) CREATEDB -> create RD if not exist id .
    (136) CREATEDB -> create RD if not exist id . OPCCDB
    (139) OPCCDB -> . PROPIETARIO
    (140) OPCCDB -> . MODO
    (141) OPCCDB -> . PROPIETARIO MODO
    (144) PROPIETARIO -> . owner igual id
    (145) PROPIETARIO -> . owner igual cadena
    (146) PROPIETARIO -> . owner igual cadenaString
    (147) PROPIETARIO -> . owner id
    (148) PROPIETARIO -> . owner cadena
    (149) PROPIETARIO -> . owner cadenaString
    (150) MODO -> . mode igual int
    (151) MODO -> . mode int

    ptcoma          reduce using rule 135 (CREATEDB -> create RD if not exist id .)
    owner           shift and go to state 310
    mode            shift and go to state 311

    OPCCDB                         shift and go to state 589
    PROPIETARIO                    shift and go to state 308
    MODO                           shift and go to state 309

state 507

    (144) PROPIETARIO -> owner igual id .

    mode            reduce using rule 144 (PROPIETARIO -> owner igual id .)
    ptcoma          reduce using rule 144 (PROPIETARIO -> owner igual id .)


state 508

    (145) PROPIETARIO -> owner igual cadena .

    mode            reduce using rule 145 (PROPIETARIO -> owner igual cadena .)
    ptcoma          reduce using rule 145 (PROPIETARIO -> owner igual cadena .)


state 509

    (146) PROPIETARIO -> owner igual cadenaString .

    mode            reduce using rule 146 (PROPIETARIO -> owner igual cadenaString .)
    ptcoma          reduce using rule 146 (PROPIETARIO -> owner igual cadenaString .)


state 510

    (150) MODO -> mode igual int .

    ptcoma          reduce using rule 150 (MODO -> mode igual int .)


state 511

    (45) CREATEINDEX -> create index id on id para . LEXP parc
    (48) CREATEINDEX -> create index id on id para . id ORDEN parc
    (49) CREATEINDEX -> create index id on id para . id id ORDEN parc
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    id              shift and go to state 590
    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 591
    EXP                            shift and go to state 79
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 512

    (47) CREATEINDEX -> create index id on id using . hash para LEXP parc

    hash            shift and go to state 592


state 513

    (46) CREATEINDEX -> create unique index id on id . para LEXP parc

    para            shift and go to state 593


state 514

    (40) LPARAM -> id TIPO .

    parc            reduce using rule 40 (LPARAM -> id TIPO .)
    coma            reduce using rule 40 (LPARAM -> id TIPO .)


state 515

    (30) PROCEDIMIENTOS -> create procedure id para LPARAM parc . LENGUAJE LCONTENIDOP
    (31) PROCEDIMIENTOS -> create procedure id para LPARAM parc . LCONTENIDOP LENGUAJE
    (41) LENGUAJE -> . language plpgsql
    (42) LENGUAJE -> . dolarn language plpgsql
    (43) LENGUAJE -> . dolarn language plpgsql ptcoma
    (32) LCONTENIDOP -> . LCONTENIDOP CONTENIDOP
    (33) LCONTENIDOP -> . CONTENIDOP
    (34) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn ptcoma
    (35) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn ptcoma
    (36) CONTENIDOP -> . LISTACONTENIDO
    (80) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (81) LISTACONTENIDO -> . CONTENIDO
    (82) CONTENIDO -> . ASIGNACION ptcoma
    (83) CONTENIDO -> . DECLARACIONES ptcoma
    (84) CONTENIDO -> . CONDICIONIF ptcoma
    (85) CONTENIDO -> . RAISE ptcoma
    (86) CONTENIDO -> . BEGINEND ptcoma
    (87) CONTENIDO -> . CALLPROCEDURE ptcoma
    (88) CONTENIDO -> . RETURN ptcoma
    (89) CONTENIDO -> . CASE ptcoma
    (67) ASIGNACION -> . id dospuntos igual EXP
    (68) ASIGNACION -> . id igual EXP
    (59) DECLARACIONES -> . id TIPO not null ASIG
    (60) DECLARACIONES -> . id TIPO ASIG
    (61) DECLARACIONES -> . id constant TIPO not null ASIG
    (62) DECLARACIONES -> . id constant TIPO ASIG
    (69) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (70) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (71) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (72) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (90) RAISE -> . raise LEVEL FORMAT
    (91) RAISE -> . raise LEVEL EXP
    (92) RAISE -> . raise LEVEL
    (93) RAISE -> . raise
    (94) RAISE -> . raise LEVEL cadena coma id
    (44) BEGINEND -> . begin LISTACONTENIDO end
    (29) CALLPROCEDURE -> . call id para LEXP parc
    (24) RETURN -> . return LEXP
    (25) RETURN -> . return id para LEXP parc
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    language        shift and go to state 596
    dolarn          shift and go to state 597
    as              shift and go to state 599
    do              shift and go to state 601
    id              shift and go to state 340
    if              shift and go to state 30
    raise           shift and go to state 341
    begin           shift and go to state 342
    call            shift and go to state 343
    return          shift and go to state 344
    case            shift and go to state 32

    LENGUAJE                       shift and go to state 594
    LCONTENIDOP                    shift and go to state 595
    CONTENIDOP                     shift and go to state 598
    LISTACONTENIDO                 shift and go to state 600
    CONTENIDO                      shift and go to state 331
    ASIGNACION                     shift and go to state 332
    DECLARACIONES                  shift and go to state 333
    CONDICIONIF                    shift and go to state 334
    RAISE                          shift and go to state 335
    BEGINEND                       shift and go to state 336
    CALLPROCEDURE                  shift and go to state 337
    RETURN                         shift and go to state 338
    CASE                           shift and go to state 339

state 516

    (37) LPARAM -> LPARAM coma . inout id TIPO
    (38) LPARAM -> LPARAM coma . id TIPO

    inout           shift and go to state 602
    id              shift and go to state 603


state 517

    (39) LPARAM -> inout id . TIPO
    (220) TIPO -> . interval cadena
    (221) TIPO -> . decimal para int coma int parc
    (222) TIPO -> . decimal para int parc
    (223) TIPO -> . decimal
    (224) TIPO -> . numeric para int coma int parc
    (225) TIPO -> . numeric para int parc
    (226) TIPO -> . numeric
    (227) TIPO -> . varchar para int parc
    (228) TIPO -> . timestamp para int parc
    (229) TIPO -> . character para int parc
    (230) TIPO -> . interval para int parc
    (231) TIPO -> . char para int parc
    (232) TIPO -> . time para int parc
    (233) TIPO -> . character varying para int parc
    (234) TIPO -> . id modulo rowtype
    (235) TIPO -> . idPunto modulo type
    (236) TIPO -> . timestamp para int parc without time zone
    (237) TIPO -> . timestamp para int parc with time zone
    (238) TIPO -> . time para int parc without time zone
    (239) TIPO -> . time para int parc with time zone
    (240) TIPO -> . interval para int parc cadena
    (241) TIPO -> . smallint
    (242) TIPO -> . integer
    (243) TIPO -> . r_int
    (244) TIPO -> . bigint
    (245) TIPO -> . real
    (246) TIPO -> . double precision
    (247) TIPO -> . money
    (248) TIPO -> . text
    (249) TIPO -> . timestamp
    (250) TIPO -> . date
    (251) TIPO -> . time
    (252) TIPO -> . interval
    (253) TIPO -> . boolean
    (254) TIPO -> . record
    (255) TIPO -> . varchar
    (256) TIPO -> . timestamp without time zone
    (257) TIPO -> . timestamp with time zone
    (258) TIPO -> . time without time zone
    (259) TIPO -> . time with time zone
    (260) TIPO -> . id

    interval        shift and go to state 51
    decimal         shift and go to state 52
    numeric         shift and go to state 53
    varchar         shift and go to state 54
    timestamp       shift and go to state 55
    character       shift and go to state 56
    char            shift and go to state 57
    time            shift and go to state 58
    id              shift and go to state 46
    idPunto         shift and go to state 59
    smallint        shift and go to state 60
    integer         shift and go to state 61
    r_int           shift and go to state 62
    bigint          shift and go to state 63
    real            shift and go to state 64
    double          shift and go to state 65
    money           shift and go to state 66
    text            shift and go to state 67
    date            shift and go to state 68
    boolean         shift and go to state 69
    record          shift and go to state 70

    TIPO                           shift and go to state 604

state 518

    (26) FUNCIONES -> create function id para LPARAM parc . RETURNP LENGUAJE LCONTENIDOP
    (27) FUNCIONES -> create function id para LPARAM parc . RETURNP LCONTENIDOP LENGUAJE
    (28) RETURNP -> . returns TIPO as dolarn

    returns         shift and go to state 606

    RETURNP                        shift and go to state 605

state 519

    (214) LCAMPOS -> id igual EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    coma            reduce using rule 214 (LCAMPOS -> id igual EXP .)
    where           reduce using rule 214 (LCAMPOS -> id igual EXP .)
    ptcoma          reduce using rule 214 (LCAMPOS -> id igual EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170
    and             shift and go to state 171
    or              shift and go to state 172
    mayor           shift and go to state 173
    menor           shift and go to state 174
    mayor_igual     shift and go to state 175
    menor_igual     shift and go to state 176
    igual           shift and go to state 177
    diferente1      shift and go to state 178
    diferente2      shift and go to state 179
    between         shift and go to state 180
    is              shift and go to state 181
    isnull          shift and go to state 183
    notnull         shift and go to state 184
    as              shift and go to state 185
    cadenaString    shift and go to state 186
    id              shift and go to state 187
    cadena          shift and go to state 188
    in              shift and go to state 189
    not             shift and go to state 182
    like            shift and go to state 190


state 520

    (213) LCAMPOS -> LCAMPOS coma id . igual EXP

    igual           shift and go to state 607


state 521

    (113) ALTER -> alter databases id rename to id .

    ptcoma          reduce using rule 113 (ALTER -> alter databases id rename to id .)


state 522

    (114) ALTER -> alter databases id owner to id .

    ptcoma          reduce using rule 114 (ALTER -> alter databases id owner to id .)


state 523

    (125) OP -> alter column id . set not null
    (126) OP -> alter column id . set null
    (131) OP -> alter column id . type TIPO

    set             shift and go to state 608
    type            shift and go to state 609


state 524

    (116) LOP -> LOP coma OP .

    coma            reduce using rule 116 (LOP -> LOP coma OP .)
    ptcoma          reduce using rule 116 (LOP -> LOP coma OP .)


state 525

    (118) OP -> add column id . TIPO
    (220) TIPO -> . interval cadena
    (221) TIPO -> . decimal para int coma int parc
    (222) TIPO -> . decimal para int parc
    (223) TIPO -> . decimal
    (224) TIPO -> . numeric para int coma int parc
    (225) TIPO -> . numeric para int parc
    (226) TIPO -> . numeric
    (227) TIPO -> . varchar para int parc
    (228) TIPO -> . timestamp para int parc
    (229) TIPO -> . character para int parc
    (230) TIPO -> . interval para int parc
    (231) TIPO -> . char para int parc
    (232) TIPO -> . time para int parc
    (233) TIPO -> . character varying para int parc
    (234) TIPO -> . id modulo rowtype
    (235) TIPO -> . idPunto modulo type
    (236) TIPO -> . timestamp para int parc without time zone
    (237) TIPO -> . timestamp para int parc with time zone
    (238) TIPO -> . time para int parc without time zone
    (239) TIPO -> . time para int parc with time zone
    (240) TIPO -> . interval para int parc cadena
    (241) TIPO -> . smallint
    (242) TIPO -> . integer
    (243) TIPO -> . r_int
    (244) TIPO -> . bigint
    (245) TIPO -> . real
    (246) TIPO -> . double precision
    (247) TIPO -> . money
    (248) TIPO -> . text
    (249) TIPO -> . timestamp
    (250) TIPO -> . date
    (251) TIPO -> . time
    (252) TIPO -> . interval
    (253) TIPO -> . boolean
    (254) TIPO -> . record
    (255) TIPO -> . varchar
    (256) TIPO -> . timestamp without time zone
    (257) TIPO -> . timestamp with time zone
    (258) TIPO -> . time without time zone
    (259) TIPO -> . time with time zone
    (260) TIPO -> . id

    interval        shift and go to state 51
    decimal         shift and go to state 52
    numeric         shift and go to state 53
    varchar         shift and go to state 54
    timestamp       shift and go to state 55
    character       shift and go to state 56
    char            shift and go to state 57
    time            shift and go to state 58
    id              shift and go to state 46
    idPunto         shift and go to state 59
    smallint        shift and go to state 60
    integer         shift and go to state 61
    r_int           shift and go to state 62
    bigint          shift and go to state 63
    real            shift and go to state 64
    double          shift and go to state 65
    money           shift and go to state 66
    text            shift and go to state 67
    date            shift and go to state 68
    boolean         shift and go to state 69
    record          shift and go to state 70

    TIPO                           shift and go to state 610

state 526

    (119) OP -> add check para . CONDCHECK parc
    (175) CONDCHECK -> . EXP mayor EXP
    (176) CONDCHECK -> . EXP menor EXP
    (177) CONDCHECK -> . EXP mayor_igual EXP
    (178) CONDCHECK -> . EXP menor_igual EXP
    (179) CONDCHECK -> . EXP igual EXP
    (180) CONDCHECK -> . EXP diferente1 EXP
    (181) CONDCHECK -> . EXP diferente2 EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    CONDCHECK                      shift and go to state 611
    EXP                            shift and go to state 587
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 527

    (120) OP -> add constraint id . check para CONDCHECK parc
    (121) OP -> add constraint id . unique para LEXP parc
    (124) OP -> add constraint id . foreign key para LEXP parc references id para LEXP parc

    check           shift and go to state 612
    unique          shift and go to state 613
    foreign         shift and go to state 614


state 528

    (122) OP -> add unique para . LEXP parc
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 615
    EXP                            shift and go to state 79
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 529

    (123) OP -> add foreign key . para LEXP parc references id para LEXP parc

    para            shift and go to state 616


state 530

    (127) OP -> drop constraint id .

    coma            reduce using rule 127 (OP -> drop constraint id .)
    ptcoma          reduce using rule 127 (OP -> drop constraint id .)


state 531

    (128) OP -> drop column LEXP .
    (218) LEXP -> LEXP . coma EXP

  ! shift/reduce conflict for coma resolved as shift
    ptcoma          reduce using rule 128 (OP -> drop column LEXP .)
    coma            shift and go to state 164

  ! coma            [ reduce using rule 128 (OP -> drop column LEXP .) ]


state 532

    (129) OP -> drop check id .

    coma            reduce using rule 129 (OP -> drop check id .)
    ptcoma          reduce using rule 129 (OP -> drop check id .)


state 533

    (130) OP -> rename column id . to id

    to              shift and go to state 617


state 534

    (69) CONDICIONIF -> if EXP then LISTACONTENIDO ELSEF end . if

    if              shift and go to state 618


state 535

    (71) CONDICIONIF -> if EXP then LISTACONTENIDO end if .

    ptcoma          reduce using rule 71 (CONDICIONIF -> if EXP then LISTACONTENIDO end if .)


state 536

    (70) CONDICIONIF -> if EXP then LISTACONTENIDO LELIF end . if

    if              shift and go to state 619


state 537

    (72) CONDICIONIF -> if EXP then LISTACONTENIDO LELIF ELSEF . end if

    end             shift and go to state 620


state 538

    (73) LELIF -> LELIF elsif . EXP then LISTACONTENIDO
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 621
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 539

    (74) LELIF -> elsif EXP . then LISTACONTENIDO
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    then            shift and go to state 622
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170
    and             shift and go to state 171
    or              shift and go to state 172
    mayor           shift and go to state 173
    menor           shift and go to state 174
    mayor_igual     shift and go to state 175
    menor_igual     shift and go to state 176
    igual           shift and go to state 177
    diferente1      shift and go to state 178
    diferente2      shift and go to state 179
    between         shift and go to state 180
    is              shift and go to state 181
    isnull          shift and go to state 183
    notnull         shift and go to state 184
    as              shift and go to state 185
    cadenaString    shift and go to state 186
    id              shift and go to state 187
    cadena          shift and go to state 188
    in              shift and go to state 189
    not             shift and go to state 182
    like            shift and go to state 190


state 540

    (90) RAISE -> raise LEVEL FORMAT .

    ptcoma          reduce using rule 90 (RAISE -> raise LEVEL FORMAT .)


state 541

    (91) RAISE -> raise LEVEL EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    ptcoma          reduce using rule 91 (RAISE -> raise LEVEL EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170
    and             shift and go to state 171
    or              shift and go to state 172
    mayor           shift and go to state 173
    menor           shift and go to state 174
    mayor_igual     shift and go to state 175
    menor_igual     shift and go to state 176
    igual           shift and go to state 177
    diferente1      shift and go to state 178
    diferente2      shift and go to state 179
    between         shift and go to state 180
    is              shift and go to state 181
    isnull          shift and go to state 183
    notnull         shift and go to state 184
    as              shift and go to state 185
    cadenaString    shift and go to state 186
    id              shift and go to state 187
    cadena          shift and go to state 188
    in              shift and go to state 189
    not             shift and go to state 182
    like            shift and go to state 190


state 542

    (94) RAISE -> raise LEVEL cadena . coma id
    (322) EXP -> cadena .
    (333) EXP -> cadena . as TIPO

  ! shift/reduce conflict for as resolved as shift
    coma            shift and go to state 623
    mas             reduce using rule 322 (EXP -> cadena .)
    menos           reduce using rule 322 (EXP -> cadena .)
    multiplicacion  reduce using rule 322 (EXP -> cadena .)
    division        reduce using rule 322 (EXP -> cadena .)
    modulo          reduce using rule 322 (EXP -> cadena .)
    elevado         reduce using rule 322 (EXP -> cadena .)
    and             reduce using rule 322 (EXP -> cadena .)
    or              reduce using rule 322 (EXP -> cadena .)
    mayor           reduce using rule 322 (EXP -> cadena .)
    menor           reduce using rule 322 (EXP -> cadena .)
    mayor_igual     reduce using rule 322 (EXP -> cadena .)
    menor_igual     reduce using rule 322 (EXP -> cadena .)
    igual           reduce using rule 322 (EXP -> cadena .)
    diferente1      reduce using rule 322 (EXP -> cadena .)
    diferente2      reduce using rule 322 (EXP -> cadena .)
    between         reduce using rule 322 (EXP -> cadena .)
    is              reduce using rule 322 (EXP -> cadena .)
    isnull          reduce using rule 322 (EXP -> cadena .)
    notnull         reduce using rule 322 (EXP -> cadena .)
    cadenaString    reduce using rule 322 (EXP -> cadena .)
    id              reduce using rule 322 (EXP -> cadena .)
    cadena          reduce using rule 322 (EXP -> cadena .)
    in              reduce using rule 322 (EXP -> cadena .)
    not             reduce using rule 322 (EXP -> cadena .)
    like            reduce using rule 322 (EXP -> cadena .)
    ptcoma          reduce using rule 322 (EXP -> cadena .)
    as              shift and go to state 195

  ! as              [ reduce using rule 322 (EXP -> cadena .) ]


state 543

    (101) FORMAT -> format . para EXP coma LEXP parc

    para            shift and go to state 624


state 544

    (44) BEGINEND -> begin LISTACONTENIDO end .

    ptcoma          reduce using rule 44 (BEGINEND -> begin LISTACONTENIDO end .)


state 545

    (29) CALLPROCEDURE -> call id para . LEXP parc
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 625
    EXP                            shift and go to state 79
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 546

    (25) RETURN -> return id para . LEXP parc
    (314) EXP -> id para . LEXP parc
    (315) EXP -> id para . parc
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    parc            shift and go to state 291
    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 626
    EXP                            shift and go to state 79
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 547

    (107) INSERT -> insert into id values para LEXP . parc
    (218) LEXP -> LEXP . coma EXP

    parc            shift and go to state 627
    coma            shift and go to state 164


state 548

    (108) INSERT -> insert into id para LEXP parc . values para LEXP parc

    values          shift and go to state 628


state 549

    (76) CASE -> case LEXP LISTAWHEN ELSEF end case .

    use             reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    select          reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    create          reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    update          reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    delete          reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    alter           reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    drop            reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    insert          reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    case            reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    show            reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    id              reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    if              reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    $end            reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    r_from          reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    coma            reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    where           reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    group           reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    having          reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    union           reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    intersect       reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    except          reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    order           reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    limit           reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    offset          reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    ptcoma          reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    mas             reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    menos           reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    multiplicacion  reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    division        reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    modulo          reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    elevado         reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    and             reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    or              reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    mayor           reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    menor           reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    mayor_igual     reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    menor_igual     reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    igual           reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    diferente1      reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    diferente2      reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    between         reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    is              reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    isnull          reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    notnull         reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    as              reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    cadenaString    reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    cadena          reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    in              reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    not             reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    like            reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    then            reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    when            reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    parc            reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    end             reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    else            reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    constraint      reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    unique          reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    check           reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    default         reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    null            reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    primary         reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    references      reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    asc             reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)
    desc            reduce using rule 76 (CASE -> case LEXP LISTAWHEN ELSEF end case .)


state 550

    (221) TIPO -> decimal para int coma int parc .

    not             reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    default         reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    dospuntos       reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    igual           reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    ptcoma          reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    r_from          reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    coma            reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    where           reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    group           reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    having          reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    union           reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    intersect       reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    except          reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    order           reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    limit           reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    offset          reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    mas             reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    menos           reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    multiplicacion  reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    division        reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    modulo          reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    elevado         reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    and             reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    or              reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    mayor           reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    menor           reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    mayor_igual     reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    menor_igual     reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    diferente1      reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    diferente2      reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    between         reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    is              reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    isnull          reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    notnull         reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    as              reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    cadenaString    reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    id              reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    cadena          reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    in              reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    like            reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    then            reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    when            reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    parc            reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    end             reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    else            reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    constraint      reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    unique          reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    check           reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    null            reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    primary         reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    references      reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    asc             reduce using rule 221 (TIPO -> decimal para int coma int parc .)
    desc            reduce using rule 221 (TIPO -> decimal para int coma int parc .)


state 551

    (224) TIPO -> numeric para int coma int parc .

    not             reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    default         reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    dospuntos       reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    igual           reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    ptcoma          reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    r_from          reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    coma            reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    where           reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    group           reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    having          reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    union           reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    intersect       reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    except          reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    order           reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    limit           reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    offset          reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    mas             reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    menos           reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    multiplicacion  reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    division        reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    modulo          reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    elevado         reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    and             reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    or              reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    mayor           reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    menor           reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    mayor_igual     reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    menor_igual     reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    diferente1      reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    diferente2      reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    between         reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    is              reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    isnull          reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    notnull         reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    as              reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    cadenaString    reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    id              reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    cadena          reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    in              reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    like            reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    then            reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    when            reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    parc            reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    end             reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    else            reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    constraint      reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    unique          reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    check           reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    null            reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    primary         reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    references      reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    asc             reduce using rule 224 (TIPO -> numeric para int coma int parc .)
    desc            reduce using rule 224 (TIPO -> numeric para int coma int parc .)


state 552

    (236) TIPO -> timestamp para int parc without time . zone

    zone            shift and go to state 629


state 553

    (237) TIPO -> timestamp para int parc with time . zone

    zone            shift and go to state 630


state 554

    (238) TIPO -> time para int parc without time . zone

    zone            shift and go to state 631


state 555

    (239) TIPO -> time para int parc with time . zone

    zone            shift and go to state 632


state 556

    (217) EXIST -> not exist para SELECT parc .

    ptcoma          reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    r_from          reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    coma            reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    where           reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    group           reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    having          reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    union           reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    intersect       reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    except          reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    order           reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    limit           reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    offset          reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    mas             reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    menos           reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    multiplicacion  reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    division        reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    modulo          reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    elevado         reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    and             reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    or              reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    mayor           reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    menor           reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    mayor_igual     reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    menor_igual     reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    igual           reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    diferente1      reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    diferente2      reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    between         reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    is              reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    isnull          reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    notnull         reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    as              reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    cadenaString    reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    id              reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    cadena          reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    in              reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    not             reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    like            reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    then            reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    when            reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    parc            reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    end             reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    else            reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    constraint      reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    unique          reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    check           reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    default         reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    null            reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    primary         reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    references      reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    asc             reduce using rule 217 (EXIST -> not exist para SELECT parc .)
    desc            reduce using rule 217 (EXIST -> not exist para SELECT parc .)


state 557

    (184) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP . HAVING COMBINING ORDER LIMIT
    (205) HAVING -> . having EXP
    (206) HAVING -> .

  ! shift/reduce conflict for having resolved as shift
    having          shift and go to state 378
    r_from          reduce using rule 206 (HAVING -> .)
    coma            reduce using rule 206 (HAVING -> .)
    where           reduce using rule 206 (HAVING -> .)
    group           reduce using rule 206 (HAVING -> .)
    union           reduce using rule 206 (HAVING -> .)
    intersect       reduce using rule 206 (HAVING -> .)
    except          reduce using rule 206 (HAVING -> .)
    order           reduce using rule 206 (HAVING -> .)
    limit           reduce using rule 206 (HAVING -> .)
    offset          reduce using rule 206 (HAVING -> .)
    ptcoma          reduce using rule 206 (HAVING -> .)
    mas             reduce using rule 206 (HAVING -> .)
    menos           reduce using rule 206 (HAVING -> .)
    multiplicacion  reduce using rule 206 (HAVING -> .)
    division        reduce using rule 206 (HAVING -> .)
    modulo          reduce using rule 206 (HAVING -> .)
    elevado         reduce using rule 206 (HAVING -> .)
    and             reduce using rule 206 (HAVING -> .)
    or              reduce using rule 206 (HAVING -> .)
    mayor           reduce using rule 206 (HAVING -> .)
    menor           reduce using rule 206 (HAVING -> .)
    mayor_igual     reduce using rule 206 (HAVING -> .)
    menor_igual     reduce using rule 206 (HAVING -> .)
    igual           reduce using rule 206 (HAVING -> .)
    diferente1      reduce using rule 206 (HAVING -> .)
    diferente2      reduce using rule 206 (HAVING -> .)
    between         reduce using rule 206 (HAVING -> .)
    is              reduce using rule 206 (HAVING -> .)
    isnull          reduce using rule 206 (HAVING -> .)
    notnull         reduce using rule 206 (HAVING -> .)
    as              reduce using rule 206 (HAVING -> .)
    cadenaString    reduce using rule 206 (HAVING -> .)
    id              reduce using rule 206 (HAVING -> .)
    cadena          reduce using rule 206 (HAVING -> .)
    in              reduce using rule 206 (HAVING -> .)
    not             reduce using rule 206 (HAVING -> .)
    like            reduce using rule 206 (HAVING -> .)
    then            reduce using rule 206 (HAVING -> .)
    when            reduce using rule 206 (HAVING -> .)
    parc            reduce using rule 206 (HAVING -> .)
    end             reduce using rule 206 (HAVING -> .)
    else            reduce using rule 206 (HAVING -> .)
    constraint      reduce using rule 206 (HAVING -> .)
    unique          reduce using rule 206 (HAVING -> .)
    check           reduce using rule 206 (HAVING -> .)
    default         reduce using rule 206 (HAVING -> .)
    null            reduce using rule 206 (HAVING -> .)
    primary         reduce using rule 206 (HAVING -> .)
    references      reduce using rule 206 (HAVING -> .)
    asc             reduce using rule 206 (HAVING -> .)
    desc            reduce using rule 206 (HAVING -> .)

  ! having          [ reduce using rule 206 (HAVING -> .) ]

    HAVING                         shift and go to state 633

state 558

    (185) SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING . COMBINING ORDER LIMIT
    (198) COMBINING -> . union EXP
    (199) COMBINING -> . union all EXP
    (200) COMBINING -> . intersect EXP
    (201) COMBINING -> . except EXP
    (202) COMBINING -> .

  ! shift/reduce conflict for union resolved as shift
  ! shift/reduce conflict for intersect resolved as shift
  ! shift/reduce conflict for except resolved as shift
    union           shift and go to state 486
    intersect       shift and go to state 487
    except          shift and go to state 488
    r_from          reduce using rule 202 (COMBINING -> .)
    coma            reduce using rule 202 (COMBINING -> .)
    where           reduce using rule 202 (COMBINING -> .)
    group           reduce using rule 202 (COMBINING -> .)
    having          reduce using rule 202 (COMBINING -> .)
    order           reduce using rule 202 (COMBINING -> .)
    limit           reduce using rule 202 (COMBINING -> .)
    offset          reduce using rule 202 (COMBINING -> .)
    ptcoma          reduce using rule 202 (COMBINING -> .)
    mas             reduce using rule 202 (COMBINING -> .)
    menos           reduce using rule 202 (COMBINING -> .)
    multiplicacion  reduce using rule 202 (COMBINING -> .)
    division        reduce using rule 202 (COMBINING -> .)
    modulo          reduce using rule 202 (COMBINING -> .)
    elevado         reduce using rule 202 (COMBINING -> .)
    and             reduce using rule 202 (COMBINING -> .)
    or              reduce using rule 202 (COMBINING -> .)
    mayor           reduce using rule 202 (COMBINING -> .)
    menor           reduce using rule 202 (COMBINING -> .)
    mayor_igual     reduce using rule 202 (COMBINING -> .)
    menor_igual     reduce using rule 202 (COMBINING -> .)
    igual           reduce using rule 202 (COMBINING -> .)
    diferente1      reduce using rule 202 (COMBINING -> .)
    diferente2      reduce using rule 202 (COMBINING -> .)
    between         reduce using rule 202 (COMBINING -> .)
    is              reduce using rule 202 (COMBINING -> .)
    isnull          reduce using rule 202 (COMBINING -> .)
    notnull         reduce using rule 202 (COMBINING -> .)
    as              reduce using rule 202 (COMBINING -> .)
    cadenaString    reduce using rule 202 (COMBINING -> .)
    id              reduce using rule 202 (COMBINING -> .)
    cadena          reduce using rule 202 (COMBINING -> .)
    in              reduce using rule 202 (COMBINING -> .)
    not             reduce using rule 202 (COMBINING -> .)
    like            reduce using rule 202 (COMBINING -> .)
    then            reduce using rule 202 (COMBINING -> .)
    when            reduce using rule 202 (COMBINING -> .)
    parc            reduce using rule 202 (COMBINING -> .)
    end             reduce using rule 202 (COMBINING -> .)
    else            reduce using rule 202 (COMBINING -> .)
    constraint      reduce using rule 202 (COMBINING -> .)
    unique          reduce using rule 202 (COMBINING -> .)
    check           reduce using rule 202 (COMBINING -> .)
    default         reduce using rule 202 (COMBINING -> .)
    null            reduce using rule 202 (COMBINING -> .)
    primary         reduce using rule 202 (COMBINING -> .)
    references      reduce using rule 202 (COMBINING -> .)
    asc             reduce using rule 202 (COMBINING -> .)
    desc            reduce using rule 202 (COMBINING -> .)

  ! union           [ reduce using rule 202 (COMBINING -> .) ]
  ! intersect       [ reduce using rule 202 (COMBINING -> .) ]
  ! except          [ reduce using rule 202 (COMBINING -> .) ]

    COMBINING                      shift and go to state 634

state 559

    (186) SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER . LIMIT
    (187) LIMIT -> . limit int
    (188) LIMIT -> . limit all
    (189) LIMIT -> . offset int
    (190) LIMIT -> . limit int offset int
    (191) LIMIT -> . offset int limit int
    (192) LIMIT -> . limit all offset int
    (193) LIMIT -> . offset int limit all
    (194) LIMIT -> .

  ! shift/reduce conflict for limit resolved as shift
  ! shift/reduce conflict for offset resolved as shift
    limit           shift and go to state 636
    offset          shift and go to state 637
    ptcoma          reduce using rule 194 (LIMIT -> .)
    r_from          reduce using rule 194 (LIMIT -> .)
    coma            reduce using rule 194 (LIMIT -> .)
    where           reduce using rule 194 (LIMIT -> .)
    group           reduce using rule 194 (LIMIT -> .)
    having          reduce using rule 194 (LIMIT -> .)
    union           reduce using rule 194 (LIMIT -> .)
    intersect       reduce using rule 194 (LIMIT -> .)
    except          reduce using rule 194 (LIMIT -> .)
    order           reduce using rule 194 (LIMIT -> .)
    mas             reduce using rule 194 (LIMIT -> .)
    menos           reduce using rule 194 (LIMIT -> .)
    multiplicacion  reduce using rule 194 (LIMIT -> .)
    division        reduce using rule 194 (LIMIT -> .)
    modulo          reduce using rule 194 (LIMIT -> .)
    elevado         reduce using rule 194 (LIMIT -> .)
    and             reduce using rule 194 (LIMIT -> .)
    or              reduce using rule 194 (LIMIT -> .)
    mayor           reduce using rule 194 (LIMIT -> .)
    menor           reduce using rule 194 (LIMIT -> .)
    mayor_igual     reduce using rule 194 (LIMIT -> .)
    menor_igual     reduce using rule 194 (LIMIT -> .)
    igual           reduce using rule 194 (LIMIT -> .)
    diferente1      reduce using rule 194 (LIMIT -> .)
    diferente2      reduce using rule 194 (LIMIT -> .)
    between         reduce using rule 194 (LIMIT -> .)
    is              reduce using rule 194 (LIMIT -> .)
    isnull          reduce using rule 194 (LIMIT -> .)
    notnull         reduce using rule 194 (LIMIT -> .)
    as              reduce using rule 194 (LIMIT -> .)
    cadenaString    reduce using rule 194 (LIMIT -> .)
    id              reduce using rule 194 (LIMIT -> .)
    cadena          reduce using rule 194 (LIMIT -> .)
    in              reduce using rule 194 (LIMIT -> .)
    not             reduce using rule 194 (LIMIT -> .)
    like            reduce using rule 194 (LIMIT -> .)
    then            reduce using rule 194 (LIMIT -> .)
    when            reduce using rule 194 (LIMIT -> .)
    parc            reduce using rule 194 (LIMIT -> .)
    end             reduce using rule 194 (LIMIT -> .)
    else            reduce using rule 194 (LIMIT -> .)
    constraint      reduce using rule 194 (LIMIT -> .)
    unique          reduce using rule 194 (LIMIT -> .)
    check           reduce using rule 194 (LIMIT -> .)
    default         reduce using rule 194 (LIMIT -> .)
    null            reduce using rule 194 (LIMIT -> .)
    primary         reduce using rule 194 (LIMIT -> .)
    references      reduce using rule 194 (LIMIT -> .)
    asc             reduce using rule 194 (LIMIT -> .)
    desc            reduce using rule 194 (LIMIT -> .)

  ! limit           [ reduce using rule 194 (LIMIT -> .) ]
  ! offset          [ reduce using rule 194 (LIMIT -> .) ]

    LIMIT                          shift and go to state 635

state 560

    (207) ORDER -> order . by LEXP ORD
    (208) ORDER -> order . by LEXP

    by              shift and go to state 638


state 561

    (198) COMBINING -> union EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    r_from          reduce using rule 198 (COMBINING -> union EXP .)
    coma            reduce using rule 198 (COMBINING -> union EXP .)
    where           reduce using rule 198 (COMBINING -> union EXP .)
    group           reduce using rule 198 (COMBINING -> union EXP .)
    having          reduce using rule 198 (COMBINING -> union EXP .)
    union           reduce using rule 198 (COMBINING -> union EXP .)
    intersect       reduce using rule 198 (COMBINING -> union EXP .)
    except          reduce using rule 198 (COMBINING -> union EXP .)
    order           reduce using rule 198 (COMBINING -> union EXP .)
    limit           reduce using rule 198 (COMBINING -> union EXP .)
    offset          reduce using rule 198 (COMBINING -> union EXP .)
    ptcoma          reduce using rule 198 (COMBINING -> union EXP .)
    then            reduce using rule 198 (COMBINING -> union EXP .)
    when            reduce using rule 198 (COMBINING -> union EXP .)
    parc            reduce using rule 198 (COMBINING -> union EXP .)
    end             reduce using rule 198 (COMBINING -> union EXP .)
    else            reduce using rule 198 (COMBINING -> union EXP .)
    constraint      reduce using rule 198 (COMBINING -> union EXP .)
    unique          reduce using rule 198 (COMBINING -> union EXP .)
    check           reduce using rule 198 (COMBINING -> union EXP .)
    default         reduce using rule 198 (COMBINING -> union EXP .)
    null            reduce using rule 198 (COMBINING -> union EXP .)
    primary         reduce using rule 198 (COMBINING -> union EXP .)
    references      reduce using rule 198 (COMBINING -> union EXP .)
    asc             reduce using rule 198 (COMBINING -> union EXP .)
    desc            reduce using rule 198 (COMBINING -> union EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170
    and             shift and go to state 171
    or              shift and go to state 172
    mayor           shift and go to state 173
    menor           shift and go to state 174
    mayor_igual     shift and go to state 175
    menor_igual     shift and go to state 176
    igual           shift and go to state 177
    diferente1      shift and go to state 178
    diferente2      shift and go to state 179
    between         shift and go to state 180
    is              shift and go to state 181
    isnull          shift and go to state 183
    notnull         shift and go to state 184
    as              shift and go to state 185
    cadenaString    shift and go to state 186
    id              shift and go to state 187
    cadena          shift and go to state 188
    in              shift and go to state 189
    not             shift and go to state 182
    like            shift and go to state 190

  ! mas             [ reduce using rule 198 (COMBINING -> union EXP .) ]
  ! menos           [ reduce using rule 198 (COMBINING -> union EXP .) ]
  ! multiplicacion  [ reduce using rule 198 (COMBINING -> union EXP .) ]
  ! division        [ reduce using rule 198 (COMBINING -> union EXP .) ]
  ! modulo          [ reduce using rule 198 (COMBINING -> union EXP .) ]
  ! elevado         [ reduce using rule 198 (COMBINING -> union EXP .) ]
  ! and             [ reduce using rule 198 (COMBINING -> union EXP .) ]
  ! or              [ reduce using rule 198 (COMBINING -> union EXP .) ]
  ! mayor           [ reduce using rule 198 (COMBINING -> union EXP .) ]
  ! menor           [ reduce using rule 198 (COMBINING -> union EXP .) ]
  ! mayor_igual     [ reduce using rule 198 (COMBINING -> union EXP .) ]
  ! menor_igual     [ reduce using rule 198 (COMBINING -> union EXP .) ]
  ! igual           [ reduce using rule 198 (COMBINING -> union EXP .) ]
  ! diferente1      [ reduce using rule 198 (COMBINING -> union EXP .) ]
  ! diferente2      [ reduce using rule 198 (COMBINING -> union EXP .) ]
  ! between         [ reduce using rule 198 (COMBINING -> union EXP .) ]
  ! is              [ reduce using rule 198 (COMBINING -> union EXP .) ]
  ! isnull          [ reduce using rule 198 (COMBINING -> union EXP .) ]
  ! notnull         [ reduce using rule 198 (COMBINING -> union EXP .) ]
  ! as              [ reduce using rule 198 (COMBINING -> union EXP .) ]
  ! cadenaString    [ reduce using rule 198 (COMBINING -> union EXP .) ]
  ! id              [ reduce using rule 198 (COMBINING -> union EXP .) ]
  ! cadena          [ reduce using rule 198 (COMBINING -> union EXP .) ]
  ! in              [ reduce using rule 198 (COMBINING -> union EXP .) ]
  ! not             [ reduce using rule 198 (COMBINING -> union EXP .) ]
  ! like            [ reduce using rule 198 (COMBINING -> union EXP .) ]


state 562

    (199) COMBINING -> union all . EXP
    (317) EXP -> all . para LEXP parc
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    para            shift and go to state 640
    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 639
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 563

    (200) COMBINING -> intersect EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    r_from          reduce using rule 200 (COMBINING -> intersect EXP .)
    coma            reduce using rule 200 (COMBINING -> intersect EXP .)
    where           reduce using rule 200 (COMBINING -> intersect EXP .)
    group           reduce using rule 200 (COMBINING -> intersect EXP .)
    having          reduce using rule 200 (COMBINING -> intersect EXP .)
    union           reduce using rule 200 (COMBINING -> intersect EXP .)
    intersect       reduce using rule 200 (COMBINING -> intersect EXP .)
    except          reduce using rule 200 (COMBINING -> intersect EXP .)
    order           reduce using rule 200 (COMBINING -> intersect EXP .)
    limit           reduce using rule 200 (COMBINING -> intersect EXP .)
    offset          reduce using rule 200 (COMBINING -> intersect EXP .)
    ptcoma          reduce using rule 200 (COMBINING -> intersect EXP .)
    then            reduce using rule 200 (COMBINING -> intersect EXP .)
    when            reduce using rule 200 (COMBINING -> intersect EXP .)
    parc            reduce using rule 200 (COMBINING -> intersect EXP .)
    end             reduce using rule 200 (COMBINING -> intersect EXP .)
    else            reduce using rule 200 (COMBINING -> intersect EXP .)
    constraint      reduce using rule 200 (COMBINING -> intersect EXP .)
    unique          reduce using rule 200 (COMBINING -> intersect EXP .)
    check           reduce using rule 200 (COMBINING -> intersect EXP .)
    default         reduce using rule 200 (COMBINING -> intersect EXP .)
    null            reduce using rule 200 (COMBINING -> intersect EXP .)
    primary         reduce using rule 200 (COMBINING -> intersect EXP .)
    references      reduce using rule 200 (COMBINING -> intersect EXP .)
    asc             reduce using rule 200 (COMBINING -> intersect EXP .)
    desc            reduce using rule 200 (COMBINING -> intersect EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170
    and             shift and go to state 171
    or              shift and go to state 172
    mayor           shift and go to state 173
    menor           shift and go to state 174
    mayor_igual     shift and go to state 175
    menor_igual     shift and go to state 176
    igual           shift and go to state 177
    diferente1      shift and go to state 178
    diferente2      shift and go to state 179
    between         shift and go to state 180
    is              shift and go to state 181
    isnull          shift and go to state 183
    notnull         shift and go to state 184
    as              shift and go to state 185
    cadenaString    shift and go to state 186
    id              shift and go to state 187
    cadena          shift and go to state 188
    in              shift and go to state 189
    not             shift and go to state 182
    like            shift and go to state 190

  ! mas             [ reduce using rule 200 (COMBINING -> intersect EXP .) ]
  ! menos           [ reduce using rule 200 (COMBINING -> intersect EXP .) ]
  ! multiplicacion  [ reduce using rule 200 (COMBINING -> intersect EXP .) ]
  ! division        [ reduce using rule 200 (COMBINING -> intersect EXP .) ]
  ! modulo          [ reduce using rule 200 (COMBINING -> intersect EXP .) ]
  ! elevado         [ reduce using rule 200 (COMBINING -> intersect EXP .) ]
  ! and             [ reduce using rule 200 (COMBINING -> intersect EXP .) ]
  ! or              [ reduce using rule 200 (COMBINING -> intersect EXP .) ]
  ! mayor           [ reduce using rule 200 (COMBINING -> intersect EXP .) ]
  ! menor           [ reduce using rule 200 (COMBINING -> intersect EXP .) ]
  ! mayor_igual     [ reduce using rule 200 (COMBINING -> intersect EXP .) ]
  ! menor_igual     [ reduce using rule 200 (COMBINING -> intersect EXP .) ]
  ! igual           [ reduce using rule 200 (COMBINING -> intersect EXP .) ]
  ! diferente1      [ reduce using rule 200 (COMBINING -> intersect EXP .) ]
  ! diferente2      [ reduce using rule 200 (COMBINING -> intersect EXP .) ]
  ! between         [ reduce using rule 200 (COMBINING -> intersect EXP .) ]
  ! is              [ reduce using rule 200 (COMBINING -> intersect EXP .) ]
  ! isnull          [ reduce using rule 200 (COMBINING -> intersect EXP .) ]
  ! notnull         [ reduce using rule 200 (COMBINING -> intersect EXP .) ]
  ! as              [ reduce using rule 200 (COMBINING -> intersect EXP .) ]
  ! cadenaString    [ reduce using rule 200 (COMBINING -> intersect EXP .) ]
  ! id              [ reduce using rule 200 (COMBINING -> intersect EXP .) ]
  ! cadena          [ reduce using rule 200 (COMBINING -> intersect EXP .) ]
  ! in              [ reduce using rule 200 (COMBINING -> intersect EXP .) ]
  ! not             [ reduce using rule 200 (COMBINING -> intersect EXP .) ]
  ! like            [ reduce using rule 200 (COMBINING -> intersect EXP .) ]


state 564

    (201) COMBINING -> except EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    r_from          reduce using rule 201 (COMBINING -> except EXP .)
    coma            reduce using rule 201 (COMBINING -> except EXP .)
    where           reduce using rule 201 (COMBINING -> except EXP .)
    group           reduce using rule 201 (COMBINING -> except EXP .)
    having          reduce using rule 201 (COMBINING -> except EXP .)
    union           reduce using rule 201 (COMBINING -> except EXP .)
    intersect       reduce using rule 201 (COMBINING -> except EXP .)
    except          reduce using rule 201 (COMBINING -> except EXP .)
    order           reduce using rule 201 (COMBINING -> except EXP .)
    limit           reduce using rule 201 (COMBINING -> except EXP .)
    offset          reduce using rule 201 (COMBINING -> except EXP .)
    ptcoma          reduce using rule 201 (COMBINING -> except EXP .)
    then            reduce using rule 201 (COMBINING -> except EXP .)
    when            reduce using rule 201 (COMBINING -> except EXP .)
    parc            reduce using rule 201 (COMBINING -> except EXP .)
    end             reduce using rule 201 (COMBINING -> except EXP .)
    else            reduce using rule 201 (COMBINING -> except EXP .)
    constraint      reduce using rule 201 (COMBINING -> except EXP .)
    unique          reduce using rule 201 (COMBINING -> except EXP .)
    check           reduce using rule 201 (COMBINING -> except EXP .)
    default         reduce using rule 201 (COMBINING -> except EXP .)
    null            reduce using rule 201 (COMBINING -> except EXP .)
    primary         reduce using rule 201 (COMBINING -> except EXP .)
    references      reduce using rule 201 (COMBINING -> except EXP .)
    asc             reduce using rule 201 (COMBINING -> except EXP .)
    desc            reduce using rule 201 (COMBINING -> except EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170
    and             shift and go to state 171
    or              shift and go to state 172
    mayor           shift and go to state 173
    menor           shift and go to state 174
    mayor_igual     shift and go to state 175
    menor_igual     shift and go to state 176
    igual           shift and go to state 177
    diferente1      shift and go to state 178
    diferente2      shift and go to state 179
    between         shift and go to state 180
    is              shift and go to state 181
    isnull          shift and go to state 183
    notnull         shift and go to state 184
    as              shift and go to state 185
    cadenaString    shift and go to state 186
    id              shift and go to state 187
    cadena          shift and go to state 188
    in              shift and go to state 189
    not             shift and go to state 182
    like            shift and go to state 190

  ! mas             [ reduce using rule 201 (COMBINING -> except EXP .) ]
  ! menos           [ reduce using rule 201 (COMBINING -> except EXP .) ]
  ! multiplicacion  [ reduce using rule 201 (COMBINING -> except EXP .) ]
  ! division        [ reduce using rule 201 (COMBINING -> except EXP .) ]
  ! modulo          [ reduce using rule 201 (COMBINING -> except EXP .) ]
  ! elevado         [ reduce using rule 201 (COMBINING -> except EXP .) ]
  ! and             [ reduce using rule 201 (COMBINING -> except EXP .) ]
  ! or              [ reduce using rule 201 (COMBINING -> except EXP .) ]
  ! mayor           [ reduce using rule 201 (COMBINING -> except EXP .) ]
  ! menor           [ reduce using rule 201 (COMBINING -> except EXP .) ]
  ! mayor_igual     [ reduce using rule 201 (COMBINING -> except EXP .) ]
  ! menor_igual     [ reduce using rule 201 (COMBINING -> except EXP .) ]
  ! igual           [ reduce using rule 201 (COMBINING -> except EXP .) ]
  ! diferente1      [ reduce using rule 201 (COMBINING -> except EXP .) ]
  ! diferente2      [ reduce using rule 201 (COMBINING -> except EXP .) ]
  ! between         [ reduce using rule 201 (COMBINING -> except EXP .) ]
  ! is              [ reduce using rule 201 (COMBINING -> except EXP .) ]
  ! isnull          [ reduce using rule 201 (COMBINING -> except EXP .) ]
  ! notnull         [ reduce using rule 201 (COMBINING -> except EXP .) ]
  ! as              [ reduce using rule 201 (COMBINING -> except EXP .) ]
  ! cadenaString    [ reduce using rule 201 (COMBINING -> except EXP .) ]
  ! id              [ reduce using rule 201 (COMBINING -> except EXP .) ]
  ! cadena          [ reduce using rule 201 (COMBINING -> except EXP .) ]
  ! in              [ reduce using rule 201 (COMBINING -> except EXP .) ]
  ! not             [ reduce using rule 201 (COMBINING -> except EXP .) ]
  ! like            [ reduce using rule 201 (COMBINING -> except EXP .) ]


state 565

    (308) EXP -> EXP is not distinct r_from EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    r_from          reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    coma            reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    where           reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    group           reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    having          reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    union           reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    intersect       reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    except          reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    order           reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    limit           reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    offset          reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    ptcoma          reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    and             reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    or              reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    between         reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    is              reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    isnull          reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    notnull         reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    as              reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    cadenaString    reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    id              reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    cadena          reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    in              reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    not             reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    like            reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    then            reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    when            reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    parc            reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    end             reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    else            reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    constraint      reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    unique          reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    check           reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    default         reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    null            reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    primary         reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    references      reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    asc             reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    desc            reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170
    mayor           shift and go to state 173
    menor           shift and go to state 174
    mayor_igual     shift and go to state 175
    menor_igual     shift and go to state 176
    igual           shift and go to state 177
    diferente1      shift and go to state 178
    diferente2      shift and go to state 179

  ! mas             [ reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .) ]
  ! menos           [ reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .) ]
  ! multiplicacion  [ reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .) ]
  ! division        [ reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .) ]
  ! modulo          [ reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .) ]
  ! elevado         [ reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .) ]
  ! mayor           [ reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .) ]
  ! menor           [ reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .) ]
  ! mayor_igual     [ reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .) ]
  ! menor_igual     [ reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .) ]
  ! igual           [ reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .) ]
  ! diferente1      [ reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .) ]
  ! diferente2      [ reduce using rule 308 (EXP -> EXP is not distinct r_from EXP .) ]
  ! and             [ shift and go to state 171 ]
  ! or              [ shift and go to state 172 ]
  ! between         [ shift and go to state 180 ]
  ! is              [ shift and go to state 181 ]
  ! isnull          [ shift and go to state 183 ]
  ! notnull         [ shift and go to state 184 ]
  ! as              [ shift and go to state 185 ]
  ! cadenaString    [ shift and go to state 186 ]
  ! id              [ shift and go to state 187 ]
  ! cadena          [ shift and go to state 188 ]
  ! in              [ shift and go to state 189 ]
  ! not             [ shift and go to state 182 ]
  ! like            [ shift and go to state 190 ]


state 566

    (303) EXP -> EXP not in para EXP parc .

    r_from          reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    coma            reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    where           reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    group           reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    having          reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    union           reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    intersect       reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    except          reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    order           reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    limit           reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    offset          reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    ptcoma          reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    mas             reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    menos           reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    multiplicacion  reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    division        reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    modulo          reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    elevado         reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    and             reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    or              reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    mayor           reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    menor           reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    mayor_igual     reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    menor_igual     reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    igual           reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    diferente1      reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    diferente2      reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    between         reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    is              reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    isnull          reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    notnull         reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    as              reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    cadenaString    reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    id              reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    cadena          reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    in              reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    not             reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    like            reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    then            reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    when            reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    parc            reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    end             reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    else            reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    constraint      reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    unique          reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    check           reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    default         reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    null            reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    primary         reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    references      reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    asc             reduce using rule 303 (EXP -> EXP not in para EXP parc .)
    desc            reduce using rule 303 (EXP -> EXP not in para EXP parc .)


state 567

    (319) EXP -> extract para FIELDS r_from timestamp cadena . parc

    parc            shift and go to state 641


state 568

    (159) COLDEF -> id TIPO LOPCOLUMN .
    (160) LOPCOLUMN -> LOPCOLUMN . OPCOLUMN
    (162) OPCOLUMN -> . constraint id unique
    (163) OPCOLUMN -> . unique
    (164) OPCOLUMN -> . constraint id check para CONDCHECK parc
    (165) OPCOLUMN -> . check para CONDCHECK parc
    (166) OPCOLUMN -> . default EXP
    (167) OPCOLUMN -> . not null
    (168) OPCOLUMN -> . null
    (169) OPCOLUMN -> . primary key
    (170) OPCOLUMN -> . references id

    parc            reduce using rule 159 (COLDEF -> id TIPO LOPCOLUMN .)
    coma            reduce using rule 159 (COLDEF -> id TIPO LOPCOLUMN .)
    constraint      shift and go to state 570
    unique          shift and go to state 571
    check           shift and go to state 572
    default         shift and go to state 573
    not             shift and go to state 574
    null            shift and go to state 575
    primary         shift and go to state 576
    references      shift and go to state 577

    OPCOLUMN                       shift and go to state 642

state 569

    (161) LOPCOLUMN -> OPCOLUMN .

    constraint      reduce using rule 161 (LOPCOLUMN -> OPCOLUMN .)
    unique          reduce using rule 161 (LOPCOLUMN -> OPCOLUMN .)
    check           reduce using rule 161 (LOPCOLUMN -> OPCOLUMN .)
    default         reduce using rule 161 (LOPCOLUMN -> OPCOLUMN .)
    not             reduce using rule 161 (LOPCOLUMN -> OPCOLUMN .)
    null            reduce using rule 161 (LOPCOLUMN -> OPCOLUMN .)
    primary         reduce using rule 161 (LOPCOLUMN -> OPCOLUMN .)
    references      reduce using rule 161 (LOPCOLUMN -> OPCOLUMN .)
    parc            reduce using rule 161 (LOPCOLUMN -> OPCOLUMN .)
    coma            reduce using rule 161 (LOPCOLUMN -> OPCOLUMN .)


state 570

    (162) OPCOLUMN -> constraint . id unique
    (164) OPCOLUMN -> constraint . id check para CONDCHECK parc

    id              shift and go to state 643


state 571

    (163) OPCOLUMN -> unique .

    constraint      reduce using rule 163 (OPCOLUMN -> unique .)
    unique          reduce using rule 163 (OPCOLUMN -> unique .)
    check           reduce using rule 163 (OPCOLUMN -> unique .)
    default         reduce using rule 163 (OPCOLUMN -> unique .)
    not             reduce using rule 163 (OPCOLUMN -> unique .)
    null            reduce using rule 163 (OPCOLUMN -> unique .)
    primary         reduce using rule 163 (OPCOLUMN -> unique .)
    references      reduce using rule 163 (OPCOLUMN -> unique .)
    parc            reduce using rule 163 (OPCOLUMN -> unique .)
    coma            reduce using rule 163 (OPCOLUMN -> unique .)


state 572

    (165) OPCOLUMN -> check . para CONDCHECK parc

    para            shift and go to state 644


state 573

    (166) OPCOLUMN -> default . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 645
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 574

    (167) OPCOLUMN -> not . null

    null            shift and go to state 646


state 575

    (168) OPCOLUMN -> null .

    constraint      reduce using rule 168 (OPCOLUMN -> null .)
    unique          reduce using rule 168 (OPCOLUMN -> null .)
    check           reduce using rule 168 (OPCOLUMN -> null .)
    default         reduce using rule 168 (OPCOLUMN -> null .)
    not             reduce using rule 168 (OPCOLUMN -> null .)
    null            reduce using rule 168 (OPCOLUMN -> null .)
    primary         reduce using rule 168 (OPCOLUMN -> null .)
    references      reduce using rule 168 (OPCOLUMN -> null .)
    parc            reduce using rule 168 (OPCOLUMN -> null .)
    coma            reduce using rule 168 (OPCOLUMN -> null .)


state 576

    (169) OPCOLUMN -> primary . key

    key             shift and go to state 647


state 577

    (170) OPCOLUMN -> references . id

    id              shift and go to state 648


state 578

    (152) CREATETABLE -> create table id para LDEF parc ptcoma .

    use             reduce using rule 152 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    select          reduce using rule 152 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    create          reduce using rule 152 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    update          reduce using rule 152 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    delete          reduce using rule 152 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    alter           reduce using rule 152 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    drop            reduce using rule 152 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    insert          reduce using rule 152 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    case            reduce using rule 152 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    show            reduce using rule 152 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    id              reduce using rule 152 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    if              reduce using rule 152 (CREATETABLE -> create table id para LDEF parc ptcoma .)
    $end            reduce using rule 152 (CREATETABLE -> create table id para LDEF parc ptcoma .)


state 579

    (153) CREATETABLE -> create table id para LDEF parc HERENCIA . ptcoma

    ptcoma          shift and go to state 649


state 580

    (182) HERENCIA -> inherits . para id parc

    para            shift and go to state 650


state 581

    (154) LDEF -> LDEF coma COLDEF .

    parc            reduce using rule 154 (LDEF -> LDEF coma COLDEF .)
    coma            reduce using rule 154 (LDEF -> LDEF coma COLDEF .)


state 582

    (157) COLDEF -> constraint id OPCONST .

    parc            reduce using rule 157 (COLDEF -> constraint id OPCONST .)
    coma            reduce using rule 157 (COLDEF -> constraint id OPCONST .)


state 583

    (171) OPCONST -> primary key para . LEXP parc
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 651
    EXP                            shift and go to state 79
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 584

    (172) OPCONST -> foreign key para . LEXP parc references id para LEXP parc
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 652
    EXP                            shift and go to state 79
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 585

    (173) OPCONST -> unique para LEXP . parc
    (218) LEXP -> LEXP . coma EXP

    parc            shift and go to state 653
    coma            shift and go to state 164


state 586

    (174) OPCONST -> check para CONDCHECK . parc

    parc            shift and go to state 654


state 587

    (175) CONDCHECK -> EXP . mayor EXP
    (176) CONDCHECK -> EXP . menor EXP
    (177) CONDCHECK -> EXP . mayor_igual EXP
    (178) CONDCHECK -> EXP . menor_igual EXP
    (179) CONDCHECK -> EXP . igual EXP
    (180) CONDCHECK -> EXP . diferente1 EXP
    (181) CONDCHECK -> EXP . diferente2 EXP
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    mayor           shift and go to state 655
    menor           shift and go to state 656
    mayor_igual     shift and go to state 657
    menor_igual     shift and go to state 658
    igual           shift and go to state 659
    diferente1      shift and go to state 660
    diferente2      shift and go to state 661
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170
    and             shift and go to state 171
    or              shift and go to state 172
    between         shift and go to state 180
    is              shift and go to state 181
    isnull          shift and go to state 183
    notnull         shift and go to state 184
    as              shift and go to state 185
    cadenaString    shift and go to state 186
    id              shift and go to state 187
    cadena          shift and go to state 188
    in              shift and go to state 189
    not             shift and go to state 182
    like            shift and go to state 190


state 588

    (183) CREATETYPE -> create type id as enum para LEXP . parc
    (218) LEXP -> LEXP . coma EXP

    parc            shift and go to state 662
    coma            shift and go to state 164


state 589

    (136) CREATEDB -> create RD if not exist id OPCCDB .

    ptcoma          reduce using rule 136 (CREATEDB -> create RD if not exist id OPCCDB .)


state 590

    (48) CREATEINDEX -> create index id on id para id . ORDEN parc
    (49) CREATEINDEX -> create index id on id para id . id ORDEN parc
    (314) EXP -> id . para LEXP parc
    (315) EXP -> id . para parc
    (326) EXP -> id .
    (50) ORDEN -> . asc
    (51) ORDEN -> . desc
    (52) ORDEN -> . nulls first
    (53) ORDEN -> . nulls last
    (54) ORDEN -> . asc nulls first
    (55) ORDEN -> . desc nulls last
    (56) ORDEN -> . desc nulls first
    (57) ORDEN -> . asc nulls last
    (58) ORDEN -> .

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for parc resolved using rule 58 (ORDEN -> .)
    id              shift and go to state 663
    para            shift and go to state 194
    mas             reduce using rule 326 (EXP -> id .)
    menos           reduce using rule 326 (EXP -> id .)
    multiplicacion  reduce using rule 326 (EXP -> id .)
    division        reduce using rule 326 (EXP -> id .)
    modulo          reduce using rule 326 (EXP -> id .)
    elevado         reduce using rule 326 (EXP -> id .)
    and             reduce using rule 326 (EXP -> id .)
    or              reduce using rule 326 (EXP -> id .)
    mayor           reduce using rule 326 (EXP -> id .)
    menor           reduce using rule 326 (EXP -> id .)
    mayor_igual     reduce using rule 326 (EXP -> id .)
    menor_igual     reduce using rule 326 (EXP -> id .)
    igual           reduce using rule 326 (EXP -> id .)
    diferente1      reduce using rule 326 (EXP -> id .)
    diferente2      reduce using rule 326 (EXP -> id .)
    between         reduce using rule 326 (EXP -> id .)
    is              reduce using rule 326 (EXP -> id .)
    isnull          reduce using rule 326 (EXP -> id .)
    notnull         reduce using rule 326 (EXP -> id .)
    as              reduce using rule 326 (EXP -> id .)
    cadenaString    reduce using rule 326 (EXP -> id .)
    cadena          reduce using rule 326 (EXP -> id .)
    in              reduce using rule 326 (EXP -> id .)
    not             reduce using rule 326 (EXP -> id .)
    like            reduce using rule 326 (EXP -> id .)
    coma            reduce using rule 326 (EXP -> id .)
    asc             shift and go to state 665
    desc            shift and go to state 666
    nulls           shift and go to state 667
    parc            reduce using rule 58 (ORDEN -> .)

  ! id              [ reduce using rule 326 (EXP -> id .) ]
  ! parc            [ reduce using rule 326 (EXP -> id .) ]

    ORDEN                          shift and go to state 664

state 591

    (45) CREATEINDEX -> create index id on id para LEXP . parc
    (218) LEXP -> LEXP . coma EXP

    parc            shift and go to state 668
    coma            shift and go to state 164


state 592

    (47) CREATEINDEX -> create index id on id using hash . para LEXP parc

    para            shift and go to state 669


state 593

    (46) CREATEINDEX -> create unique index id on id para . LEXP parc
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 670
    EXP                            shift and go to state 79
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 594

    (30) PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE . LCONTENIDOP
    (32) LCONTENIDOP -> . LCONTENIDOP CONTENIDOP
    (33) LCONTENIDOP -> . CONTENIDOP
    (34) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn ptcoma
    (35) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn ptcoma
    (36) CONTENIDOP -> . LISTACONTENIDO
    (80) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (81) LISTACONTENIDO -> . CONTENIDO
    (82) CONTENIDO -> . ASIGNACION ptcoma
    (83) CONTENIDO -> . DECLARACIONES ptcoma
    (84) CONTENIDO -> . CONDICIONIF ptcoma
    (85) CONTENIDO -> . RAISE ptcoma
    (86) CONTENIDO -> . BEGINEND ptcoma
    (87) CONTENIDO -> . CALLPROCEDURE ptcoma
    (88) CONTENIDO -> . RETURN ptcoma
    (89) CONTENIDO -> . CASE ptcoma
    (67) ASIGNACION -> . id dospuntos igual EXP
    (68) ASIGNACION -> . id igual EXP
    (59) DECLARACIONES -> . id TIPO not null ASIG
    (60) DECLARACIONES -> . id TIPO ASIG
    (61) DECLARACIONES -> . id constant TIPO not null ASIG
    (62) DECLARACIONES -> . id constant TIPO ASIG
    (69) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (70) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (71) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (72) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (90) RAISE -> . raise LEVEL FORMAT
    (91) RAISE -> . raise LEVEL EXP
    (92) RAISE -> . raise LEVEL
    (93) RAISE -> . raise
    (94) RAISE -> . raise LEVEL cadena coma id
    (44) BEGINEND -> . begin LISTACONTENIDO end
    (29) CALLPROCEDURE -> . call id para LEXP parc
    (24) RETURN -> . return LEXP
    (25) RETURN -> . return id para LEXP parc
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    as              shift and go to state 599
    do              shift and go to state 601
    id              shift and go to state 340
    if              shift and go to state 30
    raise           shift and go to state 341
    begin           shift and go to state 342
    call            shift and go to state 343
    return          shift and go to state 344
    case            shift and go to state 32

    LCONTENIDOP                    shift and go to state 671
    CONTENIDOP                     shift and go to state 598
    LISTACONTENIDO                 shift and go to state 600
    CONTENIDO                      shift and go to state 331
    ASIGNACION                     shift and go to state 332
    DECLARACIONES                  shift and go to state 333
    CONDICIONIF                    shift and go to state 334
    RAISE                          shift and go to state 335
    BEGINEND                       shift and go to state 336
    CALLPROCEDURE                  shift and go to state 337
    RETURN                         shift and go to state 338
    CASE                           shift and go to state 339

state 595

    (31) PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP . LENGUAJE
    (32) LCONTENIDOP -> LCONTENIDOP . CONTENIDOP
    (41) LENGUAJE -> . language plpgsql
    (42) LENGUAJE -> . dolarn language plpgsql
    (43) LENGUAJE -> . dolarn language plpgsql ptcoma
    (34) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn ptcoma
    (35) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn ptcoma
    (36) CONTENIDOP -> . LISTACONTENIDO
    (80) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (81) LISTACONTENIDO -> . CONTENIDO
    (82) CONTENIDO -> . ASIGNACION ptcoma
    (83) CONTENIDO -> . DECLARACIONES ptcoma
    (84) CONTENIDO -> . CONDICIONIF ptcoma
    (85) CONTENIDO -> . RAISE ptcoma
    (86) CONTENIDO -> . BEGINEND ptcoma
    (87) CONTENIDO -> . CALLPROCEDURE ptcoma
    (88) CONTENIDO -> . RETURN ptcoma
    (89) CONTENIDO -> . CASE ptcoma
    (67) ASIGNACION -> . id dospuntos igual EXP
    (68) ASIGNACION -> . id igual EXP
    (59) DECLARACIONES -> . id TIPO not null ASIG
    (60) DECLARACIONES -> . id TIPO ASIG
    (61) DECLARACIONES -> . id constant TIPO not null ASIG
    (62) DECLARACIONES -> . id constant TIPO ASIG
    (69) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (70) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (71) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (72) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (90) RAISE -> . raise LEVEL FORMAT
    (91) RAISE -> . raise LEVEL EXP
    (92) RAISE -> . raise LEVEL
    (93) RAISE -> . raise
    (94) RAISE -> . raise LEVEL cadena coma id
    (44) BEGINEND -> . begin LISTACONTENIDO end
    (29) CALLPROCEDURE -> . call id para LEXP parc
    (24) RETURN -> . return LEXP
    (25) RETURN -> . return id para LEXP parc
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    language        shift and go to state 596
    dolarn          shift and go to state 597
    as              shift and go to state 599
    do              shift and go to state 601
    id              shift and go to state 340
    if              shift and go to state 30
    raise           shift and go to state 341
    begin           shift and go to state 342
    call            shift and go to state 343
    return          shift and go to state 344
    case            shift and go to state 32

    LENGUAJE                       shift and go to state 672
    CONTENIDOP                     shift and go to state 673
    LISTACONTENIDO                 shift and go to state 600
    CONTENIDO                      shift and go to state 331
    ASIGNACION                     shift and go to state 332
    DECLARACIONES                  shift and go to state 333
    CONDICIONIF                    shift and go to state 334
    RAISE                          shift and go to state 335
    BEGINEND                       shift and go to state 336
    CALLPROCEDURE                  shift and go to state 337
    RETURN                         shift and go to state 338
    CASE                           shift and go to state 339

state 596

    (41) LENGUAJE -> language . plpgsql

    plpgsql         shift and go to state 674


state 597

    (42) LENGUAJE -> dolarn . language plpgsql
    (43) LENGUAJE -> dolarn . language plpgsql ptcoma

    language        shift and go to state 675


state 598

    (33) LCONTENIDOP -> CONTENIDOP .

    language        reduce using rule 33 (LCONTENIDOP -> CONTENIDOP .)
    dolarn          reduce using rule 33 (LCONTENIDOP -> CONTENIDOP .)
    as              reduce using rule 33 (LCONTENIDOP -> CONTENIDOP .)
    do              reduce using rule 33 (LCONTENIDOP -> CONTENIDOP .)
    id              reduce using rule 33 (LCONTENIDOP -> CONTENIDOP .)
    if              reduce using rule 33 (LCONTENIDOP -> CONTENIDOP .)
    raise           reduce using rule 33 (LCONTENIDOP -> CONTENIDOP .)
    begin           reduce using rule 33 (LCONTENIDOP -> CONTENIDOP .)
    call            reduce using rule 33 (LCONTENIDOP -> CONTENIDOP .)
    return          reduce using rule 33 (LCONTENIDOP -> CONTENIDOP .)
    case            reduce using rule 33 (LCONTENIDOP -> CONTENIDOP .)
    use             reduce using rule 33 (LCONTENIDOP -> CONTENIDOP .)
    select          reduce using rule 33 (LCONTENIDOP -> CONTENIDOP .)
    create          reduce using rule 33 (LCONTENIDOP -> CONTENIDOP .)
    update          reduce using rule 33 (LCONTENIDOP -> CONTENIDOP .)
    delete          reduce using rule 33 (LCONTENIDOP -> CONTENIDOP .)
    alter           reduce using rule 33 (LCONTENIDOP -> CONTENIDOP .)
    drop            reduce using rule 33 (LCONTENIDOP -> CONTENIDOP .)
    insert          reduce using rule 33 (LCONTENIDOP -> CONTENIDOP .)
    show            reduce using rule 33 (LCONTENIDOP -> CONTENIDOP .)
    $end            reduce using rule 33 (LCONTENIDOP -> CONTENIDOP .)


state 599

    (34) CONTENIDOP -> as . dolarn LISTACONTENIDO dolarn ptcoma

    dolarn          shift and go to state 676


state 600

    (36) CONTENIDOP -> LISTACONTENIDO .
    (80) LISTACONTENIDO -> LISTACONTENIDO . CONTENIDO
    (82) CONTENIDO -> . ASIGNACION ptcoma
    (83) CONTENIDO -> . DECLARACIONES ptcoma
    (84) CONTENIDO -> . CONDICIONIF ptcoma
    (85) CONTENIDO -> . RAISE ptcoma
    (86) CONTENIDO -> . BEGINEND ptcoma
    (87) CONTENIDO -> . CALLPROCEDURE ptcoma
    (88) CONTENIDO -> . RETURN ptcoma
    (89) CONTENIDO -> . CASE ptcoma
    (67) ASIGNACION -> . id dospuntos igual EXP
    (68) ASIGNACION -> . id igual EXP
    (59) DECLARACIONES -> . id TIPO not null ASIG
    (60) DECLARACIONES -> . id TIPO ASIG
    (61) DECLARACIONES -> . id constant TIPO not null ASIG
    (62) DECLARACIONES -> . id constant TIPO ASIG
    (69) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (70) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (71) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (72) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (90) RAISE -> . raise LEVEL FORMAT
    (91) RAISE -> . raise LEVEL EXP
    (92) RAISE -> . raise LEVEL
    (93) RAISE -> . raise
    (94) RAISE -> . raise LEVEL cadena coma id
    (44) BEGINEND -> . begin LISTACONTENIDO end
    (29) CALLPROCEDURE -> . call id para LEXP parc
    (24) RETURN -> . return LEXP
    (25) RETURN -> . return id para LEXP parc
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for if resolved as shift
  ! shift/reduce conflict for raise resolved as shift
  ! shift/reduce conflict for begin resolved as shift
  ! shift/reduce conflict for call resolved as shift
  ! shift/reduce conflict for return resolved as shift
  ! shift/reduce conflict for case resolved as shift
    language        reduce using rule 36 (CONTENIDOP -> LISTACONTENIDO .)
    dolarn          reduce using rule 36 (CONTENIDOP -> LISTACONTENIDO .)
    as              reduce using rule 36 (CONTENIDOP -> LISTACONTENIDO .)
    do              reduce using rule 36 (CONTENIDOP -> LISTACONTENIDO .)
    use             reduce using rule 36 (CONTENIDOP -> LISTACONTENIDO .)
    select          reduce using rule 36 (CONTENIDOP -> LISTACONTENIDO .)
    create          reduce using rule 36 (CONTENIDOP -> LISTACONTENIDO .)
    update          reduce using rule 36 (CONTENIDOP -> LISTACONTENIDO .)
    delete          reduce using rule 36 (CONTENIDOP -> LISTACONTENIDO .)
    alter           reduce using rule 36 (CONTENIDOP -> LISTACONTENIDO .)
    drop            reduce using rule 36 (CONTENIDOP -> LISTACONTENIDO .)
    insert          reduce using rule 36 (CONTENIDOP -> LISTACONTENIDO .)
    show            reduce using rule 36 (CONTENIDOP -> LISTACONTENIDO .)
    $end            reduce using rule 36 (CONTENIDOP -> LISTACONTENIDO .)
    id              shift and go to state 340
    if              shift and go to state 30
    raise           shift and go to state 341
    begin           shift and go to state 342
    call            shift and go to state 343
    return          shift and go to state 344
    case            shift and go to state 32

  ! id              [ reduce using rule 36 (CONTENIDOP -> LISTACONTENIDO .) ]
  ! if              [ reduce using rule 36 (CONTENIDOP -> LISTACONTENIDO .) ]
  ! raise           [ reduce using rule 36 (CONTENIDOP -> LISTACONTENIDO .) ]
  ! begin           [ reduce using rule 36 (CONTENIDOP -> LISTACONTENIDO .) ]
  ! call            [ reduce using rule 36 (CONTENIDOP -> LISTACONTENIDO .) ]
  ! return          [ reduce using rule 36 (CONTENIDOP -> LISTACONTENIDO .) ]
  ! case            [ reduce using rule 36 (CONTENIDOP -> LISTACONTENIDO .) ]

    CONTENIDO                      shift and go to state 441
    ASIGNACION                     shift and go to state 332
    DECLARACIONES                  shift and go to state 333
    CONDICIONIF                    shift and go to state 334
    RAISE                          shift and go to state 335
    BEGINEND                       shift and go to state 336
    CALLPROCEDURE                  shift and go to state 337
    RETURN                         shift and go to state 338
    CASE                           shift and go to state 339

state 601

    (35) CONTENIDOP -> do . dolarn LISTACONTENIDO dolarn ptcoma

    dolarn          shift and go to state 677


state 602

    (37) LPARAM -> LPARAM coma inout . id TIPO

    id              shift and go to state 678


state 603

    (38) LPARAM -> LPARAM coma id . TIPO
    (220) TIPO -> . interval cadena
    (221) TIPO -> . decimal para int coma int parc
    (222) TIPO -> . decimal para int parc
    (223) TIPO -> . decimal
    (224) TIPO -> . numeric para int coma int parc
    (225) TIPO -> . numeric para int parc
    (226) TIPO -> . numeric
    (227) TIPO -> . varchar para int parc
    (228) TIPO -> . timestamp para int parc
    (229) TIPO -> . character para int parc
    (230) TIPO -> . interval para int parc
    (231) TIPO -> . char para int parc
    (232) TIPO -> . time para int parc
    (233) TIPO -> . character varying para int parc
    (234) TIPO -> . id modulo rowtype
    (235) TIPO -> . idPunto modulo type
    (236) TIPO -> . timestamp para int parc without time zone
    (237) TIPO -> . timestamp para int parc with time zone
    (238) TIPO -> . time para int parc without time zone
    (239) TIPO -> . time para int parc with time zone
    (240) TIPO -> . interval para int parc cadena
    (241) TIPO -> . smallint
    (242) TIPO -> . integer
    (243) TIPO -> . r_int
    (244) TIPO -> . bigint
    (245) TIPO -> . real
    (246) TIPO -> . double precision
    (247) TIPO -> . money
    (248) TIPO -> . text
    (249) TIPO -> . timestamp
    (250) TIPO -> . date
    (251) TIPO -> . time
    (252) TIPO -> . interval
    (253) TIPO -> . boolean
    (254) TIPO -> . record
    (255) TIPO -> . varchar
    (256) TIPO -> . timestamp without time zone
    (257) TIPO -> . timestamp with time zone
    (258) TIPO -> . time without time zone
    (259) TIPO -> . time with time zone
    (260) TIPO -> . id

    interval        shift and go to state 51
    decimal         shift and go to state 52
    numeric         shift and go to state 53
    varchar         shift and go to state 54
    timestamp       shift and go to state 55
    character       shift and go to state 56
    char            shift and go to state 57
    time            shift and go to state 58
    id              shift and go to state 46
    idPunto         shift and go to state 59
    smallint        shift and go to state 60
    integer         shift and go to state 61
    r_int           shift and go to state 62
    bigint          shift and go to state 63
    real            shift and go to state 64
    double          shift and go to state 65
    money           shift and go to state 66
    text            shift and go to state 67
    date            shift and go to state 68
    boolean         shift and go to state 69
    record          shift and go to state 70

    TIPO                           shift and go to state 679

state 604

    (39) LPARAM -> inout id TIPO .

    parc            reduce using rule 39 (LPARAM -> inout id TIPO .)
    coma            reduce using rule 39 (LPARAM -> inout id TIPO .)


state 605

    (26) FUNCIONES -> create function id para LPARAM parc RETURNP . LENGUAJE LCONTENIDOP
    (27) FUNCIONES -> create function id para LPARAM parc RETURNP . LCONTENIDOP LENGUAJE
    (41) LENGUAJE -> . language plpgsql
    (42) LENGUAJE -> . dolarn language plpgsql
    (43) LENGUAJE -> . dolarn language plpgsql ptcoma
    (32) LCONTENIDOP -> . LCONTENIDOP CONTENIDOP
    (33) LCONTENIDOP -> . CONTENIDOP
    (34) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn ptcoma
    (35) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn ptcoma
    (36) CONTENIDOP -> . LISTACONTENIDO
    (80) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (81) LISTACONTENIDO -> . CONTENIDO
    (82) CONTENIDO -> . ASIGNACION ptcoma
    (83) CONTENIDO -> . DECLARACIONES ptcoma
    (84) CONTENIDO -> . CONDICIONIF ptcoma
    (85) CONTENIDO -> . RAISE ptcoma
    (86) CONTENIDO -> . BEGINEND ptcoma
    (87) CONTENIDO -> . CALLPROCEDURE ptcoma
    (88) CONTENIDO -> . RETURN ptcoma
    (89) CONTENIDO -> . CASE ptcoma
    (67) ASIGNACION -> . id dospuntos igual EXP
    (68) ASIGNACION -> . id igual EXP
    (59) DECLARACIONES -> . id TIPO not null ASIG
    (60) DECLARACIONES -> . id TIPO ASIG
    (61) DECLARACIONES -> . id constant TIPO not null ASIG
    (62) DECLARACIONES -> . id constant TIPO ASIG
    (69) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (70) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (71) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (72) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (90) RAISE -> . raise LEVEL FORMAT
    (91) RAISE -> . raise LEVEL EXP
    (92) RAISE -> . raise LEVEL
    (93) RAISE -> . raise
    (94) RAISE -> . raise LEVEL cadena coma id
    (44) BEGINEND -> . begin LISTACONTENIDO end
    (29) CALLPROCEDURE -> . call id para LEXP parc
    (24) RETURN -> . return LEXP
    (25) RETURN -> . return id para LEXP parc
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    language        shift and go to state 596
    dolarn          shift and go to state 597
    as              shift and go to state 599
    do              shift and go to state 601
    id              shift and go to state 340
    if              shift and go to state 30
    raise           shift and go to state 341
    begin           shift and go to state 342
    call            shift and go to state 343
    return          shift and go to state 344
    case            shift and go to state 32

    LENGUAJE                       shift and go to state 680
    LCONTENIDOP                    shift and go to state 681
    CONTENIDOP                     shift and go to state 598
    LISTACONTENIDO                 shift and go to state 600
    CONTENIDO                      shift and go to state 331
    ASIGNACION                     shift and go to state 332
    DECLARACIONES                  shift and go to state 333
    CONDICIONIF                    shift and go to state 334
    RAISE                          shift and go to state 335
    BEGINEND                       shift and go to state 336
    CALLPROCEDURE                  shift and go to state 337
    RETURN                         shift and go to state 338
    CASE                           shift and go to state 339

state 606

    (28) RETURNP -> returns . TIPO as dolarn
    (220) TIPO -> . interval cadena
    (221) TIPO -> . decimal para int coma int parc
    (222) TIPO -> . decimal para int parc
    (223) TIPO -> . decimal
    (224) TIPO -> . numeric para int coma int parc
    (225) TIPO -> . numeric para int parc
    (226) TIPO -> . numeric
    (227) TIPO -> . varchar para int parc
    (228) TIPO -> . timestamp para int parc
    (229) TIPO -> . character para int parc
    (230) TIPO -> . interval para int parc
    (231) TIPO -> . char para int parc
    (232) TIPO -> . time para int parc
    (233) TIPO -> . character varying para int parc
    (234) TIPO -> . id modulo rowtype
    (235) TIPO -> . idPunto modulo type
    (236) TIPO -> . timestamp para int parc without time zone
    (237) TIPO -> . timestamp para int parc with time zone
    (238) TIPO -> . time para int parc without time zone
    (239) TIPO -> . time para int parc with time zone
    (240) TIPO -> . interval para int parc cadena
    (241) TIPO -> . smallint
    (242) TIPO -> . integer
    (243) TIPO -> . r_int
    (244) TIPO -> . bigint
    (245) TIPO -> . real
    (246) TIPO -> . double precision
    (247) TIPO -> . money
    (248) TIPO -> . text
    (249) TIPO -> . timestamp
    (250) TIPO -> . date
    (251) TIPO -> . time
    (252) TIPO -> . interval
    (253) TIPO -> . boolean
    (254) TIPO -> . record
    (255) TIPO -> . varchar
    (256) TIPO -> . timestamp without time zone
    (257) TIPO -> . timestamp with time zone
    (258) TIPO -> . time without time zone
    (259) TIPO -> . time with time zone
    (260) TIPO -> . id

    interval        shift and go to state 51
    decimal         shift and go to state 52
    numeric         shift and go to state 53
    varchar         shift and go to state 54
    timestamp       shift and go to state 55
    character       shift and go to state 56
    char            shift and go to state 57
    time            shift and go to state 58
    id              shift and go to state 46
    idPunto         shift and go to state 59
    smallint        shift and go to state 60
    integer         shift and go to state 61
    r_int           shift and go to state 62
    bigint          shift and go to state 63
    real            shift and go to state 64
    double          shift and go to state 65
    money           shift and go to state 66
    text            shift and go to state 67
    date            shift and go to state 68
    boolean         shift and go to state 69
    record          shift and go to state 70

    TIPO                           shift and go to state 682

state 607

    (213) LCAMPOS -> LCAMPOS coma id igual . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 683
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 608

    (125) OP -> alter column id set . not null
    (126) OP -> alter column id set . null

    not             shift and go to state 684
    null            shift and go to state 685


state 609

    (131) OP -> alter column id type . TIPO
    (220) TIPO -> . interval cadena
    (221) TIPO -> . decimal para int coma int parc
    (222) TIPO -> . decimal para int parc
    (223) TIPO -> . decimal
    (224) TIPO -> . numeric para int coma int parc
    (225) TIPO -> . numeric para int parc
    (226) TIPO -> . numeric
    (227) TIPO -> . varchar para int parc
    (228) TIPO -> . timestamp para int parc
    (229) TIPO -> . character para int parc
    (230) TIPO -> . interval para int parc
    (231) TIPO -> . char para int parc
    (232) TIPO -> . time para int parc
    (233) TIPO -> . character varying para int parc
    (234) TIPO -> . id modulo rowtype
    (235) TIPO -> . idPunto modulo type
    (236) TIPO -> . timestamp para int parc without time zone
    (237) TIPO -> . timestamp para int parc with time zone
    (238) TIPO -> . time para int parc without time zone
    (239) TIPO -> . time para int parc with time zone
    (240) TIPO -> . interval para int parc cadena
    (241) TIPO -> . smallint
    (242) TIPO -> . integer
    (243) TIPO -> . r_int
    (244) TIPO -> . bigint
    (245) TIPO -> . real
    (246) TIPO -> . double precision
    (247) TIPO -> . money
    (248) TIPO -> . text
    (249) TIPO -> . timestamp
    (250) TIPO -> . date
    (251) TIPO -> . time
    (252) TIPO -> . interval
    (253) TIPO -> . boolean
    (254) TIPO -> . record
    (255) TIPO -> . varchar
    (256) TIPO -> . timestamp without time zone
    (257) TIPO -> . timestamp with time zone
    (258) TIPO -> . time without time zone
    (259) TIPO -> . time with time zone
    (260) TIPO -> . id

    interval        shift and go to state 51
    decimal         shift and go to state 52
    numeric         shift and go to state 53
    varchar         shift and go to state 54
    timestamp       shift and go to state 55
    character       shift and go to state 56
    char            shift and go to state 57
    time            shift and go to state 58
    id              shift and go to state 46
    idPunto         shift and go to state 59
    smallint        shift and go to state 60
    integer         shift and go to state 61
    r_int           shift and go to state 62
    bigint          shift and go to state 63
    real            shift and go to state 64
    double          shift and go to state 65
    money           shift and go to state 66
    text            shift and go to state 67
    date            shift and go to state 68
    boolean         shift and go to state 69
    record          shift and go to state 70

    TIPO                           shift and go to state 686

state 610

    (118) OP -> add column id TIPO .

    coma            reduce using rule 118 (OP -> add column id TIPO .)
    ptcoma          reduce using rule 118 (OP -> add column id TIPO .)


state 611

    (119) OP -> add check para CONDCHECK . parc

    parc            shift and go to state 687


state 612

    (120) OP -> add constraint id check . para CONDCHECK parc

    para            shift and go to state 688


state 613

    (121) OP -> add constraint id unique . para LEXP parc

    para            shift and go to state 689


state 614

    (124) OP -> add constraint id foreign . key para LEXP parc references id para LEXP parc

    key             shift and go to state 690


state 615

    (122) OP -> add unique para LEXP . parc
    (218) LEXP -> LEXP . coma EXP

    parc            shift and go to state 691
    coma            shift and go to state 164


state 616

    (123) OP -> add foreign key para . LEXP parc references id para LEXP parc
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 692
    EXP                            shift and go to state 79
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 617

    (130) OP -> rename column id to . id

    id              shift and go to state 693


state 618

    (69) CONDICIONIF -> if EXP then LISTACONTENIDO ELSEF end if .

    ptcoma          reduce using rule 69 (CONDICIONIF -> if EXP then LISTACONTENIDO ELSEF end if .)


state 619

    (70) CONDICIONIF -> if EXP then LISTACONTENIDO LELIF end if .

    ptcoma          reduce using rule 70 (CONDICIONIF -> if EXP then LISTACONTENIDO LELIF end if .)


state 620

    (72) CONDICIONIF -> if EXP then LISTACONTENIDO LELIF ELSEF end . if

    if              shift and go to state 694


state 621

    (73) LELIF -> LELIF elsif EXP . then LISTACONTENIDO
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    then            shift and go to state 695
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170
    and             shift and go to state 171
    or              shift and go to state 172
    mayor           shift and go to state 173
    menor           shift and go to state 174
    mayor_igual     shift and go to state 175
    menor_igual     shift and go to state 176
    igual           shift and go to state 177
    diferente1      shift and go to state 178
    diferente2      shift and go to state 179
    between         shift and go to state 180
    is              shift and go to state 181
    isnull          shift and go to state 183
    notnull         shift and go to state 184
    as              shift and go to state 185
    cadenaString    shift and go to state 186
    id              shift and go to state 187
    cadena          shift and go to state 188
    in              shift and go to state 189
    not             shift and go to state 182
    like            shift and go to state 190


state 622

    (74) LELIF -> elsif EXP then . LISTACONTENIDO
    (80) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (81) LISTACONTENIDO -> . CONTENIDO
    (82) CONTENIDO -> . ASIGNACION ptcoma
    (83) CONTENIDO -> . DECLARACIONES ptcoma
    (84) CONTENIDO -> . CONDICIONIF ptcoma
    (85) CONTENIDO -> . RAISE ptcoma
    (86) CONTENIDO -> . BEGINEND ptcoma
    (87) CONTENIDO -> . CALLPROCEDURE ptcoma
    (88) CONTENIDO -> . RETURN ptcoma
    (89) CONTENIDO -> . CASE ptcoma
    (67) ASIGNACION -> . id dospuntos igual EXP
    (68) ASIGNACION -> . id igual EXP
    (59) DECLARACIONES -> . id TIPO not null ASIG
    (60) DECLARACIONES -> . id TIPO ASIG
    (61) DECLARACIONES -> . id constant TIPO not null ASIG
    (62) DECLARACIONES -> . id constant TIPO ASIG
    (69) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (70) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (71) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (72) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (90) RAISE -> . raise LEVEL FORMAT
    (91) RAISE -> . raise LEVEL EXP
    (92) RAISE -> . raise LEVEL
    (93) RAISE -> . raise
    (94) RAISE -> . raise LEVEL cadena coma id
    (44) BEGINEND -> . begin LISTACONTENIDO end
    (29) CALLPROCEDURE -> . call id para LEXP parc
    (24) RETURN -> . return LEXP
    (25) RETURN -> . return id para LEXP parc
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    id              shift and go to state 340
    if              shift and go to state 30
    raise           shift and go to state 341
    begin           shift and go to state 342
    call            shift and go to state 343
    return          shift and go to state 344
    case            shift and go to state 32

    LISTACONTENIDO                 shift and go to state 696
    CONTENIDO                      shift and go to state 331
    ASIGNACION                     shift and go to state 332
    DECLARACIONES                  shift and go to state 333
    CONDICIONIF                    shift and go to state 334
    RAISE                          shift and go to state 335
    BEGINEND                       shift and go to state 336
    CALLPROCEDURE                  shift and go to state 337
    RETURN                         shift and go to state 338
    CASE                           shift and go to state 339

state 623

    (94) RAISE -> raise LEVEL cadena coma . id

    id              shift and go to state 697


state 624

    (101) FORMAT -> format para . EXP coma LEXP parc
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 698
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 625

    (29) CALLPROCEDURE -> call id para LEXP . parc
    (218) LEXP -> LEXP . coma EXP

    parc            shift and go to state 699
    coma            shift and go to state 164


state 626

    (25) RETURN -> return id para LEXP . parc
    (314) EXP -> id para LEXP . parc
    (218) LEXP -> LEXP . coma EXP

    parc            shift and go to state 700
    coma            shift and go to state 164


state 627

    (107) INSERT -> insert into id values para LEXP parc .

    ptcoma          reduce using rule 107 (INSERT -> insert into id values para LEXP parc .)


state 628

    (108) INSERT -> insert into id para LEXP parc values . para LEXP parc

    para            shift and go to state 701


state 629

    (236) TIPO -> timestamp para int parc without time zone .

    not             reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    default         reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    dospuntos       reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    igual           reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    ptcoma          reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    r_from          reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    coma            reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    where           reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    group           reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    having          reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    union           reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    intersect       reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    except          reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    order           reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    limit           reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    offset          reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    mas             reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    menos           reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    multiplicacion  reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    division        reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    modulo          reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    elevado         reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    and             reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    or              reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    mayor           reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    menor           reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    mayor_igual     reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    menor_igual     reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    diferente1      reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    diferente2      reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    between         reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    is              reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    isnull          reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    notnull         reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    as              reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    cadenaString    reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    id              reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    cadena          reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    in              reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    like            reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    then            reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    when            reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    parc            reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    end             reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    else            reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    constraint      reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    unique          reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    check           reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    null            reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    primary         reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    references      reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    asc             reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)
    desc            reduce using rule 236 (TIPO -> timestamp para int parc without time zone .)


state 630

    (237) TIPO -> timestamp para int parc with time zone .

    not             reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    default         reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    dospuntos       reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    igual           reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    ptcoma          reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    r_from          reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    coma            reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    where           reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    group           reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    having          reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    union           reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    intersect       reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    except          reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    order           reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    limit           reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    offset          reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    mas             reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    menos           reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    multiplicacion  reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    division        reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    modulo          reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    elevado         reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    and             reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    or              reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    mayor           reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    menor           reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    mayor_igual     reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    menor_igual     reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    diferente1      reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    diferente2      reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    between         reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    is              reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    isnull          reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    notnull         reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    as              reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    cadenaString    reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    id              reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    cadena          reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    in              reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    like            reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    then            reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    when            reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    parc            reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    end             reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    else            reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    constraint      reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    unique          reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    check           reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    null            reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    primary         reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    references      reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    asc             reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)
    desc            reduce using rule 237 (TIPO -> timestamp para int parc with time zone .)


state 631

    (238) TIPO -> time para int parc without time zone .

    not             reduce using rule 238 (TIPO -> time para int parc without time zone .)
    default         reduce using rule 238 (TIPO -> time para int parc without time zone .)
    dospuntos       reduce using rule 238 (TIPO -> time para int parc without time zone .)
    igual           reduce using rule 238 (TIPO -> time para int parc without time zone .)
    ptcoma          reduce using rule 238 (TIPO -> time para int parc without time zone .)
    r_from          reduce using rule 238 (TIPO -> time para int parc without time zone .)
    coma            reduce using rule 238 (TIPO -> time para int parc without time zone .)
    where           reduce using rule 238 (TIPO -> time para int parc without time zone .)
    group           reduce using rule 238 (TIPO -> time para int parc without time zone .)
    having          reduce using rule 238 (TIPO -> time para int parc without time zone .)
    union           reduce using rule 238 (TIPO -> time para int parc without time zone .)
    intersect       reduce using rule 238 (TIPO -> time para int parc without time zone .)
    except          reduce using rule 238 (TIPO -> time para int parc without time zone .)
    order           reduce using rule 238 (TIPO -> time para int parc without time zone .)
    limit           reduce using rule 238 (TIPO -> time para int parc without time zone .)
    offset          reduce using rule 238 (TIPO -> time para int parc without time zone .)
    mas             reduce using rule 238 (TIPO -> time para int parc without time zone .)
    menos           reduce using rule 238 (TIPO -> time para int parc without time zone .)
    multiplicacion  reduce using rule 238 (TIPO -> time para int parc without time zone .)
    division        reduce using rule 238 (TIPO -> time para int parc without time zone .)
    modulo          reduce using rule 238 (TIPO -> time para int parc without time zone .)
    elevado         reduce using rule 238 (TIPO -> time para int parc without time zone .)
    and             reduce using rule 238 (TIPO -> time para int parc without time zone .)
    or              reduce using rule 238 (TIPO -> time para int parc without time zone .)
    mayor           reduce using rule 238 (TIPO -> time para int parc without time zone .)
    menor           reduce using rule 238 (TIPO -> time para int parc without time zone .)
    mayor_igual     reduce using rule 238 (TIPO -> time para int parc without time zone .)
    menor_igual     reduce using rule 238 (TIPO -> time para int parc without time zone .)
    diferente1      reduce using rule 238 (TIPO -> time para int parc without time zone .)
    diferente2      reduce using rule 238 (TIPO -> time para int parc without time zone .)
    between         reduce using rule 238 (TIPO -> time para int parc without time zone .)
    is              reduce using rule 238 (TIPO -> time para int parc without time zone .)
    isnull          reduce using rule 238 (TIPO -> time para int parc without time zone .)
    notnull         reduce using rule 238 (TIPO -> time para int parc without time zone .)
    as              reduce using rule 238 (TIPO -> time para int parc without time zone .)
    cadenaString    reduce using rule 238 (TIPO -> time para int parc without time zone .)
    id              reduce using rule 238 (TIPO -> time para int parc without time zone .)
    cadena          reduce using rule 238 (TIPO -> time para int parc without time zone .)
    in              reduce using rule 238 (TIPO -> time para int parc without time zone .)
    like            reduce using rule 238 (TIPO -> time para int parc without time zone .)
    then            reduce using rule 238 (TIPO -> time para int parc without time zone .)
    when            reduce using rule 238 (TIPO -> time para int parc without time zone .)
    parc            reduce using rule 238 (TIPO -> time para int parc without time zone .)
    end             reduce using rule 238 (TIPO -> time para int parc without time zone .)
    else            reduce using rule 238 (TIPO -> time para int parc without time zone .)
    constraint      reduce using rule 238 (TIPO -> time para int parc without time zone .)
    unique          reduce using rule 238 (TIPO -> time para int parc without time zone .)
    check           reduce using rule 238 (TIPO -> time para int parc without time zone .)
    null            reduce using rule 238 (TIPO -> time para int parc without time zone .)
    primary         reduce using rule 238 (TIPO -> time para int parc without time zone .)
    references      reduce using rule 238 (TIPO -> time para int parc without time zone .)
    asc             reduce using rule 238 (TIPO -> time para int parc without time zone .)
    desc            reduce using rule 238 (TIPO -> time para int parc without time zone .)


state 632

    (239) TIPO -> time para int parc with time zone .

    not             reduce using rule 239 (TIPO -> time para int parc with time zone .)
    default         reduce using rule 239 (TIPO -> time para int parc with time zone .)
    dospuntos       reduce using rule 239 (TIPO -> time para int parc with time zone .)
    igual           reduce using rule 239 (TIPO -> time para int parc with time zone .)
    ptcoma          reduce using rule 239 (TIPO -> time para int parc with time zone .)
    r_from          reduce using rule 239 (TIPO -> time para int parc with time zone .)
    coma            reduce using rule 239 (TIPO -> time para int parc with time zone .)
    where           reduce using rule 239 (TIPO -> time para int parc with time zone .)
    group           reduce using rule 239 (TIPO -> time para int parc with time zone .)
    having          reduce using rule 239 (TIPO -> time para int parc with time zone .)
    union           reduce using rule 239 (TIPO -> time para int parc with time zone .)
    intersect       reduce using rule 239 (TIPO -> time para int parc with time zone .)
    except          reduce using rule 239 (TIPO -> time para int parc with time zone .)
    order           reduce using rule 239 (TIPO -> time para int parc with time zone .)
    limit           reduce using rule 239 (TIPO -> time para int parc with time zone .)
    offset          reduce using rule 239 (TIPO -> time para int parc with time zone .)
    mas             reduce using rule 239 (TIPO -> time para int parc with time zone .)
    menos           reduce using rule 239 (TIPO -> time para int parc with time zone .)
    multiplicacion  reduce using rule 239 (TIPO -> time para int parc with time zone .)
    division        reduce using rule 239 (TIPO -> time para int parc with time zone .)
    modulo          reduce using rule 239 (TIPO -> time para int parc with time zone .)
    elevado         reduce using rule 239 (TIPO -> time para int parc with time zone .)
    and             reduce using rule 239 (TIPO -> time para int parc with time zone .)
    or              reduce using rule 239 (TIPO -> time para int parc with time zone .)
    mayor           reduce using rule 239 (TIPO -> time para int parc with time zone .)
    menor           reduce using rule 239 (TIPO -> time para int parc with time zone .)
    mayor_igual     reduce using rule 239 (TIPO -> time para int parc with time zone .)
    menor_igual     reduce using rule 239 (TIPO -> time para int parc with time zone .)
    diferente1      reduce using rule 239 (TIPO -> time para int parc with time zone .)
    diferente2      reduce using rule 239 (TIPO -> time para int parc with time zone .)
    between         reduce using rule 239 (TIPO -> time para int parc with time zone .)
    is              reduce using rule 239 (TIPO -> time para int parc with time zone .)
    isnull          reduce using rule 239 (TIPO -> time para int parc with time zone .)
    notnull         reduce using rule 239 (TIPO -> time para int parc with time zone .)
    as              reduce using rule 239 (TIPO -> time para int parc with time zone .)
    cadenaString    reduce using rule 239 (TIPO -> time para int parc with time zone .)
    id              reduce using rule 239 (TIPO -> time para int parc with time zone .)
    cadena          reduce using rule 239 (TIPO -> time para int parc with time zone .)
    in              reduce using rule 239 (TIPO -> time para int parc with time zone .)
    like            reduce using rule 239 (TIPO -> time para int parc with time zone .)
    then            reduce using rule 239 (TIPO -> time para int parc with time zone .)
    when            reduce using rule 239 (TIPO -> time para int parc with time zone .)
    parc            reduce using rule 239 (TIPO -> time para int parc with time zone .)
    end             reduce using rule 239 (TIPO -> time para int parc with time zone .)
    else            reduce using rule 239 (TIPO -> time para int parc with time zone .)
    constraint      reduce using rule 239 (TIPO -> time para int parc with time zone .)
    unique          reduce using rule 239 (TIPO -> time para int parc with time zone .)
    check           reduce using rule 239 (TIPO -> time para int parc with time zone .)
    null            reduce using rule 239 (TIPO -> time para int parc with time zone .)
    primary         reduce using rule 239 (TIPO -> time para int parc with time zone .)
    references      reduce using rule 239 (TIPO -> time para int parc with time zone .)
    asc             reduce using rule 239 (TIPO -> time para int parc with time zone .)
    desc            reduce using rule 239 (TIPO -> time para int parc with time zone .)


state 633

    (184) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING . COMBINING ORDER LIMIT
    (198) COMBINING -> . union EXP
    (199) COMBINING -> . union all EXP
    (200) COMBINING -> . intersect EXP
    (201) COMBINING -> . except EXP
    (202) COMBINING -> .

  ! shift/reduce conflict for union resolved as shift
  ! shift/reduce conflict for intersect resolved as shift
  ! shift/reduce conflict for except resolved as shift
    union           shift and go to state 486
    intersect       shift and go to state 487
    except          shift and go to state 488
    r_from          reduce using rule 202 (COMBINING -> .)
    coma            reduce using rule 202 (COMBINING -> .)
    where           reduce using rule 202 (COMBINING -> .)
    group           reduce using rule 202 (COMBINING -> .)
    having          reduce using rule 202 (COMBINING -> .)
    order           reduce using rule 202 (COMBINING -> .)
    limit           reduce using rule 202 (COMBINING -> .)
    offset          reduce using rule 202 (COMBINING -> .)
    ptcoma          reduce using rule 202 (COMBINING -> .)
    mas             reduce using rule 202 (COMBINING -> .)
    menos           reduce using rule 202 (COMBINING -> .)
    multiplicacion  reduce using rule 202 (COMBINING -> .)
    division        reduce using rule 202 (COMBINING -> .)
    modulo          reduce using rule 202 (COMBINING -> .)
    elevado         reduce using rule 202 (COMBINING -> .)
    and             reduce using rule 202 (COMBINING -> .)
    or              reduce using rule 202 (COMBINING -> .)
    mayor           reduce using rule 202 (COMBINING -> .)
    menor           reduce using rule 202 (COMBINING -> .)
    mayor_igual     reduce using rule 202 (COMBINING -> .)
    menor_igual     reduce using rule 202 (COMBINING -> .)
    igual           reduce using rule 202 (COMBINING -> .)
    diferente1      reduce using rule 202 (COMBINING -> .)
    diferente2      reduce using rule 202 (COMBINING -> .)
    between         reduce using rule 202 (COMBINING -> .)
    is              reduce using rule 202 (COMBINING -> .)
    isnull          reduce using rule 202 (COMBINING -> .)
    notnull         reduce using rule 202 (COMBINING -> .)
    as              reduce using rule 202 (COMBINING -> .)
    cadenaString    reduce using rule 202 (COMBINING -> .)
    id              reduce using rule 202 (COMBINING -> .)
    cadena          reduce using rule 202 (COMBINING -> .)
    in              reduce using rule 202 (COMBINING -> .)
    not             reduce using rule 202 (COMBINING -> .)
    like            reduce using rule 202 (COMBINING -> .)
    then            reduce using rule 202 (COMBINING -> .)
    when            reduce using rule 202 (COMBINING -> .)
    parc            reduce using rule 202 (COMBINING -> .)
    end             reduce using rule 202 (COMBINING -> .)
    else            reduce using rule 202 (COMBINING -> .)
    constraint      reduce using rule 202 (COMBINING -> .)
    unique          reduce using rule 202 (COMBINING -> .)
    check           reduce using rule 202 (COMBINING -> .)
    default         reduce using rule 202 (COMBINING -> .)
    null            reduce using rule 202 (COMBINING -> .)
    primary         reduce using rule 202 (COMBINING -> .)
    references      reduce using rule 202 (COMBINING -> .)
    asc             reduce using rule 202 (COMBINING -> .)
    desc            reduce using rule 202 (COMBINING -> .)

  ! union           [ reduce using rule 202 (COMBINING -> .) ]
  ! intersect       [ reduce using rule 202 (COMBINING -> .) ]
  ! except          [ reduce using rule 202 (COMBINING -> .) ]

    COMBINING                      shift and go to state 702

state 634

    (185) SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING . ORDER LIMIT
    (207) ORDER -> . order by LEXP ORD
    (208) ORDER -> . order by LEXP
    (209) ORDER -> .

  ! shift/reduce conflict for order resolved as shift
    order           shift and go to state 560
    r_from          reduce using rule 209 (ORDER -> .)
    coma            reduce using rule 209 (ORDER -> .)
    where           reduce using rule 209 (ORDER -> .)
    group           reduce using rule 209 (ORDER -> .)
    having          reduce using rule 209 (ORDER -> .)
    union           reduce using rule 209 (ORDER -> .)
    intersect       reduce using rule 209 (ORDER -> .)
    except          reduce using rule 209 (ORDER -> .)
    limit           reduce using rule 209 (ORDER -> .)
    offset          reduce using rule 209 (ORDER -> .)
    ptcoma          reduce using rule 209 (ORDER -> .)
    mas             reduce using rule 209 (ORDER -> .)
    menos           reduce using rule 209 (ORDER -> .)
    multiplicacion  reduce using rule 209 (ORDER -> .)
    division        reduce using rule 209 (ORDER -> .)
    modulo          reduce using rule 209 (ORDER -> .)
    elevado         reduce using rule 209 (ORDER -> .)
    and             reduce using rule 209 (ORDER -> .)
    or              reduce using rule 209 (ORDER -> .)
    mayor           reduce using rule 209 (ORDER -> .)
    menor           reduce using rule 209 (ORDER -> .)
    mayor_igual     reduce using rule 209 (ORDER -> .)
    menor_igual     reduce using rule 209 (ORDER -> .)
    igual           reduce using rule 209 (ORDER -> .)
    diferente1      reduce using rule 209 (ORDER -> .)
    diferente2      reduce using rule 209 (ORDER -> .)
    between         reduce using rule 209 (ORDER -> .)
    is              reduce using rule 209 (ORDER -> .)
    isnull          reduce using rule 209 (ORDER -> .)
    notnull         reduce using rule 209 (ORDER -> .)
    as              reduce using rule 209 (ORDER -> .)
    cadenaString    reduce using rule 209 (ORDER -> .)
    id              reduce using rule 209 (ORDER -> .)
    cadena          reduce using rule 209 (ORDER -> .)
    in              reduce using rule 209 (ORDER -> .)
    not             reduce using rule 209 (ORDER -> .)
    like            reduce using rule 209 (ORDER -> .)
    then            reduce using rule 209 (ORDER -> .)
    when            reduce using rule 209 (ORDER -> .)
    parc            reduce using rule 209 (ORDER -> .)
    end             reduce using rule 209 (ORDER -> .)
    else            reduce using rule 209 (ORDER -> .)
    constraint      reduce using rule 209 (ORDER -> .)
    unique          reduce using rule 209 (ORDER -> .)
    check           reduce using rule 209 (ORDER -> .)
    default         reduce using rule 209 (ORDER -> .)
    null            reduce using rule 209 (ORDER -> .)
    primary         reduce using rule 209 (ORDER -> .)
    references      reduce using rule 209 (ORDER -> .)
    asc             reduce using rule 209 (ORDER -> .)
    desc            reduce using rule 209 (ORDER -> .)

  ! order           [ reduce using rule 209 (ORDER -> .) ]

    ORDER                          shift and go to state 703

state 635

    (186) SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .

    ptcoma          reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    r_from          reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    coma            reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    where           reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    group           reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    having          reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    union           reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    intersect       reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    except          reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    order           reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    limit           reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    offset          reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mas             reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menos           reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    multiplicacion  reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    division        reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    modulo          reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    elevado         reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    and             reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    or              reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor           reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor           reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor_igual     reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor_igual     reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    igual           reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente1      reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente2      reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    between         reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    is              reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    isnull          reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    notnull         reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    as              reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadenaString    reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    id              reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadena          reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    in              reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    not             reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    like            reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    then            reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    when            reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    parc            reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    end             reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    else            reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    constraint      reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    unique          reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    check           reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    default         reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    null            reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    primary         reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    references      reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    asc             reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    desc            reduce using rule 186 (SELECT -> select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)


state 636

    (187) LIMIT -> limit . int
    (188) LIMIT -> limit . all
    (190) LIMIT -> limit . int offset int
    (192) LIMIT -> limit . all offset int

    int             shift and go to state 704
    all             shift and go to state 705


state 637

    (189) LIMIT -> offset . int
    (191) LIMIT -> offset . int limit int
    (193) LIMIT -> offset . int limit all

    int             shift and go to state 706


state 638

    (207) ORDER -> order by . LEXP ORD
    (208) ORDER -> order by . LEXP
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 707
    EXP                            shift and go to state 79
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 639

    (199) COMBINING -> union all EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente1 resolved as shift
  ! shift/reduce conflict for diferente2 resolved as shift
  ! shift/reduce conflict for between resolved as shift
  ! shift/reduce conflict for is resolved as shift
  ! shift/reduce conflict for isnull resolved as shift
  ! shift/reduce conflict for notnull resolved as shift
  ! shift/reduce conflict for as resolved as shift
  ! shift/reduce conflict for cadenaString resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for cadena resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for not resolved as shift
  ! shift/reduce conflict for like resolved as shift
    r_from          reduce using rule 199 (COMBINING -> union all EXP .)
    coma            reduce using rule 199 (COMBINING -> union all EXP .)
    where           reduce using rule 199 (COMBINING -> union all EXP .)
    group           reduce using rule 199 (COMBINING -> union all EXP .)
    having          reduce using rule 199 (COMBINING -> union all EXP .)
    union           reduce using rule 199 (COMBINING -> union all EXP .)
    intersect       reduce using rule 199 (COMBINING -> union all EXP .)
    except          reduce using rule 199 (COMBINING -> union all EXP .)
    order           reduce using rule 199 (COMBINING -> union all EXP .)
    limit           reduce using rule 199 (COMBINING -> union all EXP .)
    offset          reduce using rule 199 (COMBINING -> union all EXP .)
    ptcoma          reduce using rule 199 (COMBINING -> union all EXP .)
    then            reduce using rule 199 (COMBINING -> union all EXP .)
    when            reduce using rule 199 (COMBINING -> union all EXP .)
    parc            reduce using rule 199 (COMBINING -> union all EXP .)
    end             reduce using rule 199 (COMBINING -> union all EXP .)
    else            reduce using rule 199 (COMBINING -> union all EXP .)
    constraint      reduce using rule 199 (COMBINING -> union all EXP .)
    unique          reduce using rule 199 (COMBINING -> union all EXP .)
    check           reduce using rule 199 (COMBINING -> union all EXP .)
    default         reduce using rule 199 (COMBINING -> union all EXP .)
    null            reduce using rule 199 (COMBINING -> union all EXP .)
    primary         reduce using rule 199 (COMBINING -> union all EXP .)
    references      reduce using rule 199 (COMBINING -> union all EXP .)
    asc             reduce using rule 199 (COMBINING -> union all EXP .)
    desc            reduce using rule 199 (COMBINING -> union all EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170
    and             shift and go to state 171
    or              shift and go to state 172
    mayor           shift and go to state 173
    menor           shift and go to state 174
    mayor_igual     shift and go to state 175
    menor_igual     shift and go to state 176
    igual           shift and go to state 177
    diferente1      shift and go to state 178
    diferente2      shift and go to state 179
    between         shift and go to state 180
    is              shift and go to state 181
    isnull          shift and go to state 183
    notnull         shift and go to state 184
    as              shift and go to state 185
    cadenaString    shift and go to state 186
    id              shift and go to state 187
    cadena          shift and go to state 188
    in              shift and go to state 189
    not             shift and go to state 182
    like            shift and go to state 190

  ! mas             [ reduce using rule 199 (COMBINING -> union all EXP .) ]
  ! menos           [ reduce using rule 199 (COMBINING -> union all EXP .) ]
  ! multiplicacion  [ reduce using rule 199 (COMBINING -> union all EXP .) ]
  ! division        [ reduce using rule 199 (COMBINING -> union all EXP .) ]
  ! modulo          [ reduce using rule 199 (COMBINING -> union all EXP .) ]
  ! elevado         [ reduce using rule 199 (COMBINING -> union all EXP .) ]
  ! and             [ reduce using rule 199 (COMBINING -> union all EXP .) ]
  ! or              [ reduce using rule 199 (COMBINING -> union all EXP .) ]
  ! mayor           [ reduce using rule 199 (COMBINING -> union all EXP .) ]
  ! menor           [ reduce using rule 199 (COMBINING -> union all EXP .) ]
  ! mayor_igual     [ reduce using rule 199 (COMBINING -> union all EXP .) ]
  ! menor_igual     [ reduce using rule 199 (COMBINING -> union all EXP .) ]
  ! igual           [ reduce using rule 199 (COMBINING -> union all EXP .) ]
  ! diferente1      [ reduce using rule 199 (COMBINING -> union all EXP .) ]
  ! diferente2      [ reduce using rule 199 (COMBINING -> union all EXP .) ]
  ! between         [ reduce using rule 199 (COMBINING -> union all EXP .) ]
  ! is              [ reduce using rule 199 (COMBINING -> union all EXP .) ]
  ! isnull          [ reduce using rule 199 (COMBINING -> union all EXP .) ]
  ! notnull         [ reduce using rule 199 (COMBINING -> union all EXP .) ]
  ! as              [ reduce using rule 199 (COMBINING -> union all EXP .) ]
  ! cadenaString    [ reduce using rule 199 (COMBINING -> union all EXP .) ]
  ! id              [ reduce using rule 199 (COMBINING -> union all EXP .) ]
  ! cadena          [ reduce using rule 199 (COMBINING -> union all EXP .) ]
  ! in              [ reduce using rule 199 (COMBINING -> union all EXP .) ]
  ! not             [ reduce using rule 199 (COMBINING -> union all EXP .) ]
  ! like            [ reduce using rule 199 (COMBINING -> union all EXP .) ]


state 640

    (317) EXP -> all para . LEXP parc
    (312) EXP -> para . EXP parc
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 295
    EXP                            shift and go to state 708
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 641

    (319) EXP -> extract para FIELDS r_from timestamp cadena parc .

    r_from          reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    coma            reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    where           reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    group           reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    having          reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    union           reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    intersect       reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    except          reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    order           reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    limit           reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    offset          reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    ptcoma          reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    mas             reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    menos           reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    multiplicacion  reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    division        reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    modulo          reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    elevado         reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    and             reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    or              reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    mayor           reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    menor           reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    mayor_igual     reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    menor_igual     reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    igual           reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    diferente1      reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    diferente2      reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    between         reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    is              reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    isnull          reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    notnull         reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    as              reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    cadenaString    reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    id              reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    cadena          reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    in              reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    not             reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    like            reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    then            reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    when            reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    parc            reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    end             reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    else            reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    constraint      reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    unique          reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    check           reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    default         reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    null            reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    primary         reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    references      reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    asc             reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)
    desc            reduce using rule 319 (EXP -> extract para FIELDS r_from timestamp cadena parc .)


state 642

    (160) LOPCOLUMN -> LOPCOLUMN OPCOLUMN .

    constraint      reduce using rule 160 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    unique          reduce using rule 160 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    check           reduce using rule 160 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    default         reduce using rule 160 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    not             reduce using rule 160 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    null            reduce using rule 160 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    primary         reduce using rule 160 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    references      reduce using rule 160 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    parc            reduce using rule 160 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)
    coma            reduce using rule 160 (LOPCOLUMN -> LOPCOLUMN OPCOLUMN .)


state 643

    (162) OPCOLUMN -> constraint id . unique
    (164) OPCOLUMN -> constraint id . check para CONDCHECK parc

    unique          shift and go to state 709
    check           shift and go to state 710


state 644

    (165) OPCOLUMN -> check para . CONDCHECK parc
    (175) CONDCHECK -> . EXP mayor EXP
    (176) CONDCHECK -> . EXP menor EXP
    (177) CONDCHECK -> . EXP mayor_igual EXP
    (178) CONDCHECK -> . EXP menor_igual EXP
    (179) CONDCHECK -> . EXP igual EXP
    (180) CONDCHECK -> . EXP diferente1 EXP
    (181) CONDCHECK -> . EXP diferente2 EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    CONDCHECK                      shift and go to state 711
    EXP                            shift and go to state 587
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 645

    (166) OPCOLUMN -> default EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

  ! shift/reduce conflict for not resolved as shift
    constraint      reduce using rule 166 (OPCOLUMN -> default EXP .)
    unique          reduce using rule 166 (OPCOLUMN -> default EXP .)
    check           reduce using rule 166 (OPCOLUMN -> default EXP .)
    default         reduce using rule 166 (OPCOLUMN -> default EXP .)
    null            reduce using rule 166 (OPCOLUMN -> default EXP .)
    primary         reduce using rule 166 (OPCOLUMN -> default EXP .)
    references      reduce using rule 166 (OPCOLUMN -> default EXP .)
    parc            reduce using rule 166 (OPCOLUMN -> default EXP .)
    coma            reduce using rule 166 (OPCOLUMN -> default EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170
    and             shift and go to state 171
    or              shift and go to state 172
    mayor           shift and go to state 173
    menor           shift and go to state 174
    mayor_igual     shift and go to state 175
    menor_igual     shift and go to state 176
    igual           shift and go to state 177
    diferente1      shift and go to state 178
    diferente2      shift and go to state 179
    between         shift and go to state 180
    is              shift and go to state 181
    isnull          shift and go to state 183
    notnull         shift and go to state 184
    as              shift and go to state 185
    cadenaString    shift and go to state 186
    id              shift and go to state 187
    cadena          shift and go to state 188
    in              shift and go to state 189
    not             shift and go to state 182
    like            shift and go to state 190

  ! not             [ reduce using rule 166 (OPCOLUMN -> default EXP .) ]


state 646

    (167) OPCOLUMN -> not null .

    constraint      reduce using rule 167 (OPCOLUMN -> not null .)
    unique          reduce using rule 167 (OPCOLUMN -> not null .)
    check           reduce using rule 167 (OPCOLUMN -> not null .)
    default         reduce using rule 167 (OPCOLUMN -> not null .)
    not             reduce using rule 167 (OPCOLUMN -> not null .)
    null            reduce using rule 167 (OPCOLUMN -> not null .)
    primary         reduce using rule 167 (OPCOLUMN -> not null .)
    references      reduce using rule 167 (OPCOLUMN -> not null .)
    parc            reduce using rule 167 (OPCOLUMN -> not null .)
    coma            reduce using rule 167 (OPCOLUMN -> not null .)


state 647

    (169) OPCOLUMN -> primary key .

    constraint      reduce using rule 169 (OPCOLUMN -> primary key .)
    unique          reduce using rule 169 (OPCOLUMN -> primary key .)
    check           reduce using rule 169 (OPCOLUMN -> primary key .)
    default         reduce using rule 169 (OPCOLUMN -> primary key .)
    not             reduce using rule 169 (OPCOLUMN -> primary key .)
    null            reduce using rule 169 (OPCOLUMN -> primary key .)
    primary         reduce using rule 169 (OPCOLUMN -> primary key .)
    references      reduce using rule 169 (OPCOLUMN -> primary key .)
    parc            reduce using rule 169 (OPCOLUMN -> primary key .)
    coma            reduce using rule 169 (OPCOLUMN -> primary key .)


state 648

    (170) OPCOLUMN -> references id .

    constraint      reduce using rule 170 (OPCOLUMN -> references id .)
    unique          reduce using rule 170 (OPCOLUMN -> references id .)
    check           reduce using rule 170 (OPCOLUMN -> references id .)
    default         reduce using rule 170 (OPCOLUMN -> references id .)
    not             reduce using rule 170 (OPCOLUMN -> references id .)
    null            reduce using rule 170 (OPCOLUMN -> references id .)
    primary         reduce using rule 170 (OPCOLUMN -> references id .)
    references      reduce using rule 170 (OPCOLUMN -> references id .)
    parc            reduce using rule 170 (OPCOLUMN -> references id .)
    coma            reduce using rule 170 (OPCOLUMN -> references id .)


state 649

    (153) CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .

    use             reduce using rule 153 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    select          reduce using rule 153 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    create          reduce using rule 153 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    update          reduce using rule 153 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    delete          reduce using rule 153 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    alter           reduce using rule 153 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    drop            reduce using rule 153 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    insert          reduce using rule 153 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    case            reduce using rule 153 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    show            reduce using rule 153 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    id              reduce using rule 153 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    if              reduce using rule 153 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)
    $end            reduce using rule 153 (CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma .)


state 650

    (182) HERENCIA -> inherits para . id parc

    id              shift and go to state 712


state 651

    (171) OPCONST -> primary key para LEXP . parc
    (218) LEXP -> LEXP . coma EXP

    parc            shift and go to state 713
    coma            shift and go to state 164


state 652

    (172) OPCONST -> foreign key para LEXP . parc references id para LEXP parc
    (218) LEXP -> LEXP . coma EXP

    parc            shift and go to state 714
    coma            shift and go to state 164


state 653

    (173) OPCONST -> unique para LEXP parc .

    parc            reduce using rule 173 (OPCONST -> unique para LEXP parc .)
    coma            reduce using rule 173 (OPCONST -> unique para LEXP parc .)


state 654

    (174) OPCONST -> check para CONDCHECK parc .

    parc            reduce using rule 174 (OPCONST -> check para CONDCHECK parc .)
    coma            reduce using rule 174 (OPCONST -> check para CONDCHECK parc .)


state 655

    (175) CONDCHECK -> EXP mayor . EXP
    (275) EXP -> EXP mayor . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 715
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 656

    (176) CONDCHECK -> EXP menor . EXP
    (276) EXP -> EXP menor . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 716
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 657

    (177) CONDCHECK -> EXP mayor_igual . EXP
    (277) EXP -> EXP mayor_igual . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 717
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 658

    (178) CONDCHECK -> EXP menor_igual . EXP
    (278) EXP -> EXP menor_igual . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 718
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 659

    (179) CONDCHECK -> EXP igual . EXP
    (279) EXP -> EXP igual . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 719
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 660

    (180) CONDCHECK -> EXP diferente1 . EXP
    (280) EXP -> EXP diferente1 . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 720
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 661

    (181) CONDCHECK -> EXP diferente2 . EXP
    (281) EXP -> EXP diferente2 . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 721
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 662

    (183) CREATETYPE -> create type id as enum para LEXP parc .

    ptcoma          reduce using rule 183 (CREATETYPE -> create type id as enum para LEXP parc .)


state 663

    (49) CREATEINDEX -> create index id on id para id id . ORDEN parc
    (50) ORDEN -> . asc
    (51) ORDEN -> . desc
    (52) ORDEN -> . nulls first
    (53) ORDEN -> . nulls last
    (54) ORDEN -> . asc nulls first
    (55) ORDEN -> . desc nulls last
    (56) ORDEN -> . desc nulls first
    (57) ORDEN -> . asc nulls last
    (58) ORDEN -> .

    asc             shift and go to state 665
    desc            shift and go to state 666
    nulls           shift and go to state 667
    parc            reduce using rule 58 (ORDEN -> .)

    ORDEN                          shift and go to state 722

state 664

    (48) CREATEINDEX -> create index id on id para id ORDEN . parc

    parc            shift and go to state 723


state 665

    (50) ORDEN -> asc .
    (54) ORDEN -> asc . nulls first
    (57) ORDEN -> asc . nulls last

    parc            reduce using rule 50 (ORDEN -> asc .)
    nulls           shift and go to state 724


state 666

    (51) ORDEN -> desc .
    (55) ORDEN -> desc . nulls last
    (56) ORDEN -> desc . nulls first

    parc            reduce using rule 51 (ORDEN -> desc .)
    nulls           shift and go to state 725


state 667

    (52) ORDEN -> nulls . first
    (53) ORDEN -> nulls . last

    first           shift and go to state 726
    last            shift and go to state 727


state 668

    (45) CREATEINDEX -> create index id on id para LEXP parc .

    ptcoma          reduce using rule 45 (CREATEINDEX -> create index id on id para LEXP parc .)
    where           reduce using rule 45 (CREATEINDEX -> create index id on id para LEXP parc .)


state 669

    (47) CREATEINDEX -> create index id on id using hash para . LEXP parc
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 728
    EXP                            shift and go to state 79
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 670

    (46) CREATEINDEX -> create unique index id on id para LEXP . parc
    (218) LEXP -> LEXP . coma EXP

    parc            shift and go to state 729
    coma            shift and go to state 164


state 671

    (30) PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .
    (32) LCONTENIDOP -> LCONTENIDOP . CONTENIDOP
    (34) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn ptcoma
    (35) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn ptcoma
    (36) CONTENIDOP -> . LISTACONTENIDO
    (80) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (81) LISTACONTENIDO -> . CONTENIDO
    (82) CONTENIDO -> . ASIGNACION ptcoma
    (83) CONTENIDO -> . DECLARACIONES ptcoma
    (84) CONTENIDO -> . CONDICIONIF ptcoma
    (85) CONTENIDO -> . RAISE ptcoma
    (86) CONTENIDO -> . BEGINEND ptcoma
    (87) CONTENIDO -> . CALLPROCEDURE ptcoma
    (88) CONTENIDO -> . RETURN ptcoma
    (89) CONTENIDO -> . CASE ptcoma
    (67) ASIGNACION -> . id dospuntos igual EXP
    (68) ASIGNACION -> . id igual EXP
    (59) DECLARACIONES -> . id TIPO not null ASIG
    (60) DECLARACIONES -> . id TIPO ASIG
    (61) DECLARACIONES -> . id constant TIPO not null ASIG
    (62) DECLARACIONES -> . id constant TIPO ASIG
    (69) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (70) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (71) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (72) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (90) RAISE -> . raise LEVEL FORMAT
    (91) RAISE -> . raise LEVEL EXP
    (92) RAISE -> . raise LEVEL
    (93) RAISE -> . raise
    (94) RAISE -> . raise LEVEL cadena coma id
    (44) BEGINEND -> . begin LISTACONTENIDO end
    (29) CALLPROCEDURE -> . call id para LEXP parc
    (24) RETURN -> . return LEXP
    (25) RETURN -> . return id para LEXP parc
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for if resolved as shift
  ! shift/reduce conflict for case resolved as shift
    use             reduce using rule 30 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    select          reduce using rule 30 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    create          reduce using rule 30 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    update          reduce using rule 30 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    delete          reduce using rule 30 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    alter           reduce using rule 30 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    drop            reduce using rule 30 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    insert          reduce using rule 30 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    show            reduce using rule 30 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    $end            reduce using rule 30 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .)
    as              shift and go to state 599
    do              shift and go to state 601
    id              shift and go to state 340
    if              shift and go to state 30
    raise           shift and go to state 341
    begin           shift and go to state 342
    call            shift and go to state 343
    return          shift and go to state 344
    case            shift and go to state 32

  ! case            [ reduce using rule 30 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .) ]
  ! id              [ reduce using rule 30 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .) ]
  ! if              [ reduce using rule 30 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LENGUAJE LCONTENIDOP .) ]

    CONTENIDOP                     shift and go to state 673
    LISTACONTENIDO                 shift and go to state 600
    CONTENIDO                      shift and go to state 331
    ASIGNACION                     shift and go to state 332
    DECLARACIONES                  shift and go to state 333
    CONDICIONIF                    shift and go to state 334
    RAISE                          shift and go to state 335
    BEGINEND                       shift and go to state 336
    CALLPROCEDURE                  shift and go to state 337
    RETURN                         shift and go to state 338
    CASE                           shift and go to state 339

state 672

    (31) PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .

    use             reduce using rule 31 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    select          reduce using rule 31 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    create          reduce using rule 31 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    update          reduce using rule 31 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    delete          reduce using rule 31 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    alter           reduce using rule 31 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    drop            reduce using rule 31 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    insert          reduce using rule 31 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    case            reduce using rule 31 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    show            reduce using rule 31 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    id              reduce using rule 31 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    if              reduce using rule 31 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)
    $end            reduce using rule 31 (PROCEDIMIENTOS -> create procedure id para LPARAM parc LCONTENIDOP LENGUAJE .)


state 673

    (32) LCONTENIDOP -> LCONTENIDOP CONTENIDOP .

    language        reduce using rule 32 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    dolarn          reduce using rule 32 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    as              reduce using rule 32 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    do              reduce using rule 32 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    id              reduce using rule 32 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    if              reduce using rule 32 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    raise           reduce using rule 32 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    begin           reduce using rule 32 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    call            reduce using rule 32 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    return          reduce using rule 32 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    case            reduce using rule 32 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    use             reduce using rule 32 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    select          reduce using rule 32 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    create          reduce using rule 32 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    update          reduce using rule 32 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    delete          reduce using rule 32 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    alter           reduce using rule 32 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    drop            reduce using rule 32 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    insert          reduce using rule 32 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    show            reduce using rule 32 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)
    $end            reduce using rule 32 (LCONTENIDOP -> LCONTENIDOP CONTENIDOP .)


state 674

    (41) LENGUAJE -> language plpgsql .

    as              reduce using rule 41 (LENGUAJE -> language plpgsql .)
    do              reduce using rule 41 (LENGUAJE -> language plpgsql .)
    id              reduce using rule 41 (LENGUAJE -> language plpgsql .)
    if              reduce using rule 41 (LENGUAJE -> language plpgsql .)
    raise           reduce using rule 41 (LENGUAJE -> language plpgsql .)
    begin           reduce using rule 41 (LENGUAJE -> language plpgsql .)
    call            reduce using rule 41 (LENGUAJE -> language plpgsql .)
    return          reduce using rule 41 (LENGUAJE -> language plpgsql .)
    case            reduce using rule 41 (LENGUAJE -> language plpgsql .)
    use             reduce using rule 41 (LENGUAJE -> language plpgsql .)
    select          reduce using rule 41 (LENGUAJE -> language plpgsql .)
    create          reduce using rule 41 (LENGUAJE -> language plpgsql .)
    update          reduce using rule 41 (LENGUAJE -> language plpgsql .)
    delete          reduce using rule 41 (LENGUAJE -> language plpgsql .)
    alter           reduce using rule 41 (LENGUAJE -> language plpgsql .)
    drop            reduce using rule 41 (LENGUAJE -> language plpgsql .)
    insert          reduce using rule 41 (LENGUAJE -> language plpgsql .)
    show            reduce using rule 41 (LENGUAJE -> language plpgsql .)
    $end            reduce using rule 41 (LENGUAJE -> language plpgsql .)


state 675

    (42) LENGUAJE -> dolarn language . plpgsql
    (43) LENGUAJE -> dolarn language . plpgsql ptcoma

    plpgsql         shift and go to state 730


state 676

    (34) CONTENIDOP -> as dolarn . LISTACONTENIDO dolarn ptcoma
    (80) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (81) LISTACONTENIDO -> . CONTENIDO
    (82) CONTENIDO -> . ASIGNACION ptcoma
    (83) CONTENIDO -> . DECLARACIONES ptcoma
    (84) CONTENIDO -> . CONDICIONIF ptcoma
    (85) CONTENIDO -> . RAISE ptcoma
    (86) CONTENIDO -> . BEGINEND ptcoma
    (87) CONTENIDO -> . CALLPROCEDURE ptcoma
    (88) CONTENIDO -> . RETURN ptcoma
    (89) CONTENIDO -> . CASE ptcoma
    (67) ASIGNACION -> . id dospuntos igual EXP
    (68) ASIGNACION -> . id igual EXP
    (59) DECLARACIONES -> . id TIPO not null ASIG
    (60) DECLARACIONES -> . id TIPO ASIG
    (61) DECLARACIONES -> . id constant TIPO not null ASIG
    (62) DECLARACIONES -> . id constant TIPO ASIG
    (69) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (70) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (71) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (72) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (90) RAISE -> . raise LEVEL FORMAT
    (91) RAISE -> . raise LEVEL EXP
    (92) RAISE -> . raise LEVEL
    (93) RAISE -> . raise
    (94) RAISE -> . raise LEVEL cadena coma id
    (44) BEGINEND -> . begin LISTACONTENIDO end
    (29) CALLPROCEDURE -> . call id para LEXP parc
    (24) RETURN -> . return LEXP
    (25) RETURN -> . return id para LEXP parc
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    id              shift and go to state 340
    if              shift and go to state 30
    raise           shift and go to state 341
    begin           shift and go to state 342
    call            shift and go to state 343
    return          shift and go to state 344
    case            shift and go to state 32

    LISTACONTENIDO                 shift and go to state 731
    CONTENIDO                      shift and go to state 331
    ASIGNACION                     shift and go to state 332
    DECLARACIONES                  shift and go to state 333
    CONDICIONIF                    shift and go to state 334
    RAISE                          shift and go to state 335
    BEGINEND                       shift and go to state 336
    CALLPROCEDURE                  shift and go to state 337
    RETURN                         shift and go to state 338
    CASE                           shift and go to state 339

state 677

    (35) CONTENIDOP -> do dolarn . LISTACONTENIDO dolarn ptcoma
    (80) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (81) LISTACONTENIDO -> . CONTENIDO
    (82) CONTENIDO -> . ASIGNACION ptcoma
    (83) CONTENIDO -> . DECLARACIONES ptcoma
    (84) CONTENIDO -> . CONDICIONIF ptcoma
    (85) CONTENIDO -> . RAISE ptcoma
    (86) CONTENIDO -> . BEGINEND ptcoma
    (87) CONTENIDO -> . CALLPROCEDURE ptcoma
    (88) CONTENIDO -> . RETURN ptcoma
    (89) CONTENIDO -> . CASE ptcoma
    (67) ASIGNACION -> . id dospuntos igual EXP
    (68) ASIGNACION -> . id igual EXP
    (59) DECLARACIONES -> . id TIPO not null ASIG
    (60) DECLARACIONES -> . id TIPO ASIG
    (61) DECLARACIONES -> . id constant TIPO not null ASIG
    (62) DECLARACIONES -> . id constant TIPO ASIG
    (69) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (70) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (71) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (72) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (90) RAISE -> . raise LEVEL FORMAT
    (91) RAISE -> . raise LEVEL EXP
    (92) RAISE -> . raise LEVEL
    (93) RAISE -> . raise
    (94) RAISE -> . raise LEVEL cadena coma id
    (44) BEGINEND -> . begin LISTACONTENIDO end
    (29) CALLPROCEDURE -> . call id para LEXP parc
    (24) RETURN -> . return LEXP
    (25) RETURN -> . return id para LEXP parc
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    id              shift and go to state 340
    if              shift and go to state 30
    raise           shift and go to state 341
    begin           shift and go to state 342
    call            shift and go to state 343
    return          shift and go to state 344
    case            shift and go to state 32

    LISTACONTENIDO                 shift and go to state 732
    CONTENIDO                      shift and go to state 331
    ASIGNACION                     shift and go to state 332
    DECLARACIONES                  shift and go to state 333
    CONDICIONIF                    shift and go to state 334
    RAISE                          shift and go to state 335
    BEGINEND                       shift and go to state 336
    CALLPROCEDURE                  shift and go to state 337
    RETURN                         shift and go to state 338
    CASE                           shift and go to state 339

state 678

    (37) LPARAM -> LPARAM coma inout id . TIPO
    (220) TIPO -> . interval cadena
    (221) TIPO -> . decimal para int coma int parc
    (222) TIPO -> . decimal para int parc
    (223) TIPO -> . decimal
    (224) TIPO -> . numeric para int coma int parc
    (225) TIPO -> . numeric para int parc
    (226) TIPO -> . numeric
    (227) TIPO -> . varchar para int parc
    (228) TIPO -> . timestamp para int parc
    (229) TIPO -> . character para int parc
    (230) TIPO -> . interval para int parc
    (231) TIPO -> . char para int parc
    (232) TIPO -> . time para int parc
    (233) TIPO -> . character varying para int parc
    (234) TIPO -> . id modulo rowtype
    (235) TIPO -> . idPunto modulo type
    (236) TIPO -> . timestamp para int parc without time zone
    (237) TIPO -> . timestamp para int parc with time zone
    (238) TIPO -> . time para int parc without time zone
    (239) TIPO -> . time para int parc with time zone
    (240) TIPO -> . interval para int parc cadena
    (241) TIPO -> . smallint
    (242) TIPO -> . integer
    (243) TIPO -> . r_int
    (244) TIPO -> . bigint
    (245) TIPO -> . real
    (246) TIPO -> . double precision
    (247) TIPO -> . money
    (248) TIPO -> . text
    (249) TIPO -> . timestamp
    (250) TIPO -> . date
    (251) TIPO -> . time
    (252) TIPO -> . interval
    (253) TIPO -> . boolean
    (254) TIPO -> . record
    (255) TIPO -> . varchar
    (256) TIPO -> . timestamp without time zone
    (257) TIPO -> . timestamp with time zone
    (258) TIPO -> . time without time zone
    (259) TIPO -> . time with time zone
    (260) TIPO -> . id

    interval        shift and go to state 51
    decimal         shift and go to state 52
    numeric         shift and go to state 53
    varchar         shift and go to state 54
    timestamp       shift and go to state 55
    character       shift and go to state 56
    char            shift and go to state 57
    time            shift and go to state 58
    id              shift and go to state 46
    idPunto         shift and go to state 59
    smallint        shift and go to state 60
    integer         shift and go to state 61
    r_int           shift and go to state 62
    bigint          shift and go to state 63
    real            shift and go to state 64
    double          shift and go to state 65
    money           shift and go to state 66
    text            shift and go to state 67
    date            shift and go to state 68
    boolean         shift and go to state 69
    record          shift and go to state 70

    TIPO                           shift and go to state 733

state 679

    (38) LPARAM -> LPARAM coma id TIPO .

    parc            reduce using rule 38 (LPARAM -> LPARAM coma id TIPO .)
    coma            reduce using rule 38 (LPARAM -> LPARAM coma id TIPO .)


state 680

    (26) FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE . LCONTENIDOP
    (32) LCONTENIDOP -> . LCONTENIDOP CONTENIDOP
    (33) LCONTENIDOP -> . CONTENIDOP
    (34) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn ptcoma
    (35) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn ptcoma
    (36) CONTENIDOP -> . LISTACONTENIDO
    (80) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (81) LISTACONTENIDO -> . CONTENIDO
    (82) CONTENIDO -> . ASIGNACION ptcoma
    (83) CONTENIDO -> . DECLARACIONES ptcoma
    (84) CONTENIDO -> . CONDICIONIF ptcoma
    (85) CONTENIDO -> . RAISE ptcoma
    (86) CONTENIDO -> . BEGINEND ptcoma
    (87) CONTENIDO -> . CALLPROCEDURE ptcoma
    (88) CONTENIDO -> . RETURN ptcoma
    (89) CONTENIDO -> . CASE ptcoma
    (67) ASIGNACION -> . id dospuntos igual EXP
    (68) ASIGNACION -> . id igual EXP
    (59) DECLARACIONES -> . id TIPO not null ASIG
    (60) DECLARACIONES -> . id TIPO ASIG
    (61) DECLARACIONES -> . id constant TIPO not null ASIG
    (62) DECLARACIONES -> . id constant TIPO ASIG
    (69) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (70) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (71) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (72) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (90) RAISE -> . raise LEVEL FORMAT
    (91) RAISE -> . raise LEVEL EXP
    (92) RAISE -> . raise LEVEL
    (93) RAISE -> . raise
    (94) RAISE -> . raise LEVEL cadena coma id
    (44) BEGINEND -> . begin LISTACONTENIDO end
    (29) CALLPROCEDURE -> . call id para LEXP parc
    (24) RETURN -> . return LEXP
    (25) RETURN -> . return id para LEXP parc
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    as              shift and go to state 599
    do              shift and go to state 601
    id              shift and go to state 340
    if              shift and go to state 30
    raise           shift and go to state 341
    begin           shift and go to state 342
    call            shift and go to state 343
    return          shift and go to state 344
    case            shift and go to state 32

    LCONTENIDOP                    shift and go to state 734
    CONTENIDOP                     shift and go to state 598
    LISTACONTENIDO                 shift and go to state 600
    CONTENIDO                      shift and go to state 331
    ASIGNACION                     shift and go to state 332
    DECLARACIONES                  shift and go to state 333
    CONDICIONIF                    shift and go to state 334
    RAISE                          shift and go to state 335
    BEGINEND                       shift and go to state 336
    CALLPROCEDURE                  shift and go to state 337
    RETURN                         shift and go to state 338
    CASE                           shift and go to state 339

state 681

    (27) FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP . LENGUAJE
    (32) LCONTENIDOP -> LCONTENIDOP . CONTENIDOP
    (41) LENGUAJE -> . language plpgsql
    (42) LENGUAJE -> . dolarn language plpgsql
    (43) LENGUAJE -> . dolarn language plpgsql ptcoma
    (34) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn ptcoma
    (35) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn ptcoma
    (36) CONTENIDOP -> . LISTACONTENIDO
    (80) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (81) LISTACONTENIDO -> . CONTENIDO
    (82) CONTENIDO -> . ASIGNACION ptcoma
    (83) CONTENIDO -> . DECLARACIONES ptcoma
    (84) CONTENIDO -> . CONDICIONIF ptcoma
    (85) CONTENIDO -> . RAISE ptcoma
    (86) CONTENIDO -> . BEGINEND ptcoma
    (87) CONTENIDO -> . CALLPROCEDURE ptcoma
    (88) CONTENIDO -> . RETURN ptcoma
    (89) CONTENIDO -> . CASE ptcoma
    (67) ASIGNACION -> . id dospuntos igual EXP
    (68) ASIGNACION -> . id igual EXP
    (59) DECLARACIONES -> . id TIPO not null ASIG
    (60) DECLARACIONES -> . id TIPO ASIG
    (61) DECLARACIONES -> . id constant TIPO not null ASIG
    (62) DECLARACIONES -> . id constant TIPO ASIG
    (69) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (70) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (71) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (72) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (90) RAISE -> . raise LEVEL FORMAT
    (91) RAISE -> . raise LEVEL EXP
    (92) RAISE -> . raise LEVEL
    (93) RAISE -> . raise
    (94) RAISE -> . raise LEVEL cadena coma id
    (44) BEGINEND -> . begin LISTACONTENIDO end
    (29) CALLPROCEDURE -> . call id para LEXP parc
    (24) RETURN -> . return LEXP
    (25) RETURN -> . return id para LEXP parc
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    language        shift and go to state 596
    dolarn          shift and go to state 597
    as              shift and go to state 599
    do              shift and go to state 601
    id              shift and go to state 340
    if              shift and go to state 30
    raise           shift and go to state 341
    begin           shift and go to state 342
    call            shift and go to state 343
    return          shift and go to state 344
    case            shift and go to state 32

    LENGUAJE                       shift and go to state 735
    CONTENIDOP                     shift and go to state 673
    LISTACONTENIDO                 shift and go to state 600
    CONTENIDO                      shift and go to state 331
    ASIGNACION                     shift and go to state 332
    DECLARACIONES                  shift and go to state 333
    CONDICIONIF                    shift and go to state 334
    RAISE                          shift and go to state 335
    BEGINEND                       shift and go to state 336
    CALLPROCEDURE                  shift and go to state 337
    RETURN                         shift and go to state 338
    CASE                           shift and go to state 339

state 682

    (28) RETURNP -> returns TIPO . as dolarn

    as              shift and go to state 736


state 683

    (213) LCAMPOS -> LCAMPOS coma id igual EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    coma            reduce using rule 213 (LCAMPOS -> LCAMPOS coma id igual EXP .)
    where           reduce using rule 213 (LCAMPOS -> LCAMPOS coma id igual EXP .)
    ptcoma          reduce using rule 213 (LCAMPOS -> LCAMPOS coma id igual EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170
    and             shift and go to state 171
    or              shift and go to state 172
    mayor           shift and go to state 173
    menor           shift and go to state 174
    mayor_igual     shift and go to state 175
    menor_igual     shift and go to state 176
    igual           shift and go to state 177
    diferente1      shift and go to state 178
    diferente2      shift and go to state 179
    between         shift and go to state 180
    is              shift and go to state 181
    isnull          shift and go to state 183
    notnull         shift and go to state 184
    as              shift and go to state 185
    cadenaString    shift and go to state 186
    id              shift and go to state 187
    cadena          shift and go to state 188
    in              shift and go to state 189
    not             shift and go to state 182
    like            shift and go to state 190


state 684

    (125) OP -> alter column id set not . null

    null            shift and go to state 737


state 685

    (126) OP -> alter column id set null .

    coma            reduce using rule 126 (OP -> alter column id set null .)
    ptcoma          reduce using rule 126 (OP -> alter column id set null .)


state 686

    (131) OP -> alter column id type TIPO .

    coma            reduce using rule 131 (OP -> alter column id type TIPO .)
    ptcoma          reduce using rule 131 (OP -> alter column id type TIPO .)


state 687

    (119) OP -> add check para CONDCHECK parc .

    coma            reduce using rule 119 (OP -> add check para CONDCHECK parc .)
    ptcoma          reduce using rule 119 (OP -> add check para CONDCHECK parc .)


state 688

    (120) OP -> add constraint id check para . CONDCHECK parc
    (175) CONDCHECK -> . EXP mayor EXP
    (176) CONDCHECK -> . EXP menor EXP
    (177) CONDCHECK -> . EXP mayor_igual EXP
    (178) CONDCHECK -> . EXP menor_igual EXP
    (179) CONDCHECK -> . EXP igual EXP
    (180) CONDCHECK -> . EXP diferente1 EXP
    (181) CONDCHECK -> . EXP diferente2 EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    CONDCHECK                      shift and go to state 738
    EXP                            shift and go to state 587
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 689

    (121) OP -> add constraint id unique para . LEXP parc
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 739
    EXP                            shift and go to state 79
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 690

    (124) OP -> add constraint id foreign key . para LEXP parc references id para LEXP parc

    para            shift and go to state 740


state 691

    (122) OP -> add unique para LEXP parc .

    coma            reduce using rule 122 (OP -> add unique para LEXP parc .)
    ptcoma          reduce using rule 122 (OP -> add unique para LEXP parc .)


state 692

    (123) OP -> add foreign key para LEXP . parc references id para LEXP parc
    (218) LEXP -> LEXP . coma EXP

    parc            shift and go to state 741
    coma            shift and go to state 164


state 693

    (130) OP -> rename column id to id .

    coma            reduce using rule 130 (OP -> rename column id to id .)
    ptcoma          reduce using rule 130 (OP -> rename column id to id .)


state 694

    (72) CONDICIONIF -> if EXP then LISTACONTENIDO LELIF ELSEF end if .

    ptcoma          reduce using rule 72 (CONDICIONIF -> if EXP then LISTACONTENIDO LELIF ELSEF end if .)


state 695

    (73) LELIF -> LELIF elsif EXP then . LISTACONTENIDO
    (80) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (81) LISTACONTENIDO -> . CONTENIDO
    (82) CONTENIDO -> . ASIGNACION ptcoma
    (83) CONTENIDO -> . DECLARACIONES ptcoma
    (84) CONTENIDO -> . CONDICIONIF ptcoma
    (85) CONTENIDO -> . RAISE ptcoma
    (86) CONTENIDO -> . BEGINEND ptcoma
    (87) CONTENIDO -> . CALLPROCEDURE ptcoma
    (88) CONTENIDO -> . RETURN ptcoma
    (89) CONTENIDO -> . CASE ptcoma
    (67) ASIGNACION -> . id dospuntos igual EXP
    (68) ASIGNACION -> . id igual EXP
    (59) DECLARACIONES -> . id TIPO not null ASIG
    (60) DECLARACIONES -> . id TIPO ASIG
    (61) DECLARACIONES -> . id constant TIPO not null ASIG
    (62) DECLARACIONES -> . id constant TIPO ASIG
    (69) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (70) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (71) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (72) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (90) RAISE -> . raise LEVEL FORMAT
    (91) RAISE -> . raise LEVEL EXP
    (92) RAISE -> . raise LEVEL
    (93) RAISE -> . raise
    (94) RAISE -> . raise LEVEL cadena coma id
    (44) BEGINEND -> . begin LISTACONTENIDO end
    (29) CALLPROCEDURE -> . call id para LEXP parc
    (24) RETURN -> . return LEXP
    (25) RETURN -> . return id para LEXP parc
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    id              shift and go to state 340
    if              shift and go to state 30
    raise           shift and go to state 341
    begin           shift and go to state 342
    call            shift and go to state 343
    return          shift and go to state 344
    case            shift and go to state 32

    LISTACONTENIDO                 shift and go to state 742
    CONTENIDO                      shift and go to state 331
    ASIGNACION                     shift and go to state 332
    DECLARACIONES                  shift and go to state 333
    CONDICIONIF                    shift and go to state 334
    RAISE                          shift and go to state 335
    BEGINEND                       shift and go to state 336
    CALLPROCEDURE                  shift and go to state 337
    RETURN                         shift and go to state 338
    CASE                           shift and go to state 339

state 696

    (74) LELIF -> elsif EXP then LISTACONTENIDO .
    (80) LISTACONTENIDO -> LISTACONTENIDO . CONTENIDO
    (82) CONTENIDO -> . ASIGNACION ptcoma
    (83) CONTENIDO -> . DECLARACIONES ptcoma
    (84) CONTENIDO -> . CONDICIONIF ptcoma
    (85) CONTENIDO -> . RAISE ptcoma
    (86) CONTENIDO -> . BEGINEND ptcoma
    (87) CONTENIDO -> . CALLPROCEDURE ptcoma
    (88) CONTENIDO -> . RETURN ptcoma
    (89) CONTENIDO -> . CASE ptcoma
    (67) ASIGNACION -> . id dospuntos igual EXP
    (68) ASIGNACION -> . id igual EXP
    (59) DECLARACIONES -> . id TIPO not null ASIG
    (60) DECLARACIONES -> . id TIPO ASIG
    (61) DECLARACIONES -> . id constant TIPO not null ASIG
    (62) DECLARACIONES -> . id constant TIPO ASIG
    (69) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (70) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (71) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (72) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (90) RAISE -> . raise LEVEL FORMAT
    (91) RAISE -> . raise LEVEL EXP
    (92) RAISE -> . raise LEVEL
    (93) RAISE -> . raise
    (94) RAISE -> . raise LEVEL cadena coma id
    (44) BEGINEND -> . begin LISTACONTENIDO end
    (29) CALLPROCEDURE -> . call id para LEXP parc
    (24) RETURN -> . return LEXP
    (25) RETURN -> . return id para LEXP parc
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    end             reduce using rule 74 (LELIF -> elsif EXP then LISTACONTENIDO .)
    elsif           reduce using rule 74 (LELIF -> elsif EXP then LISTACONTENIDO .)
    else            reduce using rule 74 (LELIF -> elsif EXP then LISTACONTENIDO .)
    id              shift and go to state 340
    if              shift and go to state 30
    raise           shift and go to state 341
    begin           shift and go to state 342
    call            shift and go to state 343
    return          shift and go to state 344
    case            shift and go to state 32

    CONTENIDO                      shift and go to state 441
    ASIGNACION                     shift and go to state 332
    DECLARACIONES                  shift and go to state 333
    CONDICIONIF                    shift and go to state 334
    RAISE                          shift and go to state 335
    BEGINEND                       shift and go to state 336
    CALLPROCEDURE                  shift and go to state 337
    RETURN                         shift and go to state 338
    CASE                           shift and go to state 339

state 697

    (94) RAISE -> raise LEVEL cadena coma id .

    ptcoma          reduce using rule 94 (RAISE -> raise LEVEL cadena coma id .)


state 698

    (101) FORMAT -> format para EXP . coma LEXP parc
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    coma            shift and go to state 743
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170
    and             shift and go to state 171
    or              shift and go to state 172
    mayor           shift and go to state 173
    menor           shift and go to state 174
    mayor_igual     shift and go to state 175
    menor_igual     shift and go to state 176
    igual           shift and go to state 177
    diferente1      shift and go to state 178
    diferente2      shift and go to state 179
    between         shift and go to state 180
    is              shift and go to state 181
    isnull          shift and go to state 183
    notnull         shift and go to state 184
    as              shift and go to state 185
    cadenaString    shift and go to state 186
    id              shift and go to state 187
    cadena          shift and go to state 188
    in              shift and go to state 189
    not             shift and go to state 182
    like            shift and go to state 190


state 699

    (29) CALLPROCEDURE -> call id para LEXP parc .

    ptcoma          reduce using rule 29 (CALLPROCEDURE -> call id para LEXP parc .)


state 700

    (25) RETURN -> return id para LEXP parc .
    (314) EXP -> id para LEXP parc .

  ! reduce/reduce conflict for ptcoma resolved using rule 25 (RETURN -> return id para LEXP parc .)
    ptcoma          reduce using rule 25 (RETURN -> return id para LEXP parc .)
    mas             reduce using rule 314 (EXP -> id para LEXP parc .)
    menos           reduce using rule 314 (EXP -> id para LEXP parc .)
    multiplicacion  reduce using rule 314 (EXP -> id para LEXP parc .)
    division        reduce using rule 314 (EXP -> id para LEXP parc .)
    modulo          reduce using rule 314 (EXP -> id para LEXP parc .)
    elevado         reduce using rule 314 (EXP -> id para LEXP parc .)
    and             reduce using rule 314 (EXP -> id para LEXP parc .)
    or              reduce using rule 314 (EXP -> id para LEXP parc .)
    mayor           reduce using rule 314 (EXP -> id para LEXP parc .)
    menor           reduce using rule 314 (EXP -> id para LEXP parc .)
    mayor_igual     reduce using rule 314 (EXP -> id para LEXP parc .)
    menor_igual     reduce using rule 314 (EXP -> id para LEXP parc .)
    igual           reduce using rule 314 (EXP -> id para LEXP parc .)
    diferente1      reduce using rule 314 (EXP -> id para LEXP parc .)
    diferente2      reduce using rule 314 (EXP -> id para LEXP parc .)
    between         reduce using rule 314 (EXP -> id para LEXP parc .)
    is              reduce using rule 314 (EXP -> id para LEXP parc .)
    isnull          reduce using rule 314 (EXP -> id para LEXP parc .)
    notnull         reduce using rule 314 (EXP -> id para LEXP parc .)
    as              reduce using rule 314 (EXP -> id para LEXP parc .)
    cadenaString    reduce using rule 314 (EXP -> id para LEXP parc .)
    id              reduce using rule 314 (EXP -> id para LEXP parc .)
    cadena          reduce using rule 314 (EXP -> id para LEXP parc .)
    in              reduce using rule 314 (EXP -> id para LEXP parc .)
    not             reduce using rule 314 (EXP -> id para LEXP parc .)
    like            reduce using rule 314 (EXP -> id para LEXP parc .)
    coma            reduce using rule 314 (EXP -> id para LEXP parc .)

  ! ptcoma          [ reduce using rule 314 (EXP -> id para LEXP parc .) ]


state 701

    (108) INSERT -> insert into id para LEXP parc values para . LEXP parc
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 744
    EXP                            shift and go to state 79
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 702

    (184) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING . ORDER LIMIT
    (207) ORDER -> . order by LEXP ORD
    (208) ORDER -> . order by LEXP
    (209) ORDER -> .

  ! shift/reduce conflict for order resolved as shift
    order           shift and go to state 560
    r_from          reduce using rule 209 (ORDER -> .)
    coma            reduce using rule 209 (ORDER -> .)
    where           reduce using rule 209 (ORDER -> .)
    group           reduce using rule 209 (ORDER -> .)
    having          reduce using rule 209 (ORDER -> .)
    union           reduce using rule 209 (ORDER -> .)
    intersect       reduce using rule 209 (ORDER -> .)
    except          reduce using rule 209 (ORDER -> .)
    limit           reduce using rule 209 (ORDER -> .)
    offset          reduce using rule 209 (ORDER -> .)
    ptcoma          reduce using rule 209 (ORDER -> .)
    mas             reduce using rule 209 (ORDER -> .)
    menos           reduce using rule 209 (ORDER -> .)
    multiplicacion  reduce using rule 209 (ORDER -> .)
    division        reduce using rule 209 (ORDER -> .)
    modulo          reduce using rule 209 (ORDER -> .)
    elevado         reduce using rule 209 (ORDER -> .)
    and             reduce using rule 209 (ORDER -> .)
    or              reduce using rule 209 (ORDER -> .)
    mayor           reduce using rule 209 (ORDER -> .)
    menor           reduce using rule 209 (ORDER -> .)
    mayor_igual     reduce using rule 209 (ORDER -> .)
    menor_igual     reduce using rule 209 (ORDER -> .)
    igual           reduce using rule 209 (ORDER -> .)
    diferente1      reduce using rule 209 (ORDER -> .)
    diferente2      reduce using rule 209 (ORDER -> .)
    between         reduce using rule 209 (ORDER -> .)
    is              reduce using rule 209 (ORDER -> .)
    isnull          reduce using rule 209 (ORDER -> .)
    notnull         reduce using rule 209 (ORDER -> .)
    as              reduce using rule 209 (ORDER -> .)
    cadenaString    reduce using rule 209 (ORDER -> .)
    id              reduce using rule 209 (ORDER -> .)
    cadena          reduce using rule 209 (ORDER -> .)
    in              reduce using rule 209 (ORDER -> .)
    not             reduce using rule 209 (ORDER -> .)
    like            reduce using rule 209 (ORDER -> .)
    then            reduce using rule 209 (ORDER -> .)
    when            reduce using rule 209 (ORDER -> .)
    parc            reduce using rule 209 (ORDER -> .)
    end             reduce using rule 209 (ORDER -> .)
    else            reduce using rule 209 (ORDER -> .)
    constraint      reduce using rule 209 (ORDER -> .)
    unique          reduce using rule 209 (ORDER -> .)
    check           reduce using rule 209 (ORDER -> .)
    default         reduce using rule 209 (ORDER -> .)
    null            reduce using rule 209 (ORDER -> .)
    primary         reduce using rule 209 (ORDER -> .)
    references      reduce using rule 209 (ORDER -> .)
    asc             reduce using rule 209 (ORDER -> .)
    desc            reduce using rule 209 (ORDER -> .)

  ! order           [ reduce using rule 209 (ORDER -> .) ]

    ORDER                          shift and go to state 745

state 703

    (185) SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER . LIMIT
    (187) LIMIT -> . limit int
    (188) LIMIT -> . limit all
    (189) LIMIT -> . offset int
    (190) LIMIT -> . limit int offset int
    (191) LIMIT -> . offset int limit int
    (192) LIMIT -> . limit all offset int
    (193) LIMIT -> . offset int limit all
    (194) LIMIT -> .

  ! shift/reduce conflict for limit resolved as shift
  ! shift/reduce conflict for offset resolved as shift
    limit           shift and go to state 636
    offset          shift and go to state 637
    ptcoma          reduce using rule 194 (LIMIT -> .)
    r_from          reduce using rule 194 (LIMIT -> .)
    coma            reduce using rule 194 (LIMIT -> .)
    where           reduce using rule 194 (LIMIT -> .)
    group           reduce using rule 194 (LIMIT -> .)
    having          reduce using rule 194 (LIMIT -> .)
    union           reduce using rule 194 (LIMIT -> .)
    intersect       reduce using rule 194 (LIMIT -> .)
    except          reduce using rule 194 (LIMIT -> .)
    order           reduce using rule 194 (LIMIT -> .)
    mas             reduce using rule 194 (LIMIT -> .)
    menos           reduce using rule 194 (LIMIT -> .)
    multiplicacion  reduce using rule 194 (LIMIT -> .)
    division        reduce using rule 194 (LIMIT -> .)
    modulo          reduce using rule 194 (LIMIT -> .)
    elevado         reduce using rule 194 (LIMIT -> .)
    and             reduce using rule 194 (LIMIT -> .)
    or              reduce using rule 194 (LIMIT -> .)
    mayor           reduce using rule 194 (LIMIT -> .)
    menor           reduce using rule 194 (LIMIT -> .)
    mayor_igual     reduce using rule 194 (LIMIT -> .)
    menor_igual     reduce using rule 194 (LIMIT -> .)
    igual           reduce using rule 194 (LIMIT -> .)
    diferente1      reduce using rule 194 (LIMIT -> .)
    diferente2      reduce using rule 194 (LIMIT -> .)
    between         reduce using rule 194 (LIMIT -> .)
    is              reduce using rule 194 (LIMIT -> .)
    isnull          reduce using rule 194 (LIMIT -> .)
    notnull         reduce using rule 194 (LIMIT -> .)
    as              reduce using rule 194 (LIMIT -> .)
    cadenaString    reduce using rule 194 (LIMIT -> .)
    id              reduce using rule 194 (LIMIT -> .)
    cadena          reduce using rule 194 (LIMIT -> .)
    in              reduce using rule 194 (LIMIT -> .)
    not             reduce using rule 194 (LIMIT -> .)
    like            reduce using rule 194 (LIMIT -> .)
    then            reduce using rule 194 (LIMIT -> .)
    when            reduce using rule 194 (LIMIT -> .)
    parc            reduce using rule 194 (LIMIT -> .)
    end             reduce using rule 194 (LIMIT -> .)
    else            reduce using rule 194 (LIMIT -> .)
    constraint      reduce using rule 194 (LIMIT -> .)
    unique          reduce using rule 194 (LIMIT -> .)
    check           reduce using rule 194 (LIMIT -> .)
    default         reduce using rule 194 (LIMIT -> .)
    null            reduce using rule 194 (LIMIT -> .)
    primary         reduce using rule 194 (LIMIT -> .)
    references      reduce using rule 194 (LIMIT -> .)
    asc             reduce using rule 194 (LIMIT -> .)
    desc            reduce using rule 194 (LIMIT -> .)

  ! limit           [ reduce using rule 194 (LIMIT -> .) ]
  ! offset          [ reduce using rule 194 (LIMIT -> .) ]

    LIMIT                          shift and go to state 746

state 704

    (187) LIMIT -> limit int .
    (190) LIMIT -> limit int . offset int

  ! shift/reduce conflict for offset resolved as shift
    ptcoma          reduce using rule 187 (LIMIT -> limit int .)
    r_from          reduce using rule 187 (LIMIT -> limit int .)
    coma            reduce using rule 187 (LIMIT -> limit int .)
    where           reduce using rule 187 (LIMIT -> limit int .)
    group           reduce using rule 187 (LIMIT -> limit int .)
    having          reduce using rule 187 (LIMIT -> limit int .)
    union           reduce using rule 187 (LIMIT -> limit int .)
    intersect       reduce using rule 187 (LIMIT -> limit int .)
    except          reduce using rule 187 (LIMIT -> limit int .)
    order           reduce using rule 187 (LIMIT -> limit int .)
    limit           reduce using rule 187 (LIMIT -> limit int .)
    mas             reduce using rule 187 (LIMIT -> limit int .)
    menos           reduce using rule 187 (LIMIT -> limit int .)
    multiplicacion  reduce using rule 187 (LIMIT -> limit int .)
    division        reduce using rule 187 (LIMIT -> limit int .)
    modulo          reduce using rule 187 (LIMIT -> limit int .)
    elevado         reduce using rule 187 (LIMIT -> limit int .)
    and             reduce using rule 187 (LIMIT -> limit int .)
    or              reduce using rule 187 (LIMIT -> limit int .)
    mayor           reduce using rule 187 (LIMIT -> limit int .)
    menor           reduce using rule 187 (LIMIT -> limit int .)
    mayor_igual     reduce using rule 187 (LIMIT -> limit int .)
    menor_igual     reduce using rule 187 (LIMIT -> limit int .)
    igual           reduce using rule 187 (LIMIT -> limit int .)
    diferente1      reduce using rule 187 (LIMIT -> limit int .)
    diferente2      reduce using rule 187 (LIMIT -> limit int .)
    between         reduce using rule 187 (LIMIT -> limit int .)
    is              reduce using rule 187 (LIMIT -> limit int .)
    isnull          reduce using rule 187 (LIMIT -> limit int .)
    notnull         reduce using rule 187 (LIMIT -> limit int .)
    as              reduce using rule 187 (LIMIT -> limit int .)
    cadenaString    reduce using rule 187 (LIMIT -> limit int .)
    id              reduce using rule 187 (LIMIT -> limit int .)
    cadena          reduce using rule 187 (LIMIT -> limit int .)
    in              reduce using rule 187 (LIMIT -> limit int .)
    not             reduce using rule 187 (LIMIT -> limit int .)
    like            reduce using rule 187 (LIMIT -> limit int .)
    then            reduce using rule 187 (LIMIT -> limit int .)
    when            reduce using rule 187 (LIMIT -> limit int .)
    parc            reduce using rule 187 (LIMIT -> limit int .)
    end             reduce using rule 187 (LIMIT -> limit int .)
    else            reduce using rule 187 (LIMIT -> limit int .)
    constraint      reduce using rule 187 (LIMIT -> limit int .)
    unique          reduce using rule 187 (LIMIT -> limit int .)
    check           reduce using rule 187 (LIMIT -> limit int .)
    default         reduce using rule 187 (LIMIT -> limit int .)
    null            reduce using rule 187 (LIMIT -> limit int .)
    primary         reduce using rule 187 (LIMIT -> limit int .)
    references      reduce using rule 187 (LIMIT -> limit int .)
    asc             reduce using rule 187 (LIMIT -> limit int .)
    desc            reduce using rule 187 (LIMIT -> limit int .)
    offset          shift and go to state 747

  ! offset          [ reduce using rule 187 (LIMIT -> limit int .) ]


state 705

    (188) LIMIT -> limit all .
    (192) LIMIT -> limit all . offset int

  ! shift/reduce conflict for offset resolved as shift
    ptcoma          reduce using rule 188 (LIMIT -> limit all .)
    r_from          reduce using rule 188 (LIMIT -> limit all .)
    coma            reduce using rule 188 (LIMIT -> limit all .)
    where           reduce using rule 188 (LIMIT -> limit all .)
    group           reduce using rule 188 (LIMIT -> limit all .)
    having          reduce using rule 188 (LIMIT -> limit all .)
    union           reduce using rule 188 (LIMIT -> limit all .)
    intersect       reduce using rule 188 (LIMIT -> limit all .)
    except          reduce using rule 188 (LIMIT -> limit all .)
    order           reduce using rule 188 (LIMIT -> limit all .)
    limit           reduce using rule 188 (LIMIT -> limit all .)
    mas             reduce using rule 188 (LIMIT -> limit all .)
    menos           reduce using rule 188 (LIMIT -> limit all .)
    multiplicacion  reduce using rule 188 (LIMIT -> limit all .)
    division        reduce using rule 188 (LIMIT -> limit all .)
    modulo          reduce using rule 188 (LIMIT -> limit all .)
    elevado         reduce using rule 188 (LIMIT -> limit all .)
    and             reduce using rule 188 (LIMIT -> limit all .)
    or              reduce using rule 188 (LIMIT -> limit all .)
    mayor           reduce using rule 188 (LIMIT -> limit all .)
    menor           reduce using rule 188 (LIMIT -> limit all .)
    mayor_igual     reduce using rule 188 (LIMIT -> limit all .)
    menor_igual     reduce using rule 188 (LIMIT -> limit all .)
    igual           reduce using rule 188 (LIMIT -> limit all .)
    diferente1      reduce using rule 188 (LIMIT -> limit all .)
    diferente2      reduce using rule 188 (LIMIT -> limit all .)
    between         reduce using rule 188 (LIMIT -> limit all .)
    is              reduce using rule 188 (LIMIT -> limit all .)
    isnull          reduce using rule 188 (LIMIT -> limit all .)
    notnull         reduce using rule 188 (LIMIT -> limit all .)
    as              reduce using rule 188 (LIMIT -> limit all .)
    cadenaString    reduce using rule 188 (LIMIT -> limit all .)
    id              reduce using rule 188 (LIMIT -> limit all .)
    cadena          reduce using rule 188 (LIMIT -> limit all .)
    in              reduce using rule 188 (LIMIT -> limit all .)
    not             reduce using rule 188 (LIMIT -> limit all .)
    like            reduce using rule 188 (LIMIT -> limit all .)
    then            reduce using rule 188 (LIMIT -> limit all .)
    when            reduce using rule 188 (LIMIT -> limit all .)
    parc            reduce using rule 188 (LIMIT -> limit all .)
    end             reduce using rule 188 (LIMIT -> limit all .)
    else            reduce using rule 188 (LIMIT -> limit all .)
    constraint      reduce using rule 188 (LIMIT -> limit all .)
    unique          reduce using rule 188 (LIMIT -> limit all .)
    check           reduce using rule 188 (LIMIT -> limit all .)
    default         reduce using rule 188 (LIMIT -> limit all .)
    null            reduce using rule 188 (LIMIT -> limit all .)
    primary         reduce using rule 188 (LIMIT -> limit all .)
    references      reduce using rule 188 (LIMIT -> limit all .)
    asc             reduce using rule 188 (LIMIT -> limit all .)
    desc            reduce using rule 188 (LIMIT -> limit all .)
    offset          shift and go to state 748

  ! offset          [ reduce using rule 188 (LIMIT -> limit all .) ]


state 706

    (189) LIMIT -> offset int .
    (191) LIMIT -> offset int . limit int
    (193) LIMIT -> offset int . limit all

  ! shift/reduce conflict for limit resolved as shift
    ptcoma          reduce using rule 189 (LIMIT -> offset int .)
    r_from          reduce using rule 189 (LIMIT -> offset int .)
    coma            reduce using rule 189 (LIMIT -> offset int .)
    where           reduce using rule 189 (LIMIT -> offset int .)
    group           reduce using rule 189 (LIMIT -> offset int .)
    having          reduce using rule 189 (LIMIT -> offset int .)
    union           reduce using rule 189 (LIMIT -> offset int .)
    intersect       reduce using rule 189 (LIMIT -> offset int .)
    except          reduce using rule 189 (LIMIT -> offset int .)
    order           reduce using rule 189 (LIMIT -> offset int .)
    offset          reduce using rule 189 (LIMIT -> offset int .)
    mas             reduce using rule 189 (LIMIT -> offset int .)
    menos           reduce using rule 189 (LIMIT -> offset int .)
    multiplicacion  reduce using rule 189 (LIMIT -> offset int .)
    division        reduce using rule 189 (LIMIT -> offset int .)
    modulo          reduce using rule 189 (LIMIT -> offset int .)
    elevado         reduce using rule 189 (LIMIT -> offset int .)
    and             reduce using rule 189 (LIMIT -> offset int .)
    or              reduce using rule 189 (LIMIT -> offset int .)
    mayor           reduce using rule 189 (LIMIT -> offset int .)
    menor           reduce using rule 189 (LIMIT -> offset int .)
    mayor_igual     reduce using rule 189 (LIMIT -> offset int .)
    menor_igual     reduce using rule 189 (LIMIT -> offset int .)
    igual           reduce using rule 189 (LIMIT -> offset int .)
    diferente1      reduce using rule 189 (LIMIT -> offset int .)
    diferente2      reduce using rule 189 (LIMIT -> offset int .)
    between         reduce using rule 189 (LIMIT -> offset int .)
    is              reduce using rule 189 (LIMIT -> offset int .)
    isnull          reduce using rule 189 (LIMIT -> offset int .)
    notnull         reduce using rule 189 (LIMIT -> offset int .)
    as              reduce using rule 189 (LIMIT -> offset int .)
    cadenaString    reduce using rule 189 (LIMIT -> offset int .)
    id              reduce using rule 189 (LIMIT -> offset int .)
    cadena          reduce using rule 189 (LIMIT -> offset int .)
    in              reduce using rule 189 (LIMIT -> offset int .)
    not             reduce using rule 189 (LIMIT -> offset int .)
    like            reduce using rule 189 (LIMIT -> offset int .)
    then            reduce using rule 189 (LIMIT -> offset int .)
    when            reduce using rule 189 (LIMIT -> offset int .)
    parc            reduce using rule 189 (LIMIT -> offset int .)
    end             reduce using rule 189 (LIMIT -> offset int .)
    else            reduce using rule 189 (LIMIT -> offset int .)
    constraint      reduce using rule 189 (LIMIT -> offset int .)
    unique          reduce using rule 189 (LIMIT -> offset int .)
    check           reduce using rule 189 (LIMIT -> offset int .)
    default         reduce using rule 189 (LIMIT -> offset int .)
    null            reduce using rule 189 (LIMIT -> offset int .)
    primary         reduce using rule 189 (LIMIT -> offset int .)
    references      reduce using rule 189 (LIMIT -> offset int .)
    asc             reduce using rule 189 (LIMIT -> offset int .)
    desc            reduce using rule 189 (LIMIT -> offset int .)
    limit           shift and go to state 749

  ! limit           [ reduce using rule 189 (LIMIT -> offset int .) ]


state 707

    (207) ORDER -> order by LEXP . ORD
    (208) ORDER -> order by LEXP .
    (218) LEXP -> LEXP . coma EXP
    (210) ORD -> . asc
    (211) ORD -> . desc

  ! shift/reduce conflict for coma resolved as shift
  ! shift/reduce conflict for asc resolved as shift
  ! shift/reduce conflict for desc resolved as shift
    r_from          reduce using rule 208 (ORDER -> order by LEXP .)
    where           reduce using rule 208 (ORDER -> order by LEXP .)
    group           reduce using rule 208 (ORDER -> order by LEXP .)
    having          reduce using rule 208 (ORDER -> order by LEXP .)
    union           reduce using rule 208 (ORDER -> order by LEXP .)
    intersect       reduce using rule 208 (ORDER -> order by LEXP .)
    except          reduce using rule 208 (ORDER -> order by LEXP .)
    order           reduce using rule 208 (ORDER -> order by LEXP .)
    limit           reduce using rule 208 (ORDER -> order by LEXP .)
    offset          reduce using rule 208 (ORDER -> order by LEXP .)
    ptcoma          reduce using rule 208 (ORDER -> order by LEXP .)
    mas             reduce using rule 208 (ORDER -> order by LEXP .)
    menos           reduce using rule 208 (ORDER -> order by LEXP .)
    multiplicacion  reduce using rule 208 (ORDER -> order by LEXP .)
    division        reduce using rule 208 (ORDER -> order by LEXP .)
    modulo          reduce using rule 208 (ORDER -> order by LEXP .)
    elevado         reduce using rule 208 (ORDER -> order by LEXP .)
    and             reduce using rule 208 (ORDER -> order by LEXP .)
    or              reduce using rule 208 (ORDER -> order by LEXP .)
    mayor           reduce using rule 208 (ORDER -> order by LEXP .)
    menor           reduce using rule 208 (ORDER -> order by LEXP .)
    mayor_igual     reduce using rule 208 (ORDER -> order by LEXP .)
    menor_igual     reduce using rule 208 (ORDER -> order by LEXP .)
    igual           reduce using rule 208 (ORDER -> order by LEXP .)
    diferente1      reduce using rule 208 (ORDER -> order by LEXP .)
    diferente2      reduce using rule 208 (ORDER -> order by LEXP .)
    between         reduce using rule 208 (ORDER -> order by LEXP .)
    is              reduce using rule 208 (ORDER -> order by LEXP .)
    isnull          reduce using rule 208 (ORDER -> order by LEXP .)
    notnull         reduce using rule 208 (ORDER -> order by LEXP .)
    as              reduce using rule 208 (ORDER -> order by LEXP .)
    cadenaString    reduce using rule 208 (ORDER -> order by LEXP .)
    id              reduce using rule 208 (ORDER -> order by LEXP .)
    cadena          reduce using rule 208 (ORDER -> order by LEXP .)
    in              reduce using rule 208 (ORDER -> order by LEXP .)
    not             reduce using rule 208 (ORDER -> order by LEXP .)
    like            reduce using rule 208 (ORDER -> order by LEXP .)
    then            reduce using rule 208 (ORDER -> order by LEXP .)
    when            reduce using rule 208 (ORDER -> order by LEXP .)
    parc            reduce using rule 208 (ORDER -> order by LEXP .)
    end             reduce using rule 208 (ORDER -> order by LEXP .)
    else            reduce using rule 208 (ORDER -> order by LEXP .)
    constraint      reduce using rule 208 (ORDER -> order by LEXP .)
    unique          reduce using rule 208 (ORDER -> order by LEXP .)
    check           reduce using rule 208 (ORDER -> order by LEXP .)
    default         reduce using rule 208 (ORDER -> order by LEXP .)
    null            reduce using rule 208 (ORDER -> order by LEXP .)
    primary         reduce using rule 208 (ORDER -> order by LEXP .)
    references      reduce using rule 208 (ORDER -> order by LEXP .)
    coma            shift and go to state 164
    asc             shift and go to state 751
    desc            shift and go to state 752

  ! coma            [ reduce using rule 208 (ORDER -> order by LEXP .) ]
  ! asc             [ reduce using rule 208 (ORDER -> order by LEXP .) ]
  ! desc            [ reduce using rule 208 (ORDER -> order by LEXP .) ]

    ORD                            shift and go to state 750

state 708

    (312) EXP -> para EXP . parc
    (219) LEXP -> EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

  ! shift/reduce conflict for parc resolved as shift
    parc            shift and go to state 293
    coma            reduce using rule 219 (LEXP -> EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170
    and             shift and go to state 171
    or              shift and go to state 172
    mayor           shift and go to state 173
    menor           shift and go to state 174
    mayor_igual     shift and go to state 175
    menor_igual     shift and go to state 176
    igual           shift and go to state 177
    diferente1      shift and go to state 178
    diferente2      shift and go to state 179
    between         shift and go to state 180
    is              shift and go to state 181
    isnull          shift and go to state 183
    notnull         shift and go to state 184
    as              shift and go to state 185
    cadenaString    shift and go to state 186
    id              shift and go to state 187
    cadena          shift and go to state 188
    in              shift and go to state 189
    not             shift and go to state 182
    like            shift and go to state 190

  ! parc            [ reduce using rule 219 (LEXP -> EXP .) ]


state 709

    (162) OPCOLUMN -> constraint id unique .

    constraint      reduce using rule 162 (OPCOLUMN -> constraint id unique .)
    unique          reduce using rule 162 (OPCOLUMN -> constraint id unique .)
    check           reduce using rule 162 (OPCOLUMN -> constraint id unique .)
    default         reduce using rule 162 (OPCOLUMN -> constraint id unique .)
    not             reduce using rule 162 (OPCOLUMN -> constraint id unique .)
    null            reduce using rule 162 (OPCOLUMN -> constraint id unique .)
    primary         reduce using rule 162 (OPCOLUMN -> constraint id unique .)
    references      reduce using rule 162 (OPCOLUMN -> constraint id unique .)
    parc            reduce using rule 162 (OPCOLUMN -> constraint id unique .)
    coma            reduce using rule 162 (OPCOLUMN -> constraint id unique .)


state 710

    (164) OPCOLUMN -> constraint id check . para CONDCHECK parc

    para            shift and go to state 753


state 711

    (165) OPCOLUMN -> check para CONDCHECK . parc

    parc            shift and go to state 754


state 712

    (182) HERENCIA -> inherits para id . parc

    parc            shift and go to state 755


state 713

    (171) OPCONST -> primary key para LEXP parc .

    parc            reduce using rule 171 (OPCONST -> primary key para LEXP parc .)
    coma            reduce using rule 171 (OPCONST -> primary key para LEXP parc .)


state 714

    (172) OPCONST -> foreign key para LEXP parc . references id para LEXP parc

    references      shift and go to state 756


state 715

    (175) CONDCHECK -> EXP mayor EXP .
    (275) EXP -> EXP mayor EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    parc            reduce using rule 175 (CONDCHECK -> EXP mayor EXP .)
    mayor           reduce using rule 275 (EXP -> EXP mayor EXP .)
    menor           reduce using rule 275 (EXP -> EXP mayor EXP .)
    mayor_igual     reduce using rule 275 (EXP -> EXP mayor EXP .)
    menor_igual     reduce using rule 275 (EXP -> EXP mayor EXP .)
    igual           reduce using rule 275 (EXP -> EXP mayor EXP .)
    diferente1      reduce using rule 275 (EXP -> EXP mayor EXP .)
    diferente2      reduce using rule 275 (EXP -> EXP mayor EXP .)
    and             reduce using rule 275 (EXP -> EXP mayor EXP .)
    or              reduce using rule 275 (EXP -> EXP mayor EXP .)
    between         reduce using rule 275 (EXP -> EXP mayor EXP .)
    is              reduce using rule 275 (EXP -> EXP mayor EXP .)
    isnull          reduce using rule 275 (EXP -> EXP mayor EXP .)
    notnull         reduce using rule 275 (EXP -> EXP mayor EXP .)
    as              reduce using rule 275 (EXP -> EXP mayor EXP .)
    cadenaString    reduce using rule 275 (EXP -> EXP mayor EXP .)
    id              reduce using rule 275 (EXP -> EXP mayor EXP .)
    cadena          reduce using rule 275 (EXP -> EXP mayor EXP .)
    in              reduce using rule 275 (EXP -> EXP mayor EXP .)
    not             reduce using rule 275 (EXP -> EXP mayor EXP .)
    like            reduce using rule 275 (EXP -> EXP mayor EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170

  ! mas             [ reduce using rule 275 (EXP -> EXP mayor EXP .) ]
  ! menos           [ reduce using rule 275 (EXP -> EXP mayor EXP .) ]
  ! multiplicacion  [ reduce using rule 275 (EXP -> EXP mayor EXP .) ]
  ! division        [ reduce using rule 275 (EXP -> EXP mayor EXP .) ]
  ! modulo          [ reduce using rule 275 (EXP -> EXP mayor EXP .) ]
  ! elevado         [ reduce using rule 275 (EXP -> EXP mayor EXP .) ]
  ! and             [ shift and go to state 171 ]
  ! or              [ shift and go to state 172 ]
  ! mayor           [ shift and go to state 173 ]
  ! menor           [ shift and go to state 174 ]
  ! mayor_igual     [ shift and go to state 175 ]
  ! menor_igual     [ shift and go to state 176 ]
  ! igual           [ shift and go to state 177 ]
  ! diferente1      [ shift and go to state 178 ]
  ! diferente2      [ shift and go to state 179 ]
  ! between         [ shift and go to state 180 ]
  ! is              [ shift and go to state 181 ]
  ! isnull          [ shift and go to state 183 ]
  ! notnull         [ shift and go to state 184 ]
  ! as              [ shift and go to state 185 ]
  ! cadenaString    [ shift and go to state 186 ]
  ! id              [ shift and go to state 187 ]
  ! cadena          [ shift and go to state 188 ]
  ! in              [ shift and go to state 189 ]
  ! not             [ shift and go to state 182 ]
  ! like            [ shift and go to state 190 ]


state 716

    (176) CONDCHECK -> EXP menor EXP .
    (276) EXP -> EXP menor EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    parc            reduce using rule 176 (CONDCHECK -> EXP menor EXP .)
    mayor           reduce using rule 276 (EXP -> EXP menor EXP .)
    menor           reduce using rule 276 (EXP -> EXP menor EXP .)
    mayor_igual     reduce using rule 276 (EXP -> EXP menor EXP .)
    menor_igual     reduce using rule 276 (EXP -> EXP menor EXP .)
    igual           reduce using rule 276 (EXP -> EXP menor EXP .)
    diferente1      reduce using rule 276 (EXP -> EXP menor EXP .)
    diferente2      reduce using rule 276 (EXP -> EXP menor EXP .)
    and             reduce using rule 276 (EXP -> EXP menor EXP .)
    or              reduce using rule 276 (EXP -> EXP menor EXP .)
    between         reduce using rule 276 (EXP -> EXP menor EXP .)
    is              reduce using rule 276 (EXP -> EXP menor EXP .)
    isnull          reduce using rule 276 (EXP -> EXP menor EXP .)
    notnull         reduce using rule 276 (EXP -> EXP menor EXP .)
    as              reduce using rule 276 (EXP -> EXP menor EXP .)
    cadenaString    reduce using rule 276 (EXP -> EXP menor EXP .)
    id              reduce using rule 276 (EXP -> EXP menor EXP .)
    cadena          reduce using rule 276 (EXP -> EXP menor EXP .)
    in              reduce using rule 276 (EXP -> EXP menor EXP .)
    not             reduce using rule 276 (EXP -> EXP menor EXP .)
    like            reduce using rule 276 (EXP -> EXP menor EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170

  ! mas             [ reduce using rule 276 (EXP -> EXP menor EXP .) ]
  ! menos           [ reduce using rule 276 (EXP -> EXP menor EXP .) ]
  ! multiplicacion  [ reduce using rule 276 (EXP -> EXP menor EXP .) ]
  ! division        [ reduce using rule 276 (EXP -> EXP menor EXP .) ]
  ! modulo          [ reduce using rule 276 (EXP -> EXP menor EXP .) ]
  ! elevado         [ reduce using rule 276 (EXP -> EXP menor EXP .) ]
  ! and             [ shift and go to state 171 ]
  ! or              [ shift and go to state 172 ]
  ! mayor           [ shift and go to state 173 ]
  ! menor           [ shift and go to state 174 ]
  ! mayor_igual     [ shift and go to state 175 ]
  ! menor_igual     [ shift and go to state 176 ]
  ! igual           [ shift and go to state 177 ]
  ! diferente1      [ shift and go to state 178 ]
  ! diferente2      [ shift and go to state 179 ]
  ! between         [ shift and go to state 180 ]
  ! is              [ shift and go to state 181 ]
  ! isnull          [ shift and go to state 183 ]
  ! notnull         [ shift and go to state 184 ]
  ! as              [ shift and go to state 185 ]
  ! cadenaString    [ shift and go to state 186 ]
  ! id              [ shift and go to state 187 ]
  ! cadena          [ shift and go to state 188 ]
  ! in              [ shift and go to state 189 ]
  ! not             [ shift and go to state 182 ]
  ! like            [ shift and go to state 190 ]


state 717

    (177) CONDCHECK -> EXP mayor_igual EXP .
    (277) EXP -> EXP mayor_igual EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    parc            reduce using rule 177 (CONDCHECK -> EXP mayor_igual EXP .)
    mayor           reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    menor           reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    mayor_igual     reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    menor_igual     reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    igual           reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    diferente1      reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    diferente2      reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    and             reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    or              reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    between         reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    is              reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    isnull          reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    notnull         reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    as              reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    cadenaString    reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    id              reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    cadena          reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    in              reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    not             reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    like            reduce using rule 277 (EXP -> EXP mayor_igual EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170

  ! mas             [ reduce using rule 277 (EXP -> EXP mayor_igual EXP .) ]
  ! menos           [ reduce using rule 277 (EXP -> EXP mayor_igual EXP .) ]
  ! multiplicacion  [ reduce using rule 277 (EXP -> EXP mayor_igual EXP .) ]
  ! division        [ reduce using rule 277 (EXP -> EXP mayor_igual EXP .) ]
  ! modulo          [ reduce using rule 277 (EXP -> EXP mayor_igual EXP .) ]
  ! elevado         [ reduce using rule 277 (EXP -> EXP mayor_igual EXP .) ]
  ! and             [ shift and go to state 171 ]
  ! or              [ shift and go to state 172 ]
  ! mayor           [ shift and go to state 173 ]
  ! menor           [ shift and go to state 174 ]
  ! mayor_igual     [ shift and go to state 175 ]
  ! menor_igual     [ shift and go to state 176 ]
  ! igual           [ shift and go to state 177 ]
  ! diferente1      [ shift and go to state 178 ]
  ! diferente2      [ shift and go to state 179 ]
  ! between         [ shift and go to state 180 ]
  ! is              [ shift and go to state 181 ]
  ! isnull          [ shift and go to state 183 ]
  ! notnull         [ shift and go to state 184 ]
  ! as              [ shift and go to state 185 ]
  ! cadenaString    [ shift and go to state 186 ]
  ! id              [ shift and go to state 187 ]
  ! cadena          [ shift and go to state 188 ]
  ! in              [ shift and go to state 189 ]
  ! not             [ shift and go to state 182 ]
  ! like            [ shift and go to state 190 ]


state 718

    (178) CONDCHECK -> EXP menor_igual EXP .
    (278) EXP -> EXP menor_igual EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    parc            reduce using rule 178 (CONDCHECK -> EXP menor_igual EXP .)
    mayor           reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    menor           reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    mayor_igual     reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    menor_igual     reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    igual           reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    diferente1      reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    diferente2      reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    and             reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    or              reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    between         reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    is              reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    isnull          reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    notnull         reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    as              reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    cadenaString    reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    id              reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    cadena          reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    in              reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    not             reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    like            reduce using rule 278 (EXP -> EXP menor_igual EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170

  ! mas             [ reduce using rule 278 (EXP -> EXP menor_igual EXP .) ]
  ! menos           [ reduce using rule 278 (EXP -> EXP menor_igual EXP .) ]
  ! multiplicacion  [ reduce using rule 278 (EXP -> EXP menor_igual EXP .) ]
  ! division        [ reduce using rule 278 (EXP -> EXP menor_igual EXP .) ]
  ! modulo          [ reduce using rule 278 (EXP -> EXP menor_igual EXP .) ]
  ! elevado         [ reduce using rule 278 (EXP -> EXP menor_igual EXP .) ]
  ! and             [ shift and go to state 171 ]
  ! or              [ shift and go to state 172 ]
  ! mayor           [ shift and go to state 173 ]
  ! menor           [ shift and go to state 174 ]
  ! mayor_igual     [ shift and go to state 175 ]
  ! menor_igual     [ shift and go to state 176 ]
  ! igual           [ shift and go to state 177 ]
  ! diferente1      [ shift and go to state 178 ]
  ! diferente2      [ shift and go to state 179 ]
  ! between         [ shift and go to state 180 ]
  ! is              [ shift and go to state 181 ]
  ! isnull          [ shift and go to state 183 ]
  ! notnull         [ shift and go to state 184 ]
  ! as              [ shift and go to state 185 ]
  ! cadenaString    [ shift and go to state 186 ]
  ! id              [ shift and go to state 187 ]
  ! cadena          [ shift and go to state 188 ]
  ! in              [ shift and go to state 189 ]
  ! not             [ shift and go to state 182 ]
  ! like            [ shift and go to state 190 ]


state 719

    (179) CONDCHECK -> EXP igual EXP .
    (279) EXP -> EXP igual EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    parc            reduce using rule 179 (CONDCHECK -> EXP igual EXP .)
    mayor           reduce using rule 279 (EXP -> EXP igual EXP .)
    menor           reduce using rule 279 (EXP -> EXP igual EXP .)
    mayor_igual     reduce using rule 279 (EXP -> EXP igual EXP .)
    menor_igual     reduce using rule 279 (EXP -> EXP igual EXP .)
    igual           reduce using rule 279 (EXP -> EXP igual EXP .)
    diferente1      reduce using rule 279 (EXP -> EXP igual EXP .)
    diferente2      reduce using rule 279 (EXP -> EXP igual EXP .)
    and             reduce using rule 279 (EXP -> EXP igual EXP .)
    or              reduce using rule 279 (EXP -> EXP igual EXP .)
    between         reduce using rule 279 (EXP -> EXP igual EXP .)
    is              reduce using rule 279 (EXP -> EXP igual EXP .)
    isnull          reduce using rule 279 (EXP -> EXP igual EXP .)
    notnull         reduce using rule 279 (EXP -> EXP igual EXP .)
    as              reduce using rule 279 (EXP -> EXP igual EXP .)
    cadenaString    reduce using rule 279 (EXP -> EXP igual EXP .)
    id              reduce using rule 279 (EXP -> EXP igual EXP .)
    cadena          reduce using rule 279 (EXP -> EXP igual EXP .)
    in              reduce using rule 279 (EXP -> EXP igual EXP .)
    not             reduce using rule 279 (EXP -> EXP igual EXP .)
    like            reduce using rule 279 (EXP -> EXP igual EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170

  ! mas             [ reduce using rule 279 (EXP -> EXP igual EXP .) ]
  ! menos           [ reduce using rule 279 (EXP -> EXP igual EXP .) ]
  ! multiplicacion  [ reduce using rule 279 (EXP -> EXP igual EXP .) ]
  ! division        [ reduce using rule 279 (EXP -> EXP igual EXP .) ]
  ! modulo          [ reduce using rule 279 (EXP -> EXP igual EXP .) ]
  ! elevado         [ reduce using rule 279 (EXP -> EXP igual EXP .) ]
  ! and             [ shift and go to state 171 ]
  ! or              [ shift and go to state 172 ]
  ! mayor           [ shift and go to state 173 ]
  ! menor           [ shift and go to state 174 ]
  ! mayor_igual     [ shift and go to state 175 ]
  ! menor_igual     [ shift and go to state 176 ]
  ! igual           [ shift and go to state 177 ]
  ! diferente1      [ shift and go to state 178 ]
  ! diferente2      [ shift and go to state 179 ]
  ! between         [ shift and go to state 180 ]
  ! is              [ shift and go to state 181 ]
  ! isnull          [ shift and go to state 183 ]
  ! notnull         [ shift and go to state 184 ]
  ! as              [ shift and go to state 185 ]
  ! cadenaString    [ shift and go to state 186 ]
  ! id              [ shift and go to state 187 ]
  ! cadena          [ shift and go to state 188 ]
  ! in              [ shift and go to state 189 ]
  ! not             [ shift and go to state 182 ]
  ! like            [ shift and go to state 190 ]


state 720

    (180) CONDCHECK -> EXP diferente1 EXP .
    (280) EXP -> EXP diferente1 EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    parc            reduce using rule 180 (CONDCHECK -> EXP diferente1 EXP .)
    mayor           reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    menor           reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    mayor_igual     reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    menor_igual     reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    igual           reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    diferente1      reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    diferente2      reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    and             reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    or              reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    between         reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    is              reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    isnull          reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    notnull         reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    as              reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    cadenaString    reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    id              reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    cadena          reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    in              reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    not             reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    like            reduce using rule 280 (EXP -> EXP diferente1 EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170

  ! mas             [ reduce using rule 280 (EXP -> EXP diferente1 EXP .) ]
  ! menos           [ reduce using rule 280 (EXP -> EXP diferente1 EXP .) ]
  ! multiplicacion  [ reduce using rule 280 (EXP -> EXP diferente1 EXP .) ]
  ! division        [ reduce using rule 280 (EXP -> EXP diferente1 EXP .) ]
  ! modulo          [ reduce using rule 280 (EXP -> EXP diferente1 EXP .) ]
  ! elevado         [ reduce using rule 280 (EXP -> EXP diferente1 EXP .) ]
  ! and             [ shift and go to state 171 ]
  ! or              [ shift and go to state 172 ]
  ! mayor           [ shift and go to state 173 ]
  ! menor           [ shift and go to state 174 ]
  ! mayor_igual     [ shift and go to state 175 ]
  ! menor_igual     [ shift and go to state 176 ]
  ! igual           [ shift and go to state 177 ]
  ! diferente1      [ shift and go to state 178 ]
  ! diferente2      [ shift and go to state 179 ]
  ! between         [ shift and go to state 180 ]
  ! is              [ shift and go to state 181 ]
  ! isnull          [ shift and go to state 183 ]
  ! notnull         [ shift and go to state 184 ]
  ! as              [ shift and go to state 185 ]
  ! cadenaString    [ shift and go to state 186 ]
  ! id              [ shift and go to state 187 ]
  ! cadena          [ shift and go to state 188 ]
  ! in              [ shift and go to state 189 ]
  ! not             [ shift and go to state 182 ]
  ! like            [ shift and go to state 190 ]


state 721

    (181) CONDCHECK -> EXP diferente2 EXP .
    (281) EXP -> EXP diferente2 EXP .
    (267) EXP -> EXP . mas EXP
    (268) EXP -> EXP . menos EXP
    (269) EXP -> EXP . multiplicacion EXP
    (270) EXP -> EXP . division EXP
    (271) EXP -> EXP . modulo EXP
    (272) EXP -> EXP . elevado EXP
    (273) EXP -> EXP . and EXP
    (274) EXP -> EXP . or EXP
    (275) EXP -> EXP . mayor EXP
    (276) EXP -> EXP . menor EXP
    (277) EXP -> EXP . mayor_igual EXP
    (278) EXP -> EXP . menor_igual EXP
    (279) EXP -> EXP . igual EXP
    (280) EXP -> EXP . diferente1 EXP
    (281) EXP -> EXP . diferente2 EXP
    (282) EXP -> EXP . between EXP
    (283) EXP -> EXP . is not null
    (284) EXP -> EXP . is null
    (285) EXP -> EXP . isnull
    (286) EXP -> EXP . notnull
    (287) EXP -> EXP . is true
    (288) EXP -> EXP . is not true
    (289) EXP -> EXP . is false
    (290) EXP -> EXP . is not false
    (291) EXP -> EXP . is unknown
    (292) EXP -> EXP . is not unknown
    (293) EXP -> EXP . as cadenaString
    (294) EXP -> EXP . cadenaString
    (295) EXP -> EXP . as id
    (296) EXP -> EXP . id
    (297) EXP -> EXP . as cadena
    (298) EXP -> EXP . cadena
    (302) EXP -> EXP . in para EXP parc
    (303) EXP -> EXP . not in para EXP parc
    (304) EXP -> EXP . not between EXP
    (305) EXP -> EXP . between symetric EXP
    (306) EXP -> EXP . not between symetric EXP
    (307) EXP -> EXP . is distinct r_from EXP
    (308) EXP -> EXP . is not distinct r_from EXP
    (309) EXP -> EXP . like cadena
    (310) EXP -> EXP . not like cadena

    parc            reduce using rule 181 (CONDCHECK -> EXP diferente2 EXP .)
    mayor           reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    menor           reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    mayor_igual     reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    menor_igual     reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    igual           reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    diferente1      reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    diferente2      reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    and             reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    or              reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    between         reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    is              reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    isnull          reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    notnull         reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    as              reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    cadenaString    reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    id              reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    cadena          reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    in              reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    not             reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    like            reduce using rule 281 (EXP -> EXP diferente2 EXP .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    multiplicacion  shift and go to state 167
    division        shift and go to state 168
    modulo          shift and go to state 169
    elevado         shift and go to state 170

  ! mas             [ reduce using rule 281 (EXP -> EXP diferente2 EXP .) ]
  ! menos           [ reduce using rule 281 (EXP -> EXP diferente2 EXP .) ]
  ! multiplicacion  [ reduce using rule 281 (EXP -> EXP diferente2 EXP .) ]
  ! division        [ reduce using rule 281 (EXP -> EXP diferente2 EXP .) ]
  ! modulo          [ reduce using rule 281 (EXP -> EXP diferente2 EXP .) ]
  ! elevado         [ reduce using rule 281 (EXP -> EXP diferente2 EXP .) ]
  ! and             [ shift and go to state 171 ]
  ! or              [ shift and go to state 172 ]
  ! mayor           [ shift and go to state 173 ]
  ! menor           [ shift and go to state 174 ]
  ! mayor_igual     [ shift and go to state 175 ]
  ! menor_igual     [ shift and go to state 176 ]
  ! igual           [ shift and go to state 177 ]
  ! diferente1      [ shift and go to state 178 ]
  ! diferente2      [ shift and go to state 179 ]
  ! between         [ shift and go to state 180 ]
  ! is              [ shift and go to state 181 ]
  ! isnull          [ shift and go to state 183 ]
  ! notnull         [ shift and go to state 184 ]
  ! as              [ shift and go to state 185 ]
  ! cadenaString    [ shift and go to state 186 ]
  ! id              [ shift and go to state 187 ]
  ! cadena          [ shift and go to state 188 ]
  ! in              [ shift and go to state 189 ]
  ! not             [ shift and go to state 182 ]
  ! like            [ shift and go to state 190 ]


state 722

    (49) CREATEINDEX -> create index id on id para id id ORDEN . parc

    parc            shift and go to state 757


state 723

    (48) CREATEINDEX -> create index id on id para id ORDEN parc .

    ptcoma          reduce using rule 48 (CREATEINDEX -> create index id on id para id ORDEN parc .)
    where           reduce using rule 48 (CREATEINDEX -> create index id on id para id ORDEN parc .)


state 724

    (54) ORDEN -> asc nulls . first
    (57) ORDEN -> asc nulls . last

    first           shift and go to state 758
    last            shift and go to state 759


state 725

    (55) ORDEN -> desc nulls . last
    (56) ORDEN -> desc nulls . first

    last            shift and go to state 760
    first           shift and go to state 761


state 726

    (52) ORDEN -> nulls first .

    parc            reduce using rule 52 (ORDEN -> nulls first .)


state 727

    (53) ORDEN -> nulls last .

    parc            reduce using rule 53 (ORDEN -> nulls last .)


state 728

    (47) CREATEINDEX -> create index id on id using hash para LEXP . parc
    (218) LEXP -> LEXP . coma EXP

    parc            shift and go to state 762
    coma            shift and go to state 164


state 729

    (46) CREATEINDEX -> create unique index id on id para LEXP parc .

    ptcoma          reduce using rule 46 (CREATEINDEX -> create unique index id on id para LEXP parc .)
    where           reduce using rule 46 (CREATEINDEX -> create unique index id on id para LEXP parc .)


state 730

    (42) LENGUAJE -> dolarn language plpgsql .
    (43) LENGUAJE -> dolarn language plpgsql . ptcoma

    as              reduce using rule 42 (LENGUAJE -> dolarn language plpgsql .)
    do              reduce using rule 42 (LENGUAJE -> dolarn language plpgsql .)
    id              reduce using rule 42 (LENGUAJE -> dolarn language plpgsql .)
    if              reduce using rule 42 (LENGUAJE -> dolarn language plpgsql .)
    raise           reduce using rule 42 (LENGUAJE -> dolarn language plpgsql .)
    begin           reduce using rule 42 (LENGUAJE -> dolarn language plpgsql .)
    call            reduce using rule 42 (LENGUAJE -> dolarn language plpgsql .)
    return          reduce using rule 42 (LENGUAJE -> dolarn language plpgsql .)
    case            reduce using rule 42 (LENGUAJE -> dolarn language plpgsql .)
    use             reduce using rule 42 (LENGUAJE -> dolarn language plpgsql .)
    select          reduce using rule 42 (LENGUAJE -> dolarn language plpgsql .)
    create          reduce using rule 42 (LENGUAJE -> dolarn language plpgsql .)
    update          reduce using rule 42 (LENGUAJE -> dolarn language plpgsql .)
    delete          reduce using rule 42 (LENGUAJE -> dolarn language plpgsql .)
    alter           reduce using rule 42 (LENGUAJE -> dolarn language plpgsql .)
    drop            reduce using rule 42 (LENGUAJE -> dolarn language plpgsql .)
    insert          reduce using rule 42 (LENGUAJE -> dolarn language plpgsql .)
    show            reduce using rule 42 (LENGUAJE -> dolarn language plpgsql .)
    $end            reduce using rule 42 (LENGUAJE -> dolarn language plpgsql .)
    ptcoma          shift and go to state 763


state 731

    (34) CONTENIDOP -> as dolarn LISTACONTENIDO . dolarn ptcoma
    (80) LISTACONTENIDO -> LISTACONTENIDO . CONTENIDO
    (82) CONTENIDO -> . ASIGNACION ptcoma
    (83) CONTENIDO -> . DECLARACIONES ptcoma
    (84) CONTENIDO -> . CONDICIONIF ptcoma
    (85) CONTENIDO -> . RAISE ptcoma
    (86) CONTENIDO -> . BEGINEND ptcoma
    (87) CONTENIDO -> . CALLPROCEDURE ptcoma
    (88) CONTENIDO -> . RETURN ptcoma
    (89) CONTENIDO -> . CASE ptcoma
    (67) ASIGNACION -> . id dospuntos igual EXP
    (68) ASIGNACION -> . id igual EXP
    (59) DECLARACIONES -> . id TIPO not null ASIG
    (60) DECLARACIONES -> . id TIPO ASIG
    (61) DECLARACIONES -> . id constant TIPO not null ASIG
    (62) DECLARACIONES -> . id constant TIPO ASIG
    (69) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (70) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (71) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (72) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (90) RAISE -> . raise LEVEL FORMAT
    (91) RAISE -> . raise LEVEL EXP
    (92) RAISE -> . raise LEVEL
    (93) RAISE -> . raise
    (94) RAISE -> . raise LEVEL cadena coma id
    (44) BEGINEND -> . begin LISTACONTENIDO end
    (29) CALLPROCEDURE -> . call id para LEXP parc
    (24) RETURN -> . return LEXP
    (25) RETURN -> . return id para LEXP parc
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    dolarn          shift and go to state 764
    id              shift and go to state 340
    if              shift and go to state 30
    raise           shift and go to state 341
    begin           shift and go to state 342
    call            shift and go to state 343
    return          shift and go to state 344
    case            shift and go to state 32

    CONTENIDO                      shift and go to state 441
    ASIGNACION                     shift and go to state 332
    DECLARACIONES                  shift and go to state 333
    CONDICIONIF                    shift and go to state 334
    RAISE                          shift and go to state 335
    BEGINEND                       shift and go to state 336
    CALLPROCEDURE                  shift and go to state 337
    RETURN                         shift and go to state 338
    CASE                           shift and go to state 339

state 732

    (35) CONTENIDOP -> do dolarn LISTACONTENIDO . dolarn ptcoma
    (80) LISTACONTENIDO -> LISTACONTENIDO . CONTENIDO
    (82) CONTENIDO -> . ASIGNACION ptcoma
    (83) CONTENIDO -> . DECLARACIONES ptcoma
    (84) CONTENIDO -> . CONDICIONIF ptcoma
    (85) CONTENIDO -> . RAISE ptcoma
    (86) CONTENIDO -> . BEGINEND ptcoma
    (87) CONTENIDO -> . CALLPROCEDURE ptcoma
    (88) CONTENIDO -> . RETURN ptcoma
    (89) CONTENIDO -> . CASE ptcoma
    (67) ASIGNACION -> . id dospuntos igual EXP
    (68) ASIGNACION -> . id igual EXP
    (59) DECLARACIONES -> . id TIPO not null ASIG
    (60) DECLARACIONES -> . id TIPO ASIG
    (61) DECLARACIONES -> . id constant TIPO not null ASIG
    (62) DECLARACIONES -> . id constant TIPO ASIG
    (69) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (70) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (71) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (72) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (90) RAISE -> . raise LEVEL FORMAT
    (91) RAISE -> . raise LEVEL EXP
    (92) RAISE -> . raise LEVEL
    (93) RAISE -> . raise
    (94) RAISE -> . raise LEVEL cadena coma id
    (44) BEGINEND -> . begin LISTACONTENIDO end
    (29) CALLPROCEDURE -> . call id para LEXP parc
    (24) RETURN -> . return LEXP
    (25) RETURN -> . return id para LEXP parc
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    dolarn          shift and go to state 765
    id              shift and go to state 340
    if              shift and go to state 30
    raise           shift and go to state 341
    begin           shift and go to state 342
    call            shift and go to state 343
    return          shift and go to state 344
    case            shift and go to state 32

    CONTENIDO                      shift and go to state 441
    ASIGNACION                     shift and go to state 332
    DECLARACIONES                  shift and go to state 333
    CONDICIONIF                    shift and go to state 334
    RAISE                          shift and go to state 335
    BEGINEND                       shift and go to state 336
    CALLPROCEDURE                  shift and go to state 337
    RETURN                         shift and go to state 338
    CASE                           shift and go to state 339

state 733

    (37) LPARAM -> LPARAM coma inout id TIPO .

    parc            reduce using rule 37 (LPARAM -> LPARAM coma inout id TIPO .)
    coma            reduce using rule 37 (LPARAM -> LPARAM coma inout id TIPO .)


state 734

    (26) FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .
    (32) LCONTENIDOP -> LCONTENIDOP . CONTENIDOP
    (34) CONTENIDOP -> . as dolarn LISTACONTENIDO dolarn ptcoma
    (35) CONTENIDOP -> . do dolarn LISTACONTENIDO dolarn ptcoma
    (36) CONTENIDOP -> . LISTACONTENIDO
    (80) LISTACONTENIDO -> . LISTACONTENIDO CONTENIDO
    (81) LISTACONTENIDO -> . CONTENIDO
    (82) CONTENIDO -> . ASIGNACION ptcoma
    (83) CONTENIDO -> . DECLARACIONES ptcoma
    (84) CONTENIDO -> . CONDICIONIF ptcoma
    (85) CONTENIDO -> . RAISE ptcoma
    (86) CONTENIDO -> . BEGINEND ptcoma
    (87) CONTENIDO -> . CALLPROCEDURE ptcoma
    (88) CONTENIDO -> . RETURN ptcoma
    (89) CONTENIDO -> . CASE ptcoma
    (67) ASIGNACION -> . id dospuntos igual EXP
    (68) ASIGNACION -> . id igual EXP
    (59) DECLARACIONES -> . id TIPO not null ASIG
    (60) DECLARACIONES -> . id TIPO ASIG
    (61) DECLARACIONES -> . id constant TIPO not null ASIG
    (62) DECLARACIONES -> . id constant TIPO ASIG
    (69) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (70) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (71) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (72) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (90) RAISE -> . raise LEVEL FORMAT
    (91) RAISE -> . raise LEVEL EXP
    (92) RAISE -> . raise LEVEL
    (93) RAISE -> . raise
    (94) RAISE -> . raise LEVEL cadena coma id
    (44) BEGINEND -> . begin LISTACONTENIDO end
    (29) CALLPROCEDURE -> . call id para LEXP parc
    (24) RETURN -> . return LEXP
    (25) RETURN -> . return id para LEXP parc
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for if resolved as shift
  ! shift/reduce conflict for case resolved as shift
    use             reduce using rule 26 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    select          reduce using rule 26 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    create          reduce using rule 26 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    update          reduce using rule 26 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    delete          reduce using rule 26 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    alter           reduce using rule 26 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    drop            reduce using rule 26 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    insert          reduce using rule 26 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    show            reduce using rule 26 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    $end            reduce using rule 26 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .)
    as              shift and go to state 599
    do              shift and go to state 601
    id              shift and go to state 340
    if              shift and go to state 30
    raise           shift and go to state 341
    begin           shift and go to state 342
    call            shift and go to state 343
    return          shift and go to state 344
    case            shift and go to state 32

  ! case            [ reduce using rule 26 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .) ]
  ! id              [ reduce using rule 26 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .) ]
  ! if              [ reduce using rule 26 (FUNCIONES -> create function id para LPARAM parc RETURNP LENGUAJE LCONTENIDOP .) ]

    CONTENIDOP                     shift and go to state 673
    LISTACONTENIDO                 shift and go to state 600
    CONTENIDO                      shift and go to state 331
    ASIGNACION                     shift and go to state 332
    DECLARACIONES                  shift and go to state 333
    CONDICIONIF                    shift and go to state 334
    RAISE                          shift and go to state 335
    BEGINEND                       shift and go to state 336
    CALLPROCEDURE                  shift and go to state 337
    RETURN                         shift and go to state 338
    CASE                           shift and go to state 339

state 735

    (27) FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .

    use             reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    select          reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    create          reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    update          reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    delete          reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    alter           reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    drop            reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    insert          reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    case            reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    show            reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    id              reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    if              reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)
    $end            reduce using rule 27 (FUNCIONES -> create function id para LPARAM parc RETURNP LCONTENIDOP LENGUAJE .)


state 736

    (28) RETURNP -> returns TIPO as . dolarn

    dolarn          shift and go to state 766


state 737

    (125) OP -> alter column id set not null .

    coma            reduce using rule 125 (OP -> alter column id set not null .)
    ptcoma          reduce using rule 125 (OP -> alter column id set not null .)


state 738

    (120) OP -> add constraint id check para CONDCHECK . parc

    parc            shift and go to state 767


state 739

    (121) OP -> add constraint id unique para LEXP . parc
    (218) LEXP -> LEXP . coma EXP

    parc            shift and go to state 768
    coma            shift and go to state 164


state 740

    (124) OP -> add constraint id foreign key para . LEXP parc references id para LEXP parc
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 769
    EXP                            shift and go to state 79
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 741

    (123) OP -> add foreign key para LEXP parc . references id para LEXP parc

    references      shift and go to state 770


state 742

    (73) LELIF -> LELIF elsif EXP then LISTACONTENIDO .
    (80) LISTACONTENIDO -> LISTACONTENIDO . CONTENIDO
    (82) CONTENIDO -> . ASIGNACION ptcoma
    (83) CONTENIDO -> . DECLARACIONES ptcoma
    (84) CONTENIDO -> . CONDICIONIF ptcoma
    (85) CONTENIDO -> . RAISE ptcoma
    (86) CONTENIDO -> . BEGINEND ptcoma
    (87) CONTENIDO -> . CALLPROCEDURE ptcoma
    (88) CONTENIDO -> . RETURN ptcoma
    (89) CONTENIDO -> . CASE ptcoma
    (67) ASIGNACION -> . id dospuntos igual EXP
    (68) ASIGNACION -> . id igual EXP
    (59) DECLARACIONES -> . id TIPO not null ASIG
    (60) DECLARACIONES -> . id TIPO ASIG
    (61) DECLARACIONES -> . id constant TIPO not null ASIG
    (62) DECLARACIONES -> . id constant TIPO ASIG
    (69) CONDICIONIF -> . if EXP then LISTACONTENIDO ELSEF end if
    (70) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF end if
    (71) CONDICIONIF -> . if EXP then LISTACONTENIDO end if
    (72) CONDICIONIF -> . if EXP then LISTACONTENIDO LELIF ELSEF end if
    (90) RAISE -> . raise LEVEL FORMAT
    (91) RAISE -> . raise LEVEL EXP
    (92) RAISE -> . raise LEVEL
    (93) RAISE -> . raise
    (94) RAISE -> . raise LEVEL cadena coma id
    (44) BEGINEND -> . begin LISTACONTENIDO end
    (29) CALLPROCEDURE -> . call id para LEXP parc
    (24) RETURN -> . return LEXP
    (25) RETURN -> . return id para LEXP parc
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    end             reduce using rule 73 (LELIF -> LELIF elsif EXP then LISTACONTENIDO .)
    elsif           reduce using rule 73 (LELIF -> LELIF elsif EXP then LISTACONTENIDO .)
    else            reduce using rule 73 (LELIF -> LELIF elsif EXP then LISTACONTENIDO .)
    id              shift and go to state 340
    if              shift and go to state 30
    raise           shift and go to state 341
    begin           shift and go to state 342
    call            shift and go to state 343
    return          shift and go to state 344
    case            shift and go to state 32

    CONTENIDO                      shift and go to state 441
    ASIGNACION                     shift and go to state 332
    DECLARACIONES                  shift and go to state 333
    CONDICIONIF                    shift and go to state 334
    RAISE                          shift and go to state 335
    BEGINEND                       shift and go to state 336
    CALLPROCEDURE                  shift and go to state 337
    RETURN                         shift and go to state 338
    CASE                           shift and go to state 339

state 743

    (101) FORMAT -> format para EXP coma . LEXP parc
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    EXP                            shift and go to state 79
    LEXP                           shift and go to state 771
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 744

    (108) INSERT -> insert into id para LEXP parc values para LEXP . parc
    (218) LEXP -> LEXP . coma EXP

    parc            shift and go to state 772
    coma            shift and go to state 164


state 745

    (184) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER . LIMIT
    (187) LIMIT -> . limit int
    (188) LIMIT -> . limit all
    (189) LIMIT -> . offset int
    (190) LIMIT -> . limit int offset int
    (191) LIMIT -> . offset int limit int
    (192) LIMIT -> . limit all offset int
    (193) LIMIT -> . offset int limit all
    (194) LIMIT -> .

  ! shift/reduce conflict for limit resolved as shift
  ! shift/reduce conflict for offset resolved as shift
    limit           shift and go to state 636
    offset          shift and go to state 637
    ptcoma          reduce using rule 194 (LIMIT -> .)
    r_from          reduce using rule 194 (LIMIT -> .)
    coma            reduce using rule 194 (LIMIT -> .)
    where           reduce using rule 194 (LIMIT -> .)
    group           reduce using rule 194 (LIMIT -> .)
    having          reduce using rule 194 (LIMIT -> .)
    union           reduce using rule 194 (LIMIT -> .)
    intersect       reduce using rule 194 (LIMIT -> .)
    except          reduce using rule 194 (LIMIT -> .)
    order           reduce using rule 194 (LIMIT -> .)
    mas             reduce using rule 194 (LIMIT -> .)
    menos           reduce using rule 194 (LIMIT -> .)
    multiplicacion  reduce using rule 194 (LIMIT -> .)
    division        reduce using rule 194 (LIMIT -> .)
    modulo          reduce using rule 194 (LIMIT -> .)
    elevado         reduce using rule 194 (LIMIT -> .)
    and             reduce using rule 194 (LIMIT -> .)
    or              reduce using rule 194 (LIMIT -> .)
    mayor           reduce using rule 194 (LIMIT -> .)
    menor           reduce using rule 194 (LIMIT -> .)
    mayor_igual     reduce using rule 194 (LIMIT -> .)
    menor_igual     reduce using rule 194 (LIMIT -> .)
    igual           reduce using rule 194 (LIMIT -> .)
    diferente1      reduce using rule 194 (LIMIT -> .)
    diferente2      reduce using rule 194 (LIMIT -> .)
    between         reduce using rule 194 (LIMIT -> .)
    is              reduce using rule 194 (LIMIT -> .)
    isnull          reduce using rule 194 (LIMIT -> .)
    notnull         reduce using rule 194 (LIMIT -> .)
    as              reduce using rule 194 (LIMIT -> .)
    cadenaString    reduce using rule 194 (LIMIT -> .)
    id              reduce using rule 194 (LIMIT -> .)
    cadena          reduce using rule 194 (LIMIT -> .)
    in              reduce using rule 194 (LIMIT -> .)
    not             reduce using rule 194 (LIMIT -> .)
    like            reduce using rule 194 (LIMIT -> .)
    then            reduce using rule 194 (LIMIT -> .)
    when            reduce using rule 194 (LIMIT -> .)
    parc            reduce using rule 194 (LIMIT -> .)
    end             reduce using rule 194 (LIMIT -> .)
    else            reduce using rule 194 (LIMIT -> .)
    constraint      reduce using rule 194 (LIMIT -> .)
    unique          reduce using rule 194 (LIMIT -> .)
    check           reduce using rule 194 (LIMIT -> .)
    default         reduce using rule 194 (LIMIT -> .)
    null            reduce using rule 194 (LIMIT -> .)
    primary         reduce using rule 194 (LIMIT -> .)
    references      reduce using rule 194 (LIMIT -> .)
    asc             reduce using rule 194 (LIMIT -> .)
    desc            reduce using rule 194 (LIMIT -> .)

  ! limit           [ reduce using rule 194 (LIMIT -> .) ]
  ! offset          [ reduce using rule 194 (LIMIT -> .) ]

    LIMIT                          shift and go to state 773

state 746

    (185) SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .

    ptcoma          reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    r_from          reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    coma            reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    where           reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    group           reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    having          reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    union           reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    intersect       reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    except          reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    order           reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    limit           reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    offset          reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mas             reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menos           reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    multiplicacion  reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    division        reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    modulo          reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    elevado         reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    and             reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    or              reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor           reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor           reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor_igual     reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor_igual     reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    igual           reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente1      reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente2      reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    between         reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    is              reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    isnull          reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    notnull         reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    as              reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadenaString    reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    id              reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadena          reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    in              reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    not             reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    like            reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    then            reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    when            reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    parc            reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    end             reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    else            reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    constraint      reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    unique          reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    check           reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    default         reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    null            reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    primary         reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    references      reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    asc             reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    desc            reduce using rule 185 (SELECT -> select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)


state 747

    (190) LIMIT -> limit int offset . int

    int             shift and go to state 774


state 748

    (192) LIMIT -> limit all offset . int

    int             shift and go to state 775


state 749

    (191) LIMIT -> offset int limit . int
    (193) LIMIT -> offset int limit . all

    int             shift and go to state 776
    all             shift and go to state 777


state 750

    (207) ORDER -> order by LEXP ORD .

    r_from          reduce using rule 207 (ORDER -> order by LEXP ORD .)
    coma            reduce using rule 207 (ORDER -> order by LEXP ORD .)
    where           reduce using rule 207 (ORDER -> order by LEXP ORD .)
    group           reduce using rule 207 (ORDER -> order by LEXP ORD .)
    having          reduce using rule 207 (ORDER -> order by LEXP ORD .)
    union           reduce using rule 207 (ORDER -> order by LEXP ORD .)
    intersect       reduce using rule 207 (ORDER -> order by LEXP ORD .)
    except          reduce using rule 207 (ORDER -> order by LEXP ORD .)
    order           reduce using rule 207 (ORDER -> order by LEXP ORD .)
    limit           reduce using rule 207 (ORDER -> order by LEXP ORD .)
    offset          reduce using rule 207 (ORDER -> order by LEXP ORD .)
    ptcoma          reduce using rule 207 (ORDER -> order by LEXP ORD .)
    mas             reduce using rule 207 (ORDER -> order by LEXP ORD .)
    menos           reduce using rule 207 (ORDER -> order by LEXP ORD .)
    multiplicacion  reduce using rule 207 (ORDER -> order by LEXP ORD .)
    division        reduce using rule 207 (ORDER -> order by LEXP ORD .)
    modulo          reduce using rule 207 (ORDER -> order by LEXP ORD .)
    elevado         reduce using rule 207 (ORDER -> order by LEXP ORD .)
    and             reduce using rule 207 (ORDER -> order by LEXP ORD .)
    or              reduce using rule 207 (ORDER -> order by LEXP ORD .)
    mayor           reduce using rule 207 (ORDER -> order by LEXP ORD .)
    menor           reduce using rule 207 (ORDER -> order by LEXP ORD .)
    mayor_igual     reduce using rule 207 (ORDER -> order by LEXP ORD .)
    menor_igual     reduce using rule 207 (ORDER -> order by LEXP ORD .)
    igual           reduce using rule 207 (ORDER -> order by LEXP ORD .)
    diferente1      reduce using rule 207 (ORDER -> order by LEXP ORD .)
    diferente2      reduce using rule 207 (ORDER -> order by LEXP ORD .)
    between         reduce using rule 207 (ORDER -> order by LEXP ORD .)
    is              reduce using rule 207 (ORDER -> order by LEXP ORD .)
    isnull          reduce using rule 207 (ORDER -> order by LEXP ORD .)
    notnull         reduce using rule 207 (ORDER -> order by LEXP ORD .)
    as              reduce using rule 207 (ORDER -> order by LEXP ORD .)
    cadenaString    reduce using rule 207 (ORDER -> order by LEXP ORD .)
    id              reduce using rule 207 (ORDER -> order by LEXP ORD .)
    cadena          reduce using rule 207 (ORDER -> order by LEXP ORD .)
    in              reduce using rule 207 (ORDER -> order by LEXP ORD .)
    not             reduce using rule 207 (ORDER -> order by LEXP ORD .)
    like            reduce using rule 207 (ORDER -> order by LEXP ORD .)
    then            reduce using rule 207 (ORDER -> order by LEXP ORD .)
    when            reduce using rule 207 (ORDER -> order by LEXP ORD .)
    parc            reduce using rule 207 (ORDER -> order by LEXP ORD .)
    end             reduce using rule 207 (ORDER -> order by LEXP ORD .)
    else            reduce using rule 207 (ORDER -> order by LEXP ORD .)
    constraint      reduce using rule 207 (ORDER -> order by LEXP ORD .)
    unique          reduce using rule 207 (ORDER -> order by LEXP ORD .)
    check           reduce using rule 207 (ORDER -> order by LEXP ORD .)
    default         reduce using rule 207 (ORDER -> order by LEXP ORD .)
    null            reduce using rule 207 (ORDER -> order by LEXP ORD .)
    primary         reduce using rule 207 (ORDER -> order by LEXP ORD .)
    references      reduce using rule 207 (ORDER -> order by LEXP ORD .)
    asc             reduce using rule 207 (ORDER -> order by LEXP ORD .)
    desc            reduce using rule 207 (ORDER -> order by LEXP ORD .)


state 751

    (210) ORD -> asc .

    r_from          reduce using rule 210 (ORD -> asc .)
    coma            reduce using rule 210 (ORD -> asc .)
    where           reduce using rule 210 (ORD -> asc .)
    group           reduce using rule 210 (ORD -> asc .)
    having          reduce using rule 210 (ORD -> asc .)
    union           reduce using rule 210 (ORD -> asc .)
    intersect       reduce using rule 210 (ORD -> asc .)
    except          reduce using rule 210 (ORD -> asc .)
    order           reduce using rule 210 (ORD -> asc .)
    limit           reduce using rule 210 (ORD -> asc .)
    offset          reduce using rule 210 (ORD -> asc .)
    ptcoma          reduce using rule 210 (ORD -> asc .)
    mas             reduce using rule 210 (ORD -> asc .)
    menos           reduce using rule 210 (ORD -> asc .)
    multiplicacion  reduce using rule 210 (ORD -> asc .)
    division        reduce using rule 210 (ORD -> asc .)
    modulo          reduce using rule 210 (ORD -> asc .)
    elevado         reduce using rule 210 (ORD -> asc .)
    and             reduce using rule 210 (ORD -> asc .)
    or              reduce using rule 210 (ORD -> asc .)
    mayor           reduce using rule 210 (ORD -> asc .)
    menor           reduce using rule 210 (ORD -> asc .)
    mayor_igual     reduce using rule 210 (ORD -> asc .)
    menor_igual     reduce using rule 210 (ORD -> asc .)
    igual           reduce using rule 210 (ORD -> asc .)
    diferente1      reduce using rule 210 (ORD -> asc .)
    diferente2      reduce using rule 210 (ORD -> asc .)
    between         reduce using rule 210 (ORD -> asc .)
    is              reduce using rule 210 (ORD -> asc .)
    isnull          reduce using rule 210 (ORD -> asc .)
    notnull         reduce using rule 210 (ORD -> asc .)
    as              reduce using rule 210 (ORD -> asc .)
    cadenaString    reduce using rule 210 (ORD -> asc .)
    id              reduce using rule 210 (ORD -> asc .)
    cadena          reduce using rule 210 (ORD -> asc .)
    in              reduce using rule 210 (ORD -> asc .)
    not             reduce using rule 210 (ORD -> asc .)
    like            reduce using rule 210 (ORD -> asc .)
    then            reduce using rule 210 (ORD -> asc .)
    when            reduce using rule 210 (ORD -> asc .)
    parc            reduce using rule 210 (ORD -> asc .)
    end             reduce using rule 210 (ORD -> asc .)
    else            reduce using rule 210 (ORD -> asc .)
    constraint      reduce using rule 210 (ORD -> asc .)
    unique          reduce using rule 210 (ORD -> asc .)
    check           reduce using rule 210 (ORD -> asc .)
    default         reduce using rule 210 (ORD -> asc .)
    null            reduce using rule 210 (ORD -> asc .)
    primary         reduce using rule 210 (ORD -> asc .)
    references      reduce using rule 210 (ORD -> asc .)
    asc             reduce using rule 210 (ORD -> asc .)
    desc            reduce using rule 210 (ORD -> asc .)


state 752

    (211) ORD -> desc .

    r_from          reduce using rule 211 (ORD -> desc .)
    coma            reduce using rule 211 (ORD -> desc .)
    where           reduce using rule 211 (ORD -> desc .)
    group           reduce using rule 211 (ORD -> desc .)
    having          reduce using rule 211 (ORD -> desc .)
    union           reduce using rule 211 (ORD -> desc .)
    intersect       reduce using rule 211 (ORD -> desc .)
    except          reduce using rule 211 (ORD -> desc .)
    order           reduce using rule 211 (ORD -> desc .)
    limit           reduce using rule 211 (ORD -> desc .)
    offset          reduce using rule 211 (ORD -> desc .)
    ptcoma          reduce using rule 211 (ORD -> desc .)
    mas             reduce using rule 211 (ORD -> desc .)
    menos           reduce using rule 211 (ORD -> desc .)
    multiplicacion  reduce using rule 211 (ORD -> desc .)
    division        reduce using rule 211 (ORD -> desc .)
    modulo          reduce using rule 211 (ORD -> desc .)
    elevado         reduce using rule 211 (ORD -> desc .)
    and             reduce using rule 211 (ORD -> desc .)
    or              reduce using rule 211 (ORD -> desc .)
    mayor           reduce using rule 211 (ORD -> desc .)
    menor           reduce using rule 211 (ORD -> desc .)
    mayor_igual     reduce using rule 211 (ORD -> desc .)
    menor_igual     reduce using rule 211 (ORD -> desc .)
    igual           reduce using rule 211 (ORD -> desc .)
    diferente1      reduce using rule 211 (ORD -> desc .)
    diferente2      reduce using rule 211 (ORD -> desc .)
    between         reduce using rule 211 (ORD -> desc .)
    is              reduce using rule 211 (ORD -> desc .)
    isnull          reduce using rule 211 (ORD -> desc .)
    notnull         reduce using rule 211 (ORD -> desc .)
    as              reduce using rule 211 (ORD -> desc .)
    cadenaString    reduce using rule 211 (ORD -> desc .)
    id              reduce using rule 211 (ORD -> desc .)
    cadena          reduce using rule 211 (ORD -> desc .)
    in              reduce using rule 211 (ORD -> desc .)
    not             reduce using rule 211 (ORD -> desc .)
    like            reduce using rule 211 (ORD -> desc .)
    then            reduce using rule 211 (ORD -> desc .)
    when            reduce using rule 211 (ORD -> desc .)
    parc            reduce using rule 211 (ORD -> desc .)
    end             reduce using rule 211 (ORD -> desc .)
    else            reduce using rule 211 (ORD -> desc .)
    constraint      reduce using rule 211 (ORD -> desc .)
    unique          reduce using rule 211 (ORD -> desc .)
    check           reduce using rule 211 (ORD -> desc .)
    default         reduce using rule 211 (ORD -> desc .)
    null            reduce using rule 211 (ORD -> desc .)
    primary         reduce using rule 211 (ORD -> desc .)
    references      reduce using rule 211 (ORD -> desc .)
    asc             reduce using rule 211 (ORD -> desc .)
    desc            reduce using rule 211 (ORD -> desc .)


state 753

    (164) OPCOLUMN -> constraint id check para . CONDCHECK parc
    (175) CONDCHECK -> . EXP mayor EXP
    (176) CONDCHECK -> . EXP menor EXP
    (177) CONDCHECK -> . EXP mayor_igual EXP
    (178) CONDCHECK -> . EXP menor_igual EXP
    (179) CONDCHECK -> . EXP igual EXP
    (180) CONDCHECK -> . EXP diferente1 EXP
    (181) CONDCHECK -> . EXP diferente2 EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    CONDCHECK                      shift and go to state 778
    EXP                            shift and go to state 587
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 754

    (165) OPCOLUMN -> check para CONDCHECK parc .

    constraint      reduce using rule 165 (OPCOLUMN -> check para CONDCHECK parc .)
    unique          reduce using rule 165 (OPCOLUMN -> check para CONDCHECK parc .)
    check           reduce using rule 165 (OPCOLUMN -> check para CONDCHECK parc .)
    default         reduce using rule 165 (OPCOLUMN -> check para CONDCHECK parc .)
    not             reduce using rule 165 (OPCOLUMN -> check para CONDCHECK parc .)
    null            reduce using rule 165 (OPCOLUMN -> check para CONDCHECK parc .)
    primary         reduce using rule 165 (OPCOLUMN -> check para CONDCHECK parc .)
    references      reduce using rule 165 (OPCOLUMN -> check para CONDCHECK parc .)
    parc            reduce using rule 165 (OPCOLUMN -> check para CONDCHECK parc .)
    coma            reduce using rule 165 (OPCOLUMN -> check para CONDCHECK parc .)


state 755

    (182) HERENCIA -> inherits para id parc .

    ptcoma          reduce using rule 182 (HERENCIA -> inherits para id parc .)


state 756

    (172) OPCONST -> foreign key para LEXP parc references . id para LEXP parc

    id              shift and go to state 779


state 757

    (49) CREATEINDEX -> create index id on id para id id ORDEN parc .

    ptcoma          reduce using rule 49 (CREATEINDEX -> create index id on id para id id ORDEN parc .)
    where           reduce using rule 49 (CREATEINDEX -> create index id on id para id id ORDEN parc .)


state 758

    (54) ORDEN -> asc nulls first .

    parc            reduce using rule 54 (ORDEN -> asc nulls first .)


state 759

    (57) ORDEN -> asc nulls last .

    parc            reduce using rule 57 (ORDEN -> asc nulls last .)


state 760

    (55) ORDEN -> desc nulls last .

    parc            reduce using rule 55 (ORDEN -> desc nulls last .)


state 761

    (56) ORDEN -> desc nulls first .

    parc            reduce using rule 56 (ORDEN -> desc nulls first .)


state 762

    (47) CREATEINDEX -> create index id on id using hash para LEXP parc .

    ptcoma          reduce using rule 47 (CREATEINDEX -> create index id on id using hash para LEXP parc .)
    where           reduce using rule 47 (CREATEINDEX -> create index id on id using hash para LEXP parc .)


state 763

    (43) LENGUAJE -> dolarn language plpgsql ptcoma .

    as              reduce using rule 43 (LENGUAJE -> dolarn language plpgsql ptcoma .)
    do              reduce using rule 43 (LENGUAJE -> dolarn language plpgsql ptcoma .)
    id              reduce using rule 43 (LENGUAJE -> dolarn language plpgsql ptcoma .)
    if              reduce using rule 43 (LENGUAJE -> dolarn language plpgsql ptcoma .)
    raise           reduce using rule 43 (LENGUAJE -> dolarn language plpgsql ptcoma .)
    begin           reduce using rule 43 (LENGUAJE -> dolarn language plpgsql ptcoma .)
    call            reduce using rule 43 (LENGUAJE -> dolarn language plpgsql ptcoma .)
    return          reduce using rule 43 (LENGUAJE -> dolarn language plpgsql ptcoma .)
    case            reduce using rule 43 (LENGUAJE -> dolarn language plpgsql ptcoma .)
    use             reduce using rule 43 (LENGUAJE -> dolarn language plpgsql ptcoma .)
    select          reduce using rule 43 (LENGUAJE -> dolarn language plpgsql ptcoma .)
    create          reduce using rule 43 (LENGUAJE -> dolarn language plpgsql ptcoma .)
    update          reduce using rule 43 (LENGUAJE -> dolarn language plpgsql ptcoma .)
    delete          reduce using rule 43 (LENGUAJE -> dolarn language plpgsql ptcoma .)
    alter           reduce using rule 43 (LENGUAJE -> dolarn language plpgsql ptcoma .)
    drop            reduce using rule 43 (LENGUAJE -> dolarn language plpgsql ptcoma .)
    insert          reduce using rule 43 (LENGUAJE -> dolarn language plpgsql ptcoma .)
    show            reduce using rule 43 (LENGUAJE -> dolarn language plpgsql ptcoma .)
    $end            reduce using rule 43 (LENGUAJE -> dolarn language plpgsql ptcoma .)


state 764

    (34) CONTENIDOP -> as dolarn LISTACONTENIDO dolarn . ptcoma

    ptcoma          shift and go to state 780


state 765

    (35) CONTENIDOP -> do dolarn LISTACONTENIDO dolarn . ptcoma

    ptcoma          shift and go to state 781


state 766

    (28) RETURNP -> returns TIPO as dolarn .

    language        reduce using rule 28 (RETURNP -> returns TIPO as dolarn .)
    dolarn          reduce using rule 28 (RETURNP -> returns TIPO as dolarn .)
    as              reduce using rule 28 (RETURNP -> returns TIPO as dolarn .)
    do              reduce using rule 28 (RETURNP -> returns TIPO as dolarn .)
    id              reduce using rule 28 (RETURNP -> returns TIPO as dolarn .)
    if              reduce using rule 28 (RETURNP -> returns TIPO as dolarn .)
    raise           reduce using rule 28 (RETURNP -> returns TIPO as dolarn .)
    begin           reduce using rule 28 (RETURNP -> returns TIPO as dolarn .)
    call            reduce using rule 28 (RETURNP -> returns TIPO as dolarn .)
    return          reduce using rule 28 (RETURNP -> returns TIPO as dolarn .)
    case            reduce using rule 28 (RETURNP -> returns TIPO as dolarn .)


state 767

    (120) OP -> add constraint id check para CONDCHECK parc .

    coma            reduce using rule 120 (OP -> add constraint id check para CONDCHECK parc .)
    ptcoma          reduce using rule 120 (OP -> add constraint id check para CONDCHECK parc .)


state 768

    (121) OP -> add constraint id unique para LEXP parc .

    coma            reduce using rule 121 (OP -> add constraint id unique para LEXP parc .)
    ptcoma          reduce using rule 121 (OP -> add constraint id unique para LEXP parc .)


state 769

    (124) OP -> add constraint id foreign key para LEXP . parc references id para LEXP parc
    (218) LEXP -> LEXP . coma EXP

    parc            shift and go to state 782
    coma            shift and go to state 164


state 770

    (123) OP -> add foreign key para LEXP parc references . id para LEXP parc

    id              shift and go to state 783


state 771

    (101) FORMAT -> format para EXP coma LEXP . parc
    (218) LEXP -> LEXP . coma EXP

    parc            shift and go to state 784
    coma            shift and go to state 164


state 772

    (108) INSERT -> insert into id para LEXP parc values para LEXP parc .

    ptcoma          reduce using rule 108 (INSERT -> insert into id para LEXP parc values para LEXP parc .)


state 773

    (184) SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .

    ptcoma          reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    r_from          reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    coma            reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    where           reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    group           reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    having          reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    union           reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    intersect       reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    except          reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    order           reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    limit           reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    offset          reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mas             reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menos           reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    multiplicacion  reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    division        reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    modulo          reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    elevado         reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    and             reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    or              reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor           reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor           reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    mayor_igual     reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    menor_igual     reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    igual           reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente1      reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    diferente2      reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    between         reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    is              reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    isnull          reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    notnull         reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    as              reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadenaString    reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    id              reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    cadena          reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    in              reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    not             reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    like            reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    then            reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    when            reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    parc            reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    end             reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    else            reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    constraint      reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    unique          reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    check           reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    default         reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    null            reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    primary         reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    references      reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    asc             reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)
    desc            reduce using rule 184 (SELECT -> select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT .)


state 774

    (190) LIMIT -> limit int offset int .

    ptcoma          reduce using rule 190 (LIMIT -> limit int offset int .)
    r_from          reduce using rule 190 (LIMIT -> limit int offset int .)
    coma            reduce using rule 190 (LIMIT -> limit int offset int .)
    where           reduce using rule 190 (LIMIT -> limit int offset int .)
    group           reduce using rule 190 (LIMIT -> limit int offset int .)
    having          reduce using rule 190 (LIMIT -> limit int offset int .)
    union           reduce using rule 190 (LIMIT -> limit int offset int .)
    intersect       reduce using rule 190 (LIMIT -> limit int offset int .)
    except          reduce using rule 190 (LIMIT -> limit int offset int .)
    order           reduce using rule 190 (LIMIT -> limit int offset int .)
    limit           reduce using rule 190 (LIMIT -> limit int offset int .)
    offset          reduce using rule 190 (LIMIT -> limit int offset int .)
    mas             reduce using rule 190 (LIMIT -> limit int offset int .)
    menos           reduce using rule 190 (LIMIT -> limit int offset int .)
    multiplicacion  reduce using rule 190 (LIMIT -> limit int offset int .)
    division        reduce using rule 190 (LIMIT -> limit int offset int .)
    modulo          reduce using rule 190 (LIMIT -> limit int offset int .)
    elevado         reduce using rule 190 (LIMIT -> limit int offset int .)
    and             reduce using rule 190 (LIMIT -> limit int offset int .)
    or              reduce using rule 190 (LIMIT -> limit int offset int .)
    mayor           reduce using rule 190 (LIMIT -> limit int offset int .)
    menor           reduce using rule 190 (LIMIT -> limit int offset int .)
    mayor_igual     reduce using rule 190 (LIMIT -> limit int offset int .)
    menor_igual     reduce using rule 190 (LIMIT -> limit int offset int .)
    igual           reduce using rule 190 (LIMIT -> limit int offset int .)
    diferente1      reduce using rule 190 (LIMIT -> limit int offset int .)
    diferente2      reduce using rule 190 (LIMIT -> limit int offset int .)
    between         reduce using rule 190 (LIMIT -> limit int offset int .)
    is              reduce using rule 190 (LIMIT -> limit int offset int .)
    isnull          reduce using rule 190 (LIMIT -> limit int offset int .)
    notnull         reduce using rule 190 (LIMIT -> limit int offset int .)
    as              reduce using rule 190 (LIMIT -> limit int offset int .)
    cadenaString    reduce using rule 190 (LIMIT -> limit int offset int .)
    id              reduce using rule 190 (LIMIT -> limit int offset int .)
    cadena          reduce using rule 190 (LIMIT -> limit int offset int .)
    in              reduce using rule 190 (LIMIT -> limit int offset int .)
    not             reduce using rule 190 (LIMIT -> limit int offset int .)
    like            reduce using rule 190 (LIMIT -> limit int offset int .)
    then            reduce using rule 190 (LIMIT -> limit int offset int .)
    when            reduce using rule 190 (LIMIT -> limit int offset int .)
    parc            reduce using rule 190 (LIMIT -> limit int offset int .)
    end             reduce using rule 190 (LIMIT -> limit int offset int .)
    else            reduce using rule 190 (LIMIT -> limit int offset int .)
    constraint      reduce using rule 190 (LIMIT -> limit int offset int .)
    unique          reduce using rule 190 (LIMIT -> limit int offset int .)
    check           reduce using rule 190 (LIMIT -> limit int offset int .)
    default         reduce using rule 190 (LIMIT -> limit int offset int .)
    null            reduce using rule 190 (LIMIT -> limit int offset int .)
    primary         reduce using rule 190 (LIMIT -> limit int offset int .)
    references      reduce using rule 190 (LIMIT -> limit int offset int .)
    asc             reduce using rule 190 (LIMIT -> limit int offset int .)
    desc            reduce using rule 190 (LIMIT -> limit int offset int .)


state 775

    (192) LIMIT -> limit all offset int .

    ptcoma          reduce using rule 192 (LIMIT -> limit all offset int .)
    r_from          reduce using rule 192 (LIMIT -> limit all offset int .)
    coma            reduce using rule 192 (LIMIT -> limit all offset int .)
    where           reduce using rule 192 (LIMIT -> limit all offset int .)
    group           reduce using rule 192 (LIMIT -> limit all offset int .)
    having          reduce using rule 192 (LIMIT -> limit all offset int .)
    union           reduce using rule 192 (LIMIT -> limit all offset int .)
    intersect       reduce using rule 192 (LIMIT -> limit all offset int .)
    except          reduce using rule 192 (LIMIT -> limit all offset int .)
    order           reduce using rule 192 (LIMIT -> limit all offset int .)
    limit           reduce using rule 192 (LIMIT -> limit all offset int .)
    offset          reduce using rule 192 (LIMIT -> limit all offset int .)
    mas             reduce using rule 192 (LIMIT -> limit all offset int .)
    menos           reduce using rule 192 (LIMIT -> limit all offset int .)
    multiplicacion  reduce using rule 192 (LIMIT -> limit all offset int .)
    division        reduce using rule 192 (LIMIT -> limit all offset int .)
    modulo          reduce using rule 192 (LIMIT -> limit all offset int .)
    elevado         reduce using rule 192 (LIMIT -> limit all offset int .)
    and             reduce using rule 192 (LIMIT -> limit all offset int .)
    or              reduce using rule 192 (LIMIT -> limit all offset int .)
    mayor           reduce using rule 192 (LIMIT -> limit all offset int .)
    menor           reduce using rule 192 (LIMIT -> limit all offset int .)
    mayor_igual     reduce using rule 192 (LIMIT -> limit all offset int .)
    menor_igual     reduce using rule 192 (LIMIT -> limit all offset int .)
    igual           reduce using rule 192 (LIMIT -> limit all offset int .)
    diferente1      reduce using rule 192 (LIMIT -> limit all offset int .)
    diferente2      reduce using rule 192 (LIMIT -> limit all offset int .)
    between         reduce using rule 192 (LIMIT -> limit all offset int .)
    is              reduce using rule 192 (LIMIT -> limit all offset int .)
    isnull          reduce using rule 192 (LIMIT -> limit all offset int .)
    notnull         reduce using rule 192 (LIMIT -> limit all offset int .)
    as              reduce using rule 192 (LIMIT -> limit all offset int .)
    cadenaString    reduce using rule 192 (LIMIT -> limit all offset int .)
    id              reduce using rule 192 (LIMIT -> limit all offset int .)
    cadena          reduce using rule 192 (LIMIT -> limit all offset int .)
    in              reduce using rule 192 (LIMIT -> limit all offset int .)
    not             reduce using rule 192 (LIMIT -> limit all offset int .)
    like            reduce using rule 192 (LIMIT -> limit all offset int .)
    then            reduce using rule 192 (LIMIT -> limit all offset int .)
    when            reduce using rule 192 (LIMIT -> limit all offset int .)
    parc            reduce using rule 192 (LIMIT -> limit all offset int .)
    end             reduce using rule 192 (LIMIT -> limit all offset int .)
    else            reduce using rule 192 (LIMIT -> limit all offset int .)
    constraint      reduce using rule 192 (LIMIT -> limit all offset int .)
    unique          reduce using rule 192 (LIMIT -> limit all offset int .)
    check           reduce using rule 192 (LIMIT -> limit all offset int .)
    default         reduce using rule 192 (LIMIT -> limit all offset int .)
    null            reduce using rule 192 (LIMIT -> limit all offset int .)
    primary         reduce using rule 192 (LIMIT -> limit all offset int .)
    references      reduce using rule 192 (LIMIT -> limit all offset int .)
    asc             reduce using rule 192 (LIMIT -> limit all offset int .)
    desc            reduce using rule 192 (LIMIT -> limit all offset int .)


state 776

    (191) LIMIT -> offset int limit int .

    ptcoma          reduce using rule 191 (LIMIT -> offset int limit int .)
    r_from          reduce using rule 191 (LIMIT -> offset int limit int .)
    coma            reduce using rule 191 (LIMIT -> offset int limit int .)
    where           reduce using rule 191 (LIMIT -> offset int limit int .)
    group           reduce using rule 191 (LIMIT -> offset int limit int .)
    having          reduce using rule 191 (LIMIT -> offset int limit int .)
    union           reduce using rule 191 (LIMIT -> offset int limit int .)
    intersect       reduce using rule 191 (LIMIT -> offset int limit int .)
    except          reduce using rule 191 (LIMIT -> offset int limit int .)
    order           reduce using rule 191 (LIMIT -> offset int limit int .)
    limit           reduce using rule 191 (LIMIT -> offset int limit int .)
    offset          reduce using rule 191 (LIMIT -> offset int limit int .)
    mas             reduce using rule 191 (LIMIT -> offset int limit int .)
    menos           reduce using rule 191 (LIMIT -> offset int limit int .)
    multiplicacion  reduce using rule 191 (LIMIT -> offset int limit int .)
    division        reduce using rule 191 (LIMIT -> offset int limit int .)
    modulo          reduce using rule 191 (LIMIT -> offset int limit int .)
    elevado         reduce using rule 191 (LIMIT -> offset int limit int .)
    and             reduce using rule 191 (LIMIT -> offset int limit int .)
    or              reduce using rule 191 (LIMIT -> offset int limit int .)
    mayor           reduce using rule 191 (LIMIT -> offset int limit int .)
    menor           reduce using rule 191 (LIMIT -> offset int limit int .)
    mayor_igual     reduce using rule 191 (LIMIT -> offset int limit int .)
    menor_igual     reduce using rule 191 (LIMIT -> offset int limit int .)
    igual           reduce using rule 191 (LIMIT -> offset int limit int .)
    diferente1      reduce using rule 191 (LIMIT -> offset int limit int .)
    diferente2      reduce using rule 191 (LIMIT -> offset int limit int .)
    between         reduce using rule 191 (LIMIT -> offset int limit int .)
    is              reduce using rule 191 (LIMIT -> offset int limit int .)
    isnull          reduce using rule 191 (LIMIT -> offset int limit int .)
    notnull         reduce using rule 191 (LIMIT -> offset int limit int .)
    as              reduce using rule 191 (LIMIT -> offset int limit int .)
    cadenaString    reduce using rule 191 (LIMIT -> offset int limit int .)
    id              reduce using rule 191 (LIMIT -> offset int limit int .)
    cadena          reduce using rule 191 (LIMIT -> offset int limit int .)
    in              reduce using rule 191 (LIMIT -> offset int limit int .)
    not             reduce using rule 191 (LIMIT -> offset int limit int .)
    like            reduce using rule 191 (LIMIT -> offset int limit int .)
    then            reduce using rule 191 (LIMIT -> offset int limit int .)
    when            reduce using rule 191 (LIMIT -> offset int limit int .)
    parc            reduce using rule 191 (LIMIT -> offset int limit int .)
    end             reduce using rule 191 (LIMIT -> offset int limit int .)
    else            reduce using rule 191 (LIMIT -> offset int limit int .)
    constraint      reduce using rule 191 (LIMIT -> offset int limit int .)
    unique          reduce using rule 191 (LIMIT -> offset int limit int .)
    check           reduce using rule 191 (LIMIT -> offset int limit int .)
    default         reduce using rule 191 (LIMIT -> offset int limit int .)
    null            reduce using rule 191 (LIMIT -> offset int limit int .)
    primary         reduce using rule 191 (LIMIT -> offset int limit int .)
    references      reduce using rule 191 (LIMIT -> offset int limit int .)
    asc             reduce using rule 191 (LIMIT -> offset int limit int .)
    desc            reduce using rule 191 (LIMIT -> offset int limit int .)


state 777

    (193) LIMIT -> offset int limit all .

    ptcoma          reduce using rule 193 (LIMIT -> offset int limit all .)
    r_from          reduce using rule 193 (LIMIT -> offset int limit all .)
    coma            reduce using rule 193 (LIMIT -> offset int limit all .)
    where           reduce using rule 193 (LIMIT -> offset int limit all .)
    group           reduce using rule 193 (LIMIT -> offset int limit all .)
    having          reduce using rule 193 (LIMIT -> offset int limit all .)
    union           reduce using rule 193 (LIMIT -> offset int limit all .)
    intersect       reduce using rule 193 (LIMIT -> offset int limit all .)
    except          reduce using rule 193 (LIMIT -> offset int limit all .)
    order           reduce using rule 193 (LIMIT -> offset int limit all .)
    limit           reduce using rule 193 (LIMIT -> offset int limit all .)
    offset          reduce using rule 193 (LIMIT -> offset int limit all .)
    mas             reduce using rule 193 (LIMIT -> offset int limit all .)
    menos           reduce using rule 193 (LIMIT -> offset int limit all .)
    multiplicacion  reduce using rule 193 (LIMIT -> offset int limit all .)
    division        reduce using rule 193 (LIMIT -> offset int limit all .)
    modulo          reduce using rule 193 (LIMIT -> offset int limit all .)
    elevado         reduce using rule 193 (LIMIT -> offset int limit all .)
    and             reduce using rule 193 (LIMIT -> offset int limit all .)
    or              reduce using rule 193 (LIMIT -> offset int limit all .)
    mayor           reduce using rule 193 (LIMIT -> offset int limit all .)
    menor           reduce using rule 193 (LIMIT -> offset int limit all .)
    mayor_igual     reduce using rule 193 (LIMIT -> offset int limit all .)
    menor_igual     reduce using rule 193 (LIMIT -> offset int limit all .)
    igual           reduce using rule 193 (LIMIT -> offset int limit all .)
    diferente1      reduce using rule 193 (LIMIT -> offset int limit all .)
    diferente2      reduce using rule 193 (LIMIT -> offset int limit all .)
    between         reduce using rule 193 (LIMIT -> offset int limit all .)
    is              reduce using rule 193 (LIMIT -> offset int limit all .)
    isnull          reduce using rule 193 (LIMIT -> offset int limit all .)
    notnull         reduce using rule 193 (LIMIT -> offset int limit all .)
    as              reduce using rule 193 (LIMIT -> offset int limit all .)
    cadenaString    reduce using rule 193 (LIMIT -> offset int limit all .)
    id              reduce using rule 193 (LIMIT -> offset int limit all .)
    cadena          reduce using rule 193 (LIMIT -> offset int limit all .)
    in              reduce using rule 193 (LIMIT -> offset int limit all .)
    not             reduce using rule 193 (LIMIT -> offset int limit all .)
    like            reduce using rule 193 (LIMIT -> offset int limit all .)
    then            reduce using rule 193 (LIMIT -> offset int limit all .)
    when            reduce using rule 193 (LIMIT -> offset int limit all .)
    parc            reduce using rule 193 (LIMIT -> offset int limit all .)
    end             reduce using rule 193 (LIMIT -> offset int limit all .)
    else            reduce using rule 193 (LIMIT -> offset int limit all .)
    constraint      reduce using rule 193 (LIMIT -> offset int limit all .)
    unique          reduce using rule 193 (LIMIT -> offset int limit all .)
    check           reduce using rule 193 (LIMIT -> offset int limit all .)
    default         reduce using rule 193 (LIMIT -> offset int limit all .)
    null            reduce using rule 193 (LIMIT -> offset int limit all .)
    primary         reduce using rule 193 (LIMIT -> offset int limit all .)
    references      reduce using rule 193 (LIMIT -> offset int limit all .)
    asc             reduce using rule 193 (LIMIT -> offset int limit all .)
    desc            reduce using rule 193 (LIMIT -> offset int limit all .)


state 778

    (164) OPCOLUMN -> constraint id check para CONDCHECK . parc

    parc            shift and go to state 785


state 779

    (172) OPCONST -> foreign key para LEXP parc references id . para LEXP parc

    para            shift and go to state 786


state 780

    (34) CONTENIDOP -> as dolarn LISTACONTENIDO dolarn ptcoma .

    language        reduce using rule 34 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn ptcoma .)
    dolarn          reduce using rule 34 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn ptcoma .)
    as              reduce using rule 34 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn ptcoma .)
    do              reduce using rule 34 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn ptcoma .)
    id              reduce using rule 34 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn ptcoma .)
    if              reduce using rule 34 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn ptcoma .)
    raise           reduce using rule 34 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn ptcoma .)
    begin           reduce using rule 34 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn ptcoma .)
    call            reduce using rule 34 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn ptcoma .)
    return          reduce using rule 34 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn ptcoma .)
    case            reduce using rule 34 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn ptcoma .)
    use             reduce using rule 34 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn ptcoma .)
    select          reduce using rule 34 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn ptcoma .)
    create          reduce using rule 34 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn ptcoma .)
    update          reduce using rule 34 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn ptcoma .)
    delete          reduce using rule 34 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn ptcoma .)
    alter           reduce using rule 34 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn ptcoma .)
    drop            reduce using rule 34 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn ptcoma .)
    insert          reduce using rule 34 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn ptcoma .)
    show            reduce using rule 34 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn ptcoma .)
    $end            reduce using rule 34 (CONTENIDOP -> as dolarn LISTACONTENIDO dolarn ptcoma .)


state 781

    (35) CONTENIDOP -> do dolarn LISTACONTENIDO dolarn ptcoma .

    language        reduce using rule 35 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn ptcoma .)
    dolarn          reduce using rule 35 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn ptcoma .)
    as              reduce using rule 35 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn ptcoma .)
    do              reduce using rule 35 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn ptcoma .)
    id              reduce using rule 35 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn ptcoma .)
    if              reduce using rule 35 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn ptcoma .)
    raise           reduce using rule 35 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn ptcoma .)
    begin           reduce using rule 35 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn ptcoma .)
    call            reduce using rule 35 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn ptcoma .)
    return          reduce using rule 35 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn ptcoma .)
    case            reduce using rule 35 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn ptcoma .)
    use             reduce using rule 35 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn ptcoma .)
    select          reduce using rule 35 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn ptcoma .)
    create          reduce using rule 35 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn ptcoma .)
    update          reduce using rule 35 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn ptcoma .)
    delete          reduce using rule 35 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn ptcoma .)
    alter           reduce using rule 35 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn ptcoma .)
    drop            reduce using rule 35 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn ptcoma .)
    insert          reduce using rule 35 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn ptcoma .)
    show            reduce using rule 35 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn ptcoma .)
    $end            reduce using rule 35 (CONTENIDOP -> do dolarn LISTACONTENIDO dolarn ptcoma .)


state 782

    (124) OP -> add constraint id foreign key para LEXP parc . references id para LEXP parc

    references      shift and go to state 787


state 783

    (123) OP -> add foreign key para LEXP parc references id . para LEXP parc

    para            shift and go to state 788


state 784

    (101) FORMAT -> format para EXP coma LEXP parc .

    ptcoma          reduce using rule 101 (FORMAT -> format para EXP coma LEXP parc .)


state 785

    (164) OPCOLUMN -> constraint id check para CONDCHECK parc .

    constraint      reduce using rule 164 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    unique          reduce using rule 164 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    check           reduce using rule 164 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    default         reduce using rule 164 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    not             reduce using rule 164 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    null            reduce using rule 164 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    primary         reduce using rule 164 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    references      reduce using rule 164 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    parc            reduce using rule 164 (OPCOLUMN -> constraint id check para CONDCHECK parc .)
    coma            reduce using rule 164 (OPCOLUMN -> constraint id check para CONDCHECK parc .)


state 786

    (172) OPCONST -> foreign key para LEXP parc references id para . LEXP parc
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 789
    EXP                            shift and go to state 79
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 787

    (124) OP -> add constraint id foreign key para LEXP parc references . id para LEXP parc

    id              shift and go to state 790


state 788

    (123) OP -> add foreign key para LEXP parc references id para . LEXP parc
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 791
    EXP                            shift and go to state 79
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 789

    (172) OPCONST -> foreign key para LEXP parc references id para LEXP . parc
    (218) LEXP -> LEXP . coma EXP

    parc            shift and go to state 792
    coma            shift and go to state 164


state 790

    (124) OP -> add constraint id foreign key para LEXP parc references id . para LEXP parc

    para            shift and go to state 793


state 791

    (123) OP -> add foreign key para LEXP parc references id para LEXP . parc
    (218) LEXP -> LEXP . coma EXP

    parc            shift and go to state 794
    coma            shift and go to state 164


state 792

    (172) OPCONST -> foreign key para LEXP parc references id para LEXP parc .

    parc            reduce using rule 172 (OPCONST -> foreign key para LEXP parc references id para LEXP parc .)
    coma            reduce using rule 172 (OPCONST -> foreign key para LEXP parc references id para LEXP parc .)


state 793

    (124) OP -> add constraint id foreign key para LEXP parc references id para . LEXP parc
    (218) LEXP -> . LEXP coma EXP
    (219) LEXP -> . EXP
    (267) EXP -> . EXP mas EXP
    (268) EXP -> . EXP menos EXP
    (269) EXP -> . EXP multiplicacion EXP
    (270) EXP -> . EXP division EXP
    (271) EXP -> . EXP modulo EXP
    (272) EXP -> . EXP elevado EXP
    (273) EXP -> . EXP and EXP
    (274) EXP -> . EXP or EXP
    (275) EXP -> . EXP mayor EXP
    (276) EXP -> . EXP menor EXP
    (277) EXP -> . EXP mayor_igual EXP
    (278) EXP -> . EXP menor_igual EXP
    (279) EXP -> . EXP igual EXP
    (280) EXP -> . EXP diferente1 EXP
    (281) EXP -> . EXP diferente2 EXP
    (282) EXP -> . EXP between EXP
    (283) EXP -> . EXP is not null
    (284) EXP -> . EXP is null
    (285) EXP -> . EXP isnull
    (286) EXP -> . EXP notnull
    (287) EXP -> . EXP is true
    (288) EXP -> . EXP is not true
    (289) EXP -> . EXP is false
    (290) EXP -> . EXP is not false
    (291) EXP -> . EXP is unknown
    (292) EXP -> . EXP is not unknown
    (293) EXP -> . EXP as cadenaString
    (294) EXP -> . EXP cadenaString
    (295) EXP -> . EXP as id
    (296) EXP -> . EXP id
    (297) EXP -> . EXP as cadena
    (298) EXP -> . EXP cadena
    (299) EXP -> . mas EXP
    (300) EXP -> . menos EXP
    (301) EXP -> . not EXP
    (302) EXP -> . EXP in para EXP parc
    (303) EXP -> . EXP not in para EXP parc
    (304) EXP -> . EXP not between EXP
    (305) EXP -> . EXP between symetric EXP
    (306) EXP -> . EXP not between symetric EXP
    (307) EXP -> . EXP is distinct r_from EXP
    (308) EXP -> . EXP is not distinct r_from EXP
    (309) EXP -> . EXP like cadena
    (310) EXP -> . EXP not like cadena
    (311) EXP -> . SELECT
    (312) EXP -> . para EXP parc
    (313) EXP -> . CASE
    (314) EXP -> . id para LEXP parc
    (315) EXP -> . id para parc
    (316) EXP -> . any para LEXP parc
    (317) EXP -> . all para LEXP parc
    (318) EXP -> . some para LEXP parc
    (319) EXP -> . extract para FIELDS r_from timestamp cadena parc
    (320) EXP -> . int
    (321) EXP -> . decimales
    (322) EXP -> . cadena
    (323) EXP -> . cadenaString
    (324) EXP -> . true
    (325) EXP -> . false
    (326) EXP -> . id
    (327) EXP -> . multiplicacion
    (328) EXP -> . null
    (329) EXP -> . current_time
    (330) EXP -> . current_date
    (331) EXP -> . timestamp cadena
    (332) EXP -> . interval cadena
    (333) EXP -> . cadena as TIPO
    (334) EXP -> . default
    (335) EXP -> . idPunto
    (184) SELECT -> . select distinct LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (185) SELECT -> . select LEXP r_from LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (186) SELECT -> . select LEXP WHERE GROUP HAVING COMBINING ORDER LIMIT
    (76) CASE -> . case LEXP LISTAWHEN ELSEF end case
    (77) CASE -> . case LEXP LISTAWHEN end case
    (78) CASE -> . case LISTAWHEN ELSE end
    (79) CASE -> . case LISTAWHEN end

    mas             shift and go to state 80
    menos           shift and go to state 81
    not             shift and go to state 83
    para            shift and go to state 90
    id              shift and go to state 88
    any             shift and go to state 93
    all             shift and go to state 94
    some            shift and go to state 95
    extract         shift and go to state 96
    int             shift and go to state 98
    decimales       shift and go to state 99
    cadena          shift and go to state 89
    cadenaString    shift and go to state 87
    true            shift and go to state 85
    false           shift and go to state 86
    multiplicacion  shift and go to state 82
    null            shift and go to state 84
    current_time    shift and go to state 100
    current_date    shift and go to state 101
    timestamp       shift and go to state 97
    interval        shift and go to state 102
    default         shift and go to state 103
    idPunto         shift and go to state 104
    select          shift and go to state 24
    case            shift and go to state 32

    LEXP                           shift and go to state 795
    EXP                            shift and go to state 79
    SELECT                         shift and go to state 91
    CASE                           shift and go to state 92

state 794

    (123) OP -> add foreign key para LEXP parc references id para LEXP parc .

    coma            reduce using rule 123 (OP -> add foreign key para LEXP parc references id para LEXP parc .)
    ptcoma          reduce using rule 123 (OP -> add foreign key para LEXP parc references id para LEXP parc .)


state 795

    (124) OP -> add constraint id foreign key para LEXP parc references id para LEXP . parc
    (218) LEXP -> LEXP . coma EXP

    parc            shift and go to state 796
    coma            shift and go to state 164


state 796

    (124) OP -> add constraint id foreign key para LEXP parc references id para LEXP parc .

    coma            reduce using rule 124 (OP -> add constraint id foreign key para LEXP parc references id para LEXP parc .)
    ptcoma          reduce using rule 124 (OP -> add constraint id foreign key para LEXP parc references id para LEXP parc .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ptcoma in state 18 resolved as shift
WARNING: shift/reduce conflict for modulo in state 46 resolved as shift
WARNING: shift/reduce conflict for cadena in state 51 resolved as shift
WARNING: shift/reduce conflict for r_from in state 78 resolved as shift
WARNING: shift/reduce conflict for coma in state 78 resolved as shift
WARNING: shift/reduce conflict for where in state 78 resolved as shift
WARNING: shift/reduce conflict for mas in state 79 resolved as shift
WARNING: shift/reduce conflict for menos in state 79 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 79 resolved as shift
WARNING: shift/reduce conflict for division in state 79 resolved as shift
WARNING: shift/reduce conflict for modulo in state 79 resolved as shift
WARNING: shift/reduce conflict for elevado in state 79 resolved as shift
WARNING: shift/reduce conflict for and in state 79 resolved as shift
WARNING: shift/reduce conflict for or in state 79 resolved as shift
WARNING: shift/reduce conflict for mayor in state 79 resolved as shift
WARNING: shift/reduce conflict for menor in state 79 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 79 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 79 resolved as shift
WARNING: shift/reduce conflict for igual in state 79 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 79 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 79 resolved as shift
WARNING: shift/reduce conflict for between in state 79 resolved as shift
WARNING: shift/reduce conflict for is in state 79 resolved as shift
WARNING: shift/reduce conflict for isnull in state 79 resolved as shift
WARNING: shift/reduce conflict for notnull in state 79 resolved as shift
WARNING: shift/reduce conflict for as in state 79 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 79 resolved as shift
WARNING: shift/reduce conflict for id in state 79 resolved as shift
WARNING: shift/reduce conflict for cadena in state 79 resolved as shift
WARNING: shift/reduce conflict for in in state 79 resolved as shift
WARNING: shift/reduce conflict for not in state 79 resolved as shift
WARNING: shift/reduce conflict for like in state 79 resolved as shift
WARNING: shift/reduce conflict for as in state 89 resolved as shift
WARNING: shift/reduce conflict for mas in state 157 resolved as shift
WARNING: shift/reduce conflict for menos in state 157 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 157 resolved as shift
WARNING: shift/reduce conflict for division in state 157 resolved as shift
WARNING: shift/reduce conflict for modulo in state 157 resolved as shift
WARNING: shift/reduce conflict for elevado in state 157 resolved as shift
WARNING: shift/reduce conflict for and in state 157 resolved as shift
WARNING: shift/reduce conflict for or in state 157 resolved as shift
WARNING: shift/reduce conflict for mayor in state 157 resolved as shift
WARNING: shift/reduce conflict for menor in state 157 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 157 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 157 resolved as shift
WARNING: shift/reduce conflict for igual in state 157 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 157 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 157 resolved as shift
WARNING: shift/reduce conflict for between in state 157 resolved as shift
WARNING: shift/reduce conflict for is in state 157 resolved as shift
WARNING: shift/reduce conflict for isnull in state 157 resolved as shift
WARNING: shift/reduce conflict for notnull in state 157 resolved as shift
WARNING: shift/reduce conflict for as in state 157 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 157 resolved as shift
WARNING: shift/reduce conflict for id in state 157 resolved as shift
WARNING: shift/reduce conflict for cadena in state 157 resolved as shift
WARNING: shift/reduce conflict for in in state 157 resolved as shift
WARNING: shift/reduce conflict for not in state 157 resolved as shift
WARNING: shift/reduce conflict for like in state 157 resolved as shift
WARNING: shift/reduce conflict for group in state 163 resolved as shift
WARNING: shift/reduce conflict for coma in state 255 resolved as shift
WARNING: shift/reduce conflict for where in state 255 resolved as shift
WARNING: shift/reduce conflict for having in state 256 resolved as shift
WARNING: shift/reduce conflict for mas in state 258 resolved as shift
WARNING: shift/reduce conflict for menos in state 258 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 258 resolved as shift
WARNING: shift/reduce conflict for division in state 258 resolved as shift
WARNING: shift/reduce conflict for modulo in state 258 resolved as shift
WARNING: shift/reduce conflict for elevado in state 258 resolved as shift
WARNING: shift/reduce conflict for and in state 258 resolved as shift
WARNING: shift/reduce conflict for or in state 258 resolved as shift
WARNING: shift/reduce conflict for mayor in state 258 resolved as shift
WARNING: shift/reduce conflict for menor in state 258 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 258 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 258 resolved as shift
WARNING: shift/reduce conflict for igual in state 258 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 258 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 258 resolved as shift
WARNING: shift/reduce conflict for between in state 258 resolved as shift
WARNING: shift/reduce conflict for is in state 258 resolved as shift
WARNING: shift/reduce conflict for isnull in state 258 resolved as shift
WARNING: shift/reduce conflict for notnull in state 258 resolved as shift
WARNING: shift/reduce conflict for as in state 258 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 258 resolved as shift
WARNING: shift/reduce conflict for id in state 258 resolved as shift
WARNING: shift/reduce conflict for cadena in state 258 resolved as shift
WARNING: shift/reduce conflict for in in state 258 resolved as shift
WARNING: shift/reduce conflict for not in state 258 resolved as shift
WARNING: shift/reduce conflict for like in state 258 resolved as shift
WARNING: shift/reduce conflict for cadena in state 358 resolved as shift
WARNING: shift/reduce conflict for coma in state 375 resolved as shift
WARNING: shift/reduce conflict for where in state 375 resolved as shift
WARNING: shift/reduce conflict for group in state 376 resolved as shift
WARNING: shift/reduce conflict for union in state 377 resolved as shift
WARNING: shift/reduce conflict for intersect in state 377 resolved as shift
WARNING: shift/reduce conflict for except in state 377 resolved as shift
WARNING: shift/reduce conflict for igual in state 470 resolved as shift
WARNING: shift/reduce conflict for id in state 470 resolved as shift
WARNING: shift/reduce conflict for group in state 483 resolved as shift
WARNING: shift/reduce conflict for having in state 484 resolved as shift
WARNING: shift/reduce conflict for order in state 485 resolved as shift
WARNING: shift/reduce conflict for mas in state 489 resolved as shift
WARNING: shift/reduce conflict for menos in state 489 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 489 resolved as shift
WARNING: shift/reduce conflict for division in state 489 resolved as shift
WARNING: shift/reduce conflict for modulo in state 489 resolved as shift
WARNING: shift/reduce conflict for elevado in state 489 resolved as shift
WARNING: shift/reduce conflict for and in state 489 resolved as shift
WARNING: shift/reduce conflict for or in state 489 resolved as shift
WARNING: shift/reduce conflict for mayor in state 489 resolved as shift
WARNING: shift/reduce conflict for menor in state 489 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 489 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 489 resolved as shift
WARNING: shift/reduce conflict for igual in state 489 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 489 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 489 resolved as shift
WARNING: shift/reduce conflict for between in state 489 resolved as shift
WARNING: shift/reduce conflict for is in state 489 resolved as shift
WARNING: shift/reduce conflict for isnull in state 489 resolved as shift
WARNING: shift/reduce conflict for notnull in state 489 resolved as shift
WARNING: shift/reduce conflict for as in state 489 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 489 resolved as shift
WARNING: shift/reduce conflict for id in state 489 resolved as shift
WARNING: shift/reduce conflict for cadena in state 489 resolved as shift
WARNING: shift/reduce conflict for in in state 489 resolved as shift
WARNING: shift/reduce conflict for not in state 489 resolved as shift
WARNING: shift/reduce conflict for like in state 489 resolved as shift
WARNING: shift/reduce conflict for coma in state 490 resolved as shift
WARNING: shift/reduce conflict for coma in state 531 resolved as shift
WARNING: shift/reduce conflict for as in state 542 resolved as shift
WARNING: shift/reduce conflict for having in state 557 resolved as shift
WARNING: shift/reduce conflict for union in state 558 resolved as shift
WARNING: shift/reduce conflict for intersect in state 558 resolved as shift
WARNING: shift/reduce conflict for except in state 558 resolved as shift
WARNING: shift/reduce conflict for limit in state 559 resolved as shift
WARNING: shift/reduce conflict for offset in state 559 resolved as shift
WARNING: shift/reduce conflict for mas in state 561 resolved as shift
WARNING: shift/reduce conflict for menos in state 561 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 561 resolved as shift
WARNING: shift/reduce conflict for division in state 561 resolved as shift
WARNING: shift/reduce conflict for modulo in state 561 resolved as shift
WARNING: shift/reduce conflict for elevado in state 561 resolved as shift
WARNING: shift/reduce conflict for and in state 561 resolved as shift
WARNING: shift/reduce conflict for or in state 561 resolved as shift
WARNING: shift/reduce conflict for mayor in state 561 resolved as shift
WARNING: shift/reduce conflict for menor in state 561 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 561 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 561 resolved as shift
WARNING: shift/reduce conflict for igual in state 561 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 561 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 561 resolved as shift
WARNING: shift/reduce conflict for between in state 561 resolved as shift
WARNING: shift/reduce conflict for is in state 561 resolved as shift
WARNING: shift/reduce conflict for isnull in state 561 resolved as shift
WARNING: shift/reduce conflict for notnull in state 561 resolved as shift
WARNING: shift/reduce conflict for as in state 561 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 561 resolved as shift
WARNING: shift/reduce conflict for id in state 561 resolved as shift
WARNING: shift/reduce conflict for cadena in state 561 resolved as shift
WARNING: shift/reduce conflict for in in state 561 resolved as shift
WARNING: shift/reduce conflict for not in state 561 resolved as shift
WARNING: shift/reduce conflict for like in state 561 resolved as shift
WARNING: shift/reduce conflict for mas in state 563 resolved as shift
WARNING: shift/reduce conflict for menos in state 563 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 563 resolved as shift
WARNING: shift/reduce conflict for division in state 563 resolved as shift
WARNING: shift/reduce conflict for modulo in state 563 resolved as shift
WARNING: shift/reduce conflict for elevado in state 563 resolved as shift
WARNING: shift/reduce conflict for and in state 563 resolved as shift
WARNING: shift/reduce conflict for or in state 563 resolved as shift
WARNING: shift/reduce conflict for mayor in state 563 resolved as shift
WARNING: shift/reduce conflict for menor in state 563 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 563 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 563 resolved as shift
WARNING: shift/reduce conflict for igual in state 563 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 563 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 563 resolved as shift
WARNING: shift/reduce conflict for between in state 563 resolved as shift
WARNING: shift/reduce conflict for is in state 563 resolved as shift
WARNING: shift/reduce conflict for isnull in state 563 resolved as shift
WARNING: shift/reduce conflict for notnull in state 563 resolved as shift
WARNING: shift/reduce conflict for as in state 563 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 563 resolved as shift
WARNING: shift/reduce conflict for id in state 563 resolved as shift
WARNING: shift/reduce conflict for cadena in state 563 resolved as shift
WARNING: shift/reduce conflict for in in state 563 resolved as shift
WARNING: shift/reduce conflict for not in state 563 resolved as shift
WARNING: shift/reduce conflict for like in state 563 resolved as shift
WARNING: shift/reduce conflict for mas in state 564 resolved as shift
WARNING: shift/reduce conflict for menos in state 564 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 564 resolved as shift
WARNING: shift/reduce conflict for division in state 564 resolved as shift
WARNING: shift/reduce conflict for modulo in state 564 resolved as shift
WARNING: shift/reduce conflict for elevado in state 564 resolved as shift
WARNING: shift/reduce conflict for and in state 564 resolved as shift
WARNING: shift/reduce conflict for or in state 564 resolved as shift
WARNING: shift/reduce conflict for mayor in state 564 resolved as shift
WARNING: shift/reduce conflict for menor in state 564 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 564 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 564 resolved as shift
WARNING: shift/reduce conflict for igual in state 564 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 564 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 564 resolved as shift
WARNING: shift/reduce conflict for between in state 564 resolved as shift
WARNING: shift/reduce conflict for is in state 564 resolved as shift
WARNING: shift/reduce conflict for isnull in state 564 resolved as shift
WARNING: shift/reduce conflict for notnull in state 564 resolved as shift
WARNING: shift/reduce conflict for as in state 564 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 564 resolved as shift
WARNING: shift/reduce conflict for id in state 564 resolved as shift
WARNING: shift/reduce conflict for cadena in state 564 resolved as shift
WARNING: shift/reduce conflict for in in state 564 resolved as shift
WARNING: shift/reduce conflict for not in state 564 resolved as shift
WARNING: shift/reduce conflict for like in state 564 resolved as shift
WARNING: shift/reduce conflict for id in state 590 resolved as shift
WARNING: shift/reduce conflict for id in state 600 resolved as shift
WARNING: shift/reduce conflict for if in state 600 resolved as shift
WARNING: shift/reduce conflict for raise in state 600 resolved as shift
WARNING: shift/reduce conflict for begin in state 600 resolved as shift
WARNING: shift/reduce conflict for call in state 600 resolved as shift
WARNING: shift/reduce conflict for return in state 600 resolved as shift
WARNING: shift/reduce conflict for case in state 600 resolved as shift
WARNING: shift/reduce conflict for union in state 633 resolved as shift
WARNING: shift/reduce conflict for intersect in state 633 resolved as shift
WARNING: shift/reduce conflict for except in state 633 resolved as shift
WARNING: shift/reduce conflict for order in state 634 resolved as shift
WARNING: shift/reduce conflict for mas in state 639 resolved as shift
WARNING: shift/reduce conflict for menos in state 639 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 639 resolved as shift
WARNING: shift/reduce conflict for division in state 639 resolved as shift
WARNING: shift/reduce conflict for modulo in state 639 resolved as shift
WARNING: shift/reduce conflict for elevado in state 639 resolved as shift
WARNING: shift/reduce conflict for and in state 639 resolved as shift
WARNING: shift/reduce conflict for or in state 639 resolved as shift
WARNING: shift/reduce conflict for mayor in state 639 resolved as shift
WARNING: shift/reduce conflict for menor in state 639 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 639 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 639 resolved as shift
WARNING: shift/reduce conflict for igual in state 639 resolved as shift
WARNING: shift/reduce conflict for diferente1 in state 639 resolved as shift
WARNING: shift/reduce conflict for diferente2 in state 639 resolved as shift
WARNING: shift/reduce conflict for between in state 639 resolved as shift
WARNING: shift/reduce conflict for is in state 639 resolved as shift
WARNING: shift/reduce conflict for isnull in state 639 resolved as shift
WARNING: shift/reduce conflict for notnull in state 639 resolved as shift
WARNING: shift/reduce conflict for as in state 639 resolved as shift
WARNING: shift/reduce conflict for cadenaString in state 639 resolved as shift
WARNING: shift/reduce conflict for id in state 639 resolved as shift
WARNING: shift/reduce conflict for cadena in state 639 resolved as shift
WARNING: shift/reduce conflict for in in state 639 resolved as shift
WARNING: shift/reduce conflict for not in state 639 resolved as shift
WARNING: shift/reduce conflict for like in state 639 resolved as shift
WARNING: shift/reduce conflict for not in state 645 resolved as shift
WARNING: shift/reduce conflict for id in state 671 resolved as shift
WARNING: shift/reduce conflict for if in state 671 resolved as shift
WARNING: shift/reduce conflict for case in state 671 resolved as shift
WARNING: shift/reduce conflict for order in state 702 resolved as shift
WARNING: shift/reduce conflict for limit in state 703 resolved as shift
WARNING: shift/reduce conflict for offset in state 703 resolved as shift
WARNING: shift/reduce conflict for offset in state 704 resolved as shift
WARNING: shift/reduce conflict for offset in state 705 resolved as shift
WARNING: shift/reduce conflict for limit in state 706 resolved as shift
WARNING: shift/reduce conflict for coma in state 707 resolved as shift
WARNING: shift/reduce conflict for asc in state 707 resolved as shift
WARNING: shift/reduce conflict for desc in state 707 resolved as shift
WARNING: shift/reduce conflict for parc in state 708 resolved as shift
WARNING: shift/reduce conflict for id in state 734 resolved as shift
WARNING: shift/reduce conflict for if in state 734 resolved as shift
WARNING: shift/reduce conflict for case in state 734 resolved as shift
WARNING: shift/reduce conflict for limit in state 745 resolved as shift
WARNING: shift/reduce conflict for offset in state 745 resolved as shift
WARNING: reduce/reduce conflict in state 590 resolved using rule (ORDEN -> <empty>)
WARNING: rejected rule (EXP -> id) in state 590
WARNING: reduce/reduce conflict in state 700 resolved using rule (RETURN -> return id para LEXP parc)
WARNING: rejected rule (EXP -> id para LEXP parc) in state 700
