drop all();
create database prueba;
create database prueba2;
create database prueba3;
create database wenas;

show databases;
use wenas;
create table tblibrosalario
( idempleado integer not null,
  aniocalculo integer not null CONSTRAINT aniosalario CHECK (aniocalculo > 0),
  mescalculo  integer not null CONSTRAINT mescalculo CHECK (mescalculo < 12),
  salariobase  money not null,
  comision     decimal,
  primary key(idempleado)
 );

create table tblibrosalariohis
( 
    idhistorico integer not null primary key,
    constraint ch1 CHECK (idhistorico >= 589.4)
) INHERITS (tblibrosalario);

 CREATE TABLE pruebita (
nombre_prueba VARCHAR (50) primary key,
numero integer,
salary real,
constraint uq unique(numero,salary) 
);

 CREATE TABLE employees (
first_name VARCHAR (50),
last_name VARCHAR (50) references pruebita,
salary  money ,
salard double precision,
constraint pk primary key (first_name, salary)
);


 CREATE TABLE pruebita2 (
nombre_prueba VARCHAR (50),
numero integer,
salary1 real, 
primary key (numero)
)inherits(employees);

 CREATE TABLE pruebita3 (
nombre_prueba VARCHAR (50),
numero integer,
salary real 
);

show tables(wenas);

insert into employees values ('juan','perez',20.4,20.4);
insert into employees values ('juan2','perez2',20.4,20.4);
insert into employees values ('juan3','perez3',20.4,20.4);

insert into pruebita values ('prueba1',32,63.41);
insert into pruebita values ('prueba2',33,63.44);
insert into pruebita values ('prueba3',42,67.34);

insert into pruebita2 values ('prueba1',32,63.41);
insert into pruebita2 values ('prueba2',33,63.44);
insert into pruebita2 values ('prueba3',42,67.34);

select * from employees,pruebita,pruebita2;


drop all();
create database prueba;
create database prueba2;
create database prueba3;
create database wenas;

show databases;
use wenas;
 CREATE TABLE employees (
first_name VARCHAR (50),
last_name VARCHAR (50),
salary  money ,
salard double precision 
);

 CREATE TABLE pruebita (
nombre_prueba VARCHAR (50),
numero integer,
salary real 
);

 CREATE TABLE pruebita2 (
nombre_prueba VARCHAR (50),
numero integer,
salary real 
);

 CREATE TABLE pruebita3 (
nombre_prueba VARCHAR (50),
numero integer,
salary real 
);

show tables(wenas);

insert into employees values ('juan','perez',10.4,20.4);
insert into employees values ('juan2','perez2',20.4,20.4);
insert into employees values ('juan3','perez3',30.4,20.4);
insert into employees values ('juan4','peresdz2',40.4,20.4);
insert into employees values ('juan5','perez3d',50.4,20.4);
insert into employees values ('juan6','perez2d',60.4,20.4);
insert into employees values ('juan7','perez334',70.4,20.4);

insert into pruebita values ('prueba1',32,63.41);
insert into pruebita values ('prueba2',33,63.44);
insert into pruebita values ('prueba3',42,67.34);

insert into pruebita2 values ('prueba1',32,63.41);
insert into pruebita2 values ('prueba2',33,63.44);
insert into pruebita2 values ('prueba3',42,67.34);

select * from employees where salary>40;
select * from employees where salary>salard;
select * from employees where salary=salard;


drop all();
create database prueba;
create database wenas;

show databases;
use wenas;
CREATE TABLE employees (
id integer,
first_name VARCHAR (50),
last_name VARCHAR (50),
salary  money,
codarea integer
);

 CREATE TABLE area (
codigo integer,
nombre VARCHAR (50) 
);

 

show tables(wenas);

insert into area values (1,'area1');
insert into area values (2,'area2');
insert into area values (3,'area3');

insert into employees values (1,'juan','perez',10.4,1);
insert into employees values (2,'juan2','perez2',20.4,1);
insert into employees values (3,'juan3','perez3',30.4,1);
insert into employees values (4,'juan4','peresdz2',40.4,2);
insert into employees values (5,'juan5','perez3d',50.4,2);
insert into employees values (6,'juan6','perez2d',60.4,2);
insert into employees values (7,'juan7','perez334',70.4,3);



select * from employees;
select * from employees where 40<salary;
select * from employees,area where codarea=1;
select * from employees,area where codarea=codigo;

-----------------------------------------------------------------------------------------------------

CREATE DATABASE DBFase2;

USE DBFase2;

CREATE FUNCTION myFuncion(texto text) RETURNS text AS $$
BEGIN
	RETURN texto;
END;
$$ LANGUAGE plpgsql;

select myFuncion('INICIO CALIFICACION FASE 2');

CREATE TABLE tbProducto (idproducto integer not null primary key,
  						 producto varchar(150) not null,
  						 fechacreacion date not null,
						 estado integer);

CREATE UNIQUE INDEX idx_producto ON tbProducto (idproducto);

CREATE TABLE tbCalificacion (idcalifica integer not null primary key,
							 item varchar(100) not null,
							 punteo integer not null);

CREATE UNIQUE INDEX idx_califica ON tbCalificacion (idcalifica);
CREATE INDEX idx2 on tbCalificacion (item desc nulls last);

alter INDEX if exists idx_califica alter column punteo;
						 
INSERT INTO tbProducto values(1,'Laptop Lenovo',now(),1);
INSERT INTO tbProducto values(2,'Bateria para Laptop Lenovo T420',now(),1);
INSERT INTO tbProducto values(3,'Teclado Inalambrico',now(),1);
INSERT INTO tbProducto values(4,'Mouse Inalambrico',now(),1);
INSERT INTO tbProducto values(5,'WIFI USB',now(),1);

CREATE FUNCTION ValidaRegistros(tabla varchar(50),cantidad integer) RETURNS int AS $$
DECLARE resultado INTEGER; 
		retorna   INTEGER;
BEGIN
	if tabla = 'tbProducto' then
	    resultado := (SELECT COUNT(*) FROM tbProducto);
    	if cantidad = resultado then
			retorna = 1;
		else 
			retorna = 0;
		end if;
	end if;
RETURN retorna;
END;
$$ LANGUAGE plpgsql;


insert into tbCalificacion values(1,'Create Table and Insert',ValidaRegistros('tbProducto',2));
																			  
select * from tbCalificacion;

------------------------------------------------------------------------------------------------------
CREATE DATABASE DBFase2;

USE DBFase2;

CREATE FUNCTION myFuncion(texto text) RETURNS text AS $$
BEGIN
	RETURN texto;
END;
$$ LANGUAGE plpgsql;

select myFuncion('INICIO CALIFICACION FASE 2');

CREATE TABLE tbProducto (idproducto integer not null primary key,
  						 producto varchar(150) not null,
  						 fechacreacion date not null,
						 estado integer);

CREATE UNIQUE INDEX idx_producto ON tbProducto (idproducto);

CREATE TABLE tbCalificacion (idcalifica integer not null primary key,
							 item varchar(100) not null,
							 punteo integer not null);

CREATE UNIQUE INDEX idx_califica ON tbCalificacion (idcalifica);
						 
INSERT INTO tbProducto values(1,'Laptop Lenovo',now(),1);
INSERT INTO tbProducto values(2,'Bateria para Laptop Lenovo T420',now(),1);
INSERT INTO tbProducto values(3,'Teclado Inalambrico',now(),1);
INSERT INTO tbProducto values(4,'Mouse Inalambrico',now(),1);
INSERT INTO tbProducto values(5,'WIFI USB',now(),1);

CREATE FUNCTION ValidaRegistros(tabla varchar(50),cantidad integer) RETURNS int AS $$
DECLARE resultado INTEGER; 
		retorna   INTEGER;
BEGIN
	if tabla = 'tbProducto' then
	    resultado := (SELECT COUNT(*) FROM tbProducto);
    	if cantidad = resultado then
			retorna = 1;
		else 
			retorna = 0;
		end if;
	end if;
RETURN retorna;
END;
$$ LANGUAGE plpgsql;


--insert into tbCalificacion values(1,'Create Table and Insert',ValidaRegistros('tbProducto',2));
																			  
select * from tbCalificacion;

CREATE INDEX test1_id_index ON test1 (id);
CREATE INDEX name ON nuevo USING HASH (nose);
CREATE INDEX test2_mm_idx ON test2 (major, minor);
CREATE INDEX test2_n_low ON test2 (nuevo NULLS FIRST);
CREATE INDEX test3_desc_index ON test3 (id DESC NULLS LAST);
CREATE UNIQUE INDEX indice ON employees (columna1,columna2);
CREATE INDEX test1_lower_col1_idx ON test1 (lower(col1));
CREATE INDEX access_log_client_ip_ix ON access_log (client_ip)
     WHERE NOT (client_ip > inet '192.168.100.0' AND
     client_ip < inet '192.168.100.255');
CREATE INDEX mytable_cat_1 ON mytable (data) WHERE category = 1;
CREATE INDEX mytable_cat_2 ON mytable (data) WHERE category = 2;
CREATE INDEX mytable_cat_3 ON mytable (data) WHERE category = 3;
CREATE INDEX indice ON tabla (columna1 varchar_ops ASC NULLS FIRST);


user_id integer;
quantity numeric(5);
url varchar(2);
myrow tablename%ROWTYPE;
myfield tablename.columnname%TYPE;



quantity integer DEFAULT 32;
url varchar := 'hola mundo';
user_id CONSTANT integer := 10;


if condition_1 then
url varchar := 'hola mundo';
elsif condition_2 then
url varchar := 'hola mundo';

elsif condition_2 then
url varchar := 'hola mundo';

else
 url varchar := 'hola mundo';
end if;


CREATE PROCEDURE triple(INOUT x int) 
LANGUAGE plpgsql
AS $$
BEGIN
    x := x * 3;
END;
$$;

DO $$
DECLARE myvar int := 5;
BEGIN
  CALL triple(myvar);
  RAISE notice 'myvar = %', myvar ;
END;
$$;

--------------------------------------------------------------------------------

CREATE DATABASE DBFase2;

USE DBFase2;

CREATE TABLE tbProducto (idproducto integer not null primary key,
  						 producto varchar(150) not null,
  						 fechacreacion date not null,
						 estado integer);

CREATE UNIQUE INDEX idx_producto ON tbProducto (idproducto);

CREATE TABLE tbCalificacion (idcalifica integer not null primary key,
							 item varchar(100) not null,
							 punteo integer not null);

create table tbempleado 
( idempleado integer not null UNIQUE PRIMARY KEY,
  primernombre varchar(50) not null,
 segundonombre varchar(50),
 primerapellido varchar(50) not null,
 segundoapellido varchar(50),
 fechadenacimiento DATE CONSTRAINT birth_data CHECK (fechadenacimiento > '1900-01-01'),
 fechacontratacion DATE CHECK (fechacontratacion > fechadenacimiento),
 idestado integer
);

CREATE UNIQUE INDEX idx_califica ON tbCalificacion (idcalifica);
CREATE INDEX idx2 on tbCalificacion (item desc nulls last);
create INDEX idxHash on tbCalificacion USING HASH (punteo,idcalifica);

alter index idx2 alter column punteo;
alter index idx2 alter column columna1;
alter index idx2 alter column 2;


drop INDEX idx_Hash;

--------------------------------------------------------------------------------------------------------


--Manipulacion de datos
CREATE DATABASE IF NOT EXISTS test
    OWNER = 'root'
    MODE = 1;

CREATE DATABASE IF NOT EXISTS califica
    OWNER = 'root'
    MODE = 2;

SHOW DATABASES; 

USE test;

create table tbcalifica
( iditem integer not null primary key,
  item   varchar(150) not null,
  puntos decimal(8,2) not null
);

CREATE TABLE tbusuario (
    idusuario integer NOT NULL primary key,
	nombre varchar(50),
	apellido varchar(50),
	usuario varchar(15)  UNIQUE NOT NULL,
	password varchar(15) NOT NULL,
	fechacreacion date 
);
CREATE TABLE tbroles (
    idrol integer NOT NULL primary key,
	rol varchar(15)
);

DROP TABLE tbroles;

CREATE TABLE tbrol (
    idrol integer NOT NULL primary key,
	rol varchar(15)
);

insert into tbcalifica values (1,'Funcionalidades básicas',2.0);
insert into tbcalifica values (2,'Funciones Date-Extract',2.0);

select * from tbcalifica;

SELECT EXTRACT(YEAR FROM TIMESTAMP '2001-02-16 20:38:40');
SELECT date_part('hours', INTERVAL '4 hours 3 minutes');
SELECT now();
SELECT EXTRACT(HOUR FROM TIMESTAMP '2001-02-16 20:38:40');
SELECT EXTRACT(MINUTE FROM TIMESTAMP '2001-02-16 20:38:40');
SELECT EXTRACT(SECOND FROM TIMESTAMP '2001-02-16 20:38:40');
SELECT EXTRACT(YEAR FROM TIMESTAMP '2001-02-16 20:38:40');
SELECT EXTRACT(MONTH FROM TIMESTAMP '2001-02-16 20:38:40');
SELECT EXTRACT(DAY FROM TIMESTAMP '2001-02-16 20:38:40');
SELECT date_part('minutes', INTERVAL '4 hours 3 minutes');
SELECT date_part('seconds', INTERVAL '4 hours 3 minutes 15 seconds');
SELECT CURRENT_DATE;
SELECT CURRENT_TIME;
SELECT TIMESTAMP 'now';


CREATE TABLE tbrolxusuario (
    idrol integer NOT NULL ,
	idusuario integer NOT NULL 
);

 alter table tbrolxusuario
 add constraint FK_rol
  foreign key (idrol)
  references tbrol(idrol);
  
   alter table tbrolxusuario
 add constraint FK_usuario
  foreign key (idusuario)
  references tbusuario(idusuario);

--insert into tbrolxusaurio values(1,1);
--Error 23503


insert into tbrol values (1,'Administrador');
insert into tbrol values (2,'Admin');
insert into tbrol values (3,'Ventas');
--insert into tbrole values (1,'root');
--Error 23505

--Type
CREATE TYPE area AS ENUM ('CONTABILIDAD','ADMINISTRACION','VENTAS','TECNOLOGIA','FABRICA');

select * from tbrol;

insert into tbcalifica values (3,'Type',2.0);
insert into tbcalifica values (4,'Create Database-replace',3.0);
insert into tbcalifica values (5,'Show Database',2.0);

alter table tbcalifica add column seccion integer;
--update tbcalifica set seccion = 2;


DROP DATABASE  IF EXISTS  califica2;

insert into tbcalifica values (6,'Database-Alter,drop',4.0,3);
insert into tbcalifica values (7,'Create Table- Variantes',4.0,3);

insert into tbusuario values(1,'Luis Fernando','Salazar Rodriguez','lsalazar',MD5('paswword'),now());
--Error 22001

ALTER TABLE tbusuario
    ALTER COLUMN password TYPE varchar(80);


create table tbcalifica2
( iditem integer not null primary key,
  item   varchar(150) not null,
  puntos decimal(8,2) not null
);
DROP TABLE tbcalifica2;

insert into tbcalifica values (8,'Drop table',2.0,3);
insert into tbcalifica values (9,'Alter table',4.0,3);
	
insert into tbusuario values(1,'Luis Fernando','Salazar Rodriguez','lsalazar',MD5('paswword'),now());
insert into tbusuario values(1,'Maria Cristina','Lopez Ramirez','mlopez',MD5('Diciembre'),now());
insert into tbusuario values(1,'Hugo Alberto','Huard Ordoñez','hhuard',MD5('Rafael'),now());
--Error 23505
insert into tbusuario values(1,'Luis Fernando','Salazar Rodriguez','lsalazar',MD5('paswword'),now());
insert into tbusuario values(2,'Maria Cristina','Lopez Ramirez','mlopez',MD5('Diciembre'),now());
insert into tbusuario values(3,'Hugo Alberto','Huard Ordoñez','hhuard',MD5('Rafael'),now());
insert into tbusuario values(3,'Hugo Alberto','Huard Ordoñez','hhuard',MD5('Rafael'),now());
insert into tbusuario values(4,'Pedro Peter','Parker','ppeter',MD5('Donatelo'),now());
insert into tbusuario values(5,'Mariana Elizabeth','Zahabedra Lopez','melizabeth',MD5('Miguel123'),now());
insert into tbusuario values(6,'Lisa Maria','Guzman','lmaria',MD5('Diciembre$$2020'),now());
insert into tbusuario values(7,'Aurelio','Baldor','abaldor',MD5('Algebra$*'),now());
insert into tbusuario values(8,'Elizabeth Taylor','Juarez','etaylor',MD5('hilbilly'),now());
insert into tbusuario values(9,'Lois','Lane','llane',MD5('smallville'),now());
							 
select * from tbusuario;
							 
insert into tbrolxusuario values(1,1);
insert into tbrolxusuario values(2,2);
insert into tbrolxusuario values(2,3);
insert into tbrolxusuario values(3,4);
insert into tbrolxusuario values(3,5);
insert into tbrolxusuario values(3,6);
insert into tbrolxusuario values(2,7);
insert into tbrolxusuario values(3,8);
insert into tbrolxusuario values(2,9); 

select * from tbrolxusuario;
						 
insert into tbrol values (4,'IT');
insert into tbrol values (5,'Gerencia');
							 

insert into tbusuario values(10,'Duff','Mackagan','dmackagan',MD5('sweetchild'),now());
insert into tbrolxusuario values(1,10);
insert into tbusuario values(11,'Carlos','Mendez Chingui','cmendez',MD5('niebla@@'),now());			
insert into tbusuario values(12,'Diego','Joachin','omendez',MD5('raizanimal'),now());		
insert into tbusuario values(13,'Carlos Mauricio','Ordoñez Toto','cordonez',MD5('radioviejo'),now());		
insert into tbusuario values(14,'Fernando','Gonzalez','fgonzalez',MD5('1245678$net'),now());
insert into tbusuario values(15,'Walter','Reynoso Alvarado','wreynoso',MD5('corona*virus'),now());

insert into tbrolxusuario values(1,11);
insert into tbrolxusuario values(1,12);
insert into tbrolxusuario values(1,13);

select * from tbrolxusuario;
					 
create table tbestado
( idestado integer not null PRIMARY KEY,
  estado varchar(30)
);

create table tbempleado 
( idempleado integer not null UNIQUE PRIMARY KEY,
  primernombre varchar(50) not null,
 segundonombre varchar(50),
 primerapellido varchar(50) not null,
 segundoapellido varchar(50),
 fechadenacimiento DATE CONSTRAINT birth_data CHECK (fechadenacimiento > '1900-01-01'),
 fechacontratacion DATE CHECK (fechacontratacion > fechadenacimiento),
 idestado integer
);

 alter table tbempleado
 add constraint FK_estado
  foreign key (idestado)
  references tbestado(idestado);
  
CREATE TABLE cities (
    name            text,
    population      real,
    elevation       integer     -- in feet
);

CREATE TABLE capitals (
    state           char(2)
) INHERITS (cities);


select * from capitals;

insert into tbcalifica values (10,'Herencia',4.0,3);

create table tbempleadoidentificacion(
	idempleado integer not null primary key,
	identificacion varchar(25) not null,
	ididentificaciontipo integer
);

create table tbidentificaciontipo(
	ididentificaciontipo integer not null primary key,
	tipoidentificacion varchar(20)
);

alter table tbempleadoidentificacion
add constraint FK_identificaciontipo
foreign key (ididentificaciontipo)
references tbidentificaciontipo(ididentificaciontipo);

insert into tbidentificaciontipo values(1,'DPI');
insert into tbidentificaciontipo values(2,'Nit');
insert into tbidentificaciontipo values(3,'Pasaporte');

select * from tbidentificaciontipo;

insert into tbestado values(1,'Activo');
insert into tbestado values(2,'Inactivo');

select * from tbestado;

insert into tbempleado (idempleado,primernombre,primerapellido,fechanacimiento,fechacontartacion,idestado) values(1,'Thelma','Esquit','1981-01-25','2014-07-06',1);

--Error 42703

insert into tbempleado (idempleado,primernombre,primerapellido,fechadenacimiento,fechacontratacion,idestado) 
values(1,'Thelma','Esquit','1981-01-25','2014-07-06',1);
insert into tbempleado (idempleado,primernombre,primerapellido,fechadenacimiento,fechacontratacion,idestado) 
values(2,'Maria','Lopez','1990-12-01','2016-09-21',1);
insert into tbempleado (idempleado,primernombre,segundonombre,primerapellido,fechadenacimiento,fechacontratacion,idestado) 
values(3,'Julio','Roberto','Rodriguez','1985-06-05','2012-01-22',1);
insert into tbempleado (idempleado,primernombre,segundonombre,primerapellido,fechadenacimiento,fechacontratacion,idestado) 
values(4,'Roberto','Benjamin','Duque','1996-04-09','2018-10-03',1);
insert into tbempleado (idempleado,primernombre,segundonombre,primerapellido,segundoapellido,fechadenacimiento,fechacontratacion,idestado) 
values(5,'Francisco','','Juarez','Perez','1997-10-05','2010-03-01',1);

--Error 42601

insert into tbempleado (idempleado,primernombre,segundonombre,primerapellido,segundoapellido,fechadenacimiento,fechacontratacion,idestado) 
values(5,'Francisco','','Juarez','Perez','1997-10-05','2010-03-01',1);

insert into tbempleado (idempleado,primernombre,segundonombre,primerapellido,segundoapellido,fechadenacimiento,fechacontratacion,idestado) 
values(6,'Bryan','Jose','Rodriguez','Santos','1900-01-01','2010-03-01',1);
--Error 23514
insert into tbempleado (idempleado,primernombre,segundonombre,primerapellido,segundoapellido,fechadenacimiento,fechacontratacion,idestado) 
values(6,'Bryan','Jose','Rodriguez','Santos','1990-02-28','2012-09-01',1);		
							 
insert into tbempleado (idempleado,primernombre,segundonombre,primerapellido,segundoapellido,fechadenacimiento,fechacontratacion,idestado) 
values(7,'Estefania','Alejandra','Soto','Mazariegos','2000-08-03','1999-09-01',1);		
--Error 23514						 
insert into tbempleado (idempleado,primernombre,segundonombre,primerapellido,segundoapellido,fechadenacimiento,fechacontratacion,idestado) 
values(7,'Estefania','Alejandra','Soto','Mazariegos','2000-08-03','2019-09-01',1);
							 
insert into tbempleado (idempleado,primernombre,segundonombre,primerapellido,segundoapellido,fechadenacimiento,fechacontratacion,idestado) 
values(8,'Katherin','','Gonzalez','Lopez','1997-10-09','2018-06-09',1);

select * from tbempleado;
							 
insert into tbempleadoidentificacion values(1,'4578-784525-6562',1);
insert into tbempleadoidentificacion values(1,'8874585-5',2);
insert into tbempleadoidentificacion values(2,'1245-488454-7854',1);
insert into tbempleadoidentificacion values(3,'2610-417055-0101',1);
insert into tbempleadoidentificacion (idempleado,ididentificaciontipo,identficacion) values(8,2,'454878-7');
--Error 42703
	 
--la linea 2 da error porque no hay llave primaria compuesta

drop table tbempleadoidentificacion;


 create table tbempleadoidentificacion(
	idempleado integer not null,
	ididentificaciontipo integer not null,
	identificacion varchar(25) not null,
	primary key(idempleado,ididentificaciontipo)
);


insert into tbempleadoidentificacion values(1,1,'4578-784525-6562');
insert into tbempleadoidentificacion values(1,2,'8874585-5');
insert into tbempleadoidentificacion values(2,1,'1245-488454-7854');
insert into tbempleadoidentificacion values(3,1,'2610-417055-0101');
insert into tbempleadoidentificacion (idempleado,ididentificaciontipo,identificacion) values(8,2,'454878-7');
insert into tbempleadoidentificacion (idempleado,identificacion,ididentificaciontipo)  values(8,'12456-1997-0101',1);		


select * from tbempleadoidentificacion;

insert into tbcalifica values (11,'Manipulacion de datos',4.0,3);

/*
select case when seccion = 1 then 'Caracteristicas'
			when seccion = 2 then 'Funcionalidades básicas'
			when seccion = 3 then 'Manipulacion de datos'
		end Seccion,item,puntos
from tbcalifica
*/

insert into tbcalifica values (12,'Case',2.0,3);

insert into tbcalifica values (12,'Select simple',6.0,4);

create table tbpuesto 
( idpuesto smallint not null,
  puesto character(25),
  salariobase money,
 primary key (idpuesto)
);

insert into tbpuesto values (1,'Recepcionista','4,000');

alter table tbpuesto
add column tinecomision boolean;

insert into tbpuesto values (2,'Asistente Contable','4,500',false);
insert into tbpuesto values(3,'Contador General','9000',false);
insert into tbpuesto values(4,'Asistente de RRHH','4000',false);
insert into tbpuesto values(5,'Recepcionista Gerencia','5000',false);
insert into tbpuesto values(6,'Vendedor 1','2500',true);
insert into tbpuesto values(7,'Vendedor 2','2750',true);
insert into tbpuesto values(8,'Vendedor 3','3000',true);
insert into tbpuesto values(9,'Jefe de Ventas','4000',true);
insert into tbpuesto values(10,'Jefe de Ventas Regional','2500',true);


CREATE TABLE tbempleadopuesto
(
	idempleado integer not null,
	idpuesto   integer not null,
	departamento area
);

 alter table tbempleadopuesto
 add constraint FK_empleado
 foreign key (idempleado)
 references tbempleado(idempleado);
  
 alter table tbempleadopuesto
 add constraint FK_empleado
 foreign key (idempleado)
 references tbempleado(idempleado);
  
  
insert into tbempleadopuesto values(1,1,'ADMINISTRACION');
insert into tbempleadopuesto values(2,1,'CONTABILIDAD');
insert into tbempleadopuesto values(3,3,'CONTABILIDAD');
insert into tbempleadopuesto values(4,6,'VENTAS');
insert into tbempleadopuesto values(5,6,'VENTAS');


--UPDATE tbempleadopuesto SET idpuesto = 2 where idempleado = 2;

--QUerys
/*
select *
from tbusuario US
where not exists (Select * from tbrolxusuario RU where RU.idusuario = US.idusuario );
*/

select * from tbrolxusuario;		
--delete from tbrolxusuario where idrol = 2 and idusuario = 9;
insert into tbrolxusuario values(2,9); 
select * from tbrolxusuario;							 

    /*						 
select rol,nombre,apellido
from tbrolxusuario RU
inner join tbusuario U on U.idusuario = RU.idusuario
inner join tbrol R on R.idrol = RU.idrol;


select rol,nombre,apellido
from tbrolxusuario RU
right join tbusuario U on U.idusuario = RU.idusuario
right join tbrol R on R.idrol = RU.idrol;


select *
from tbrol R
where idrol not in (select idrol from tbrolxusuario);

select *
from tbrol R
where not exists (select idrol from tbrolxusuario RU where RU.idrol = R.idrol);


*/
select E.primernombre,E.primerapellido,estado,I.identificacion,tipoidentificacion
from tbempleado E, tbestado ES,tbempleadoidentificacion I,tbidentificaciontipo IT
where ES.idestado = E.idestado
and I.idempleado = E.idempleado
and IT.ididentificaciontipo = I.ididentificaciontipo;

/*
select E.*,estado,I.identificacion,tipoidentificacion 
from tbempleado E, bestado ES ,tbempleadoidentificacion I,tbidentificaciontipo IT
where ES.idestado = E.idestado
and  I.idempleado = E.idempleado
and  IT.ididentificaciontipo = I.ididentificaciontipo;*/
--Error 42P01


select E.*,estado,I.identificacion,tipoidentificacion
from tbempleado E, tbestado ES ,tbempleadoidentificacion I,tbidentificaciontipo IT
where ES.idestado = E.idestado
and  I.idempleado = E.idempleado
and  IT.ididentificaciontipo = I.ididentificaciontipo;

							
select distinct  E.primernombre,primerapellido,fechadenacimiento,estado
from tbempleado E, tbestado ES ,tbempleadoidentificacion I,tbidentificaciontipo IT
where ES.idestado = E.idestado
and  I.idempleado = E.idempleado
and  IT.ididentificaciontipo = I.ididentificaciontipo;

/*							 
select distinct  E.primernombre,primerapellido,EXTRACT(YEAR FROM fechadenacimiento) AnioNacimiento,estado
from tbempleado E, tbestado ES 
where ES.idestado = E.idestado

select primernombre,primerapellido,2020-Anionacimiento Edad,estado
from (select distinct  E.primernombre,primerapellido,EXTRACT(YEAR FROM fechadenacimiento) AnioNacimiento,estado
from tbempleado E, tbestado ES 
where ES.idestado = E.idestado) A */

insert into tbcalifica values (12,'Select varias tablas',8.0,4);
insert into tbcalifica values (13,'Subquery',8.0,4);

/*
select primernombre,primerapellido,fechadenacimiento,'' identificacion 
from tbempleado
UNION 
select '' primernombre,'' primerapellido,now() fechadenacimiento,identificacion 
from tbempleadoidentificacion
;*/

insert into tbcalifica values (14,'Union',8.0,4);

/*
select departamento,count(*) CantEmpleados
from tbempleadopuesto
group by departamento;*/

create table tbventa 
(  idventa integer not null primary key,
   idempleado integer,
   fechaventa date constraint validaventa check (fechaventa > '1900-01-01'),
   montoventa money constraint ventavalida check (montoventa > 0),
   ventaregistrada boolean,
   descripcion text
);

insert into tbventa values(1,4,'2020-10-12',450,false,'Venta de bomba de agua para toyota');
insert into tbventa values(2,4,'2020-10-13',250,false,'Tasa distribuidor Mazda 626');
insert into tbventa values(3,4,'2020-10-13',650,false,'Radiador para Mazda 626');
insert into tbventa values(4,4,'2020-10-13',125,false,'Filtro de aire volkswagen');
insert into tbventa values(5,4,'2020-10-13',175,false,'Juego de Candelas volkswagen');
insert into tbventa values(6,4,'2020-10-13',220,false,'Aceite 20w50');
insert into tbventa values(7,5,'2020-10-13',1250,false,'Cremallera Mazda 3');
insert into tbventa values(8,5,'2020-10-14',980,false,'Cremallera timon hidraulico mazda');
insert into tbventa values(9,5,'2020-10-14',1200,false,'Lodera Universal para pickup');
insert into tbventa values(10,5,'2020-10-14',475,false,'Sobre Lodera de Fibra de Carbon');
insert into tbventa values(11,5,'2020-10-14',780,false,'Bomba Auxiliar de agua para volkswagen');
insert into tbventa values(12,4,'2020-10-14',3500,false,'Bomba de agua para volkswagen');
insert into tbventa values(13,5,'2020-10-14',200,false,'Compresor de aire acondicionado');
insert into tbventa values(14,5,'2020-10-15',2000,false,'Bomba Auxiliar de agua para volkswagen');

/*
select primernombre,segundonombre,primerapellido,sum(montoventa)
from tbventa V,tbempleado E
where V.idempleado = E.idempleado
group by primernombre,segundonombre,primerapellido;

select primernombre,segundonombre,primerapellido,fechaventa,sum(montoventa)
from tbventa V,tbempleado E
where V.idempleado = E.idempleado
group by primernombre,segundonombre,primerapellido,fechaventa;

select primernombre,segundonombre,primerapellido,sum(montoventa) TotalVenta
from tbventa V,tbempleado E
where V.idempleado = E.idempleado
group by primernombre,segundonombre,primerapellido;*/

create table tblibrosalario
( idempleado integer not null,
  aniocalculo integer not null CONSTRAINT aniosalario CHECK (aniocalculo > 0),
  mescalculo  integer not null CONSTRAINT mescalculo CHECK (mescalculo > 0 ),
  salariobase  money not null,
  comision     decimal,
  primary key(idempleado)
 );


insert into tblibrosalario values(4,2020,10,2500,6885);
insert into tblibrosalario values(5,2020,10,2750,5370);
insert into tblibrosalario (idempleado,aniocalculo,mescalculo,salariobase) values(1,2020,10,4500);
/*
update tbventa set ventaregistrada = true 
where idempleado = 4
and fechaventa between '2020-10-01' and '2020-10-31';

update tbventa set ventaregistrada = true 
where idempleado = 5
and fechaventa between '2020-10-01' and '2020-10-31';*/

select *
from tbventa where ventaregistrada = false;

create table tblibrosalariohis
( idhistorico integer not null primary key
) INHERITS (tblibrosalario);


SELECT idempleado,abs(comision),cbrt(comision),DIV(325,5)
FROM tblibrosalario;


SELECT factorial(17) AS factorial, 
EXP(2.0) as Exponencial,
LN(5.0) "Logaritmo Natural",
PI(),
POWER(5,2);


SELECT 
  width_bucket(3, 1, 12, 3),
  width_bucket(5, 1, 12, 3),
  width_bucket(9, 1, 12, 3);


create table tbfuncionesmath
(
	idfuncion int not null primary key,
	seno decimal(10,2),
	coseno decimal(10,2)
);

insert into tbfuncionesmath values(1,0,0);
insert into tbfuncionesmath values(2,0,0);
insert into tbfuncionesmath values(3,0,0);
insert into tbfuncionesmath values(4,0,0);

update tbfuncionesmath set seno = SIN(1),coseno = COS(0) where idfuncion = 1;
update tbfuncionesmat set seno = SIND(1),coseno = TAN(0) where idfuncion = 1;
--Error 42P01
update tbfuncionesmath set seno = SIND(1),coseno = TAN(0) where idfuncion = 1;
update tbfuncionesmath set seno = TAND(0),coseno = COSD(0) where idfuncion = 2;

delete from tbfuncionesmath where idfuncion = 1;

select * from tbfuncionesmath;

/*select SQRT(225) AS SQRT,SIGN(14.321) SING,PI(),TRUNC(67.456) TRUNC, RANDOM() AS RANDOM,
RADIANS(15.0)  AS RADIANS, ROUND(67.456) AS ROUND, POWER(7.0,3), MOD(-38,5), LOG(200.0) AS LOGARITMO, LN(3.0) AS LOGARITMONATURAL,
FLOOR(53.6) AS FLOOR, FACTORIAL(4),EXP(2.0) AS EXPONENCIAL,DIV(19,3);*/


select ATAN(1),ASIN(1),ATAND(0),ACOS(1),ACOSD(0),ASIN(1),ASIND(0),COS(0),TAN(0),SINH(2),ACOSH(2),ATANH(0),TANH(1);

SELECT length(primernombre) tam ,substring(primerapellido,1,5) sub1 ,substr(primerapellido,1,5) sub2
FROM tbempleado where tam>5;

SELECT
   CONVERT ('2015-01-01' AS DATE),
   CONVERT ('01-OCT-2015' AS DATE),
   CONVERT ('10' AS INTEGER);

select * 
from tbempleado;


select * 
from tbempleado
where primernombre like  '%Jul%';

select * 
from tbempleado
where primernombre NOT like  '%Jul%';



insert into tbcalifica values (15,'Funciones Matematicas',3.0,5);
insert into tbcalifica values (16,'Funciones Trigonometricas',3.0,5);
insert into tbcalifica values (17,'Funciones String',3.0,5);
insert into tbcalifica values (18,'Binarios',1.0,5);

--------------------------------------------------------------------------------------------------------

CREATE DATABASE DBFase2;
USE DBFase2;

create table tbbodega (idbodega integer not null primary key,
					   bodega varchar(100) not null,
					   estado integer);
								  
CREATE INDEX indi ON tbbodega (bodega);

create procedure sp_validainsert()
language plpgsql
as $$
begin
	insert into tbbodega values(1,'BODEGA CENTRAL',1);
	insert into tbbodega (idbodega,bodega) values(2,'BODEGA ZONA 12');
	insert into tbbodega (idbodega,bodega,estado) values(3,'BODEGA ZONA 11',1);
	insert into tbbodega (idbodega,bodega,estado) values(4,'BODEGA ZONA 1',1);
	insert into tbbodega (idbodega,bodega,estado) values(5,'BODEGA ZONA 10',1);
end; $$


		 
EXECUTE sp_validainsert();

select * from tbbodega;