
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftpuntorightumenosumasleftelevadoleftmultiplicaciondivisionmoduloleftmasmenosleftmayormenormayor_igualmenor_igualigualdiferente1diferente2rightnotleftandleftoradd alter and as between bigint boolean by cadena char char_er character check column coma constraint create databases date day decimal decimales default diferente1 diferente2 distinct division dospuntos double drop elevado enum exist false foreign group having hour id if igual ilike in inherits insert int integer interval into isnull key like llavea llavec mas mayor mayor_igual menor menor_igual menos minute mode modulo money month multiplicacion not notnull null numeric or owner para parac parc precision primary ptcoma punto r_from real references rename replace second select set show simboloor similar smallint symetric table text time timestamp to true type unique unknown update values varchar varying where without year zoneinit            : instruccionesinstrucciones    : instrucciones instruccioninstrucciones    : instruccion instruccion      :  SELECT\n                    | CREATETABLE\n                    | id igual EXP ptcoma CREATETABLE : create table id para LDEF parc ptcoma\n                    | create table id para LDEF parc HERENCIA ptcomaLDEF : LDEF coma COLDEF\n            | COLDEFCOLDEF : OPCONST\n            | constraint id OPCONST\n            | id TIPO \n            | id TIPO LOPCOLUMNLOPCOLUMN : LOPCOLUMN OPCOLUMN\n            | OPCOLUMNOPCOLUMN : constraint id unique\n            | constraint id check para EXP parc \n            | default EXP\n            | PNULL\n            | primary key\n            | references idPNULL : not null\n        | nullOPCONST : primary key para LEXP parc\n            | foreign key para LEXP parc references table para LEXP parc\n            | unique para LEXP parc\n            | check para EXP parcHERENCIA : inherits para LEXP parc SELECT : select distinct  LSELECT r_from LFROM WHERE GROUP HAVING\n\t| select  LSELECT r_from LFROM WHERE  GROUP HAVING\n    \n    LSELECT : LEXP\n\t\t| multiplicacion\n     LFROM : LFROM coma FROM\n        | FROM\n    \n    FROM : EXP\n\t| EXP as id\n    | para SELECT parc\n    | para SELECT parc as id\n     WHERE : where EXP\n\t            |  GROUP :  group by EXP\n\t            |  HAVING : having EXP\n\t| ptcoma LEXP : LEXP coma EXP\n\t| EXPTIPO : smallint\n            | integer\n            | bigint\n            | decimal para LEXP parc\n            | numeric para LEXP parc\n            | real\n            | double precision \n            | money\n            | character varying para int parc\n            | varchar para int parc\n            | character para int parc\n            | char para int parc\n            | text\n            | timestamp\n            | timestamp para int parc\n            | date\n            | time\n            | time para int parc\n            | interval \n            | interval para int parc\n            | interval FIELDS\n            | interval para int parc FIELDS\n            | booleanFIELDS : year\n        | month\n        | day\n        | hour\n        | minute\n        | secondEXP : EXP mas EXP\n            | EXP menos EXP\n            | EXP multiplicacion  EXP\n            | EXP division EXP\n            | EXP modulo EXP\n            | EXP elevado EXP\n            | EXP and EXP\n            | EXP or EXP\n            | EXP mayor EXP\n            | EXP menor EXP\n            | EXP mayor_igual EXP\n            | EXP menor_igual EXP\n            | EXP igual EXP\n            | EXP diferente1 EXP\n            | EXP diferente2 EXP\n            | EXP punto EXP\n            | mas EXP %prec umas\n            | menos EXP %prec umenos\n            | not EXP \n            | para EXP parc \n            | int\n            | decimales\n            | cadena\n            | char_er\n            | true\n            | false\n            | id'
    
_lr_action_items = {'id':([0,2,3,4,5,7,9,10,11,16,17,18,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,88,119,123,124,126,127,128,129,130,133,134,137,140,141,157,162,163,166,167,185,186,205,213,],[6,6,-3,-4,-5,26,-2,26,26,26,26,26,26,-97,-98,-99,-100,-101,-102,-103,52,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-93,-94,-95,-6,26,26,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-96,84,26,26,98,120,84,26,26,-31,26,-45,26,169,171,26,174,26,26,-7,26,26,-30,-44,-8,26,26,26,]),'select':([0,2,3,4,5,9,20,21,22,23,24,25,26,48,49,50,53,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,126,128,157,166,167,185,],[7,7,-3,-4,-5,-2,-97,-98,-99,-100,-101,-102,-103,-93,-94,-95,-6,7,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-96,-31,-45,-7,-30,-44,-8,]),'create':([0,2,3,4,5,9,20,21,22,23,24,25,26,48,49,50,53,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,126,128,157,166,167,185,],[8,8,-3,-4,-5,-2,-97,-98,-99,-100,-101,-102,-103,-93,-94,-95,-6,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-96,-31,-45,-7,-30,-44,-8,]),'$end':([1,2,3,4,5,9,20,21,22,23,24,25,26,48,49,50,53,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,126,128,157,166,167,185,],[0,-1,-3,-4,-5,-2,-97,-98,-99,-100,-101,-102,-103,-93,-94,-95,-6,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-96,-31,-45,-7,-30,-44,-8,]),'igual':([6,15,20,21,22,23,24,25,26,28,48,49,50,51,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,97,165,167,168,172,210,],[10,44,-97,-98,-99,-100,-101,-102,-103,44,44,44,-95,44,44,44,44,44,44,44,44,44,-83,-84,-85,-86,-87,-88,-89,-90,-91,44,-96,44,44,44,44,44,44,]),'distinct':([7,],[11,]),'multiplicacion':([7,11,15,20,21,22,23,24,25,26,28,48,49,50,51,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,97,165,167,168,172,210,],[14,14,34,-97,-98,-99,-100,-101,-102,-103,34,34,34,-95,34,34,34,-77,-78,-79,-80,-81,34,-83,-84,-85,-86,-87,-88,-89,-90,-91,34,-96,34,34,34,34,34,34,]),'mas':([7,10,11,15,16,17,18,19,20,21,22,23,24,25,26,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,97,123,124,127,129,134,140,141,162,163,165,167,168,172,186,205,210,213,],[16,16,16,32,16,16,16,16,-97,-98,-99,-100,-101,-102,-103,32,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,32,32,-95,32,16,32,16,32,-77,-78,32,32,32,32,-83,-84,-85,-86,-87,-88,-89,-90,-91,32,-96,16,16,32,16,16,16,16,16,16,16,16,16,32,32,32,32,16,16,32,16,]),'menos':([7,10,11,15,16,17,18,19,20,21,22,23,24,25,26,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,97,123,124,127,129,134,140,141,162,163,165,167,168,172,186,205,210,213,],[17,17,17,33,17,17,17,17,-97,-98,-99,-100,-101,-102,-103,33,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,33,33,-95,33,17,33,17,33,-77,-78,33,33,33,33,-83,-84,-85,-86,-87,-88,-89,-90,-91,33,-96,17,17,33,17,17,17,17,17,17,17,17,17,33,33,33,33,17,17,33,17,]),'not':([7,10,11,16,17,18,19,20,21,22,23,24,25,26,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,100,101,102,103,106,108,112,113,114,115,116,117,123,124,127,129,131,132,134,135,139,140,141,142,150,151,152,153,154,155,156,162,163,170,172,173,174,175,186,191,193,194,196,197,198,199,200,201,205,206,207,212,213,],[18,18,18,18,18,18,18,-97,-98,-99,-100,-101,-102,-103,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-93,-94,-95,18,18,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-96,18,18,138,-48,-49,-50,-53,-55,-60,-61,-63,-64,-66,-70,18,18,18,18,138,-16,18,-20,-24,18,18,-54,-68,-71,-72,-73,-74,-75,-76,18,18,-15,-19,-21,-22,-23,18,-17,-51,-52,-58,-57,-59,-62,-65,-67,18,-56,-69,-18,18,]),'para':([7,10,11,16,17,18,19,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,52,54,58,80,81,91,92,104,105,109,110,111,113,115,116,121,122,123,124,127,129,134,140,141,143,159,162,163,186,192,205,211,213,],[19,19,19,19,19,19,19,58,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,77,58,19,58,19,123,124,140,141,144,145,146,147,148,149,162,163,19,19,19,19,19,19,19,178,186,19,19,19,205,19,213,19,]),'int':([7,10,11,16,17,18,19,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,54,58,80,81,123,124,127,129,134,140,141,144,145,146,147,148,149,162,163,178,186,205,213,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,179,180,181,182,183,184,20,20,195,20,20,20,]),'decimales':([7,10,11,16,17,18,19,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,54,58,80,81,123,124,127,129,134,140,141,162,163,186,205,213,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'cadena':([7,10,11,16,17,18,19,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,54,58,80,81,123,124,127,129,134,140,141,162,163,186,205,213,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'char_er':([7,10,11,16,17,18,19,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,54,58,80,81,123,124,127,129,134,140,141,162,163,186,205,213,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'true':([7,10,11,16,17,18,19,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,54,58,80,81,123,124,127,129,134,140,141,162,163,186,205,213,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'false':([7,10,11,16,17,18,19,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,54,58,80,81,123,124,127,129,134,140,141,162,163,186,205,213,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'table':([8,209,],[27,211,]),'r_from':([12,13,14,15,20,21,22,23,24,25,26,29,48,49,50,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,],[30,-32,-33,-47,-97,-98,-99,-100,-101,-102,-103,54,-93,-94,-95,-46,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-96,]),'coma':([13,15,20,21,22,23,24,25,26,48,49,50,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,85,86,87,96,98,99,100,101,102,103,106,108,112,113,114,115,116,117,131,132,135,139,142,150,151,152,153,154,155,156,160,161,164,169,170,172,173,174,175,176,177,187,188,189,190,191,193,194,196,197,198,199,200,201,202,203,206,207,212,214,215,],[31,-47,-97,-98,-99,-100,-101,-102,-103,-93,-94,-95,80,-35,-36,-46,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-96,80,119,-10,-11,-34,-37,-38,-13,-48,-49,-50,-53,-55,-60,-61,-63,-64,-66,-70,-14,-16,-20,-24,-54,-68,-71,-72,-73,-74,-75,-76,-9,-12,31,-39,-15,-19,-21,-22,-23,31,31,31,31,-27,-28,-17,-51,-52,-58,-57,-59,-62,-65,-67,31,-25,-56,-69,-18,31,-26,]),'parc':([15,20,21,22,23,24,25,26,48,49,50,51,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,83,85,86,87,100,101,102,103,106,108,112,113,114,115,116,117,126,128,131,132,135,139,142,150,151,152,153,154,155,156,160,161,164,165,166,167,170,172,173,174,175,176,177,179,180,181,182,183,184,187,188,189,190,191,193,194,195,196,197,198,199,200,201,202,203,206,207,210,212,214,215,],[-47,-97,-98,-99,-100,-101,-102,-103,-93,-94,-95,76,-46,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-96,99,118,-10,-11,-13,-48,-49,-50,-53,-55,-60,-61,-63,-64,-66,-70,-31,-45,-14,-16,-20,-24,-54,-68,-71,-72,-73,-74,-75,-76,-9,-12,189,190,-30,-44,-15,-19,-21,-22,-23,193,194,196,197,198,199,200,201,203,204,-27,-28,-17,-51,-52,206,-58,-57,-59,-62,-65,-67,208,-25,-56,-69,212,-18,215,-26,]),'division':([15,20,21,22,23,24,25,26,28,48,49,50,51,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,97,165,167,168,172,210,],[35,-97,-98,-99,-100,-101,-102,-103,35,35,35,-95,35,35,35,-77,-78,-79,-80,-81,35,-83,-84,-85,-86,-87,-88,-89,-90,-91,35,-96,35,35,35,35,35,35,]),'modulo':([15,20,21,22,23,24,25,26,28,48,49,50,51,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,97,165,167,168,172,210,],[36,-97,-98,-99,-100,-101,-102,-103,36,36,36,-95,36,36,36,-77,-78,-79,-80,-81,36,-83,-84,-85,-86,-87,-88,-89,-90,-91,36,-96,36,36,36,36,36,36,]),'elevado':([15,20,21,22,23,24,25,26,28,48,49,50,51,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,97,165,167,168,172,210,],[37,-97,-98,-99,-100,-101,-102,-103,37,37,37,-95,37,37,37,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,37,-96,37,37,37,37,37,37,]),'and':([15,20,21,22,23,24,25,26,28,48,49,50,51,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,97,165,167,168,172,210,],[38,-97,-98,-99,-100,-101,-102,-103,38,38,38,38,38,38,38,38,38,38,38,38,38,-83,-84,38,38,38,38,38,38,38,38,-96,38,38,38,38,38,38,]),'or':([15,20,21,22,23,24,25,26,28,48,49,50,51,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,97,165,167,168,172,210,],[39,-97,-98,-99,-100,-101,-102,-103,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-84,39,39,39,39,39,39,39,39,-96,39,39,39,39,39,39,]),'mayor':([15,20,21,22,23,24,25,26,28,48,49,50,51,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,97,165,167,168,172,210,],[40,-97,-98,-99,-100,-101,-102,-103,40,40,40,-95,40,40,40,40,40,40,40,40,40,-83,-84,-85,-86,-87,-88,-89,-90,-91,40,-96,40,40,40,40,40,40,]),'menor':([15,20,21,22,23,24,25,26,28,48,49,50,51,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,97,165,167,168,172,210,],[41,-97,-98,-99,-100,-101,-102,-103,41,41,41,-95,41,41,41,41,41,41,41,41,41,-83,-84,-85,-86,-87,-88,-89,-90,-91,41,-96,41,41,41,41,41,41,]),'mayor_igual':([15,20,21,22,23,24,25,26,28,48,49,50,51,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,97,165,167,168,172,210,],[42,-97,-98,-99,-100,-101,-102,-103,42,42,42,-95,42,42,42,42,42,42,42,42,42,-83,-84,-85,-86,-87,-88,-89,-90,-91,42,-96,42,42,42,42,42,42,]),'menor_igual':([15,20,21,22,23,24,25,26,28,48,49,50,51,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,97,165,167,168,172,210,],[43,-97,-98,-99,-100,-101,-102,-103,43,43,43,-95,43,43,43,43,43,43,43,43,43,-83,-84,-85,-86,-87,-88,-89,-90,-91,43,-96,43,43,43,43,43,43,]),'diferente1':([15,20,21,22,23,24,25,26,28,48,49,50,51,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,97,165,167,168,172,210,],[45,-97,-98,-99,-100,-101,-102,-103,45,45,45,-95,45,45,45,45,45,45,45,45,45,-83,-84,-85,-86,-87,-88,-89,-90,-91,45,-96,45,45,45,45,45,45,]),'diferente2':([15,20,21,22,23,24,25,26,28,48,49,50,51,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,97,165,167,168,172,210,],[46,-97,-98,-99,-100,-101,-102,-103,46,46,46,-95,46,46,46,46,46,46,46,46,46,-83,-84,-85,-86,-87,-88,-89,-90,-91,46,-96,46,46,46,46,46,46,]),'punto':([15,20,21,22,23,24,25,26,28,48,49,50,51,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,97,165,167,168,172,210,],[47,-97,-98,-99,-100,-101,-102,-103,47,-93,-94,-95,47,47,47,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-96,47,47,47,47,47,47,]),'ptcoma':([20,21,22,23,24,25,26,28,48,49,50,55,56,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,93,94,96,97,98,99,118,125,158,168,169,208,],[-97,-98,-99,-100,-101,-102,-103,53,-93,-94,-95,-41,-35,-36,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-96,-41,-43,-43,128,-34,-40,-37,-38,157,128,185,-42,-39,-29,]),'as':([20,21,22,23,24,25,26,48,49,50,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,99,],[-97,-98,-99,-100,-101,-102,-103,-93,-94,-95,82,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-96,130,]),'where':([20,21,22,23,24,25,26,48,49,50,55,56,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,96,98,99,169,],[-97,-98,-99,-100,-101,-102,-103,-93,-94,-95,81,-35,-36,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-96,81,-34,-37,-38,-39,]),'group':([20,21,22,23,24,25,26,48,49,50,55,56,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,93,96,97,98,99,169,],[-97,-98,-99,-100,-101,-102,-103,-93,-94,-95,-41,-35,-36,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-96,-41,95,95,-34,-40,-37,-38,-39,]),'having':([20,21,22,23,24,25,26,48,49,50,55,56,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,93,94,96,97,98,99,125,168,169,],[-97,-98,-99,-100,-101,-102,-103,-93,-94,-95,-41,-35,-36,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-96,-41,-43,-43,127,-34,-40,-37,-38,127,-42,-39,]),'constraint':([20,21,22,23,24,25,26,48,49,50,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,100,101,102,103,106,108,112,113,114,115,116,117,119,131,132,135,139,142,150,151,152,153,154,155,156,170,172,173,174,175,191,193,194,196,197,198,199,200,201,206,207,212,],[-97,-98,-99,-100,-101,-102,-103,-93,-94,-95,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-96,88,133,-48,-49,-50,-53,-55,-60,-61,-63,-64,-66,-70,88,133,-16,-20,-24,-54,-68,-71,-72,-73,-74,-75,-76,-15,-19,-21,-22,-23,-17,-51,-52,-58,-57,-59,-62,-65,-67,-56,-69,-18,]),'default':([20,21,22,23,24,25,26,48,49,50,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,100,101,102,103,106,108,112,113,114,115,116,117,131,132,135,139,142,150,151,152,153,154,155,156,170,172,173,174,175,191,193,194,196,197,198,199,200,201,206,207,212,],[-97,-98,-99,-100,-101,-102,-103,-93,-94,-95,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-96,134,-48,-49,-50,-53,-55,-60,-61,-63,-64,-66,-70,134,-16,-20,-24,-54,-68,-71,-72,-73,-74,-75,-76,-15,-19,-21,-22,-23,-17,-51,-52,-58,-57,-59,-62,-65,-67,-56,-69,-18,]),'primary':([20,21,22,23,24,25,26,48,49,50,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,100,101,102,103,106,108,112,113,114,115,116,117,119,120,131,132,135,139,142,150,151,152,153,154,155,156,170,172,173,174,175,191,193,194,196,197,198,199,200,201,206,207,212,],[-97,-98,-99,-100,-101,-102,-103,-93,-94,-95,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-96,89,136,-48,-49,-50,-53,-55,-60,-61,-63,-64,-66,-70,89,89,136,-16,-20,-24,-54,-68,-71,-72,-73,-74,-75,-76,-15,-19,-21,-22,-23,-17,-51,-52,-58,-57,-59,-62,-65,-67,-56,-69,-18,]),'references':([20,21,22,23,24,25,26,48,49,50,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,100,101,102,103,106,108,112,113,114,115,116,117,131,132,135,139,142,150,151,152,153,154,155,156,170,172,173,174,175,191,193,194,196,197,198,199,200,201,204,206,207,212,],[-97,-98,-99,-100,-101,-102,-103,-93,-94,-95,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-96,137,-48,-49,-50,-53,-55,-60,-61,-63,-64,-66,-70,137,-16,-20,-24,-54,-68,-71,-72,-73,-74,-75,-76,-15,-19,-21,-22,-23,-17,-51,-52,-58,-57,-59,-62,-65,-67,209,-56,-69,-18,]),'null':([20,21,22,23,24,25,26,48,49,50,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,100,101,102,103,106,108,112,113,114,115,116,117,131,132,135,138,139,142,150,151,152,153,154,155,156,170,172,173,174,175,191,193,194,196,197,198,199,200,201,206,207,212,],[-97,-98,-99,-100,-101,-102,-103,-93,-94,-95,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-96,139,-48,-49,-50,-53,-55,-60,-61,-63,-64,-66,-70,139,-16,-20,175,-24,-54,-68,-71,-72,-73,-74,-75,-76,-15,-19,-21,-22,-23,-17,-51,-52,-58,-57,-59,-62,-65,-67,-56,-69,-18,]),'foreign':([77,119,120,],[90,90,90,]),'unique':([77,119,120,171,],[91,91,91,191,]),'check':([77,119,120,171,],[92,92,92,192,]),'smallint':([84,],[101,]),'integer':([84,],[102,]),'bigint':([84,],[103,]),'decimal':([84,],[104,]),'numeric':([84,],[105,]),'real':([84,],[106,]),'double':([84,],[107,]),'money':([84,],[108,]),'character':([84,],[109,]),'varchar':([84,],[110,]),'char':([84,],[111,]),'text':([84,],[112,]),'timestamp':([84,],[113,]),'date':([84,],[114,]),'time':([84,],[115,]),'interval':([84,],[116,]),'boolean':([84,],[117,]),'key':([89,90,136,],[121,122,173,]),'by':([95,],[129,]),'precision':([107,],[142,]),'varying':([109,],[143,]),'year':([116,201,],[151,151,]),'month':([116,201,],[152,152,]),'day':([116,201,],[153,153,]),'hour':([116,201,],[154,154,]),'minute':([116,201,],[155,155,]),'second':([116,201,],[156,156,]),'inherits':([118,],[159,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,],[2,]),'instruccion':([0,2,],[3,9,]),'SELECT':([0,2,58,],[4,4,83,]),'CREATETABLE':([0,2,],[5,5,]),'LSELECT':([7,11,],[12,29,]),'LEXP':([7,11,123,140,141,162,163,186,213,],[13,13,164,176,177,187,188,202,214,]),'EXP':([7,10,11,16,17,18,19,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,54,58,80,81,123,124,127,129,134,140,141,162,163,186,205,213,],[15,28,15,48,49,50,51,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,57,51,57,97,15,165,167,168,172,15,15,15,15,15,210,15,]),'LFROM':([30,54,],[55,78,]),'FROM':([30,54,80,],[56,56,96,]),'WHERE':([55,78,],[79,93,]),'LDEF':([77,],[85,]),'COLDEF':([77,119,],[86,160,]),'OPCONST':([77,119,120,],[87,87,161,]),'GROUP':([79,93,],[94,125,]),'TIPO':([84,],[100,]),'HAVING':([94,125,],[126,166,]),'LOPCOLUMN':([100,],[131,]),'OPCOLUMN':([100,131,],[132,170,]),'PNULL':([100,131,],[135,135,]),'FIELDS':([116,201,],[150,207,]),'HERENCIA':([118,],[158,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','gramatica2.py',232),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','gramatica2.py',238),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','gramatica2.py',244),
  ('instruccion -> SELECT','instruccion',1,'p_instruccion','gramatica2.py',249),
  ('instruccion -> CREATETABLE','instruccion',1,'p_instruccion','gramatica2.py',250),
  ('instruccion -> id igual EXP ptcoma','instruccion',4,'p_instruccion','gramatica2.py',251),
  ('CREATETABLE -> create table id para LDEF parc ptcoma','CREATETABLE',7,'p_CREATETABLE','gramatica2.py',255),
  ('CREATETABLE -> create table id para LDEF parc HERENCIA ptcoma','CREATETABLE',8,'p_CREATETABLE','gramatica2.py',256),
  ('LDEF -> LDEF coma COLDEF','LDEF',3,'p_LDEF','gramatica2.py',259),
  ('LDEF -> COLDEF','LDEF',1,'p_LDEF','gramatica2.py',260),
  ('COLDEF -> OPCONST','COLDEF',1,'p_COLDEF','gramatica2.py',263),
  ('COLDEF -> constraint id OPCONST','COLDEF',3,'p_COLDEF','gramatica2.py',264),
  ('COLDEF -> id TIPO','COLDEF',2,'p_COLDEF','gramatica2.py',265),
  ('COLDEF -> id TIPO LOPCOLUMN','COLDEF',3,'p_COLDEF','gramatica2.py',266),
  ('LOPCOLUMN -> LOPCOLUMN OPCOLUMN','LOPCOLUMN',2,'p_LOPCOLUMN','gramatica2.py',269),
  ('LOPCOLUMN -> OPCOLUMN','LOPCOLUMN',1,'p_LOPCOLUMN','gramatica2.py',270),
  ('OPCOLUMN -> constraint id unique','OPCOLUMN',3,'p_OPCOLUMN','gramatica2.py',273),
  ('OPCOLUMN -> constraint id check para EXP parc','OPCOLUMN',6,'p_OPCOLUMN','gramatica2.py',274),
  ('OPCOLUMN -> default EXP','OPCOLUMN',2,'p_OPCOLUMN','gramatica2.py',275),
  ('OPCOLUMN -> PNULL','OPCOLUMN',1,'p_OPCOLUMN','gramatica2.py',276),
  ('OPCOLUMN -> primary key','OPCOLUMN',2,'p_OPCOLUMN','gramatica2.py',277),
  ('OPCOLUMN -> references id','OPCOLUMN',2,'p_OPCOLUMN','gramatica2.py',278),
  ('PNULL -> not null','PNULL',2,'p_PNULL','gramatica2.py',281),
  ('PNULL -> null','PNULL',1,'p_PNULL','gramatica2.py',282),
  ('OPCONST -> primary key para LEXP parc','OPCONST',5,'p_OPCONST','gramatica2.py',285),
  ('OPCONST -> foreign key para LEXP parc references table para LEXP parc','OPCONST',10,'p_OPCONST','gramatica2.py',286),
  ('OPCONST -> unique para LEXP parc','OPCONST',4,'p_OPCONST','gramatica2.py',287),
  ('OPCONST -> check para EXP parc','OPCONST',4,'p_OPCONST','gramatica2.py',288),
  ('HERENCIA -> inherits para LEXP parc','HERENCIA',4,'p_HERENCIA','gramatica2.py',291),
  ('SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING','SELECT',8,'p_SELECT','gramatica2.py',294),
  ('SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING','SELECT',7,'p_SELECT','gramatica2.py',295),
  ('LSELECT -> LEXP','LSELECT',1,'p_LSELECT','gramatica2.py',300),
  ('LSELECT -> multiplicacion','LSELECT',1,'p_LSELECT','gramatica2.py',301),
  ('LFROM -> LFROM coma FROM','LFROM',3,'p_LFROM','gramatica2.py',304),
  ('LFROM -> FROM','LFROM',1,'p_LFROM','gramatica2.py',305),
  ('FROM -> EXP','FROM',1,'p_FROM','gramatica2.py',310),
  ('FROM -> EXP as id','FROM',3,'p_FROM','gramatica2.py',311),
  ('FROM -> para SELECT parc','FROM',3,'p_FROM','gramatica2.py',312),
  ('FROM -> para SELECT parc as id','FROM',5,'p_FROM','gramatica2.py',313),
  ('WHERE -> where EXP','WHERE',2,'p_WHERE','gramatica2.py',317),
  ('WHERE -> <empty>','WHERE',0,'p_WHERE','gramatica2.py',318),
  ('GROUP -> group by EXP','GROUP',3,'p_GROUP','gramatica2.py',322),
  ('GROUP -> <empty>','GROUP',0,'p_GROUP','gramatica2.py',323),
  ('HAVING -> having EXP','HAVING',2,'p_HAVING','gramatica2.py',327),
  ('HAVING -> ptcoma','HAVING',1,'p_HAVING','gramatica2.py',328),
  ('LEXP -> LEXP coma EXP','LEXP',3,'p_LEXP','gramatica2.py',331),
  ('LEXP -> EXP','LEXP',1,'p_LEXP','gramatica2.py',332),
  ('TIPO -> smallint','TIPO',1,'p_TIPO','gramatica2.py',335),
  ('TIPO -> integer','TIPO',1,'p_TIPO','gramatica2.py',336),
  ('TIPO -> bigint','TIPO',1,'p_TIPO','gramatica2.py',337),
  ('TIPO -> decimal para LEXP parc','TIPO',4,'p_TIPO','gramatica2.py',338),
  ('TIPO -> numeric para LEXP parc','TIPO',4,'p_TIPO','gramatica2.py',339),
  ('TIPO -> real','TIPO',1,'p_TIPO','gramatica2.py',340),
  ('TIPO -> double precision','TIPO',2,'p_TIPO','gramatica2.py',341),
  ('TIPO -> money','TIPO',1,'p_TIPO','gramatica2.py',342),
  ('TIPO -> character varying para int parc','TIPO',5,'p_TIPO','gramatica2.py',343),
  ('TIPO -> varchar para int parc','TIPO',4,'p_TIPO','gramatica2.py',344),
  ('TIPO -> character para int parc','TIPO',4,'p_TIPO','gramatica2.py',345),
  ('TIPO -> char para int parc','TIPO',4,'p_TIPO','gramatica2.py',346),
  ('TIPO -> text','TIPO',1,'p_TIPO','gramatica2.py',347),
  ('TIPO -> timestamp','TIPO',1,'p_TIPO','gramatica2.py',348),
  ('TIPO -> timestamp para int parc','TIPO',4,'p_TIPO','gramatica2.py',349),
  ('TIPO -> date','TIPO',1,'p_TIPO','gramatica2.py',350),
  ('TIPO -> time','TIPO',1,'p_TIPO','gramatica2.py',351),
  ('TIPO -> time para int parc','TIPO',4,'p_TIPO','gramatica2.py',352),
  ('TIPO -> interval','TIPO',1,'p_TIPO','gramatica2.py',353),
  ('TIPO -> interval para int parc','TIPO',4,'p_TIPO','gramatica2.py',354),
  ('TIPO -> interval FIELDS','TIPO',2,'p_TIPO','gramatica2.py',355),
  ('TIPO -> interval para int parc FIELDS','TIPO',5,'p_TIPO','gramatica2.py',356),
  ('TIPO -> boolean','TIPO',1,'p_TIPO','gramatica2.py',357),
  ('FIELDS -> year','FIELDS',1,'p_FIELDS','gramatica2.py',360),
  ('FIELDS -> month','FIELDS',1,'p_FIELDS','gramatica2.py',361),
  ('FIELDS -> day','FIELDS',1,'p_FIELDS','gramatica2.py',362),
  ('FIELDS -> hour','FIELDS',1,'p_FIELDS','gramatica2.py',363),
  ('FIELDS -> minute','FIELDS',1,'p_FIELDS','gramatica2.py',364),
  ('FIELDS -> second','FIELDS',1,'p_FIELDS','gramatica2.py',365),
  ('EXP -> EXP mas EXP','EXP',3,'p_EXP','gramatica2.py',368),
  ('EXP -> EXP menos EXP','EXP',3,'p_EXP','gramatica2.py',369),
  ('EXP -> EXP multiplicacion EXP','EXP',3,'p_EXP','gramatica2.py',370),
  ('EXP -> EXP division EXP','EXP',3,'p_EXP','gramatica2.py',371),
  ('EXP -> EXP modulo EXP','EXP',3,'p_EXP','gramatica2.py',372),
  ('EXP -> EXP elevado EXP','EXP',3,'p_EXP','gramatica2.py',373),
  ('EXP -> EXP and EXP','EXP',3,'p_EXP','gramatica2.py',374),
  ('EXP -> EXP or EXP','EXP',3,'p_EXP','gramatica2.py',375),
  ('EXP -> EXP mayor EXP','EXP',3,'p_EXP','gramatica2.py',376),
  ('EXP -> EXP menor EXP','EXP',3,'p_EXP','gramatica2.py',377),
  ('EXP -> EXP mayor_igual EXP','EXP',3,'p_EXP','gramatica2.py',378),
  ('EXP -> EXP menor_igual EXP','EXP',3,'p_EXP','gramatica2.py',379),
  ('EXP -> EXP igual EXP','EXP',3,'p_EXP','gramatica2.py',380),
  ('EXP -> EXP diferente1 EXP','EXP',3,'p_EXP','gramatica2.py',381),
  ('EXP -> EXP diferente2 EXP','EXP',3,'p_EXP','gramatica2.py',382),
  ('EXP -> EXP punto EXP','EXP',3,'p_EXP','gramatica2.py',383),
  ('EXP -> mas EXP','EXP',2,'p_EXP','gramatica2.py',384),
  ('EXP -> menos EXP','EXP',2,'p_EXP','gramatica2.py',385),
  ('EXP -> not EXP','EXP',2,'p_EXP','gramatica2.py',386),
  ('EXP -> para EXP parc','EXP',3,'p_EXP','gramatica2.py',387),
  ('EXP -> int','EXP',1,'p_EXP','gramatica2.py',388),
  ('EXP -> decimales','EXP',1,'p_EXP','gramatica2.py',389),
  ('EXP -> cadena','EXP',1,'p_EXP','gramatica2.py',390),
  ('EXP -> char_er','EXP',1,'p_EXP','gramatica2.py',391),
  ('EXP -> true','EXP',1,'p_EXP','gramatica2.py',392),
  ('EXP -> false','EXP',1,'p_EXP','gramatica2.py',393),
  ('EXP -> id','EXP',1,'p_EXP','gramatica2.py',394),
]
